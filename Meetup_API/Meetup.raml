#%RAML 0.8
title: Meetup
version: v3
baseUri: "https://api.meetup.com"
protocols: [HTTP]
schemas: 
    - 
        everywhereEventSeeds: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "container": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "urlname": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "created": {
                            "required": false,
                            "type": "integer"
                          },
                          "description": {
                            "required": false,
                            "type": "string"
                          },
                          "id": {
                            "required": false,
                            "type": "integer"
                          },
                          "local_time": {
                            "required": false,
                            "type": "integer"
                          },
                          "short_description": {
                            "required": false,
                            "type": "string"
                          },
                          "status": {
                            "required": false,
                            "type": "string"
                          },
                          "udf_{varname}": {
                            "required": false,
                            "type": "string"
                          },
                          "updated": {
                            "required": false,
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
        discussions: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "board": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "id": {
                          "required": false,
                          "type": "integer"
                        }
                      }
                    },
                    "body": {
                      "required": false,
                      "type": "string"
                    },
                    "created": {
                      "required": false,
                      "type": "integer"
                    },
                    "id": {
                      "required": false,
                      "type": "integer"
                    },
                    "last_post": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "created": {
                          "required": false,
                          "type": "integer"
                        },
                        "member": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "name": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "reply_count": {
                      "required": false,
                      "type": "integer"
                    },
                    "started_by": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "name": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "subject": {
                      "required": false,
                      "type": "string"
                    },
                    "updated": {
                      "required": false,
                      "type": "integer"
                    }
                  }
                }
        everywhereCommunity: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "city": {
                      "required": false,
                      "type": "string"
                    },
                    "container": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "id": {
                          "required": false,
                          "type": "integer"
                        },
                        "name": {
                          "required": false,
                          "type": "string"
                        },
                        "urlname": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "country": {
                      "required": false,
                      "type": "string"
                    },
                    "created": {
                      "required": false,
                      "type": "integer"
                    },
                    "id": {
                      "required": false,
                      "type": "integer"
                    },
                    "lat": {
                      "required": false,
                      "type": "number"
                    },
                    "lon": {
                      "required": false,
                      "type": "number"
                    },
                    "meetup_count": {
                      "required": false,
                      "type": "integer"
                    },
                    "meetup_url": {
                      "required": false,
                      "type": "string"
                    },
                    "name": {
                      "required": false,
                      "type": "string"
                    },
                    "past_meetup_count": {
                      "required": false,
                      "type": "integer"
                    },
                    "state": {
                      "required": false,
                      "type": "integer"
                    },
                    "udf_{varname}": {
                      "required": false,
                      "type": "string"
                    },
                    "updated": {
                      "required": false,
                      "type": "integer"
                    },
                    "urlname": {
                      "required": false,
                      "type": "string"
                    },
                    "zip": {
                      "required": false,
                      "type": "string"
                    }
                  }
                }
        discussion: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "body": {
                      "required": false,
                      "type": "string"
                    },
                    "created": {
                      "required": false,
                      "type": "integer"
                    },
                    "discussion": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "id": {
                          "required": false,
                          "type": "integer"
                        }
                      }
                    },
                    "id": {
                      "required": false,
                      "type": "integer"
                    },
                    "in_reply_to": {
                      "required": false,
                      "type": "integer"
                    },
                    "member": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "city": {
                          "required": false,
                          "type": "string"
                        },
                        "country": {
                          "required": false,
                          "type": "string"
                        },
                        "id": {
                          "required": false,
                          "type": "integer"
                        },
                        "name": {
                          "required": false,
                          "type": "string"
                        },
                        "photo": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "thumb": {
                              "required": false,
                              "type": "integer"
                            }
                          }
                        },
                        "state": {
                          "required": false,
                          "type": "integer"
                        }
                      }
                    },
                    "subject": {
                      "required": false,
                      "type": "string"
                    },
                    "updated": {
                      "required": false,
                      "type": "integer"
                    }
                  }
                }
        photos: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "caption": {
                            "required": false,
                            "type": "string"
                          },
                          "created": {
                            "required": false,
                            "type": "integer"
                          },
                          "highres_link": {
                            "required": false,
                            "type": "string"
                          },
                          "member": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "member_city": {
                                "required": false,
                                "type": "string"
                              },
                              "member_country": {
                                "required": false,
                                "type": "string"
                              },
                              "member_id": {
                                "required": false,
                                "type": "integer"
                              },
                              "member_state": {
                                "required": false,
                                "type": "string"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "member_photo": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "highres_link": {
                                "required": false,
                                "type": "string"
                              },
                              "photo_id": {
                                "required": false,
                                "type": "integer"
                              },
                              "photo_link": {
                                "required": false,
                                "type": "string"
                              },
                              "thumb_link": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "photo_album": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "event": {
                                "required": false,
                                "type": "object",
                                "properties": {
                                  "event_url": {
                                    "required": false,
                                    "type": "string"
                                  },
                                  "id": {
                                    "required": false,
                                    "type": "integer"
                                  },
                                  "name": {
                                    "required": false,
                                    "type": "string"
                                  },
                                  "time": {
                                    "required": false,
                                    "type": "integer"
                                  }
                                }
                              },
                              "event_id": {
                                "required": false,
                                "type": "integer"
                              },
                              "group_id": {
                                "required": false,
                                "type": "integer"
                              },
                              "photo_album_id": {
                                "required": false,
                                "type": "integer"
                              }
                            }
                          },
                          "photo_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "photo_link": {
                            "required": false,
                            "type": "string"
                          },
                          "self": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "actions": {
                                "required": false,
                                "type": "string"
                              },
                              "role": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "site_link": {
                            "required": false,
                            "type": "string"
                          },
                          "thumb_link": {
                            "required": false,
                            "type": "string"
                          },
                          "updated": {
                            "required": false,
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
        rsvp: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "answers": {
                      "required": false,
                      "type": "string"
                    },
                    "comments": {
                      "required": false,
                      "type": "string"
                    },
                    "created": {
                      "required": false,
                      "type": "integer"
                    },
                    "event": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "event_url": {
                          "required": false,
                          "type": "string"
                        },
                        "id": {
                          "required": false,
                          "type": "integer"
                        },
                        "name": {
                          "required": false,
                          "type": "string"
                        },
                        "time": {
                          "required": false,
                          "type": "integer"
                        }
                      }
                    },
                    "group": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "group_lat": {
                          "required": false,
                          "type": "string"
                        },
                        "group_lon": {
                          "required": false,
                          "type": "string"
                        },
                        "id": {
                          "required": false,
                          "type": "integer"
                        },
                        "join_mode": {
                          "required": false,
                          "type": "string"
                        },
                        "name": {
                          "required": false,
                          "type": "string"
                        },
                        "urlname": {
                          "required": false,
                          "type": "string"
                        },
                        "who": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "guests": {
                      "required": false,
                      "type": "string"
                    },
                    "host": {
                      "required": false,
                      "type": "string"
                    },
                    "member": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "bio": {
                          "required": false,
                          "type": "string"
                        },
                        "member_city": {
                          "required": false,
                          "type": "string"
                        },
                        "member_country": {
                          "required": false,
                          "type": "string"
                        },
                        "member_id": {
                          "required": false,
                          "type": "integer"
                        },
                        "member_state": {
                          "required": false,
                          "type": "string"
                        },
                        "name": {
                          "required": false,
                          "type": "string"
                        },
                        "other_services": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "[service-name]": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "member_photo": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "highres_link": {
                          "required": false,
                          "type": "string"
                        },
                        "photo_id": {
                          "required": false,
                          "type": "integer"
                        },
                        "photo_link": {
                          "required": false,
                          "type": "string"
                        },
                        "thumb_link": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "mtime": {
                      "required": false,
                      "type": "integer"
                    },
                    "pay_status": {
                      "required": false,
                      "type": "string"
                    },
                    "response": {
                      "required": false,
                      "type": "string"
                    },
                    "rsvp_id": {
                      "required": false,
                      "type": "integer"
                    },
                    "venue": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "address_1": {
                          "required": false,
                          "type": "string"
                        },
                        "address_2": {
                          "required": false,
                          "type": "string"
                        },
                        "address_3": {
                          "required": false,
                          "type": "string"
                        },
                        "city": {
                          "required": false,
                          "type": "string"
                        },
                        "state": {
                          "required": false,
                          "type": "integer"
                        },
                        "country": {
                          "required": false,
                          "type": "string"
                        },
                        "id": {
                          "required": false,
                          "type": "integer"
                        },
                        "lat": {
                          "required": false,
                          "type": "number"
                        },
                        "lon": {
                          "required": false,
                          "type": "number"
                        },
                        "name": {
                          "required": false,
                          "type": "string"
                        },
                        "phone": {
                          "required": false,
                          "type": "integer"
                        },
                        "repinned": {
                          "required": false,
                          "type": "string"
                        },
                        "zip": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "watching": {
                      "required": false,
                      "type": "string"
                    }
                  }
                }
        everywhereEvent: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "address1": {
                      "required": false,
                      "type": "string"
                    },
                    "city": {
                      "required": false,
                      "type": "string"
                    },
                    "community": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "id": {
                          "required": false,
                          "type": "integer"
                        },
                        "name": {
                          "required": false,
                          "type": "string"
                        },
                        "urlname": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "container": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "id": {
                          "required": false,
                          "type": "integer"
                        },
                        "name": {
                          "required": false,
                          "type": "string"
                        },
                        "urlname": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "country": {
                      "required": false,
                      "type": "string"
                    },
                    "created": {
                      "required": false,
                      "type": "integer"
                    },
                    "description": {
                      "required": false,
                      "type": "string"
                    },
                    "helpers": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "member_city": {
                          "required": false,
                          "type": "string"
                        },
                        "member_country": {
                          "required": false,
                          "type": "string"
                        },
                        "member_id": {
                          "required": false,
                          "type": "integer"
                        },
                        "member_state": {
                          "required": false,
                          "type": "string"
                        },
                        "name": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "id": {
                      "required": false,
                      "type": "integer"
                    },
                    "lat": {
                      "required": false,
                      "type": "number"
                    },
                    "lon": {
                      "required": false,
                      "type": "number"
                    },
                    "link": {
                      "required": false,
                      "type": "string"
                    },
                    "meetup_url": {
                      "required": false,
                      "type": "string"
                    },
                    "rsvp_count": {
                      "required": false,
                      "type": "integer"
                    },
                    "short_description": {
                      "required": false,
                      "type": "string"
                    },
                    "state": {
                      "required": false,
                      "type": "integer"
                    },
                    "status": {
                      "required": false,
                      "type": "string"
                    },
                    "time": {
                      "required": false,
                      "type": "integer"
                    },
                    "udf_{varname}": {
                      "required": false,
                      "type": "string"
                    },
                    "updated": {
                      "required": false,
                      "type": "integer"
                    },
                    "venue_name": {
                      "required": false,
                      "type": "string"
                    },
                    "zip": {
                      "required": false,
                      "type": "string"
                    }
                  }
                }
        deprecatedCheckin: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "checker": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "member_city": {
                          "required": false,
                          "type": "string"
                        },
                        "member_country": {
                          "required": false,
                          "type": "string"
                        },
                        "member_id": {
                          "required": false,
                          "type": "integer"
                        },
                        "member_state": {
                          "required": false,
                          "type": "string"
                        },
                        "name": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "checkin_id": {
                      "required": false,
                      "type": "integer"
                    },
                    "comment": {
                      "required": false,
                      "type": "string"
                    },
                    "event_id": {
                      "required": false,
                      "type": "integer"
                    },
                    "group_id": {
                      "required": false,
                      "type": "integer"
                    },
                    "lat": {
                      "required": false,
                      "type": "number"
                    },
                    "lon": {
                      "required": false,
                      "type": "number"
                    },
                    "member_id": {
                      "required": false,
                      "type": "integer"
                    },
                    "member_name": {
                      "required": false,
                      "type": "string"
                    },
                    "time": {
                      "required": false,
                      "type": "integer"
                    }
                  }
                }
        deprecatedPhotos: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "album_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "albumtitle": {
                            "required": false,
                            "type": "string"
                          },
                          "captions": {
                            "required": false,
                            "type": "string"
                          },
                          "created": {
                            "required": false,
                            "type": "integer"
                          },
                          "descr": {
                            "required": false,
                            "type": "integer"
                          },
                          "link": {
                            "required": false,
                            "type": "string"
                          },
                          "member_url": {
                            "required": false,
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
        everywhereCommunities: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "city": {
                            "required": false,
                            "type": "string"
                          },
                          "container": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "urlname": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "country": {
                            "required": false,
                            "type": "string"
                          },
                          "created": {
                            "required": false,
                            "type": "integer"
                          },
                          "id": {
                            "required": false,
                            "type": "integer"
                          },
                          "lat": {
                            "required": false,
                            "type": "number"
                          },
                          "lon": {
                            "required": false,
                            "type": "number"
                          },
                          "meetup_count": {
                            "required": false,
                            "type": "integer"
                          },
                          "meetup_url": {
                            "required": false,
                            "type": "string"
                          },
                          "name": {
                            "required": false,
                            "type": "string"
                          },
                          "past_meetup_count": {
                            "required": false,
                            "type": "integer"
                          },
                          "state": {
                            "required": false,
                            "type": "integer"
                          },
                          "udf_{varname}": {
                            "required": false,
                            "type": "string"
                          },
                          "updated": {
                            "required": false,
                            "type": "integer"
                          },
                          "urlname": {
                            "required": false,
                            "type": "string"
                          },
                          "zip": {
                            "required": false,
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
        members: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "bio": {
                            "required": false,
                            "type": "string"
                          },
                          "birthday": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "day": {
                                "required": false,
                                "type": "string"
                              },
                              "month": {
                                "required": false,
                                "type": "integer"
                              },
                              "year": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "country": {
                            "required": false,
                            "type": "string"
                          },
                          "city": {
                            "required": false,
                            "type": "string"
                          },
                          "state": {
                            "required": false,
                            "type": "integer"
                          },
                          "email": {
                            "required": false,
                            "type": "integer"
                          },
                          "gender": {
                            "required": false,
                            "type": "string"
                          },
                          "hometown": {
                            "required": false,
                            "type": "string"
                          },
                          "id": {
                            "required": false,
                            "type": "integer"
                          },
                          "joined": {
                            "required": false,
                            "type": "integer"
                          },
                          "lang": {
                            "required": false,
                            "type": "string"
                          },
                          "lat": {
                            "required": false,
                            "type": "number"
                          },
                          "lon": {
                            "required": false,
                            "type": "number"
                          },
                          "link": {
                            "required": false,
                            "type": "string"
                          },
                          "membership_count": {
                            "required": false,
                            "type": "integer"
                          },
                          "messagable": {
                            "required": false,
                            "type": "string"
                          },
                          "messaging_pref": {
                            "required": false,
                            "type": "string"
                          },
                          "name": {
                            "required": false,
                            "type": "string"
                          },
                          "other_services": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "[service-name]": {
                                "required": false,
                                "type": "object",
                                "properties": {
                                  "identifier": {
                                    "required": false,
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "photo": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "highres_link": {
                                "required": false,
                                "type": "string"
                              },
                              "photo_id": {
                                "required": false,
                                "type": "integer"
                              },
                              "photo_link": {
                                "required": false,
                                "type": "string"
                              },
                              "thumb_link": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "photo_url": {
                            "required": false,
                            "type": "string"
                          },
                          "photos": {
                            "required": false,
                            "type": "string"
                          },
                          "privacy": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "bio": {
                                "required": false,
                                "type": "string"
                              },
                              "facebook": {
                                "required": false,
                                "type": "string"
                              },
                              "groups": {
                                "required": false,
                                "type": "string"
                              },
                              "photos": {
                                "required": false,
                                "type": "string"
                              },
                              "topics": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "reachable": {
                            "required": false,
                            "type": "string"
                          },
                          "self": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "common": {
                                "required": false,
                                "type": "object",
                                "properties": {
                                  "friends": {
                                    "required": false,
                                    "type": "string"
                                  },
                                  "groups": {
                                    "required": false,
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "topics": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "urlkey": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "visited": {
                            "required": false,
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
        dashboard: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "last_event": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "announced": {
                          "required": false,
                          "type": "string"
                        },
                        "comment_count": {
                          "required": false,
                          "type": "integer"
                        },
                        "created": {
                          "required": false,
                          "type": "integer"
                        },
                        "description": {
                          "required": false,
                          "type": "string"
                        },
                        "distance": {
                          "required": false,
                          "type": "number"
                        },
                        "duration": {
                          "required": false,
                          "type": "integer"
                        },
                        "email_reminders": {
                          "required": false,
                          "type": "string"
                        },
                        "event_hosts": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "member_id": {
                              "required": false,
                              "type": "integer"
                            },
                            "member_name": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        },
                        "event_url": {
                          "required": false,
                          "type": "string"
                        },
                        "featured": {
                          "required": false,
                          "type": "string"
                        },
                        "fee": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "accepts": {
                              "required": false,
                              "type": "string"
                            },
                            "amount": {
                              "required": false,
                              "type": "string"
                            },
                            "currency": {
                              "required": false,
                              "type": "string"
                            },
                            "description": {
                              "required": false,
                              "type": "string"
                            },
                            "label": {
                              "required": false,
                              "type": "integer"
                            },
                            "required": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        },
                        "group": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "category": {
                              "required": false,
                              "type": "string"
                            },
                            "group_lat": {
                              "required": false,
                              "type": "string"
                            },
                            "group_lon": {
                              "required": false,
                              "type": "string"
                            },
                            "group_photo": {
                              "required": false,
                              "type": "string"
                            },
                            "id": {
                              "required": false,
                              "type": "integer"
                            },
                            "join_mode": {
                              "required": false,
                              "type": "string"
                            },
                            "membership_dues": {
                              "required": false,
                              "type": "string"
                            },
                            "name": {
                              "required": false,
                              "type": "string"
                            },
                            "topics": {
                              "required": false,
                              "type": "string"
                            },
                            "urlname": {
                              "required": false,
                              "type": "string"
                            },
                            "who": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        },
                        "headcount": {
                          "required": false,
                          "type": "string"
                        },
                        "how_to_find_us": {
                          "required": false,
                          "type": "string"
                        },
                        "id": {
                          "required": false,
                          "type": "integer"
                        },
                        "is_simplehtml": {
                          "required": false,
                          "type": "string"
                        },
                        "maybe_rsvp_count": {
                          "required": false,
                          "type": "integer"
                        },
                        "name": {
                          "required": false,
                          "type": "string"
                        },
                        "photo_album_id": {
                          "required": false,
                          "type": "integer"
                        },
                        "photo_count": {
                          "required": false,
                          "type": "integer"
                        },
                        "photo_url": {
                          "required": false,
                          "type": "string"
                        },
                        "publish_status": {
                          "required": false,
                          "type": "string"
                        },
                        "rating": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "average": {
                              "required": false,
                              "type": "string"
                            },
                            "count": {
                              "required": false,
                              "type": "integer"
                            }
                          }
                        },
                        "rsvp_alerts": {
                          "required": false,
                          "type": "string"
                        },
                        "rsvp_limit": {
                          "required": false,
                          "type": "string"
                        },
                        "rsvp_rules": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "close_time": {
                              "required": false,
                              "type": "string"
                            },
                            "closed": {
                              "required": false,
                              "type": "string"
                            },
                            "guest_limit": {
                              "required": false,
                              "type": "string"
                            },
                            "open_time": {
                              "required": false,
                              "type": "string"
                            },
                            "refund_policy": {
                              "required": false,
                              "type": "string"
                            },
                            "waitlisting": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        },
                        "rsvpable": {
                          "required": false,
                          "type": "string"
                        },
                        "self": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "actions": {
                              "required": false,
                              "type": "string"
                            },
                            "checked_in": {
                              "required": false,
                              "type": "string"
                            },
                            "pay_status": {
                              "required": false,
                              "type": "string"
                            },
                            "rated": {
                              "required": false,
                              "type": "integer"
                            },
                            "role": {
                              "required": false,
                              "type": "string"
                            },
                            "rsvp": {
                              "required": false,
                              "type": "string"
                            },
                            "watching": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        },
                        "short_link": {
                          "required": false,
                          "type": "string"
                        },
                        "simple_html_description": {
                          "required": false,
                          "type": "string"
                        },
                        "status": {
                          "required": false,
                          "type": "string"
                        },
                        "survey_questions": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "id": {
                              "required": false,
                              "type": "integer"
                            },
                            "question": {
                              "required": false,
                              "type": "string"
                            },
                            "required": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        },
                        "time": {
                          "required": false,
                          "type": "integer"
                        },
                        "timezone": {
                          "required": false,
                          "type": "string"
                        },
                        "trending_rank": {
                          "required": false,
                          "type": "string"
                        },
                        "updated": {
                          "required": false,
                          "type": "integer"
                        },
                        "utc_offset": {
                          "required": false,
                          "type": "integer"
                        },
                        "venue": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "address_1": {
                              "required": false,
                              "type": "string"
                            },
                            "address_2": {
                              "required": false,
                              "type": "string"
                            },
                            "address_3": {
                              "required": false,
                              "type": "string"
                            },
                            "city": {
                              "required": false,
                              "type": "string"
                            },
                            "state": {
                              "required": false,
                              "type": "integer"
                            },
                            "country": {
                              "required": false,
                              "type": "string"
                            },
                            "id": {
                              "required": false,
                              "type": "integer"
                            },
                            "lat": {
                              "required": false,
                              "type": "number"
                            },
                            "lon": {
                              "required": false,
                              "type": "number"
                            },
                            "name": {
                              "required": false,
                              "type": "string"
                            },
                            "phone": {
                              "required": false,
                              "type": "integer"
                            },
                            "repinned": {
                              "required": false,
                              "type": "string"
                            },
                            "zip": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        },
                        "venue_visibility": {
                          "required": false,
                          "type": "string"
                        },
                        "visibility": {
                          "required": false,
                          "type": "string"
                        },
                        "why": {
                          "required": false,
                          "type": "string"
                        },
                        "yes_rsvp_count": {
                          "required": false,
                          "type": "integer"
                        }
                      }
                    },
                    "next_event": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "announced": {
                          "required": false,
                          "type": "string"
                        },
                        "comment_count": {
                          "required": false,
                          "type": "integer"
                        },
                        "created": {
                          "required": false,
                          "type": "integer"
                        },
                        "description": {
                          "required": false,
                          "type": "string"
                        },
                        "distance": {
                          "required": false,
                          "type": "number"
                        },
                        "duration": {
                          "required": false,
                          "type": "integer"
                        },
                        "email_reminders": {
                          "required": false,
                          "type": "string"
                        },
                        "event_hosts": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "member_id": {
                              "required": false,
                              "type": "integer"
                            },
                            "member_name": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        },
                        "event_url": {
                          "required": false,
                          "type": "string"
                        },
                        "featured": {
                          "required": false,
                          "type": "string"
                        },
                        "fee": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "accepts": {
                              "required": false,
                              "type": "string"
                            },
                            "amount": {
                              "required": false,
                              "type": "string"
                            },
                            "currency": {
                              "required": false,
                              "type": "string"
                            },
                            "description": {
                              "required": false,
                              "type": "string"
                            },
                            "label": {
                              "required": false,
                              "type": "integer"
                            },
                            "required": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        },
                        "group": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "category": {
                              "required": false,
                              "type": "string"
                            },
                            "group_lat": {
                              "required": false,
                              "type": "string"
                            },
                            "group_lon": {
                              "required": false,
                              "type": "string"
                            },
                            "group_photo": {
                              "required": false,
                              "type": "string"
                            },
                            "id": {
                              "required": false,
                              "type": "integer"
                            },
                            "join_mode": {
                              "required": false,
                              "type": "string"
                            },
                            "membership_dues": {
                              "required": false,
                              "type": "string"
                            },
                            "name": {
                              "required": false,
                              "type": "string"
                            },
                            "topics": {
                              "required": false,
                              "type": "string"
                            },
                            "urlname": {
                              "required": false,
                              "type": "string"
                            },
                            "who": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        },
                        "headcount": {
                          "required": false,
                          "type": "string"
                        },
                        "how_to_find_us": {
                          "required": false,
                          "type": "string"
                        },
                        "id": {
                          "required": false,
                          "type": "integer"
                        },
                        "is_simplehtml": {
                          "required": false,
                          "type": "string"
                        },
                        "maybe_rsvp_count": {
                          "required": false,
                          "type": "integer"
                        },
                        "name": {
                          "required": false,
                          "type": "string"
                        },
                        "photo_album_id": {
                          "required": false,
                          "type": "integer"
                        },
                        "photo_count": {
                          "required": false,
                          "type": "integer"
                        },
                        "photo_url": {
                          "required": false,
                          "type": "string"
                        },
                        "publish_status": {
                          "required": false,
                          "type": "string"
                        },
                        "rating": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "average": {
                              "required": false,
                              "type": "string"
                            },
                            "count": {
                              "required": false,
                              "type": "integer"
                            }
                          }
                        },
                        "rsvp_alerts": {
                          "required": false,
                          "type": "string"
                        },
                        "rsvp_limit": {
                          "required": false,
                          "type": "string"
                        },
                        "rsvp_rules": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "close_time": {
                              "required": false,
                              "type": "string"
                            },
                            "closed": {
                              "required": false,
                              "type": "string"
                            },
                            "guest_limit": {
                              "required": false,
                              "type": "string"
                            },
                            "open_time": {
                              "required": false,
                              "type": "string"
                            },
                            "refund_policy": {
                              "required": false,
                              "type": "string"
                            },
                            "waitlisting": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        },
                        "rsvpable": {
                          "required": false,
                          "type": "string"
                        },
                        "self": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "actions": {
                              "required": false,
                              "type": "string"
                            },
                            "checked_in": {
                              "required": false,
                              "type": "string"
                            },
                            "pay_status": {
                              "required": false,
                              "type": "string"
                            },
                            "rated": {
                              "required": false,
                              "type": "integer"
                            },
                            "role": {
                              "required": false,
                              "type": "string"
                            },
                            "rsvp": {
                              "required": false,
                              "type": "string"
                            },
                            "watching": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        },
                        "short_link": {
                          "required": false,
                          "type": "string"
                        },
                        "simple_html_description": {
                          "required": false,
                          "type": "string"
                        },
                        "status": {
                          "required": false,
                          "type": "string"
                        },
                        "survey_questions": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "id": {
                              "required": false,
                              "type": "integer"
                            },
                            "question": {
                              "required": false,
                              "type": "string"
                            },
                            "required": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        },
                        "time": {
                          "required": false,
                          "type": "integer"
                        },
                        "timezone": {
                          "required": false,
                          "type": "string"
                        },
                        "trending_rank": {
                          "required": false,
                          "type": "string"
                        },
                        "updated": {
                          "required": false,
                          "type": "integer"
                        },
                        "utc_offset": {
                          "required": false,
                          "type": "integer"
                        },
                        "venue": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "address_1": {
                              "required": false,
                              "type": "string"
                            },
                            "address_2": {
                              "required": false,
                              "type": "string"
                            },
                            "address_3": {
                              "required": false,
                              "type": "string"
                            },
                            "city": {
                              "required": false,
                              "type": "string"
                            },
                            "state": {
                              "required": false,
                              "type": "integer"
                            },
                            "country": {
                              "required": false,
                              "type": "string"
                            },
                            "id": {
                              "required": false,
                              "type": "integer"
                            },
                            "lat": {
                              "required": false,
                              "type": "number"
                            },
                            "lon": {
                              "required": false,
                              "type": "number"
                            },
                            "name": {
                              "required": false,
                              "type": "string"
                            },
                            "phone": {
                              "required": false,
                              "type": "integer"
                            },
                            "repinned": {
                              "required": false,
                              "type": "string"
                            },
                            "zip": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        },
                        "venue_visibility": {
                          "required": false,
                          "type": "string"
                        },
                        "visibility": {
                          "required": false,
                          "type": "string"
                        },
                        "why": {
                          "required": false,
                          "type": "string"
                        },
                        "yes_rsvp_count": {
                          "required": false,
                          "type": "integer"
                        }
                      }
                    },
                    "ongoing_event": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "announced": {
                          "required": false,
                          "type": "string"
                        },
                        "comment_count": {
                          "required": false,
                          "type": "integer"
                        },
                        "created": {
                          "required": false,
                          "type": "integer"
                        },
                        "description": {
                          "required": false,
                          "type": "string"
                        },
                        "distance": {
                          "required": false,
                          "type": "number"
                        },
                        "duration": {
                          "required": false,
                          "type": "integer"
                        },
                        "email_reminders": {
                          "required": false,
                          "type": "string"
                        },
                        "event_hosts": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "member_id": {
                              "required": false,
                              "type": "integer"
                            },
                            "member_name": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        },
                        "event_url": {
                          "required": false,
                          "type": "string"
                        },
                        "featured": {
                          "required": false,
                          "type": "string"
                        },
                        "fee": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "accepts": {
                              "required": false,
                              "type": "string"
                            },
                            "amount": {
                              "required": false,
                              "type": "string"
                            },
                            "currency": {
                              "required": false,
                              "type": "string"
                            },
                            "description": {
                              "required": false,
                              "type": "string"
                            },
                            "label": {
                              "required": false,
                              "type": "integer"
                            },
                            "required": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        },
                        "group": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "category": {
                              "required": false,
                              "type": "string"
                            },
                            "group_lat": {
                              "required": false,
                              "type": "string"
                            },
                            "group_lon": {
                              "required": false,
                              "type": "string"
                            },
                            "group_photo": {
                              "required": false,
                              "type": "string"
                            },
                            "id": {
                              "required": false,
                              "type": "integer"
                            },
                            "join_mode": {
                              "required": false,
                              "type": "string"
                            },
                            "membership_dues": {
                              "required": false,
                              "type": "string"
                            },
                            "name": {
                              "required": false,
                              "type": "string"
                            },
                            "topics": {
                              "required": false,
                              "type": "string"
                            },
                            "urlname": {
                              "required": false,
                              "type": "string"
                            },
                            "who": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        },
                        "headcount": {
                          "required": false,
                          "type": "string"
                        },
                        "how_to_find_us": {
                          "required": false,
                          "type": "string"
                        },
                        "id": {
                          "required": false,
                          "type": "integer"
                        },
                        "is_simplehtml": {
                          "required": false,
                          "type": "string"
                        },
                        "maybe_rsvp_count": {
                          "required": false,
                          "type": "integer"
                        },
                        "name": {
                          "required": false,
                          "type": "string"
                        },
                        "photo_album_id": {
                          "required": false,
                          "type": "integer"
                        },
                        "photo_count": {
                          "required": false,
                          "type": "integer"
                        },
                        "photo_url": {
                          "required": false,
                          "type": "string"
                        },
                        "publish_status": {
                          "required": false,
                          "type": "string"
                        },
                        "rating": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "average": {
                              "required": false,
                              "type": "string"
                            },
                            "count": {
                              "required": false,
                              "type": "integer"
                            }
                          }
                        },
                        "rsvp_alerts": {
                          "required": false,
                          "type": "string"
                        },
                        "rsvp_limit": {
                          "required": false,
                          "type": "string"
                        },
                        "rsvp_rules": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "close_time": {
                              "required": false,
                              "type": "string"
                            },
                            "closed": {
                              "required": false,
                              "type": "string"
                            },
                            "guest_limit": {
                              "required": false,
                              "type": "string"
                            },
                            "open_time": {
                              "required": false,
                              "type": "string"
                            },
                            "refund_policy": {
                              "required": false,
                              "type": "string"
                            },
                            "waitlisting": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        },
                        "rsvpable": {
                          "required": false,
                          "type": "string"
                        },
                        "self": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "actions": {
                              "required": false,
                              "type": "string"
                            },
                            "checked_in": {
                              "required": false,
                              "type": "string"
                            },
                            "pay_status": {
                              "required": false,
                              "type": "string"
                            },
                            "rated": {
                              "required": false,
                              "type": "integer"
                            },
                            "role": {
                              "required": false,
                              "type": "string"
                            },
                            "rsvp": {
                              "required": false,
                              "type": "string"
                            },
                            "watching": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        },
                        "short_link": {
                          "required": false,
                          "type": "string"
                        },
                        "simple_html_description": {
                          "required": false,
                          "type": "string"
                        },
                        "status": {
                          "required": false,
                          "type": "string"
                        },
                        "survey_questions": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "id": {
                              "required": false,
                              "type": "integer"
                            },
                            "question": {
                              "required": false,
                              "type": "string"
                            },
                            "required": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        },
                        "time": {
                          "required": false,
                          "type": "integer"
                        },
                        "timezone": {
                          "required": false,
                          "type": "string"
                        },
                        "trending_rank": {
                          "required": false,
                          "type": "string"
                        },
                        "updated": {
                          "required": false,
                          "type": "integer"
                        },
                        "utc_offset": {
                          "required": false,
                          "type": "integer"
                        },
                        "venue": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "address_1": {
                              "required": false,
                              "type": "string"
                            },
                            "address_2": {
                              "required": false,
                              "type": "string"
                            },
                            "address_3": {
                              "required": false,
                              "type": "string"
                            },
                            "city": {
                              "required": false,
                              "type": "string"
                            },
                            "state": {
                              "required": false,
                              "type": "integer"
                            },
                            "country": {
                              "required": false,
                              "type": "string"
                            },
                            "id": {
                              "required": false,
                              "type": "integer"
                            },
                            "lat": {
                              "required": false,
                              "type": "number"
                            },
                            "lon": {
                              "required": false,
                              "type": "number"
                            },
                            "name": {
                              "required": false,
                              "type": "string"
                            },
                            "phone": {
                              "required": false,
                              "type": "integer"
                            },
                            "repinned": {
                              "required": false,
                              "type": "string"
                            },
                            "zip": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        },
                        "venue_visibility": {
                          "required": false,
                          "type": "string"
                        },
                        "visibility": {
                          "required": false,
                          "type": "string"
                        },
                        "why": {
                          "required": false,
                          "type": "string"
                        },
                        "yes_rsvp_count": {
                          "required": false,
                          "type": "integer"
                        }
                      }
                    },
                    "stats": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "city_top_groups": {
                          "required": false,
                          "type": "string"
                        },
                        "fb_friend_events": {
                          "required": false,
                          "type": "string"
                        },
                        "global_top_groups": {
                          "required": false,
                          "type": "string"
                        },
                        "memberships": {
                          "required": false,
                          "type": "string"
                        },
                        "nearby_events": {
                          "required": false,
                          "type": "string"
                        },
                        "upcoming_events": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    }
                  }
                }
        events: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "announced": {
                            "required": false,
                            "type": "string"
                          },
                          "comment_count": {
                            "required": false,
                            "type": "integer"
                          },
                          "created": {
                            "required": false,
                            "type": "integer"
                          },
                          "description": {
                            "required": false,
                            "type": "string"
                          },
                          "distance": {
                            "required": false,
                            "type": "number"
                          },
                          "duration": {
                            "required": false,
                            "type": "integer"
                          },
                          "email_reminders": {
                            "required": false,
                            "type": "string"
                          },
                          "event_hosts": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "member_id": {
                                "required": false,
                                "type": "integer"
                              },
                              "member_name": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "event_url": {
                            "required": false,
                            "type": "string"
                          },
                          "featured": {
                            "required": false,
                            "type": "string"
                          },
                          "fee": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "accepts": {
                                "required": false,
                                "type": "string"
                              },
                              "amount": {
                                "required": false,
                                "type": "string"
                              },
                              "currency": {
                                "required": false,
                                "type": "string"
                              },
                              "description": {
                                "required": false,
                                "type": "string"
                              },
                              "label": {
                                "required": false,
                                "type": "integer"
                              },
                              "required": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "group": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "category": {
                                "required": false,
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "required": false,
                                    "type": "integer"
                                  },
                                  "name": {
                                    "required": false,
                                    "type": "string"
                                  },
                                  "shortname": {
                                    "required": false,
                                    "type": "string"
                                  }
                                }
                              },
                              "group_lat": {
                                "required": false,
                                "type": "string"
                              },
                              "group_lon": {
                                "required": false,
                                "type": "string"
                              },
                              "group_photo": {
                                "required": false,
                                "type": "object",
                                "properties": {
                                  "highres_link": {
                                    "required": false,
                                    "type": "string"
                                  },
                                  "photo_id": {
                                    "required": false,
                                    "type": "integer"
                                  },
                                  "photo_link": {
                                    "required": false,
                                    "type": "string"
                                  },
                                  "thumb_link": {
                                    "required": false,
                                    "type": "string"
                                  }
                                }
                              },
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "join_mode": {
                                "required": false,
                                "type": "string"
                              },
                              "membership_dues": {
                                "required": false,
                                "type": "object",
                                "properties": {
                                  "currency": {
                                    "required": false,
                                    "type": "string"
                                  },
                                  "fee": {
                                    "required": false,
                                    "type": "string"
                                  },
                                  "fee_desc": {
                                    "required": false,
                                    "type": "string"
                                  },
                                  "methods": {
                                    "required": false,
                                    "type": "string"
                                  },
                                  "refund_policy": {
                                    "required": false,
                                    "type": "string"
                                  },
                                  "required": {
                                    "required": false,
                                    "type": "string"
                                  }
                                }
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "topics": {
                                "required": false,
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "required": false,
                                    "type": "integer"
                                  },
                                  "name": {
                                    "required": false,
                                    "type": "string"
                                  },
                                  "urlkey": {
                                    "required": false,
                                    "type": "string"
                                  }
                                }
                              },
                              "urlname": {
                                "required": false,
                                "type": "string"
                              },
                              "who": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "headcount": {
                            "required": false,
                            "type": "string"
                          },
                          "how_to_find_us": {
                            "required": false,
                            "type": "string"
                          },
                          "id": {
                            "required": false,
                            "type": "integer"
                          },
                          "is_simplehtml": {
                            "required": false,
                            "type": "string"
                          },
                          "maybe_rsvp_count": {
                            "required": false,
                            "type": "integer"
                          },
                          "name": {
                            "required": false,
                            "type": "string"
                          },
                          "photo_album_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "photo_count": {
                            "required": false,
                            "type": "integer"
                          },
                          "photo_url": {
                            "required": false,
                            "type": "string"
                          },
                          "publish_status": {
                            "required": false,
                            "type": "string"
                          },
                          "rating": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "average": {
                                "required": false,
                                "type": "string"
                              },
                              "count": {
                                "required": false,
                                "type": "integer"
                              }
                            }
                          },
                          "rsvp_alerts": {
                            "required": false,
                            "type": "string"
                          },
                          "rsvp_limit": {
                            "required": false,
                            "type": "string"
                          },
                          "rsvp_rules": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "close_time": {
                                "required": false,
                                "type": "string"
                              },
                              "closed": {
                                "required": false,
                                "type": "string"
                              },
                              "guest_limit": {
                                "required": false,
                                "type": "string"
                              },
                              "open_time": {
                                "required": false,
                                "type": "string"
                              },
                              "refund_policy": {
                                "required": false,
                                "type": "object",
                                "properties": {
                                  "days": {
                                    "required": false,
                                    "type": "string"
                                  },
                                  "notes": {
                                    "required": false,
                                    "type": "integer"
                                  },
                                  "policies": {
                                    "required": false,
                                    "type": "string"
                                  }
                                }
                              },
                              "waitlisting": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "rsvpable": {
                            "required": false,
                            "type": "string"
                          },
                          "self": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "actions": {
                                "required": false,
                                "type": "string"
                              },
                              "checked_in": {
                                "required": false,
                                "type": "string"
                              },
                              "pay_status": {
                                "required": false,
                                "type": "string"
                              },
                              "rated": {
                                "required": false,
                                "type": "integer"
                              },
                              "role": {
                                "required": false,
                                "type": "string"
                              },
                              "rsvp": {
                                "required": false,
                                "type": "object",
                                "properties": {
                                  "answers": {
                                    "required": false,
                                    "type": "string"
                                  },
                                  "guests": {
                                    "required": false,
                                    "type": "string"
                                  },
                                  "response": {
                                    "required": false,
                                    "type": "string"
                                  }
                                }
                              },
                              "watching": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "short_link": {
                            "required": false,
                            "type": "string"
                          },
                          "simple_html_description": {
                            "required": false,
                            "type": "string"
                          },
                          "status": {
                            "required": false,
                            "type": "string"
                          },
                          "survey_questions": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "question": {
                                "required": false,
                                "type": "string"
                              },
                              "required": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "time": {
                            "required": false,
                            "type": "integer"
                          },
                          "timezone": {
                            "required": false,
                            "type": "string"
                          },
                          "trending_rank": {
                            "required": false,
                            "type": "string"
                          },
                          "updated": {
                            "required": false,
                            "type": "integer"
                          },
                          "utc_offset": {
                            "required": false,
                            "type": "integer"
                          },
                          "venue": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "address_1": {
                                "required": false,
                                "type": "string"
                              },
                              "address_2": {
                                "required": false,
                                "type": "string"
                              },
                              "address_3": {
                                "required": false,
                                "type": "string"
                              },
                              "city": {
                                "required": false,
                                "type": "string"
                              },
                              "state": {
                                "required": false,
                                "type": "integer"
                              },
                              "country": {
                                "required": false,
                                "type": "string"
                              },
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "lat": {
                                "required": false,
                                "type": "number"
                              },
                              "lon": {
                                "required": false,
                                "type": "number"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "phone": {
                                "required": false,
                                "type": "integer"
                              },
                              "repinned": {
                                "required": false,
                                "type": "string"
                              },
                              "zip": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "venue_visibility": {
                            "required": false,
                            "type": "string"
                          },
                          "visibility": {
                            "required": false,
                            "type": "string"
                          },
                          "why": {
                            "required": false,
                            "type": "string"
                          },
                          "yes_rsvp_count": {
                            "required": false,
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
        group: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "category": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "id": {
                          "required": false,
                          "type": "integer"
                        },
                        "name": {
                          "required": false,
                          "type": "string"
                        },
                        "shortname": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "city": {
                      "required": false,
                      "type": "string"
                    },
                    "country": {
                      "required": false,
                      "type": "string"
                    },
                    "created": {
                      "required": false,
                      "type": "integer"
                    },
                    "description": {
                      "required": false,
                      "type": "string"
                    },
                    "ga_code": {
                      "required": false,
                      "type": "string"
                    },
                    "group_photo": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "highres_link": {
                          "required": false,
                          "type": "string"
                        },
                        "id": {
                          "required": false,
                          "type": "integer"
                        },
                        "photo_link": {
                          "required": false,
                          "type": "string"
                        },
                        "thumb_link": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "id": {
                      "required": false,
                      "type": "integer"
                    },
                    "is_simplehtml": {
                      "required": false,
                      "type": "string"
                    },
                    "join_info": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "intro_required": {
                          "required": false,
                          "type": "string"
                        },
                        "photo_required": {
                          "required": false,
                          "type": "string"
                        },
                        "questions": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "id": {
                              "required": false,
                              "type": "integer"
                            },
                            "question": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        },
                        "questions_req": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "join_mode": {
                      "required": false,
                      "type": "string"
                    },
                    "lat": {
                      "required": false,
                      "type": "number"
                    },
                    "link": {
                      "required": false,
                      "type": "string"
                    },
                    "list_addr": {
                      "required": false,
                      "type": "string"
                    },
                    "list_mode": {
                      "required": false,
                      "type": "string"
                    },
                    "lon": {
                      "required": false,
                      "type": "number"
                    },
                    "members": {
                      "required": false,
                      "type": "string"
                    },
                    "name": {
                      "required": false,
                      "type": "string"
                    },
                    "next_event": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "id": {
                          "required": false,
                          "type": "integer"
                        },
                        "name": {
                          "required": false,
                          "type": "string"
                        },
                        "time": {
                          "required": false,
                          "type": "integer"
                        }
                      }
                    },
                    "organizer": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "bio": {
                          "required": false,
                          "type": "string"
                        },
                        "id": {
                          "required": false,
                          "type": "integer"
                        },
                        "name": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "photos": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "highres_link": {
                          "required": false,
                          "type": "string"
                        },
                        "id": {
                          "required": false,
                          "type": "integer"
                        },
                        "photo_link": {
                          "required": false,
                          "type": "string"
                        },
                        "thumb_link": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "simple_html_description": {
                      "required": false,
                      "type": "string"
                    },
                    "state": {
                      "required": false,
                      "type": "integer"
                    },
                    "timezone": {
                      "required": false,
                      "type": "string"
                    },
                    "urlname": {
                      "required": false,
                      "type": "string"
                    },
                    "visibility": {
                      "required": false,
                      "type": "string"
                    },
                    "who": {
                      "required": false,
                      "type": "string"
                    }
                  }
                }
        cities: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "city": {
                            "required": false,
                            "type": "string"
                          },
                          "country": {
                            "required": false,
                            "type": "string"
                          },
                          "distance": {
                            "required": false,
                            "type": "number"
                          },
                          "id": {
                            "required": false,
                            "type": "integer"
                          },
                          "lat": {
                            "required": false,
                            "type": "number"
                          },
                          "lon": {
                            "required": false,
                            "type": "number"
                          },
                          "member_count": {
                            "required": false,
                            "type": "integer"
                          },
                          "name_string": {
                            "required": false,
                            "type": "string"
                          },
                          "ranking": {
                            "required": false,
                            "type": "string"
                          },
                          "state": {
                            "required": false,
                            "type": "integer"
                          },
                          "zip": {
                            "required": false,
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                } 
        everywhereComments: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "comment": {
                            "required": false,
                            "type": "string"
                          },
                          "created": {
                            "required": false,
                            "type": "integer"
                          },
                          "event_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "id": {
                            "required": false,
                            "type": "integer"
                          },
                          "member": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "member_city": {
                                "required": false,
                                "type": "string"
                              },
                              "member_country": {
                                "required": false,
                                "type": "string"
                              },
                              "member_id": {
                                "required": false,
                                "type": "integer"
                              },
                              "member_state": {
                                "required": false,
                                "type": "string"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "parent_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "udf_{varname}": {
                            "required": false,
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
        profile: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "additional": {
                      "required": false,
                      "type": "string"
                    },
                    "answers": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "answer": {
                          "required": false,
                          "type": "string"
                        },
                        "question": {
                          "required": false,
                          "type": "string"
                        },
                        "question_id": {
                          "required": false,
                          "type": "integer"
                        }
                      }
                    },
                    "attendance_count": {
                      "required": false,
                      "type": "integer"
                    },
                    "bio": {
                      "required": false,
                      "type": "string"
                    },
                    "comment": {
                      "required": false,
                      "type": "string"
                    },
                    "created": {
                      "required": false,
                      "type": "integer"
                    },
                    "updated": {
                      "required": false,
                      "type": "integer"
                    },
                    "group": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "group_lat": {
                          "required": false,
                          "type": "string"
                        },
                        "group_lon": {
                          "required": false,
                          "type": "string"
                        },
                        "id": {
                          "required": false,
                          "type": "integer"
                        },
                        "join_mode": {
                          "required": false,
                          "type": "string"
                        },
                        "name": {
                          "required": false,
                          "type": "string"
                        },
                        "urlname": {
                          "required": false,
                          "type": "string"
                        },
                        "who": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "member_city": {
                      "required": false,
                      "type": "string"
                    },
                    "member_country": {
                      "required": false,
                      "type": "string"
                    },
                    "member_id": {
                      "required": false,
                      "type": "integer"
                    },
                    "member_state": {
                      "required": false,
                      "type": "string"
                    },
                    "membership_dues": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "period_status": {
                          "required": false,
                          "type": "string"
                        },
                        "total_amount": {
                          "required": false,
                          "type": "string"
                        },
                        "transaction_time": {
                          "required": false,
                          "type": "integer"
                        }
                      }
                    },
                    "name": {
                      "required": false,
                      "type": "string"
                    },
                    "other_services": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "[service-name]": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "identifier": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "photo": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "highres_link": {
                          "required": false,
                          "type": "string"
                        },
                        "photo_id": {
                          "required": false,
                          "type": "integer"
                        },
                        "photo_link": {
                          "required": false,
                          "type": "string"
                        },
                        "thumb_link": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "photo_url": {
                      "required": false,
                      "type": "string"
                    },
                    "profile_url": {
                      "required": false,
                      "type": "string"
                    },
                    "role": {
                      "required": false,
                      "type": "string"
                    },
                    "site_url": {
                      "required": false,
                      "type": "string"
                    },
                    "site_name": {
                      "required": false,
                      "type": "string"
                    },
                    "status": {
                      "required": false,
                      "type": "string"
                    },
                    "title": {
                      "required": false,
                      "type": "integer"
                    },
                    "visited": {
                      "required": false,
                      "type": "integer"
                    }
                  }
                }
        batch: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": false,
                  "type": "array",
                  "items": {
                    "required": false,
                    "type": "object",
                    "properties": {
                      "body": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "id": {
                            "required": false,
                            "type": "integer"
                          },
                          "name": {
                            "required": false,
                            "type": "string"
                          }
                        }
                      },
                      "headers": {
                        "required": false,
                        "type": "object"
                      },
                      "path": {
                        "required": false,
                        "type": "string"
                      },
                      "ref": {
                        "required": false,
                        "type": "string"
                      },
                      "status": {
                        "required": false,
                        "type": "integer"
                      }
                    }
                  }
                }
        profiles: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "additional": {
                            "required": false,
                            "type": "string"
                          },
                          "answers": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "answer": {
                                "required": false,
                                "type": "string"
                              },
                              "question": {
                                "required": false,
                                "type": "string"
                              },
                              "question_id": {
                                "required": false,
                                "type": "integer"
                              }
                            }
                          },
                          "attendance_count": {
                            "required": false,
                            "type": "integer"
                          },
                          "bio": {
                            "required": false,
                            "type": "string"
                          },
                          "comment": {
                            "required": false,
                            "type": "string"
                          },
                          "created": {
                            "required": false,
                            "type": "integer"
                          },
                          "updated": {
                            "required": false,
                            "type": "integer"
                          },
                          "group": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "group_lat": {
                                "required": false,
                                "type": "string"
                              },
                              "group_lon": {
                                "required": false,
                                "type": "string"
                              },
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "join_mode": {
                                "required": false,
                                "type": "string"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "urlname": {
                                "required": false,
                                "type": "string"
                              },
                              "who": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "member_city": {
                            "required": false,
                            "type": "string"
                          },
                          "member_country": {
                            "required": false,
                            "type": "string"
                          },
                          "member_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "member_state": {
                            "required": false,
                            "type": "string"
                          },
                          "membership_dues": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "period_status": {
                                "required": false,
                                "type": "string"
                              },
                              "total_amount": {
                                "required": false,
                                "type": "string"
                              },
                              "transaction_time": {
                                "required": false,
                                "type": "integer"
                              }
                            }
                          },
                          "name": {
                            "required": false,
                            "type": "string"
                          },
                          "other_services": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "[service-name]": {
                                "required": false,
                                "type": "object",
                                "properties": {
                                  "identifier": {
                                    "required": false,
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "photo": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "highres_link": {
                                "required": false,
                                "type": "string"
                              },
                              "photo_id": {
                                "required": false,
                                "type": "integer"
                              },
                              "photo_link": {
                                "required": false,
                                "type": "string"
                              },
                              "thumb_link": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "photo_url": {
                            "required": false,
                            "type": "string"
                          },
                          "profile_url": {
                            "required": false,
                            "type": "string"
                          },
                          "role": {
                            "required": false,
                            "type": "string"
                          },
                          "site_url": {
                            "required": false,
                            "type": "string"
                          },
                          "site_name": {
                            "required": false,
                            "type": "string"
                          },
                          "status": {
                            "required": false,
                            "type": "string"
                          },
                          "title": {
                            "required": false,
                            "type": "integer"
                          },
                          "visited": {
                            "required": false,
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
        groupPhotoUploadResult: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "group_photo_id": {
                      "required": false,
                      "type": "integer"
                    },
                    "photo_url": {
                      "required": false,
                      "type": "string"
                    },
                    "title": {
                      "required": false,
                      "type": "integer"
                    }
                  }
                }
        eventComment: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "comment": {
                      "required": false,
                      "type": "string"
                    },
                    "comment_url": {
                      "required": false,
                      "type": "string"
                    },
                    "event": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "event_url": {
                          "required": false,
                          "type": "string"
                        },
                        "id": {
                          "required": false,
                          "type": "integer"
                        },
                        "name": {
                          "required": false,
                          "type": "string"
                        },
                        "time": {
                          "required": false,
                          "type": "integer"
                        }
                      }
                    },
                    "event_comment_id": {
                      "required": false,
                      "type": "integer"
                    },
                    "event_diff_id": {
                      "required": false,
                      "type": "integer"
                    },
                    "event_id": {
                      "required": false,
                      "type": "integer"
                    },
                    "group_id": {
                      "required": false,
                      "type": "integer"
                    },
                    "in_reply_to": {
                      "required": false,
                      "type": "integer"
                    },
                    "like_count": {
                      "required": false,
                      "type": "integer"
                    },
                    "member_id": {
                      "required": false,
                      "type": "integer"
                    },
                    "member_name": {
                      "required": false,
                      "type": "string"
                    },
                    "member_photo": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "hires_link": {
                          "required": false,
                          "type": "string"
                        },
                        "photo_id": {
                          "required": false,
                          "type": "integer"
                        },
                        "photo_link": {
                          "required": false,
                          "type": "string"
                        },
                        "thumb_link": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "notifications": {
                      "required": false,
                      "type": "string"
                    },
                    "replies": {
                      "required": false,
                      "type": "string"
                    },
                    "self": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "actions": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    }
                  }
                }
        deprecatedPhotoUploadResult: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "album_id": {
                      "required": false,
                      "type": "integer"
                    },
                    "details": {
                      "required": false,
                      "type": "string"
                    },
                    "photo_id": {
                      "required": false,
                      "type": "integer"
                    },
                    "title": {
                      "required": false,
                      "type": "integer"
                    }
                  }
                }
        everywhereFollowers: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "community": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "urlname": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "container": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "urlname": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "created": {
                            "required": false,
                            "type": "integer"
                          },
                          "id": {
                            "required": false,
                            "type": "integer"
                          },
                          "member": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "member_city": {
                                "required": false,
                                "type": "string"
                              },
                              "member_country": {
                                "required": false,
                                "type": "string"
                              },
                              "member_id": {
                                "required": false,
                                "type": "integer"
                              },
                              "member_state": {
                                "required": false,
                                "type": "string"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "status": {
                            "required": false,
                            "type": "string"
                          },
                          "udf_{varname}": {
                            "required": false,
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
        feed: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "group_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "group_name": {
                            "required": false,
                            "type": "string"
                          },
                          "id": {
                            "required": false,
                            "type": "integer"
                          },
                          "item_type": {
                            "required": false,
                            "type": "string"
                          },
                          "link": {
                            "required": false,
                            "type": "string"
                          },
                          "member_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "member_name": {
                            "required": false,
                            "type": "string"
                          },
                          "photo_url": {
                            "required": false,
                            "type": "string"
                          },
                          "published": {
                            "required": false,
                            "type": "string"
                          },
                          "title": {
                            "required": false,
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
        photoComment: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "comment": {
                      "required": false,
                      "type": "string"
                    },
                    "created": {
                      "required": false,
                      "type": "integer"
                    },
                    "member": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "member_city": {
                          "required": false,
                          "type": "string"
                        },
                        "member_country": {
                          "required": false,
                          "type": "string"
                        },
                        "member_id": {
                          "required": false,
                          "type": "integer"
                        },
                        "member_state": {
                          "required": false,
                          "type": "string"
                        },
                        "name": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "member_photo": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "hires_link": {
                          "required": false,
                          "type": "string"
                        },
                        "photo_id": {
                          "required": false,
                          "type": "integer"
                        },
                        "photo_link": {
                          "required": false,
                          "type": "string"
                        },
                        "thumb_link": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "photo_comment_id": {
                      "required": false,
                      "type": "integer"
                    },
                    "photo_id": {
                      "required": false,
                      "type": "integer"
                    }
                  }
                }
        everywhereComment: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "comment": {
                      "required": false,
                      "type": "string"
                    },
                    "created": {
                      "required": false,
                      "type": "integer"
                    },
                    "event_id": {
                      "required": false,
                      "type": "integer"
                    },
                    "id": {
                      "required": false,
                      "type": "integer"
                    },
                    "member": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "member_city": {
                          "required": false,
                          "type": "string"
                        },
                        "member_country": {
                          "required": false,
                          "type": "string"
                        },
                        "member_id": {
                          "required": false,
                          "type": "integer"
                        },
                        "member_state": {
                          "required": false,
                          "type": "string"
                        },
                        "name": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "parent_id": {
                      "required": false,
                      "type": "integer"
                    },
                    "udf_{varname}": {
                      "required": false,
                      "type": "string"
                    }
                  }
                }
        deprecatedCities: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "checker": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "member_city": {
                                "required": false,
                                "type": "string"
                              },
                              "member_country": {
                                "required": false,
                                "type": "string"
                              },
                              "member_id": {
                                "required": false,
                                "type": "integer"
                              },
                              "member_state": {
                                "required": false,
                                "type": "string"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "checkin_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "comment": {
                            "required": false,
                            "type": "string"
                          },
                          "event_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "group_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "lat": {
                            "required": false,
                            "type": "number"
                          },
                          "lon": {
                            "required": false,
                            "type": "number"
                          },
                          "member_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "member_name": {
                            "required": false,
                            "type": "string"
                          },
                          "time": {
                            "required": false,
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
        eventRatings: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "event_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "group_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "member_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "member_name": {
                            "required": false,
                            "type": "string"
                          },
                          "rating": {
                            "required": false,
                            "type": "string"
                          },
                          "time": {
                            "required": false,
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
        photoAlbums: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "album_photo": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "highres_link": {
                                "required": false,
                                "type": "string"
                              },
                              "photo_id": {
                                "required": false,
                                "type": "integer"
                              },
                              "photo_link": {
                                "required": false,
                                "type": "string"
                              },
                              "thumb_link": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "created": {
                            "required": false,
                            "type": "integer"
                          },
                          "event_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "group_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "ordering": {
                            "required": false,
                            "type": "integer"
                          },
                          "photo_album_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "photo_count": {
                            "required": false,
                            "type": "integer"
                          },
                          "title": {
                            "required": false,
                            "type": "integer"
                          },
                          "updated": {
                            "required": false,
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
        memberPhotoUploadResult: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "member_photo_id": {
                      "required": false,
                      "type": "integer"
                    },
                    "photo_url": {
                      "required": false,
                      "type": "string"
                    },
                    "title": {
                      "required": false,
                      "type": "integer"
                    }
                  }
                }
        payments: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "confirm_code": {
                            "required": false,
                            "type": "string"
                          },
                          "id": {
                            "required": false,
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
        everywhereEvents: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "address1": {
                            "required": false,
                            "type": "string"
                          },
                          "city": {
                            "required": false,
                            "type": "string"
                          },
                          "community": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "urlname": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "container": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "urlname": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "country": {
                            "required": false,
                            "type": "string"
                          },
                          "created": {
                            "required": false,
                            "type": "integer"
                          },
                          "description": {
                            "required": false,
                            "type": "string"
                          },
                          "helpers": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "member_city": {
                                "required": false,
                                "type": "string"
                              },
                              "member_country": {
                                "required": false,
                                "type": "string"
                              },
                              "member_id": {
                                "required": false,
                                "type": "integer"
                              },
                              "member_state": {
                                "required": false,
                                "type": "string"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "id": {
                            "required": false,
                            "type": "integer"
                          },
                          "lat": {
                            "required": false,
                            "type": "number"
                          },
                          "lon": {
                            "required": false,
                            "type": "number"
                          },
                          "link": {
                            "required": false,
                            "type": "string"
                          },
                          "meetup_url": {
                            "required": false,
                            "type": "string"
                          },
                          "rsvp_count": {
                            "required": false,
                            "type": "integer"
                          },
                          "short_description": {
                            "required": false,
                            "type": "string"
                          },
                          "state": {
                            "required": false,
                            "type": "integer"
                          },
                          "status": {
                            "required": false,
                            "type": "string"
                          },
                          "time": {
                            "required": false,
                            "type": "integer"
                          },
                          "udf_{varname}": {
                            "required": false,
                            "type": "string"
                          },
                          "updated": {
                            "required": false,
                            "type": "integer"
                          },
                          "venue_name": {
                            "required": false,
                            "type": "string"
                          },
                          "zip": {
                            "required": false,
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
        groupVenues: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "address_1": {
                            "required": false,
                            "type": "string"
                          },
                          "address_2": {
                            "required": false,
                            "type": "string"
                          },
                          "address_3": {
                            "required": false,
                            "type": "string"
                          },
                          "city": {
                            "required": false,
                            "type": "string"
                          },
                          "country": {
                            "required": false,
                            "type": "string"
                          },
                          "id": {
                            "required": false,
                            "type": "integer"
                          },
                          "lat": {
                            "required": false,
                            "type": "number"
                          },
                          "lon": {
                            "required": false,
                            "type": "number"
                          },
                          "name": {
                            "required": false,
                            "type": "string"
                          },
                          "phone": {
                            "required": false,
                            "type": "integer"
                          },
                          "state": {
                            "required": false,
                            "type": "integer"
                          },
                          "visibility": {
                            "required": false,
                            "type": "string"
                          },
                          "zip": {
                            "required": false,
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
        boards: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "0": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "created": {
                          "required": false,
                          "type": "integer"
                        },
                        "discussion_count": {
                          "required": false,
                          "type": "integer"
                        },
                        "group": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "id": {
                              "required": false,
                              "type": "integer"
                            }
                          }
                        },
                        "id": {
                          "required": false,
                          "type": "integer"
                        },
                        "latest_reply": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "created": {
                              "required": false,
                              "type": "integer"
                            },
                            "member": {
                              "required": false,
                              "type": "object",
                              "properties": {
                                "name": {
                                  "required": false,
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "name": {
                          "required": false,
                          "type": "string"
                        },
                        "post_count": {
                          "required": false,
                          "type": "integer"
                        },
                        "updated": {
                          "required": false,
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
        photoAlbum: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "album_photo": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "highres_link": {
                          "required": false,
                          "type": "string"
                        },
                        "photo_id": {
                          "required": false,
                          "type": "integer"
                        },
                        "photo_link": {
                          "required": false,
                          "type": "string"
                        },
                        "thumb_link": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "created": {
                      "required": false,
                      "type": "integer"
                    },
                    "event_id": {
                      "required": false,
                      "type": "integer"
                    },
                    "group_id": {
                      "required": false,
                      "type": "integer"
                    },
                    "ordering": {
                      "required": false,
                      "type": "integer"
                    },
                    "photo_album_id": {
                      "required": false,
                      "type": "integer"
                    },
                    "photo_count": {
                      "required": false,
                      "type": "integer"
                    },
                    "title": {
                      "required": false,
                      "type": "integer"
                    },
                    "updated": {
                      "required": false,
                      "type": "integer"
                    }
                  }
                }
        deprecatedRsvps: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "answers": {
                            "required": false,
                            "type": "string"
                          },
                          "city": {
                            "required": false,
                            "type": "string"
                          },
                          "comment": {
                            "required": false,
                            "type": "string"
                          },
                          "country": {
                            "required": false,
                            "type": "string"
                          },
                          "created": {
                            "required": false,
                            "type": "integer"
                          },
                          "event_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "id": {
                            "required": false,
                            "type": "integer"
                          },
                          "lat": {
                            "required": false,
                            "type": "number"
                          },
                          "link": {
                            "required": false,
                            "type": "string"
                          },
                          "lon": {
                            "required": false,
                            "type": "number"
                          },
                          "member_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "name": {
                            "required": false,
                            "type": "string"
                          },
                          "response": {
                            "required": false,
                            "type": "string"
                          },
                          "state": {
                            "required": false,
                            "type": "integer"
                          },
                          "updated:": {
                            "required": false,
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
        photoComments: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "comment": {
                            "required": false,
                            "type": "string"
                          },
                          "created": {
                            "required": false,
                            "type": "integer"
                          },
                          "member": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "member_city": {
                                "required": false,
                                "type": "string"
                              },
                              "member_country": {
                                "required": false,
                                "type": "string"
                              },
                              "member_id": {
                                "required": false,
                                "type": "integer"
                              },
                              "member_state": {
                                "required": false,
                                "type": "string"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "member_photo": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "hires_link": {
                                "required": false,
                                "type": "string"
                              },
                              "photo_id": {
                                "required": false,
                                "type": "integer"
                              },
                              "photo_link": {
                                "required": false,
                                "type": "string"
                              },
                              "thumb_link": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "photo_comment_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "photo_id": {
                            "required": false,
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
        watching: |
                {
                    "$schema" : "http://json-schema.org/draft-03/schema",
                    "required" : true,
                    "type" : "object",
                    "properties" : {
                        "status" : {
                            "required" : true,
                            "type" : "string"
                        }
                    }
                }
        deprecatedEvents: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "allow_maybe_rsvp": {
                            "required": false,
                            "type": "string"
                          },
                          "attendee_count": {
                            "required": false,
                            "type": "integer"
                          },
                          "description": {
                            "required": false,
                            "type": "string"
                          },
                          "event_hosts": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "member_id": {
                                "required": false,
                                "type": "integer"
                              },
                              "member_name": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "fee": {
                            "required": false,
                            "type": "string"
                          },
                          "feecurrency": {
                            "required": false,
                            "type": "string"
                          },
                          "feedesc": {
                            "required": false,
                            "type": "string"
                          },
                          "feelabel": {
                            "required": false,
                            "type": "string"
                          },
                          "guest_limit": {
                            "required": false,
                            "type": "string"
                          },
                          "how_to_find_us": {
                            "required": false,
                            "type": "string"
                          },
                          "id": {
                            "required": false,
                            "type": "integer"
                          },
                          "ismeetup": {
                            "required": false,
                            "type": "string"
                          },
                          "lat": {
                            "required": false,
                            "type": "number"
                          },
                          "lon": {
                            "required": false,
                            "type": "number"
                          },
                          "maybe_rsvpcount": {
                            "required": false,
                            "type": "string"
                          },
                          "member_status": {
                            "required": false,
                            "type": "string"
                          },
                          "my_waitlist_status": {
                            "required": false,
                            "type": "string"
                          },
                          "myrsvp": {
                            "required": false,
                            "type": "string"
                          },
                          "name": {
                            "required": false,
                            "type": "string"
                          },
                          "no_rsvpcount": {
                            "required": false,
                            "type": "string"
                          },
                          "organizer_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "organizer_name": {
                            "required": false,
                            "type": "string"
                          },
                          "photo_album_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "photo_count": {
                            "required": false,
                            "type": "integer"
                          },
                          "photo_url": {
                            "required": false,
                            "type": "string"
                          },
                          "rating": {
                            "required": false,
                            "type": "string"
                          },
                          "rating_count": {
                            "required": false,
                            "type": "integer"
                          },
                          "rsvpcount": {
                            "required": false,
                            "type": "string"
                          },
                          "short_link": {
                            "required": false,
                            "type": "string"
                          },
                          "status": {
                            "required": false,
                            "type": "string"
                          },
                          "time": {
                            "required": false,
                            "type": "string"
                          },
                          "updated": {
                            "required": false,
                            "type": "integer"
                          },
                          "utc_rsvp_cutoff": {
                            "required": false,
                            "type": "integer"
                          },
                          "utc_rsvp_open_time": {
                            "required": false,
                            "type": "integer"
                          },
                          "utc_time": {
                            "required": false,
                            "type": "integer"
                          },
                          "venue_address1": {
                            "required": false,
                            "type": "string"
                          },
                          "venue_address2": {
                            "required": false,
                            "type": "string"
                          },
                          "venue_city": {
                            "required": false,
                            "type": "string"
                          },
                          "venue_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "venue_lat": {
                            "required": false,
                            "type": "string"
                          },
                          "venue_lon": {
                            "required": false,
                            "type": "string"
                          },
                          "venue_map": {
                            "required": false,
                            "type": "string"
                          },
                          "venue_name": {
                            "required": false,
                            "type": "string"
                          },
                          "venue_phone": {
                            "required": false,
                            "type": "string"
                          },
                          "venue_state": {
                            "required": false,
                            "type": "string"
                          },
                          "venue_visibility": {
                            "required": false,
                            "type": "string"
                          },
                          "venue_zip": {
                            "required": false,
                            "type": "string"
                          },
                          "waiting_rsvpcount": {
                            "required": false,
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
        notWatching: |
                {
                    "$schema" : "http://json-schema.org/draft-03/schema",
                    "required" : true,
                    "type" : "object",
                    "properties" : {
                        "status" : {
                            "required" : true,
                            "type" : "string"
                        }
                    }
                }
        deprecatedGroups: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "country": {
                            "required": false,
                            "type": "string"
                          },
                          "city": {
                            "required": false,
                            "type": "string"
                          },
                          "state": {
                            "required": false,
                            "type": "integer"
                          },
                          "created": {
                            "required": false,
                            "type": "integer"
                          },
                          "daysleft": {
                            "required": false,
                            "type": "string"
                          },
                          "description": {
                            "required": false,
                            "type": "string"
                          },
                          "group_urlname": {
                            "required": false,
                            "type": "string"
                          },
                          "id": {
                            "required": false,
                            "type": "integer"
                          },
                          "join_info": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "intro_required": {
                                "required": false,
                                "type": "string"
                              },
                              "questions": {
                                "required": false,
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "required": false,
                                    "type": "integer"
                                  },
                                  "question": {
                                    "required": false,
                                    "type": "string"
                                  }
                                }
                              },
                              "questions_required": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "lat": {
                            "required": false,
                            "type": "number"
                          },
                          "link": {
                            "required": false,
                            "type": "string"
                          },
                          "lon": {
                            "required": false,
                            "type": "number"
                          },
                          "members": {
                            "required": false,
                            "type": "string"
                          },
                          "name": {
                            "required": false,
                            "type": "string"
                          },
                          "organizerName": {
                            "required": false,
                            "type": "string"
                          },
                          "organizerProfileURL": {
                            "required": false,
                            "type": "string"
                          },
                          "photo_url": {
                            "required": false,
                            "type": "string"
                          },
                          "rating": {
                            "required": false,
                            "type": "string"
                          },
                          "short_link": {
                            "required": false,
                            "type": "string"
                          },
                          "topics": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "urlkey": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "updated": {
                            "required": false,
                            "type": "integer"
                          },
                          "visibility": {
                            "required": false,
                            "type": "string"
                          },
                          "who": {
                            "required": false,
                            "type": "string"
                          },
                          "zip": {
                            "required": false,
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
        member: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "bio": {
                      "required": false,
                      "type": "string"
                    },
                    "birthday": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "day": {
                          "required": false,
                          "type": "string"
                        },
                        "month": {
                          "required": false,
                          "type": "integer"
                        },
                        "year": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "country": {
                      "required": false,
                      "type": "string"
                    },
                    "city": {
                      "required": false,
                      "type": "string"
                    },
                    "state": {
                      "required": false,
                      "type": "integer"
                    },
                    "email": {
                      "required": false,
                      "type": "integer"
                    },
                    "gender": {
                      "required": false,
                      "type": "string"
                    },
                    "hometown": {
                      "required": false,
                      "type": "string"
                    },
                    "id": {
                      "required": false,
                      "type": "integer"
                    },
                    "joined": {
                      "required": false,
                      "type": "integer"
                    },
                    "lang": {
                      "required": false,
                      "type": "string"
                    },
                    "lat": {
                      "required": false,
                      "type": "number"
                    },
                    "lon": {
                      "required": false,
                      "type": "number"
                    },
                    "link": {
                      "required": false,
                      "type": "string"
                    },
                    "membership_count": {
                      "required": false,
                      "type": "integer"
                    },
                    "messagable": {
                      "required": false,
                      "type": "string"
                    },
                    "messaging_pref": {
                      "required": false,
                      "type": "string"
                    },
                    "name": {
                      "required": false,
                      "type": "string"
                    },
                    "other_services": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "[service-name]": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "identifier": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "photo": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "highres_link": {
                          "required": false,
                          "type": "string"
                        },
                        "photo_id": {
                          "required": false,
                          "type": "integer"
                        },
                        "photo_link": {
                          "required": false,
                          "type": "string"
                        },
                        "thumb_link": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "photo_url": {
                      "required": false,
                      "type": "string"
                    },
                    "photos": {
                      "required": false,
                      "type": "string"
                    },
                    "privacy": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "bio": {
                          "required": false,
                          "type": "string"
                        },
                        "facebook": {
                          "required": false,
                          "type": "string"
                        },
                        "groups": {
                          "required": false,
                          "type": "string"
                        },
                        "photos": {
                          "required": false,
                          "type": "string"
                        },
                        "topics": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "reachable": {
                      "required": false,
                      "type": "string"
                    },
                    "self": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "common": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "friends": {
                              "required": false,
                              "type": "string"
                            },
                            "groups": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "topics": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "id": {
                          "required": false,
                          "type": "integer"
                        },
                        "name": {
                          "required": false,
                          "type": "string"
                        },
                        "urlkey": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "visited": {
                      "required": false,
                      "type": "integer"
                    }
                  }
                }
        everywhereFollows: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "community": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "urlname": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "container": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "urlname": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "created": {
                            "required": false,
                            "type": "integer"
                          },
                          "id": {
                            "required": false,
                            "type": "integer"
                          },
                          "member": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "member_city": {
                                "required": false,
                                "type": "string"
                              },
                              "member_country": {
                                "required": false,
                                "type": "string"
                              },
                              "member_id": {
                                "required": false,
                                "type": "integer"
                              },
                              "member_state": {
                                "required": false,
                                "type": "string"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "status": {
                            "required": false,
                            "type": "string"
                          },
                          "udf_{varname}": {
                            "required": false,
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
        categories: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "id": {
                            "required": false,
                            "type": "integer"
                          },
                          "name": {
                            "required": false,
                            "type": "string"
                          },
                          "shortname": {
                            "required": false,
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
        groupVenue: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "address_1": {
                      "required": false,
                      "type": "string"
                    },
                    "address_2": {
                      "required": false,
                      "type": "string"
                    },
                    "address_3": {
                      "required": false,
                      "type": "string"
                    },
                    "city": {
                      "required": false,
                      "type": "string"
                    },
                    "country": {
                      "required": false,
                      "type": "string"
                    },
                    "id": {
                      "required": false,
                      "type": "integer"
                    },
                    "lat": {
                      "required": false,
                      "type": "number"
                    },
                    "lon": {
                      "required": false,
                      "type": "number"
                    },
                    "name": {
                      "required": false,
                      "type": "string"
                    },
                    "phone": {
                      "required": false,
                      "type": "integer"
                    },
                    "state": {
                      "required": false,
                      "type": "integer"
                    },
                    "visibility": {
                      "required": false,
                      "type": "string"
                    },
                    "zip": {
                      "required": false,
                      "type": "string"
                    }
                  }
                }
        event: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "announced": {
                      "required": false,
                      "type": "string"
                    },
                    "comment_count": {
                      "required": false,
                      "type": "integer"
                    },
                    "created": {
                      "required": false,
                      "type": "integer"
                    },
                    "description": {
                      "required": false,
                      "type": "string"
                    },
                    "distance": {
                      "required": false,
                      "type": "number"
                    },
                    "duration": {
                      "required": false,
                      "type": "integer"
                    },
                    "email_reminders": {
                      "required": false,
                      "type": "string"
                    },
                    "event_hosts": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "member_id": {
                          "required": false,
                          "type": "integer"
                        },
                        "member_name": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "event_url": {
                      "required": false,
                      "type": "string"
                    },
                    "featured": {
                      "required": false,
                      "type": "string"
                    },
                    "fee": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "accepts": {
                          "required": false,
                          "type": "string"
                        },
                        "amount": {
                          "required": false,
                          "type": "string"
                        },
                        "currency": {
                          "required": false,
                          "type": "string"
                        },
                        "description": {
                          "required": false,
                          "type": "string"
                        },
                        "label": {
                          "required": false,
                          "type": "integer"
                        },
                        "required": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "group": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "category": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "id": {
                              "required": false,
                              "type": "integer"
                            },
                            "name": {
                              "required": false,
                              "type": "string"
                            },
                            "shortname": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        },
                        "group_lat": {
                          "required": false,
                          "type": "string"
                        },
                        "group_lon": {
                          "required": false,
                          "type": "string"
                        },
                        "group_photo": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "highres_link": {
                              "required": false,
                              "type": "string"
                            },
                            "photo_id": {
                              "required": false,
                              "type": "integer"
                            },
                            "photo_link": {
                              "required": false,
                              "type": "string"
                            },
                            "thumb_link": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        },
                        "id": {
                          "required": false,
                          "type": "integer"
                        },
                        "join_mode": {
                          "required": false,
                          "type": "string"
                        },
                        "membership_dues": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "currency": {
                              "required": false,
                              "type": "string"
                            },
                            "fee": {
                              "required": false,
                              "type": "string"
                            },
                            "fee_desc": {
                              "required": false,
                              "type": "string"
                            },
                            "methods": {
                              "required": false,
                              "type": "string"
                            },
                            "refund_policy": {
                              "required": false,
                              "type": "string"
                            },
                            "required": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        },
                        "name": {
                          "required": false,
                          "type": "string"
                        },
                        "topics": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "id": {
                              "required": false,
                              "type": "integer"
                            },
                            "name": {
                              "required": false,
                              "type": "string"
                            },
                            "urlkey": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        },
                        "urlname": {
                          "required": false,
                          "type": "string"
                        },
                        "who": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "headcount": {
                      "required": false,
                      "type": "string"
                    },
                    "how_to_find_us": {
                      "required": false,
                      "type": "string"
                    },
                    "id": {
                      "required": false,
                      "type": "integer"
                    },
                    "is_simplehtml": {
                      "required": false,
                      "type": "string"
                    },
                    "maybe_rsvp_count": {
                      "required": false,
                      "type": "integer"
                    },
                    "name": {
                      "required": false,
                      "type": "string"
                    },
                    "photo_album_id": {
                      "required": false,
                      "type": "integer"
                    },
                    "photo_count": {
                      "required": false,
                      "type": "integer"
                    },
                    "photo_url": {
                      "required": false,
                      "type": "string"
                    },
                    "publish_status": {
                      "required": false,
                      "type": "string"
                    },
                    "rating": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "average": {
                          "required": false,
                          "type": "string"
                        },
                        "count": {
                          "required": false,
                          "type": "integer"
                        }
                      }
                    },
                    "rsvp_alerts": {
                      "required": false,
                      "type": "string"
                    },
                    "rsvp_limit": {
                      "required": false,
                      "type": "string"
                    },
                    "rsvp_rules": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "close_time": {
                          "required": false,
                          "type": "string"
                        },
                        "closed": {
                          "required": false,
                          "type": "string"
                        },
                        "guest_limit": {
                          "required": false,
                          "type": "string"
                        },
                        "open_time": {
                          "required": false,
                          "type": "string"
                        },
                        "refund_policy": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "days": {
                              "required": false,
                              "type": "string"
                            },
                            "notes": {
                              "required": false,
                              "type": "integer"
                            },
                            "policies": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        },
                        "waitlisting": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "rsvpable": {
                      "required": false,
                      "type": "string"
                    },
                    "self": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "actions": {
                          "required": false,
                          "type": "string"
                        },
                        "checked_in": {
                          "required": false,
                          "type": "string"
                        },
                        "pay_status": {
                          "required": false,
                          "type": "string"
                        },
                        "rated": {
                          "required": false,
                          "type": "integer"
                        },
                        "role": {
                          "required": false,
                          "type": "string"
                        },
                        "rsvp": {
                          "required": false,
                          "type": "object",
                          "properties": {
                            "answers": {
                              "required": false,
                              "type": "string"
                            },
                            "guests": {
                              "required": false,
                              "type": "string"
                            },
                            "response": {
                              "required": false,
                              "type": "string"
                            }
                          }
                        },
                        "watching": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "short_link": {
                      "required": false,
                      "type": "string"
                    },
                    "simple_html_description": {
                      "required": false,
                      "type": "string"
                    },
                    "status": {
                      "required": false,
                      "type": "string"
                    },
                    "survey_questions": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "id": {
                          "required": false,
                          "type": "integer"
                        },
                        "question": {
                          "required": false,
                          "type": "string"
                        },
                        "required": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "time": {
                      "required": false,
                      "type": "integer"
                    },
                    "timezone": {
                      "required": false,
                      "type": "string"
                    },
                    "trending_rank": {
                      "required": false,
                      "type": "string"
                    },
                    "updated": {
                      "required": false,
                      "type": "integer"
                    },
                    "utc_offset": {
                      "required": false,
                      "type": "integer"
                    },
                    "venue": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "address_1": {
                          "required": false,
                          "type": "string"
                        },
                        "address_2": {
                          "required": false,
                          "type": "string"
                        },
                        "address_3": {
                          "required": false,
                          "type": "string"
                        },
                        "city": {
                          "required": false,
                          "type": "string"
                        },
                        "state": {
                          "required": false,
                          "type": "integer"
                        },
                        "country": {
                          "required": false,
                          "type": "string"
                        },
                        "id": {
                          "required": false,
                          "type": "integer"
                        },
                        "lat": {
                          "required": false,
                          "type": "number"
                        },
                        "lon": {
                          "required": false,
                          "type": "number"
                        },
                        "name": {
                          "required": false,
                          "type": "string"
                        },
                        "phone": {
                          "required": false,
                          "type": "integer"
                        },
                        "repinned": {
                          "required": false,
                          "type": "string"
                        },
                        "zip": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "venue_visibility": {
                      "required": false,
                      "type": "string"
                    },
                    "visibility": {
                      "required": false,
                      "type": "string"
                    },
                    "why": {
                      "required": false,
                      "type": "string"
                    },
                    "yes_rsvp_count": {
                      "required": false,
                      "type": "integer"
                    }
                  }
                }
        concierge: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "announced": {
                            "required": false,
                            "type": "string"
                          },
                          "comment_count": {
                            "required": false,
                            "type": "integer"
                          },
                          "created": {
                            "required": false,
                            "type": "integer"
                          },
                          "description": {
                            "required": false,
                            "type": "string"
                          },
                          "distance": {
                            "required": false,
                            "type": "number"
                          },
                          "duration": {
                            "required": false,
                            "type": "integer"
                          },
                          "email_reminders": {
                            "required": false,
                            "type": "string"
                          },
                          "event_hosts": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "member_id": {
                                "required": false,
                                "type": "integer"
                              },
                              "member_name": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "event_url": {
                            "required": false,
                            "type": "string"
                          },
                          "featured": {
                            "required": false,
                            "type": "string"
                          },
                          "fee": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "accepts": {
                                "required": false,
                                "type": "string"
                              },
                              "amount": {
                                "required": false,
                                "type": "string"
                              },
                              "currency": {
                                "required": false,
                                "type": "string"
                              },
                              "description": {
                                "required": false,
                                "type": "string"
                              },
                              "label": {
                                "required": false,
                                "type": "integer"
                              },
                              "required": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "group": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "category": {
                                "required": false,
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "required": false,
                                    "type": "integer"
                                  },
                                  "name": {
                                    "required": false,
                                    "type": "string"
                                  },
                                  "shortname": {
                                    "required": false,
                                    "type": "string"
                                  }
                                }
                              },
                              "group_lat": {
                                "required": false,
                                "type": "string"
                              },
                              "group_lon": {
                                "required": false,
                                "type": "string"
                              },
                              "group_photo": {
                                "required": false,
                                "type": "object",
                                "properties": {
                                  "highres_link": {
                                    "required": false,
                                    "type": "string"
                                  },
                                  "photo_id": {
                                    "required": false,
                                    "type": "integer"
                                  },
                                  "photo_link": {
                                    "required": false,
                                    "type": "string"
                                  },
                                  "thumb_link": {
                                    "required": false,
                                    "type": "string"
                                  }
                                }
                              },
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "join_mode": {
                                "required": false,
                                "type": "string"
                              },
                              "membership_dues": {
                                "required": false,
                                "type": "object",
                                "properties": {
                                  "currency": {
                                    "required": false,
                                    "type": "string"
                                  },
                                  "fee": {
                                    "required": false,
                                    "type": "string"
                                  },
                                  "fee_desc": {
                                    "required": false,
                                    "type": "string"
                                  },
                                  "methods": {
                                    "required": false,
                                    "type": "string"
                                  },
                                  "refund_policy": {
                                    "required": false,
                                    "type": "string"
                                  },
                                  "required": {
                                    "required": false,
                                    "type": "string"
                                  }
                                }
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "topics": {
                                "required": false,
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "required": false,
                                    "type": "integer"
                                  },
                                  "name": {
                                    "required": false,
                                    "type": "string"
                                  },
                                  "urlkey": {
                                    "required": false,
                                    "type": "string"
                                  }
                                }
                              },
                              "urlname": {
                                "required": false,
                                "type": "string"
                              },
                              "who": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "headcount": {
                            "required": false,
                            "type": "string"
                          },
                          "how_to_find_us": {
                            "required": false,
                            "type": "string"
                          },
                          "id": {
                            "required": false,
                            "type": "integer"
                          },
                          "is_simplehtml": {
                            "required": false,
                            "type": "string"
                          },
                          "maybe_rsvp_count": {
                            "required": false,
                            "type": "integer"
                          },
                          "name": {
                            "required": false,
                            "type": "string"
                          },
                          "photo_album_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "photo_count": {
                            "required": false,
                            "type": "integer"
                          },
                          "photo_url": {
                            "required": false,
                            "type": "string"
                          },
                          "publish_status": {
                            "required": false,
                            "type": "string"
                          },
                          "rating": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "average": {
                                "required": false,
                                "type": "string"
                              },
                              "count": {
                                "required": false,
                                "type": "integer"
                              }
                            }
                          },
                          "rsvp_alerts": {
                            "required": false,
                            "type": "string"
                          },
                          "rsvp_limit": {
                            "required": false,
                            "type": "string"
                          },
                          "rsvp_rules": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "close_time": {
                                "required": false,
                                "type": "string"
                              },
                              "closed": {
                                "required": false,
                                "type": "string"
                              },
                              "guest_limit": {
                                "required": false,
                                "type": "string"
                              },
                              "open_time": {
                                "required": false,
                                "type": "string"
                              },
                              "refund_policy": {
                                "required": false,
                                "type": "object",
                                "properties": {
                                  "days": {
                                    "required": false,
                                    "type": "string"
                                  },
                                  "notes": {
                                    "required": false,
                                    "type": "integer"
                                  },
                                  "policies": {
                                    "required": false,
                                    "type": "string"
                                  }
                                }
                              },
                              "waitlisting": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "rsvpable": {
                            "required": false,
                            "type": "string"
                          },
                          "self": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "actions": {
                                "required": false,
                                "type": "string"
                              },
                              "checked_in": {
                                "required": false,
                                "type": "string"
                              },
                              "pay_status": {
                                "required": false,
                                "type": "string"
                              },
                              "rated": {
                                "required": false,
                                "type": "integer"
                              },
                              "role": {
                                "required": false,
                                "type": "string"
                              },
                              "rsvp": {
                                "required": false,
                                "type": "object",
                                "properties": {
                                  "answers": {
                                    "required": false,
                                    "type": "string"
                                  },
                                  "guests": {
                                    "required": false,
                                    "type": "string"
                                  },
                                  "response": {
                                    "required": false,
                                    "type": "string"
                                  }
                                }
                              },
                              "watching": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "short_link": {
                            "required": false,
                            "type": "string"
                          },
                          "simple_html_description": {
                            "required": false,
                            "type": "string"
                          },
                          "status": {
                            "required": false,
                            "type": "string"
                          },
                          "survey_questions": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "question": {
                                "required": false,
                                "type": "string"
                              },
                              "required": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "time": {
                            "required": false,
                            "type": "integer"
                          },
                          "timezone": {
                            "required": false,
                            "type": "string"
                          },
                          "trending_rank": {
                            "required": false,
                            "type": "string"
                          },
                          "updated": {
                            "required": false,
                            "type": "integer"
                          },
                          "utc_offset": {
                            "required": false,
                            "type": "integer"
                          },
                          "venue": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "address_1": {
                                "required": false,
                                "type": "string"
                              },
                              "address_2": {
                                "required": false,
                                "type": "string"
                              },
                              "address_3": {
                                "required": false,
                                "type": "string"
                              },
                              "city": {
                                "required": false,
                                "type": "string"
                              },
                              "state": {
                                "required": false,
                                "type": "integer"
                              },
                              "country": {
                                "required": false,
                                "type": "string"
                              },
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "lat": {
                                "required": false,
                                "type": "number"
                              },
                              "lon": {
                                "required": false,
                                "type": "number"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "phone": {
                                "required": false,
                                "type": "integer"
                              },
                              "repinned": {
                                "required": false,
                                "type": "string"
                              },
                              "zip": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "venue_visibility": {
                            "required": false,
                            "type": "string"
                          },
                          "visibility": {
                            "required": false,
                            "type": "string"
                          },
                          "why": {
                            "required": false,
                            "type": "string"
                          },
                          "yes_rsvp_count": {
                            "required": false,
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
        everywhereRsvps: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "created": {
                            "required": false,
                            "type": "integer"
                          },
                          "event_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "id": {
                            "required": false,
                            "type": "integer"
                          },
                          "member": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "member_city": {
                                "required": false,
                                "type": "string"
                              },
                              "member_country": {
                                "required": false,
                                "type": "string"
                              },
                              "member_id": {
                                "required": false,
                                "type": "integer"
                              },
                              "member_state": {
                                "required": false,
                                "type": "string"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "member_photo": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "highres_link": {
                                "required": false,
                                "type": "string"
                              },
                              "photo_id": {
                                "required": false,
                                "type": "integer"
                              },
                              "photo_link": {
                                "required": false,
                                "type": "string"
                              },
                              "thumb_link": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "udf_{varname}": {
                            "required": false,
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
        deprecatedMembers: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "bio": {
                            "required": false,
                            "type": "string"
                          },
                          "country": {
                            "required": false,
                            "type": "string"
                          },
                          "city": {
                            "required": false,
                            "type": "string"
                          },
                          "state": {
                            "required": false,
                            "type": "integer"
                          },
                          "email": {
                            "required": false,
                            "type": "integer"
                          },
                          "id": {
                            "required": false,
                            "type": "integer"
                          },
                          "joined": {
                            "required": false,
                            "type": "string"
                          },
                          "lang": {
                            "required": false,
                            "type": "string"
                          },
                          "lat": {
                            "required": false,
                            "type": "number"
                          },
                          "lon": {
                            "required": false,
                            "type": "number"
                          },
                          "link": {
                            "required": false,
                            "type": "string"
                          },
                          "messaging_pref": {
                            "required": false,
                            "type": "string"
                          },
                          "name": {
                            "required": false,
                            "type": "string"
                          },
                          "other_services": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "[service-name]": {
                                "required": false,
                                "type": "object",
                                "properties": {
                                  "identifier": {
                                    "required": false,
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "photo_url": {
                            "required": false,
                            "type": "string"
                          },
                          "topics": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "urlkey": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "visited": {
                            "required": false,
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
        everywhereRsvp: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "created": {
                      "required": false,
                      "type": "integer"
                    },
                    "event_id": {
                      "required": false,
                      "type": "integer"
                    },
                    "id": {
                      "required": false,
                      "type": "integer"
                    },
                    "member": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "member_city": {
                          "required": false,
                          "type": "string"
                        },
                        "member_country": {
                          "required": false,
                          "type": "string"
                        },
                        "member_id": {
                          "required": false,
                          "type": "integer"
                        },
                        "member_state": {
                          "required": false,
                          "type": "string"
                        },
                        "name": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "member_photo": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "highres_link": {
                          "required": false,
                          "type": "string"
                        },
                        "photo_id": {
                          "required": false,
                          "type": "integer"
                        },
                        "photo_link": {
                          "required": false,
                          "type": "string"
                        },
                        "thumb_link": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "udf_{varname}": {
                      "required": false,
                      "type": "string"
                    }
                  }
                }
        comments: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "comment": {
                            "required": false,
                            "type": "string"
                          },
                          "country": {
                            "required": false,
                            "type": "string"
                          },
                          "city": {
                            "required": false,
                            "type": "string"
                          },
                          "state": {
                            "required": false,
                            "type": "integer"
                          },
                          "created": {
                            "required": false,
                            "type": "integer"
                          },
                          "lat": {
                            "required": false,
                            "type": "number"
                          },
                          "lon": {
                            "required": false,
                            "type": "number"
                          },
                          "link": {
                            "required": false,
                            "type": "string"
                          },
                          "name": {
                            "required": false,
                            "type": "string"
                          },
                          "photo_url": {
                            "required": false,
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
        rsvps: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "answers": {
                            "required": false,
                            "type": "string"
                          },
                          "comments": {
                            "required": false,
                            "type": "string"
                          },
                          "created": {
                            "required": false,
                            "type": "integer"
                          },
                          "event": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "event_url": {
                                "required": false,
                                "type": "string"
                              },
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "time": {
                                "required": false,
                                "type": "integer"
                              }
                            }
                          },
                          "group": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "group_lat": {
                                "required": false,
                                "type": "string"
                              },
                              "group_lon": {
                                "required": false,
                                "type": "string"
                              },
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "join_mode": {
                                "required": false,
                                "type": "string"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "urlname": {
                                "required": false,
                                "type": "string"
                              },
                              "who": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "guests": {
                            "required": false,
                            "type": "string"
                          },
                          "host": {
                            "required": false,
                            "type": "string"
                          },
                          "member": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "bio": {
                                "required": false,
                                "type": "string"
                              },
                              "member_city": {
                                "required": false,
                                "type": "string"
                              },
                              "member_country": {
                                "required": false,
                                "type": "string"
                              },
                              "member_id": {
                                "required": false,
                                "type": "integer"
                              },
                              "member_state": {
                                "required": false,
                                "type": "string"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "other_services": {
                                "required": false,
                                "type": "object",
                                "properties": {
                                  "[service-name]": {
                                    "required": false,
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "member_photo": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "highres_link": {
                                "required": false,
                                "type": "string"
                              },
                              "photo_id": {
                                "required": false,
                                "type": "integer"
                              },
                              "photo_link": {
                                "required": false,
                                "type": "string"
                              },
                              "thumb_link": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "mtime": {
                            "required": false,
                            "type": "integer"
                          },
                          "pay_status": {
                            "required": false,
                            "type": "string"
                          },
                          "response": {
                            "required": false,
                            "type": "string"
                          },
                          "rsvp_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "venue": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "address_1": {
                                "required": false,
                                "type": "string"
                              },
                              "address_2": {
                                "required": false,
                                "type": "string"
                              },
                              "address_3": {
                                "required": false,
                                "type": "string"
                              },
                              "city": {
                                "required": false,
                                "type": "string"
                              },
                              "state": {
                                "required": false,
                                "type": "integer"
                              },
                              "country": {
                                "required": false,
                                "type": "string"
                              },
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "lat": {
                                "required": false,
                                "type": "number"
                              },
                              "lon": {
                                "required": false,
                                "type": "number"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "phone": {
                                "required": false,
                                "type": "integer"
                              },
                              "repinned": {
                                "required": false,
                                "type": "string"
                              },
                              "zip": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "watching": {
                            "required": false,
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
        everywhereContainer: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "countries": {
                      "required": false,
                      "type": "string"
                    },
                    "created": {
                      "required": false,
                      "type": "integer"
                    },
                    "description": {
                      "required": false,
                      "type": "string"
                    },
                    "facebook_urlname": {
                      "required": false,
                      "type": "string"
                    },
                    "founder": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "member_city": {
                          "required": false,
                          "type": "string"
                        },
                        "member_country": {
                          "required": false,
                          "type": "string"
                        },
                        "member_id": {
                          "required": false,
                          "type": "integer"
                        },
                        "member_state": {
                          "required": false,
                          "type": "string"
                        },
                        "name": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "id": {
                      "required": false,
                      "type": "integer"
                    },
                    "link": {
                      "required": false,
                      "type": "string"
                    },
                    "link_name": {
                      "required": false,
                      "type": "string"
                    },
                    "meetup_count": {
                      "required": false,
                      "type": "integer"
                    },
                    "meetup_url": {
                      "required": false,
                      "type": "string"
                    },
                    "member_count": {
                      "required": false,
                      "type": "integer"
                    },
                    "name": {
                      "required": false,
                      "type": "string"
                    },
                    "past_meetup_count": {
                      "required": false,
                      "type": "integer"
                    },
                    "theme": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "banner_height": {
                          "required": false,
                          "type": "string"
                        },
                        "banner_link": {
                          "required": false,
                          "type": "string"
                        },
                        "boxback_color": {
                          "required": false,
                          "type": "string"
                        },
                        "button_color": {
                          "required": false,
                          "type": "string"
                        },
                        "link_color": {
                          "required": false,
                          "type": "string"
                        },
                        "pageback_color": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "twitter_urlname": {
                      "required": false,
                      "type": "string"
                    },
                    "udf_{varname}": {
                      "required": false,
                      "type": "string"
                    },
                    "updated": {
                      "required": false,
                      "type": "integer"
                    },
                    "urlname": {
                      "required": false,
                      "type": "string"
                    }
                  }
                }
        topics: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "description": {
                            "required": false,
                            "type": "string"
                          },
                          "id": {
                            "required": false,
                            "type": "integer"
                          },
                          "link": {
                            "required": false,
                            "type": "string"
                          },
                          "members": {
                            "required": false,
                            "type": "string"
                          },
                          "name": {
                            "required": false,
                            "type": "string"
                          },
                          "urlkey": {
                            "required": false,
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
        groups: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "category": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "shortname": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "city": {
                            "required": false,
                            "type": "string"
                          },
                          "country": {
                            "required": false,
                            "type": "string"
                          },
                          "created": {
                            "required": false,
                            "type": "integer"
                          },
                          "description": {
                            "required": false,
                            "type": "string"
                          },
                          "ga_code": {
                            "required": false,
                            "type": "string"
                          },
                          "group_photo": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "highres_link": {
                                "required": false,
                                "type": "string"
                              },
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "photo_link": {
                                "required": false,
                                "type": "string"
                              },
                              "thumb_link": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "id": {
                            "required": false,
                            "type": "integer"
                          },
                          "is_simplehtml": {
                            "required": false,
                            "type": "string"
                          },
                          "join_info": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "intro_required": {
                                "required": false,
                                "type": "string"
                              },
                              "photo_required": {
                                "required": false,
                                "type": "string"
                              },
                              "questions": {
                                "required": false,
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "required": false,
                                    "type": "integer"
                                  },
                                  "question": {
                                    "required": false,
                                    "type": "string"
                                  }
                                }
                              },
                              "questions_req": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "join_mode": {
                            "required": false,
                            "type": "string"
                          },
                          "lat": {
                            "required": false,
                            "type": "number"
                          },
                          "link": {
                            "required": false,
                            "type": "string"
                          },
                          "list_addr": {
                            "required": false,
                            "type": "string"
                          },
                          "list_mode": {
                            "required": false,
                            "type": "string"
                          },
                          "lon": {
                            "required": false,
                            "type": "number"
                          },
                          "members": {
                            "required": false,
                            "type": "string"
                          },
                          "name": {
                            "required": false,
                            "type": "string"
                          },
                          "next_event": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "time": {
                                "required": false,
                                "type": "integer"
                              }
                            }
                          },
                          "organizer": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "bio": {
                                "required": false,
                                "type": "string"
                              },
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "photos": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "highres_link": {
                                "required": false,
                                "type": "string"
                              },
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "photo_link": {
                                "required": false,
                                "type": "string"
                              },
                              "thumb_link": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "simple_html_description": {
                            "required": false,
                            "type": "string"
                          },
                          "state": {
                            "required": false,
                            "type": "integer"
                          },
                          "timezone": {
                            "required": false,
                            "type": "string"
                          },
                          "urlname": {
                            "required": false,
                            "type": "string"
                          },
                          "visibility": {
                            "required": false,
                            "type": "string"
                          },
                          "who": {
                            "required": false,
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
        photo: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "album_id": {
                      "required": false,
                      "type": "integer"
                    },
                    "created": {
                      "required": false,
                      "type": "integer"
                    },
                    "event_photo_id": {
                      "required": false,
                      "type": "integer"
                    },
                    "member": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "member_id": {
                          "required": false,
                          "type": "integer"
                        },
                        "name": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "photo_url": {
                      "required": false,
                      "type": "string"
                    },
                    "site_link": {
                      "required": false,
                      "type": "string"
                    },
                    "title": {
                      "required": false,
                      "type": "integer"
                    },
                    "updated": {
                      "required": false,
                      "type": "integer"
                    }
                  }
                }
        everywhereEventSeed: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "container": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "id": {
                          "required": false,
                          "type": "integer"
                        },
                        "name": {
                          "required": false,
                          "type": "string"
                        },
                        "urlname": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "created": {
                      "required": false,
                      "type": "integer"
                    },
                    "description": {
                      "required": false,
                      "type": "string"
                    },
                    "id": {
                      "required": false,
                      "type": "integer"
                    },
                    "local_time": {
                      "required": false,
                      "type": "integer"
                    },
                    "short_description": {
                      "required": false,
                      "type": "string"
                    },
                    "status": {
                      "required": false,
                      "type": "string"
                    },
                    "udf_{varname}": {
                      "required": false,
                      "type": "string"
                    },
                    "updated": {
                      "required": false,
                      "type": "integer"
                    }
                  }
                }
        eventCommentLikes: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "created": {
                            "required": false,
                            "type": "integer"
                          },
                          "event_comment_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "member": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "member_city": {
                                "required": false,
                                "type": "string"
                              },
                              "member_country": {
                                "required": false,
                                "type": "string"
                              },
                              "member_id": {
                                "required": false,
                                "type": "integer"
                              },
                              "member_state": {
                                "required": false,
                                "type": "string"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "photo": {
                                "required": false,
                                "type": "object",
                                "properties": {
                                  "highres_link": {
                                    "required": false,
                                    "type": "string"
                                  },
                                  "photo_id": {
                                    "required": false,
                                    "type": "integer"
                                  },
                                  "photo_link": {
                                    "required": false,
                                    "type": "string"
                                  },
                                  "thumb_link": {
                                    "required": false,
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
        eventRating: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "event_id": {
                      "required": false,
                      "type": "integer"
                    },
                    "group_id": {
                      "required": false,
                      "type": "integer"
                    },
                    "rating": {
                      "required": false,
                      "type": "string"
                    },
                    "rating_count": {
                      "required": false,
                      "type": "integer"
                    },
                    "time": {
                      "required": false,
                      "type": "string"
                    }
                  }
                }
        deprecatedRsvp: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "answers": {
                      "required": false,
                      "type": "string"
                    },
                    "city": {
                      "required": false,
                      "type": "string"
                    },
                    "comment": {
                      "required": false,
                      "type": "string"
                    },
                    "country": {
                      "required": false,
                      "type": "string"
                    },
                    "created": {
                      "required": false,
                      "type": "integer"
                    },
                    "event_id": {
                      "required": false,
                      "type": "integer"
                    },
                    "id": {
                      "required": false,
                      "type": "integer"
                    },
                    "lat": {
                      "required": false,
                      "type": "number"
                    },
                    "link": {
                      "required": false,
                      "type": "string"
                    },
                    "lon": {
                      "required": false,
                      "type": "number"
                    },
                    "member_id": {
                      "required": false,
                      "type": "integer"
                    },
                    "name": {
                      "required": false,
                      "type": "string"
                    },
                    "response": {
                      "required": false,
                      "type": "string"
                    },
                    "state": {
                      "required": false,
                      "type": "integer"
                    },
                    "updated:": {
                      "required": false,
                      "type": "string"
                    }
                  }
                }
        groupsFull: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "category": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "shortname": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "city": {
                            "required": false,
                            "type": "string"
                          },
                          "country": {
                            "required": false,
                            "type": "string"
                          },
                          "created": {
                            "required": false,
                            "type": "integer"
                          },
                          "description": {
                            "required": false,
                            "type": "string"
                          },
                          "ga_code": {
                            "required": false,
                            "type": "string"
                          },
                          "group_photo": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "highres_link": {
                                "required": false,
                                "type": "string"
                              },
                              "photo_id": {
                                "required": false,
                                "type": "integer"
                              },
                              "photo_link": {
                                "required": false,
                                "type": "string"
                              },
                              "thumb_link": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "id": {
                            "required": false,
                            "type": "integer"
                          },
                          "is_simplehtml": {
                            "required": false,
                            "type": "string"
                          },
                          "join_info": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "intro_req": {
                                "required": false,
                                "type": "string"
                              },
                              "photo_req": {
                                "required": false,
                                "type": "string"
                              },
                              "questions": {
                                "required": false,
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "required": false,
                                    "type": "integer"
                                  },
                                  "question": {
                                    "required": false,
                                    "type": "string"
                                  }
                                }
                              },
                              "questions_req": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "join_mode": {
                            "required": false,
                            "type": "string"
                          },
                          "lat": {
                            "required": false,
                            "type": "number"
                          },
                          "link": {
                            "required": false,
                            "type": "string"
                          },
                          "list_addr": {
                            "required": false,
                            "type": "string"
                          },
                          "list_mode": {
                            "required": false,
                            "type": "string"
                          },
                          "lon": {
                            "required": false,
                            "type": "number"
                          },
                          "members": {
                            "required": false,
                            "type": "string"
                          },
                          "membership_dues": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "currency": {
                                "required": false,
                                "type": "string"
                              },
                              "fee": {
                                "required": false,
                                "type": "string"
                              },
                              "fee_desc": {
                                "required": false,
                                "type": "string"
                              },
                              "methods": {
                                "required": false,
                                "type": "string"
                              },
                              "refund_policy": {
                                "required": false,
                                "type": "string"
                              },
                              "required": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "name": {
                            "required": false,
                            "type": "string"
                          },
                          "next_event": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "time": {
                                "required": false,
                                "type": "integer"
                              }
                            }
                          },
                          "organizer": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "member_city": {
                                "required": false,
                                "type": "string"
                              },
                              "member_country": {
                                "required": false,
                                "type": "string"
                              },
                              "member_id": {
                                "required": false,
                                "type": "integer"
                              },
                              "member_state": {
                                "required": false,
                                "type": "string"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "other_services": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "[service-name]": {
                                "required": false,
                                "type": "object",
                                "properties": {
                                  "identifier": {
                                    "required": false,
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "pending_members": {
                            "required": false,
                            "type": "string"
                          },
                          "photos": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "highres_link": {
                                "required": false,
                                "type": "string"
                              },
                              "photo_id": {
                                "required": false,
                                "type": "integer"
                              },
                              "photo_link": {
                                "required": false,
                                "type": "string"
                              },
                              "thumb_link": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "primary_topic": {
                            "required": false,
                            "type": "string"
                          },
                          "rating": {
                            "required": false,
                            "type": "string"
                          },
                          "self": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "actions": {
                                "required": false,
                                "type": "string"
                              },
                              "role": {
                                "required": false,
                                "type": "string"
                              },
                              "status": {
                                "required": false,
                                "type": "string"
                              },
                              "visited": {
                                "required": false,
                                "type": "integer"
                              }
                            }
                          },
                          "short_link": {
                            "required": false,
                            "type": "string"
                          },
                          "similar_groups": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "group_lat": {
                                "required": false,
                                "type": "string"
                              },
                              "group_lon": {
                                "required": false,
                                "type": "string"
                              },
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "join_mode": {
                                "required": false,
                                "type": "string"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "photos": {
                                "required": false,
                                "type": "string"
                              },
                              "urlname": {
                                "required": false,
                                "type": "string"
                              },
                              "who": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "simple_html_description": {
                            "required": false,
                            "type": "string"
                          },
                          "sponsors": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "details": {
                                "required": false,
                                "type": "string"
                              },
                              "image_url": {
                                "required": false,
                                "type": "string"
                              },
                              "info": {
                                "required": false,
                                "type": "string"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "perk_url": {
                                "required": false,
                                "type": "string"
                              },
                              "redeem": {
                                "required": false,
                                "type": "string"
                              },
                              "url": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "state": {
                            "required": false,
                            "type": "integer"
                          },
                          "timezone": {
                            "required": false,
                            "type": "string"
                          },
                          "topics": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "urlkey": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "urlname": {
                            "required": false,
                            "type": "string"
                          },
                          "visibility": {
                            "required": false,
                            "type": "string"
                          },
                          "welcome_message": {
                            "required": false,
                            "type": "string"
                          },
                          "who": {
                            "required": false,
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
        deprecatedCheckins: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "checker": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "member_city": {
                                "required": false,
                                "type": "string"
                              },
                              "member_country": {
                                "required": false,
                                "type": "string"
                              },
                              "member_id": {
                                "required": false,
                                "type": "integer"
                              },
                              "member_state": {
                                "required": false,
                                "type": "string"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "checkin_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "comment": {
                            "required": false,
                            "type": "string"
                          },
                          "event_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "group_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "lat": {
                            "required": false,
                            "type": "number"
                          },
                          "lon": {
                            "required": false,
                            "type": "number"
                          },
                          "member_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "member_name": {
                            "required": false,
                            "type": "string"
                          },
                          "time": {
                            "required": false,
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
        venues: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "address_1": {
                            "required": false,
                            "type": "string"
                          },
                          "address_2": {
                            "required": false,
                            "type": "string"
                          },
                          "address_3": {
                            "required": false,
                            "type": "string"
                          },
                          "city": {
                            "required": false,
                            "type": "string"
                          },
                          "state": {
                            "required": false,
                            "type": "integer"
                          },
                          "country": {
                            "required": false,
                            "type": "string"
                          },
                          "distance": {
                            "required": false,
                            "type": "number"
                          },
                          "email": {
                            "required": false,
                            "type": "integer"
                          },
                          "fax": {
                            "required": false,
                            "type": "string"
                          },
                          "id": {
                            "required": false,
                            "type": "integer"
                          },
                          "lat": {
                            "required": false,
                            "type": "number"
                          },
                          "lon": {
                            "required": false,
                            "type": "number"
                          },
                          "name": {
                            "required": false,
                            "type": "string"
                          },
                          "phone": {
                            "required": false,
                            "type": "integer"
                          },
                          "rating": {
                            "required": false,
                            "type": "string"
                          },
                          "rating_count": {
                            "required": false,
                            "type": "integer"
                          },
                          "taglist": {
                            "required": false,
                            "type": "string"
                          },
                          "venue_url": {
                            "required": false,
                            "type": "string"
                          },
                          "zip": {
                            "required": false,
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
        topicCategories: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "best_topics": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "urlkey": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "category_ids": {
                            "required": false,
                            "type": "string"
                          },
                          "name": {
                            "required": false,
                            "type": "string"
                          },
                          "photo": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "highres_link": {
                                "required": false,
                                "type": "string"
                              },
                              "photo_id": {
                                "required": false,
                                "type": "integer"
                              },
                              "photo_link": {
                                "required": false,
                                "type": "string"
                              },
                              "thumb_link": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "shortname": {
                            "required": false,
                            "type": "string"
                          },
                          "topic": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "urlkey": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
        attendance: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "member": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "photo": {
                                "required": false,
                                "type": "object",
                                "properties": {
                                  "thumb": {
                                    "required": false,
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          },
                          "rsvp": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "guests": {
                                "required": false,
                                "type": "string"
                              },
                              "response": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "status": {
                            "required": false,
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
        eventComments: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "comment": {
                            "required": false,
                            "type": "string"
                          },
                          "comment_url": {
                            "required": false,
                            "type": "string"
                          },
                          "event": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "event_url": {
                                "required": false,
                                "type": "string"
                              },
                              "id": {
                                "required": false,
                                "type": "integer"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              },
                              "time": {
                                "required": false,
                                "type": "integer"
                              }
                            }
                          },
                          "event_comment_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "event_diff_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "event_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "group_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "in_reply_to": {
                            "required": false,
                            "type": "integer"
                          },
                          "like_count": {
                            "required": false,
                            "type": "integer"
                          },
                          "member_id": {
                            "required": false,
                            "type": "integer"
                          },
                          "member_name": {
                            "required": false,
                            "type": "string"
                          },
                          "member_photo": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "hires_link": {
                                "required": false,
                                "type": "string"
                              },
                              "photo_id": {
                                "required": false,
                                "type": "integer"
                              },
                              "photo_link": {
                                "required": false,
                                "type": "string"
                              },
                              "thumb_link": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "notifications": {
                            "required": false,
                            "type": "string"
                          },
                          "self": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "actions": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
        everywhereContainers: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "results": {
                      "required": false,
                      "type": "array",
                      "items": {
                        "required": false,
                        "type": "object",
                        "properties": {
                          "countries": {
                            "required": false,
                            "type": "string"
                          },
                          "created": {
                            "required": false,
                            "type": "integer"
                          },
                          "description": {
                            "required": false,
                            "type": "string"
                          },
                          "facebook_urlname": {
                            "required": false,
                            "type": "string"
                          },
                          "founder": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "member_city": {
                                "required": false,
                                "type": "string"
                              },
                              "member_country": {
                                "required": false,
                                "type": "string"
                              },
                              "member_id": {
                                "required": false,
                                "type": "integer"
                              },
                              "member_state": {
                                "required": false,
                                "type": "string"
                              },
                              "name": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "id": {
                            "required": false,
                            "type": "integer"
                          },
                          "link": {
                            "required": false,
                            "type": "string"
                          },
                          "link_name": {
                            "required": false,
                            "type": "string"
                          },
                          "meetup_count": {
                            "required": false,
                            "type": "integer"
                          },
                          "meetup_url": {
                            "required": false,
                            "type": "string"
                          },
                          "member_count": {
                            "required": false,
                            "type": "integer"
                          },
                          "name": {
                            "required": false,
                            "type": "string"
                          },
                          "past_meetup_count": {
                            "required": false,
                            "type": "integer"
                          },
                          "theme": {
                            "required": false,
                            "type": "object",
                            "properties": {
                              "banner_height": {
                                "required": false,
                                "type": "string"
                              },
                              "banner_link": {
                                "required": false,
                                "type": "string"
                              },
                              "boxback_color": {
                                "required": false,
                                "type": "string"
                              },
                              "button_color": {
                                "required": false,
                                "type": "string"
                              },
                              "link_color": {
                                "required": false,
                                "type": "string"
                              },
                              "pageback_color": {
                                "required": false,
                                "type": "string"
                              }
                            }
                          },
                          "twitter_urlname": {
                            "required": false,
                            "type": "string"
                          },
                          "udf_{varname}": {
                            "required": false,
                            "type": "string"
                          },
                          "updated": {
                            "required": false,
                            "type": "integer"
                          },
                          "urlname": {
                            "required": false,
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
        everywhereFollow: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "required": true,
                  "type": "object",
                  "properties": {
                    "community": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "id": {
                          "required": false,
                          "type": "integer"
                        },
                        "name": {
                          "required": false,
                          "type": "string"
                        },
                        "urlname": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "container": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "id": {
                          "required": false,
                          "type": "integer"
                        },
                        "name": {
                          "required": false,
                          "type": "string"
                        },
                        "urlname": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "created": {
                      "required": false,
                      "type": "integer"
                    },
                    "id": {
                      "required": false,
                      "type": "integer"
                    },
                    "member": {
                      "required": false,
                      "type": "object",
                      "properties": {
                        "member_city": {
                          "required": false,
                          "type": "string"
                        },
                        "member_country": {
                          "required": false,
                          "type": "string"
                        },
                        "member_id": {
                          "required": false,
                          "type": "integer"
                        },
                        "member_state": {
                          "required": false,
                          "type": "string"
                        },
                        "name": {
                          "required": false,
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "required": false,
                      "type": "string"
                    },
                    "udf_{varname}": {
                      "required": false,
                      "type": "string"
                    }
                  }
                }
securitySchemes: 
    - 
        apiKey: 
            type: x-apiKey
            describedBy: 
                headers: 
                    Authorization: 
                        type: string
                        required: false
                        repeat: false
securedBy: 
    - 
        apiKey
/ew/comments: 
    displayName: /ew/comments
    get: 
        description: |
            Comment Query
            
            #Request Parameters
            At least one of the required parameter(s) must be supplied with the request, and multiple query values may be separated with commas.
        queryParameters: 
            member_id: 
                description: one or more member IDs
                type: string
                required: false
                repeat: false
            community_urlname: 
                description: Up to five URL paths, separated by commas. "urlname" or "container_id" is also required
                type: string
                required: false
                repeat: false
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            comment_id: 
                description: one or more comment IDs
                type: string
                required: false
                repeat: false
            udf_{varname}: 
                description: User defined fields
                type: string
                required: false
                repeat: false
            community_id: 
                description: One or more IDs, separated by commas
                type: string
                required: false
                repeat: false
            event_id: 
                description: one or more event IDs
                type: string
                required: false
                repeat: false
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            urlname: 
                description: one or more container urlnames
                type: string
                required: false
                repeat: false
            fields: 
                description: Request that additional fields (separated by commas) be included in the output.
                type: string
                required: false
                repeat: false
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            container_id: 
                description: one or more container IDs
                type: string
                required: false
                repeat: false
            parent_comment_id: 
                description: ID of a parent comment, to find its children
                type: string
                required: false
                repeat: false
            event_status: 
                description: Status may be "upcoming", "past" or both separated by a comma. The default is "upcoming" only
                type: string
                required: false
                repeat: false
            order: 
                description: |
                    |value|description|
                    |-|
                    |time|Comment date and time|
                type: string
                required: false
                repeat: false
                enum: [time]
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: Each item in the results list for a JSON or XML request will contain the fields listed in Comment Get.
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "member": {
                                    "member_state": "member_state 0",
                                    "member_city": "member_city 0",
                                    "name": "name 0",
                                    "member_country": "member_country 0",
                                    "member_id": 0
                                  },
                                  "id": 0,
                                  "udf_{varname}": "udf_{varname} 0",
                                  "created": 0,
                                  "event_id": 0,
                                  "comment": "comment 0",
                                  "parent_id": 0
                                },
                                {
                                  "member": {
                                    "member_state": "member_state 1",
                                    "member_city": "member_city 1",
                                    "name": "name 1",
                                    "member_country": "member_country 1",
                                    "member_id": 1
                                  },
                                  "id": 1,
                                  "udf_{varname}": "udf_{varname} 1",
                                  "created": 1,
                                  "event_id": 1,
                                  "comment": "comment 1",
                                  "parent_id": 1
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/2/rsvp: 
    displayName: /2/rsvp
    post: 
        description: |
            Creates a new Rsvp
            
            #Request Parameters
            At least one of the required parameter(s) must be supplied with the request. The rsvp is recorded for the currently authenticated member account, unless a member_id is supplied. Member's RSVP'ing as themselves may supply answers to a Meetup event's survey questions by supplying answers as request parameters corresponding to question ids in the format answer_{question_id}. To discover available Meetup event survey questions, supply the Events 2 method with the 'fields' parameter set to 'survey_questions'
            
            If the event requires payment you are required to send an "agree_to_refund" parameter set to the true or false. This represents the authorized members agreement to understanding the event's refund policy.
        queryParameters: 
            member_id: 
                description: Organizers and event hosts may RSVP on behalf of a member by specifying an ID here. As when editing RSVPs on the site, organizers may enter a "yes" for a member even if the event requires payment.
                type: string
                required: false
                repeat: false
            comments: 
                description: A comment to post along with the RSVP
                type: string
                required: false
                repeat: false
            event_id: 
                description: The event that you are RSVP'ing to
                type: string
                required: false
                repeat: false
            guests: 
                description: Number of guests also coming to the event.
                type: string
                required: false
                repeat: false
            opt_to_pay: 
                description: For events with fees, the authorized member may opt to pay as part of the RSVP request. This may be set to true or false
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            answer_{qid}: 
                description: Answers to event survey questions. Organizers and hosts my not edit or create answers on behalf of members
                type: string
                required: false
                repeat: false
            rsvp: 
                description: The RSVP setting - value must be either "yes". "no", "waitlist" or "maybe"
                type: string
                required: false
                repeat: false
            agree_to_refund: 
                description: For events with fees, the authorized member must agree to the event's refund policy. This must be set to either true or false
                type: string
                required: false
                repeat: false
        responses: 
            "200": 
                description: |
                    When everything goes well, we'll send a 200 response code along with your data.
                    
                    JSON requests that specify a callback parameter are treated differently: the API always responds with an HTTP status of 200, so that a client browser will load the response and handle the callback. When an error occurs its corresponding status line is served in a "status" field of the error response object rather than in the response header.
            "201": 
                description: |
                    |||
                    |-|
                    |answers|Answers to event survey questions provided when the member RSVP'd, only available to organizers and assistant organizers|
                    |comments|The message that the member provided when RSVP was made|
                    |created|Creation time of the RSVP, in milliseconds since the epoch.|
                    |event|The event associated with the RSVP|
                    |group|Group hosting the event|
                    |guests|Number of guests the RSVP'd member will be bringing|
                    |host|Optional field, `true` if RSVP is for an event host|
                    |member|Member who RSVP'd|
                    |member_photo|Rsvping Member's photo|
                    |mtime|Last modified time of the RSVP, in milliseconds since the epoch.|
                    |pay_status|The RSVPer's payment status if the event has an associated fee. Returned only for organizers when 'pay_status' is requested with the fields parameter. This may be one of 'none', 'paid', 'partially_paid', 'payment_pending', 'echeck_pending', 'refund_pending', 'partially_refunded', 'refunded'.|
                    |payment_redirect|If the event RSVP'd to requires online payment and a yes response was accepted, this field will contain a payment url you should redirect the authenticated member to in order to complete the online payment|
                    |response|"yes", "no", "waitlist" or "yes_pending_payment" which is the response returned after RSVPing "yes" to an event that requires payment.|
                    |rsvp_id|The RSVP id|
                    |tallies|The current set of counts for RSVPs|
                    |venue|Venue, if selected and not hidden|
                    |watching|if the current member choose to watch and event for open spot notifications, their response will be waitlist and watching will be true|
            "202": 
                description: |
                    In cases where a member succesfully RSVP's yes to one of these events, the response will be returned as an HTTP 202 Accepted status, representing that the payment processing has not yet been completed. A payment_redirect property will be append to the response containing the value of the step you should take to submit the payment online for the event.
                    
                    If a validation of Event and RSVP state occurs you may wish to inspect the response body for one of these the following error "codes".
                    |||
                    |-|
                    |dues_required|You must pay the group's member dues on the full site before you can RSVP for this event|
                    |event_past|This event has already passed|
                    |invalid_event|Invalid event|
                    |invalid_guest_num|Invalid number or guests|
                    |invalid_response|Invalid RSVP response|
                    |payment_required|Payment required to RSVP|
                    |refund_agreement|Member must agree to refund policy|
                    |rsvp_error|Error RSVPing to event|
                    |rsvper_not_authorized|You need to be an organizer or an event host to RSVP this member|
                    |too_few_spots|There are not enough spots for your rsvp|
                    |too_many_guests|You have specified too many guests|
                body: 
                    application/json: 
                        example: |
                            {
                              "member": {
                                "member_state": "member_state",
                                "member_city": "member_city",
                                "bio": "bio",
                                "name": "name",
                                "member_country": "member_country",
                                "other_services": {
                                  "[service-name]": "[service-name]"
                                },
                                "member_id": 100
                              },
                              "host": "host",
                              "answers": "answers",
                              "guests": "guests",
                              "mtime": 100,
                              "venue": {
                                "id": 100,
                                "zip": "zip",
                                "phone": 100,
                                "lon": 1.0,
                                "repinned": "repinned",
                                "address_3": "address_3",
                                "name": "name",
                                "state": 100,
                                "address_1": "address_1",
                                "address_2": "address_2",
                                "lat": 1.0,
                                "country": "country",
                                "city": "city"
                              },
                              "pay_status": "pay_status",
                              "response": "response",
                              "member_photo": {
                                "photo_link": "photo_link",
                                "highres_link": "highres_link",
                                "thumb_link": "thumb_link",
                                "photo_id": 100
                              },
                              "watching": "watching",
                              "created": 100,
                              "event": {
                                "id": 100,
                                "time": 100,
                                "event_url": "event_url",
                                "name": "name"
                              },
                              "rsvp_id": 100,
                              "group": {
                                "id": 100,
                                "group_lat": "group_lat",
                                "name": "name",
                                "group_lon": "group_lon",
                                "join_mode": "join_mode",
                                "urlname": "urlname",
                                "who": "who"
                              },
                              "comments": "comments"
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: "401 Unauthorized is returned if the currently authenticated member can not create Meetups in the specified group."
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
    /{id}: 
        displayName: /2/rsvp/{id}
        uriParameters: 
            id: 
                description: ":id is a RSVP identifier"
                type: string
                required: false
                repeat: false
        get: 
            description: |
                Retrieve a single RSVP
                
                #Request Parameters
                Only authorization parameters are needed.
            queryParameters: 
                fields: 
                    description: Request that additional fields (separated by commas) be included in the output
                    type: string
                    required: false
                    repeat: false
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
            responses: 
                "200": 
                    description: |
                        |||
                        |-|
                        |answers|Answers to event survey questions provided when the member RSVP'd, only available to organizers and assistant organizers|
                        |comments|The message that the member provided when RSVP was made|
                        |created|Creation time of the RSVP, in milliseconds since the epoch.|
                        |event|The event associated with the RSVP|
                        |group|Group hosting the event|
                        |guests|Number of guests the RSVP'd member will be bringing|
                        |host|Optional field, `true` if RSVP is for an event host|
                        |member|Member who RSVP'd|
                        |member_photo|The RSVPing member's photo if available|
                        |mtime|Last modified time of the RSVP, in milliseconds since the epoch.|
                        |pay_status|The RSVPer's payment status if the event has an associated fee. Returned only for organizers when 'pay_status' is requested with the fields parameter. This may be one of 'none', 'paid', 'partially_paid', 'payment_pending', 'echeck_pending', 'refund_pending', 'partially_refunded', 'refunded'.|
                        |response|"yes", "no", "waitlist" or "yes_pending_payment" which is the response returned after RSVPing "yes" to an event that requires payment.|
                        |rsvp_id|The RSVP id|
                        |venue|Venue, if selected and not hidden|
                        |watching|if the current member choose to watch and event for open spot notifications, their response will be waitlist and watching will be true|
                    body: 
                        application/json: 
                            example: |
                                {
                                  "member": {
                                    "member_state": "member_state",
                                    "member_city": "member_city",
                                    "bio": "bio",
                                    "name": "name",
                                    "member_country": "member_country",
                                    "other_services": {
                                      "[service-name]": "[service-name]"
                                    },
                                    "member_id": 100
                                  },
                                  "host": "host",
                                  "answers": "answers",
                                  "guests": "guests",
                                  "mtime": 100,
                                  "venue": {
                                    "id": 100,
                                    "zip": "zip",
                                    "phone": 100,
                                    "lon": 1.0,
                                    "repinned": "repinned",
                                    "address_3": "address_3",
                                    "name": "name",
                                    "state": 100,
                                    "address_1": "address_1",
                                    "address_2": "address_2",
                                    "lat": 1.0,
                                    "country": "country",
                                    "city": "city"
                                  },
                                  "pay_status": "pay_status",
                                  "response": "response",
                                  "member_photo": {
                                    "photo_link": "photo_link",
                                    "highres_link": "highres_link",
                                    "thumb_link": "thumb_link",
                                    "photo_id": 100
                                  },
                                  "watching": "watching",
                                  "created": 100,
                                  "event": {
                                    "id": 100,
                                    "time": 100,
                                    "event_url": "event_url",
                                    "name": "name"
                                  },
                                  "rsvp_id": 100,
                                  "group": {
                                    "id": 100,
                                    "group_lat": "group_lat",
                                    "name": "name",
                                    "group_lon": "group_lon",
                                    "join_mode": "join_mode",
                                    "urlname": "urlname",
                                    "who": "who"
                                  },
                                  "comments": "comments"
                                }
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
/2/photo_album: 
    displayName: /2/photo_album
    post: 
        description: |
            This method creates photo albums within a Meetup group
            
            #Request Parameters
            All of the required parameters must be supplied with the request, which must be an HTTP POST. The currently authenticated user must be an organizer (main, assistant, or co-) of the specified group
        queryParameters: 
            group_id: 
                description: Group to create the album in
                type: string
                required: false
                repeat: false
            title: 
                description: Title of the new album
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
        responses: 
            "200": 
                description: |
                    When everything goes well, we'll send a 200 response code along with your data.
                    
                    JSON requests that specify a callback parameter are treated differently: the API always responds with an HTTP status of 200, so that a client browser will load the response and handle the callback. When an error occurs its corresponding status line is served in a "status" field of the error response object rather than in the response header.
            "201": 
                description: If successful, this method responds with a "201 Created" status and a json or XML body consisting of the album data in the same fields as the response items of the Photo Albums method.
                body: 
                    application/json: 
                        example: |
                            {
                              "title": 100,
                              "album_photo": {
                                "photo_link": "photo_link",
                                "highres_link": "highres_link",
                                "thumb_link": "thumb_link",
                                "photo_id": 100
                              },
                              "updated": 100,
                              "created": 100,
                              "group_id": 100,
                              "photo_album_id": 100,
                              "ordering": 100,
                              "event_id": 100,
                              "photo_count": 100
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/cities: 
    displayName: /cities
    get: 
        description: API method for accessing meetup cities
        queryParameters: 
            country: 
                description: Return cities in these countries [separate countries with commas]
                type: string
                required: false
                repeat: false
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            state: 
                description: Return cities in these states [separate states with commas]
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            order: 
                description: |
                    |value|description|
                    |-|
                    |members|total members in the city|
                    |name|the city name|
                type: string
                required: false
                repeat: false
                enum: [members, name]
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |city|The name of the city|
                    |country, state, zip|The country that the city is in, plus state and zip for cities in the U.S|
                    |lat,lon|The latitude and longitude of the city's location|
                    |members|The number of members located in the city|
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "zip": "zip 0",
                                  "lon": 1.0,
                                  "state": 0,
                                  "members": "members 0",
                                  "lat": 1.0,
                                  "country": "country 0",
                                  "city": "city 0"
                                },
                                {
                                  "zip": "zip 1",
                                  "lon": 1.0,
                                  "state": 1,
                                  "members": "members 1",
                                  "lat": 1.0,
                                  "country": "country 1",
                                  "city": "city 1"
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/comments: 
    displayName: /comments
    get: 
        description: |
            API method for accessing meetup group comments
            
            #Request Parameters
            At least one of the required parameter(s) must be supplied with the request.
        queryParameters: 
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            group_id: 
                description: Return comments in groups with these ID numbers [separated by commas]
                type: string
                required: false
                repeat: false
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            topic: 
                description: |
                    {topic, groupnum} - Return comments for the group with given topic and number
                type: string
                required: false
                repeat: false
            groupnum: 
                description: |
                    {topic, groupnum} - Return comments for the group with given topic and number
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            group_urlname: 
                description: Return comments for the group with this custom URL path
                type: string
                required: false
                repeat: false
            order: 
                description: |
                    |value|description|
                    |-|
                    |ctime|the date the comment was posted|
                type: string
                required: false
                repeat: false
                enum: [ctime]
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |comment|Text of the comment that was posted|
                    |country,city,state|Country, City, (and for the US, State) the member has provided|
                    |created|The time and date that the comment was created|
                    |lat,lon|Latitude and longitude coordinates of the members reported city|
                    |link|Link to the members profile page|
                    |name|The name of the member that posted the comment|
                    |photo_url|Link to the profile photo of the member|
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "lon": 1.0,
                                  "created": 0,
                                  "photo_url": "photo_url 0",
                                  "name": "name 0",
                                  "link": "link 0",
                                  "state": 0,
                                  "comment": "comment 0",
                                  "lat": 1.0,
                                  "city": "city 0",
                                  "country": "country 0"
                                },
                                {
                                  "lon": 1.0,
                                  "created": 1,
                                  "photo_url": "photo_url 1",
                                  "name": "name 1",
                                  "link": "link 1",
                                  "state": 1,
                                  "comment": "comment 1",
                                  "lat": 1.0,
                                  "city": "city 1",
                                  "country": "country 1"
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/2/groups: 
    displayName: /2/groups
    get: 
        description: |
            Fetch information about Meetup Groups.
            
            #Request Parameters
            At least one of the required parameter(s) must be supplied with the request. Answers to questions are expected to follow the naming convention: answer_{question_id}=myanswer when joining with the Profile Create method.
        queryParameters: 
            zip: 
                description: A valid US zip code, limits the returned groups to those within radius miles.
                type: string
                required: false
                repeat: false
            member_id: 
                description: Return comments for the given member_ids, separated by commas
                type: string
                required: false
                repeat: false
            country: 
                description: A valid country code
                type: string
                required: false
                repeat: false
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            city: 
                description: A valid city
                type: string
                required: false
                repeat: false
            groupnum: 
                description: |
                    {topic, groupnum} - Return the group with this topic and number
                type: string
                required: false
                repeat: false
            lon: 
                description: Longitude to search
                type: string
                required: false
                repeat: false
            group_urlname: 
                description: one or more separated by commas, includes no slashes
                type: string
                required: false
                repeat: false
            category_id: 
                description: Only return groups in the specified category. [one category allowed]
                type: string
                required: false
                repeat: false
            group_id: 
                description: Return comments in groups with these ID numbers, separated by commas
                type: string
                required: false
                repeat: false
            domain: 
                description: one or more custom group domains, separated by commas
                type: string
                required: false
                repeat: false
            organizer_id: 
                description: one or more organizer IDs, separated by commas
                type: string
                required: false
                repeat: false
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            topic: 
                description: Only return groups in the specified topic [one topic allowed]
                type: string
                required: false
                repeat: false
            state: 
                description: |
                    {country, city, state} - A valid country code, city and for the US, State. limits the returned groups to those within radius miles
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            fields: 
                description: optional result fields, separated by commas.
                type: string
                required: false
                repeat: false
            radius: 
                description: Radius, in miles for geographic requests, default 25 -- maximum 100
                type: string
                required: false
                repeat: false
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            lat: 
                description: Latitude to search
                type: string
                required: false
                repeat: false
            order: 
                description: |
                    |value|description|
                    |-|
                    |id|group creation time [newest first]|
                    |location|group location, country, state [if present], city|
                    |members|number of members [largest first]|
                    |name|the name of the group|
                type: string
                required: false
                repeat: false
                enum: [id, location, members, name]
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |category|Category associated with this group|
                    |city|City of the group|
                    |country|Country of the group|
                    |created|Date and time that the group was founded, in milliseconds since the epoch|
                    |description|Group description|
                    |ga_code|Optional field return the google analytics code for the group. Only members that can edit group settings can see this|
                    |group_photo|Main photo associated with the group|
                    |id|Group ID|
                    |is_simplehtml|Optional field, "true" when the group description has been saved in a simplified HTML format, "false" otherwise.|
                    |join_info|Optional field, lists any questions requested when joining and required fields|
                    |join_mode|"open", "closed", or "approval"|
                    |lat|Latitude|
                    |link|URL of group home|
                    |list_addr|Optional field returning list address prefix. List mail will be {list_addr}-list@meetup.com. Announce email will be {list_addr}-announce@meetup.com. You must be a member of the group to see this|
                    |list_mode|Defines policy for who can post to the group mailing list. May be one of 'open' meaning any Member can post, 'off' meaning no one can post, 'moderated' meaning messages must be approved, or 'orgs_only' meaning only organizers may post to the list|
                    |lon|Longitude|
                    |members|Current number of members in the group|
                    |membership_dues|Optional fields parameter. Returns the Group's membership dues info|
                    |name|Group name|
                    |next_event|Optional fields parameter. the next upcoming event, if the group has one|
                    |organizer|Group's primary organizer|
                    |other_services|Optional fields parameter for linked services|
                    |pending_members|Optional fields parameter, visible only to the organizers, that represents the number of pending members for groups that require membership approval|
                    |photos|Optional field, a small set of photos from the group|
                    |primary_topic|The groups primary topic|
                    |rating|0 to 5, average of group reviews|
                    |self|Optional field, contains details specific to the authorized user if an active member of this group|
                    |short_link|Optional field, a shorted URL for the group|
                    |similar_groups|List of similar groups, adjusted for the authorized member|
                    |simple_html_description|Description of the group, in simple HTML format. This value is translated to HTML to update the description.|
                    |sponsors|Optional field, sponsors of this group|
                    |state|State of the group, if in US or Canada|
                    |timezone|This represents the universal timezone identifier for the group|
                    |topics|Topics related to this group|
                    |urlname|Unique group name as it appears in the URL, no slashes|
                    |visibility|"public", "public_limited", or "members" only|
                    |welcome_message|Optional fields message. Returns the Group's default welcome message if the authenticated member is the organizer of the group|
                    |who|what the group calls its members|
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "visibility": "visibility 0",
                                  "is_simplehtml": "is_simplehtml 0",
                                  "link": "link 0",
                                  "state": 0,
                                  "next_event": {
                                    "id": 0,
                                    "time": 0,
                                    "name": "name 0"
                                  },
                                  "similar_groups": {
                                    "photos": "photos 0",
                                    "id": 0,
                                    "group_lat": "group_lat 0",
                                    "name": "name 0",
                                    "group_lon": "group_lon 0",
                                    "join_mode": "join_mode 0",
                                    "urlname": "urlname 0",
                                    "who": "who 0"
                                  },
                                  "self": {
                                    "visited": 0,
                                    "status": "status 0",
                                    "role": "role 0",
                                    "actions": "actions 0"
                                  },
                                  "join_mode": "join_mode 0",
                                  "membership_dues": {
                                    "methods": "methods 0",
                                    "fee": "fee 0",
                                    "required": "required 0",
                                    "fee_desc": "fee_desc 0",
                                    "refund_policy": "refund_policy 0",
                                    "currency": "currency 0"
                                  },
                                  "who": "who 0",
                                  "city": "city 0",
                                  "id": 0,
                                  "timezone": "timezone 0",
                                  "created": 0,
                                  "list_addr": "list_addr 0",
                                  "primary_topic": "primary_topic 0",
                                  "description": "description 0",
                                  "ga_code": "ga_code 0",
                                  "name": "name 0",
                                  "urlname": "urlname 0",
                                  "other_services": {
                                    "[service-name]": {
                                      "identifier": "identifier 0"
                                    }
                                  },
                                  "lat": 1.0,
                                  "members": "members 0",
                                  "list_mode": "list_mode 0",
                                  "pending_members": "pending_members 0",
                                  "lon": 1.0,
                                  "join_info": {
                                    "photo_req": "photo_req 0",
                                    "questions": {
                                      "id": 0,
                                      "question": "question 0"
                                    },
                                    "questions_req": "questions_req 0",
                                    "intro_req": "intro_req 0"
                                  },
                                  "organizer": {
                                    "member_state": "member_state 0",
                                    "member_city": "member_city 0",
                                    "name": "name 0",
                                    "member_country": "member_country 0",
                                    "member_id": 0
                                  },
                                  "short_link": "short_link 0",
                                  "country": "country 0",
                                  "photos": {
                                    "photo_link": "photo_link 0",
                                    "highres_link": "highres_link 0",
                                    "thumb_link": "thumb_link 0",
                                    "photo_id": 0
                                  },
                                  "topics": {
                                    "id": 0,
                                    "urlkey": "urlkey 0",
                                    "name": "name 0"
                                  },
                                  "category": {
                                    "id": 0,
                                    "name": "name 0",
                                    "shortname": "shortname 0"
                                  },
                                  "welcome_message": "welcome_message 0",
                                  "group_photo": {
                                    "photo_link": "photo_link 0",
                                    "highres_link": "highres_link 0",
                                    "thumb_link": "thumb_link 0",
                                    "photo_id": 0
                                  },
                                  "sponsors": {
                                    "details": "details 0",
                                    "image_url": "image_url 0",
                                    "redeem": "redeem 0",
                                    "name": "name 0",
                                    "perk_url": "perk_url 0",
                                    "url": "url 0",
                                    "info": "info 0"
                                  },
                                  "rating": "rating 0",
                                  "simple_html_description": "simple_html_description 0"
                                },
                                {
                                  "visibility": "visibility 1",
                                  "is_simplehtml": "is_simplehtml 1",
                                  "link": "link 1",
                                  "state": 1,
                                  "next_event": {
                                    "id": 1,
                                    "time": 1,
                                    "name": "name 1"
                                  },
                                  "similar_groups": {
                                    "photos": "photos 1",
                                    "id": 1,
                                    "group_lat": "group_lat 1",
                                    "name": "name 1",
                                    "group_lon": "group_lon 1",
                                    "join_mode": "join_mode 1",
                                    "urlname": "urlname 1",
                                    "who": "who 1"
                                  },
                                  "self": {
                                    "visited": 1,
                                    "status": "status 1",
                                    "role": "role 1",
                                    "actions": "actions 1"
                                  },
                                  "join_mode": "join_mode 1",
                                  "membership_dues": {
                                    "methods": "methods 1",
                                    "fee": "fee 1",
                                    "required": "required 1",
                                    "fee_desc": "fee_desc 1",
                                    "refund_policy": "refund_policy 1",
                                    "currency": "currency 1"
                                  },
                                  "who": "who 1",
                                  "city": "city 1",
                                  "id": 1,
                                  "timezone": "timezone 1",
                                  "created": 1,
                                  "list_addr": "list_addr 1",
                                  "primary_topic": "primary_topic 1",
                                  "description": "description 1",
                                  "ga_code": "ga_code 1",
                                  "name": "name 1",
                                  "urlname": "urlname 1",
                                  "other_services": {
                                    "[service-name]": {
                                      "identifier": "identifier 1"
                                    }
                                  },
                                  "lat": 1.0,
                                  "members": "members 1",
                                  "list_mode": "list_mode 1",
                                  "pending_members": "pending_members 1",
                                  "lon": 1.0,
                                  "join_info": {
                                    "photo_req": "photo_req 1",
                                    "questions": {
                                      "id": 1,
                                      "question": "question 1"
                                    },
                                    "questions_req": "questions_req 1",
                                    "intro_req": "intro_req 1"
                                  },
                                  "organizer": {
                                    "member_state": "member_state 1",
                                    "member_city": "member_city 1",
                                    "name": "name 1",
                                    "member_country": "member_country 1",
                                    "member_id": 1
                                  },
                                  "short_link": "short_link 1",
                                  "country": "country 1",
                                  "photos": {
                                    "photo_link": "photo_link 1",
                                    "highres_link": "highres_link 1",
                                    "thumb_link": "thumb_link 1",
                                    "photo_id": 1
                                  },
                                  "topics": {
                                    "id": 1,
                                    "urlkey": "urlkey 1",
                                    "name": "name 1"
                                  },
                                  "category": {
                                    "id": 1,
                                    "name": "name 1",
                                    "shortname": "shortname 1"
                                  },
                                  "welcome_message": "welcome_message 1",
                                  "group_photo": {
                                    "photo_link": "photo_link 1",
                                    "highres_link": "highres_link 1",
                                    "thumb_link": "thumb_link 1",
                                    "photo_id": 1
                                  },
                                  "sponsors": {
                                    "details": "details 1",
                                    "image_url": "image_url 1",
                                    "redeem": "redeem 1",
                                    "name": "name 1",
                                    "perk_url": "perk_url 1",
                                    "url": "url 1",
                                    "info": "info 1"
                                  },
                                  "rating": "rating 1",
                                  "simple_html_description": "simple_html_description 1"
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/2/photo_comment: 
    displayName: /2/photo_comment
    post: 
        description: |
            This method posts comments that appear below photos
            
            #Request Parameters
            All of the required parameters must be supplied with the request, which must be an HTTP POST. The currently authenticated user must be a member of the group hosting the photo
        queryParameters: 
            photo_id: 
                description: The photo related to this comment.
                type: string
                required: false
                repeat: false
            comment: 
                description: The comment text
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
        responses: 
            "200": 
                description: If successful, this method responds with a "201 Created" status and a JSON or XML body consisting of the posted comment in the same fields as the response items of the Photo Comments method.
                body: 
                    application/json: 
                        example: |
                            {
                              "member": {
                                "member_state": "member_state",
                                "member_city": "member_city",
                                "name": "name",
                                "member_country": "member_country",
                                "member_id": 100
                              },
                              "member_photo": {
                                "photo_link": "photo_link",
                                "hires_link": "hires_link",
                                "thumb_link": "thumb_link",
                                "photo_id": 100
                              },
                              "created": 100,
                              "photo_comment_id": 100,
                              "comment": "comment",
                              "photo_id": 100
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/2/event_comment_like/{id}: 
    displayName: /2/event_comment_like/{id}
    description: event_comment_like
    uriParameters: 
        id: 
            description: ":id in the path should be the id of a comment"
            type: string
            required: false
            repeat: false
    post: 
        description: |
            Like a given Event comment
            
            #Request Parameters
            Only authorization parameters are needed. :id in the path should be the id of the comment you are liking
        queryParameters: 
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
        responses: 
            "200": 
                description: Returns an HTTP 200 response if delete was successful.
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: Returns an HTTP 401 response if unauthorized.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
    delete: 
        description: |
            Unlike a given Event comment
            
            #Request Parameters
            Only authorization parameters are needed. :id in the path should be the id of the comment you are unliking
        responses: 
            "200": 
                description: Returns an HTTP 200 response if delete was successful.
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: Returns an HTTP 401 response if unauthorized.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/ew/seeds: 
    displayName: /ew/seeds
    get: 
        description: |
            Event Seeds Query
            For container owners. API method for accessing events seeded to communities.
            
            #Request Parameters
            At least one of the required parameter(s) must be supplied with the request.
        queryParameters: 
            community_urlname: 
                description: Up to fine urlpaths, separated by commas.
                type: string
                required: false
                repeat: false
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            seed_id: 
                description: ID of an event
                type: string
                required: false
                repeat: false
            udf_{varname}: 
                description: User defined fields
                type: string
                required: false
                repeat: false
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            urlname: 
                description: Up to five URL paths, separated by commas
                type: string
                required: false
                repeat: false
            fields: 
                description: Request that additional fields (separated by commas) be included in the output.
                type: string
                required: false
                repeat: false
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            container_id: 
                description: One or more IDs, separated by commas
                type: string
                required: false
                repeat: false
            status: 
                description: Return event seeds matching one of the given status values, separated by commas. Possible statuses are "pending", "active", or "archived". The default status parameter is "active,archived".
                type: string
                required: false
                repeat: false
            order: 
                description: |
                    |value|description|
                    |-|
                    |short_description|Event seed short description|
                type: string
                required: false
                repeat: false
                enum: [short_description]
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: Each item in the results list for a JSON or XML request will contain the fields listed in Event Seed Get.
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "local_time": 0,
                                  "id": 0,
                                  "short_description": "short_description 0",
                                  "updated": 0,
                                  "udf_{varname}": "udf_{varname} 0",
                                  "status": "status 0",
                                  "created": 0,
                                  "description": "description 0",
                                  "container": {
                                    "id": 0,
                                    "name": "name 0",
                                    "urlname": "urlname 0"
                                  }
                                },
                                {
                                  "local_time": 1,
                                  "id": 1,
                                  "short_description": "short_description 1",
                                  "updated": 1,
                                  "udf_{varname}": "udf_{varname} 1",
                                  "status": "status 1",
                                  "created": 1,
                                  "description": "description 1",
                                  "container": {
                                    "id": 1,
                                    "name": "name 1",
                                    "urlname": "urlname 1"
                                  }
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/2/checkins: 
    displayName: /2/checkins
    get: 
        description: |
            There are three ways to use this method. In all cases you should use the 'event_id' parameter:
            1. Use 'since_count' with 'callback' or 'since_mtime' with 'callback'.
            2. Use 'since_count' or 'since_mtime'.
            3. Use 'group_id' or 'member_id' with or without 'order'.
            
            #1
            This long-polling stream can be easily consumed using JavaScript in any modern browser. Checkin notifications are received when they happen, or as soon as your script finishes handling its last notification.
            Checkin notification objects include these properties. This method's response is an array of zero or more of these, while Meetup's JS client calls your callback function with exactly one object.
            #2
            This method serves checkin notifications using chunked encoding to maintian a persistent connection with a client. The connection will only be terminiated for server maintenance or a connection error. It is suitable for low-level HTTP clients rather than web browsers.
            This stream includes the same JSON notification objects as its long-polling counterpart. These are served one per HTTP chunk and terminated by newlines.
            #3
            This method returns checkins for an event. To post checkins, see /2/checkin.
            For private groups, the authenticated user must be a member to see checkins.
        queryParameters: 
            member_id: 
                description: Return comments for the given member_ids, separated by commas
                type: string
                required: false
                repeat: false
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            since_mtime: 
                description: Should be supplied for all but the first polling request, so that any missed notifications are can be sent in an immediate response. IF YOU USE THE 'callback' QUERY PARAMETER, then... Return recent messages with an mtime greater then the supplied time, in millisends since the epoch
                type: string
                required: false
                repeat: false
            event_id: 
                description: Limit notifications to a specific event id. Use alphanumeric ids for repeating events. USED IN ALL THREE WAYS TO MAKE THIS REQUEST.
                type: string
                required: true
                repeat: false
            group_id: 
                description: Return comments in groups with these ID numbers, separated by commas
                type: string
                required: false
                repeat: false
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            callback: 
                description: Name of a function to be called with an array of notification objects. If this parameter is not supplied, the chunked stream is joined instead.
                type: string
                required: false
                repeat: false
            since_count: 
                description: Request that some number of recent messages be sent immediately, if available. May not be specified in the same request as since_mtime.
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: true
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            order: 
                description: |
                    |value|description|
                    |-|
                    |name|the name of the member|
                    |time|the date and time of the checkin|
                type: string
                required: false
                repeat: false
                enum: [name, time]
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |checker|Member who performed the checkin, if not the same as the one who checked in|
                    |checkin_id|ID of the checkin|
                    |event_id|event checked into|
                    |lat|Latitude, if provided|
                    |lon|Longitude, if provided|
                    |member|Member who is checked in|
                    |time|checkin time in milliseconds since the epoch|
                    
                    #3
                    Errors:
                    |||
                    |-|
                    |connection_limit|the client IP has exceeded its maximum number of connections|
                      
                    #2
                    Errors:
                    |||
                    |-|
                    |connection_limit|the client IP has exceeded its maximum number of connections|
                      
                    #3
                    |||
                    |-|
                    |checker|Member who performed the checkin, if not the same as the one who checked in|
                    |checkin_id|Unique identifier for this checkin|
                    |comment|Text of the checkin comment if one was supplied|
                    |event_id|String ID of the event checked into|
                    |group_id|Group ID of the event|
                    |lat|Latitude reported, if any. Hidden from non-members of the group if the venue is hidden from non-members.|
                    |lon|Longitude reported, if any. Hidden from non-members of the group if the venue is hidden from non-members.|
                    |member_id|Member who checked in|
                    |member_name|Name of the member who checked in|
                    |time|The time and date of the checkin, in milliseconds since the epoch|
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "checkin_id": 0,
                                  "time": 0,
                                  "lon": 1.0,
                                  "group_id": 0,
                                  "event_id": 0,
                                  "member_name": "member_name 0",
                                  "comment": "comment 0",
                                  "lat": 1.0,
                                  "checker": {
                                    "member_state": "member_state 0",
                                    "member_city": "member_city 0",
                                    "name": "name 0",
                                    "member_country": "member_country 0",
                                    "member_id": 0
                                  },
                                  "member_id": 0
                                },
                                {
                                  "checkin_id": 1,
                                  "time": 1,
                                  "lon": 1.0,
                                  "group_id": 1,
                                  "event_id": 1,
                                  "member_name": "member_name 1",
                                  "comment": "comment 1",
                                  "lat": 1.0,
                                  "checker": {
                                    "member_state": "member_state 1",
                                    "member_city": "member_city 1",
                                    "name": "name 1",
                                    "member_country": "member_country 1",
                                    "member_id": 1
                                  },
                                  "member_id": 1
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/2/events: 
    displayName: /2/events
    description: Events
    uriParameters: 
        key: 
            type: string
            required: false
            repeat: false
    get: 
        description: |
            Access Meetup events using a group, member, or event id. Events in private groups are available only to authenticated members of those groups. To search events by topic or location, see Open Events.
            
            #Request Parameters
            At least one of the required parameter(s) must be supplied with the request. Some groups, while remaining private, still wish to show some information about their events. You can include these events in results using the limited_events request parameter.
        queryParameters: 
            member_id: 
                description: Return comments for the given member_ids, separated by commas
                type: string
                required: false
                repeat: false
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            limited_events: 
                description: |
                    Include limited event information for private groups that wish to expose only a small amount of information about their events. This includes just: id, name, utc_offset, time, duration, yes_rsvp_count, waitlist_count, group, visibility. Value must be true or false.
                type: string
                required: false
                repeat: false
            group_urlname: 
                description: Path to group from meetup.com, no slashes
                type: string
                required: false
                repeat: false
            rsvp: 
                description: |
                    Filters events by the currently authenticated member's RSVP status. May be a comma delimited list of "yes", "no", "waitlist", "maybe" or "none"
                type: string
                required: false
                repeat: false
            text_format: 
                description: Format of the description text, "html" or "plain". Defaults to "html"
                type: string
                required: false
                repeat: false
            event_id: 
                description: Multiple ids may be separated with commas
                type: string
                required: false
                repeat: false
            group_domain: 
                description: Group custom domain
                type: string
                required: false
                repeat: false
            group_id: 
                description: Return comments in groups with these ID numbers, separated by commas
                type: string
                required: false
                repeat: false
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            time: 
                description: |
                    Return events scheduled within the given time range, defined by two times separated with a single comma. Each end of the range may be specified with relative dates, such as "1m" for one month from now, or by absolute time in milliseconds since the epoch. If an endpoint is omitted, the range is unbounded on that end. The default value is unbounded on both ends (though restricted to the search window described above). Note: to retrieve past events you must also update status value
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            fields: 
                description: Request that additional fields (separated by commas) be included in the output
                type: string
                required: false
                repeat: false
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            venue_id: 
                description: Multiple ids may be separated with commas
                type: string
                required: false
                repeat: false
            status: 
                description: Status may be "upcoming", "past", "proposed", "suggested", "cancelled", "draft" or multiple separated by a comma. The default is "upcoming", which includes Meetups that are happening now according to their **duration**. Meetups that are "proposed" or "suggested" do not have a date assigned; the former are listed on the site as official while the latter appear as in the making. Drafts are only visible to organizers of groups hosting the events.
                type: string
                required: false
                repeat: false
            order: 
                description: |
                    |value|description|
                    |-|
                    |time|(default order) ascending|
                type: string
                required: false
                repeat: false
                enum: [time]
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |announced|Organizers and hosts can see if the event was announced|
                    |comment_count|Optional field, number of comments posted to the event|
                    |created|UTC creation time of the event, in milliseconds since the epoch|
                    |description|Description of the event|
                    |distance|Distance in miles from the search location, if one was specified|
                    |duration|Event duration in milliseconds, if an end time is specified by the organizer. When not present, a default of 3 hours may be assumed by applications.|
                    |email_reminders|Optional fields parameter limited to organizers and event hosts, if false, event reminders are disabled|
                    |event_hosts|List of members hosting the event, only returned if requested in the fields parameter.|
                    |event_url|URL of the event's page on meetup.com|
                    |featured|Optional fields parameter which returns "true" if the event is featured and "false" otherwise|
                    |fee|Fee info returned when payment is defined|
                    |group|Group that is hosting the event|
                    |headcount|The number of members in attendance according to the attendance taker. This may be 0 if attendance has not yet been taken|
                    |how_to_find_us|The information provided by the event host for "How will members find you there?"|
                    |id|The event id. May be numeric or alphanumeric, always served as a string|
                    |is_simplehtml|Optional field, "true" when the event has been saved in a simplified HTML format, "false" otherwise.|
                    |maybe_rsvp_count|Number of maybe RSVPs including guests|
                    |name|The name of the event|
                    |photo_album_id|optional fields parameter which returns the ID of the photo album for this event, if one exists|
                    |photo_count|Optional field, number of photos posted to the event|
                    |photo_url|URL of the event photo, if one exists|
                    |publish_status|"published" or "draft" only visible to organizers|
                    |rating|Only past events have this field, an aggregate of anonymous ratings|
                    |rsvp_alerts|Optional fields parameter limited to organizers and event hosts, if false, member RSVP alerts are disabled|
                    |rsvp_limit|The number of "yes" RSVPs an event can have before members will be added to the waiting list|
                    |rsvp_rules|Conditions set by the organizer, only returned if requested in the fields parameter.|
                    |rsvpable|Indicates if the currently authenticated member can RSVP or not, only returned if requested in the fields parameter|
                    |self|Optional field with details particular to the authorized user, only present if requested and user is a member of the hosting group|
                    |short_link|Optional field. If hosting group is private, this will return the group's short_link|
                    |simple_html_description|Optional field, description of the event in simple HTML format.|
                    |status|"cancelled", "upcoming", "past", "proposed", "suggested" or "draft"|
                    |survey_questions|Optional "fields" response property for event with surveys|
                    |time|UTC start time of the event, in milliseconds since the epoch|
                    |timezone|Returned when "timezone" is provided in fields parameter. This represents the universal timezone identifier for the host group|
                    |trending_rank|Indicates the trending rank within the current result set. The best rank is zero, increasing rank values are less "trending". This value is only returned if requested in the fields parameter|
                    |updated|UTC last modified time of the event, in milliseconds since the epoch|
                    |utc_offset|The local offset from UTC time, in milliseconds|
                    |venue|Venue, if selected and not hidden|
                    |venue_visibility|Set to "members" or "public". The "venue" element will not be present if the visibility is "members" and the current authenticated user is not a member of the group hosting the event. This value is only returned if requested in the fields parameter|
                    |visibility|Event visibility: "public", "members" or "public_limited". Events in private groups that do not expose limited information are visible only to that group's members and should not be made public.|
                    |why|We should do this because...|
                    |yes_rsvp_count|Number of yes RSVPs including guests|
                body: 
                    application/json: 
                        schema: ""
                        example: |
                            {
                              "results": [
                                {
                                  "visibility": "visibility 0",
                                  "is_simplehtml": "is_simplehtml 0",
                                  "self": {
                                    "checked_in": "checked_in 0",
                                    "watching": "watching 0",
                                    "rsvp": {
                                      "response": "response 0",
                                      "guests": "guests 0",
                                      "answers": "answers 0"
                                    },
                                    "role": "role 0",
                                    "rated": 0,
                                    "actions": "actions 0",
                                    "pay_status": "pay_status 0"
                                  },
                                  "featured": "featured 0",
                                  "rsvpable": "rsvpable 0",
                                  "publish_status": "publish_status 0",
                                  "email_reminders": "email_reminders 0",
                                  "rsvp_rules": {
                                    "open_time": "open_time 0",
                                    "waitlisting": "waitlisting 0",
                                    "close_time": "close_time 0",
                                    "guest_limit": "guest_limit 0",
                                    "closed": "closed 0",
                                    "refund_policy": {
                                      "days": "days 0",
                                      "notes": 0,
                                      "policies": "policies 0"
                                    }
                                  },
                                  "id": 0,
                                  "timezone": "timezone 0",
                                  "time": 0,
                                  "distance": 1.0,
                                  "venue_visibility": "venue_visibility 0",
                                  "yes_rsvp_count": 0,
                                  "updated": 0,
                                  "created": 0,
                                  "description": "description 0",
                                  "survey_questions": {
                                    "id": 0,
                                    "question": "question 0",
                                    "required": "required 0"
                                  },
                                  "headcount": "headcount 0",
                                  "name": "name 0",
                                  "photo_album_id": 0,
                                  "rsvp_alerts": "rsvp_alerts 0",
                                  "photo_count": 0,
                                  "comment_count": 0,
                                  "rsvp_limit": "rsvp_limit 0",
                                  "trending_rank": "trending_rank 0",
                                  "status": "status 0",
                                  "maybe_rsvp_count": 0,
                                  "photo_url": "photo_url 0",
                                  "venue": {
                                    "id": 0,
                                    "zip": "zip 0",
                                    "phone": 0,
                                    "lon": 1.0,
                                    "repinned": "repinned 0",
                                    "address_3": "address_3 0",
                                    "name": "name 0",
                                    "state": 0,
                                    "address_1": "address_1 0",
                                    "address_2": "address_2 0",
                                    "lat": 1.0,
                                    "country": "country 0",
                                    "city": "city 0"
                                  },
                                  "short_link": "short_link 0",
                                  "event_hosts": {
                                    "member_name": "member_name 0",
                                    "member_id": 0
                                  },
                                  "utc_offset": 0,
                                  "fee": {
                                    "amount": "amount 0",
                                    "description": "description 0",
                                    "label": 0,
                                    "required": "required 0",
                                    "accepts": "accepts 0",
                                    "currency": "currency 0"
                                  },
                                  "duration": 0,
                                  "announced": "announced 0",
                                  "event_url": "event_url 0",
                                  "how_to_find_us": "how_to_find_us 0",
                                  "rating": {
                                    "count": 0,
                                    "average": "average 0"
                                  },
                                  "group": {
                                    "id": 0,
                                    "topics": {
                                      "id": 0,
                                      "urlkey": "urlkey 0",
                                      "name": "name 0"
                                    },
                                    "category": {
                                      "id": 0,
                                      "name": "name 0",
                                      "shortname": "shortname 0"
                                    },
                                    "group_photo": {
                                      "photo_link": "photo_link 0",
                                      "highres_link": "highres_link 0",
                                      "thumb_link": "thumb_link 0",
                                      "photo_id": 0
                                    },
                                    "group_lat": "group_lat 0",
                                    "name": "name 0",
                                    "group_lon": "group_lon 0",
                                    "membership_dues": {
                                      "methods": "methods 0",
                                      "fee": "fee 0",
                                      "required": "required 0",
                                      "fee_desc": "fee_desc 0",
                                      "refund_policy": "refund_policy 0",
                                      "currency": "currency 0"
                                    },
                                    "join_mode": "join_mode 0",
                                    "urlname": "urlname 0",
                                    "who": "who 0"
                                  },
                                  "simple_html_description": "simple_html_description 0",
                                  "why": "why 0"
                                },
                                {
                                  "visibility": "visibility 1",
                                  "is_simplehtml": "is_simplehtml 1",
                                  "self": {
                                    "checked_in": "checked_in 1",
                                    "watching": "watching 1",
                                    "rsvp": {
                                      "response": "response 1",
                                      "guests": "guests 1",
                                      "answers": "answers 1"
                                    },
                                    "role": "role 1",
                                    "rated": 1,
                                    "actions": "actions 1",
                                    "pay_status": "pay_status 1"
                                  },
                                  "featured": "featured 1",
                                  "rsvpable": "rsvpable 1",
                                  "publish_status": "publish_status 1",
                                  "email_reminders": "email_reminders 1",
                                  "rsvp_rules": {
                                    "open_time": "open_time 1",
                                    "waitlisting": "waitlisting 1",
                                    "close_time": "close_time 1",
                                    "guest_limit": "guest_limit 1",
                                    "closed": "closed 1",
                                    "refund_policy": {
                                      "days": "days 1",
                                      "notes": 1,
                                      "policies": "policies 1"
                                    }
                                  },
                                  "id": 1,
                                  "timezone": "timezone 1",
                                  "time": 1,
                                  "distance": 1.0,
                                  "venue_visibility": "venue_visibility 1",
                                  "yes_rsvp_count": 1,
                                  "updated": 1,
                                  "created": 1,
                                  "description": "description 1",
                                  "survey_questions": {
                                    "id": 1,
                                    "question": "question 1",
                                    "required": "required 1"
                                  },
                                  "headcount": "headcount 1",
                                  "name": "name 1",
                                  "photo_album_id": 1,
                                  "rsvp_alerts": "rsvp_alerts 1",
                                  "photo_count": 1,
                                  "comment_count": 1,
                                  "rsvp_limit": "rsvp_limit 1",
                                  "trending_rank": "trending_rank 1",
                                  "status": "status 1",
                                  "maybe_rsvp_count": 1,
                                  "photo_url": "photo_url 1",
                                  "venue": {
                                    "id": 1,
                                    "zip": "zip 1",
                                    "phone": 1,
                                    "lon": 1.0,
                                    "repinned": "repinned 1",
                                    "address_3": "address_3 1",
                                    "name": "name 1",
                                    "state": 1,
                                    "address_1": "address_1 1",
                                    "address_2": "address_2 1",
                                    "lat": 1.0,
                                    "country": "country 1",
                                    "city": "city 1"
                                  },
                                  "short_link": "short_link 1",
                                  "event_hosts": {
                                    "member_name": "member_name 1",
                                    "member_id": 1
                                  },
                                  "utc_offset": 1,
                                  "fee": {
                                    "amount": "amount 1",
                                    "description": "description 1",
                                    "label": 1,
                                    "required": "required 1",
                                    "accepts": "accepts 1",
                                    "currency": "currency 1"
                                  },
                                  "duration": 1,
                                  "announced": "announced 1",
                                  "event_url": "event_url 1",
                                  "how_to_find_us": "how_to_find_us 1",
                                  "rating": {
                                    "count": 1,
                                    "average": "average 1"
                                  },
                                  "group": {
                                    "id": 1,
                                    "topics": {
                                      "id": 1,
                                      "urlkey": "urlkey 1",
                                      "name": "name 1"
                                    },
                                    "category": {
                                      "id": 1,
                                      "name": "name 1",
                                      "shortname": "shortname 1"
                                    },
                                    "group_photo": {
                                      "photo_link": "photo_link 1",
                                      "highres_link": "highres_link 1",
                                      "thumb_link": "thumb_link 1",
                                      "photo_id": 1
                                    },
                                    "group_lat": "group_lat 1",
                                    "name": "name 1",
                                    "group_lon": "group_lon 1",
                                    "membership_dues": {
                                      "methods": "methods 1",
                                      "fee": "fee 1",
                                      "required": "required 1",
                                      "fee_desc": "fee_desc 1",
                                      "refund_policy": "refund_policy 1",
                                      "currency": "currency 1"
                                    },
                                    "join_mode": "join_mode 1",
                                    "urlname": "urlname 1",
                                    "who": "who 1"
                                  },
                                  "simple_html_description": "simple_html_description 1",
                                  "why": "why 1"
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/2/rsvps: 
    displayName: /2/rsvps
    get: 
        description: |
            Query for Event RSVPs by event
            
            #Request Parameters
            At least one of the required parameter(s) must be supplied with the request.
        queryParameters: 
            event_id: 
                description: Multiple alphanumeric ids may be separated with commas
                type: string
                required: false
                repeat: false
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            fields: 
                description: Parameter for requesting optional response properties, set to other_services for a list of third party services
                type: string
                required: false
                repeat: false
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            rsvp: 
                description: |
                    Filters response on RSVP status. "yes" if member RSVP'd yes otherwise "no"
                type: string
                required: false
                repeat: false
            order: 
                description: |
                    |value|description|
                    |-|
                    |event|the id or time of the event|
                    |name|the name of the attendee|
                    |social|social connections of the authenticated member|
                type: string
                required: false
                repeat: false
                enum: [event, name, social]
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: |
                    If the RSVP is for a host of a repeating event that hasn't been RSVP'd to by others, the id in the response will be -1 and the mtime will be that of the recurring event
                    |||
                    |-|
                    |answers|Answers to event survey questions provided when the member RSVP'd, only available to organizers and assistant organizers|
                    |comments|The message that the member provided when RSVP was made|
                    |created|Creation time of the RSVP, in milliseconds since the epoch.|
                    |event|The event associated with the RSVP|
                    |group|Group hosting the event|
                    |guests|Number of guests the RSVP'd member will be bringing|
                    |host|Optional field, `true` if RSVP is for an event host|
                    |member|Member who RSVP'd|
                    |member_photo|The RSVPing member's photo if available|
                    |mtime|Last modified time of the RSVP, in milliseconds since the epoch.|
                    |pay_status|The RSVPer's payment status if the event has an associated fee. Returned only for organizers when 'pay_status' is requested with the fields parameter. This may be one of 'none', 'paid', 'partially_paid', 'payment_pending', 'echeck_pending', 'refund_pending', 'partially_refunded', 'refunded'.|
                    |response|"yes", "no", "waitlist" or "yes_pending_payment" which is the response returned after RSVPing "yes" to an event that requires payment.|
                    |rsvp_id|The RSVP id|
                    |venue|Venue, if selected and not hidden|
                    |watching|if the current member choose to watch and event for open spot notifications, their response will be waitlist and watching will be true|
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "member": {
                                    "member_state": "member_state 0",
                                    "member_city": "member_city 0",
                                    "bio": "bio 0",
                                    "name": "name 0",
                                    "member_country": "member_country 0",
                                    "other_services": {
                                      "[service-name]": "[service-name] 0"
                                    },
                                    "member_id": 0
                                  },
                                  "host": "host 0",
                                  "answers": "answers 0",
                                  "guests": "guests 0",
                                  "mtime": 0,
                                  "venue": {
                                    "id": 0,
                                    "zip": "zip 0",
                                    "phone": 0,
                                    "lon": 1.0,
                                    "repinned": "repinned 0",
                                    "address_3": "address_3 0",
                                    "name": "name 0",
                                    "state": 0,
                                    "address_1": "address_1 0",
                                    "address_2": "address_2 0",
                                    "lat": 1.0,
                                    "country": "country 0",
                                    "city": "city 0"
                                  },
                                  "pay_status": "pay_status 0",
                                  "response": "response 0",
                                  "member_photo": {
                                    "photo_link": "photo_link 0",
                                    "highres_link": "highres_link 0",
                                    "thumb_link": "thumb_link 0",
                                    "photo_id": 0
                                  },
                                  "watching": "watching 0",
                                  "created": 0,
                                  "event": {
                                    "id": 0,
                                    "time": 0,
                                    "event_url": "event_url 0",
                                    "name": "name 0"
                                  },
                                  "rsvp_id": 0,
                                  "group": {
                                    "id": 0,
                                    "group_lat": "group_lat 0",
                                    "name": "name 0",
                                    "group_lon": "group_lon 0",
                                    "join_mode": "join_mode 0",
                                    "urlname": "urlname 0",
                                    "who": "who 0"
                                  },
                                  "comments": "comments 0"
                                },
                                {
                                  "member": {
                                    "member_state": "member_state 1",
                                    "member_city": "member_city 1",
                                    "bio": "bio 1",
                                    "name": "name 1",
                                    "member_country": "member_country 1",
                                    "other_services": {
                                      "[service-name]": "[service-name] 1"
                                    },
                                    "member_id": 1
                                  },
                                  "host": "host 1",
                                  "answers": "answers 1",
                                  "guests": "guests 1",
                                  "mtime": 1,
                                  "venue": {
                                    "id": 1,
                                    "zip": "zip 1",
                                    "phone": 1,
                                    "lon": 1.0,
                                    "repinned": "repinned 1",
                                    "address_3": "address_3 1",
                                    "name": "name 1",
                                    "state": 1,
                                    "address_1": "address_1 1",
                                    "address_2": "address_2 1",
                                    "lat": 1.0,
                                    "country": "country 1",
                                    "city": "city 1"
                                  },
                                  "pay_status": "pay_status 1",
                                  "response": "response 1",
                                  "member_photo": {
                                    "photo_link": "photo_link 1",
                                    "highres_link": "highres_link 1",
                                    "thumb_link": "thumb_link 1",
                                    "photo_id": 1
                                  },
                                  "watching": "watching 1",
                                  "created": 1,
                                  "event": {
                                    "id": 1,
                                    "time": 1,
                                    "event_url": "event_url 1",
                                    "name": "name 1"
                                  },
                                  "rsvp_id": 1,
                                  "group": {
                                    "id": 1,
                                    "group_lat": "group_lat 1",
                                    "name": "name 1",
                                    "group_lon": "group_lon 1",
                                    "join_mode": "join_mode 1",
                                    "urlname": "urlname 1",
                                    "who": "who 1"
                                  },
                                  "comments": "comments 1"
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/ew/follows: 
    displayName: /ew/follows
    get: 
        description: |
            Community Follows Query
            
            #Request Parameters
            No parameters are required. If no parameters are provided, then all communities followed by the authenticated user will be included in the response.
        queryParameters: 
            community_id: 
                description: One or more IDs, separated by commas
                type: string
                required: false
                repeat: false
            urlname: 
                description: Up to five URL paths, separated by commas
                type: string
                required: false
                repeat: false
            fields: 
                description: Request that additional fields (separated by commas) be included in the output.
                type: string
                required: false
                repeat: false
            udf_{varname}: 
                description: User defined fields
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            container_id: 
                description: One or more IDs, separated by commas
                type: string
                required: false
                repeat: false
        responses: 
            "200": 
                description: Each item in the results list for a JSON or XML request will contain the fields listed in Community Follow Get
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "member": {
                                    "member_state": "member_state 0",
                                    "member_city": "member_city 0",
                                    "name": "name 0",
                                    "member_country": "member_country 0",
                                    "member_id": 0
                                  },
                                  "id": 0,
                                  "udf_{varname}": "udf_{varname} 0",
                                  "status": "status 0",
                                  "created": 0,
                                  "container": {
                                    "id": 0,
                                    "name": "name 0",
                                    "urlname": "urlname 0"
                                  },
                                  "community": {
                                    "id": 0,
                                    "name": "name 0",
                                    "urlname": "urlname 0"
                                  }
                                },
                                {
                                  "member": {
                                    "member_state": "member_state 1",
                                    "member_city": "member_city 1",
                                    "name": "name 1",
                                    "member_country": "member_country 1",
                                    "member_id": 1
                                  },
                                  "id": 1,
                                  "udf_{varname}": "udf_{varname} 1",
                                  "status": "status 1",
                                  "created": 1,
                                  "container": {
                                    "id": 1,
                                    "name": "name 1",
                                    "urlname": "urlname 1"
                                  },
                                  "community": {
                                    "id": 1,
                                    "name": "name 1",
                                    "urlname": "urlname 1"
                                  }
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/topics: 
    displayName: /topics
    get: 
        description: |
            API method for accessing meetup topics
            
            #Request Parameters
            At least one of the required parameter(s) must be supplied with the request.
        queryParameters: 
            member_id: 
                description: Return topics a target member is subscribed to
                type: string
                required: false
                repeat: false
            search: 
                description: Return topics related to a list of search terms [separate search keywords with +'s]
                type: string
                required: false
                repeat: false
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            name: 
                description: Return topics that match the specified name (e.g. 'Digital Photography', 'Classical Music')
                type: string
                required: false
                repeat: false
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            topic: 
                description: Return members that RSVP'd to events with these ID numbers [separated by commas]
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            order: 
                description: |
                    |value|description|
                    |-|
                    |alertees|total alertees in the topic|
                    |members|total members in the topic|
                    |name|the topic name|
                    |topic|the topic key|
                type: string
                required: false
                repeat: false
                enum: [alertees, members, name, topic]
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |description|A description of the topic|
                    |id|The ID of the topic|
                    |link|A URL of the topic's page on meetup.com updated The last date and time that this topic's information changed|
                    |members|The number of members who belong to groups under this topic|
                    |name|The name of the topic|
                    |urlkey|The unique keyword used to identify this topic|
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "id": 0,
                                  "description": "description 0",
                                  "urlkey": "urlkey 0",
                                  "name": "name 0",
                                  "link": "link 0",
                                  "members": "members 0"
                                },
                                {
                                  "id": 1,
                                  "description": "description 1",
                                  "urlkey": "urlkey 1",
                                  "name": "name 1",
                                  "link": "link 1",
                                  "members": "members 1"
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/2/event_rating: 
    displayName: /2/event_rating
    post: 
        description: |
            This method allows members to posts rating for an event after it's occurred. Only permitted for members who rsvp'd "yes" or "maybe" to the event
        queryParameters: 
            attendee_count: 
                description: The number of attendees for the event (organizers/assistant organizers/co-organizers/event organizers/event hosts only)
                type: string
                required: false
                repeat: false
            event_id: 
                description: The ID of the event to fetch ratings data for
                type: string
                required: false
                repeat: false
            rating: 
                description: The member's rating (either 1, 2, 3, 4, or 5)
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |event_id|The string ID of the event|
                    |group_id|The ID of the group|
                    |rating|The overall average rating of the event|
                    |rating_count|The number of reviews posted for the event|
                    |time|The time that the event was created|
                body: 
                    application/json: 
                        example: |
                            {
                              "time": "time",
                              "rating_count": 100,
                              "group_id": 100,
                              "event_id": 100,
                              "rating": "rating"
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/ew/follow: 
    displayName: /ew/follow
    post: 
        description: |
            Community Follow Create
            
            #Request Parameters
            at least one of the required parameter(s) must be supplied with the request. The follow is always applied for the current authenticated member. This method requires an HTTP POST.
        queryParameters: 
            community_id: 
                description: ID of the community to follow.
                type: string
                required: false
                repeat: false
            fields: 
                description: Request that additional fields (separated by commas) be included in the output.
                type: string
                required: false
                repeat: false
            udf_{varname}: 
                description: User defined fields
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
        responses: 
            "200": 
                description: |
                    When everything goes well, we'll send a 200 response code along with your data.
                    
                    JSON requests that specify a callback parameter are treated differently: the API always responds with an HTTP status of 200, so that a client browser will load the response and handle the callback. When an error occurs its corresponding status line is served in a "status" field of the error response object rather than in the response header.
            "201": 
                description: If successful, this method returns a 201 Created response with a Location header containing the Community Follow Get method for this event. The content body is the same as that returned by Community Follow Get
                body: 
                    application/json: 
                        example: |
                            {
                              "member": {
                                "member_state": "member_state",
                                "member_city": "member_city",
                                "name": "name",
                                "member_country": "member_country",
                                "member_id": 100
                              },
                              "id": 100,
                              "udf_{varname}": "udf_{varname}",
                              "status": "status",
                              "created": 100,
                              "container": {
                                "id": 100,
                                "name": "name",
                                "urlname": "urlname"
                              },
                              "community": {
                                "id": 100,
                                "name": "name",
                                "urlname": "urlname"
                              }
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
    /{id}: 
        displayName: /ew/follow/{id}
        uriParameters: 
            id: 
                description: ":id in the path should be the id of a community"
                type: string
                required: false
                repeat: false
        get: 
            description: |
                Community Follow Get
                
                #Request Parameters
                No parameters are required other than for authorization and format.
            queryParameters: 
                fields: 
                    description: Request that additional fields (separated by commas) be included in the output.
                    type: string
                    required: false
                    repeat: false
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
            responses: 
                "200": 
                    description: |
                        |||
                        |-|
                        |community|Community for this follow|
                        |container|Container for this follow|
                        |created|created time, in milliseconds since the epoch|
                        |id|The ID of the community follow|
                        |member|Member following community|
                        |status|"member" or "helper", if member has helped plan an event in the corresponding community|
                        |udf_{varname}|User defined "fields" specified in the fields parameter|
                    body: 
                        application/json: 
                            example: |
                                {
                                  "member": {
                                    "member_state": "member_state",
                                    "member_city": "member_city",
                                    "name": "name",
                                    "member_country": "member_country",
                                    "member_id": 100
                                  },
                                  "id": 100,
                                  "udf_{varname}": "udf_{varname}",
                                  "status": "status",
                                  "created": 100,
                                  "container": {
                                    "id": 100,
                                    "name": "name",
                                    "urlname": "urlname"
                                  },
                                  "community": {
                                    "id": 100,
                                    "name": "name",
                                    "urlname": "urlname"
                                  }
                                }
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
        delete: 
            description: |
                Community Unfollow
                
                #Request Parameters
                No parameters are required or considered other than for authorization and format. This method requires an HTTP DELETE.
            queryParameters: 
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
            responses: 
                "200": 
                    description: If successful, this method returns a 200 OK response. The content body includes a success message.
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
/ew/seed: 
    displayName: /ew/seed
    description: The collection of seed
    post: 
        description: |
            Event Seed Create
            For container owners. API method for creating an event to seed to all communities.
            
            #Request Parameters
            An identifier for the container is required as well as the short_description. This method requires an HTTP POST.
        queryParameters: 
            short_description: 
                description: short description of the event seed
                type: string
                required: false
                repeat: false
            local_time: 
                description: local time for event to happen globally in milliseconds since the epoch
                type: string
                required: false
                repeat: false
            description: 
                description: description of the event seed
                type: string
                required: false
                repeat: false
            urlname: 
                description: May serve as the required identifier of the event seed container
                type: string
                required: false
                repeat: false
            fields: 
                description: Request that additional fields (separated by commas) be included in the output.
                type: string
                required: false
                repeat: false
            udf_{varname}: 
                description: User defined fields
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            container_id: 
                description: May serve as the required identifier of the event seed container
                type: string
                required: false
                repeat: false
        responses: 
            "200": 
                description: |
                    When everything goes well, we'll send a 200 response code along with your data.
                    
                    JSON requests that specify a callback parameter are treated differently: the API always responds with an HTTP status of 200, so that a client browser will load the response and handle the callback. When an error occurs its corresponding status line is served in a "status" field of the error response object rather than in the response header.
            "201": 
                description: If successful, this method returns a 201 Created response with a Location header containing the Event Seed Get method for this event. The content body is the same as that returned by Event Seed Get.
                body: 
                    application/json: 
                        example: |
                            {
                              "local_time": 100,
                              "id": 100,
                              "short_description": "short_description",
                              "updated": 100,
                              "udf_{varname}": "udf_{varname}",
                              "status": "status",
                              "created": 100,
                              "description": "description",
                              "container": {
                                "id": 100,
                                "name": "name",
                                "urlname": "urlname"
                              }
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
    /{id}: 
        displayName: /ew/seed/{id}
        description: The element of collection of seed
        uriParameters: 
            id: 
                description: ":id in the path should be the id of an event seed"
                type: string
                required: false
                repeat: false
        get: 
            description: |
                Event Seed Get
                
                For container owners. API method for querying an event seeded to communities.
                
                #Request Parameters
                Normal authorization parameters are required. The output may be adjusted as normal with format, as well as a fields specifier
            queryParameters: 
                fields: 
                    description: Request that additional fields (separated by commas) be included in the output.
                    type: string
                    required: false
                    repeat: false
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
            responses: 
                "200": 
                    description: |
                        |||
                        |-|
                        |container|Container for this event seed|
                        |created|Event created time, in milliseconds since the epoch|
                        |description|description of the event seed|
                        |id|The ID of the event seed|
                        |local_time|local time for event to happen globally in milliseconds since the epoch|
                        |short_description|short description of the event seed|
                        |status|"pending", "active", or "archived"|
                        |udf_{varname}|Any User defined fields specified in the fields parameter|
                        |updated|Event updated time, in milliseconds since the epoch|
                    body: 
                        application/json: 
                            example: |
                                {
                                  "local_time": 100,
                                  "id": 100,
                                  "short_description": "short_description",
                                  "updated": 100,
                                  "udf_{varname}": "udf_{varname}",
                                  "status": "status",
                                  "created": 100,
                                  "description": "description",
                                  "container": {
                                    "id": 100,
                                    "name": "name",
                                    "urlname": "urlname"
                                  }
                                }
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
        post: 
            description: |
                Event Seed Edit
                For container owners. API method for editing events seeded to communities.
                
                #Request Parameters
                All parameters are optional, will update the event when provided. This method requires an HTTP POST.
            queryParameters: 
                short_description: 
                    description: short description of the event seed
                    type: string
                    required: false
                    repeat: false
                description: 
                    description: description of the event seed
                    type: string
                    required: false
                    repeat: false
                fields: 
                    description: Request that additional fields (separated by commas) be included in the output.
                    type: string
                    required: false
                    repeat: false
                udf_{varname}: 
                    description: User defined fields
                    type: string
                    required: false
                    repeat: false
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
            responses: 
                "200": 
                    description: If successful, this method returns a 200 OK response. The content body is the same as that returned by Event Seed Get.
                    body: 
                        application/json: 
                            example: |
                                {
                                  "local_time": 100,
                                  "id": 100,
                                  "short_description": "short_description",
                                  "updated": 100,
                                  "udf_{varname}": "udf_{varname}",
                                  "status": "status",
                                  "created": 100,
                                  "description": "description",
                                  "container": {
                                    "id": 100,
                                    "name": "name",
                                    "urlname": "urlname"
                                  }
                                }
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
        delete: 
            description: |
                Event Seed Delete
                For container owners. API method for removing all events seeded to communities.
                
                #Request Parameters
                No parameters are required or considered other than for authorization and format. This method requires an HTTP DELETE
            queryParameters: 
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
            responses: 
                "200": 
                    description: If successful, this method returns a 200 OK response. The content body includes a success message.
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
/2/topic_categories: 
    displayName: /2/topic_categories
    get: 
        description: |
            Returns a list of Meetup topic categories
            
            #Request Parameters
            No parameters required parameters
        queryParameters: 
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            lon: 
                description: Longitude to search
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            fields: 
                description: Parameter for requesting optional response properties
                type: string
                required: false
                repeat: false
            radius: 
                description: |
                    {lat,lon,radius} - Use a given lat/lon/radius (miles) to search best_topics for instead of using the member's lat/lon. When present, all three are required.
                type: string
                required: false
                repeat: false
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            lat: 
                description: Latitude to search
                type: string
                required: false
                repeat: false
            order: 
                description: |
                    |value|description|
                    |-|
                    |shortname|(default order) ascending|
                type: string
                required: false
                repeat: false
                enum: [shortname]
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |best_topics|Optional fields parameter representing the best topic matches for the category|
                    |category_ids|list of category ids associated with this topic category|
                    |name|Display name of the category|
                    |photo|A photo representing the category|
                    |shortname|String identifier of the category|
                    |topic|A topic linked to the category|
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "topic": {
                                    "id": 0,
                                    "urlkey": "urlkey 0",
                                    "name": "name 0"
                                  },
                                  "best_topics": {
                                    "id": 0,
                                    "urlkey": "urlkey 0",
                                    "name": "name 0"
                                  },
                                  "name": "name 0",
                                  "shortname": "shortname 0",
                                  "photo": {
                                    "photo_link": "photo_link 0",
                                    "highres_link": "highres_link 0",
                                    "thumb_link": "thumb_link 0",
                                    "photo_id": 0
                                  },
                                  "category_ids": "category_ids 0"
                                },
                                {
                                  "topic": {
                                    "id": 1,
                                    "urlkey": "urlkey 1",
                                    "name": "name 1"
                                  },
                                  "best_topics": {
                                    "id": 1,
                                    "urlkey": "urlkey 1",
                                    "name": "name 1"
                                  },
                                  "name": "name 1",
                                  "shortname": "shortname 1",
                                  "photo": {
                                    "photo_link": "photo_link 1",
                                    "highres_link": "highres_link 1",
                                    "thumb_link": "thumb_link 1",
                                    "photo_id": 1
                                  },
                                  "category_ids": "category_ids 1"
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/photos: 
    displayName: /photos
    get: 
        description: |
            API method for accessing meetup photos
            
            #Request Parameters
            At least one of the required parameter(s) must be supplied with the request.
        queryParameters: 
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            groupnum: 
                description: |
                    {topic, groupnum} - Return comments for the group with given topic and number
                type: string
                required: false
                repeat: false
            group_urlname: 
                description: Return comments for the group with this custom URL path
                type: string
                required: false
                repeat: false
            group_id: 
                description: Return comments in groups with these ID numbers [separated by commas]
                type: string
                required: false
                repeat: false
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            topic: 
                description: |
                    {topic, groupnum} - Return comments for the group with given topic and number
                type: string
                required: false
                repeat: false
            album_id: 
                description: return photos for the albums with the given id, separated by commas
                type: string
                required: false
                repeat: false
            topic_id: 
                description: Return photos in topics with this ID number
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            order: 
                description: |
                    |value|description|
                    |-|
                    |photo_album_id|the id of the photo, (newer = higher)|
                type: string
                required: false
                repeat: false
                enum: [photo_album_id]
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |album_id|Unique identifier of the photo album|
                    |albumtitle|The name of the photo album that the photo belongs to|
                    |captions|An array containing the captions of the photos in the album|
                    |created|The time and date that the photo was created|
                    |descr|A description of the photo|
                    |link|URL where the photo can be viewed|
                    |member_url|URL of the public profile of the member who posted the photo|
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "album_id": 0,
                                  "member_url": "member_url 0",
                                  "albumtitle": "albumtitle 0",
                                  "captions": "captions 0",
                                  "created": 0,
                                  "link": "link 0",
                                  "descr": 0
                                },
                                {
                                  "album_id": 1,
                                  "member_url": "member_url 1",
                                  "albumtitle": "albumtitle 1",
                                  "captions": "captions 1",
                                  "created": 1,
                                  "link": "link 1",
                                  "descr": 1
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/rsvp: 
    displayName: /rsvp
    post: 
        description: |
            Creates a new Rsvp
            
            #Request Parameters
            At least one of the required parameter(s) must be supplied with the request. The rsvp is recorded for the currently authenticated member account, unless a member_id is supplied. Member's RSVP'ing as themselves may supply answers to a Meetup event's survey questions by supplying answers as request parameters corresponding to question ids in the format answer_{question_id}. To discover available Meetup event survey questions, supply the Events 2 method with the 'fields' parameter set to 'survey_questions'
        queryParameters: 
            member_id: 
                description: Organizers and event hosts may RSVP on behalf of a member by specifying an ID here. As when editing RSVPs on the site, organizers may enter a "yes" for a member even if the event requires payment.
                type: string
                required: false
                repeat: false
            comments: 
                description: A comment to post along with the RSVP
                type: string
                required: false
                repeat: false
            event_id: 
                description: The event that you are RSVP'ing to
                type: string
                required: false
                repeat: false
            guests: 
                description: Number of guests also coming to the event.
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            answer_{qid}: 
                description: Answers to event survey questions. Organizers and hosts my not edit or create answers on behalf of members
                type: string
                required: false
                repeat: false
            rsvp: 
                description: The RSVP setting - value must be either "yes". "no", "waitlist" or "maybe"
                type: string
                required: false
                repeat: false
        responses: 
            "200": 
                description: For this method, response data will only consist of either a success or failure message. If the RSVP was successful, the success message will also contain the event_id of the event that was just RSVP'd to
                body: 
                    application/json: 
                        example: |
                            {
                              "lon": 1.0,
                              "link": "link",
                              "state": 100,
                              "answers": "answers",
                              "updated:": "updated:",
                              "event_id": 100,
                              "city": "city",
                              "country": "country",
                              "member_id": 100,
                              "response": "response",
                              "id": 100,
                              "created": 100,
                              "name": "name",
                              "comment": "comment",
                              "lat": 1.0
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/2/event: 
    displayName: /2/event
    description: The collection of event
    post: 
        description: |
            Event Create
            
            #Request Parameters
            All required parameters must be supplied. This method requires an HTTP POST.
            
            Survey questions may be submitted in the format "question_{index}=questiontext" where "index" is an integer representing the order the questions should be presented in. e.g. question_0=question1&question_1=question2.
            
            Organizers of the hosting group may optionally save this event as a draft by setting "publish_status" to "draft". Drafts are then queryable using the /2/events API setting the "status" request parameter to "draft"
        queryParameters: 
            rsvp_alerts: 
                description: Limited to organizers and event hosts, if false, disables member RSVP alerts
                type: string
                required: false
                repeat: false
            email_reminders: 
                description: Limited to organizers and event hosts, if false, disables event reminders
                type: string
                required: false
                repeat: false
            rsvp_limit: 
                description: Total number of RSVPs available for the event
                type: string
                required: false
                repeat: false
            rsvp_open: 
                description: Users with permission may set the RSVP open time for the event. The time may be specified in milliseconds since the epoch, or relative to the current time in the d/w/m format.
                type: string
                required: false
                repeat: false
            venue_visibility: 
                description: Controls the visibility of the event venue for non members of the hosting group. May be one of "public" or "members"
                type: string
                required: false
                repeat: false
            hosts: 
                description: Up to 5 comma-separated valid member ids to be hosts for the event. If hosts is not provided, the authorized member is the default host
                type: string
                required: false
                repeat: false
            question_{index}: 
                description: Those with permission may include up to 6 survey questions for the event. See the parameter notes section for more information
                type: string
                required: false
                repeat: false
            description: 
                description: Longer description of the event, in HTML.
                type: string
                required: false
                repeat: false
            host_instructions: 
                description: optional set of instructions to provide to hosts, only used when hosts are provided
                type: string
                required: false
                repeat: false
            why: 
                description: We should do this because...
                type: string
                required: false
                repeat: false
            how_to_find_us: 
                description: Extra tips for locating the venue
                type: string
                required: false
                repeat: false
            rsvp_close: 
                description: Users with permission may set the RSVP close time for the event. The time may be specified in milliseconds since the epoch, or relative to the current time in the d/w/m format.
                type: string
                required: false
                repeat: false
            group_urlname: 
                description: URL name of the Group hosting the event
                type: string
                required: false
                repeat: false
            duration: 
                description: Event duration in milliseconds. When not specified, a default of 3 hours may be assumed by applications. To clear event duration, set this to 0
                type: string
                required: false
                repeat: false
            group_id: 
                description: Group hosting the event
                type: string
                required: false
                repeat: false
            name: 
                description: Name of the event
                type: string
                required: false
                repeat: false
            guest_limit: 
                description: Number of guests members may include in their RSVP, 0 or more
                type: string
                required: false
                repeat: false
            waitlisting: 
                description: |
                    Waiting list status may be one of: auto, manual, off
                type: string
                required: false
                repeat: false
            simple_html_description: 
                description: Description of the event, in simple HTML format. This value is translated to HTML to update the description.
                type: string
                required: false
                repeat: false
            time: 
                description: Event start time in milliseconds since the epoch, or relative to the current time in the d/w/m format.
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            publish_status: 
                description: If you are an organizer of the group, you may set this to "draft" to save the event as a draft. Doing so will require a status=draft filter on /2/event queries.
                type: string
                required: false
                repeat: false
            venue_id: 
                description: Numeric identifier of a venue
                type: string
                required: false
                repeat: false
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                body: 
                    application/json: 
                        example: |
                            {
                              "visibility": "visibility",
                              "is_simplehtml": "is_simplehtml",
                              "self": {
                                "checked_in": "checked_in",
                                "watching": "watching",
                                "rsvp": {
                                  "response": "response",
                                  "guests": "guests",
                                  "answers": "answers"
                                },
                                "role": "role",
                                "rated": 100,
                                "actions": "actions",
                                "pay_status": "pay_status"
                              },
                              "featured": "featured",
                              "rsvpable": "rsvpable",
                              "publish_status": "publish_status",
                              "email_reminders": "email_reminders",
                              "rsvp_rules": {
                                "open_time": "open_time",
                                "waitlisting": "waitlisting",
                                "close_time": "close_time",
                                "guest_limit": "guest_limit",
                                "closed": "closed",
                                "refund_policy": {
                                  "days": "days",
                                  "notes": 100,
                                  "policies": "policies"
                                }
                              },
                              "id": 100,
                              "timezone": "timezone",
                              "time": 100,
                              "distance": 1.0,
                              "venue_visibility": "venue_visibility",
                              "yes_rsvp_count": 100,
                              "updated": 100,
                              "created": 100,
                              "description": "description",
                              "survey_questions": {
                                "id": 100,
                                "question": "question",
                                "required": "required"
                              },
                              "headcount": "headcount",
                              "name": "name",
                              "photo_album_id": 100,
                              "rsvp_alerts": "rsvp_alerts",
                              "photo_count": 100,
                              "comment_count": 100,
                              "rsvp_limit": "rsvp_limit",
                              "trending_rank": "trending_rank",
                              "status": "status",
                              "maybe_rsvp_count": 100,
                              "photo_url": "photo_url",
                              "venue": {
                                "id": 100,
                                "zip": "zip",
                                "phone": 100,
                                "lon": 1.0,
                                "repinned": "repinned",
                                "address_3": "address_3",
                                "name": "name",
                                "state": 100,
                                "address_1": "address_1",
                                "address_2": "address_2",
                                "lat": 1.0,
                                "country": "country",
                                "city": "city"
                              },
                              "short_link": "short_link",
                              "event_hosts": {
                                "member_name": "member_name",
                                "member_id": 100
                              },
                              "utc_offset": 100,
                              "fee": {
                                "amount": "amount",
                                "description": "description",
                                "label": 100,
                                "required": "required",
                                "accepts": "accepts",
                                "currency": "currency"
                              },
                              "duration": 100,
                              "announced": "announced",
                              "event_url": "event_url",
                              "how_to_find_us": "how_to_find_us",
                              "rating": {
                                "count": 100,
                                "average": "average"
                              },
                              "group": {
                                "id": 100,
                                "topics": {
                                  "id": 100,
                                  "urlkey": "urlkey",
                                  "name": "name"
                                },
                                "category": {
                                  "id": 100,
                                  "name": "name",
                                  "shortname": "shortname"
                                },
                                "group_photo": {
                                  "photo_link": "photo_link",
                                  "highres_link": "highres_link",
                                  "thumb_link": "thumb_link",
                                  "photo_id": 100
                                },
                                "group_lat": "group_lat",
                                "name": "name",
                                "group_lon": "group_lon",
                                "membership_dues": {
                                  "methods": "methods",
                                  "fee": "fee",
                                  "required": "required",
                                  "fee_desc": "fee_desc",
                                  "refund_policy": "refund_policy",
                                  "currency": "currency"
                                },
                                "join_mode": "join_mode",
                                "urlname": "urlname",
                                "who": "who"
                              },
                              "simple_html_description": "simple_html_description",
                              "why": "why"
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
    /{id}: 
        displayName: /2/event/{id}
        description: The element of collection of event
        uriParameters: 
            id: 
                description: ":id is the event identifier"
                type: string
                required: false
                repeat: false
        get: 
            description: |
                Retrieve a single meetup
                
                #Request Parameters
                Only authorization parameters are needed. Some groups, while remaining private, still wish to show some information about their events. You can include these events in results using the limited_events request parameter.
            queryParameters: 
                fields: 
                    description: Request that additional fields (separated by commas) be included in the output.
                    type: string
                    required: false
                    repeat: false
                limited_events: 
                    description: |
                        Include limited event information for private groups that wish to expose only a small amount of information about their events. This includes just: id, name, utc_offset, time, duration, yes_rsvp_count, waitlist_count, group, visibility. Value must be true or false.
                    type: string
                    required: false
                    repeat: false
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
            responses: 
                "200": 
                    description: |
                        |||
                        |-|
                        |announced|Organizers and hosts can see if the event was announced|
                        |comment_count|Optional field, number of comments posted to the event|
                        |created|UTC creation time of the event, in milliseconds since the epoch|
                        |description|Description of the event|
                        |distance|Distance in miles from the search location, if one was specified|
                        |duration|Event duration in milliseconds, if an end time is specified by the organizer. When not present, a default of 3 hours may be assumed by applications.|
                        |email_reminders|Optional fields parameter limited to organizers and event hosts, if false, event reminders are disabled|
                        |event_hosts|List of members hosting the event, only returned if requested in the fields parameter.|
                        |event_url|URL of the event's page on meetup.com|
                        |featured|Optional fields parameter which returns "true" if the event is featured and "false" otherwise|
                        |fee|Fee info returned when payment is defined|
                        |group|Group that is hosting the event|
                        |headcount|The number of members in attendance according to the attendance taker. This may be 0 if attendance has not yet been taken|
                        |how_to_find_us|The information provided by the event host for "How will members find you there?"|
                        |id|The event id. May be numeric or alphanumeric, always served as a string|
                        |is_simplehtml|Optional field, "true" when the event has been saved in a simplified HTML format, "false" otherwise.|
                        |maybe_rsvp_count|Number of maybe RSVPs including guests|
                        |name|The name of the event|
                        |photo_album_id|optional fields parameter which returns the ID of the photo album for this event, if one exists|
                        |photo_count|Optional field, number of photos posted to the event|
                        |photo_url|URL of the event photo, if one exists|
                        |publish_status|"published" or "draft" only visible to organizers|
                        |rating|Only past events have this field, an aggregate of anonymous ratings|
                        |rsvp_alerts|Optional fields parameter limited to organizers and event hosts, if false, member RSVP alerts are disabled|
                        |rsvp_limit|The number of "yes" RSVPs an event can have before members will be added to the waiting list|
                        |rsvp_rules|Conditions set by the organizer, only returned if requested in the fields parameter.|
                        |rsvpable|Indicates if the currently authenticated member can RSVP or not, only returned if requested in the fields parameter|
                        |self|Optional field with details particular to the authorized user, only present if requested and user is a member of the hosting group|
                        |short_link|Optional field. If hosting group is private, this will return the group's short_link|
                        |simple_html_description|Optional field, description of the event in simple HTML format.|
                        |status|"cancelled", "upcoming", "past", "proposed", "suggested" or "draft"|
                        |survey_questions|Optional "fields" response property for event with surveys|
                        |time|UTC start time of the event, in milliseconds since the epoch|
                        |timezone|Returned when "timezone" is provided in fields parameter. This represents the universal timezone identifier for the host group|
                        |trending_rank|Indicates the trending rank within the current result set. The best rank is zero, increasing rank values are less "trending". This value is only returned if requested in the fields parameter|
                        |updated|UTC last modified time of the event, in milliseconds since the epoch|
                        |utc_offset|The local offset from UTC time, in milliseconds|
                        |venue|Venue, if selected and not hidden|
                        |venue_visibility|Set to "members" or "public". The "venue" element will not be present if the visibility is "members" and the current authenticated user is not a member of the group hosting the event. This value is only returned if requested in the fields parameter|
                        |visibility|Event visibility: "public", "members" or "public_limited". Events in private groups that do not expose limited information are visible only to that group's members and should not be made public.|
                        |why|We should do this because...|
                        |yes_rsvp_count|Number of yes RSVPs including guests|
                    body: 
                        application/json: 
                            example: |
                                {
                                  "visibility": "visibility",
                                  "is_simplehtml": "is_simplehtml",
                                  "self": {
                                    "checked_in": "checked_in",
                                    "watching": "watching",
                                    "rsvp": {
                                      "response": "response",
                                      "guests": "guests",
                                      "answers": "answers"
                                    },
                                    "role": "role",
                                    "rated": 100,
                                    "actions": "actions",
                                    "pay_status": "pay_status"
                                  },
                                  "featured": "featured",
                                  "rsvpable": "rsvpable",
                                  "publish_status": "publish_status",
                                  "email_reminders": "email_reminders",
                                  "rsvp_rules": {
                                    "open_time": "open_time",
                                    "waitlisting": "waitlisting",
                                    "close_time": "close_time",
                                    "guest_limit": "guest_limit",
                                    "closed": "closed",
                                    "refund_policy": {
                                      "days": "days",
                                      "notes": 100,
                                      "policies": "policies"
                                    }
                                  },
                                  "id": 100,
                                  "timezone": "timezone",
                                  "time": 100,
                                  "distance": 1.0,
                                  "venue_visibility": "venue_visibility",
                                  "yes_rsvp_count": 100,
                                  "updated": 100,
                                  "created": 100,
                                  "description": "description",
                                  "survey_questions": {
                                    "id": 100,
                                    "question": "question",
                                    "required": "required"
                                  },
                                  "headcount": "headcount",
                                  "name": "name",
                                  "photo_album_id": 100,
                                  "rsvp_alerts": "rsvp_alerts",
                                  "photo_count": 100,
                                  "comment_count": 100,
                                  "rsvp_limit": "rsvp_limit",
                                  "trending_rank": "trending_rank",
                                  "status": "status",
                                  "maybe_rsvp_count": 100,
                                  "photo_url": "photo_url",
                                  "venue": {
                                    "id": 100,
                                    "zip": "zip",
                                    "phone": 100,
                                    "lon": 1.0,
                                    "repinned": "repinned",
                                    "address_3": "address_3",
                                    "name": "name",
                                    "state": 100,
                                    "address_1": "address_1",
                                    "address_2": "address_2",
                                    "lat": 1.0,
                                    "country": "country",
                                    "city": "city"
                                  },
                                  "short_link": "short_link",
                                  "event_hosts": {
                                    "member_name": "member_name",
                                    "member_id": 100
                                  },
                                  "utc_offset": 100,
                                  "fee": {
                                    "amount": "amount",
                                    "description": "description",
                                    "label": 100,
                                    "required": "required",
                                    "accepts": "accepts",
                                    "currency": "currency"
                                  },
                                  "duration": 100,
                                  "announced": "announced",
                                  "event_url": "event_url",
                                  "how_to_find_us": "how_to_find_us",
                                  "rating": {
                                    "count": 100,
                                    "average": "average"
                                  },
                                  "group": {
                                    "id": 100,
                                    "topics": {
                                      "id": 100,
                                      "urlkey": "urlkey",
                                      "name": "name"
                                    },
                                    "category": {
                                      "id": 100,
                                      "name": "name",
                                      "shortname": "shortname"
                                    },
                                    "group_photo": {
                                      "photo_link": "photo_link",
                                      "highres_link": "highres_link",
                                      "thumb_link": "thumb_link",
                                      "photo_id": 100
                                    },
                                    "group_lat": "group_lat",
                                    "name": "name",
                                    "group_lon": "group_lon",
                                    "membership_dues": {
                                      "methods": "methods",
                                      "fee": "fee",
                                      "required": "required",
                                      "fee_desc": "fee_desc",
                                      "refund_policy": "refund_policy",
                                      "currency": "currency"
                                    },
                                    "join_mode": "join_mode",
                                    "urlname": "urlname",
                                    "who": "who"
                                  },
                                  "simple_html_description": "simple_html_description",
                                  "why": "why"
                                }
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
        post: 
            description: |
                Update an existing Meetup.
                
                #Request Parameters
                All parameters are optional. This method requires an HTTP POST.
                
                If a lat & lon are provided, the event's venue will be updated accordingly.
                
                Survey questions may be submitted in the format "question_{index}=questiontext" where "index" is an integer representing the order the questions should be presented in. e.g. question_0=question1&question_1=question2.
                
                To view existing survey questions supply the request parameter fields=survey_questions with the Event Get To edit questions you may submit questions in the format "question_edit_{id}=updatedquestion" where id is the id of the question. To clear an existing question for the event survey, just submit question_edit_{id} with an empty value.
                
                Organizers may publish a draft event by posting with the "publish_status" request parameter set to "published". Organizers and hosts of the event may also optionally announce an unannounced event by posting with the "announce" request parameter set to "true"
            queryParameters: 
                rsvp_limit: 
                    description: Total number of RSVPs available for the event
                    type: string
                    required: false
                    repeat: false
                rsvp_open: 
                    description: Users with permission may set the RSVP open time for the event. The time may be specified in milliseconds since the epoch, or relative to the current time in the d/w/m format.
                    type: string
                    required: false
                    repeat: false
                venue_visibility: 
                    description: Controls the visibility of the event venue for non members of the hosting group. May be one of "public" or "members"
                    type: string
                    required: false
                    repeat: false
                description: 
                    description: Longer description of the event, in HTML.
                    type: string
                    required: false
                    repeat: false
                host_instructions: 
                    description: optional set of instructions to provide to hosts, only used when hosts are provided
                    type: string
                    required: false
                    repeat: false
                why: 
                    description: We should do this because...
                    type: string
                    required: false
                    repeat: false
                lon: 
                    description: Longitude to search
                    type: string
                    required: false
                    repeat: false
                rsvp_close: 
                    description: Users with permission may set the RSVP close time for the event. The time may be specified in milliseconds since the epoch, or relative to the current time in the d/w/m format.
                    type: string
                    required: false
                    repeat: false
                announce_message: 
                    description: Organizers and hosts may provide an optional message in this field when announcing a Meetup
                    type: string
                    required: false
                    repeat: false
                guest_limit: 
                    description: Number of guests members may include in their RSVP, 0 or more
                    type: string
                    required: false
                    repeat: false
                question_edit_{id}: 
                    description: Those with permission may include up to 6 survey questions, including new questions. To delete a question submit this parameter with an empty value
                    type: string
                    required: false
                    repeat: false
                simple_html_description: 
                    description: Description of the event, in simple HTML format. This value is translated to HTML to update the description.
                    type: string
                    required: false
                    repeat: false
                lat: 
                    description: Latitude to search
                    type: string
                    required: false
                    repeat: false
                publish_status: 
                    description: If you are an organizer of the group, you may set this to "draft" to save the event as a draft. Doing so will require a status=draft filter on /2/event queries.
                    type: string
                    required: false
                    repeat: false
                venue_id: 
                    description: Numeric identifier of a venue
                    type: string
                    required: false
                    repeat: false
                rsvp_alerts: 
                    description: Limited to organizers and event hosts, if false, disables member RSVP alerts
                    type: string
                    required: false
                    repeat: false
                email_reminders: 
                    description: Limited to organizers and event hosts, if false, disables event reminders
                    type: string
                    required: false
                    repeat: false
                hosts: 
                    description: Up to 5 comma-separated valid member ids to be hosts for the event. If hosts is not provided, the authorized member is the default host
                    type: string
                    required: false
                    repeat: false
                question_{index}: 
                    description: Those with permission may include up to 6 survey questions for the event. See the parameter notes section for more information
                    type: string
                    required: false
                    repeat: false
                how_to_find_us: 
                    description: Extra tips for locating the venue
                    type: string
                    required: false
                    repeat: false
                announce: 
                    description: Organizers and hosts may set this to true to announce a Meetup.
                    type: string
                    required: false
                    repeat: false
                group_id: 
                    description: Group hosting the event
                    type: string
                    required: false
                    repeat: false
                name: 
                    description: Name of the event
                    type: string
                    required: false
                    repeat: false
                waitlisting: 
                    description: |
                        Waiting list status may be one of: auto, manual, off
                    type: string
                    required: false
                    repeat: false
                time: 
                    description: Event start time in milliseconds since the epoch, or relative to the current time in the d/w/m format.
                    type: string
                    required: false
                    repeat: false
            responses: 
                "200": 
                    description: |
                        |||
                        |-|
                    body: 
                        application/json: 
                            example: |
                                {
                                  "visibility": "visibility",
                                  "is_simplehtml": "is_simplehtml",
                                  "self": {
                                    "checked_in": "checked_in",
                                    "watching": "watching",
                                    "rsvp": {
                                      "response": "response",
                                      "guests": "guests",
                                      "answers": "answers"
                                    },
                                    "role": "role",
                                    "rated": 100,
                                    "actions": "actions",
                                    "pay_status": "pay_status"
                                  },
                                  "featured": "featured",
                                  "rsvpable": "rsvpable",
                                  "publish_status": "publish_status",
                                  "email_reminders": "email_reminders",
                                  "rsvp_rules": {
                                    "open_time": "open_time",
                                    "waitlisting": "waitlisting",
                                    "close_time": "close_time",
                                    "guest_limit": "guest_limit",
                                    "closed": "closed",
                                    "refund_policy": {
                                      "days": "days",
                                      "notes": 100,
                                      "policies": "policies"
                                    }
                                  },
                                  "id": 100,
                                  "timezone": "timezone",
                                  "time": 100,
                                  "distance": 1.0,
                                  "venue_visibility": "venue_visibility",
                                  "yes_rsvp_count": 100,
                                  "updated": 100,
                                  "created": 100,
                                  "description": "description",
                                  "survey_questions": {
                                    "id": 100,
                                    "question": "question",
                                    "required": "required"
                                  },
                                  "headcount": "headcount",
                                  "name": "name",
                                  "photo_album_id": 100,
                                  "rsvp_alerts": "rsvp_alerts",
                                  "photo_count": 100,
                                  "comment_count": 100,
                                  "rsvp_limit": "rsvp_limit",
                                  "trending_rank": "trending_rank",
                                  "status": "status",
                                  "maybe_rsvp_count": 100,
                                  "photo_url": "photo_url",
                                  "venue": {
                                    "id": 100,
                                    "zip": "zip",
                                    "phone": 100,
                                    "lon": 1.0,
                                    "repinned": "repinned",
                                    "address_3": "address_3",
                                    "name": "name",
                                    "state": 100,
                                    "address_1": "address_1",
                                    "address_2": "address_2",
                                    "lat": 1.0,
                                    "country": "country",
                                    "city": "city"
                                  },
                                  "short_link": "short_link",
                                  "event_hosts": {
                                    "member_name": "member_name",
                                    "member_id": 100
                                  },
                                  "utc_offset": 100,
                                  "fee": {
                                    "amount": "amount",
                                    "description": "description",
                                    "label": 100,
                                    "required": "required",
                                    "accepts": "accepts",
                                    "currency": "currency"
                                  },
                                  "duration": 100,
                                  "announced": "announced",
                                  "event_url": "event_url",
                                  "how_to_find_us": "how_to_find_us",
                                  "rating": {
                                    "count": 100,
                                    "average": "average"
                                  },
                                  "group": {
                                    "id": 100,
                                    "topics": {
                                      "id": 100,
                                      "urlkey": "urlkey",
                                      "name": "name"
                                    },
                                    "category": {
                                      "id": 100,
                                      "name": "name",
                                      "shortname": "shortname"
                                    },
                                    "group_photo": {
                                      "photo_link": "photo_link",
                                      "highres_link": "highres_link",
                                      "thumb_link": "thumb_link",
                                      "photo_id": 100
                                    },
                                    "group_lat": "group_lat",
                                    "name": "name",
                                    "group_lon": "group_lon",
                                    "membership_dues": {
                                      "methods": "methods",
                                      "fee": "fee",
                                      "required": "required",
                                      "fee_desc": "fee_desc",
                                      "refund_policy": "refund_policy",
                                      "currency": "currency"
                                    },
                                    "join_mode": "join_mode",
                                    "urlname": "urlname",
                                    "who": "who"
                                  },
                                  "simple_html_description": "simple_html_description",
                                  "why": "why"
                                }
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
        delete: 
            description: |
                Deletes a specified meetup
                
                #Request Parameters
                Only authorization parameters are needed.
            responses: 
                "200": 
                    description: Returns an HTTP 200 response if delete was successful.
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: Returns an HTTP 401 response if unauthorized.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
/2/group_photo: 
    displayName: /2/group_photo
    post: 
        description: |
            Uploads a new Meetup Group photo. To change other Group settings use the Group Edit endpoint
            
            #Request Parameters
            The request must be a POST of content-type multipart/form-data. The supplied photo will be added to the provided groups general photo album. If authenticating with OAuth, no parameters in the multipart form data should be included in the signature base string. You must be an organizer of the group in order to load a photo.
        queryParameters: 
            group_id: 
                description: Group ID for the target group. This may be used as an alternative to group_urlname
                type: string
                required: false
                repeat: false
            await: 
                description: If true, this ensures a response will not be returned until the upload is accessible
                type: string
                required: false
                repeat: false
            photo: 
                description: The photo, encoded as multipart/form-data. The maximum file size allowed is 10MB
                type: string
                required: false
                repeat: false
            main: 
                description: Set to 'true' to have this photo become the group's main photo. Set it to 'false' otherwise. Defaults to true
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            group_urlname: 
                description: Group urlname. This may be used as an alternative to group_id
                type: string
                required: false
                repeat: false
        responses: 
            "200": 
                description: |
                    When everything goes well, we'll send a 200 response code along with your data.
                    
                    JSON requests that specify a callback parameter are treated differently: the API always responds with an HTTP status of 200, so that a client browser will load the response and handle the callback. When an error occurs its corresponding status line is served in a "status" field of the error response object rather than in the response header.
            "201": 
                description: |
                    When successful, this method responds with a status of "201 Created" and a Location header with the uploaded photo's URL. The response body contains the following elements in JSON or XML. Upon recieving the response, some photos may not be immediately accesible. If this is desirable, use the "await" request parameter
                    |||
                    |-|
                    |group_photo_id|Unique identifier of this photo|
                    |photo_url|Link to the uploaded group photo (same as in the Location header).|
                    |title|Request Completed|
                body: 
                    application/json: 
                        example: |
                            {
                              "title": 100,
                              "group_photo_id": 100,
                              "photo_url": "photo_url"
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/2/member_photo: 
    displayName: /2/member_photo
    post: 
        description: |
            Uploads a photo to be assocated with a Member
            
            #Request Parameters
            The request must be a POST of content-type multipart/form-data. The supplied photo will be added to the currently authenticated user's member profile. If authenticating with OAuth, no parameters in the multipart form data should be included in the signature base string.
        queryParameters: 
            sync_photo: 
                description: When set to true, this parameter will sync all of the group profile photos for the member with the provided photo_id
                type: string
                required: false
                repeat: false
            await: 
                description: If true, this ensures a response will not be returned until the upload is accessible
                type: string
                required: false
                repeat: false
            photo: 
                description: The photo, encoded as multipart/form-data. The maximum file size allowed is 10MB
                type: string
                required: false
                repeat: false
            main: 
                description: |
                    Set to "true" to have this photo become the member's main profile photo. Otherwise, it will become the main photo only when none other is selected
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
        responses: 
            "200": 
                description: |
                    When everything goes well, we'll send a 200 response code along with your data.
                    
                    JSON requests that specify a callback parameter are treated differently: the API always responds with an HTTP status of 200, so that a client browser will load the response and handle the callback. When an error occurs its corresponding status line is served in a "status" field of the error response object rather than in the response header.
            "201": 
                description: |
                    When successful, this method responds with a status of "201 Created" and a Location header with the uploaded photo's URL. The response body contains the following elements in JSON or XML. Upon recieving the response, some photos may not be immediately accesible. If this is desirable, use the "await" request parameter
                    |||
                    |-|
                    |member_photo_id|Unique identifier of this photo|
                    |photo_url|Link to the uploaded member photo (same as in the Location header).|
                    |title|Request Completed|
                body: 
                    application/json: 
                        example: |
                            {
                              "title": 100,
                              "photo_url": "photo_url",
                              "member_photo_id": 100
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
    /{id}: 
        displayName: /2/member_photo/{id}
        uriParameters: 
            id: 
                description: ":id is a photo identifier"
                type: string
                required: false
                repeat: false
        delete: 
            description: |
                Delete the specified member photo
                
                #Request Parameters
                Only authorization parameters are needed. Authorized user must be the member owning the photo
            queryParameters: 
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
            responses: 
                "200": 
                    description: Returns an HTTP 200 response if delete was successful.
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: Returns an HTTP 401 response if unauthorized.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
/batch: 
    displayName: /batch
    post: 
        description: |
            Performs multiple API requests in batch, useful for reducing HTTP network requests. This method is only available for OAuth authentication
            
            #Request Parameters
            You may supply up to 10 API requests in one batch request using the required "requests" parameter. Each of these individual batched requests will be tallied separately the same way they would when making individual requests. The batch request itself will not be tallied. As such, batch requests can not be rate limited. The only failures that you should account for are an authentication failure or a malformed JSON encoding of requests provided with the "requests" parameter.
            
            #Composing batch requests
            Requests should be provided within a JSON-encoded array in the following format attached the requests parameter within a POST body
              
             <pre><code>[{
               "path": "/2/member/self",
               "ref":  "me",
               "params": {
                 "only": "name,id"
               }
             }]</code></pre>
            
            Only "path" is required. "path" represents the API path for the method. "ref" provides a way to tag a request in a batch with a label that you can associated with its response in the body of the batch response. This will default to the provided "path". You may also supply a "params" key with a JSON object representing the parameters provided for the request. At this time only HTTP GET requests are supported. In the future we may also support POST and DELETE requests. When that happens you may indicate the HTTP method with the "method" key which may be one of "GET", "POST", or "DELETE". For now you may omit "method" as it will always be "GET" until other HTTP methods are supported.
            
            #Interpreting batch responses
            A response to a batch request will be in the format
            
            <pre><code>[{
               "path": "/2/member/self"
               "status": 200,
               "ref": "me",
               "body": {
                 "id": 1234,
                 "name": "Noah"
               },
               "headers": {
                 "key": "value"
                }
             }]</code></pre>
            
            "path" is the path of the method invoked. "status" represents the HTTP status code returned for the request. "ref" is the name provided for the inbound request. "body" is the JSON-encoded response from the given API request. "headers" is a JSON-encoded object representing the headers returned for that request. These requests may fail the same way they would when making individual requests. The response will indicate these failures.
            
            In order to preserve server resources and return batch responses within a reasonable amount of time, individual requests may will timeout if a response is not computed within a reasonable amount of time. This allows for some requests to fail and others to pass which is a nicer alternative to an all or nothing response timeout. A timed out request can be identified by inspecting its response's "status" field for a value of 504. A timed out response may look like.
            
            <pre><code>[{
               "status" : 504,
               "body" : {
                "errors" : [{"code": "request_timeout", "message":"request timed out"}]
               },
               "headers" : { ... },
               "path" : "/end/point",
               "ref" : "request_ref"
             }]</code></pre>
        queryParameters: 
            requests: 
                description: JSON-encoding of multiple request objects as described in the parameter notes
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
        body: 
            application/json: 
                schema: ""
                example: |
                    [ {
                        "path" : "/2/member/self"
                    }, {
                        "path" : "/2/events",
                        "params" : {
                            "member_id" : "self",
                            "rsvp" : "yes",
                            "only" : "name,time"
                        }
                    } ]
        responses: 
            "200": 
                description: |
                    The response will be a JSON-encoded array of responses to requests defined in the batch request
                body: 
                    application/json: 
                        example: |
                            [{
                               "path": "/2/member/self",
                               "status": 200,
                               "ref": "me",
                               "body": {
                                 "id": 1234,
                                 "name": "Noah"
                               },
                               "headers": {
                                 "key": "value"
                               }
                            }]
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/2/profiles: 
    displayName: /2/profiles
    get: 
        description: |
            This method returns member profiles associated with a particular group. Meetup members have separate profiles for each group they join.
            
            #Request Parameters
            At least one of the required parameter(s) must be supplied with the request. If any of the groups you specify are private, you will not see its members listed in the result set unless you are a member of that group. If querying for member_id alone, the member's 'hide groups' preference will be honored. 'Interesting' ordered searches only support searching by group_urlname or group_id. Only one of those may be supplied.
        queryParameters: 
            member_id: 
                description: Return comments for the given member_ids, separated by commas
                type: string
                required: false
                repeat: false
            role: 
                description: if "leads", only profiles for members of the leadership team are included
                type: string
                required: false
                repeat: false
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            groupnum: 
                description: |
                    {topic, groupnum} - Group identification by topic, deprecated
                type: string
                required: false
                repeat: false
            group_urlname: 
                description: Return profiles for the group with the given custom URL path
                type: string
                required: false
                repeat: false
            group_id: 
                description: Return comments in groups with these ID numbers, separated by commas
                type: string
                required: false
                repeat: false
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            topic: 
                description: |
                    {topic, groupnum} - Group identification by topic, deprecated
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            fields: 
                description: comma delimited list of optional response properties. A value of "membership_dues" will populate membership dues for the authorized user or members of the groups the authorized user organizes
                type: string
                required: false
                repeat: false
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            status: 
                description: Status filter for members. Only organizers may see pending. Request must also contain a `group_id` or `group_urlname`. Status may be one of active, pending
                type: string
                required: false
                repeat: false
            order: 
                description: |
                    |value|description|
                    |-|
                    |interesting|Order which may be interesting to the authorized member|
                    |joined|time member joined this group|
                    |member_id|the id of the member|
                    |name|the name of the member|
                    |updated|profile updated field|
                    |visited|last visit to group pages (default order)|
                type: string
                required: false
                repeat: false
                enum: [interesting, joined, member_id, name, updated, visited]
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |additional|Additional information supplied by the member|
                    |answers|Answers to group profile questions. Unanswered questions will be returned without an answer property if "empty_answers" is provided as a "fields" property value|
                    |attendance_count|Optional fields property representing number of times the member has attended a Meetup in the associated group.|
                    |bio|Member's 'introduction' to the group|
                    |comment|What this member says about this group|
                    |created, updated|When this member profile was created and last updated, in milliseconds since the epoch.|
                    |group|The group this profile belongs to|
                    |member_city|Optional fields parameter for the Member's city|
                    |member_country|Optional fields parameter for the Member's country code|
                    |member_id|The member's id|
                    |member_state|Optional fields parameter for the Member's state (when country is us)|
                    |membership_dues|Optional fields parameter for the last payment received for the Group's membership dues and optionally, the status of the member's dues for the current billing period if the group has set up recurring membership dues payments. This field is only visible only to the organizer of the group and to the member themselves. Members can not see other member's membership dues|
                    |name|The member's name|
                    |other_services|Third-party services associated with the member account|
                    |photo|The member's photo if available|
                    |photo_url|Link to the group profile photo of the member|
                    |profile_url|Link to the member's group profile page|
                    |role|If applicable, the member's role in the group (Organizer, Assistant Organizer, Co-organizer, or Event Organizer)|
                    |site_url, site_name|External site listed by the member|
                    |status|Value may be one of pending_payment, blocked, active, pending|
                    |title|Title assigned to the member in this group|
                    |visited|Member's last visit to the group site, in milliseconds since the epoch|
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "profile_url": "profile_url 0",
                                  "status": "status 0",
                                  "photo_url": "photo_url 0",
                                  "answers": {
                                    "answer": "answer 0",
                                    "question": "question 0",
                                    "question_id": 0
                                  },
                                  "member_country": "member_country 0",
                                  "membership_dues": {
                                    "total_amount": "total_amount 0",
                                    "transaction_time": 0,
                                    "period_status": "period_status 0"
                                  },
                                  "site_name": "site_name 0",
                                  "photo": {
                                    "photo_link": "photo_link 0",
                                    "highres_link": "highres_link 0",
                                    "thumb_link": "thumb_link 0",
                                    "photo_id": 0
                                  },
                                  "attendance_count": 0,
                                  "member_id": 0,
                                  "visited": 0,
                                  "title": 0,
                                  "member_city": "member_city 0",
                                  "member_state": "member_state 0",
                                  "bio": "bio 0",
                                  "additional": "additional 0",
                                  "created": 0,
                                  "updated": 0,
                                  "name": "name 0",
                                  "role": "role 0",
                                  "comment": "comment 0",
                                  "group": {
                                    "id": 0,
                                    "group_lat": "group_lat 0",
                                    "name": "name 0",
                                    "group_lon": "group_lon 0",
                                    "join_mode": "join_mode 0",
                                    "urlname": "urlname 0",
                                    "who": "who 0"
                                  },
                                  "other_services": {
                                    "[service-name]": {
                                      "identifier": "identifier 0"
                                    }
                                  },
                                  "site_url": "site_url 0"
                                },
                                {
                                  "profile_url": "profile_url 1",
                                  "status": "status 1",
                                  "photo_url": "photo_url 1",
                                  "answers": {
                                    "answer": "answer 1",
                                    "question": "question 1",
                                    "question_id": 1
                                  },
                                  "member_country": "member_country 1",
                                  "membership_dues": {
                                    "total_amount": "total_amount 1",
                                    "transaction_time": 1,
                                    "period_status": "period_status 1"
                                  },
                                  "site_name": "site_name 1",
                                  "photo": {
                                    "photo_link": "photo_link 1",
                                    "highres_link": "highres_link 1",
                                    "thumb_link": "thumb_link 1",
                                    "photo_id": 1
                                  },
                                  "attendance_count": 1,
                                  "member_id": 1,
                                  "visited": 1,
                                  "title": 1,
                                  "member_city": "member_city 1",
                                  "member_state": "member_state 1",
                                  "bio": "bio 1",
                                  "additional": "additional 1",
                                  "created": 1,
                                  "updated": 1,
                                  "name": "name 1",
                                  "role": "role 1",
                                  "comment": "comment 1",
                                  "group": {
                                    "id": 1,
                                    "group_lat": "group_lat 1",
                                    "name": "name 1",
                                    "group_lon": "group_lon 1",
                                    "join_mode": "join_mode 1",
                                    "urlname": "urlname 1",
                                    "who": "who 1"
                                  },
                                  "other_services": {
                                    "[service-name]": {
                                      "identifier": "identifier 1"
                                    }
                                  },
                                  "site_url": "site_url 1"
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/ew/followers: 
    displayName: /ew/followers
    get: 
        description: |
            Community Followers
            
            #Request Parameters
            This method requires at least one of the following parameters: "container_id", "community_id", "urlname" or "community_urlname"
        queryParameters: 
            community_urlname: 
                description: Up to five URL paths, separated by commas. "urlname" or "container_id" is also required
                type: string
                required: false
                repeat: false
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            udf_{varname}: 
                description: User defined fields
                type: string
                required: false
                repeat: false
            community_id: 
                description: One or more IDs, separated by commas
                type: string
                required: false
                repeat: false
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            urlname: 
                description: Up to five container URL names, separated by commas
                type: string
                required: false
                repeat: false
            fields: 
                description: Request that additional fields (separated by commas) be included in the output.
                type: string
                required: false
                repeat: false
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            container_id: 
                description: One or more container IDs, separated by commas
                type: string
                required: false
                repeat: false
            order: 
                description: How to order the results
                type: string
                required: false
                repeat: false
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: Each item in the results list for a JSON or XML request will contain the fields listed in Community Follow Get.
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "member": {
                                    "member_state": "member_state 0",
                                    "member_city": "member_city 0",
                                    "name": "name 0",
                                    "member_country": "member_country 0",
                                    "member_id": 0
                                  },
                                  "id": 0,
                                  "udf_{varname}": "udf_{varname} 0",
                                  "status": "status 0",
                                  "created": 0,
                                  "container": {
                                    "id": 0,
                                    "name": "name 0",
                                    "urlname": "urlname 0"
                                  },
                                  "community": {
                                    "id": 0,
                                    "name": "name 0",
                                    "urlname": "urlname 0"
                                  }
                                },
                                {
                                  "member": {
                                    "member_state": "member_state 1",
                                    "member_city": "member_city 1",
                                    "name": "name 1",
                                    "member_country": "member_country 1",
                                    "member_id": 1
                                  },
                                  "id": 1,
                                  "udf_{varname}": "udf_{varname} 1",
                                  "status": "status 1",
                                  "created": 1,
                                  "container": {
                                    "id": 1,
                                    "name": "name 1",
                                    "urlname": "urlname 1"
                                  },
                                  "community": {
                                    "id": 1,
                                    "name": "name 1",
                                    "urlname": "urlname 1"
                                  }
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/ew/comment: 
    displayName: /ew/comment
    post: 
        description: |
            Comment Create
            
            #Request Parameters
            At least one of the required parameter(s) must be supplied with the request. The comment is always entered for the current authenticated member. This method requires an HTTP POST.
        queryParameters: 
            event_id: 
                description: ID of the event to comment on
                type: string
                required: false
                repeat: false
            parent_id: 
                description: ID of parent, if threaded
                type: string
                required: false
                repeat: false
            comment: 
                description: comment content
                type: string
                required: false
                repeat: false
            fields: 
                description: Request that additional fields (separated by commas) be included in the output.
                type: string
                required: false
                repeat: false
            udf_{varname}: 
                description: User defined fields
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            order: 
                description: |
                    |value|description|
                    |-|
                    |time|Comment date and time|
                type: string
                required: false
                repeat: false
                enum: [time]
        responses: 
            "200": 
                description: |
                    When everything goes well, we'll send a 200 response code along with your data.
                    
                    JSON requests that specify a callback parameter are treated differently: the API always responds with an HTTP status of 200, so that a client browser will load the response and handle the callback. When an error occurs its corresponding status line is served in a "status" field of the error response object rather than in the response header.
            "201": 
                description: If successful, this method returns a 201 Created response with a Location header containing the Comment Get method for this event. The content body is the same as that returned by Comment Get.
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
    /{id}: 
        displayName: /ew/comment/{id}
        uriParameters: 
            id: 
                description: ":id in the path should be the id of a comment"
                type: string
                required: false
                repeat: false
        get: 
            description: |
                Comment Get
                
                #Request Parameters
                No parameters are required other than for authorization and format.
            queryParameters: 
                fields: 
                    description: Request that additional fields (separated by commas) be included in the output.
                    type: string
                    required: false
                    repeat: false
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
            responses: 
                "200": 
                    description: |
                        |||
                        |-|
                        |comment|content of the comment|
                        |created|comment created time, in milliseconds since the epoch|
                        |event_id|ID of the event|
                        |id|ID of the comment|
                        |member|Member that commented|
                        |parent_id|ID of the partent comment, if threaded|
                        |udf_{varname}|User defined fields specified in the fields parameter|
                    body: 
                        application/json: 
                            example: |
                                {
                                  "member": {
                                    "member_state": "member_state",
                                    "member_city": "member_city",
                                    "name": "name",
                                    "member_country": "member_country",
                                    "member_id": 100
                                  },
                                  "id": 100,
                                  "udf_{varname}": "udf_{varname}",
                                  "created": 100,
                                  "event_id": 100,
                                  "comment": "comment",
                                  "parent_id": 100
                                }
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
        delete: 
            description: |
                Comment Delete
                
                #Request Parameters
                No parameters are required or considered other than for authorization and format. This method requires an HTTP DELETE.
            responses: 
                "200": 
                    description: If successful, this method returns a 200 OK response. The content body includes a success message.
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
/ew/events: 
    displayName: /ew/events
    get: 
        description: |
            Event Query
            
            #Request Parameters
            At least one of the required parameter(s) must be supplied with the request.
            
            Date Formatting: Parameters for dates can be specified in absolute or relative terms. Absolute dates are specified in numbers only: MMDDYYYY. Relative dates are specified in days d, weeks w, or months m before or after today. Tomorrow is "1d", yesterday is "-1d"; three weeks from now is "3w", and six months ago is "-6m". These can be used with after and before to define a time window in a static request that advances with the actual date.
        queryParameters: 
            zip: 
                description: A US zip or Canadian postal code
                type: string
                required: false
                repeat: false
            country: 
                description: A valid country code
                type: string
                required: false
                repeat: false
            community_urlname: 
                description: Up to five URL paths, separated by commas. "urlname" or "container_id" is also required
                type: string
                required: false
                repeat: false
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            city: 
                description: A valid city
                type: string
                required: false
                repeat: false
            before: 
                description: Return events scheduled before the specified date, formatted as described below
                type: string
                required: false
                repeat: false
            lon: 
                description: Longitude to search
                type: string
                required: false
                repeat: false
            udf_{varname}: 
                description: User defined fields
                type: string
                required: false
                repeat: false
            community_id: 
                description: One or more IDs, separated by commas
                type: string
                required: false
                repeat: false
            event_id: 
                description: ID of an event
                type: string
                required: false
                repeat: false
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            after: 
                description: Return events scheduled after the specified date, formatted as described below
                type: string
                required: false
                repeat: false
            urlname: 
                description: Up to five URL paths, separated by commas
                type: string
                required: false
                repeat: false
            fields: 
                description: Request that additional fields (separated by commas) be included in the output.
                type: string
                required: false
                repeat: false
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            container_id: 
                description: One or more IDs, separated by commas
                type: string
                required: false
                repeat: false
            lat: 
                description: Latitude to search
                type: string
                required: false
                repeat: false
            status: 
                description: Return events matching one of the given status values, separated by commas. Possible statuses are "pending", "upcoming", and "past". The default status parameter is "past,pending,upcoming".
                type: string
                required: false
                repeat: false
            order: 
                description: |
                    |value|description|
                    |-|
                    |time|Event date and time|
                type: string
                required: false
                repeat: false
                enum: [time]
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: Each item in the results list for a JSON or XML request will contain the fields listed in Event Get.
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "zip": "zip 0",
                                  "lon": 1.0,
                                  "venue_name": "venue_name 0",
                                  "status": "status 0",
                                  "link": "link 0",
                                  "state": 0,
                                  "community": {
                                    "id": 0,
                                    "name": "name 0",
                                    "urlname": "urlname 0"
                                  },
                                  "address1": "address1 0",
                                  "city": "city 0",
                                  "country": "country 0",
                                  "helpers": {
                                    "member_state": "member_state 0",
                                    "member_city": "member_city 0",
                                    "name": "name 0",
                                    "member_country": "member_country 0",
                                    "member_id": 0
                                  },
                                  "id": 0,
                                  "time": 0,
                                  "short_description": "short_description 0",
                                  "updated": 0,
                                  "udf_{varname}": "udf_{varname} 0",
                                  "created": 0,
                                  "container": {
                                    "id": 0,
                                    "name": "name 0",
                                    "urlname": "urlname 0"
                                  },
                                  "description": "description 0",
                                  "rsvp_count": 0,
                                  "meetup_url": "meetup_url 0",
                                  "lat": 1.0
                                },
                                {
                                  "zip": "zip 1",
                                  "lon": 1.0,
                                  "venue_name": "venue_name 1",
                                  "status": "status 1",
                                  "link": "link 1",
                                  "state": 1,
                                  "community": {
                                    "id": 1,
                                    "name": "name 1",
                                    "urlname": "urlname 1"
                                  },
                                  "address1": "address1 1",
                                  "city": "city 1",
                                  "country": "country 1",
                                  "helpers": {
                                    "member_state": "member_state 1",
                                    "member_city": "member_city 1",
                                    "name": "name 1",
                                    "member_country": "member_country 1",
                                    "member_id": 1
                                  },
                                  "id": 1,
                                  "time": 1,
                                  "short_description": "short_description 1",
                                  "updated": 1,
                                  "udf_{varname}": "udf_{varname} 1",
                                  "created": 1,
                                  "container": {
                                    "id": 1,
                                    "name": "name 1",
                                    "urlname": "urlname 1"
                                  },
                                  "description": "description 1",
                                  "rsvp_count": 1,
                                  "meetup_url": "meetup_url 1",
                                  "lat": 1.0
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/2/event_comment_subscribe/{id}: 
    displayName: /2/event_comment_subscribe/{id}
    description: event_comment_subscribe
    uriParameters: 
        id: 
            description: ":id in the path should be the id of a comment"
            type: string
            required: false
            repeat: false
    post: 
        description: |
            Subscribe to notifications on updates to a given comment thread
            
            #Request Parameters
            Only authorization parameters are needed. :id in the path should be id of comment being replied to which you are subscribing to notifications for
        queryParameters: 
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
        responses: 
            "200": 
                description: Returns an HTTP 200 response if delete was successful.
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: Returns an HTTP 401 response if unauthorized.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
    delete: 
        description: |
            Unsubscribe to notifications for updates to a given comment thread
            
            #Request Parameters
            Only authorization parameters are needed. :id in the path should be the id of comment being replied to which you are unsubscribing to notifications from
        responses: 
            "200": 
                description: Returns an HTTP 200 response if delete was successful.
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: Returns an HTTP 401 response if unauthorized.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/2/concierge: 
    displayName: /2/concierge
    description: Concierge
    get: 
        description: |
            Recommends upcoming meetups for the authorized member.
            
            #Request Parameters
            For geo-based requests, you may provide a location in one of three ways. By lat and lon, by zip, or by country, city, and optionally a state, if the provided country has states.
            
            If the server is unable to produce recommendations in a suitable amount of time, a 503 error will be returned. If no parameters are specified, Meetups are recommended for the upcoming week in the member's default location.
            
            Pagination works a little differently in this method than in others. Rather than using "offset" and "page" request parameters, this method uses an opaque "page_token" request parameter to determine the page of results returned. If there are more results, the "next" property of the meta section of the response will contain the next page's page_token. The number of results returned is not deterministic but a best-effort attempt will be made to return at least some.
        queryParameters: 
            zip: 
                description: A valid US zip code, limits the returned groups to those within radius miles
                type: string
                required: false
                repeat: false
            country: 
                description: A valid country code
                type: string
                required: false
                repeat: false
            city: 
                description: A valid city
                type: string
                required: false
                repeat: false
            lon: 
                description: Longitude to search
                type: string
                required: false
                repeat: false
            text_format: 
                description: Format of the description text, "html", "plain", or "simplehtml". Defaults to "html"
                type: string
                required: false
                repeat: false
            category_id: 
                description: Comma delimited list of category ids to limit recommendations to
                type: string
                required: false
                repeat: false
            page_token: 
                description: An opaque string used to page through results. This can be found appended to the 'next' link in the meta section of the response.
                type: string
                required: false
                repeat: false
            state: 
                description: If searching in a country with states, a valid 2 character state code
                type: string
                required: false
                repeat: false
            time: 
                description: |
                    Return events scheduled within the given time range, defined by two times separated with a single comma. Each end of the range may be specified with relative dates, such as "1m" for one month from now, or by absolute time in milliseconds since the epoch. If an endpoint is omitted, the range is unbounded on that end. The default value is unbounded on both ends (though restricted to the search window described above). Note: to retrieve past events you must also update status value
                type: string
                required: false
                repeat: false
            topic_id: 
                description: Comma delimited list of topics to help inform recommendation
                type: string
                required: false
                repeat: false
            fields: 
                description: Request that additional fields (separated by commas) be included in the output
                type: string
                required: false
                repeat: false
            radius: 
                description: |
                    Radius, in miles for geographic requests, defaults to the member's preferred radius or 0.5 -- maximum 100. May also be specified as "smart", a dynamic radius based on the number of active groups in the area
                type: string
                required: false
                repeat: false
            self_groups: 
                description: set to "include" or "exclude" meetups the authorized member belongs to; default is "include"
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            lat: 
                description: Latitude to search
                type: string
                required: false
                repeat: false
            order: 
                description: |
                    |value|description|
                    |-|
                    |time|ascending time is the default and only ordering|
                type: string
                required: false
                repeat: false
                enum: [time]
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |announced|Organizers and hosts can see if the event was announced|
                    |comment_count|Optional field, number of comments posted to the event|
                    |created|UTC creation time of the event, in milliseconds since the epoch|
                    |description|Description of the event|
                    |distance|Distance in miles from the search location, if one was specified|
                    |duration|Event duration in milliseconds, if an end time is specified by the organizer. When not present, a default of 3 hours may be assumed by applications.|
                    |email_reminders|Optional fields parameter limited to organizers and event hosts, if false, event reminders are disabled|
                    |event_hosts|List of members hosting the event, only returned if requested in the fields parameter.|
                    |event_url|URL of the event's page on meetup.com|
                    |featured|Optional fields parameter which returns "true" if the event is featured and "false" otherwise|
                    |fee|Fee info returned when payment is defined|
                    |group|Group that is hosting the event|
                    |headcount|The number of members in attendance according to the attendance taker. This may be 0 if attendance has not yet been taken|
                    |how_to_find_us|The information provided by the event host for "How will members find you there?"|
                    |id|The event id. May be numeric or alphanumeric, always served as a string|
                    |is_simplehtml|Optional field, "true" when the event has been saved in a simplified HTML format, "false" otherwise.|
                    |maybe_rsvp_count|Number of maybe RSVPs including guests|
                    |name|The name of the event|
                    |photo_album_id|optional fields parameter which returns the ID of the photo album for this event, if one exists|
                    |photo_count|Optional field, number of photos posted to the event|
                    |photo_url|URL of the event photo, if one exists|
                    |publish_status|"published" or "draft" only visible to organizers|
                    |rating|Only past events have this field, an aggregate of anonymous ratings|
                    |rsvp_alerts|Optional fields parameter limited to organizers and event hosts, if false, member RSVP alerts are disabled|
                    |rsvp_limit|The number of "yes" RSVPs an event can have before members will be added to the waiting list|
                    |rsvp_rules|Conditions set by the organizer, only returned if requested in the fields parameter.|
                    |rsvpable|Indicates if the currently authenticated member can RSVP or not, only returned if requested in the fields parameter|
                    |self|Optional field with details particular to the authorized user, only present if requested and user is a member of the hosting group|
                    |short_link|Optional field. If hosting group is private, this will return the group's short_link|
                    |simple_html_description|Optional field, description of the event in simple HTML format.|
                    |status|"cancelled", "upcoming", "past", "proposed", "suggested" or "draft"|
                    |survey_questions|Optional "fields" response property for event with surveys|
                    |time|UTC start time of the event, in milliseconds since the epoch|
                    |timezone|Returned when "timezone" is provided in fields parameter. This represents the universal timezone identifier for the host group|
                    |trending_rank|Indicates the trending rank within the current result set. The best rank is zero, increasing rank values are less "trending". This value is only returned if requested in the fields parameter|
                    |updated|UTC last modified time of the event, in milliseconds since the epoch|
                    |utc_offset|The local offset from UTC time, in milliseconds|
                    |venue|Venue, if selected and not hidden|
                    |venue_visibility|Set to "members" or "public". The "venue" element will not be present if the visibility is "members" and the current authenticated user is not a member of the group hosting the event. This value is only returned if requested in the fields parameter|
                    |visibility|Event visibility: "public", "members" or "public_limited". Events in private groups that do not expose limited information are visible only to that group's members and should not be made public.|
                    |why|We should do this because...|
                    |yes_rsvp_count|Number of yes RSVPs including guests|
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "visibility": "visibility 0",
                                  "is_simplehtml": "is_simplehtml 0",
                                  "self": {
                                    "checked_in": "checked_in 0",
                                    "watching": "watching 0",
                                    "rsvp": {
                                      "response": "response 0",
                                      "guests": "guests 0",
                                      "answers": "answers 0"
                                    },
                                    "role": "role 0",
                                    "rated": 0,
                                    "actions": "actions 0",
                                    "pay_status": "pay_status 0"
                                  },
                                  "featured": "featured 0",
                                  "rsvpable": "rsvpable 0",
                                  "publish_status": "publish_status 0",
                                  "email_reminders": "email_reminders 0",
                                  "rsvp_rules": {
                                    "open_time": "open_time 0",
                                    "waitlisting": "waitlisting 0",
                                    "close_time": "close_time 0",
                                    "guest_limit": "guest_limit 0",
                                    "closed": "closed 0",
                                    "refund_policy": {
                                      "days": "days 0",
                                      "notes": 0,
                                      "policies": "policies 0"
                                    }
                                  },
                                  "id": 0,
                                  "timezone": "timezone 0",
                                  "time": 0,
                                  "distance": 1.0,
                                  "venue_visibility": "venue_visibility 0",
                                  "yes_rsvp_count": 0,
                                  "updated": 0,
                                  "created": 0,
                                  "description": "description 0",
                                  "survey_questions": {
                                    "id": 0,
                                    "question": "question 0",
                                    "required": "required 0"
                                  },
                                  "headcount": "headcount 0",
                                  "name": "name 0",
                                  "photo_album_id": 0,
                                  "rsvp_alerts": "rsvp_alerts 0",
                                  "photo_count": 0,
                                  "comment_count": 0,
                                  "rsvp_limit": "rsvp_limit 0",
                                  "trending_rank": "trending_rank 0",
                                  "status": "status 0",
                                  "maybe_rsvp_count": 0,
                                  "photo_url": "photo_url 0",
                                  "venue": {
                                    "id": 0,
                                    "zip": "zip 0",
                                    "phone": 0,
                                    "lon": 1.0,
                                    "repinned": "repinned 0",
                                    "address_3": "address_3 0",
                                    "name": "name 0",
                                    "state": 0,
                                    "address_1": "address_1 0",
                                    "address_2": "address_2 0",
                                    "lat": 1.0,
                                    "country": "country 0",
                                    "city": "city 0"
                                  },
                                  "short_link": "short_link 0",
                                  "event_hosts": {
                                    "member_name": "member_name 0",
                                    "member_id": 0
                                  },
                                  "utc_offset": 0,
                                  "fee": {
                                    "amount": "amount 0",
                                    "description": "description 0",
                                    "label": 0,
                                    "required": "required 0",
                                    "accepts": "accepts 0",
                                    "currency": "currency 0"
                                  },
                                  "duration": 0,
                                  "announced": "announced 0",
                                  "event_url": "event_url 0",
                                  "how_to_find_us": "how_to_find_us 0",
                                  "rating": {
                                    "count": 0,
                                    "average": "average 0"
                                  },
                                  "group": {
                                    "id": 0,
                                    "topics": {
                                      "id": 0,
                                      "urlkey": "urlkey 0",
                                      "name": "name 0"
                                    },
                                    "category": {
                                      "id": 0,
                                      "name": "name 0",
                                      "shortname": "shortname 0"
                                    },
                                    "group_photo": {
                                      "photo_link": "photo_link 0",
                                      "highres_link": "highres_link 0",
                                      "thumb_link": "thumb_link 0",
                                      "photo_id": 0
                                    },
                                    "group_lat": "group_lat 0",
                                    "name": "name 0",
                                    "group_lon": "group_lon 0",
                                    "membership_dues": {
                                      "methods": "methods 0",
                                      "fee": "fee 0",
                                      "required": "required 0",
                                      "fee_desc": "fee_desc 0",
                                      "refund_policy": "refund_policy 0",
                                      "currency": "currency 0"
                                    },
                                    "join_mode": "join_mode 0",
                                    "urlname": "urlname 0",
                                    "who": "who 0"
                                  },
                                  "simple_html_description": "simple_html_description 0",
                                  "why": "why 0"
                                },
                                {
                                  "visibility": "visibility 1",
                                  "is_simplehtml": "is_simplehtml 1",
                                  "self": {
                                    "checked_in": "checked_in 1",
                                    "watching": "watching 1",
                                    "rsvp": {
                                      "response": "response 1",
                                      "guests": "guests 1",
                                      "answers": "answers 1"
                                    },
                                    "role": "role 1",
                                    "rated": 1,
                                    "actions": "actions 1",
                                    "pay_status": "pay_status 1"
                                  },
                                  "featured": "featured 1",
                                  "rsvpable": "rsvpable 1",
                                  "publish_status": "publish_status 1",
                                  "email_reminders": "email_reminders 1",
                                  "rsvp_rules": {
                                    "open_time": "open_time 1",
                                    "waitlisting": "waitlisting 1",
                                    "close_time": "close_time 1",
                                    "guest_limit": "guest_limit 1",
                                    "closed": "closed 1",
                                    "refund_policy": {
                                      "days": "days 1",
                                      "notes": 1,
                                      "policies": "policies 1"
                                    }
                                  },
                                  "id": 1,
                                  "timezone": "timezone 1",
                                  "time": 1,
                                  "distance": 1.0,
                                  "venue_visibility": "venue_visibility 1",
                                  "yes_rsvp_count": 1,
                                  "updated": 1,
                                  "created": 1,
                                  "description": "description 1",
                                  "survey_questions": {
                                    "id": 1,
                                    "question": "question 1",
                                    "required": "required 1"
                                  },
                                  "headcount": "headcount 1",
                                  "name": "name 1",
                                  "photo_album_id": 1,
                                  "rsvp_alerts": "rsvp_alerts 1",
                                  "photo_count": 1,
                                  "comment_count": 1,
                                  "rsvp_limit": "rsvp_limit 1",
                                  "trending_rank": "trending_rank 1",
                                  "status": "status 1",
                                  "maybe_rsvp_count": 1,
                                  "photo_url": "photo_url 1",
                                  "venue": {
                                    "id": 1,
                                    "zip": "zip 1",
                                    "phone": 1,
                                    "lon": 1.0,
                                    "repinned": "repinned 1",
                                    "address_3": "address_3 1",
                                    "name": "name 1",
                                    "state": 1,
                                    "address_1": "address_1 1",
                                    "address_2": "address_2 1",
                                    "lat": 1.0,
                                    "country": "country 1",
                                    "city": "city 1"
                                  },
                                  "short_link": "short_link 1",
                                  "event_hosts": {
                                    "member_name": "member_name 1",
                                    "member_id": 1
                                  },
                                  "utc_offset": 1,
                                  "fee": {
                                    "amount": "amount 1",
                                    "description": "description 1",
                                    "label": 1,
                                    "required": "required 1",
                                    "accepts": "accepts 1",
                                    "currency": "currency 1"
                                  },
                                  "duration": 1,
                                  "announced": "announced 1",
                                  "event_url": "event_url 1",
                                  "how_to_find_us": "how_to_find_us 1",
                                  "rating": {
                                    "count": 1,
                                    "average": "average 1"
                                  },
                                  "group": {
                                    "id": 1,
                                    "topics": {
                                      "id": 1,
                                      "urlkey": "urlkey 1",
                                      "name": "name 1"
                                    },
                                    "category": {
                                      "id": 1,
                                      "name": "name 1",
                                      "shortname": "shortname 1"
                                    },
                                    "group_photo": {
                                      "photo_link": "photo_link 1",
                                      "highres_link": "highres_link 1",
                                      "thumb_link": "thumb_link 1",
                                      "photo_id": 1
                                    },
                                    "group_lat": "group_lat 1",
                                    "name": "name 1",
                                    "group_lon": "group_lon 1",
                                    "membership_dues": {
                                      "methods": "methods 1",
                                      "fee": "fee 1",
                                      "required": "required 1",
                                      "fee_desc": "fee_desc 1",
                                      "refund_policy": "refund_policy 1",
                                      "currency": "currency 1"
                                    },
                                    "join_mode": "join_mode 1",
                                    "urlname": "urlname 1",
                                    "who": "who 1"
                                  },
                                  "simple_html_description": "simple_html_description 1",
                                  "why": "why 1"
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/ew/rsvps: 
    displayName: /ew/rsvps
    get: 
        description: |
            RSVPs Query
            
            #Request Parameters
            At least one of the required parameter(s) must be supplied with the request, and multiple query values may be separated with commas.
        queryParameters: 
            member_id: 
                description: ID of a member
                type: string
                required: false
                repeat: false
            event_id: 
                description: ID of an event
                type: string
                required: false
                repeat: false
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            fields: 
                description: Request that additional fields (separated by commas) be included in the output.
                type: string
                required: false
                repeat: false
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            udf_{varname}: 
                description: User defined fields
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            order: 
                description: How to order the results
                type: string
                required: false
                repeat: false
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: Each item in the results list for a JSON or XML request will contain the fields listed in RSVP Get.
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "member": {
                                    "member_state": "member_state 0",
                                    "member_city": "member_city 0",
                                    "name": "name 0",
                                    "member_country": "member_country 0",
                                    "member_id": 0
                                  },
                                  "id": 0,
                                  "member_photo": {
                                    "photo_link": "photo_link 0",
                                    "highres_link": "highres_link 0",
                                    "thumb_link": "thumb_link 0",
                                    "photo_id": 0
                                  },
                                  "udf_{varname}": "udf_{varname} 0",
                                  "created": 0,
                                  "event_id": 0
                                },
                                {
                                  "member": {
                                    "member_state": "member_state 1",
                                    "member_city": "member_city 1",
                                    "name": "name 1",
                                    "member_country": "member_country 1",
                                    "member_id": 1
                                  },
                                  "id": 1,
                                  "member_photo": {
                                    "photo_link": "photo_link 1",
                                    "highres_link": "highres_link 1",
                                    "thumb_link": "thumb_link 1",
                                    "photo_id": 1
                                  },
                                  "udf_{varname}": "udf_{varname} 1",
                                  "created": 1,
                                  "event_id": 1
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/2/photo_comments: 
    displayName: /2/photo_comments
    get: 
        description: |
            This method returns comments on meetup photos. To post messages, see the corresponding write method
            
            #Request Parameters
            At least one of the required parameters must be supplied by the request.
        queryParameters: 
            member_id: 
                description: Return comments for the given member_ids, separated by commas. The member ids must match up with one of the provided photo ids
                type: string
                required: false
                repeat: false
            photo_id: 
                description: Return comments on these photos, separated by commas
                type: string
                required: false
                repeat: false
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            fields: 
                description: Request that additional fields (separated by commas) be included in the output.
                type: string
                required: false
                repeat: false
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            order: 
                description: |
                    |value|description|
                    |-|
                    |name|the name of the member|
                    |time|Order by the time that each comment was posted|
                type: string
                required: false
                repeat: false
                enum: [name, time]
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |comment|Text of the comment that was posted|
                    |created|The time and date that the comment was posted, in milliseconds since the epoch|
                    |member|Author of comment|
                    |member_photo|If the optional "fields" parameter contains "member_photo", the member photo associated with the comment|
                    |photo_comment_id|Unique identifier for this comment|
                    |photo_id|Photo ID where the comment was posted|
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "member": {
                                    "member_state": "member_state 0",
                                    "member_city": "member_city 0",
                                    "name": "name 0",
                                    "member_country": "member_country 0",
                                    "member_id": 0
                                  },
                                  "member_photo": {
                                    "photo_link": "photo_link 0",
                                    "hires_link": "hires_link 0",
                                    "thumb_link": "thumb_link 0",
                                    "photo_id": 0
                                  },
                                  "created": 0,
                                  "photo_comment_id": 0,
                                  "comment": "comment 0",
                                  "photo_id": 0
                                },
                                {
                                  "member": {
                                    "member_state": "member_state 1",
                                    "member_city": "member_city 1",
                                    "name": "name 1",
                                    "member_country": "member_country 1",
                                    "member_id": 1
                                  },
                                  "member_photo": {
                                    "photo_link": "photo_link 1",
                                    "hires_link": "hires_link 1",
                                    "thumb_link": "thumb_link 1",
                                    "photo_id": 1
                                  },
                                  "created": 1,
                                  "photo_comment_id": 1,
                                  "comment": "comment 1",
                                  "photo_id": 1
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/{urlname}: 
    displayName: /{urlname}
    uriParameters: 
        urlname: 
            description: ":urlname is a group name"
            type: string
            required: false
            repeat: false
    post: 
        description: |
            Allows organizers to edit their Meetup group information. To change group topics, see the add and remove topics endpoints. To change group photo use the Group photo upload endpoint
            
            #Request Parameters
            All parameters are optional.
        queryParameters: 
            zip: 
                description: The zip code of the city
                type: string
                required: false
                repeat: false
            country: 
                description: The ISO_3166-1 country code for the country which contains the city
                type: string
                required: false
                repeat: false
            list_mode: 
                description: Defines policy for who can post to the group mailing list. May be one of 'open' meaning any Member can post, 'off' meaning no one can post, 'moderated' meaning messages must be approved, or 'orgs_only' meaning only organizers may post to the list
                type: string
                required: false
                repeat: false
            dryrun: 
                description: Boolean parameter that will cause this endpoint to apply all validation rules without actually saving changes in which case the response will only reflect the group's current attributes
                type: string
                required: false
                repeat: false
            ga_code: 
                description: Google analytics code for group
                type: string
                required: false
                repeat: false
            visibility: 
                description: Restricts group visibility for non-members. May be one of 'public', 'public_limited' or 'members'. Note, the 'members' option is only available to groups that already have 'members' visibility
                type: string
                required: false
                repeat: false
            question_{index}: 
                description: A new profile question defined in the order of index provided in the request parameter name
                type: string
                required: false
                repeat: false
            photo_req: 
                description: Indicates that a member must provide a photo before joining. Expects true or false values
                type: string
                required: false
                repeat: false
            description: 
                description: Summary of what the Meetup group is about in simple HTML format
                type: string
                required: false
                repeat: false
            questions_req: 
                description: Indicates that provide questions are required before joining. Expects true or false values
                type: string
                required: false
                repeat: false
            welcome_message: 
                description: Message sent to members after they join. Can be at most 2000 characters
                type: string
                required: false
                repeat: false
            join_mode: 
                description: Controls how member's are let into the group. May be one of 'open' meaning any Meetup member my join, 'closed' meaning group is not currently accepting new members, or 'approval' meaning members must be approved by an organizer. Note, the 'closed' options is only available to groups that already have a 'closed' join_mode
                type: string
                required: false
                repeat: false
            list_addr: 
                description: Mailing list prefix. By default this is the Group's urlname.
                type: string
                required: false
                repeat: false
            "{service}_uri": 
                description: A URI for a social network service. Service must be one of facebook, flickr, linkedin, other, tumblr, twitter
                type: string
                required: false
                repeat: false
            name: 
                description: Display name of the group. Can be at most 60 characters
                type: string
                required: false
                repeat: false
            question_edit_{id}: 
                description: Edits a current profile question identified by an id in the parameter name. The index updated index should also be encoded in the parameter name
                type: string
                required: false
                repeat: false
            intro_req: 
                description: Indicates that a member must supply an introduction before joining. Expects true or false values
                type: string
                required: false
                repeat: false
            urlname: 
                description: Name used for the groups web address on meetup.com. Must be between 6 and 60 characters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            who: 
                description: What members of the group will be called. Can be at most 32 characters
                type: string
                required: false
                repeat: false
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |category|The primary category of the group, if the group has one|
                    |city|City of the group|
                    |country|Country of the group|
                    |created|Time the group was created in milliseconds since the epoch|
                    |description|Short description of group|
                    |ga_code|Optional field return the google analytics code for the group. Only members that can edit group settings can see this|
                    |group_photo|Group photo|
                    |id|Numeric group ID|
                    |is_simplehtml|Optional field, 'true' when the group description has been saved in a simplified HTML format, 'false' otherwise.|
                    |join_info|Optional field, lists any questions requested when joining and required fields|
                    |join_mode|Who can join this group and how. One of approval, closed, open|
                    |lat|Latitude|
                    |link|Link to group on meetup.com|
                    |list_addr|Optional field returning list address prefix. List mail will be {list_addr}-list@meetup.com. Announce email will be {list_addr}-announce@meetup.com. You must be a member of the group to see this|
                    |list_mode|Optional fields parameter representing the policy for who can post the the group mailing list. One of moderated, off, open, orgs_only|
                    |lon|Longitude|
                    |members|Number of Meetup members in this group|
                    |name|Name of the group|
                    |next_event|The next upcoming event, if the group has one|
                    |organizer|Group's primary organizer|
                    |photos|A small set of photos from the group|
                    |simple_html_description|Description of the group, in simple HTML format. This value is translated to HTML to update the description.|
                    |state|State of the group, if in US or Canada|
                    |timezone|This represents the universal timezone identifier for the group|
                    |urlname|Urlname used to identify the group on meetup.com|
                    |visibility|Who can see this group. One of members, public or public_limited|
                    |who|What the group calls its members|
                body: 
                    application/json: 
                        example: |
                            {
                              "visibility": "visibility",
                              "is_simplehtml": "is_simplehtml",
                              "link": "link",
                              "next_event": {
                                "id": 100,
                                "time": 100,
                                "name": "name"
                              },
                              "state": 100,
                              "join_mode": "join_mode",
                              "who": "who",
                              "city": "city",
                              "id": 100,
                              "timezone": "timezone",
                              "created": 100,
                              "list_addr": "list_addr",
                              "description": "description",
                              "ga_code": "ga_code",
                              "name": "name",
                              "urlname": "urlname",
                              "lat": 1.0,
                              "members": "members",
                              "list_mode": "list_mode",
                              "lon": 1.0,
                              "join_info": {
                                "questions": {
                                  "id": 100,
                                  "question": "question"
                                },
                                "intro_required": "intro_required",
                                "questions_req": "questions_req",
                                "photo_required": "photo_required"
                              },
                              "organizer": {
                                "id": 100,
                                "bio": "bio",
                                "name": "name"
                              },
                              "country": "country",
                              "photos": {
                                "id": 100,
                                "photo_link": "photo_link",
                                "highres_link": "highres_link",
                                "thumb_link": "thumb_link"
                              },
                              "category": {
                                "id": 100,
                                "name": "name",
                                "shortname": "shortname"
                              },
                              "group_photo": {
                                "id": 100,
                                "photo_link": "photo_link",
                                "highres_link": "highres_link",
                                "thumb_link": "thumb_link"
                              },
                              "simple_html_description": "simple_html_description"
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
    /topics: 
        displayName: /{urlname}/topics
        uriParameters: 
            urlname: 
                description: ":urlname is a group name"
                type: string
                required: false
                repeat: false
        post: 
            description: |
                Associates topics with a given Meetup Group. Limited to organizers of the group.
                
                #Request Parameters
                A group can have at most 15 topics
            queryParameters: 
                topic_id: 
                    description: Comma-delimited list of topic ids to associate with group
                    type: string
                    required: false
                    repeat: false
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
            responses: 
                "200": 
                    description: |
                        A successful response will include a representation of the group topics were added to
                        |||
                        |-|
                        |category|The primary category of the group, if the group has one|
                        |city|City of the group|
                        |country|Country of the group|
                        |created|Time the group was created in milliseconds since the epoch|
                        |description|Short description of group|
                        |ga_code|Optional field return the google analytics code for the group. Only members that can edit group settings can see this|
                        |group_photo|Group photo|
                        |id|Numeric group ID|
                        |is_simplehtml|Optional field, 'true' when the group description has been saved in a simplified HTML format, 'false' otherwise.|
                        |join_info|Optional field, lists any questions requested when joining and required fields|
                        |join_mode|Who can join this group and how. One of approval, closed, open|
                        |lat|Latitude|
                        |link|Link to group on meetup.com|
                        |list_addr|Optional field returning list address prefix. List mail will be {list_addr}-list@meetup.com. Announce email will be {list_addr}-announce@meetup.com. You must be a member of the group to see this|
                        |list_mode|Optional fields parameter representing the policy for who can post the the group mailing list. One of moderated, off, open, orgs_only|
                        |lon|Longitude|
                        |members|Number of Meetup members in this group|
                        |name|Name of the group|
                        |next_event|The next upcoming event, if the group has one|
                        |organizer|Group's primary organizer|
                        |photos|A small set of photos from the group|
                        |simple_html_description|Description of the group, in simple HTML format. This value is translated to HTML to update the description.|
                        |state|State of the group, if in US or Canada|
                        |timezone|This represents the universal timezone identifier for the group|
                        |urlname|Urlname used to identify the group on meetup.com|
                        |visibility|Who can see this group. One of members, public or public_limited|
                        |who|What the group calls its members|
                    body: 
                        application/json: 
                            example: |
                                {
                                  "visibility": "visibility",
                                  "is_simplehtml": "is_simplehtml",
                                  "link": "link",
                                  "next_event": {
                                    "id": 100,
                                    "time": 100,
                                    "name": "name"
                                  },
                                  "state": 100,
                                  "join_mode": "join_mode",
                                  "who": "who",
                                  "city": "city",
                                  "id": 100,
                                  "timezone": "timezone",
                                  "created": 100,
                                  "list_addr": "list_addr",
                                  "description": "description",
                                  "ga_code": "ga_code",
                                  "name": "name",
                                  "urlname": "urlname",
                                  "lat": 1.0,
                                  "members": "members",
                                  "list_mode": "list_mode",
                                  "lon": 1.0,
                                  "join_info": {
                                    "questions": {
                                      "id": 100,
                                      "question": "question"
                                    },
                                    "intro_required": "intro_required",
                                    "questions_req": "questions_req",
                                    "photo_required": "photo_required"
                                  },
                                  "organizer": {
                                    "id": 100,
                                    "bio": "bio",
                                    "name": "name"
                                  },
                                  "country": "country",
                                  "photos": {
                                    "id": 100,
                                    "photo_link": "photo_link",
                                    "highres_link": "highres_link",
                                    "thumb_link": "thumb_link"
                                  },
                                  "category": {
                                    "id": 100,
                                    "name": "name",
                                    "shortname": "shortname"
                                  },
                                  "group_photo": {
                                    "id": 100,
                                    "photo_link": "photo_link",
                                    "highres_link": "highres_link",
                                    "thumb_link": "thumb_link"
                                  },
                                  "simple_html_description": "simple_html_description"
                                }
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
        delete: 
            description: |
                Associates topics with a given Meetup Group. Limited to organizers of the group.
                
                #Request Parameters
                Groups must have at one topic. Attempts to remove all topics will result in a failed request
            queryParameters: 
                topic_id: 
                    description: Comma-delimited list of topic ids to disassociate with group
                    type: string
                    required: false
                    repeat: false
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
            responses: 
                "200": 
                    description: |
                        A successful response will include a representation of the group topics were removed from
                        |||
                        |-|
                        |category|The primary category of the group, if the group has one|
                        |city|City of the group|
                        |country|Country of the group|
                        |created|Time the group was created in milliseconds since the epoch|
                        |description|Short description of group|
                        |ga_code|Optional field return the google analytics code for the group. Only members that can edit group settings can see this|
                        |group_photo|Group photo|
                        |id|Numeric group ID|
                        |is_simplehtml|Optional field, 'true' when the group description has been saved in a simplified HTML format, 'false' otherwise.|
                        |join_info|Optional field, lists any questions requested when joining and required fields|
                        |join_mode|Who can join this group and how. One of approval, closed, open|
                        |lat|Latitude|
                        |link|Link to group on meetup.com|
                        |list_addr|Optional field returning list address prefix. List mail will be {list_addr}-list@meetup.com. Announce email will be {list_addr}-announce@meetup.com. You must be a member of the group to see this|
                        |list_mode|Optional fields parameter representing the policy for who can post the the group mailing list. One of moderated, off, open, orgs_only|
                        |lon|Longitude|
                        |members|Number of Meetup members in this group|
                        |name|Name of the group|
                        |next_event|The next upcoming event, if the group has one|
                        |organizer|Group's primary organizer|
                        |photos|A small set of photos from the group|
                        |simple_html_description|Description of the group, in simple HTML format. This value is translated to HTML to update the description.|
                        |state|State of the group, if in US or Canada|
                        |timezone|This represents the universal timezone identifier for the group|
                        |urlname|Urlname used to identify the group on meetup.com|
                        |visibility|Who can see this group. One of members, public or public_limited|
                        |who|What the group calls its members|
                    body: 
                        application/json: 
                            example: |
                                {
                                  "visibility": "visibility",
                                  "is_simplehtml": "is_simplehtml",
                                  "link": "link",
                                  "next_event": {
                                    "id": 100,
                                    "time": 100,
                                    "name": "name"
                                  },
                                  "state": 100,
                                  "join_mode": "join_mode",
                                  "who": "who",
                                  "city": "city",
                                  "id": 100,
                                  "timezone": "timezone",
                                  "created": 100,
                                  "list_addr": "list_addr",
                                  "description": "description",
                                  "ga_code": "ga_code",
                                  "name": "name",
                                  "urlname": "urlname",
                                  "lat": 1.0,
                                  "members": "members",
                                  "list_mode": "list_mode",
                                  "lon": 1.0,
                                  "join_info": {
                                    "questions": {
                                      "id": 100,
                                      "question": "question"
                                    },
                                    "intro_required": "intro_required",
                                    "questions_req": "questions_req",
                                    "photo_required": "photo_required"
                                  },
                                  "organizer": {
                                    "id": 100,
                                    "bio": "bio",
                                    "name": "name"
                                  },
                                  "country": "country",
                                  "photos": {
                                    "id": 100,
                                    "photo_link": "photo_link",
                                    "highres_link": "highres_link",
                                    "thumb_link": "thumb_link"
                                  },
                                  "category": {
                                    "id": 100,
                                    "name": "name",
                                    "shortname": "shortname"
                                  },
                                  "group_photo": {
                                    "id": 100,
                                    "photo_link": "photo_link",
                                    "highres_link": "highres_link",
                                    "thumb_link": "thumb_link"
                                  },
                                  "simple_html_description": "simple_html_description"
                                }
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
    /venues: 
        displayName: /{urlname}/venues
        uriParameters: 
            urlname: 
                description: ":urlname is a group name"
                type: string
                required: false
                repeat: false
        get: 
            description: |
                Returns venues a group has previously hosted events at
                
                #Request Parameters
                The :urlname path element may be any valid group urlname or domain name. All parameters are optional
            queryParameters: 
                offset: 
                    description: The starting page for results to return
                    type: integer
                    required: false
                    repeat: false
                    minimum: 0
                only: 
                    description: You can select result fields by specifying only parameters
                    type: string
                    required: false
                    repeat: false
                page: 
                    description: The page size
                    type: integer
                    required: false
                    repeat: false
                    minimum: 1
                omit: 
                    description: You can suppress result fields by specifying omit parameters
                    type: string
                    required: false
                    repeat: false
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
                order: 
                    description: How to order the results
                    type: string
                    required: false
                    repeat: false
                desc: 
                    description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                    type: string
                    required: false
                    repeat: false
                    enum: [desc, "true", "false"]
            responses: 
                "200": 
                    description: |
                        Meetup venue data comes from varying sources and may not contain all documented parameters
                        |||
                        |-|
                        |address_1|If available, the first address line of the venue|
                        |address_2|If available, the second address line of the venue|
                        |address_3|If available, the third address line of the venue|
                        |city|If available, the name of the venue's city|
                        |country|If available, the name of the venue's country code|
                        |id|ID, of the venue|
                        |lat|If available, the venue's latitude|
                        |lon|If available, the venue's longitude|
                        |name|If available, the venue's name|
                        |phone|If available, the venue's photo number|
                        |state|If available and the venue's country id within the US or Canada, the venue's state|
                        |visibility|'private' if this venue is a private home, otherwise 'public'|
                        |zip|If available, the venue's zipcode|
                    body: 
                        application/json: 
                            example: |
                                {
                                  "results": [
                                    {
                                      "id": 0,
                                      "zip": "zip 0",
                                      "phone": 0,
                                      "lon": 1.0,
                                      "address_3": "address_3 0",
                                      "visibility": "visibility 0",
                                      "name": "name 0",
                                      "state": 0,
                                      "address_1": "address_1 0",
                                      "address_2": "address_2 0",
                                      "lat": 1.0,
                                      "country": "country 0",
                                      "city": "city 0"
                                    },
                                    {
                                      "id": 1,
                                      "zip": "zip 1",
                                      "phone": 1,
                                      "lon": 1.0,
                                      "address_3": "address_3 1",
                                      "visibility": "visibility 1",
                                      "name": "name 1",
                                      "state": 1,
                                      "address_1": "address_1 1",
                                      "address_2": "address_2 1",
                                      "lat": 1.0,
                                      "country": "country 1",
                                      "city": "city 1"
                                    }
                                  ]
                                }
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
        post: 
            description: |
                Interface for creating new Meetup venues
                
                #Request Parameters
                The :urlname path element may be any valid group urlname or domain name. The required parameters are highlighted below. To avoid creating duplicate Meetup venues, this endpoint will attempt to resolve potentially similar venues based on name and address before creating a new public venues. If potential matches are detected, this method will return a 409 Conflict response containing a list of potential matches
            queryParameters: 
                country: 
                    description: A valid country code
                    type: string
                    required: false
                    repeat: false
                hours: 
                    description: Open hours information about the venue
                    type: string
                    required: false
                    repeat: false
                visibility: 
                    description: Optional value indicating the venues visibility to others. May be one of private or public. Defaults to 'public'
                    type: string
                    required: false
                    repeat: false
                web_url: 
                    description: Optional web url for the venue
                    type: string
                    required: false
                    repeat: false
                phone: 
                    description: Optional phone number for the venue
                    type: string
                    required: false
                    repeat: false
                city: 
                    description: A valid city
                    type: string
                    required: false
                    repeat: false
                address_1: 
                    description: Primary address of the venue
                    type: string
                    required: false
                    repeat: false
                address_2: 
                    description: Secondary address info
                    type: string
                    required: false
                    repeat: false
                name: 
                    description: Unique name of the venue
                    type: string
                    required: false
                    repeat: false
                state: 
                    description: If in the US or CA, the state code for the venue
                    type: string
                    required: false
                    repeat: false
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
            responses: 
                "200": 
                    description: |
                        |||
                        |-|
                        |address_1|If available, the first address line of the venue|
                        |address_2|If available, the second address line of the venue|
                        |address_3|If available, the third address line of the venue|
                        |city|If available, the name of the venue's city|
                        |country|If available, the name of the venue's country code|
                        |id|ID, of the venue|
                        |lat|If available, the venue's latitude|
                        |lon|If available, the venue's longitude|
                        |name|If available, the venue's name|
                        |phone|If available, the venue's photo number|
                        |state|If available and the venue's country id within the US or Canada, the venue's state|
                        |visibility|'private' if this venue is a private home, otherwise 'public'|
                        |zip|If available, the venue's zipcode|
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
                "409": 
                    description: If potential matches are detected, this method will return a 409 Conflict response containing a list of potential matches
                    body: 
                        application/json: 
                            example: |
                                {
                                  "id": 100,
                                  "zip": "zip",
                                  "phone": 100,
                                  "lon": 1.0,
                                  "address_3": "address_3",
                                  "visibility": "visibility",
                                  "name": "name",
                                  "state": 100,
                                  "address_1": "address_1",
                                  "address_2": "address_2",
                                  "lat": 1.0,
                                  "country": "country",
                                  "city": "city"
                                }
            protocols: [HTTP]
    /boards: 
        displayName: /{urlname}/boards
        uriParameters: 
            urlname: 
                description: ":urlname is a group name"
                type: string
                required: false
                repeat: false
        get: 
            description: Listings of Group discussion boards
            queryParameters: 
                offset: 
                    description: The starting page for results to return
                    type: integer
                    required: false
                    repeat: false
                    minimum: 0
                only: 
                    description: You can select result fields by specifying only parameters
                    type: string
                    required: false
                    repeat: false
                page: 
                    description: The page size
                    type: integer
                    required: false
                    repeat: false
                    minimum: 1
                omit: 
                    description: You can suppress result fields by specifying omit parameters
                    type: string
                    required: false
                    repeat: false
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
                order: 
                    description: How to order the results
                    type: string
                    required: false
                    repeat: false
                desc: 
                    description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                    type: string
                    required: false
                    repeat: false
                    enum: [desc, "true", "false"]
            responses: 
                "200": 
                    description: |
                        |||
                        |-|
                        |created|Time board was created in milliseconds since the epoch|
                        |discussion_count|Number of discussions on this board|
                        |group|The group associated with this board|
                        |id|Numeric ID of discussion board|
                        |latest_reply|The latest reply on this board|
                        |name|Discussion board name|
                        |post_count|Number of posts in discussions on this board|
                        |updated|Time board was updated in milliseconds since the epoch|
                    body: 
                        application/json: 
                            example: |
                                {
                                  "0": {
                                    "id": 100,
                                    "updated": 100,
                                    "discussion_count": 100,
                                    "created": 100,
                                    "post_count": 100,
                                    "name": "name",
                                    "latest_reply": {
                                      "member": {
                                        "name": "name"
                                      },
                                      "created": 100
                                    },
                                    "group": {
                                      "id": 100
                                    }
                                  }
                                }
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
        /{bid}/discussions: 
            displayName: /{urlname}/boards/{bid}/discussions
            uriParameters: 
                bid: 
                    description: "The :bid path element may be any valid board ID for this group."
                    type: string
                    required: false
                    repeat: false
                urlname: 
                    description: ":urlname is a group name"
                    type: string
                    required: false
                    repeat: false
            get: 
                description: Listings of Group discussions
                queryParameters: 
                    offset: 
                        description: The starting page for results to return
                        type: integer
                        required: false
                        repeat: false
                        minimum: 0
                    only: 
                        description: You can select result fields by specifying only parameters
                        type: string
                        required: false
                        repeat: false
                    page: 
                        description: The page size
                        type: integer
                        required: false
                        repeat: false
                        minimum: 1
                    omit: 
                        description: You can suppress result fields by specifying omit parameters
                        type: string
                        required: false
                        repeat: false
                    key: 
                        type: string
                        required: false
                        repeat: false
                        enum: ["783060637886b293b764b2a6831240"]
                        default: "783060637886b293b764b2a6831240"
                    order: 
                        description: |
                            |value|description|
                            |-|
                            |last_post_date|(default) by post date|
                            |member_name|by posting member's name|
                            |thread_reply_count|by the threads reply count|
                            |thread_view_count|by the number of views a thread has|
                        type: string
                        required: false
                        repeat: false
                        enum: [last_post_date, member_name, thread_reply_count, thread_view_count]
                    desc: 
                        description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                        type: string
                        required: false
                        repeat: false
                        enum: [desc, "true", "false"]
                responses: 
                    "200": 
                        description: |
                            |||
                            |-|
                            |board|The board this discussion belongs to|
                            |body|The contents of the first post in this discussion|
                            |created|Time board was created in milliseconds since the epoch|
                            |id|Numeric discussion ID|
                            |last_post|The last post made in this discussion|
                            |reply_count|Number of replies this discussion has|
                            |started_by|The member that started this discussion|
                            |subject|The subject of the first post in this discussion|
                            |updated|Time board was updated in milliseconds since the epoch|
                        body: 
                            application/json: 
                                example: |
                                    {
                                      "id": 100,
                                      "body": "body",
                                      "last_post": {
                                        "member": {
                                          "name": "name"
                                        },
                                        "created": 100
                                      },
                                      "updated": 100,
                                      "reply_count": 100,
                                      "created": 100,
                                      "subject": "subject",
                                      "started_by": {
                                        "name": "name"
                                      },
                                      "board": {
                                        "id": 100
                                      }
                                    }
                    "400": 
                        description: |
                            Bad request when there was a problem with the request.
                            
                            The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                    "401": 
                        description: |
                            Unauthorized when you don't provide a valid key.
                    "500": 
                        description: |
                            Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
                protocols: [HTTP]
            /{did}: 
                displayName: /{urlname}/boards/{bid}/discussions/{did}
                uriParameters: 
                    bid: 
                        description: "The :bid path element may be any valid board ID for this group."
                        type: string
                        required: false
                        repeat: false
                    urlname: 
                        description: ":urlname is a group name"
                        type: string
                        required: false
                        repeat: false
                    did: 
                        description: "The :did may be any valid discussion ID for this board"
                        type: string
                        required: false
                        repeat: false
                get: 
                    description: Listing Group discussion posts
                    queryParameters: 
                        key: 
                            type: string
                            required: false
                            repeat: false
                            enum: ["783060637886b293b764b2a6831240"]
                            default: "783060637886b293b764b2a6831240"
                    responses: 
                        "200": 
                            description: |
                                |||
                                |-|
                                |body|content of the post|
                                |created|Time post was created in milliseconds since the epoch|
                                |discussion|The discussion this was posted in|
                                |id|Numeric post ID|
                                |in_reply_to|ID of the post this was in reply to|
                                |member|The member that started this discussion|
                                |subject|subject of the post|
                                |updated|Time post was updated in milliseconds since the epoch|
                            body: 
                                application/json: 
                                    example: |
                                        {
                                          "member": {
                                            "id": 100,
                                            "name": "name",
                                            "state": 100,
                                            "photo": {
                                              "thumb": 100
                                            },
                                            "country": "country",
                                            "city": "city"
                                          },
                                          "id": 100,
                                          "body": "body",
                                          "discussion": {
                                            "id": 100
                                          },
                                          "updated": 100,
                                          "created": 100,
                                          "subject": "subject",
                                          "in_reply_to": 100
                                        }
                        "400": 
                            description: |
                                Bad request when there was a problem with the request.
                                
                                The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                        "401": 
                            description: |
                                Unauthorized when you don't provide a valid key.
                        "500": 
                            description: |
                                Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
                    protocols: [HTTP]
    /member/approvals: 
        displayName: /{urlname}/member/approvals
        uriParameters: 
            urlname: 
                description: ":urlname is a group name"
                type: string
                required: false
                repeat: false
        post: 
            description: |
                Approves one or more requests for group membership
                
                #Request Parameters
                The :urlname path element may be any valid group urlname or domain name. If you need access to your group's welcome message, you can access it from the /2/groups method, providing a value of welcome_message for the fields parameter. To get a list of pending members, as an organizer, you can request the status pending in the /2/profiles method.
            queryParameters: 
                member: 
                    description: Comma-delimited numeric pending member IDs. The maximum allowed is 200
                    type: string
                    required: false
                    repeat: false
                welcome_message: 
                    description: Optional message to send to the members being approved. If not provided, the groups default welcome message will be sent. Max message size is 2000
                    type: string
                    required: false
                    repeat: false
                send_copy: 
                    description: Optional Boolean value indicating whether or not the org should receive a copy of the message sent to the approved members
                    type: string
                    required: false
                    repeat: false
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
            responses: 
                "200": 
                    description: A successful request will result in a simple JSON-encoded message with an HTTP 200 response.
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
        delete: 
            description: |
                Declines one or more requests for group membership
                
                #Request Parameters
                The :urlname path element may be any valid group urlname or domain name. To get a list of pending members, as an organizer, you can request the status pending in the /2/profiles method.
            queryParameters: 
                anon: 
                    description: Optional Boolean value indicating whether your email should be revealed to the members. Default is false.
                    type: string
                    required: false
                    repeat: false
                member: 
                    description: Comma-delimited numeric pending member IDs. The maximum allowed is 200
                    type: string
                    required: false
                    repeat: false
                explanation: 
                    description: Optional explanation to send to the members being declined. Max message size is 2000
                    type: string
                    required: false
                    repeat: false
                send_copy: 
                    description: Optional Boolean value indicating whether or to send a copy to the member issuing the decline. Default is true
                    type: string
                    required: false
                    repeat: false
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
                ban: 
                    description: Optional Boolean value indicating whether or not to ban the member in the future. Default is false
                    type: string
                    required: false
                    repeat: false
            responses: 
                "200": 
                    description: A successful request will result in a simple JSON-encoded message with an HTTP 200 response
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
    /events/{id}/watchlist: 
        displayName: /{urlname}/events/{id}/watchlist
        description: watchlist
        uriParameters: 
            id: 
                description: "The :id path element must be a valid alphanumeric Meetup event identifier"
                type: string
                required: false
                repeat: false
            urlname: 
                description: ":urlname is a group name"
                type: string
                required: false
                repeat: false
        post: 
            description: |
                Add yourself to an event watch list to get notified when a spot becomes available
                
                #Request Parameters
                No parameters are required. You should only call this method if you request the fields parameter 'self' in any events methods and get back a self.actions field containing 'watch'
            queryParameters: 
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
            responses: 
                "200": 
                    description: 'A successful add will result in the json message {"status":"watching"}'
                    body: 
                        application/json: 
                            example: |
                                {"status":"watching"}
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
        delete: 
            description: |
                Remove yourself from an event watch list
                
                #Request Parameters
                No parameters are required. You should only call this method if you request the fields parameter 'self' in any events methods and get back a self.actions field containing 'unwatch'
            queryParameters: 
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
            responses: 
                "200": 
                    description: 'A successful watchlist removal will result in the json message {"status":"not_watching"}. You may optionally send a fields parameter with the value of "self" to fetch rsvp_actions for the authenticated member'
                    body: 
                        application/json: 
                            example: |
                                {"status":"not_watching"}
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
    /events/{id}/attendance: 
        displayName: /{urlname}/events/{id}/attendance
        uriParameters: 
            id: 
                description: "The :id path element must be a valid alphanumeric Meetup event identifier"
                type: string
                required: false
                repeat: false
            urlname: 
                description: ":urlname is a group name"
                type: string
                required: false
                repeat: false
        get: 
            description: Lists attendance records for Meetup events. Limited for use by administrative members.
            queryParameters: 
                filter: 
                    description: |
                        A named filter to apply to the attendance list. These are roughly equivalent to the set of filters you will see in the attendance tool on the site. These filters correspond with attendance records as well as each member's original RSVP status. The filter value be one of: maybe, waitlist, yes, absent, all, attended, noshow, excused, no. The default is 'attended'. The 'absent' filter represents all members not in attendance including members with a 'noshow' status. An 'excused' absence is an absent member marked as such by an administrative member
                    type: string
                    required: false
                    repeat: false
                member: 
                    description: Raw text used to search for member by name. This may only be applied when the filter parameter is set to 'all'. The provided text must consist of at least 2 characters.
                    type: string
                    required: false
                    repeat: false
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
            responses: 
                "200": 
                    description: |
                        |||
                        |-|
                        |member|Member in or not in attendance|
                        |rsvp|RSVP, if member originally RSVP'd|
                        |status|The member's attendance status. May be one of: noshow, absent, attended|
                    body: 
                        application/json: 
                            example: |
                                {
                                  "results": [
                                    {
                                      "member": {
                                        "id": 0,
                                        "name": "name 0",
                                        "photo": {
                                          "thumb": 0
                                        }
                                      },
                                      "status": "status 0",
                                      "rsvp": {
                                        "response": "response 0",
                                        "guests": "guests 0"
                                      }
                                    },
                                    {
                                      "member": {
                                        "id": 1,
                                        "name": "name 1",
                                        "photo": {
                                          "thumb": 1
                                        }
                                      },
                                      "status": "status 1",
                                      "rsvp": {
                                        "response": "response 1",
                                        "guests": "guests 1"
                                      }
                                    }
                                  ]
                                }
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
        post: 
            description: |
                Takes Member attendance for an Event. Limted for use by administrative members.
                
                #Request Parameters
                The :urlname path element may be any valid group urlname or domain name. The :id path element must be a valid alphanumeric Meetup event identifier. Highlighted fields are required
            queryParameters: 
                headcount: 
                    description: Sets the overall headcount for the event. This may not necessarily correlate with the list of attendees in this group if the event is part of a joint Meetup event
                    type: string
                    required: false
                    repeat: false
                guests: 
                    description: The number of guests accompanying member. Maximum of 99 is allowed.
                    type: string
                    required: false
                    repeat: false
                member: 
                    description: A valid ID of member in the group
                    type: string
                    required: false
                    repeat: false
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
                status: 
                    description: |
                        An attendance status for the member. Must be one of: noshow, absent, attended
                    type: string
                    required: false
                    repeat: false
            responses: 
                "200": 
                    description: If successful, this method returns a 200 response with a JSON-encoded success message
                "400": 
                    description: Failures will result a 400 response
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
    /events/{id}/payments: 
        displayName: /{urlname}/events/{id}/payments
        uriParameters: 
            id: 
                description: "The :id path element must be a valid alphanumeric Meetup event identifier"
                type: string
                required: false
                repeat: false
            urlname: 
                description: ":urlname is a group name"
                type: string
                required: false
                repeat: false
        post: 
            description: |
                Allows organizers of a group to note payments made by members for an event. This is the 'Mark Paid' feature seen in the RSVP listings on event details pages and affects the 'pay_status' response fields in 2/rsvps for paid events
                
                #Request Parameters
                Only organizer may submit payment information for members and only one payment may be submitted for a member for a given event
            queryParameters: 
                amount: 
                    description: The monetary amount of money the member submited
                    type: string
                    required: false
                    repeat: false
                quantity: 
                    description: The number of payments made. Defaults to 1
                    type: string
                    required: false
                    repeat: false
                paid_on: 
                    description: The time the payment was made in milliseconds from the epoc. Defaults to now
                    type: string
                    required: false
                    repeat: false
                member: 
                    description: Member Id of member who made a payment
                    type: string
                    required: false
                    repeat: false
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
            responses: 
                "200": 
                    description: |
                        |||
                        |-|
                        |confirm_code|Confirmation code for the payment|
                        |id|Unique identifier for the payment|
                    body: 
                        application/json: 
                            example: |
                                {
                                  "results": [
                                    {
                                      "id": 0,
                                      "confirm_code": "confirm_code 0"
                                    },
                                    {
                                      "id": 1,
                                      "confirm_code": "confirm_code 1"
                                    }
                                  ]
                                }
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
/2/message: 
    displayName: /2/message
    post: 
        description: |
            This method allows messaging-authorized requests to send messages between members
            
            #Request Parameters
            This method requires an HTTP POST and OAuth authorization in combination with the messaging permission scope. All required parameters must be supplied. You can call this method with dryrun set to true if you wish to test the validation logic before sending the actual request
        queryParameters: 
            member_id: 
                description: Return comments for the given member_ids, separated by commas
                type: string
                required: false
                repeat: false
            dryrun: 
                description: Performs request without sending message. Useful for pre-testing error conditions.
                type: string
                required: false
                repeat: false
            group_id: 
                description: Return comments in groups with these ID numbers, separated by commas
                type: string
                required: false
                repeat: false
            subject: 
                description: Text of message subject
                type: string
                required: false
                repeat: false
            message: 
                description: Text of message to body
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            hide_email: 
                description: Hides sender's email from receiving member, defaults to false
                type: string
                required: false
                repeat: false
            cc_sender: 
                description: Sends a copy of the message to the sender, defaults to true.
                type: string
                required: false
                repeat: false
        responses: 
            "200": 
                description: |
                    When everything goes well, we'll send a 200 response code along with your data.
                    
                    JSON requests that specify a callback parameter are treated differently: the API always responds with an HTTP status of 200, so that a client browser will load the response and handle the callback. When an error occurs its corresponding status line is served in a "status" field of the error response object rather than in the response header.
            "202": 
                description: If successful, this method returns a 202 Accepted response.
            "400": 
                description: |
                    400 Bad requests may be returned under certain conditions along with a response object containing information about the failure. The code property of this may be one of
                    |||
                    |-|
                    |bad_member|the sender or the receiver was not an active member|
                    |bad_group|the provided group_id was invalid|
                    |limit|limit of 12 messages a day exceeded|
                    |msg_too_long|message was longer than 5000 characters|
                    |pref_conflict|the recipient's preferences disallow the sender from sending message|
                    |recip_not_affiliated|request was made with a group_id the recipient is not a member of|
                    |self_send|attempt made to send a message the sender|
                    |sender_not_affiliated|request made with group_id the sender is not a member of|
                    |sender_not_member|sender is not a member of any groups|
                    |subject_too_long|subject was too long|
                    |blocked|this member blocked you|
                    |spam|message was flagged as spam|
                    |ransport|error sending message|
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/groups: 
    displayName: /groups
    get: 
        description: |
            API method for accessing meetup groups
            
            #Request Parameters
            At least one of the required parameter(s) must be supplied with the request. Answers to questions are expected to follow the naming convention: answer_{question_id}=myanswer when joining.
        queryParameters: 
            member_id: 
                description: A member id number, limits results set to only those groups that the member specified by this id is currently a member of (excludes private groups, unless the member_id is the same as that of the member making the request)
                type: string
                required: false
                repeat: false
            zip: 
                description: A valid US zip code, limits the returned groups to those within radius miles.
                type: string
                required: false
                repeat: false
            country: 
                description: A valid country code
                type: string
                required: false
                repeat: false
            visibility: 
                description: Set to "members" or "public" to restrict to groups of a particular visibility
                type: string
                required: false
                repeat: false
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            city: 
                description: A valid city
                type: string
                required: false
                repeat: false
            groupnum: 
                description: |
                    {topic, groupnum} - Return the group with this topic and number
                type: string
                required: false
                repeat: false
            lon: 
                description: Longitude to search
                type: string
                required: false
                repeat: false
            group_urlname: 
                description: |
                    Return the group with this custom url path (e.g., the string "teaneck-archaeologists" would refer to the group located at http://www.meetup.com/teaneck-archaeologists)
                type: string
                required: false
                repeat: false
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            topic: 
                description: Only return groups in the specified topic [one topic allowed]
                type: string
                required: false
                repeat: false
            state: 
                description: |
                    {country, city, state} - A valid country code, city and for the US, State. limits the returned groups to those within radius miles
                type: string
                required: false
                repeat: false
            id: 
                description: Only return groups with the specified ID's [separate ID numbers with commas]
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            fields: 
                description: Set to "short_link" to include shortened group URLs in response items. Set to "join_info" to get a list of questions and requirements used when joining the group.
                type: string
                required: false
                repeat: false
            radius: 
                description: Radius, in miles for geographic requests, default 25 -- maximum 100
                type: string
                required: false
                repeat: false
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            lat: 
                description: Latitude to search
                type: string
                required: false
                repeat: false
            order: 
                description: |
                    |value|description|
                    |-|
                    |ctime|group creation time [newest first]|
                    |location|group location, country, state [if present], city|
                    |members|number of members [largest first]|
                    |name|the name of the group|
                type: string
                required: false
                repeat: false
                enum: [ctime, location, members, name]
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |country, city, state|Country, City, (and for the US, State) where this group is located|
                    |created|The date the group was created|
                    |daysleft|If this group is in need of an organizer, number of days until it expires (otherwise blank)|
                    |description|Description of the group|
                    |group_urlname|The group's url name|
                    |id|The groups's id|
                    |join_info|Optional field, lists any questions requested when joining and required fields|
                    |lat|Latitude coordinates of group location|
                    |link|Link to the groups page|
                    |lon|Longitude coordinates of group location|
                    |members|The number of members in the group|
                    |name|The groups's name|
                    |organizerName|Name of the group's organizer|
                    |organizerProfileURL|Profile url of group organizer|
                    |photo_url|Url of the group's photo|
                    |rating|Group rating|
                    |short_link|short version of the group's link|
                    |topics|Topics related to this group|
                    |updated|The last date and time that the group was updated|
                    |visibility|Set to "members" or "public". Only authenticated group members can retrieve event and membership details for private groups|
                    |who|what the group calls its members|
                    |zip|The zip code where this group is located|
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "zip": "zip 0",
                                  "lon": 1.0,
                                  "join_info": {
                                    "questions": {
                                      "id": 0,
                                      "question": "question 0"
                                    },
                                    "questions_required": "questions_required 0",
                                    "intro_required": "intro_required 0"
                                  },
                                  "visibility": "visibility 0",
                                  "photo_url": "photo_url 0",
                                  "organizerName": "organizerName 0",
                                  "group_urlname": "group_urlname 0",
                                  "link": "link 0",
                                  "state": 0,
                                  "short_link": "short_link 0",
                                  "who": "who 0",
                                  "country": "country 0",
                                  "city": "city 0",
                                  "id": 0,
                                  "topics": {
                                    "id": 0,
                                    "urlkey": "urlkey 0",
                                    "name": "name 0"
                                  },
                                  "organizerProfileURL": "organizerProfileURL 0",
                                  "updated": 0,
                                  "created": 0,
                                  "description": "description 0",
                                  "name": "name 0",
                                  "rating": "rating 0",
                                  "members": "members 0",
                                  "daysleft": "daysleft 0",
                                  "lat": 1.0
                                },
                                {
                                  "zip": "zip 1",
                                  "lon": 1.0,
                                  "join_info": {
                                    "questions": {
                                      "id": 1,
                                      "question": "question 1"
                                    },
                                    "questions_required": "questions_required 1",
                                    "intro_required": "intro_required 1"
                                  },
                                  "visibility": "visibility 1",
                                  "photo_url": "photo_url 1",
                                  "organizerName": "organizerName 1",
                                  "group_urlname": "group_urlname 1",
                                  "link": "link 1",
                                  "state": 1,
                                  "short_link": "short_link 1",
                                  "who": "who 1",
                                  "country": "country 1",
                                  "city": "city 1",
                                  "id": 1,
                                  "topics": {
                                    "id": 1,
                                    "urlkey": "urlkey 1",
                                    "name": "name 1"
                                  },
                                  "organizerProfileURL": "organizerProfileURL 1",
                                  "updated": 1,
                                  "created": 1,
                                  "description": "description 1",
                                  "name": "name 1",
                                  "rating": "rating 1",
                                  "members": "members 1",
                                  "daysleft": "daysleft 1",
                                  "lat": 1.0
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/2/profile: 
    displayName: /2/profile
    post: 
        description: |
            This method allows an authenticated member to join a group by creating a profile
            
            #Request Parameters
            This method requires an HTTP POST. All required parameters must be supplied. An intro and answers may be required based on the group the member is joining. To find out if a group requires an intro or answers to questions, query for the group through one of the Groups methods providing setting the fields parameter to join_info and inspecting the join_info in the results. Answers to the questions must be named using the convention answer_{question_id}
        queryParameters: 
            site_name: 
                description: Name of member's site. Max length is 32
                type: string
                required: false
                repeat: false
            photo_id: 
                description: photo_id of the photo to use for this profile
                type: string
                required: false
                repeat: false
            site_url: 
                description: Link to member's site. Max length is 80
                type: string
                required: false
                repeat: false
            group_id: 
                description: Id of group to join
                type: string
                required: false
                repeat: false
            intro: 
                description: Provides a Member an opportunity to tell the group about themselves
                type: string
                required: false
                repeat: false
            new_photo: 
                description: file upload for a new member photo
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            group_urlname: 
                description: Urlname of group to join
                type: string
                required: false
                repeat: false
            answer_{qid}: 
                description: Answers to questions from groups API join_info question fields
                type: string
                required: false
                repeat: false
        responses: 
            "200": 
                description: |
                    When everything goes well, we'll send a 200 response code along with your data.
                    
                    JSON requests that specify a callback parameter are treated differently: the API always responds with an HTTP status of 200, so that a client browser will load the response and handle the callback. When an error occurs its corresponding status line is served in a "status" field of the error response object rather than in the response header.
            "201": 
                description: If successful, this method returns a 201 Created response with a Location header containing the Profile Get URI to access this profile.
            "400": 
                description: |
                    400 Bad requests may be returned under certain conditions along with a response object containing information about the failure. The code property of this may be one of
                    
                    |||
                    |-|
                    |bad_group|invalid group was provided|
                    |bad_member|invalid member was provided|
                    |invalid_photo|invalid photo_id was provided|
                    |missing_photo|photo was required to join but one could not be resolved|
                    |member_exists|member has already joined the group|
                    |member_banned|member has been banned from the group|
                    |join_closed|this group is not allowing new members|
                    |join_viaweb|this join is not supported in the API, try joining via the website|
                    |membership_pending|awaiting organizer approval|
                    |missing_intro|request required a valid intro|
                    |missing_answer|request was missing an answer to a required question|
                    |invalid_answer|request contained invalid question answer|
                    |invalid_url|invalid site_url|
                    |invalid_site_name|site name was too long|
                    |unknown_error|a generic error|
                    The details property of this object will contain additional information. The content body of a successful request is the same of that returned by the Profile Get query method.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
    /{gid}/{mid}: 
        displayName: /2/profile/{gid}/{mid}
        uriParameters: 
            gid: 
                description: The gid is a group ID
                type: string
                required: false
                repeat: false
            mid: 
                description: The mid is a member IDs
                type: string
                required: false
                repeat: false
        get: 
            description: |
                Retrieves a single group profile
                
                #Request Parameters
                Only authorization parameters are needed.
            queryParameters: 
                fields: 
                    description: Request that additional fields (separated by commas) be included in the output
                    type: string
                    required: false
                    repeat: false
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
            responses: 
                "200": 
                    description: |
                        |||
                        |-|
                        |additional|Additional information supplied by the member|
                        |answers|Answers to group profile questions. Unanswered questions will be returned without an answer property if "empty_answers" is provided as a "fields" property value|
                        |attendance_count|Optional fields property representing number of times the member has attended a Meetup in the associated group.|
                        |bio|Member's 'introduction' to the group|
                        |comment|What this member says about this group|
                        |created, updated|When this member profile was created and last updated, in milliseconds since the epoch.|
                        |group|The group this profile belongs to|
                        |member_city|Optional fields parameter for the Member's city|
                        |member_country|Optional fields parameter for the Member's country code|
                        |member_id|The member's id|
                        |member_state|Optional fields parameter for the Member's state (when country is us)|
                        |membership_dues|Optional fields parameter for the last payment received for the Group's membership dues and optionally, the status of the member's dues for the current billing period if the group has set up recurring membership dues payments. This field is only visible only to the organizer of the group and to the member themselves. Members can not see other member's membership dues|
                        |name|The member's name|
                        |other_services|Third-party services associated with the member account|
                        |photo|The member's photo if available|
                        |photo_url|Link to the group profile photo of the member|
                        |profile_url|Link to the member's group profile page|
                        |role|If applicable, the member's role in the group (Organizer, Assistant Organizer, Co-organizer, or Event Organizer)|
                        |site_url, site_name|External site listed by the member|
                        |status|Value may be one of pending_payment, blocked, active, pending|
                        |title|Title assigned to the member in this group|
                        |visited|Member's last visit to the group site, in milliseconds since the epoch|
                    body: 
                        application/json: 
                            example: |
                                {
                                  "profile_url": "profile_url",
                                  "status": "status",
                                  "photo_url": "photo_url",
                                  "answers": {
                                    "answer": "answer",
                                    "question": "question",
                                    "question_id": 100
                                  },
                                  "member_country": "member_country",
                                  "membership_dues": {
                                    "total_amount": "total_amount",
                                    "transaction_time": 100,
                                    "period_status": "period_status"
                                  },
                                  "site_name": "site_name",
                                  "photo": {
                                    "photo_link": "photo_link",
                                    "highres_link": "highres_link",
                                    "thumb_link": "thumb_link",
                                    "photo_id": 100
                                  },
                                  "attendance_count": 100,
                                  "member_id": 100,
                                  "visited": 100,
                                  "title": 100,
                                  "member_city": "member_city",
                                  "member_state": "member_state",
                                  "bio": "bio",
                                  "additional": "additional",
                                  "created": 100,
                                  "updated": 100,
                                  "name": "name",
                                  "role": "role",
                                  "comment": "comment",
                                  "group": {
                                    "id": 100,
                                    "group_lat": "group_lat",
                                    "name": "name",
                                    "group_lon": "group_lon",
                                    "join_mode": "join_mode",
                                    "urlname": "urlname",
                                    "who": "who"
                                  },
                                  "other_services": {
                                    "[service-name]": {
                                      "identifier": "identifier"
                                    }
                                  },
                                  "site_url": "site_url"
                                }
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
        post: 
            description: |
                Update a member's group profile
                
                #Request Parameters
                The gid and mid in this method's path are group and member IDs, both needed to uniquely identify the member profile to be edited. An authenticated user may update their own profile by substituting "self" for the mid. All POST parameters are optional unless required by the group. Only the organizer of the group may edit the member's title and role within the group. Those are the only things the organizer may edit. When requesting to set a role with add_role the member's previous role will be cleared. Members may edit all other fields of their own profiles with the exception of title, add_role, and remove_role. This method requires an HTTP POST.
            queryParameters: 
                site_name: 
                    description: Name of member's site. Max length is 32
                    type: string
                    required: false
                    repeat: false
                add_role: 
                    description: |
                        Allows those with permission to assign one of the following roles: event_organizer, coorganizer, assistant_organizer
                    type: string
                    required: false
                    repeat: false
                photo_id: 
                    description: photo_id of the photo to use for this profile
                    type: string
                    required: false
                    repeat: false
                site_url: 
                    description: Link to member's site. Max length is 80
                    type: string
                    required: false
                    repeat: false
                intro: 
                    description: Provides a Member an opportunity to tell the group about themselves
                    type: string
                    required: false
                    repeat: false
                new_photo: 
                    description: file upload for a new member photo
                    type: string
                    required: false
                    repeat: false
                title: 
                    description: An organizer-defined member title.
                    type: string
                    required: false
                    repeat: false
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
                remove_role: 
                    description: |
                        Allows those with permission to remove one of the following roles: event_organizer, coorganizer, assistant_organizer
                    type: string
                    required: false
                    repeat: false
                answer_{qid}: 
                    description: Answers to questions from groups API join_info question fields
                    type: string
                    required: false
                    repeat: false
            responses: 
                "200": 
                    description: If successful, this method responds with 200 OK. The content body is the same as that returned by the Profile Get query method.
                "400": 
                    description: "400 responses may also contain the error codes listed in the Profile Create method with the addition of invalid_role which is returned when the role adjustment was failed to be applied."
                "401": 
                    description: "401 Unauthorized is returned if the currently authenticated member can not edit the specified profile."
                    body: 
                        application/json: 
                            example: |
                                {
                                  "profile_url": "profile_url",
                                  "status": "status",
                                  "photo_url": "photo_url",
                                  "answers": {
                                    "answer": "answer",
                                    "question": "question",
                                    "question_id": 100
                                  },
                                  "member_country": "member_country",
                                  "membership_dues": {
                                    "total_amount": "total_amount",
                                    "transaction_time": 100,
                                    "period_status": "period_status"
                                  },
                                  "site_name": "site_name",
                                  "photo": {
                                    "photo_link": "photo_link",
                                    "highres_link": "highres_link",
                                    "thumb_link": "thumb_link",
                                    "photo_id": 100
                                  },
                                  "attendance_count": 100,
                                  "member_id": 100,
                                  "visited": 100,
                                  "title": 100,
                                  "member_city": "member_city",
                                  "member_state": "member_state",
                                  "bio": "bio",
                                  "additional": "additional",
                                  "created": 100,
                                  "updated": 100,
                                  "name": "name",
                                  "role": "role",
                                  "comment": "comment",
                                  "group": {
                                    "id": 100,
                                    "group_lat": "group_lat",
                                    "name": "name",
                                    "group_lon": "group_lon",
                                    "join_mode": "join_mode",
                                    "urlname": "urlname",
                                    "who": "who"
                                  },
                                  "other_services": {
                                    "[service-name]": {
                                      "identifier": "identifier"
                                    }
                                  },
                                  "site_url": "site_url"
                                }
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
        delete: 
            description: |
                Deletes a member's group profile (Leave Group)
                
                #Request Parameters
                All parameters are optional. Only the authorized member is permitted leave groups they do not organize. This method may not be used by organizers to remove members.
            queryParameters: 
                exit_comment: 
                    description: Optional message to the organizer when leaving
                    type: string
                    required: false
                    repeat: false
            responses: 
                "200": 
                    description: If successful, this method responds with 200 OK.
                "400": 
                    description: "400 Bad request is returned."
                "401": 
                    description: If the profile being deleted does not belong to the authorized member.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
/dashboard: 
    displayName: /dashboard
    description: Dashboard
    get: 
        description: A dashboard of aggregated Meetup information for the authorized member. No parameters are required.
        queryParameters: 
            fields: 
                description: Request that additional fields (separated by commas) be included in the output
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |last_event|The last meetup the current member RSVP'd to|
                    |next_event|The next meetup event the current member has RSVP'd to|
                    |ongoing_event|The meetup event the current member has RSVP'd to that's currently happening|
                    |stats|A map of statistics for the current member|
                body: 
                    application/json: 
                        example: |
                            {
                              "last_event": {
                                "visibility": "visibility",
                                "is_simplehtml": "is_simplehtml",
                                "self": {
                                  "checked_in": "checked_in",
                                  "watching": "watching",
                                  "rsvp": "rsvp",
                                  "role": "role",
                                  "rated": 100,
                                  "actions": "actions",
                                  "pay_status": "pay_status"
                                },
                                "featured": "featured",
                                "rsvpable": "rsvpable",
                                "publish_status": "publish_status",
                                "email_reminders": "email_reminders",
                                "rsvp_rules": {
                                  "open_time": "open_time",
                                  "waitlisting": "waitlisting",
                                  "close_time": "close_time",
                                  "guest_limit": "guest_limit",
                                  "closed": "closed",
                                  "refund_policy": "refund_policy"
                                },
                                "id": 100,
                                "timezone": "timezone",
                                "time": 100,
                                "distance": 1.0,
                                "venue_visibility": "venue_visibility",
                                "yes_rsvp_count": 100,
                                "updated": 100,
                                "created": 100,
                                "description": "description",
                                "survey_questions": {
                                  "id": 100,
                                  "question": "question",
                                  "required": "required"
                                },
                                "headcount": "headcount",
                                "name": "name",
                                "photo_album_id": 100,
                                "rsvp_alerts": "rsvp_alerts",
                                "photo_count": 100,
                                "comment_count": 100,
                                "rsvp_limit": "rsvp_limit",
                                "trending_rank": "trending_rank",
                                "status": "status",
                                "maybe_rsvp_count": 100,
                                "photo_url": "photo_url",
                                "venue": {
                                  "id": 100,
                                  "zip": "zip",
                                  "phone": 100,
                                  "lon": 1.0,
                                  "repinned": "repinned",
                                  "address_3": "address_3",
                                  "name": "name",
                                  "state": 100,
                                  "address_1": "address_1",
                                  "address_2": "address_2",
                                  "lat": 1.0,
                                  "country": "country",
                                  "city": "city"
                                },
                                "short_link": "short_link",
                                "event_hosts": {
                                  "member_name": "member_name",
                                  "member_id": 100
                                },
                                "utc_offset": 100,
                                "fee": {
                                  "amount": "amount",
                                  "description": "description",
                                  "label": 100,
                                  "required": "required",
                                  "accepts": "accepts",
                                  "currency": "currency"
                                },
                                "duration": 100,
                                "announced": "announced",
                                "event_url": "event_url",
                                "how_to_find_us": "how_to_find_us",
                                "rating": {
                                  "count": 100,
                                  "average": "average"
                                },
                                "group": {
                                  "id": 100,
                                  "topics": "topics",
                                  "category": "category",
                                  "group_photo": "group_photo",
                                  "group_lat": "group_lat",
                                  "name": "name",
                                  "group_lon": "group_lon",
                                  "membership_dues": "membership_dues",
                                  "join_mode": "join_mode",
                                  "urlname": "urlname",
                                  "who": "who"
                                },
                                "simple_html_description": "simple_html_description",
                                "why": "why"
                              },
                              "stats": {
                                "city_top_groups": "city_top_groups",
                                "global_top_groups": "global_top_groups",
                                "nearby_events": "nearby_events",
                                "upcoming_events": "upcoming_events",
                                "memberships": "memberships",
                                "fb_friend_events": "fb_friend_events"
                              },
                              "next_event": {
                                "visibility": "visibility",
                                "is_simplehtml": "is_simplehtml",
                                "self": {
                                  "checked_in": "checked_in",
                                  "watching": "watching",
                                  "rsvp": "rsvp",
                                  "role": "role",
                                  "rated": 100,
                                  "actions": "actions",
                                  "pay_status": "pay_status"
                                },
                                "featured": "featured",
                                "rsvpable": "rsvpable",
                                "publish_status": "publish_status",
                                "email_reminders": "email_reminders",
                                "rsvp_rules": {
                                  "open_time": "open_time",
                                  "waitlisting": "waitlisting",
                                  "close_time": "close_time",
                                  "guest_limit": "guest_limit",
                                  "closed": "closed",
                                  "refund_policy": "refund_policy"
                                },
                                "id": 100,
                                "timezone": "timezone",
                                "time": 100,
                                "distance": 1.0,
                                "venue_visibility": "venue_visibility",
                                "yes_rsvp_count": 100,
                                "updated": 100,
                                "created": 100,
                                "description": "description",
                                "survey_questions": {
                                  "id": 100,
                                  "question": "question",
                                  "required": "required"
                                },
                                "headcount": "headcount",
                                "name": "name",
                                "photo_album_id": 100,
                                "rsvp_alerts": "rsvp_alerts",
                                "photo_count": 100,
                                "comment_count": 100,
                                "rsvp_limit": "rsvp_limit",
                                "trending_rank": "trending_rank",
                                "status": "status",
                                "maybe_rsvp_count": 100,
                                "photo_url": "photo_url",
                                "venue": {
                                  "id": 100,
                                  "zip": "zip",
                                  "phone": 100,
                                  "lon": 1.0,
                                  "repinned": "repinned",
                                  "address_3": "address_3",
                                  "name": "name",
                                  "state": 100,
                                  "address_1": "address_1",
                                  "address_2": "address_2",
                                  "lat": 1.0,
                                  "country": "country",
                                  "city": "city"
                                },
                                "short_link": "short_link",
                                "event_hosts": {
                                  "member_name": "member_name",
                                  "member_id": 100
                                },
                                "utc_offset": 100,
                                "fee": {
                                  "amount": "amount",
                                  "description": "description",
                                  "label": 100,
                                  "required": "required",
                                  "accepts": "accepts",
                                  "currency": "currency"
                                },
                                "duration": 100,
                                "announced": "announced",
                                "event_url": "event_url",
                                "how_to_find_us": "how_to_find_us",
                                "rating": {
                                  "count": 100,
                                  "average": "average"
                                },
                                "group": {
                                  "id": 100,
                                  "topics": "topics",
                                  "category": "category",
                                  "group_photo": "group_photo",
                                  "group_lat": "group_lat",
                                  "name": "name",
                                  "group_lon": "group_lon",
                                  "membership_dues": "membership_dues",
                                  "join_mode": "join_mode",
                                  "urlname": "urlname",
                                  "who": "who"
                                },
                                "simple_html_description": "simple_html_description",
                                "why": "why"
                              },
                              "ongoing_event": {
                                "visibility": "visibility",
                                "is_simplehtml": "is_simplehtml",
                                "self": {
                                  "checked_in": "checked_in",
                                  "watching": "watching",
                                  "rsvp": "rsvp",
                                  "role": "role",
                                  "rated": 100,
                                  "actions": "actions",
                                  "pay_status": "pay_status"
                                },
                                "featured": "featured",
                                "rsvpable": "rsvpable",
                                "publish_status": "publish_status",
                                "email_reminders": "email_reminders",
                                "rsvp_rules": {
                                  "open_time": "open_time",
                                  "waitlisting": "waitlisting",
                                  "close_time": "close_time",
                                  "guest_limit": "guest_limit",
                                  "closed": "closed",
                                  "refund_policy": "refund_policy"
                                },
                                "id": 100,
                                "timezone": "timezone",
                                "time": 100,
                                "distance": 1.0,
                                "venue_visibility": "venue_visibility",
                                "yes_rsvp_count": 100,
                                "updated": 100,
                                "created": 100,
                                "description": "description",
                                "survey_questions": {
                                  "id": 100,
                                  "question": "question",
                                  "required": "required"
                                },
                                "headcount": "headcount",
                                "name": "name",
                                "photo_album_id": 100,
                                "rsvp_alerts": "rsvp_alerts",
                                "photo_count": 100,
                                "comment_count": 100,
                                "rsvp_limit": "rsvp_limit",
                                "trending_rank": "trending_rank",
                                "status": "status",
                                "maybe_rsvp_count": 100,
                                "photo_url": "photo_url",
                                "venue": {
                                  "id": 100,
                                  "zip": "zip",
                                  "phone": 100,
                                  "lon": 1.0,
                                  "repinned": "repinned",
                                  "address_3": "address_3",
                                  "name": "name",
                                  "state": 100,
                                  "address_1": "address_1",
                                  "address_2": "address_2",
                                  "lat": 1.0,
                                  "country": "country",
                                  "city": "city"
                                },
                                "short_link": "short_link",
                                "event_hosts": {
                                  "member_name": "member_name",
                                  "member_id": 100
                                },
                                "utc_offset": 100,
                                "fee": {
                                  "amount": "amount",
                                  "description": "description",
                                  "label": 100,
                                  "required": "required",
                                  "accepts": "accepts",
                                  "currency": "currency"
                                },
                                "duration": 100,
                                "announced": "announced",
                                "event_url": "event_url",
                                "how_to_find_us": "how_to_find_us",
                                "rating": {
                                  "count": 100,
                                  "average": "average"
                                },
                                "group": {
                                  "id": 100,
                                  "topics": "topics",
                                  "category": "category",
                                  "group_photo": "group_photo",
                                  "group_lat": "group_lat",
                                  "name": "name",
                                  "group_lon": "group_lon",
                                  "membership_dues": "membership_dues",
                                  "join_mode": "join_mode",
                                  "urlname": "urlname",
                                  "who": "who"
                                },
                                "simple_html_description": "simple_html_description",
                                "why": "why"
                              }
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/events: 
    displayName: /events
    get: 
        description: |
            Deprecated API method for accessing meetup events. Please see /2/events and /2/open_events for replacements.
            
            #Request Parameters
            At least one of the required parameters must be supplied with the request. Location-based queries are deprecated. Use the /2/open_events API for location-based queries instead.
        queryParameters: 
            member_id: 
                description: Return comments for the given member_ids, separated by commas
                type: string
                required: false
                repeat: false
            rsvp_limit: 
                description: The number of "yes" rsvps an event can have before members will be added to the waiting list
                type: string
                required: false
                repeat: false
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            before: 
                description: Return events scheduled before the specified date, formatted as described below
                type: string
                required: false
                repeat: false
            groupnum: 
                description: |
                    {topic, groupnum} - Return events for the group with given topic and number
                type: string
                required: false
                repeat: false
            group_urlname: 
                description: Return events for the group with this custom URL path
                type: string
                required: false
                repeat: false
            text_format: 
                description: Format of the description text, "html", "plain", or "simplehtml". Defaults to "html"
                type: string
                required: false
                repeat: false
            group_id: 
                description: Return comments in groups with these ID numbers, separated by commas
                type: string
                required: false
                repeat: false
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            topic: 
                description: Return events in the specified topic(s), one topic allowed
                type: string
                required: false
                repeat: false
            id: 
                description: Return events with the specified IDs, separated by commas. When id is supplied, the date and status parameters are by default unlimited so that all events with matching IDs will be returned
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            after: 
                description: Return events scheduled after the specified date, formatted as described below
                type: string
                required: false
                repeat: false
            fields: 
                description: Request that additional fields (separated by commas) be included in the output. "photo_album_id" will include photo album info, and "waiting_rsvpcount" will include waitlist rsvp info in response items
                type: string
                required: false
                repeat: false
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            status: 
                description: Return events matching one of the given status values, separated by commas. Possible statuses are "upcoming", "autoscheduled", "proposed", "suggested", and "past". The default status parameter is "upcoming". If a date of today or earlier is specified for after, the default becomes "past,upcoming". Specifying a status of "autoscheduled" by itself, or in addition to others, will display events which have been created using the autoscheduling tool.
                type: string
                required: false
                repeat: false
            order: 
                description: |
                    |value|description|
                    |-|
                    |group|the name of the group having the event|
                    |location|group location, country, state [if present], city|
                    |time|event time|
                    |topic|the topic of the event|
                    |updated|event updated field|
                type: string
                required: false
                repeat: false
                enum: [group, location, time, topic, updated]
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |allow_maybe_rsvp|Set to "1" if this meetup allows members to rsvp "Maybe", or|
                    |attendee_count|Number of attendees at the event|
                    |description|Description of the event, see text_format above|
                    |event_hosts|Members chosen to host this event, may include the organizer|
                    |fee|Fee for this event (or 0.0 if this event has no fee)|
                    |feecurrency|Currency of the fee for this event|
                    |feedesc|Fee description, or blank if this event has no fee|
                    |feelabel|Fee label, or blank if this event has no fee or fee label|
                    |guest_limit|Maximum number of guests that a member can RSVP for|
                    |how_to_find_us|The information provided by the event host for "How will members find you there?"|
                    |id|The ID of the event|
                    |ismeetup|Set to either a "1" or a "0" if this is a Meetup event or just a calendar note, respectively|
                    |lat, lon|Latitude and longitude coordinates of group location|
                    |maybe_rsvpcount|Number of "maybe" rsvps to this event, including guests|
                    |member_status|Set to "member" or "nonmember" if member is member of the group hosting the event|
                    |my_waitlist_status|The current waitlist status for this event of the user making the request (could be "waitlist" or blank)|
                    |myrsvp|The current RSVP status for this event of the user making the request (could be "yes","no","maybe", or "none")|
                    |name|The name (title) of the event|
                    |no_rsvpcount|Number of "no" rsvps to this event|
                    |organizer_id|Member ID of the organizer of this Meetup group|
                    |organizer_name|Name of the organizer of this Meetup group|
                    |photo_album_id|ID of photo album attached to this event, only supplied if fields contains "photo_album_id"|
                    |photo_count|Number of photos in an album associated with this event, only supplied if fields contains "photo_album_id"|
                    |photo_url|URL of the event photo|
                    |rating|The event's rating. If the event hasn't happened yet or there are no ratings submitted, this field will default to 0|
                    |rating_count|The number of ratings that have been submitted for the event. If the event hasn't happened yet or there are no ratings submitted, this field will default to 0|
                    |rsvpcount|Number of "yes" or "maybe" rsvps to this event, including guests.|
                    |short_link|Optional field. If hosting group is private, this will return the group's short_link|
                    |status|Description of the event, see text_format above|
                    |time|The date and time that the event will take place|
                    |updated|The last date and time that the event's information was modified|
                    |utc_rsvp_cutoff|The date and time that members can RSVP until, in milliseconds since the epoch|
                    |utc_rsvp_open_time|The date and time that members can begin to RSVP, in milliseconds since the epoch|
                    |utc_time|The date and time that the event will take place, in milliseconds since the epoch.|
                    |venue_address1|line 1 of venue address|
                    |venue_address2|line 2 of venue address|
                    |venue_city|city of venue|
                    |venue_id|ID of venue|
                    |venue_lat, venue_lon|the latitude and longitude of the venue|
                    |venue_map|URL of a map indicating the venue location|
                    |venue_name|name of venue|
                    |venue_phone|phone number of venue|
                    |venue_state|state of venue|
                    |venue_visibility|Set to "members" or "public". All other venue fields will be blank if the visibility is "members" and the current authenticated user is not a member of the group hosting the event.|
                    |venue_zip|zipcode of venue|
                    |waiting_rsvpcount|Number of waitlist rsvps to this event, including guests, only supplied if fields contains "waiting_rsvpcount"|
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "rsvpcount": "rsvpcount 0",
                                  "venue_name": "venue_name 0",
                                  "maybe_rsvpcount": "maybe_rsvpcount 0",
                                  "my_waitlist_status": "my_waitlist_status 0",
                                  "organizer_id": 0,
                                  "allow_maybe_rsvp": "allow_maybe_rsvp 0",
                                  "feelabel": "feelabel 0",
                                  "member_status": "member_status 0",
                                  "myrsvp": "myrsvp 0",
                                  "id": 0,
                                  "time": "time 0",
                                  "venue_zip": "venue_zip 0",
                                  "venue_visibility": "venue_visibility 0",
                                  "ismeetup": "ismeetup 0",
                                  "feedesc": "feedesc 0",
                                  "venue_address1": "venue_address1 0",
                                  "updated": 0,
                                  "venue_city": "venue_city 0",
                                  "venue_address2": "venue_address2 0",
                                  "description": "description 0",
                                  "name": "name 0",
                                  "venue_id": 0,
                                  "photo_album_id": 0,
                                  "photo_count": 0,
                                  "venue_state": "venue_state 0",
                                  "lat": 1.0,
                                  "lon": 1.0,
                                  "no_rsvpcount": "no_rsvpcount 0",
                                  "status": "status 0",
                                  "photo_url": "photo_url 0",
                                  "guest_limit": "guest_limit 0",
                                  "waiting_rsvpcount": "waiting_rsvpcount 0",
                                  "utc_time": 0,
                                  "utc_rsvp_cutoff": 0,
                                  "organizer_name": "organizer_name 0",
                                  "short_link": "short_link 0",
                                  "utc_rsvp_open_time": 0,
                                  "feecurrency": "feecurrency 0",
                                  "event_hosts": {
                                    "member_name": "member_name 0",
                                    "member_id": 0
                                  },
                                  "attendee_count": 0,
                                  "venue_phone": "venue_phone 0",
                                  "venue_lon": "venue_lon 0",
                                  "fee": "fee 0",
                                  "venue_map": "venue_map 0",
                                  "rating_count": 0,
                                  "how_to_find_us": "how_to_find_us 0",
                                  "rating": "rating 0",
                                  "venue_lat": "venue_lat 0"
                                },
                                {
                                  "rsvpcount": "rsvpcount 1",
                                  "venue_name": "venue_name 1",
                                  "maybe_rsvpcount": "maybe_rsvpcount 1",
                                  "my_waitlist_status": "my_waitlist_status 1",
                                  "organizer_id": 1,
                                  "allow_maybe_rsvp": "allow_maybe_rsvp 1",
                                  "feelabel": "feelabel 1",
                                  "member_status": "member_status 1",
                                  "myrsvp": "myrsvp 1",
                                  "id": 1,
                                  "time": "time 1",
                                  "venue_zip": "venue_zip 1",
                                  "venue_visibility": "venue_visibility 1",
                                  "ismeetup": "ismeetup 1",
                                  "feedesc": "feedesc 1",
                                  "venue_address1": "venue_address1 1",
                                  "updated": 1,
                                  "venue_city": "venue_city 1",
                                  "venue_address2": "venue_address2 1",
                                  "description": "description 1",
                                  "name": "name 1",
                                  "venue_id": 1,
                                  "photo_album_id": 1,
                                  "photo_count": 1,
                                  "venue_state": "venue_state 1",
                                  "lat": 1.0,
                                  "lon": 1.0,
                                  "no_rsvpcount": "no_rsvpcount 1",
                                  "status": "status 1",
                                  "photo_url": "photo_url 1",
                                  "guest_limit": "guest_limit 1",
                                  "waiting_rsvpcount": "waiting_rsvpcount 1",
                                  "utc_time": 1,
                                  "utc_rsvp_cutoff": 1,
                                  "organizer_name": "organizer_name 1",
                                  "short_link": "short_link 1",
                                  "utc_rsvp_open_time": 1,
                                  "feecurrency": "feecurrency 1",
                                  "event_hosts": {
                                    "member_name": "member_name 1",
                                    "member_id": 1
                                  },
                                  "attendee_count": 1,
                                  "venue_phone": "venue_phone 1",
                                  "venue_lon": "venue_lon 1",
                                  "fee": "fee 1",
                                  "venue_map": "venue_map 1",
                                  "rating_count": 1,
                                  "how_to_find_us": "how_to_find_us 1",
                                  "rating": "rating 1",
                                  "venue_lat": "venue_lat 1"
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/oembed: 
    displayName: /oembed
    get: 
        description: |
            oEmbed implementation
            
            #Request Parameters
            This method does not require authentication. It requires only a url parameter and responds according to the OEmbed specification. Any of the following base URLs may refer to embeddable content:
            
            http://www.meetup.com/
            http://meetup.com/
            http://meetu.ps/
            An optional maxwidth parameter may be provided.
        queryParameters: 
            maxwidth: 
                description: maximum width to display
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            url: 
                description: url of resource to be embedded
                type: string
                required: false
                repeat: false
        responses: 
            "200": 
                description: Returns the rich type of ombed resources defined in section 2 of the oEmbed specification in json format.
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/2/cities: 
    displayName: /2/cities
    description: Cities
    get: 
        description: |
            Returns Meetup cities. Can search by location, by query term/zip, or by both. Location-only searches return all cities within a radius of the provided coordinates. Searches with a query return up to 10 cities matching the term, and can be sorted by size or distance to a given coordinate. 'smart' ordering can be used to return the match(es) with the highest member_count, unless a smaller size match exists nearby the given coordinates.
            
            #Request Parameters
            This method requires no authentication but is subject to request limiting based on client IP . This search is location based. A lat and lon must be supplied together or a query or the search will be based on your geolocated ip
        queryParameters: 
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            query: 
                description: Search term and/or zip to look for (if this is specified, max result size limited to 10)
                type: string
                required: false
                repeat: false
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            lon: 
                description: Longitude to search
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            radius: 
                description: When searching by lat/lon only, specify a radius to search (default 50 miles)
                type: string
                required: false
                repeat: false
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: true
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            lat: 
                description: Latitude to search
                type: string
                required: false
                repeat: false
            order: 
                description: |
                    |value|description|
                    |-|
                    |distance|When lat/lon/query provided, sort matches by distance to coordinates|
                    |size|(default order) number of members in the city: descending|
                    |smart|Sort by size, but if a match is close to given lat/lon, float to top. Only works when query provided|
                type: string
                required: false
                repeat: false
                enum: [distance, size, smart]
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |city|The name of the city|
                    |country|The ISO_3166-1 country code for the country which contains the city|
                    |distance|The distance away from the provided coordinates, if applicable|
                    |id|Numeric identifier of the city|
                    |lat|The latitude of the city|
                    |lon|The longitude of the city|
                    |member_count|The number of Meetup members in the city|
                    |name_string|The full name of the city, as returned by query search, if applicable|
                    |ranking|Indicates the best-match ranking of this result|
                    |state|The state which contains the city, if applicable|
                    |zip|The zip code of the city. For cities in countries without zipcodes, a placeholder will be returned|
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "id": 0,
                                  "zip": "zip 0",
                                  "lon": 1.0,
                                  "distance": 1.0,
                                  "member_count": 0,
                                  "name_string": "name_string 0",
                                  "state": 0,
                                  "ranking": "ranking 0",
                                  "lat": 1.0,
                                  "country": "country 0",
                                  "city": "city 0"
                                },
                                {
                                  "id": 1,
                                  "zip": "zip 1",
                                  "lon": 1.0,
                                  "distance": 1.0,
                                  "member_count": 1,
                                  "name_string": "name_string 1",
                                  "state": 1,
                                  "ranking": "ranking 1",
                                  "lat": 1.0,
                                  "country": "country 1",
                                  "city": "city 1"
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/2/open_venues: 
    displayName: /2/open_venues
    get: 
        description: |
            Searches for public venues within a given geo space. To search for specific venues that your group has used, use the Venues method
            
            #Request Parameters
            At least one of the required parameter(s) must be supplied with the request. If you are not able to provide a relative location you may supply a group_urlname which this method will use to infer location from. You can perform prefix searching by appending a * character to your query
        queryParameters: 
            zip: 
                description: A valid US zip code, limits the returned venues to those within radius miles
                type: string
                required: false
                repeat: false
            country: 
                description: A valid country code
                type: string
                required: false
                repeat: false
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            city: 
                description: A valid city
                type: string
                required: false
                repeat: false
            lon: 
                description: Longitude to search
                type: string
                required: false
                repeat: false
            group_urlname: 
                description: Returns venues with location relative to the group associated with this urlname
                type: string
                required: false
                repeat: false
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            state: 
                description: For the US, a valid 2 character state code
                type: string
                required: false
                repeat: false
            text: 
                description: Venues that contain the given term or terms somewhere in their content. Separate terms with " AND " for venues that have combined terms. Append a trailing * to treat this as a prefix search
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            fields: 
                description: Request that additional fields (separated by commas) be included in the output
                type: string
                required: false
                repeat: false
            radius: 
                description: Radius, in miles for geographic requests, default 25.0 -- maximum 100.0
                type: string
                required: false
                repeat: false
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            lat: 
                description: Latitude to search
                type: string
                required: false
                repeat: false
            order: 
                description: |
                    |value|description|
                    |-|
                    |distance|(default order) ordering is approximate and will not exactly match the values in the "distance" field.|
                    |rating|average member rating|
                    |rating_count|number of member ratings.|
                type: string
                required: false
                repeat: false
                enum: [distance, rating, rating_count]
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |address_1|line 1 of venue address|
                    |address_2|line 2 of venue address|
                    |address_3|line 3 of venue address|
                    |city, state, country|City, County and if in US state of venue|
                    |distance|Distance in miles from the search location, if one was specified|
                    |email|email address of venue|
                    |fax|fax number of venue|
                    |id|ID of the venue|
                    |lat, lon|coordinates of venue|
                    |name|Name of the venue|
                    |phone|phone number of venue|
                    |rating|The average member rating|
                    |rating_count|The number of member ratings|
                    |taglist|Optional array of associated tagnames provided when a value of "taglist" is supplied with the "fields" request parameter|
                    |venue_url|URL of the venues's page on meetup.com|
                    |zip|if US or Canada|
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "zip": "zip 0",
                                  "phone": 0,
                                  "lon": 1.0,
                                  "fax": "fax 0",
                                  "address_3": "address_3 0",
                                  "state": 0,
                                  "address_1": "address_1 0",
                                  "address_2": "address_2 0",
                                  "venue_url": "venue_url 0",
                                  "city": "city 0",
                                  "country": "country 0",
                                  "id": 0,
                                  "taglist": "taglist 0",
                                  "distance": 1.0,
                                  "rating_count": 0,
                                  "email": 0,
                                  "name": "name 0",
                                  "rating": "rating 0",
                                  "lat": 1.0
                                },
                                {
                                  "zip": "zip 1",
                                  "phone": 1,
                                  "lon": 1.0,
                                  "fax": "fax 1",
                                  "address_3": "address_3 1",
                                  "state": 1,
                                  "address_1": "address_1 1",
                                  "address_2": "address_2 1",
                                  "venue_url": "venue_url 1",
                                  "city": "city 1",
                                  "country": "country 1",
                                  "id": 1,
                                  "taglist": "taglist 1",
                                  "distance": 1.0,
                                  "rating_count": 1,
                                  "email": 1,
                                  "name": "name 1",
                                  "rating": "rating 1",
                                  "lat": 1.0
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/ew/event: 
    displayName: /ew/event
    post: 
        description: |
            Event Create
            
            #Request Parameters
            An identifier for the community is required as well at least one location parameter set. Other location details may be filled out automatically. This method requires an HTTP POST. If you are not the founder of this container you will automatically be rsvp'd for the event
        queryParameters: 
            venue_name: 
                description: Name of the place where the event will happen
                type: string
                required: false
                repeat: false
            zip: 
                description: A US zip or Canadian postal code. May serve as the required location parameter set.
                type: string
                required: false
                repeat: false
            country: 
                description: A valid country code
                type: string
                required: false
                repeat: false
            community_urlname: 
                description: Up to five URL paths, separated by commas. "urlname" or "container_id" is also required
                type: string
                required: false
                repeat: false
            short_description: 
                description: short description of the event
                type: string
                required: false
                repeat: false
            city: 
                description: A valid city
                type: string
                required: false
                repeat: false
            address1: 
                description: street address; specify an empty string if you want to prevent this from being inferred from other parameters
                type: string
                required: false
                repeat: false
            link: 
                description: Link associated with the event. Displayed on the event page, and users are prompted to follow this link after indicating interest.
                type: string
                required: false
                repeat: false
            description: 
                description: description of the event
                type: string
                required: false
                repeat: false
            lon: 
                description: Longitude to search
                type: string
                required: false
                repeat: false
            udf_{varname}: 
                description: User defined fields
                type: string
                required: false
                repeat: false
            community_id: 
                description: One or more IDs, separated by commas
                type: string
                required: false
                repeat: false
            local_time: 
                description: Alternative to the time parameter for applications that can not easily calculate an event's UTC time. If you know the wall-clock time and location for an event but do not know its UTC offset, you can supply a local_time and Meetup will apply the appropriate offset. The format for this parameter is milliseconds since the epoch as if the event occurred in a UTC zone.
                type: string
                required: false
                repeat: false
            time: 
                description: event start time in milliseconds since the epoch. If the container has a default time value it will be used when no time is supplied, otherwise the event will be created without a time.
                type: string
                required: false
                repeat: false
            urlname: 
                description: |
                    {urlname, community_urlname} Together, may serve as the required identifier of the event community
                type: string
                required: false
                repeat: false
            fields: 
                description: Request that additional fields (separated by commas) be included in the output.
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            lat: 
                description: Latitude to search
                type: string
                required: false
                repeat: false
        responses: 
            "200": 
                description: |
                    When everything goes well, we'll send a 200 response code along with your data.
                    
                    JSON requests that specify a callback parameter are treated differently: the API always responds with an HTTP status of 200, so that a client browser will load the response and handle the callback. When an error occurs its corresponding status line is served in a "status" field of the error response object rather than in the response header.
            "201": 
                description: If successful, this method returns a 201 Created response with a Location header containing the Event Get method for this event. The content body is the same as that returned by Event Get.
                body: 
                    application/json: 
                        example: |
                            {
                              "zip": "zip",
                              "lon": 1.0,
                              "venue_name": "venue_name",
                              "status": "status",
                              "link": "link",
                              "state": 100,
                              "community": {
                                "id": 100,
                                "name": "name",
                                "urlname": "urlname"
                              },
                              "address1": "address1",
                              "city": "city",
                              "country": "country",
                              "helpers": {
                                "member_state": "member_state",
                                "member_city": "member_city",
                                "name": "name",
                                "member_country": "member_country",
                                "member_id": 100
                              },
                              "id": 100,
                              "time": 100,
                              "short_description": "short_description",
                              "updated": 100,
                              "udf_{varname}": "udf_{varname}",
                              "created": 100,
                              "container": {
                                "id": 100,
                                "name": "name",
                                "urlname": "urlname"
                              },
                              "description": "description",
                              "rsvp_count": 100,
                              "meetup_url": "meetup_url",
                              "lat": 1.0
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
    /{id}: 
        displayName: /ew/event/{id}
        uriParameters: 
            id: 
                description: ":id in the path should be the id of an event"
                type: string
                required: false
                repeat: false
        get: 
            description: |
                Event Get
                
                #Request Parameters
                Normal authorization parameters are required. The output may be adjusted as normal with format, as well as a fields specifier
            queryParameters: 
                fields: 
                    description: Request that additional fields (separated by commas) be included in the output.
                    type: string
                    required: false
                    repeat: false
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
            responses: 
                "200": 
                    description: |
                        |||
                        |-|
                        |address1|The street address, if assigned|
                        |city|Event city|
                        |community|Community for this event|
                        |container|Container for this event|
                        |country|Event country|
                        |created|Event created time, in milliseconds since the epoch|
                        |description|Event description.|
                        |helpers|Helpers who planned this event, if any|
                        |id|The ID of the event|
                        |lat, lon|Latitude and longitude coordinates of the event|
                        |link|Link associated with the event. Displayed on the event page, and users are prompted to follow this link after indicating interest.|
                        |meetup_url|User-facing URL for this event on Meetup|
                        |rsvp_count|Current number of rsvps, included only if requested with the fields parameter.|
                        |short_description|Event short description.|
                        |state|State or province|
                        |status|"past", "pending" (no date), or "upcoming"|
                        |time|Start time of the event in milliseconds since the epoch, if set|
                        |udf_{varname}|Any User defined fields specified in the fields parameter|
                        |updated|Event updated time, in milliseconds since the epoch|
                        |venue_name|Name of the place where the event will happen|
                        |zip|Zip or postal code|
                    body: 
                        application/json: 
                            example: |
                                {
                                  "zip": "zip",
                                  "lon": 1.0,
                                  "venue_name": "venue_name",
                                  "status": "status",
                                  "link": "link",
                                  "state": 100,
                                  "community": {
                                    "id": 100,
                                    "name": "name",
                                    "urlname": "urlname"
                                  },
                                  "address1": "address1",
                                  "city": "city",
                                  "country": "country",
                                  "helpers": {
                                    "member_state": "member_state",
                                    "member_city": "member_city",
                                    "name": "name",
                                    "member_country": "member_country",
                                    "member_id": 100
                                  },
                                  "id": 100,
                                  "time": 100,
                                  "short_description": "short_description",
                                  "updated": 100,
                                  "udf_{varname}": "udf_{varname}",
                                  "created": 100,
                                  "container": {
                                    "id": 100,
                                    "name": "name",
                                    "urlname": "urlname"
                                  },
                                  "description": "description",
                                  "rsvp_count": 100,
                                  "meetup_url": "meetup_url",
                                  "lat": 1.0
                                }
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
        post: 
            description: |
                Event Edit
                
                #Request Parameters
                All parameters are optional, will update the event when provided. This method requires an HTTP POST.
            queryParameters: 
                venue_name: 
                    description: Name of the place where the event will happen
                    type: string
                    required: false
                    repeat: false
                zip: 
                    description: A US zip or Canadian postal code. May serve as the required location parameter set.
                    type: string
                    required: false
                    repeat: false
                country: 
                    description: A valid country code
                    type: string
                    required: false
                    repeat: false
                short_description: 
                    description: short description of the event
                    type: string
                    required: false
                    repeat: false
                city: 
                    description: A valid city
                    type: string
                    required: false
                    repeat: false
                address1: 
                    description: street address; specify an empty string if you want to prevent this from being inferred from other parameters
                    type: string
                    required: false
                    repeat: false
                link: 
                    description: Link associated with the event. Displayed on the event page, and users are prompted to follow this link after indicating interest.
                    type: string
                    required: false
                    repeat: false
                description: 
                    description: description of the event
                    type: string
                    required: false
                    repeat: false
                lon: 
                    description: Longitude to search
                    type: string
                    required: false
                    repeat: false
                udf_{varname}: 
                    description: User defined fields
                    type: string
                    required: false
                    repeat: false
                local_time: 
                    description: Alternative to the time parameter for applications that can not easily calculate an event's UTC time. If you know the wall-clock time and location for an event but do not know its UTC offset, you can supply a local_time and Meetup will apply the appropriate offset. The format for this parameter is milliseconds since the epoch as if the event occurred in a UTC zone.
                    type: string
                    required: false
                    repeat: false
                state: 
                    description: location information
                    type: string
                    required: false
                    repeat: false
                time: 
                    description: event start time in milliseconds since the epoch. If the container has a default time value it will be used when no time is supplied, otherwise the event will be created without a time.
                    type: string
                    required: false
                    repeat: false
                fields: 
                    description: Request that additional fields (separated by commas) be included in the output.
                    type: string
                    required: false
                    repeat: false
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
                lat: 
                    description: Latitude to search
                    type: string
                    required: false
                    repeat: false
            responses: 
                "200": 
                    description: If successful, this method returns a 200 OK response. The content body is the same as that returned by Event Get.
                    body: 
                        application/json: 
                            example: |
                                {
                                  "zip": "zip",
                                  "lon": 1.0,
                                  "venue_name": "venue_name",
                                  "status": "status",
                                  "link": "link",
                                  "state": 100,
                                  "community": {
                                    "id": 100,
                                    "name": "name",
                                    "urlname": "urlname"
                                  },
                                  "address1": "address1",
                                  "city": "city",
                                  "country": "country",
                                  "helpers": {
                                    "member_state": "member_state",
                                    "member_city": "member_city",
                                    "name": "name",
                                    "member_country": "member_country",
                                    "member_id": 100
                                  },
                                  "id": 100,
                                  "time": 100,
                                  "short_description": "short_description",
                                  "updated": 100,
                                  "udf_{varname}": "udf_{varname}",
                                  "created": 100,
                                  "container": {
                                    "id": 100,
                                    "name": "name",
                                    "urlname": "urlname"
                                  },
                                  "description": "description",
                                  "rsvp_count": 100,
                                  "meetup_url": "meetup_url",
                                  "lat": 1.0
                                }
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
/2/categories: 
    displayName: /2/categories
    description: Categories
    get: 
        description: Returns a list of Meetup group categories. No required parameters
        queryParameters: 
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            fields: 
                description: Parameter for requesting optional response properties
                type: string
                required: false
                repeat: false
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: true
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            order: 
                description: |
                    |value|description|
                    |-|
                    |member|order by recommendations for authorized member (deprecated)|
                    |shortname|(default order) ascending|
                type: string
                required: false
                repeat: false
                enum: [member, shortname]
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |id|Numeric identifier of the category|
                    |name|Display name of the category|
                    |shortname|String identifier of the category|
                body: 
                    application/json: 
                        schema: ""
                        example: |
                            {
                              "results": [
                                {
                                  "id": 0,
                                  "name": "name 0",
                                  "shortname": "shortname 0"
                                },
                                {
                                  "id": 1,
                                  "name": "name 1",
                                  "shortname": "shortname 1"
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/2/event_ratings: 
    displayName: /2/event_ratings
    get: 
        description: |
            API method for accessing Meetup comments
            
            #Request Parameters
            At least one of the required parameters must be supplied with the request.
        queryParameters: 
            member_id: 
                description: The ID of a member to filter ratings on
                type: string
                required: false
                repeat: false
            event_id: 
                description: The ID of the event to fetch ratings data for
                type: string
                required: false
                repeat: false
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            order: 
                description: |
                    |value|description|
                    |-|
                    |rating|Order by the value for each rating posted|
                    |time|Order by the time that each rating was posted|
                type: string
                required: false
                repeat: false
                enum: [rating, time]
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |event_id|The string ID of the event|
                    |group_id|The ID of the group that the event belongs to|
                    |member_id|id of the member leaving the review|
                    |member_name|name of member leaving th review|
                    |rating|Only present if the authenticated member is the reviewer; number of stars given|
                    |time|The date/time that the review was created|
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "time": "time 0",
                                  "group_id": 0,
                                  "event_id": 0,
                                  "rating": "rating 0",
                                  "member_name": "member_name 0",
                                  "member_id": 0
                                },
                                {
                                  "time": "time 1",
                                  "group_id": 1,
                                  "event_id": 1,
                                  "rating": "rating 1",
                                  "member_name": "member_name 1",
                                  "member_id": 1
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/ew/community: 
    displayName: /ew/community
    description: The collection of community
    post: 
        description: |
            Community Create
            
            #Request Parameters
            An identifier for the container is required as well at least one location parameter set. Other location details may be filled out automatically. This method requires an HTTP POST.
            
            |||
            |-|
            |country, city, state|May serve as the required location parameter set. Country code and city name. For the US, a state code is also required|
            |lat, lon|May serve as the required location parameter set.|
        queryParameters: 
            zip: 
                description: A US zip or Canadian postal code. May serve as the required location parameter set
                type: string
                required: false
                repeat: false
            country: 
                description: A valid country code
                type: string
                required: false
                repeat: false
            city: 
                description: A valid city
                type: string
                required: false
                repeat: false
            name: 
                description: Name of the community
                type: string
                required: false
                repeat: false
            lon: 
                description: Longitude to search
                type: string
                required: false
                repeat: false
            state: 
                description: May serve as the required location parameter set. Country code and city name. For the US, a state code is also required
                type: string
                required: false
                repeat: false
            urlname: 
                description: May serve as the required identifier of the container
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            container_id: 
                description: May serve as the required identifier of the container
                type: string
                required: false
                repeat: false
            lat: 
                description: Latitude to search
                type: string
                required: false
                repeat: false
        responses: 
            "200": 
                description: |
                    When everything goes well, we'll send a 200 response code along with your data.
                    
                    JSON requests that specify a callback parameter are treated differently: the API always responds with an HTTP status of 200, so that a client browser will load the response and handle the callback. When an error occurs its corresponding status line is served in a "status" field of the error response object rather than in the response header.
            "201": 
                description: If successful, this method returns a 201 Created response with a Location header containing the Community Get method for this community. The content body is the same as that returned by Community Get.
                body: 
                    application/json: 
                        example: |
                            {
                              "zip": "zip",
                              "lon": 1.0,
                              "meetup_count": 100,
                              "past_meetup_count": 100,
                              "state": 100,
                              "city": "city",
                              "country": "country",
                              "id": 100,
                              "updated": 100,
                              "udf_{varname}": "udf_{varname}",
                              "created": 100,
                              "container": {
                                "id": 100,
                                "name": "name",
                                "urlname": "urlname"
                              },
                              "name": "name",
                              "meetup_url": "meetup_url",
                              "urlname": "urlname",
                              "lat": 1.0
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
    /{id}: 
        displayName: /ew/community/{id}
        description: The element of collection of community
        uriParameters: 
            id: 
                description: ":id in a community identifier"
                type: string
                required: false
                repeat: false
        get: 
            description: |
                Community Get
                
                #Request Parameters
                Normal authorization parameters are required. The output may be adjusted as normal with format, as well as a fields specifier.
            queryParameters: 
                fields: 
                    description: Request that additional fields (separated by commas) be included in the output.
                    type: string
                    required: false
                    repeat: false
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
            responses: 
                "200": 
                    description: |
                        |||
                        |-|
                        |city|Community city name|
                        |container|Container for this community|
                        |country|Community country code|
                        |created|Community created time, in milliseconds since the epoch|
                        |id|The ID of the community|
                        |lat, lon|Latitude and longitude coordinates of the community|
                        |meetup_count|Count of upcoming and pending Meetups in this community. Only included if requested in the fields parameter.|
                        |meetup_url|User-facing URL for this community on Meetup|
                        |name|Name of the community|
                        |past_meetup_count|Count of past Meetups in this community. Only included if requested in the fields parameter.|
                        |state|State or province code|
                        |udf_{varname}|Any User defined fields specified in the fields parameter|
                        |updated|Community updated time, in milliseconds since the epoch|
                        |urlname|URL path to the community, as in http://www.meetup.com/{container_urlname}/{urlname} (no slashes)|
                        |zip|Zip or postal code|
                    body: 
                        application/json: 
                            example: |
                                {
                                  "zip": "zip",
                                  "lon": 1.0,
                                  "meetup_count": 100,
                                  "past_meetup_count": 100,
                                  "state": 100,
                                  "city": "city",
                                  "country": "country",
                                  "id": 100,
                                  "updated": 100,
                                  "udf_{varname}": "udf_{varname}",
                                  "created": 100,
                                  "container": {
                                    "id": 100,
                                    "name": "name",
                                    "urlname": "urlname"
                                  },
                                  "name": "name",
                                  "meetup_url": "meetup_url",
                                  "urlname": "urlname",
                                  "lat": 1.0
                                }
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
        post: 
            description: |
                Community Edit
                
                #Request Parameters
                All parameters are optional, will update the community when provided. This method requires an HTTP POST.
            queryParameters: 
                zip: 
                    description: Zip or postal code
                    type: string
                    required: false
                    repeat: false
                country: 
                    description: A valid country code
                    type: string
                    required: false
                    repeat: false
                city: 
                    description: A valid city
                    type: string
                    required: false
                    repeat: false
                name: 
                    description: Name of the community
                    type: string
                    required: false
                    repeat: false
                lon: 
                    description: Longitude to search
                    type: string
                    required: false
                    repeat: false
                state: 
                    description: State or province code
                    type: string
                    required: false
                    repeat: false
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
                lat: 
                    description: Latitude to search
                    type: string
                    required: false
                    repeat: false
            responses: 
                "200": 
                    description: 'If successful, this method returns a 200 OK response. The content body is the same as that returned by Community Get ("/ew/community/:id").'
                    body: 
                        application/json: 
                            example: |
                                {
                                  "zip": "zip",
                                  "lon": 1.0,
                                  "meetup_count": 100,
                                  "past_meetup_count": 100,
                                  "state": 100,
                                  "city": "city",
                                  "country": "country",
                                  "id": 100,
                                  "updated": 100,
                                  "udf_{varname}": "udf_{varname}",
                                  "created": 100,
                                  "container": {
                                    "id": 100,
                                    "name": "name",
                                    "urlname": "urlname"
                                  },
                                  "name": "name",
                                  "meetup_url": "meetup_url",
                                  "urlname": "urlname",
                                  "lat": 1.0
                                }
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
        delete: 
            description: |
                Community Delete
                For container owners. API method for removing a community. All events of the community will be removed as well.
                
                #Request Parameters
                No parameters are required or considered other than for authorization and format. This method requires an HTTP DELETE
            queryParameters: 
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
            responses: 
                "200": 
                    description: If successful, this method returns a 200 OK response. The content body includes a success message.
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
/2/event_comment_flag: 
    displayName: /2/event_comment_flag
    post: 
        description: |
            This method creates a spam report for comment content
            
            #Request Parameters
            All required parameters must be supplied.
        queryParameters: 
            reason: 
                description: Reason for flagging the comment. May be one of inappropriate, spam
                type: string
                required: false
                repeat: false
            comment_id: 
                description: The id of the comment
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
        responses: 
            "200": 
                description: |
                    When everything goes well, we'll send a 200 response code along with your data.
                    
                    JSON requests that specify a callback parameter are treated differently: the API always responds with an HTTP status of 200, so that a client browser will load the response and handle the callback. When an error occurs its corresponding status line is served in a "status" field of the error response object rather than in the response header.
            "202": 
                description: If successful, this method returns a 202 Accepted response.
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/2/members: 
    displayName: /2/members
    get: 
        description: |
            API method for accessing members of Meetup Groups
            
            #Request Parameters
            At least one of the required parameter(s) must be supplied with the request. If any of the groups you specify are private, you will not see its members listed in the result set unless you are a member of that group.
        queryParameters: 
            member_id: 
                description: Return comments for the given member_ids, separated by commas
                type: string
                required: false
                repeat: false
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            groupnum: 
                description: |
                    {topic,groupnum} - Return members for the group with given topic and number
                type: string
                required: false
                repeat: false
            group_urlname: 
                description: Return members for the group with the given custom URL path
                type: string
                required: false
                repeat: false
            group_id: 
                description: Return comments in groups with these ID numbers, separated by commas
                type: string
                required: false
                repeat: false
            service: 
                description: |
                    Match users by the external services they've linked to their member account, specified as "servicename:identifier". For example, "service=twitter:@MeetupAPI" finds any member account that lists @MeetupAPI as its Twitter name (none, currently). You can query against several at a time by separating them with commas.
                type: string
                required: false
                repeat: false
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            topic: 
                description: |
                    {topic,groupnum} - Return members for the group with given topic and number
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            fields: 
                description: Request that additional fields (separated by commas) be included in the output.
                type: string
                required: false
                repeat: false
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            order: 
                description: |
                    |value|description|
                    |-|
                    |joined|time member joined Meetup|
                    |name|the name of the member (default order)|
                    |visited|member's most recent activity|
                type: string
                required: false
                repeat: false
                enum: [joined, name, visited]
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |bio|A description of the member|
                    |birthday|If the authorized is the current member, the member's birthday based on provided information|
                    |country, city, state|Country, City, (and for the US, State) the member has provided|
                    |email|Member's email address, if requested in fields parameter. This item is only included if the currently authenticated user is the founder of a Meetup Everywhere in which the member has elected to share an email address.|
                    |gender|Optional fields parameter. Members can only see their own gender. May be one of none, other, female, male|
                    |hometown|Hometown of member|
                    |id|The member's id|
                    |joined|Date and time a member joined in milliseconds since the epoch|
                    |lang|The member's current language preference|
                    |lat, lon|Latitude and longitude coordinates of the members reported city|
                    |link|URL to the member's profile page on meetup.com|
                    |membership_count|Optional field indicating the number of active memberships this member has. If the member has a hidden group preference, this will return 0.|
                    |messagable|Returned when the "fields" parameter is set to "messaging_pref". Returns "true" if the authenticated member can message them, "false" otherwise.|
                    |messaging_pref|Returned when the "fields" parameter is set to "messaging_pref". This specifies the members preference for being contacted from members on the site. Possible values are "orgs_only", "groups_only", "all_members"|
                    |name|The member's name|
                    |other_services|Third-party services associated with the member account|
                    |photo|The member's photo if available|
                    |photo_url|Link to the profile photo of the member|
                    |photos|List of all the member's photos returned as an array of the representation of the photo property|
                    |privacy|Optional fields parameter. Defines preferences for visibility of certain attributes only returned for the authenticated member|
                    |reachable|Optional fields parameter. If querying by group and the authorized member is an organizer the member's group, this will return false when the member's email address is known to bounce and true otherwise|
                    |self|Optional field, details particular to the authorized user.|
                    |topics|A sampling of 50 topics this member has subscribed to. Only appears if the queried user has not hidden them, or if the authenticated and queried user are the same|
                    |visited|Date and time of member's last activity in milliseconds since the epoch|
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "birthday": {
                                    "month": 0,
                                    "year": "year 0",
                                    "day": "day 0"
                                  },
                                  "messaging_pref": "messaging_pref 0",
                                  "link": "link 0",
                                  "state": 0,
                                  "self": {
                                    "common": {
                                      "friends": "friends 0",
                                      "groups": "groups 0"
                                    }
                                  },
                                  "lang": "lang 0",
                                  "city": "city 0",
                                  "visited": 0,
                                  "id": 0,
                                  "joined": 0,
                                  "reachable": "reachable 0",
                                  "name": "name 0",
                                  "gender": "gender 0",
                                  "other_services": {
                                    "[service-name]": {
                                      "identifier": "identifier 0"
                                    }
                                  },
                                  "lat": 1.0,
                                  "lon": 1.0,
                                  "hometown": "hometown 0",
                                  "membership_count": 0,
                                  "photo_url": "photo_url 0",
                                  "privacy": {
                                    "photos": "photos 0",
                                    "topics": "topics 0",
                                    "bio": "bio 0",
                                    "facebook": "facebook 0",
                                    "groups": "groups 0"
                                  },
                                  "photo": {
                                    "photo_link": "photo_link 0",
                                    "highres_link": "highres_link 0",
                                    "thumb_link": "thumb_link 0",
                                    "photo_id": 0
                                  },
                                  "country": "country 0",
                                  "photos": "photos 0",
                                  "topics": {
                                    "id": 0,
                                    "urlkey": "urlkey 0",
                                    "name": "name 0"
                                  },
                                  "bio": "bio 0",
                                  "email": 0,
                                  "messagable": "messagable 0"
                                },
                                {
                                  "birthday": {
                                    "month": 1,
                                    "year": "year 1",
                                    "day": "day 1"
                                  },
                                  "messaging_pref": "messaging_pref 1",
                                  "link": "link 1",
                                  "state": 1,
                                  "self": {
                                    "common": {
                                      "friends": "friends 1",
                                      "groups": "groups 1"
                                    }
                                  },
                                  "lang": "lang 1",
                                  "city": "city 1",
                                  "visited": 1,
                                  "id": 1,
                                  "joined": 1,
                                  "reachable": "reachable 1",
                                  "name": "name 1",
                                  "gender": "gender 1",
                                  "other_services": {
                                    "[service-name]": {
                                      "identifier": "identifier 1"
                                    }
                                  },
                                  "lat": 1.0,
                                  "lon": 1.0,
                                  "hometown": "hometown 1",
                                  "membership_count": 1,
                                  "photo_url": "photo_url 1",
                                  "privacy": {
                                    "photos": "photos 1",
                                    "topics": "topics 1",
                                    "bio": "bio 1",
                                    "facebook": "facebook 1",
                                    "groups": "groups 1"
                                  },
                                  "photo": {
                                    "photo_link": "photo_link 1",
                                    "highres_link": "highres_link 1",
                                    "thumb_link": "thumb_link 1",
                                    "photo_id": 1
                                  },
                                  "country": "country 1",
                                  "photos": "photos 1",
                                  "topics": {
                                    "id": 1,
                                    "urlkey": "urlkey 1",
                                    "name": "name 1"
                                  },
                                  "bio": "bio 1",
                                  "email": 1,
                                  "messagable": "messagable 1"
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/2/member/{id}: 
    displayName: /2/member/{id}
    uriParameters: 
        id: 
            description: ":id in the path should be the id of a member"
            type: string
            required: false
            repeat: false
    get: 
        description: |
            Retrieve a single member
            
            #Request Parameters
            Only authorization parameters are needed.
        queryParameters: 
            fields: 
                description: comma-separate list of optional fields
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |bio|A description of the member|
                    |birthday|If the authorized is the current member, the member's birthday based on provided information|
                    |country, city, state|Country, City, (and for the US, State) the member has provided|
                    |email|Member's email address, if requested in fields parameter. This item is only included if the currently authenticated user is the founder of a Meetup Everywhere in which the member has elected to share an email address.|
                    |gender|Optional fields parameter. Members can only see their own gender. May be one of none, other, female, male|
                    |hometown|Hometown of member|
                    |id|The member's id|
                    |joined|Date and time a member joined in milliseconds since the epoch|
                    |lang|The member's current language preference|
                    |lat, lon|Latitude and longitude coordinates of the members reported city|
                    |link|URL to the member's profile page on meetup.com|
                    |membership_count|Optional field indicating the number of active memberships this member has. If the member has a hidden group preference, this will return 0.|
                    |messagable|Returned when the "fields" parameter is set to "messaging_pref". Returns "true" if the authenticated member can message them, "false" otherwise.|
                    |messaging_pref|Returned when the "fields" parameter is set to "messaging_pref". This specifies the members preference for being contacted from members on the site. Possible values are "orgs_only", "groups_only", "all_members"|
                    |name|The member's name|
                    |other_services|Third-party services associated with the member account|
                    |photo|The member's photo if available|
                    |photo_url|Link to the profile photo of the member|
                    |photos|List of all the member's photos returned as an array of the representation of the photo property|
                    |privacy|Optional fields parameter. Defines preferences for visibility of certain attributes only returned for the authenticated member|
                    |reachable|Optional fields parameter. If querying by group and the authorized member is an organizer the member's group, this will return false when the member's email address is known to bounce and true otherwise|
                    |self|Optional field, details particular to the authorized user.|
                    |topics|A sampling of 50 topics this member has subscribed to. Only appears if the queried user has not hidden them, or if the authenticated and queried user are the same|
                    |visited|Date and time of member's last activity in milliseconds since the epoch|
                body: 
                    application/json: 
                        example: |
                            {
                              "birthday": {
                                "month": 100,
                                "year": "year",
                                "day": "day"
                              },
                              "messaging_pref": "messaging_pref",
                              "link": "link",
                              "state": 100,
                              "self": {
                                "common": {
                                  "friends": "friends",
                                  "groups": "groups"
                                }
                              },
                              "lang": "lang",
                              "city": "city",
                              "visited": 100,
                              "id": 100,
                              "joined": 100,
                              "reachable": "reachable",
                              "name": "name",
                              "gender": "gender",
                              "other_services": {
                                "[service-name]": {
                                  "identifier": "identifier"
                                }
                              },
                              "lat": 1.0,
                              "lon": 1.0,
                              "hometown": "hometown",
                              "membership_count": 100,
                              "photo_url": "photo_url",
                              "privacy": {
                                "photos": "photos",
                                "topics": "topics",
                                "bio": "bio",
                                "facebook": "facebook",
                                "groups": "groups"
                              },
                              "photo": {
                                "photo_link": "photo_link",
                                "highres_link": "highres_link",
                                "thumb_link": "thumb_link",
                                "photo_id": 100
                              },
                              "country": "country",
                              "photos": "photos",
                              "topics": {
                                "id": 100,
                                "urlkey": "urlkey",
                                "name": "name"
                              },
                              "bio": "bio",
                              "email": 100,
                              "messagable": "messagable"
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
    post: 
        description: |
            Edit the authorized member's attributes
            
            #Request Parameters
            This method requires tls. Only the authorized user may edit their own propertries. A city may be provided by either a city_id or a combination of lat and lon
        queryParameters: 
            birthday: 
                description: Day you were born. Format should be in the form of yyyy or mmddyyyy. A value of -1 indicates that birthday data should be cleared.
                type: string
                required: false
                repeat: false
            zip: 
                description: Valid zip code for city
                type: string
                required: false
                repeat: false
            country: 
                description: A valid country code
                type: string
                required: false
                repeat: false
            hometown: 
                description: Hometown of member. Can not be longer than 64 characters
                type: string
                required: false
                repeat: false
            remove_topics: 
                description: Comma-delimited list of topic ids to remove from your alert list
                type: string
                required: false
                repeat: false
            gender: 
                description: Your gender (used for better recommendations). Valid values are be one of none, other, female, male
                type: string
                required: false
                repeat: false
            photo_id: 
                description: A valid photo_id from the member's photos to set as the main profile photo
                type: string
                required: false
                repeat: false
            city: 
                description: A valid city
                type: string
                required: false
                repeat: false
            topics_privacy: 
                description: Controls the visibility of the member's topics. May be one of hidden, visible
                type: string
                required: false
                repeat: false
            bio: 
                description: Free form text passage about you. must be less than 250 characters
                type: string
                required: false
                repeat: false
            facebook_privacy: 
                description: Controls the visibility of the member's facebook connection. May be one of hidden, visible. If the member has not connected their Facebook account, attempts to set this preference will do nothing.
                type: string
                required: false
                repeat: false
            lon: 
                description: Longitude to search
                type: string
                required: false
                repeat: false
            groups_privacy: 
                description: Controls the visibility of the member's groups. May be one of hidden, visible
                type: string
                required: false
                repeat: false
            add_topics: 
                description: Comma-delimited list of topics ids to add to your alert list
                type: string
                required: false
                repeat: false
            sync_photo: 
                description: When set to true, this parameter will sync all of the group profile photos for the member with the provided photo_id
                type: string
                required: false
                repeat: false
            name: 
                description: The name of the current member
                type: string
                required: false
                repeat: false
            bio_privacy: 
                description: Controls the visibility of the member's bio. May be one of hidden, visible
                type: string
                required: false
                repeat: false
            photos_privacy: 
                description: Controls the visibility of the member's photos. May be one of hidden, visible
                type: string
                required: false
                repeat: false
            lang: 
                description: Language preference used on the site. Valid values are en_us, de, es, fr, it, pt
                type: string
                required: false
                repeat: false
            radius: 
                description: radius, in miles to search for city given a lat and lon. default 25.0, max 100.0
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            lat: 
                description: Latitude to search
                type: string
                required: false
                repeat: false
            city_id: 
                description: Valid city id from /2/cities method
                type: string
                required: false
                repeat: false
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |bio|A description of the member|
                    |birthday|If the authorized is the current member, the member's birthday based on provided information|
                    |country, city, state|Country, City, (and for the US, State) the member has provided|
                    |email|Member's email address, if requested in fields parameter. This item is only included if the currently authenticated user is the founder of a Meetup Everywhere in which the member has elected to share an email address.|
                    |gender|Optional fields parameter. Members can only see their own gender. May be one of none, other, female, male|
                    |hometown|Hometown of member|
                    |id|The member's id|
                    |joined|Date and time a member joined in milliseconds since the epoch|
                    |lang|The member's current language preference|
                    |lat, lon|Latitude and longitude coordinates of the members reported city|
                    |link|URL to the member's profile page on meetup.com|
                    |membership_count|Optional field indicating the number of active memberships this member has. If the member has a hidden group preference, this will return 0.|
                    |messagable|Returned when the "fields" parameter is set to "messaging_pref". Returns "true" if the authenticated member can message them, "false" otherwise.|
                    |messaging_pref|Returned when the "fields" parameter is set to "messaging_pref". This specifies the members preference for being contacted from members on the site. Possible values are "orgs_only", "groups_only", "all_members"|
                    |name|The member's name|
                    |other_services|Third-party services associated with the member account|
                    |photo|The member's photo if available|
                    |photo_url|Link to the profile photo of the member|
                    |photos|List of all the member's photos returned as an array of the representation of the photo property|
                    |privacy|Optional fields parameter. Defines preferences for visibility of certain attributes only returned for the authenticated member|
                    |reachable|Optional fields parameter. If querying by group and the authorized member is an organizer the member's group, this will return false when the member's email address is known to bounce and true otherwise|
                    |self|Optional field, details particular to the authorized user.|
                    |topics|A sampling of 50 topics this member has subscribed to. Only appears if the queried user has not hidden them, or if the authenticated and queried user are the same|
                    |visited|Date and time of member's last activity in milliseconds since the epoch|
                body: 
                    application/json: 
                        example: |
                            {
                              "birthday": {
                                "month": 100,
                                "year": "year",
                                "day": "day"
                              },
                              "messaging_pref": "messaging_pref",
                              "link": "link",
                              "state": 100,
                              "self": {
                                "common": {
                                  "friends": "friends",
                                  "groups": "groups"
                                }
                              },
                              "lang": "lang",
                              "city": "city",
                              "visited": 100,
                              "id": 100,
                              "joined": 100,
                              "reachable": "reachable",
                              "name": "name",
                              "gender": "gender",
                              "other_services": {
                                "[service-name]": {
                                  "identifier": "identifier"
                                }
                              },
                              "lat": 1.0,
                              "lon": 1.0,
                              "hometown": "hometown",
                              "membership_count": 100,
                              "photo_url": "photo_url",
                              "privacy": {
                                "photos": "photos",
                                "topics": "topics",
                                "bio": "bio",
                                "facebook": "facebook",
                                "groups": "groups"
                              },
                              "photo": {
                                "photo_link": "photo_link",
                                "highres_link": "highres_link",
                                "thumb_link": "thumb_link",
                                "photo_id": 100
                              },
                              "country": "country",
                              "photos": "photos",
                              "topics": {
                                "id": 100,
                                "urlkey": "urlkey",
                                "name": "name"
                              },
                              "bio": "bio",
                              "email": 100,
                              "messagable": "messagable"
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/2/photo: 
    displayName: /2/photo
    post: 
        description: |
            Uploads a photo for a given event
            
            #Request Parameters
            A photo album or event ID must be supplied with the request, which must be a POST of content-type multipart/form-data. The currently authenticated user must be a member of the group that is hosting the event. Parameters other than photo may be passed in as a query string or within the posted content. If authenticating with OAuth, no parameters in the multipart form data should be included in the signature base string
        queryParameters: 
            photo_album_id: 
                description: Identifier of an existing photo album, which may be an event or group album
                type: string
                required: false
                repeat: false
            event_id: 
                description: Identifier of an event. If there is no album for this event, one will be created.
                type: string
                required: false
                repeat: false
            await: 
                description: If true, this ensures a response will not be returned until the upload is accessible
                type: string
                required: false
                repeat: false
            caption: 
                description: Caption for the photo
                type: string
                required: false
                repeat: false
            photo: 
                description: The photo, encoded as multipart/form-data. The maximum file size allowed is 10MB
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
        responses: 
            "200": 
                description: |
                    When successful, this method responds with a status of "201 Created" and a Location header with the uploaded photo's URL. The response body contains the following elements in JSON or XML. Upon recieving the response, some photos may not be immediately accesible. If this is desirable, use the "await" request parameter
                    |||
                    |-|
                    |album_id|Identifier of the photo's album|
                    |created|Created time in milliseconds since the epoch|
                    |event_photo_id|Unique identifier of this photo|
                    |member|Member that uploaded the photo|
                    |photo_url|Link to the uploaded event photo (same as in the Location header).|
                    |site_link|URL for photo in photo album on meetup.com|
                    |title|Request Completed|
                    |updated|Last updated time in milliseconds since the epoch|
                body: 
                    application/json: 
                        example: |
                            {
                              "member": {
                                "name": "name",
                                "member_id": 100
                              },
                              "album_id": 100,
                              "title": 100,
                              "site_link": "site_link",
                              "event_photo_id": 100,
                              "updated": 100,
                              "created": 100,
                              "photo_url": "photo_url"
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
    /{id}: 
        displayName: /2/photo/{id}
        uriParameters: 
            id: 
                description: ":id is the photo identifier"
                type: string
                required: false
                repeat: false
        delete: 
            description: |
                Delete specified event photo
                
                #Request Parameters
                Only authorization parameters are needed. Authorized user must be the original poster of the photo or the organizer of the group the photo was posted in
            queryParameters: 
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
            responses: 
                "200": 
                    description: Returns an HTTP 200 response if delete was successful.
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: Returns an HTTP 401 response if unauthorized.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
/ew/communities: 
    displayName: /ew/communities
    get: 
        description: |
            Communities Query
            
            #Request Parameters
            at least one of the required parameter(s) must be supplied with the request.
            country, city and state are regarded as the one parameter.
            lat, lon are regarded as the one parameter.
        queryParameters: 
            zip: 
                description: A US zip or Canadian postal code
                type: string
                required: false
                repeat: false
            country: 
                description: A valid country code
                type: string
                required: false
                repeat: false
            community_urlname: 
                description: Up to five URL paths, separated by commas. "urlname" or "container_id" is also required
                type: string
                required: false
                repeat: false
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            city: 
                description: A valid city
                type: string
                required: false
                repeat: false
            lon: 
                description: Longitude to search
                type: string
                required: false
                repeat: false
            udf_{varname}: 
                description: User defined fields
                type: string
                required: false
                repeat: false
            community_id: 
                description: One or more IDs, separated by commas
                type: string
                required: false
                repeat: false
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            state: 
                description: For the US, state code is required
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            urlname: 
                description: Up to five URL paths, separated by commas
                type: string
                required: false
                repeat: false
            fields: 
                description: Request that additional fields (separated by commas) be included in the output.
                type: string
                required: false
                repeat: false
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            container_id: 
                description: One or more IDs, separated by commas
                type: string
                required: false
                repeat: false
            lat: 
                description: Latitude to search
                type: string
                required: false
                repeat: false
            order: 
                description: How to order the results
                type: string
                required: false
                repeat: false
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: 'Each item in the results list for a JSON or XML request will contain the fields listed in Community Get ("/ew/community/:id")'
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "zip": "zip 0",
                                  "lon": 1.0,
                                  "meetup_count": 0,
                                  "past_meetup_count": 0,
                                  "state": 0,
                                  "city": "city 0",
                                  "country": "country 0",
                                  "id": 0,
                                  "updated": 0,
                                  "udf_{varname}": "udf_{varname} 0",
                                  "created": 0,
                                  "container": {
                                    "id": 0,
                                    "name": "name 0",
                                    "urlname": "urlname 0"
                                  },
                                  "name": "name 0",
                                  "meetup_url": "meetup_url 0",
                                  "urlname": "urlname 0",
                                  "lat": 1.0
                                },
                                {
                                  "zip": "zip 1",
                                  "lon": 1.0,
                                  "meetup_count": 1,
                                  "past_meetup_count": 1,
                                  "state": 1,
                                  "city": "city 1",
                                  "country": "country 1",
                                  "id": 1,
                                  "updated": 1,
                                  "udf_{varname}": "udf_{varname} 1",
                                  "created": 1,
                                  "container": {
                                    "id": 1,
                                    "name": "name 1",
                                    "urlname": "urlname 1"
                                  },
                                  "name": "name 1",
                                  "meetup_url": "meetup_url 1",
                                  "urlname": "urlname 1",
                                  "lat": 1.0
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/2/event_comments: 
    displayName: /2/event_comments
    get: 
        description: |
            This method returns messages that appear under "Talk about this Meetup". To post messages, see the corresponding write method.
            
            #Request Parameters
            At least one of the required parameters must be supplied with the request.
        queryParameters: 
            member_id: 
                description: Return comments for the given member_ids, separated by commas
                type: string
                required: false
                repeat: false
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            comment_id: 
                description: Return comments for a given set of comment IDs, separated by commas
                type: string
                required: false
                repeat: false
            show_diffs: 
                description: Return auto-generated event change comments. Default value is true, turn off by specifying "show_diffs=false".
                type: string
                required: false
                repeat: false
            event_id: 
                description: Return comments on these events, separated by commas.
                type: string
                required: false
                repeat: false
            group_id: 
                description: Return comments in groups with these ID numbers, separated by commas
                type: string
                required: false
                repeat: false
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            fields: 
                description: Optionally accepts the value "member_photo" or "notifications"
                type: string
                required: false
                repeat: false
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            order: 
                description: |
                    |value|description|
                    |-|
                    |name|Order by the name of the member|
                    |thread|Order by comment threads, those with the most recent activity are listed first. Only one event may be provided and desc not supported. Also note that with this ordering, *replies* are excluded from pagination accounting. Only top-level comments will be capped at the page size.|
                    |time|Order by the time that each rating was posted (default: descending)|
                type: string
                required: false
                repeat: false
                enum: [name, thread, time]
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |comment|The comment the member left for the event|
                    |comment_url|URL for the event comment on meetup.com|
                    |event|Optional field, basic info on event associated with comment|
                    |event_comment_id|The ID of this comment|
                    |event_diff_id|The ID of this comment if it is an auto-generated event change comment|
                    |event_id|The string ID of the event the comment belongs to|
                    |group_id|The ID of the group that the event belongs to|
                    |in_reply_to|If this is a reply, the ID of the comment replied to|
                    |like_count|optional fields parameter which adds the number of likes this comment has received|
                    |member_id|The ID of the member that posted the comment. May be 0 for former members|
                    |member_name|The name of the member that posted the comment. May be "Former Member" for former members|
                    |member_photo|If the optional "fields" parameter contains "member_photo", the member photo associated with the comment|
                    |notifications|optional fields parameter to append the authorized member's current notification preference for the given comment|
                    |self|Optional field with details particular to the authorized user, only present if requested and user is a member of the hosting group|
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "event_diff_id": 0,
                                  "member_photo": {
                                    "photo_link": "photo_link 0",
                                    "hires_link": "hires_link 0",
                                    "thumb_link": "thumb_link 0",
                                    "photo_id": 0
                                  },
                                  "notifications": "notifications 0",
                                  "like_count": 0,
                                  "event": {
                                    "id": 0,
                                    "time": 0,
                                    "event_url": "event_url 0",
                                    "name": "name 0"
                                  },
                                  "comment_url": "comment_url 0",
                                  "group_id": 0,
                                  "event_id": 0,
                                  "self": {
                                    "actions": "actions 0"
                                  },
                                  "member_name": "member_name 0",
                                  "in_reply_to": 0,
                                  "comment": "comment 0",
                                  "event_comment_id": 0,
                                  "member_id": 0
                                },
                                {
                                  "event_diff_id": 1,
                                  "member_photo": {
                                    "photo_link": "photo_link 1",
                                    "hires_link": "hires_link 1",
                                    "thumb_link": "thumb_link 1",
                                    "photo_id": 1
                                  },
                                  "notifications": "notifications 1",
                                  "like_count": 1,
                                  "event": {
                                    "id": 1,
                                    "time": 1,
                                    "event_url": "event_url 1",
                                    "name": "name 1"
                                  },
                                  "comment_url": "comment_url 1",
                                  "group_id": 1,
                                  "event_id": 1,
                                  "self": {
                                    "actions": "actions 1"
                                  },
                                  "member_name": "member_name 1",
                                  "in_reply_to": 1,
                                  "comment": "comment 1",
                                  "event_comment_id": 1,
                                  "member_id": 1
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/ew/rsvp: 
    displayName: /ew/rsvp
    post: 
        description: |
            RSVP Create
            
            #Request Parameters
            At least one of the required parameter(s) must be supplied with the request. The RSVP is always applied for the current authenticated member. This method requires an HTTP POST.
        queryParameters: 
            event_id: 
                description: ID of an event
                type: string
                required: false
                repeat: false
            fields: 
                description: Request that additional fields (separated by commas) be included in the output.
                type: string
                required: false
                repeat: false
            udf_{varname}: 
                description: User defined fields
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
        responses: 
            "200": 
                description: |
                    When everything goes well, we'll send a 200 response code along with your data.
                    
                    JSON requests that specify a callback parameter are treated differently: the API always responds with an HTTP status of 200, so that a client browser will load the response and handle the callback. When an error occurs its corresponding status line is served in a "status" field of the error response object rather than in the response header.
            "201": 
                description: If successful, this method returns a 201 Created response with a Location header containing the RSVP Get method for this event. The content body is the same as that returned by RSVP Get.
                body: 
                    application/json: 
                        example: |
                            {
                              "member": {
                                "member_state": "member_state",
                                "member_city": "member_city",
                                "name": "name",
                                "member_country": "member_country",
                                "member_id": 100
                              },
                              "id": 100,
                              "member_photo": {
                                "photo_link": "photo_link",
                                "highres_link": "highres_link",
                                "thumb_link": "thumb_link",
                                "photo_id": 100
                              },
                              "udf_{varname}": "udf_{varname}",
                              "created": 100,
                              "event_id": 100
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
    /{id}: 
        displayName: /ew/rsvp/{id}
        uriParameters: 
            id: 
                description: ":id in the path should be the id of a RSVP"
                type: string
                required: false
                repeat: false
        get: 
            description: |
                RSVP Get
                
                #Request Parameters
                No parameters are required other than for authorization and format.
            queryParameters: 
                fields: 
                    description: Request that additional fields (separated by commas) be included in the output.
                    type: string
                    required: false
                    repeat: false
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
            responses: 
                "200": 
                    description: |
                        |||
                        |-|
                        |created|rsvp created time, in milliseconds since the epoch|
                        |event_id|The ID of the event|
                        |id|The ID of the rsvp|
                        |member|Member that rsvp'd|
                        |member_photo|Photo info, if available, for the member|
                        |udf_{varname}|User defined fields specified in the fields parameter|
                    body: 
                        application/json: 
                            example: |
                                {
                                  "member": {
                                    "member_state": "member_state",
                                    "member_city": "member_city",
                                    "name": "name",
                                    "member_country": "member_country",
                                    "member_id": 100
                                  },
                                  "id": 100,
                                  "member_photo": {
                                    "photo_link": "photo_link",
                                    "highres_link": "highres_link",
                                    "thumb_link": "thumb_link",
                                    "photo_id": 100
                                  },
                                  "udf_{varname}": "udf_{varname}",
                                  "created": 100,
                                  "event_id": 100
                                }
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
        delete: 
            description: |
                RSVP Delete
                
                #Request Parameters
                No parameters are required or considered other than for authorization and format. This method requires an HTTP DELETE
            queryParameters: 
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
            responses: 
                "200": 
                    description: If successful, this method returns a 200 OK response. The content body includes a success message.
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
/find/groups: 
    displayName: /find/groups
    get: 
        description: |
            Text, location, category and friend-based group searches
            
            #Request Parameters
            All parameters are optional. If you do not supply some form of location, the results will be implicitly based on your IP's geographic location. See the 'filter' parameter for more information controlling the results returned. Ordering does not apply to friend-filtered queries.
        queryParameters: 
            zip: 
                description: Zipcode of location to limit search to
                type: string
                required: false
                repeat: false
            country: 
                description: A valid two character country code, defaults to US
                type: string
                required: false
                repeat: false
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            upcoming_events: 
                description: If true, filters text and category based searches on groups that have upcoming events. Defaults to false
                type: string
                required: false
                repeat: false
            lon: 
                description: Longitude to search
                type: string
                required: false
                repeat: false
            filter: 
                description: Determines which groups are returned. If 'all' (default), the text and category parameters are applied. If 'friends', groups your friends are in are returned. The value of this parameter may be one of all, friends
                type: string
                required: false
                repeat: false
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            location: 
                description: Raw text location query
                type: string
                required: false
                repeat: false
            text: 
                description: Raw full text search query
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            category: 
                description: Comma-delimited list of numeric category ids
                type: string
                required: false
                repeat: false
            fields: 
                description: Request that additional fields (separated by commas) be included in the output.
                type: string
                required: false
                repeat: false
            radius: 
                description: Radius in miles. May be 0.0-100.0, 'global' or 'smart', a dynamic radius based on the number of active groups in the area
                type: string
                required: false
                repeat: false
            self_groups: 
                description: set to 'include' or 'exclude' meetups the authorized member belongs to; default is 'include'
                type: string
                required: false
                repeat: false
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            lat: 
                description: Latitude to search
                type: string
                required: false
                repeat: false
            order: 
                description: |
                    |value|description|
                    |-|
                    |distance|Order by distance|
                    |members|Order by number of members|
                    |most_active|Order by group with most active members|
                    |newest|Order by date group was founded|
                type: string
                required: false
                repeat: false
                enum: [distance, members, most_active, newest]
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |category|The primary category of the group, if the group has one|
                    |city|City of the group|
                    |country|Country of the group|
                    |created|Time the group was created in milliseconds since the epoch|
                    |description|Short description of group|
                    |ga_code|Optional field return the google analytics code for the group. Only members that can edit group settings can see this|
                    |group_photo|Group photo|
                    |id|Numeric group ID|
                    |is_simplehtml|Optional field, 'true' when the group description has been saved in a simplified HTML format, 'false' otherwise.|
                    |join_info|Optional field, lists any questions requested when joining and required fields|
                    |join_mode|Who can join this group and how. One of approval, closed, open|
                    |lat|Latitude|
                    |link|Link to group on meetup.com|
                    |list_addr|Optional field returning list address prefix. List mail will be {list_addr}-list@meetup.com. Announce email will be {list_addr}-announce@meetup.com. You must be a member of the group to see this|
                    |list_mode|Optional fields parameter representing the policy for who can post the the group mailing list. One of moderated, off, open, orgs_only|
                    |lon|Longitude|
                    |members|Number of Meetup members in this group|
                    |name|Name of the group|
                    |next_event|The next upcoming event, if the group has one|
                    |organizer|Group's primary organizer|
                    |photos|A small set of photos from the group|
                    |simple_html_description|Description of the group, in simple HTML format. This value is translated to HTML to update the description.|
                    |state|State of the group, if in US or Canada|
                    |timezone|This represents the universal timezone identifier for the group|
                    |urlname|Urlname used to identify the group on meetup.com|
                    |visibility|Who can see this group. One of members, public or public_limited|
                    |who|What the group calls its members|
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "visibility": "visibility 0",
                                  "is_simplehtml": "is_simplehtml 0",
                                  "link": "link 0",
                                  "next_event": {
                                    "id": 0,
                                    "time": 0,
                                    "name": "name 0"
                                  },
                                  "state": 0,
                                  "join_mode": "join_mode 0",
                                  "who": "who 0",
                                  "city": "city 0",
                                  "id": 0,
                                  "timezone": "timezone 0",
                                  "created": 0,
                                  "list_addr": "list_addr 0",
                                  "description": "description 0",
                                  "ga_code": "ga_code 0",
                                  "name": "name 0",
                                  "urlname": "urlname 0",
                                  "lat": 1.0,
                                  "members": "members 0",
                                  "list_mode": "list_mode 0",
                                  "lon": 1.0,
                                  "join_info": {
                                    "questions": {
                                      "id": 0,
                                      "question": "question 0"
                                    },
                                    "intro_required": "intro_required 0",
                                    "questions_req": "questions_req 0",
                                    "photo_required": "photo_required 0"
                                  },
                                  "organizer": {
                                    "id": 0,
                                    "bio": "bio 0",
                                    "name": "name 0"
                                  },
                                  "country": "country 0",
                                  "photos": {
                                    "id": 0,
                                    "photo_link": "photo_link 0",
                                    "highres_link": "highres_link 0",
                                    "thumb_link": "thumb_link 0"
                                  },
                                  "category": {
                                    "id": 0,
                                    "name": "name 0",
                                    "shortname": "shortname 0"
                                  },
                                  "group_photo": {
                                    "id": 0,
                                    "photo_link": "photo_link 0",
                                    "highres_link": "highres_link 0",
                                    "thumb_link": "thumb_link 0"
                                  },
                                  "simple_html_description": "simple_html_description 0"
                                },
                                {
                                  "visibility": "visibility 1",
                                  "is_simplehtml": "is_simplehtml 1",
                                  "link": "link 1",
                                  "next_event": {
                                    "id": 1,
                                    "time": 1,
                                    "name": "name 1"
                                  },
                                  "state": 1,
                                  "join_mode": "join_mode 1",
                                  "who": "who 1",
                                  "city": "city 1",
                                  "id": 1,
                                  "timezone": "timezone 1",
                                  "created": 1,
                                  "list_addr": "list_addr 1",
                                  "description": "description 1",
                                  "ga_code": "ga_code 1",
                                  "name": "name 1",
                                  "urlname": "urlname 1",
                                  "lat": 1.0,
                                  "members": "members 1",
                                  "list_mode": "list_mode 1",
                                  "lon": 1.0,
                                  "join_info": {
                                    "questions": {
                                      "id": 1,
                                      "question": "question 1"
                                    },
                                    "intro_required": "intro_required 1",
                                    "questions_req": "questions_req 1",
                                    "photo_required": "photo_required 1"
                                  },
                                  "organizer": {
                                    "id": 1,
                                    "bio": "bio 1",
                                    "name": "name 1"
                                  },
                                  "country": "country 1",
                                  "photos": {
                                    "id": 1,
                                    "photo_link": "photo_link 1",
                                    "highres_link": "highres_link 1",
                                    "thumb_link": "thumb_link 1"
                                  },
                                  "category": {
                                    "id": 1,
                                    "name": "name 1",
                                    "shortname": "shortname 1"
                                  },
                                  "group_photo": {
                                    "id": 1,
                                    "photo_link": "photo_link 1",
                                    "highres_link": "highres_link 1",
                                    "thumb_link": "thumb_link 1"
                                  },
                                  "simple_html_description": "simple_html_description 1"
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/2/event_comment: 
    displayName: /2/event_comment
    post: 
        description: |
            This method posts messages that appear under "Talk about this Meetup".
            
            #Request Parameters
            All of the required parameters must be supplied with the request, which must be an HTTP POST. The currently authenticated user must be a member of the group hosting the event
        queryParameters: 
            event_id: 
                description: The event related to this comment.
                type: string
                required: false
                repeat: false
            comment: 
                description: The comment text
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            notifications: 
                description: Notification control for authorized member on this comment thread. "on" will result in notifications being sent. "off" will opt the member out of notifications for this comment thread. Defaults to "on" unless the member previous opted out of notifications on the thread.
                type: string
                required: false
                repeat: false
            in_reply_to: 
                description: If this comment is a reply, the ID of the comment being replied to
                type: string
                required: false
                repeat: false
        responses: 
            "200": 
                description: |
                    When everything goes well, we'll send a 200 response code along with your data.
                    
                    JSON requests that specify a callback parameter are treated differently: the API always responds with an HTTP status of 200, so that a client browser will load the response and handle the callback. When an error occurs its corresponding status line is served in a "status" field of the error response object rather than in the response header.
            "201": 
                description: 'If successful, this method responds with a "201 Created" status and a JSON or XML body consisting of the posted comment in the same fields as the response items of the Event Comment Get ("/2/event_comment/:id") method.'
                body: 
                    application/json: 
                        example: |
                            {
                              "event_diff_id": 100,
                              "comment_url": "comment_url",
                              "group_id": 100,
                              "event_id": 100,
                              "self": {
                                "actions": "actions"
                              },
                              "in_reply_to": 100,
                              "member_id": 100,
                              "member_photo": {
                                "photo_link": "photo_link",
                                "hires_link": "hires_link",
                                "thumb_link": "thumb_link",
                                "photo_id": 100
                              },
                              "notifications": "notifications",
                              "replies": "replies",
                              "event": {
                                "id": 100,
                                "time": 100,
                                "event_url": "event_url",
                                "name": "name"
                              },
                              "like_count": 100,
                              "comment": "comment",
                              "member_name": "member_name",
                              "event_comment_id": 100
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
    /{id}: 
        displayName: /2/event_comment/{id}
        uriParameters: 
            id: 
                description: ":id is a comment identifier"
                type: string
                required: false
                repeat: false
        get: 
            description: |
                Retrieve a single event comment or reply
                
                #Request Parameters
                Only authorization parameters are needed.
            queryParameters: 
                fields: 
                    description: comma-separate list of optional fields
                    type: string
                    required: false
                    repeat: false
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
            responses: 
                "200": 
                    description: |
                        |||
                        |-|
                        |comment|The comment the member left for the event|
                        |comment_url|URL for the event comment on meetup.com|
                        |event|Optional field, basic info on event associated with comment|
                        |event_comment_id|The ID of this comment|
                        |event_diff_id|The ID of this comment if it is an auto-generated event change comment|
                        |event_id|The string ID of the event the comment belongs to|
                        |group_id|The ID of the group that the event belongs to|
                        |in_reply_to|If this is a reply, the ID of the comment replied to|
                        |like_count|optional fields parameter which adds the number of likes this comment has received|
                        |member_id|The ID of the member that posted the comment. May be 0 for former members|
                        |member_name|The name of the member that posted the comment. May be "Former Member" for former members|
                        |member_photo|If the optional "fields" parameter contains "member_photo", the member photo associated with the comment|
                        |notifications|optional fields parameter to append the authorized member's current notification preference for the given comment|
                        |replies|Optional fields parameter returning array of the last 20 replies to comment|
                        |self|Optional field with details particular to the authorized user, only present if requested and user is a member of the hosting group|
                    body: 
                        application/json: 
                            example: |
                                {
                                  "event_diff_id": 100,
                                  "comment_url": "comment_url",
                                  "group_id": 100,
                                  "event_id": 100,
                                  "self": {
                                    "actions": "actions"
                                  },
                                  "in_reply_to": 100,
                                  "member_id": 100,
                                  "member_photo": {
                                    "photo_link": "photo_link",
                                    "hires_link": "hires_link",
                                    "thumb_link": "thumb_link",
                                    "photo_id": 100
                                  },
                                  "notifications": "notifications",
                                  "replies": "replies",
                                  "event": {
                                    "id": 100,
                                    "time": 100,
                                    "event_url": "event_url",
                                    "name": "name"
                                  },
                                  "like_count": 100,
                                  "comment": "comment",
                                  "member_name": "member_name",
                                  "event_comment_id": 100
                                }
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
        delete: 
            description: |
                Delete a single event comment or reply
                
                #Request Parameters
                Only authorization parameters are needed.
            queryParameters: 
                fields: 
                    description: comma-separate list of optional fields
                    type: string
                    required: false
                    repeat: false
            responses: 
                "200": 
                    description: Returns an HTTP 200 response if delete was successful.
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: Returns an HTTP 401 response if unauthorized.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
/2/photo_albums: 
    displayName: /2/photo_albums
    get: 
        description: |
            This method returns photo albums associated with Meetup groups. To create albums, see the corresponding write method.
             
             #Request Parameters
             At least one of the required parameter(s) must be supplied with the request.
        queryParameters: 
            photo_album_id: 
                description: Return albums with these IDs, separated by commas
                type: string
                required: false
                repeat: false
            event_id: 
                description: Return photo albums for these event ids, separated by commas
                type: string
                required: false
                repeat: false
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            group_id: 
                description: Return albums in groups with these ID, separated by commas
                type: string
                required: false
                repeat: false
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            order: 
                description: |
                    |value|description|
                    |-|
                    |time|creation date and time|
                    |title|title of the album|
                    |updated|album updated field|
                type: string
                required: false
                repeat: false
                enum: [time, title, updated]
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |album_photo|Selected photo from the album to display in listings|
                    |created|Created time in milliseconds since the epoch|
                    |event_id|Event ID if this is an event photo album|
                    |group_id|ID of the group that created the album|
                    |ordering|If a custom ordering is defined, a list of photo IDs|
                    |photo_album_id|Unique identifier of the album|
                    |photo_count|Number of photos in the album|
                    |title|Photo album title|
                    |updated|Last updated time in milliseconds since the epoch|
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "title": 0,
                                  "album_photo": {
                                    "photo_link": "photo_link 0",
                                    "highres_link": "highres_link 0",
                                    "thumb_link": "thumb_link 0",
                                    "photo_id": 0
                                  },
                                  "updated": 0,
                                  "created": 0,
                                  "group_id": 0,
                                  "photo_album_id": 0,
                                  "ordering": 0,
                                  "event_id": 0,
                                  "photo_count": 0
                                },
                                {
                                  "title": 1,
                                  "album_photo": {
                                    "photo_link": "photo_link 1",
                                    "highres_link": "highres_link 1",
                                    "thumb_link": "thumb_link 1",
                                    "photo_id": 1
                                  },
                                  "updated": 1,
                                  "created": 1,
                                  "group_id": 1,
                                  "photo_album_id": 1,
                                  "ordering": 1,
                                  "event_id": 1,
                                  "photo_count": 1
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/activity: 
    displayName: /activity
    get: 
        description: API method for retrieving the activity feed for a member's groups
        queryParameters: 
            member_id: 
                description: Returns activity from this member's groups. Must be authenticated as this member
                type: string
                required: false
                repeat: false
            page_start: 
                description: Starting timestamp for item to return.
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |group_id|Unique ID of the group where the action took place.|
                    |group_name|Name of the group where the action took place.|
                    |id|Unique identifier for the feed item.|
                    |item_type|Type of activity that occurred. One of: new_member, chapter_greeting, photo_upload, new_discussion, new_reply, new_rsvp, edit_rsvp, photo_tag, photo_comment, new_checkin|
                    |link|URL to the content represented in the action.|
                    |member_id|ID of member who performed the action.|
                    |member_name|Member who performed the action.|
                    |photo_url|Link to the profile photo of the member represented (except in the case of photo actions, where the photo URL is used instead).|
                    |published|Date and time of when the action occurred.|
                    |title|A short description of the action that occurred.|
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "id": 0,
                                  "group_name": "group_name 0",
                                  "title": 0,
                                  "photo_url": "photo_url 0",
                                  "link": "link 0",
                                  "group_id": 0,
                                  "published": "published 0",
                                  "member_name": "member_name 0",
                                  "member_id": 0,
                                  "item_type": "item_type 0"
                                },
                                {
                                  "id": 1,
                                  "group_name": "group_name 1",
                                  "title": 1,
                                  "photo_url": "photo_url 1",
                                  "link": "link 1",
                                  "group_id": 1,
                                  "published": "published 1",
                                  "member_name": "member_name 1",
                                  "member_id": 1,
                                  "item_type": "item_type 1"
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/ew/containers: 
    displayName: /ew/containers
    get: 
        description: |
            Container Query
            
            #Request Parameters
            At least one of the required parameter(s) must be supplied with the request.
        queryParameters: 
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            link: 
                description: External URL associated with the container
                type: string
                required: false
                repeat: false
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            urlname: 
                description: |
                    URL path to the container, as in http://www.meetup.com/ (no slashes)
                type: string
                required: false
                repeat: false
            fields: 
                description: Request that additional fields (separated by commas) be included in the output.
                type: string
                required: false
                repeat: false
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            udf_{varname}: 
                description: User defined fields
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            container_id: 
                description: ID of the container
                type: string
                required: false
                repeat: false
            order: 
                description: How to order the results
                type: string
                required: false
                repeat: false
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: Each item in the results list for a JSON or XML request will contain the fields listed in Container Get.
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "twitter_urlname": "twitter_urlname 0",
                                  "member_count": 0,
                                  "link_name": "link_name 0",
                                  "meetup_count": 0,
                                  "theme": {
                                    "pageback_color": "pageback_color 0",
                                    "link_color": "link_color 0",
                                    "banner_height": "banner_height 0",
                                    "button_color": "button_color 0",
                                    "boxback_color": "boxback_color 0",
                                    "banner_link": "banner_link 0"
                                  },
                                  "link": "link 0",
                                  "past_meetup_count": 0,
                                  "countries": "countries 0",
                                  "facebook_urlname": "facebook_urlname 0",
                                  "id": 0,
                                  "updated": 0,
                                  "udf_{varname}": "udf_{varname} 0",
                                  "created": 0,
                                  "description": "description 0",
                                  "name": "name 0",
                                  "meetup_url": "meetup_url 0",
                                  "urlname": "urlname 0",
                                  "founder": {
                                    "member_state": "member_state 0",
                                    "member_city": "member_city 0",
                                    "name": "name 0",
                                    "member_country": "member_country 0",
                                    "member_id": 0
                                  }
                                },
                                {
                                  "twitter_urlname": "twitter_urlname 1",
                                  "member_count": 1,
                                  "link_name": "link_name 1",
                                  "meetup_count": 1,
                                  "theme": {
                                    "pageback_color": "pageback_color 1",
                                    "link_color": "link_color 1",
                                    "banner_height": "banner_height 1",
                                    "button_color": "button_color 1",
                                    "boxback_color": "boxback_color 1",
                                    "banner_link": "banner_link 1"
                                  },
                                  "link": "link 1",
                                  "past_meetup_count": 1,
                                  "countries": "countries 1",
                                  "facebook_urlname": "facebook_urlname 1",
                                  "id": 1,
                                  "updated": 1,
                                  "udf_{varname}": "udf_{varname} 1",
                                  "created": 1,
                                  "description": "description 1",
                                  "name": "name 1",
                                  "meetup_url": "meetup_url 1",
                                  "urlname": "urlname 1",
                                  "founder": {
                                    "member_state": "member_state 1",
                                    "member_city": "member_city 1",
                                    "name": "name 1",
                                    "member_country": "member_country 1",
                                    "member_id": 1
                                  }
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/ew/container: 
    displayName: /ew/container
    post: 
        description: |
            Container Create
            
            #Request Parameters
            The required name parameter must be supplied with the request. This method requires an HTTP POST.
        queryParameters: 
            twitter_urlname: 
                description: account name, no slash or @
                type: string
                required: false
                repeat: false
            link: 
                description: must be a URL
                type: string
                required: false
                repeat: false
            name: 
                description: Name of this container
                type: string
                required: false
                repeat: false
            description: 
                description: Description of this container
                type: string
                required: false
                repeat: false
            fields: 
                description: Request that additional fields (separated by commas) be included in the output.
                type: string
                required: false
                repeat: false
            link_name: 
                description: Name of link
                type: string
                required: false
                repeat: false
            udf_{varname}: 
                description: User defined fields
                type: string
                required: false
                repeat: false
            facebook_urlname: 
                description: path name without slashes
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
        responses: 
            "200": 
                description: If successful, this method returns a 200 OK response. The content body is the same as that returned by Container Get.
                body: 
                    application/json: 
                        example: |
                            {
                              "twitter_urlname": "twitter_urlname",
                              "member_count": 100,
                              "link_name": "link_name",
                              "meetup_count": 100,
                              "theme": {
                                "pageback_color": "pageback_color",
                                "link_color": "link_color",
                                "banner_height": "banner_height",
                                "button_color": "button_color",
                                "boxback_color": "boxback_color",
                                "banner_link": "banner_link"
                              },
                              "link": "link",
                              "past_meetup_count": 100,
                              "countries": "countries",
                              "facebook_urlname": "facebook_urlname",
                              "id": 100,
                              "updated": 100,
                              "udf_{varname}": "udf_{varname}",
                              "created": 100,
                              "description": "description",
                              "name": "name",
                              "meetup_url": "meetup_url",
                              "urlname": "urlname",
                              "founder": {
                                "member_state": "member_state",
                                "member_city": "member_city",
                                "name": "name",
                                "member_country": "member_country",
                                "member_id": 100
                              }
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
    /{id}: 
        displayName: /ew/container/{id}
        description: |
            Container Edit
            
            #Request Parameters
            All parameters are optional, will update the container when provided. You must be authenticated as the founder, and this method requires an HTTP POST.
        uriParameters: 
            id: 
                description: ":id in the path should be the id of a container"
                type: string
                required: false
                repeat: false
        get: 
            description: |
                Container Get
                
                #Request Parameters
                Normal authorization parameters are required. The output may be adjusted as normal with format, as well as a fields specifier
            queryParameters: 
                fields: 
                    description: Request that additional fields (separated by commas) be included in the output
                    type: string
                    required: false
                    repeat: false
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
            responses: 
                "200": 
                    description: |
                        |||
                        |-|
                        |countries|List of two-letter country codes where meetups have been scheduled in this container. Only included if requested in the fields parameter.|
                        |created|Container created time, in milliseconds since the epoch|
                        |description|Container description|
                        |facebook_urlname|Facebook page associated with this container|
                        |founder|Founder for this container|
                        |id|The ID of the container|
                        |link|URL associated with this container, usually off-site|
                        |link_name|Name of the resource at link|
                        |meetup_count|Count of upcoming and pending meetups in this container. Only included if requested in the fields parameter.|
                        |meetup_url|User-facing URL for this container on Meetup|
                        |member_count|Count of unique members who have rsvp'd to a meetup in this container. Only included if requested in the fields parameter.|
                        |name|The name of the container|
                        |past_meetup_count|Count of past meetups in this container. Only included if requested in the fields parameter.|
                        |theme|Custom appearance for this container, if any|
                        |twitter_urlname|Twitter account name associated with this container|
                        |udf_{varname}|Any User defined fields specified in the fields parameter|
                        |updated|Container updated time, in milliseconds since the epoch|
                        |urlname|URL path to the container, as in http://www.meetup.com/ (no slashes)|
                    body: 
                        application/json: 
                            example: |
                                {
                                  "twitter_urlname": "twitter_urlname",
                                  "member_count": 100,
                                  "link_name": "link_name",
                                  "meetup_count": 100,
                                  "theme": {
                                    "pageback_color": "pageback_color",
                                    "link_color": "link_color",
                                    "banner_height": "banner_height",
                                    "button_color": "button_color",
                                    "boxback_color": "boxback_color",
                                    "banner_link": "banner_link"
                                  },
                                  "link": "link",
                                  "past_meetup_count": 100,
                                  "countries": "countries",
                                  "facebook_urlname": "facebook_urlname",
                                  "id": 100,
                                  "updated": 100,
                                  "udf_{varname}": "udf_{varname}",
                                  "created": 100,
                                  "description": "description",
                                  "name": "name",
                                  "meetup_url": "meetup_url",
                                  "urlname": "urlname",
                                  "founder": {
                                    "member_state": "member_state",
                                    "member_city": "member_city",
                                    "name": "name",
                                    "member_country": "member_country",
                                    "member_id": 100
                                  }
                                }
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
        post: 
            queryParameters: 
                twitter_urlname: 
                    description: account name, no slash or @
                    type: string
                    required: false
                    repeat: false
                link: 
                    description: must be a URL
                    type: string
                    required: false
                    repeat: false
                name: 
                    description: Name of this container
                    type: string
                    required: false
                    repeat: false
                description: 
                    description: Description of this container
                    type: string
                    required: false
                    repeat: false
                fields: 
                    description: Request that additional fields (separated by commas) be included in the output.
                    type: string
                    required: false
                    repeat: false
                link_name: 
                    description: Name of link
                    type: string
                    required: false
                    repeat: false
                udf_{varname}: 
                    description: User defined fields
                    type: string
                    required: false
                    repeat: false
                facebook_urlname: 
                    description: path name without slashes
                    type: string
                    required: false
                    repeat: false
                key: 
                    type: string
                    required: false
                    repeat: false
                    enum: ["783060637886b293b764b2a6831240"]
                    default: "783060637886b293b764b2a6831240"
            responses: 
                "200": 
                    description: If successful, this method returns a 200 OK response. The content body is the same as that returned by Container Get.
                    body: 
                        application/json: 
                            example: |
                                {
                                  "twitter_urlname": "twitter_urlname",
                                  "member_count": 100,
                                  "link_name": "link_name",
                                  "meetup_count": 100,
                                  "theme": {
                                    "pageback_color": "pageback_color",
                                    "link_color": "link_color",
                                    "banner_height": "banner_height",
                                    "button_color": "button_color",
                                    "boxback_color": "boxback_color",
                                    "banner_link": "banner_link"
                                  },
                                  "link": "link",
                                  "past_meetup_count": 100,
                                  "countries": "countries",
                                  "facebook_urlname": "facebook_urlname",
                                  "id": 100,
                                  "updated": 100,
                                  "udf_{varname}": "udf_{varname}",
                                  "created": 100,
                                  "description": "description",
                                  "name": "name",
                                  "meetup_url": "meetup_url",
                                  "urlname": "urlname",
                                  "founder": {
                                    "member_state": "member_state",
                                    "member_city": "member_city",
                                    "name": "name",
                                    "member_country": "member_country",
                                    "member_id": 100
                                  }
                                }
                "400": 
                    description: |
                        Bad request when there was a problem with the request.
                        
                        The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                "401": 
                    description: |
                        Unauthorized when you don't provide a valid key.
                "500": 
                    description: |
                        Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
            protocols: [HTTP]
        /alerts: 
            displayName: /ew/container/{id}/alerts
            uriParameters: 
                id: 
                    description: ":id in the path should be the id of a container"
                    type: string
                    required: false
                    repeat: false
            get: 
                description: |
                    Alerts Get
                    
                    #Request Parameters
                    No parameters are required or considered other than for authorization and format.
                queryParameters: 
                    comments: 
                        description: Alert for each comment, "true" or "false"
                        type: string
                        required: false
                        repeat: false
                    offset: 
                        description: The starting page for results to return
                        type: integer
                        required: false
                        repeat: false
                        minimum: 0
                    rsvps: 
                        description: Alert for each rsvp, "true" or "false"
                        type: string
                        required: false
                        repeat: false
                    only: 
                        description: You can select result fields by specifying only parameters
                        type: string
                        required: false
                        repeat: false
                    page: 
                        description: The page size
                        type: integer
                        required: false
                        repeat: false
                        minimum: 1
                    updates: 
                        description: Alert for updates to events, "true" or "false"
                        type: string
                        required: false
                        repeat: false
                    omit: 
                        description: You can suppress result fields by specifying omit parameters
                        type: string
                        required: false
                        repeat: false
                    key: 
                        type: string
                        required: false
                        repeat: false
                        enum: ["783060637886b293b764b2a6831240"]
                        default: "783060637886b293b764b2a6831240"
                    order: 
                        description: How to order the results
                        type: string
                        required: false
                        repeat: false
                    desc: 
                        description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                        type: string
                        required: false
                        repeat: false
                        enum: [desc, "true", "false"]
                responses: 
                    "200": 
                        description: Response item includes properties for the authenticated user's alerts by category. These are enabled at the container level, but sent only for events the user has rsvpd to.
                    "400": 
                        description: |
                            Bad request when there was a problem with the request.
                            
                            The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                    "401": 
                        description: |
                            Unauthorized when you don't provide a valid key.
                    "500": 
                        description: |
                            Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
                    "404": 
                        description: If the authenticated user has not subscribed to alerts for the container, a 404 response is returned.
                protocols: [HTTP]
            post: 
                description: |
                    Alerts Edit
                    
                    #Request Parameters
                    All parameters are optional, updates alerts for the authenticated user. This method requires an HTTP POST.
                queryParameters: 
                    comments: 
                        description: Alert for each comment, "true" or "false"
                        type: string
                        required: false
                        repeat: false
                    rsvps: 
                        description: Alert for each rsvp, "true" or "false"
                        type: string
                        required: false
                        repeat: false
                    updates: 
                        description: Alert for updates to events, "true" or "false"
                        type: string
                        required: false
                        repeat: false
                    key: 
                        type: string
                        required: false
                        repeat: false
                        enum: ["783060637886b293b764b2a6831240"]
                        default: "783060637886b293b764b2a6831240"
                responses: 
                    "200": 
                        description: If successful, this method returns a 200 OK response. The content body is the same as that returned by Alerts Get.
                    "400": 
                        description: |
                            Bad request when there was a problem with the request.
                            
                            The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
                    "401": 
                        description: |
                            Unauthorized when you don't provide a valid key.
                    "500": 
                        description: |
                            Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
                    "404": 
                        description: If a 404 response is returned, the user has not subscribed to any alerts for this container and should rsvp to an event first.
                protocols: [HTTP]
/recommended/venues: 
    displayName: /recommended/venues
    get: 
        description: |
            Returns venues Meetup finds relevant to you based on location and category. This method does not yet support sorting or pagination.
            
            #Request Parameters
            All parameters are optional. If you do not supply a location your request will be based on your IP's geographic location. If the server is unable to produce recommendations in a suitable amount of time, a 503 error will be returned.
        queryParameters: 
            zip: 
                description: Zip code you are searching for recommendations in
                type: string
                required: false
                repeat: false
            country: 
                description: A valid two character country code, defaults to US
                type: string
                required: false
                repeat: false
            used_between: 
                description: Return venues that have been used within the given time range, defined by two times separated with a single comma. Each end of the range may be specified with relative dates, such as "1m" for one month from now, or by absolute time in milliseconds since the epoch. If an endpoint is omitted, the range is unbounded on that end. The default value is unbounded on both ends (though restricted to the search window described above).
                type: string
                required: false
                repeat: false
            min_groups: 
                description: The minimum number of groups that have hosted events at this venue
                type: string
                required: false
                repeat: false
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            lon: 
                description: Longitude to search
                type: string
                required: false
                repeat: false
            group_urlname: 
                description: Comma-delimited list of up to 200 group urlnames to help inform recommendations
                type: string
                required: false
                repeat: false
            group_id: 
                description: Comma-delimited list of up to 200 group ids to help inform recommendations
                type: string
                required: false
                repeat: false
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            location: 
                description: Raw text location query
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            category: 
                description: Comma-delimited list of up to 200 category ids to help inform recommendations
                type: string
                required: false
                repeat: false
            radius: 
                description: Radius in miles
                type: string
                required: false
                repeat: false
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            lat: 
                description: Latitude to search
                type: string
                required: false
                repeat: false
            order: 
                description: How to order the results
                type: string
                required: false
                repeat: false
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |address_1|If available, the first address line of the venue|
                    |address_2|If available, the second address line of the venue|
                    |address_3|If available, the third address line of the venue|
                    |city|If available, the name of the venue's city|
                    |country|If available, the name of the venue's country code|
                    |id|ID, of the venue|
                    |lat|If available, the venue's latitude|
                    |lon|If available, the venue's longitude|
                    |name|If available, the venue's name|
                    |phone|If available, the venue's photo number|
                    |state|If available and the venue's country id within the US or Canada, the venue's state|
                    |visibility|'private' if this venue is a private home, otherwise 'public'|
                    |zip|If available, the venue's zipcode|
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "id": 0,
                                  "zip": "zip 0",
                                  "phone": 0,
                                  "lon": 1.0,
                                  "address_3": "address_3 0",
                                  "visibility": "visibility 0",
                                  "name": "name 0",
                                  "state": 0,
                                  "address_1": "address_1 0",
                                  "address_2": "address_2 0",
                                  "lat": 1.0,
                                  "country": "country 0",
                                  "city": "city 0"
                                },
                                {
                                  "id": 1,
                                  "zip": "zip 1",
                                  "phone": 1,
                                  "lon": 1.0,
                                  "address_3": "address_3 1",
                                  "visibility": "visibility 1",
                                  "name": "name 1",
                                  "state": 1,
                                  "address_1": "address_1 1",
                                  "address_2": "address_2 1",
                                  "lat": 1.0,
                                  "country": "country 1",
                                  "city": "city 1"
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/members: 
    displayName: /members
    get: 
        description: |
            API method for accessing members of Meetup Groups
            
            #Request Parameters
            At least one of the required parameter(s) must be supplied with the request. If any of the groups you specify are private, you will not see its members listed in the result set unless you are a member of that group.
        queryParameters: 
            member_id: 
                description: Return comments for the given member_ids, separated by commas
                type: string
                required: false
                repeat: false
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            groupnum: 
                description: |
                    {topic, groupnum} - Return members for the group with given topic and number
                type: string
                required: false
                repeat: false
            group_urlname: 
                description: Return members for the group with the given custom URL path
                type: string
                required: false
                repeat: false
            relation: 
                description: Supply the string "self" as the value for this parameter to get the information of the member linked to the API key making the request
                type: string
                required: false
                repeat: false
            group_id: 
                description: Return comments in groups with these ID numbers, separated by commas
                type: string
                required: false
                repeat: false
            service: 
                description: |
                    Match users by the external services they've linked to their member account, specified as "servicename:identifier". For example, "service=twitter:@MeetupAPI" finds any member account that lists @MeetupAPI as its Twitter name (none, currently). You can query against several at a time by separating them with commas.
                type: string
                required: false
                repeat: false
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            topic: 
                description: |
                    {topic, groupnum} - Return members for the group with given topic and number
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            fields: 
                description: Request that additional fields (separated by commas) be included in the output.
                type: string
                required: false
                repeat: false
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            order: 
                description: |
                    |value|description|
                    |-|
                    |name|the name of the member|
                    |visited|member's most recent activity|
                type: string
                required: false
                repeat: false
                enum: [name, visited]
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |bio|A description of the member|
                    |country, city, state|Country, City, (and for the US, State) the member has provided|
                    |email|Member's email address, if requested in fields parameter. This item is only included if the currently authenticated user is the founder of a Meetup Everywhere in which the member has elected to share an email address.|
                    |id|The member's id|
                    |joined|Date and time a member joined|
                    |lang|The member's current language preference|
                    |lat, lon|Latitude and longitude coordinates of the members reported city|
                    |link|URL to the member's profile page on meetup.com|
                    |messaging_pref|returned when the "fields" parameter is set to "messging_pref". This specifies the members preference for being contacted from members on the site. Possible values are "orgs_only", "groups_only", "all_members"|
                    |name||
                    |other_services|Third-party services associated with the member account|
                    |photo_url|Link to the profile photo of the member|
                    |topics|A sampling of 50 topics this member has subscribed to. Only appears if the queried user has not hidden them, or if the authenticated and queried user are the same|
                    |visited|Date and time of member's last activity|
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "lon": 1.0,
                                  "photo_url": "photo_url 0",
                                  "messaging_pref": "messaging_pref 0",
                                  "link": "link 0",
                                  "state": 0,
                                  "lang": "lang 0",
                                  "country": "country 0",
                                  "city": "city 0",
                                  "visited": "visited 0",
                                  "id": 0,
                                  "topics": {
                                    "id": 0,
                                    "urlkey": "urlkey 0",
                                    "name": "name 0"
                                  },
                                  "joined": "joined 0",
                                  "bio": "bio 0",
                                  "email": 0,
                                  "name": "name 0",
                                  "other_services": {
                                    "[service-name]": {
                                      "identifier": "identifier 0"
                                    }
                                  },
                                  "lat": 1.0
                                },
                                {
                                  "lon": 1.0,
                                  "photo_url": "photo_url 1",
                                  "messaging_pref": "messaging_pref 1",
                                  "link": "link 1",
                                  "state": 1,
                                  "lang": "lang 1",
                                  "country": "country 1",
                                  "city": "city 1",
                                  "visited": "visited 1",
                                  "id": 1,
                                  "topics": {
                                    "id": 1,
                                    "urlkey": "urlkey 1",
                                    "name": "name 1"
                                  },
                                  "joined": "joined 1",
                                  "bio": "bio 1",
                                  "email": 1,
                                  "name": "name 1",
                                  "other_services": {
                                    "[service-name]": {
                                      "identifier": "identifier 1"
                                    }
                                  },
                                  "lat": 1.0
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/photo: 
    displayName: /photo
    post: 
        description: |
            Uploads a new Event photo
            
            #Request Parameters
            A photo album or event ID must be supplied with the request, which must be a POST of content-type multipart/form-data. The currently authenticated user must be a member of the group that is hosting the event. Parameters other than photo may be passed in as a query string or within the posted content. If authenticating with OAuth, no parameters in the multipart form data should be included in the signature base string
        queryParameters: 
            photo_album_id: 
                description: Identifier of an existing photo album, which may be an event or group album
                type: string
                required: false
                repeat: false
            event_id: 
                description: Identifier of an event. If there is no album for this event, one will be created.
                type: string
                required: false
                repeat: false
            caption: 
                description: Caption for the photo
                type: string
                required: false
                repeat: false
            photo: 
                description: The photo, encoded as multipart/form-data. The maxiumum file size allowed is __10MB__
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
        responses: 
            "200": 
                description: |
                    For this method, response data will only consist of either a success or failure message. If the upload was successful, the following properties will be returned
                    |||
                    |-|
                    |album_id|Id of the album posted to|
                    |details|photo id: and the Id of the photo|
                    |photo_id|Id of the photo created|
                    |title|completed message|
                body: 
                    application/json: 
                        example: |
                            {
                              "album_id": 100,
                              "title": 100,
                              "details": "details",
                              "photo_id": 100
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/2/checkin: 
    displayName: /2/checkin
    post: 
        description: |
            This method posts event checkins that can be retrieved by /2/checkins. Event attendees may check in themselves and others in the group.
            
            #Request Parameters
            All of the required parameters must be supplied with the request, which must be a standard POST
        queryParameters: 
            event_id: 
                description: Event we're checking in to
                type: string
                required: false
                repeat: false
            comment: 
                description: Comment to attach to the checkin. When checking in someone else, this request parameter is ignored.
                type: string
                required: false
                repeat: false
            lon: 
                description: Longitude to search
                type: string
                required: false
                repeat: false
            attendee_member_id: 
                description: Supply this parameter only when the user is checking in someone else. The currently authenticated member will be recorded as the checker while the member referenced by this parameter will appear in the member_id and member_name response fields of the checkins method
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: true
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            lat: 
                description: Latitude to search
                type: string
                required: false
                repeat: false
        responses: 
            "200": 
                description: |
                    When everything goes well, we'll send a 200 response code along with your data.
                    
                    JSON requests that specify a callback parameter are treated differently: the API always responds with an HTTP status of 200, so that a client browser will load the response and handle the callback. When an error occurs its corresponding status line is served in a "status" field of the error response object rather than in the response header.
            "201": 
                description: |
                    If successful, this method responds with a "201 Created" status and a json or XML body consisting of the posted checkin in the same fields as the response items of the Checkins method.
                    Errors:
                    |||
                    |-|
                    |badevent|The event id does not match a valid event|
                    |nonmember|The authenticated member is not a member of the group hosting the event|
                body: 
                    application/json: 
                        example: |
                            {
                              "checkin_id": 100,
                              "time": 100,
                              "lon": 1.0,
                              "group_id": 100,
                              "event_id": 100,
                              "member_name": "member_name",
                              "comment": "comment",
                              "lat": 1.0,
                              "checker": {
                                "member_state": "member_state",
                                "member_city": "member_city",
                                "name": "name",
                                "member_country": "member_country",
                                "member_id": 100
                              },
                              "member_id": 100
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/2/photos: 
    displayName: /2/photos
    get: 
        description: |
            This method returns photos by member, group, album, event, photo ID, or tagged member.
            
            #Request Parameters
            At least one of the required parameter(s) must be supplied with the request.
        queryParameters: 
            member_id: 
                description: Return comments for the given member_ids, separated by commas
                type: string
                required: false
                repeat: false
            photo_album_id: 
                description: Photo Album IDs, separated by commas
                type: string
                required: false
                repeat: false
            photo_id: 
                description: Photo IDs, separated by commas
                type: string
                required: false
                repeat: false
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            group_urlname: 
                description: Group urlnames, separated by commas
                type: string
                required: false
                repeat: false
            event_id: 
                description: Event ids, separated by commas. These may contain alphanumeric autoscheduled event ids, only photos of reified events will be returned
                type: string
                required: false
                repeat: false
            tagged: 
                description: Tagged with members with these IDs, separated by commas
                type: string
                required: false
                repeat: false
            group_id: 
                description: Return comments in groups with these ID numbers, separated by commas
                type: string
                required: false
                repeat: false
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            time: 
                description: Return photos uploaded within the given time range, defined by two times separated with a single comma. Each end of the range may be specified with relative dates, such as "1m" for one month from now, or by absolute time in milliseconds since the epoch. If an endpoint is omitted, the range is unbounded on that end. The default value is unbounded on both ends (though restricted to the search window described above).
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            fields: 
                description: comma-delimited optional response properties such as member_country, member_city, member_state, and self
                type: string
                required: false
                repeat: false
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            order: 
                description: |
                    |value|description|
                    |-|
                    |time|creation date and time|
                type: string
                required: false
                repeat: false
                enum: [time]
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |caption|Photo caption|
                    |created|Created time in milliseconds since the epoch|
                    |highres_link|URL for the photo at its maximum size|
                    |member|Member that uploaded the photo|
                    |member_photo|Optional member photo of the uploading member|
                    |photo_album|-|
                    |photo_id|Unique identifier of the photo|
                    |photo_link|URL for a standard size of the photo|
                    |self|Optional field, contains details specific to the authorized user|
                    |site_link|URL for photo in photo album on meetup.com, available when requested in the fields parameter|
                    |thumb_link|URL for a thumbnail the photo|
                    |updated|Last updated time in milliseconds since the epoch|
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "member": {
                                    "member_state": "member_state 0",
                                    "member_city": "member_city 0",
                                    "name": "name 0",
                                    "member_country": "member_country 0",
                                    "member_id": 0
                                  },
                                  "site_link": "site_link 0",
                                  "photo_link": "photo_link 0",
                                  "member_photo": {
                                    "photo_link": "photo_link 0",
                                    "highres_link": "highres_link 0",
                                    "thumb_link": "thumb_link 0",
                                    "photo_id": 0
                                  },
                                  "updated": 0,
                                  "created": 0,
                                  "highres_link": "highres_link 0",
                                  "thumb_link": "thumb_link 0",
                                  "photo_album": {
                                    "event": {
                                      "id": 0,
                                      "time": 0,
                                      "event_url": "event_url 0",
                                      "name": "name 0"
                                    },
                                    "group_id": 0,
                                    "photo_album_id": 0,
                                    "event_id": 0
                                  },
                                  "self": {
                                    "role": "role 0",
                                    "actions": "actions 0"
                                  },
                                  "caption": "caption 0",
                                  "photo_id": 0
                                },
                                {
                                  "member": {
                                    "member_state": "member_state 1",
                                    "member_city": "member_city 1",
                                    "name": "name 1",
                                    "member_country": "member_country 1",
                                    "member_id": 1
                                  },
                                  "site_link": "site_link 1",
                                  "photo_link": "photo_link 1",
                                  "member_photo": {
                                    "photo_link": "photo_link 1",
                                    "highres_link": "highres_link 1",
                                    "thumb_link": "thumb_link 1",
                                    "photo_id": 1
                                  },
                                  "updated": 1,
                                  "created": 1,
                                  "highres_link": "highres_link 1",
                                  "thumb_link": "thumb_link 1",
                                  "photo_album": {
                                    "event": {
                                      "id": 1,
                                      "time": 1,
                                      "event_url": "event_url 1",
                                      "name": "name 1"
                                    },
                                    "group_id": 1,
                                    "photo_album_id": 1,
                                    "event_id": 1
                                  },
                                  "self": {
                                    "role": "role 1",
                                    "actions": "actions 1"
                                  },
                                  "caption": "caption 1",
                                  "photo_id": 1
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/2/open_events: 
    displayName: /2/open_events
    description: OpenEvents
    get: 
        description: |
            Searches for recent and upcoming public events hosted by Meetup groups. Its search window is the past one month through the next three months, and is subject to change. Open Events is optimized to search for current events by location, category, topic, or text, and only lists Meetups that have 3 or more RSVPs. The number or results returned with each request is not guaranteed to be the same as the page size due to secondary filtering.
            
            #Request Parameters
            At least one of the required parameter(s) must be supplied with the request.
            
            For geo-based requests, you may provide a location in one of three ways. By lat and lon, by zip, or by country, city, and optionally a state, if the provided country has states.
            
            Some groups, while remaining private, still wish to show some information about their events. You can include these events in results using the limited_events request parameter.
        queryParameters: 
            and_text: 
                description: |
                    Changes the interpretation of the "text" field from OR'd terms to AND'd terms
                type: string
                required: false
                repeat: false
            zip: 
                description: A valid US zip code, limits the returned groups to those within radius miles
                type: string
                required: false
                repeat: false
            country: 
                description: A valid country code
                type: string
                required: false
                repeat: false
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            city: 
                description: A valid city
                type: string
                required: false
                repeat: false
            lon: 
                description: Longitude to search
                type: string
                required: false
                repeat: false
            limited_events: 
                description: |
                    Include limited event information for private groups that wish to expose only a small amount of information about their events. This includes just: id, name, utc_offset, time, duration, yes_rsvp_count, waitlist_count, group, visibility. Value must be true or false.
                type: string
                required: false
                repeat: false
            text_format: 
                description: Format of the description text, "html" or "plain". Defaults to "html"
                type: string
                required: false
                repeat: false
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            topic: 
                description: Return events in the specified topic or topics specified by commas. This is the topic "urlkey" returned by the Topics method. If all supplied topics are unknown, a 400 error response is returned with the code "badtopic".
                type: string
                required: false
                repeat: false
            state: 
                description: If searching in a country with states, a valid 2 character state code
                type: string
                required: false
                repeat: false
            text: 
                description: |
                    Events that contain the given term or terms somewhere in their content. The terms are OR'd by default. Separate terms with " AND " for events that have combined terms. To have terms automatically AND'd, set the "and_text" to true
                type: string
                required: false
                repeat: false
            time: 
                description: |
                    Return events scheduled within the given time range, defined by two times separated with a single comma. Each end of the range may be specified with relative dates, such as "1m" for one month from now, or by absolute time in milliseconds since the epoch. If an endpoint is omitted, the range is unbounded on that end. The default value is unbounded on both ends (though restricted to the search window described above). Note: to retrieve past events you must also update status value
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            category: 
                description: Return events in the specified category or categories specified by commas. This is the category id returned by the Categories method.
                type: string
                required: false
                repeat: false
            fields: 
                description: Request that additional fields (separated by commas) be included in the output
                type: string
                required: false
                repeat: false
            radius: 
                description: Radius, in miles for geographic requests, default 25.0 -- maximum 100. May also be specified as "smart", a dynamic radius based on the number of active groups in the area
                type: string
                required: false
                repeat: false
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            lat: 
                description: Latitude to search
                type: string
                required: false
                repeat: false
            status: 
                description: Status may be "upcoming", "past" or both separated by a comma. The default is "upcoming" only
                type: string
                required: false
                repeat: false
            order: 
                description: |
                    |value|description|
                    |-|
                    |distance|ordering is approximate and will not exactly match the values in the "distance" field.|
                    |time|(default order) ascending|
                    |trending|you will likely want to specify "desc=true" to get the best trending results first.|
                type: string
                required: false
                repeat: false
                enum: [distance, time, trending]
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |announced|Organizers and hosts can see if the event was announced|
                    |comment_count|Optional field, number of comments posted to the event|
                    |created|UTC creation time of the event, in milliseconds since the epoch|
                    |description|Description of the event|
                    |distance|Distance in miles from the search location, if one was specified|
                    |duration|Event duration in milliseconds, if an end time is specified by the organizer. When not present, a default of 3 hours may be assumed by applications.|
                    |email_reminders|Optional fields parameter limited to organizers and event hosts, if false, event reminders are disabled|
                    |event_hosts|List of members hosting the event, only returned if requested in the fields parameter.|
                    |event_url|URL of the event's page on meetup.com|
                    |featured|Optional fields parameter which returns "true" if the event is featured and "false" otherwise|
                    |fee|Fee info returned when payment is defined|
                    |group|Group that is hosting the event|
                    |headcount|The number of members in attendance according to the attendance taker. This may be 0 if attendance has not yet been taken|
                    |how_to_find_us|The information provided by the event host for "How will members find you there?"|
                    |id|The event id. May be numeric or alphanumeric, always served as a string|
                    |is_simplehtml|Optional field, "true" when the event has been saved in a simplified HTML format, "false" otherwise.|
                    |maybe_rsvp_count|Number of maybe RSVPs including guests|
                    |name|The name of the event|
                    |photo_album_id|optional fields parameter which returns the ID of the photo album for this event, if one exists|
                    |photo_count|Optional field, number of photos posted to the event|
                    |photo_url|URL of the event photo, if one exists|
                    |publish_status|"published" or "draft" only visible to organizers|
                    |rating|Only past events have this field, an aggregate of anonymous ratings|
                    |rsvp_alerts|Optional fields parameter limited to organizers and event hosts, if false, member RSVP alerts are disabled|
                    |rsvp_limit|The number of "yes" RSVPs an event can have before members will be added to the waiting list|
                    |rsvp_rules|Conditions set by the organizer, only returned if requested in the fields parameter.|
                    |rsvpable|Indicates if the currently authenticated member can RSVP or not, only returned if requested in the fields parameter|
                    |self|Optional field with details particular to the authorized user, only present if requested and user is a member of the hosting group|
                    |short_link|Optional field. If hosting group is private, this will return the group's short_link|
                    |simple_html_description|Optional field, description of the event in simple HTML format.|
                    |status|"cancelled", "upcoming", "past", "proposed", "suggested" or "draft"|
                    |survey_questions|Optional "fields" response property for event with surveys|
                    |time|UTC start time of the event, in milliseconds since the epoch|
                    |timezone|Returned when "timezone" is provided in fields parameter. This represents the universal timezone identifier for the host group|
                    |trending_rank|Indicates the trending rank within the current result set. The best rank is zero, increasing rank values are less "trending". This value is only returned if requested in the fields parameter|
                    |updated|UTC last modified time of the event, in milliseconds since the epoch|
                    |utc_offset|The local offset from UTC time, in milliseconds|
                    |venue|Venue, if selected and not hidden|
                    |venue_visibility|Set to "members" or "public". The "venue" element will not be present if the visibility is "members" and the current authenticated user is not a member of the group hosting the event. This value is only returned if requested in the fields parameter|
                    |visibility|Event visibility: "public", "members" or "public_limited". Events in private groups that do not expose limited information are visible only to that group's members and should not be made public.|
                    |why|We should do this because...|
                    |yes_rsvp_count|Number of yes RSVPs including guests|
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "visibility": "visibility 0",
                                  "is_simplehtml": "is_simplehtml 0",
                                  "self": {
                                    "checked_in": "checked_in 0",
                                    "watching": "watching 0",
                                    "rsvp": {
                                      "response": "response 0",
                                      "guests": "guests 0",
                                      "answers": "answers 0"
                                    },
                                    "role": "role 0",
                                    "rated": 0,
                                    "actions": "actions 0",
                                    "pay_status": "pay_status 0"
                                  },
                                  "featured": "featured 0",
                                  "rsvpable": "rsvpable 0",
                                  "publish_status": "publish_status 0",
                                  "email_reminders": "email_reminders 0",
                                  "rsvp_rules": {
                                    "open_time": "open_time 0",
                                    "waitlisting": "waitlisting 0",
                                    "close_time": "close_time 0",
                                    "guest_limit": "guest_limit 0",
                                    "closed": "closed 0",
                                    "refund_policy": {
                                      "days": "days 0",
                                      "notes": 0,
                                      "policies": "policies 0"
                                    }
                                  },
                                  "id": 0,
                                  "timezone": "timezone 0",
                                  "time": 0,
                                  "distance": 1.0,
                                  "venue_visibility": "venue_visibility 0",
                                  "yes_rsvp_count": 0,
                                  "updated": 0,
                                  "created": 0,
                                  "description": "description 0",
                                  "survey_questions": {
                                    "id": 0,
                                    "question": "question 0",
                                    "required": "required 0"
                                  },
                                  "headcount": "headcount 0",
                                  "name": "name 0",
                                  "photo_album_id": 0,
                                  "rsvp_alerts": "rsvp_alerts 0",
                                  "photo_count": 0,
                                  "comment_count": 0,
                                  "rsvp_limit": "rsvp_limit 0",
                                  "trending_rank": "trending_rank 0",
                                  "status": "status 0",
                                  "maybe_rsvp_count": 0,
                                  "photo_url": "photo_url 0",
                                  "venue": {
                                    "id": 0,
                                    "zip": "zip 0",
                                    "phone": 0,
                                    "lon": 1.0,
                                    "repinned": "repinned 0",
                                    "address_3": "address_3 0",
                                    "name": "name 0",
                                    "state": 0,
                                    "address_1": "address_1 0",
                                    "address_2": "address_2 0",
                                    "lat": 1.0,
                                    "country": "country 0",
                                    "city": "city 0"
                                  },
                                  "short_link": "short_link 0",
                                  "event_hosts": {
                                    "member_name": "member_name 0",
                                    "member_id": 0
                                  },
                                  "utc_offset": 0,
                                  "fee": {
                                    "amount": "amount 0",
                                    "description": "description 0",
                                    "label": 0,
                                    "required": "required 0",
                                    "accepts": "accepts 0",
                                    "currency": "currency 0"
                                  },
                                  "duration": 0,
                                  "announced": "announced 0",
                                  "event_url": "event_url 0",
                                  "how_to_find_us": "how_to_find_us 0",
                                  "rating": {
                                    "count": 0,
                                    "average": "average 0"
                                  },
                                  "group": {
                                    "id": 0,
                                    "topics": {
                                      "id": 0,
                                      "urlkey": "urlkey 0",
                                      "name": "name 0"
                                    },
                                    "category": {
                                      "id": 0,
                                      "name": "name 0",
                                      "shortname": "shortname 0"
                                    },
                                    "group_photo": {
                                      "photo_link": "photo_link 0",
                                      "highres_link": "highres_link 0",
                                      "thumb_link": "thumb_link 0",
                                      "photo_id": 0
                                    },
                                    "group_lat": "group_lat 0",
                                    "name": "name 0",
                                    "group_lon": "group_lon 0",
                                    "membership_dues": {
                                      "methods": "methods 0",
                                      "fee": "fee 0",
                                      "required": "required 0",
                                      "fee_desc": "fee_desc 0",
                                      "refund_policy": "refund_policy 0",
                                      "currency": "currency 0"
                                    },
                                    "join_mode": "join_mode 0",
                                    "urlname": "urlname 0",
                                    "who": "who 0"
                                  },
                                  "simple_html_description": "simple_html_description 0",
                                  "why": "why 0"
                                },
                                {
                                  "visibility": "visibility 1",
                                  "is_simplehtml": "is_simplehtml 1",
                                  "self": {
                                    "checked_in": "checked_in 1",
                                    "watching": "watching 1",
                                    "rsvp": {
                                      "response": "response 1",
                                      "guests": "guests 1",
                                      "answers": "answers 1"
                                    },
                                    "role": "role 1",
                                    "rated": 1,
                                    "actions": "actions 1",
                                    "pay_status": "pay_status 1"
                                  },
                                  "featured": "featured 1",
                                  "rsvpable": "rsvpable 1",
                                  "publish_status": "publish_status 1",
                                  "email_reminders": "email_reminders 1",
                                  "rsvp_rules": {
                                    "open_time": "open_time 1",
                                    "waitlisting": "waitlisting 1",
                                    "close_time": "close_time 1",
                                    "guest_limit": "guest_limit 1",
                                    "closed": "closed 1",
                                    "refund_policy": {
                                      "days": "days 1",
                                      "notes": 1,
                                      "policies": "policies 1"
                                    }
                                  },
                                  "id": 1,
                                  "timezone": "timezone 1",
                                  "time": 1,
                                  "distance": 1.0,
                                  "venue_visibility": "venue_visibility 1",
                                  "yes_rsvp_count": 1,
                                  "updated": 1,
                                  "created": 1,
                                  "description": "description 1",
                                  "survey_questions": {
                                    "id": 1,
                                    "question": "question 1",
                                    "required": "required 1"
                                  },
                                  "headcount": "headcount 1",
                                  "name": "name 1",
                                  "photo_album_id": 1,
                                  "rsvp_alerts": "rsvp_alerts 1",
                                  "photo_count": 1,
                                  "comment_count": 1,
                                  "rsvp_limit": "rsvp_limit 1",
                                  "trending_rank": "trending_rank 1",
                                  "status": "status 1",
                                  "maybe_rsvp_count": 1,
                                  "photo_url": "photo_url 1",
                                  "venue": {
                                    "id": 1,
                                    "zip": "zip 1",
                                    "phone": 1,
                                    "lon": 1.0,
                                    "repinned": "repinned 1",
                                    "address_3": "address_3 1",
                                    "name": "name 1",
                                    "state": 1,
                                    "address_1": "address_1 1",
                                    "address_2": "address_2 1",
                                    "lat": 1.0,
                                    "country": "country 1",
                                    "city": "city 1"
                                  },
                                  "short_link": "short_link 1",
                                  "event_hosts": {
                                    "member_name": "member_name 1",
                                    "member_id": 1
                                  },
                                  "utc_offset": 1,
                                  "fee": {
                                    "amount": "amount 1",
                                    "description": "description 1",
                                    "label": 1,
                                    "required": "required 1",
                                    "accepts": "accepts 1",
                                    "currency": "currency 1"
                                  },
                                  "duration": 1,
                                  "announced": "announced 1",
                                  "event_url": "event_url 1",
                                  "how_to_find_us": "how_to_find_us 1",
                                  "rating": {
                                    "count": 1,
                                    "average": "average 1"
                                  },
                                  "group": {
                                    "id": 1,
                                    "topics": {
                                      "id": 1,
                                      "urlkey": "urlkey 1",
                                      "name": "name 1"
                                    },
                                    "category": {
                                      "id": 1,
                                      "name": "name 1",
                                      "shortname": "shortname 1"
                                    },
                                    "group_photo": {
                                      "photo_link": "photo_link 1",
                                      "highres_link": "highres_link 1",
                                      "thumb_link": "thumb_link 1",
                                      "photo_id": 1
                                    },
                                    "group_lat": "group_lat 1",
                                    "name": "name 1",
                                    "group_lon": "group_lon 1",
                                    "membership_dues": {
                                      "methods": "methods 1",
                                      "fee": "fee 1",
                                      "required": "required 1",
                                      "fee_desc": "fee_desc 1",
                                      "refund_policy": "refund_policy 1",
                                      "currency": "currency 1"
                                    },
                                    "join_mode": "join_mode 1",
                                    "urlname": "urlname 1",
                                    "who": "who 1"
                                  },
                                  "simple_html_description": "simple_html_description 1",
                                  "why": "why 1"
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/rsvps: 
    displayName: /rsvps
    get: 
        description: |
            API method for accessing meetup rsvps
            
            #Request Parameters
            At least one of the required parameter(s) must be supplied with the request.
        queryParameters: 
            event_id: 
                description: Return members that RSVP'd to events with these ID numbers [separated by commas]
                type: string
                required: false
                repeat: false
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            order: 
                description: |
                    |value|description|
                    |-|
                    |name|the name of the attendee|
                type: string
                required: false
                repeat: false
                enum: [name]
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |answers|Answers to event survey questions provided when the member RSVP'd, only available to organizers and assistant organizers|
                    |city|City the member has provided|
                    |comment|The message that the member provided when RSVP was made|
                    |country|Country the member has provided|
                    |created|Timestamps indicating when the RSVP was first set|
                    |event_id|The Event id|
                    |id|RSVP id|
                    |lat|Latitude coordinates of the members reported city|
                    |link|URL to the member's profile page on meetup.com|
                    |lon|Longitude coordinates of the members reported city|
                    |member_id|The member's id|
                    |name|The member's name|
                    |response|"yes", "no", "maybe", or "waitlist"|
                    |state|US State the member has provided|
                    |updated:|Timestamps indicating when the RSVP was last updated|
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "lon": 1.0,
                                  "link": "link 0",
                                  "state": 0,
                                  "answers": "answers 0",
                                  "updated:": "updated: 0",
                                  "event_id": 0,
                                  "city": "city 0",
                                  "country": "country 0",
                                  "member_id": 0,
                                  "response": "response 0",
                                  "id": 0,
                                  "created": 0,
                                  "name": "name 0",
                                  "comment": "comment 0",
                                  "lat": 1.0
                                },
                                {
                                  "lon": 1.0,
                                  "link": "link 1",
                                  "state": 1,
                                  "answers": "answers 1",
                                  "updated:": "updated: 1",
                                  "event_id": 1,
                                  "city": "city 1",
                                  "country": "country 1",
                                  "member_id": 1,
                                  "response": "response 1",
                                  "id": 1,
                                  "created": 1,
                                  "name": "name 1",
                                  "comment": "comment 1",
                                  "lat": 1.0
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/2/event_comment_likes: 
    displayName: /2/event_comment_likes
    get: 
        description: |
            Api for listing likes of a given event comment
            
            #Request Parameters
            At least one of the required parameters must be supplied with the request.
        queryParameters: 
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            comment_id: 
                description: Return likes for a given comment_id
                type: string
                required: false
                repeat: false
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            order: 
                description: |
                    |value|description|
                    |-|
                    |created|Order by the time the member liked like comment (default: descending)|
                type: string
                required: false
                repeat: false
                enum: [created]
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |created|UTC creation time of the event, in milliseconds since the epoch|
                    |event_comment_id|ID of the comment liked|
                    |member|member who liked the comment|
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "member": {
                                    "member_state": "member_state 0",
                                    "member_city": "member_city 0",
                                    "name": "name 0",
                                    "member_country": "member_country 0",
                                    "photo": {
                                      "photo_link": "photo_link 0",
                                      "highres_link": "highres_link 0",
                                      "thumb_link": "thumb_link 0",
                                      "photo_id": 0
                                    },
                                    "member_id": 0
                                  },
                                  "created": 0,
                                  "event_comment_id": 0
                                },
                                {
                                  "member": {
                                    "member_state": "member_state 1",
                                    "member_city": "member_city 1",
                                    "name": "name 1",
                                    "member_country": "member_country 1",
                                    "photo": {
                                      "photo_link": "photo_link 1",
                                      "highres_link": "highres_link 1",
                                      "thumb_link": "thumb_link 1",
                                      "photo_id": 1
                                    },
                                    "member_id": 1
                                  },
                                  "created": 1,
                                  "event_comment_id": 1
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/recommended/groups: 
    displayName: /recommended/groups
    get: 
        description: |
            Returns groups Meetup finds relevant to you
            
            #Request Parameters
            All parameters are optional. You may change the 'location' and 'radius' for the request. If you do not supply a location your request will be based on your IP's geographic location. If the server is unable to produce recommendations in a suitable amount of time, a 503 error will be returned.
        queryParameters: 
            zip: 
                description: Zip code you are searching for recommendations in
                type: string
                required: false
                repeat: false
            country: 
                description: A valid two character country code, defaults to US
                type: string
                required: false
                repeat: false
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            lon: 
                description: Longitude to search
                type: string
                required: false
                repeat: false
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            location: 
                description: Raw text location query
                type: string
                required: false
                repeat: false
            topic_id: 
                description: Comma delimited list of up to 100 topic ids to help inform recommendations
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            category: 
                description: A valid category id which limits recommended groups to a particular category
                type: string
                required: false
                repeat: false
            fields: 
                description: Request that additional fields (separated by commas) be included in the output.
                type: string
                required: false
                repeat: false
            radius: 
                description: Radius in miles. May be 0.0-100.0, 'global' or 'smart', a dynamic radius based on the number of active groups in the area
                type: string
                required: false
                repeat: false
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            lat: 
                description: Latitude to search
                type: string
                required: false
                repeat: false
            order: 
                description: How to order the results
                type: string
                required: false
                repeat: false
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |category|The primary category of the group, if the group has one|
                    |city|City of the group|
                    |country|Country of the group|
                    |created|Time the group was created in milliseconds since the epoch|
                    |description|Short description of group|
                    |ga_code|Optional field return the google analytics code for the group. Only members that can edit group settings can see this|
                    |group_photo|Group photo|
                    |id|Numeric group ID|
                    |is_simplehtml|Optional field, 'true' when the group description has been saved in a simplified HTML format, 'false' otherwise.|
                    |join_info|Optional field, lists any questions requested when joining and required fields|
                    |join_mode|Who can join this group and how. One of approval, closed, open|
                    |lat|Latitude|
                    |link|Link to group on meetup.com|
                    |list_addr|Optional field returning list address prefix. List mail will be {list_addr}-list@meetup.com. Announce email will be {list_addr}-announce@meetup.com. You must be a member of the group to see this|
                    |list_mode|Optional fields parameter representing the policy for who can post the the group mailing list. One of moderated, off, open, orgs_only|
                    |lon|Longitude|
                    |members|Number of Meetup members in this group|
                    |name|Name of the group|
                    |next_event|The next upcoming event, if the group has one|
                    |organizer|Group's primary organizer|
                    |photos|A small set of photos from the group|
                    |simple_html_description|Description of the group, in simple HTML format. This value is translated to HTML to update the description.|
                    |state|State of the group, if in US or Canada|
                    |timezone|This represents the universal timezone identifier for the group|
                    |urlname|Urlname used to identify the group on meetup.com|
                    |visibility|Who can see this group. One of members, public or public_limited|
                    |who|What the group calls its members|
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "visibility": "visibility 0",
                                  "is_simplehtml": "is_simplehtml 0",
                                  "link": "link 0",
                                  "next_event": {
                                    "id": 0,
                                    "time": 0,
                                    "name": "name 0"
                                  },
                                  "state": 0,
                                  "join_mode": "join_mode 0",
                                  "who": "who 0",
                                  "city": "city 0",
                                  "id": 0,
                                  "timezone": "timezone 0",
                                  "created": 0,
                                  "list_addr": "list_addr 0",
                                  "description": "description 0",
                                  "ga_code": "ga_code 0",
                                  "name": "name 0",
                                  "urlname": "urlname 0",
                                  "lat": 1.0,
                                  "members": "members 0",
                                  "list_mode": "list_mode 0",
                                  "lon": 1.0,
                                  "join_info": {
                                    "questions": {
                                      "id": 0,
                                      "question": "question 0"
                                    },
                                    "intro_required": "intro_required 0",
                                    "questions_req": "questions_req 0",
                                    "photo_required": "photo_required 0"
                                  },
                                  "organizer": {
                                    "id": 0,
                                    "bio": "bio 0",
                                    "name": "name 0"
                                  },
                                  "country": "country 0",
                                  "photos": {
                                    "id": 0,
                                    "photo_link": "photo_link 0",
                                    "highres_link": "highres_link 0",
                                    "thumb_link": "thumb_link 0"
                                  },
                                  "category": {
                                    "id": 0,
                                    "name": "name 0",
                                    "shortname": "shortname 0"
                                  },
                                  "group_photo": {
                                    "id": 0,
                                    "photo_link": "photo_link 0",
                                    "highres_link": "highres_link 0",
                                    "thumb_link": "thumb_link 0"
                                  },
                                  "simple_html_description": "simple_html_description 0"
                                },
                                {
                                  "visibility": "visibility 1",
                                  "is_simplehtml": "is_simplehtml 1",
                                  "link": "link 1",
                                  "next_event": {
                                    "id": 1,
                                    "time": 1,
                                    "name": "name 1"
                                  },
                                  "state": 1,
                                  "join_mode": "join_mode 1",
                                  "who": "who 1",
                                  "city": "city 1",
                                  "id": 1,
                                  "timezone": "timezone 1",
                                  "created": 1,
                                  "list_addr": "list_addr 1",
                                  "description": "description 1",
                                  "ga_code": "ga_code 1",
                                  "name": "name 1",
                                  "urlname": "urlname 1",
                                  "lat": 1.0,
                                  "members": "members 1",
                                  "list_mode": "list_mode 1",
                                  "lon": 1.0,
                                  "join_info": {
                                    "questions": {
                                      "id": 1,
                                      "question": "question 1"
                                    },
                                    "intro_required": "intro_required 1",
                                    "questions_req": "questions_req 1",
                                    "photo_required": "photo_required 1"
                                  },
                                  "organizer": {
                                    "id": 1,
                                    "bio": "bio 1",
                                    "name": "name 1"
                                  },
                                  "country": "country 1",
                                  "photos": {
                                    "id": 1,
                                    "photo_link": "photo_link 1",
                                    "highres_link": "highres_link 1",
                                    "thumb_link": "thumb_link 1"
                                  },
                                  "category": {
                                    "id": 1,
                                    "name": "name 1",
                                    "shortname": "shortname 1"
                                  },
                                  "group_photo": {
                                    "id": 1,
                                    "photo_link": "photo_link 1",
                                    "highres_link": "highres_link 1",
                                    "thumb_link": "thumb_link 1"
                                  },
                                  "simple_html_description": "simple_html_description 1"
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
/2/venues: 
    displayName: /2/venues
    get: 
        description: |
            Search for Meetup venues by one of your groups, events, or venue identifiers. For a full text search on public venues use OpenVenues.
            
            #Request Parameters
            At least one of the required parameter(s) must be supplied with the request. You can use either group_urlname or group_id to filter by groups but not both.
        queryParameters: 
            event_id: 
                description: multiple ids may be separated with commas
                type: string
                required: false
                repeat: false
            offset: 
                description: The starting page for results to return
                type: integer
                required: false
                repeat: false
                minimum: 0
            group_id: 
                description: multiple ids may be separated with commas
                type: string
                required: false
                repeat: false
            only: 
                description: You can select result fields by specifying only parameters
                type: string
                required: false
                repeat: false
            page: 
                description: The page size
                type: integer
                required: false
                repeat: false
                minimum: 1
            fields: 
                description: Request that additional fields (separated by commas) be included in the output
                type: string
                required: false
                repeat: false
            omit: 
                description: You can suppress result fields by specifying omit parameters
                type: string
                required: false
                repeat: false
            key: 
                type: string
                required: false
                repeat: false
                enum: ["783060637886b293b764b2a6831240"]
                default: "783060637886b293b764b2a6831240"
            group_urlname: 
                description: path to group from meetup.com, no slashes
                type: string
                required: false
                repeat: false
            venue_id: 
                description: multiple ids may be separated with commas
                type: string
                required: false
                repeat: false
            order: 
                description: |
                    |value|description|
                    |-|
                    |distance|(default order) ordering is approximate and will not exactly match the values in the "distance" field.|
                    |rating|average member rating|
                    |rating_count|number of member ratings.|
                type: string
                required: false
                repeat: false
                enum: [distance, rating, rating_count]
            desc: 
                description: Reverses the sorting order, when you include the parameter "desc=desc" or "desc=true"
                type: string
                required: false
                repeat: false
                enum: [desc, "true", "false"]
        responses: 
            "200": 
                description: |
                    |||
                    |-|
                    |address_1|line 1 of venue address|
                    |address_2|line 2 of venue address|
                    |address_3|line 3 of venue address|
                    |city, state, country|City, County and if in US state of venue|
                    |distance|Distance in miles from the search location, if one was specified|
                    |email|email address of venue|
                    |fax|fax number of venue|
                    |id|ID of the venue|
                    |lat, lon|coordinates of venue|
                    |name|Name of the venue|
                    |phone|phone number of venue|
                    |rating|The average member rating|
                    |rating_count|The number of member ratings|
                    |taglist|Optional array of associated tagnames provided when a value of "taglist" is supplied with the "fields" request parameter|
                    |venue_url|URL of the venues's page on meetup.com|
                    |zip|if US or Canada|
                body: 
                    application/json: 
                        example: |
                            {
                              "results": [
                                {
                                  "zip": "zip 0",
                                  "phone": 0,
                                  "lon": 1.0,
                                  "fax": "fax 0",
                                  "address_3": "address_3 0",
                                  "state": 0,
                                  "address_1": "address_1 0",
                                  "address_2": "address_2 0",
                                  "venue_url": "venue_url 0",
                                  "city": "city 0",
                                  "country": "country 0",
                                  "id": 0,
                                  "taglist": "taglist 0",
                                  "distance": 1.0,
                                  "rating_count": 0,
                                  "email": 0,
                                  "name": "name 0",
                                  "rating": "rating 0",
                                  "lat": 1.0
                                },
                                {
                                  "zip": "zip 1",
                                  "phone": 1,
                                  "lon": 1.0,
                                  "fax": "fax 1",
                                  "address_3": "address_3 1",
                                  "state": 1,
                                  "address_1": "address_1 1",
                                  "address_2": "address_2 1",
                                  "venue_url": "venue_url 1",
                                  "city": "city 1",
                                  "country": "country 1",
                                  "id": 1,
                                  "taglist": "taglist 1",
                                  "distance": 1.0,
                                  "rating_count": 1,
                                  "email": 1,
                                  "name": "name 1",
                                  "rating": "rating 1",
                                  "lat": 1.0
                                }
                              ]
                            }
            "400": 
                description: |
                    Bad request when there was a problem with the request.
                    
                    The 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.
            "401": 
                description: |
                    Unauthorized when you don't provide a valid key.
            "500": 
                description: |
                    Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!
        protocols: [HTTP]
documentation: 
    - 
        title: Headline
        content: Meetup is an online social networking portal that facilitates offline group meetings in various localities around the world. Meetup allows members to find and join groups unified by a common interest, such as politics, books, games, movies, health, pets, careers or hobbies.
