{
  "swagger" : "2.0",
  "info" : {
    "version" : "v1",
    "title" : "LinkedIn"
  },
  "host" : "api.linkedin.com",
  "basePath" : "/v1",
  "schemes" : [ "https" ],
  "paths" : {
    "/comments/{commentId}{fieldSelectors}" : {
      "get" : {
        "description" : "Returns Comments\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded  \n",
            "examples" : {
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "delete" : {
        "description" : "Deletes a Comment\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "204" : {
            "description" : "Your request to DELETE a record was successful\n"
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "commentId",
        "in" : "path",
        "description" : "The unique identifier for a comment\n",
        "required" : true,
        "type" : "integer"
      }, {
        "name" : "fieldSelectors",
        "in" : "path",
        "description" : "Many of our resources allow you to specify what fields you want returned. We call this syntax field selectors.\nBy indicating exactly the information you need, we can optimize the amount of time needed to return your results.\nIt also reduces the amount of data passing across the wire. The two combine to make our APIs speedy and efficient,\na critical factor in any web application, and more so for anyone relying on external APIs.\n\nField selectors are specified after the resource identifiers and path components of a resource, prefixed by a colon,\ncontained within parenthesis, and separated by commas. Fields will be returned in the order specified. When URL-encoding\nyour resource URLs, ensure that the parenthesis used in selectors remain unescaped.\n\nExamples\n--------\nTo get a member's ID, first name, last name, and industry:\n  `http://api.linkedin.com/v1/people/~:(id,first-name,last-name,industry)`\n\nOr the same set of information for their connections:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,industry)`\n\nFields selectors can also be nested to access individual fields from a larger collection. For example, to get just the\njob titles and not the rest of the information about positions:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,positions:(title))`\n\nField selectors with resource identifiers allow you to request information about multiple entities at once. Specify them\nsimilarly, but append a double colon - here's an example getting profile information about thee members: the first is the\ncurrent member, indicated by a tilde; the next has an id of 12345; and the last has a public profile URL\n\n  `http://api.linkedin.com/v1/people::(~, id=12345,url=http%3A%2F%2Fwww.linkedin.com%2Fin%2Fadamnash)`\n",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/companies/universal-name={companyName}" : {
      "get" : {
        "description" : "Returns a single company if found.",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded  \n",
            "schema" : {
              "$ref" : "#/definitions/company-xml"
            },
            "examples" : {
              "application/xml" : "<company>\r\n  <id>162479</id>\r\n  <name>Apple</name>\r\n</company>",
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "companyName",
        "in" : "path",
        "description" : "The unique string identifier for a company.",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/companies/{companyId}/company-statistics" : {
      "get" : {
        "description" : "The Company Statistics API provides the ability to retrieve statistics for a particular company page. These stats can give you insights on both company share and follower metrics. Currently, the numbers provided are not real-time. The analytics breakdown for a company page is provided on a daily basis.",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded  \n",
            "schema" : {
              "$ref" : "#/definitions/companyStatistics-xml"
            },
            "examples" : {
              "application/xml" : "<company-statistics>\r\n  <status-update-statistics>\r\n    <views-by-month total=\"12\">\r\n      <view-by-month>\r\n        <date>\r\n          <year>2012</year>\r\n          <month>11</month>\r\n        </date>\r\n        <clicks>1</clicks>\r\n        <likes>0</likes>\r\n        <comments>0</comments>\r\n        <shares>0</shares>\r\n        <impressions>150</impressions>\r\n        <engagement>0.006666666666666667</engagement>\r\n      </view-by-month>\r\n      <view-by-month>\r\n        <date>\r\n          <year>2012</year>\r\n          <month>10</month>\r\n        </date>\r\n        <clicks>0</clicks>\r\n        <likes>1</likes>\r\n        <comments>1</comments>\r\n        <shares>0</shares>\r\n        <impressions>654</impressions>\r\n        <engagement>0.0030581039755351682</engagement>\r\n      </view-by-month>\r\n      <view-by-month>\r\n        <date>\r\n          <year>2012</year>\r\n          <month>9</month>\r\n        </date>\r\n        <clicks>1</clicks>\r\n        <likes>3</likes>\r\n        <comments>2</comments>\r\n        <shares>0</shares>\r\n        <impressions>4463</impressions>\r\n        <engagement>0.0013443871835088505</engagement>\r\n      </view-by-month>\r\n      <view-by-month>\r\n        <date>\r\n          <year>2012</year>\r\n          <month>8</month>\r\n        </date>\r\n        <clicks>15</clicks>\r\n        <likes>16</likes>\r\n        <comments>71</comments>\r\n        <shares>1</shares>\r\n        <impressions>7106</impressions>\r\n        <engagement>0.01449479313256403</engagement>\r\n      </view-by-month>\r\n      <view-by-month>\r\n        <date>\r\n          <year>2012</year>\r\n          <month>7</month>\r\n        </date>\r\n        <clicks>0</clicks>\r\n        <likes>0</likes>\r\n        <comments>0</comments>\r\n        <shares>0</shares>\r\n        <impressions>0</impressions>\r\n      </view-by-month>\r\n      <view-by-month>\r\n        <date>\r\n          <year>2012</year>\r\n          <month>6</month>\r\n        </date>\r\n        <clicks>0</clicks>\r\n        <likes>0</likes>\r\n        <comments>0</comments>\r\n        <shares>0</shares>\r\n        <impressions>0</impressions>\r\n      </view-by-month>\r\n      <view-by-month>\r\n        <date>\r\n          <year>2012</year>\r\n          <month>5</month>\r\n        </date>\r\n        <clicks>0</clicks>\r\n        <likes>0</likes>\r\n        <comments>0</comments>\r\n        <shares>0</shares>\r\n        <impressions>0</impressions>\r\n      </view-by-month>\r\n      <view-by-month>\r\n        <date>\r\n          <year>2012</year>\r\n          <month>4</month>\r\n        </date>\r\n        <clicks>0</clicks>\r\n        <likes>0</likes>\r\n        <comments>0</comments>\r\n        <shares>0</shares>\r\n        <impressions>0</impressions>\r\n      </view-by-month>\r\n      <view-by-month>\r\n        <date>\r\n          <year>2012</year>\r\n          <month>3</month>\r\n        </date>\r\n        <clicks>0</clicks>\r\n        <likes>0</likes>\r\n        <comments>0</comments>\r\n        <shares>0</shares>\r\n        <impressions>0</impressions>\r\n      </view-by-month>\r\n      <view-by-month>\r\n        <date>\r\n          <year>2012</year>\r\n          <month>2</month>\r\n        </date>\r\n        <clicks>0</clicks>\r\n        <likes>0</likes>\r\n        <comments>0</comments>\r\n        <shares>0</shares>\r\n        <impressions>0</impressions>\r\n      </view-by-month>\r\n      <view-by-month>\r\n        <date>\r\n          <year>2012</year>\r\n          <month>1</month>\r\n        </date>\r\n        <clicks>0</clicks>\r\n        <likes>0</likes>\r\n        <comments>0</comments>\r\n        <shares>0</shares>\r\n        <impressions>0</impressions>\r\n      </view-by-month>\r\n      <view-by-month>\r\n        <date>\r\n          <year>2011</year>\r\n          <month>12</month>\r\n        </date>\r\n      </view-by-month>\r\n    </views-by-month>\r\n  </status-update-statistics>\r\n  <follow-statistics>\r\n    <count>11</count>\r\n    <employee-count>0</employee-count>\r\n    <non-employee-count>11</non-employee-count>\r\n    <seniorities total=\"11\">\r\n      <seniority>\r\n        <entry-key>4</entry-key>\r\n        <entry-value>5</entry-value>\r\n      </seniority>\r\n      <seniority>\r\n        <entry-key>3</entry-key>\r\n        <entry-value>4</entry-value>\r\n      </seniority>\r\n      <seniority>\r\n        <entry-key>6</entry-key>\r\n        <entry-value>1</entry-value>\r\n      </seniority>\r\n      <seniority>\r\n        <entry-key>0</entry-key>\r\n        <entry-value>0</entry-value>\r\n      </seniority>\r\n\t </seniorities>\r\n    </follow-statistics>\r\n</company-statistics>",
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "companyId",
        "in" : "path",
        "description" : "The unique internal numeric company identifier.",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/companies/{companyId}/is-company-share-enabled" : {
      "get" : {
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded  \n",
            "examples" : {
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "companyId",
        "in" : "path",
        "description" : "The unique internal numeric company identifier.",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/companies/{companyId}/num-followers" : {
      "get" : {
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "geographies",
          "in" : "query",
          "description" : "See geographies for the valid values.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "jobFunc",
          "in" : "query",
          "description" : "See job functions for the valid values.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "industries",
          "in" : "query",
          "description" : "See industry codes for the valid values.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "seniorities",
          "in" : "query",
          "description" : "Specify the level of seniority to target.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companySizes",
          "in" : "query",
          "description" : "Specify the size range for the company.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/companyShare"
            },
            "examples" : {
              "application/xml" : null,
              "application/json" : "{\r\n  \"visibility\" : {\r\n    \"code\" : \"anyone\"\r\n  } ,\r\n  \"comment\" : \"Testing a full company share!\" ,\r\n  \"content\" : {\r\n    \"submitted-url\" : \"http://www.example.com/content.html\" ,\r\n    \"title\" : \"Test Share with Content\" ,\r\n    \"description\" : \"content description\" ,\r\n    \"submitted‐image-url\" : \"http://www.example.com/image.jpg\"\r\n  }\r\n}"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "companyId",
        "in" : "path",
        "description" : "The unique internal numeric company identifier.",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/companies/{companyId}/products{fieldSelectors}" : {
      "get" : {
        "description" : "Use the Company Products API to:\nReturn a list of products and services supported by a company\nReturn recommendations for a particular product\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded  \n",
            "schema" : {
              "$ref" : "#/definitions/products-xml"
            },
            "examples" : {
              "application/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<products total=\"32\" count=\"5\" start=\"0\">\r\n  <product>\r\n    <id>1353</id>\r\n    <name>LinkedIn Content Ads</name>\r\n    <type>\r\n      <code>P</code>\r\n      <name>PRODUCT</name>\r\n    </type>\r\n    <num-recommendations>2</num-recommendations>\r\n    <recommendations count=\"2\" start=\"0\">\r\n      <recommendation>\r\n        <recommender>\r\n          <id>G4HI670roP</id>\r\n          <first-name>Jane</first-name>\r\n          <last-name>Doe</last-name>\r\n        </recommender>\r\n        <id>22974</id>\r\n        <product-id>1353</product-id>\r\n        <timestamp>1292234549556</timestamp>\r\n      </recommendation>\r\n      <recommendation>\r\n        <recommender>\r\n          <id>Fmfl3zkirV</id>\r\n          <first-name>Alex</first-name>\r\n          <last-name>Jones</last-name>\r\n        </recommender>\r\n        <id>3463</id>\r\n        <product-id>1353</product-id>\r\n        <timestamp>1289225062991</timestamp>\r\n      </recommendation>\r\n    </recommendations>\r\n    <product-category>\r\n      <code>INT</code>\r\n      <name>Internet</name>\r\n    </product-category>\r\n    <website-url>http://marketing.linkedinlabs.com/solutions/</website-url>\r\n  </product>\r\n  <product>\r\n    <id>1355</id>\r\n    <name>LinkedIn Polls Sponsorship</name>\r\n    <type>\r\n      <code>P</code>\r\n      <name>PRODUCT</name>\r\n    </type>\r\n    <num-recommendations>2</num-recommendations>\r\n    <recommendations count=\"2\" start=\"0\">\r\n      <recommendation>\r\n        <recommender>\r\n          <id>Rh5L39Whxb</id>\r\n          <first-name>John</first-name>\r\n          <last-name>Smith</last-name>\r\n        </recommender>\r\n        <id>27619</id>\r\n        <product-id>1355</product-id>\r\n        <timestamp>1292992221392</timestamp>\r\n        <text>Great Tool, with Polls Sponsorship our brands will be more dynamic .</text>\r\n      </recommendation>\r\n      <recommendation>\r\n        <recommender>\r\n          <id>bkVEjNay9w</id>\r\n          <first-name>Ann</first-name>\r\n          <last-name>White</last-name>\r\n        </recommender>\r\n        <id>8867</id>\r\n        <product-id>1355</product-id>\r\n        <timestamp>1289981830700</timestamp>\r\n        <text>It is a good product. I recommend this product. User can post a poll option should be there.</text>\r\n      </recommendation>\r\n    </recommendations>\r\n    <product-category>\r\n      <code>INT</code>\r\n      <name>Internet</name>\r\n    </product-category>\r\n    <website-url>http://www.linkedin.com/opensocialInstallation/preview?_ch_panel_id=1&amp;_applicationId=1900</website-url>\r\n  </product>\r\n  <product>\r\n    <id>1358</id>\r\n    <name>LinkedIn Events Sponsorship</name>\r\n    <type>\r\n      <code>P</code>\r\n      <name>PRODUCT</name>\r\n    </type>\r\n    <num-recommendations>0</num-recommendations>\r\n    <product-category>\r\n      <code>MARKET</code>\r\n      <name>Marketing &amp; Advertising</name>\r\n    </product-category>\r\n    <website-url>http://marketing.linkedin.com/events/</website-url>\r\n  </product>\r\n  <product>\r\n    <id>1436</id>\r\n    <name>LinkedIn</name>\r\n    <type>\r\n      <code>P</code>\r\n      <name>PRODUCT</name>\r\n    </type>\r\n    <num-recommendations>53</num-recommendations>\r\n    <recommendations count=\"3\" start=\"0\">\r\n      <recommendation>\r\n        <recommender>\r\n          <id>ZZfj0hLcmb</id>\r\n          <first-name>Mike</first-name>\r\n          <last-name>Last</last-name>\r\n        </recommender>\r\n        <id>56231</id>\r\n        <product-id>1436</product-id>\r\n        <timestamp>1300369622727</timestamp>\r\n      </recommendation>\r\n      <recommendation>\r\n        <recommender>\r\n          <id>OcU4BIwnvx</id>\r\n          <first-name>Juan</first-name>\r\n          <last-name>Gomez</last-name>\r\n        </recommender>\r\n        <id>84383</id>\r\n        <product-id>1436</product-id>\r\n        <timestamp>1306340637027</timestamp>\r\n      </recommendation>\r\n      <recommendation>\r\n        <recommender>\r\n          <id>pfEkdotMmy</id>\r\n          <first-name>Paul</first-name>\r\n          <last-name>Tim</last-name>\r\n        </recommender>\r\n        <id>74292</id>\r\n        <product-id>1436</product-id>\r\n        <timestamp>1304503262773</timestamp>\r\n        <text>this is good one</text>\r\n      </recommendation>\r\n    </recommendations>\r\n    <product-category>\r\n      <code>INT</code>\r\n      <name>Internet</name>\r\n    </product-category>\r\n    <website-url>http://www.linkedin.com</website-url>\r\n  </product>\r\n  <product>\r\n    <id>1437</id>\r\n    <name>LinkedIn Mobile</name>\r\n    <type>\r\n      <code>P</code>\r\n      <name>PRODUCT</name>\r\n    </type>\r\n    <num-recommendations>16</num-recommendations>\r\n    <recommendations count=\"3\" start=\"0\">\r\n      <recommendation>\r\n        <recommender>\r\n          <id>Rh5L39Whxb</id>\r\n          <first-name>Jim</first-name>\r\n          <last-name>Barr</last-name>\r\n        </recommender>\r\n        <id>6444</id>\r\n        <product-id>1437</product-id>\r\n        <timestamp>1289511725870</timestamp>\r\n        <text></text>\r\n      </recommendation>\r\n      <recommendation>\r\n        <recommender>\r\n          <id>IWZk3OIvZR</id>\r\n          <first-name>Liz</first-name>\r\n          <last-name>Was</last-name>\r\n        </recommender>\r\n        <id>77788</id>\r\n        <product-id>1437</product-id>\r\n        <timestamp>1305153209849</timestamp>\r\n        <text>Great, easy to use app that allows you to build your network on the go as well as post updates and keep in touch. One of the most used apps on my iPhone!</text>\r\n      </recommendation>\r\n      <recommendation>\r\n        <recommender>\r\n          <id>jFYCuJLixi</id>\r\n          <first-name>Al</first-name>\r\n          <last-name>Saiz</last-name>\r\n        </recommender>\r\n        <id>74250</id>\r\n        <product-id>1437</product-id>\r\n        <timestamp>1304497741316</timestamp>\r\n      </recommendation>\r\n    </recommendations>\r\n    <product-category>\r\n      <code>INT</code>\r\n      <name>Internet</name>\r\n    </product-category>\r\n    <website-url>http://www.linkedin.com/static?key=mobile</website-url>\r\n    <disclaimer></disclaimer>\r\n  </product>\r\n</products>",
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "fieldSelectors",
        "in" : "path",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "companyId",
        "in" : "path",
        "description" : "The unique internal numeric company identifier.",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/companies/{companyId}/relation-to-viewer/is-company-share-enabled" : {
      "get" : {
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded  \n",
            "examples" : {
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "companyId",
        "in" : "path",
        "description" : "The unique internal numeric company identifier.",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/companies/{companyId}/shares" : {
      "post" : {
        "description" : "Full company share with content",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/companyShare-xml"
          },
          "x-examples" : {
            "application/xml" : "<share>\r\n  <visibility>\r\n  <code>anyone</code>\r\n  </visibility>\r\n  <comment>Testing a targeted share!</comment>\r\n  <content>\r\n    <submitted-url>http://www.example.com/content.html</submitted-url>\r\n    <title>Test Share with Content</title>\r\n    <description>content description</description>\r\n    <submitted-image-url>http://www.example.com/image.jpg</submitted-image-url>\r\n  </content>\r\n  <share-target-reach>\r\n    <share-targets>\r\n      <share-target>\r\n        <code>geos</code>\r\n        <tvalues>\r\n          <tvalue>as</tvalue>\r\n        </tvalues>\r\n      </share-target>\r\n      <share-target>\r\n        <code>jobFunc</code>\r\n        <tvalues>\r\n          <tvalue>acct</tvalue>\r\n        </tvalues>\r\n      </share-target>\r\n    </share-targets>\r\n  </share-target-reach>\r\n</share>",
            "application/json" : "{\r\n  \"visibility\" : {\r\n    \"code\" : \"anyone\"\r\n  } ,\r\n  \"comment\" : \"Testing a full company share!\" ,\r\n  \"content\" : {\r\n    \"submitted-url\" : \"http://www.example.com/content.html\" ,\r\n    \"title\" : \"Test Share with Content\" ,\r\n    \"description\" : \"content description\" ,\r\n    \"submitted‐image-url\" : \"http://www.example.com/image.jpg\"\r\n  }\r\n}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded\n",
            "examples" : {
              "application/json" : null,
              "text/xml" : null
            }
          },
          "201" : {
            "description" : "Created on success",
            "examples" : {
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "companyId",
        "in" : "path",
        "description" : "The unique internal numeric company identifier.",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/companies/{companyId}/updates" : {
      "get" : {
        "description" : "To retrieve the company's updates",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "event-type",
          "in" : "query",
          "description" : "Any valid Company Update Type from the table below.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Maximum",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "The offset by which to start Network Update pagination",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/update-xml"
            },
            "examples" : {
              "application/xml" : "<update>\r\n   <timestamp>1315338683355</timestamp>\r\n   <update-type>CMPY</update-type>\r\n   <update-content>\r\n      <company>\r\n         <id>1337</id>\r\n         <name>LinkedIn</name>\r\n      </company>\r\n      <company-person-update>\r\n          <person>\r\n              <id>14381178</id>\r\n                  <first-name>Patrick</first-name>\r\n                  <last-name>Smith</last-name>\r\n                  <headline>Enterprise Relationship Manager at LinkedIn</headline>\r\n                  <picture-url>http://media.linkedin.com/mpr/mprx/0_gPLYkP6SpokSOnUc0-vDkA9DYulmpzUc0tA3krFxTW5YiluBAvztoKPlKGAlx-sRyKF8wBMg5HkD</picture-url>\r\n                  <api-standard-profile-request>\r\n                      <url>http://api.linkedin.com/v1/people/14381178</url>\r\n                      <headers total=\"1\">\r\n                           <http-header>\r\n                              <name>x-li-auth-token</name>\r\n                              <value>name:4gRT</value>\r\n                           </http-header>\r\n                      </headers>\r\n                  </api-standard-profile-request>\r\n                  <site-standard-profile-request>\r\n                        <url>http://www.linkedin.com/profile?viewProfile=&amp;key=14381178&amp;authToken=4gRT&amp;authType=name&amp;trk=api*</url>\r\n                  </site-standard-profile-request>\r\n             </person>\r\n             <action>\r\n                <code>joined</code>\r\n             </action>\r\n             <old-position>\r\n                  <title>Actor</title>\r\n                  <company>\r\n                       <name>IndependentContractor</name>\r\n                  </company>\r\n             </old-position>\r\n             <new-position>\r\n                  <title>Enterprise Relationship Manager</title>\r\n                  <company>\r\n                       <id>1337</id>\r\n                       <name>LinkedIn</name>\r\n                  </company>\r\n             </new-position>\r\n         </company-person-update>\r\n     </update-content>\r\n</update>",
              "application/json" : null
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "companyId",
        "in" : "path",
        "description" : "The unique internal numeric company identifier.",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/companies/{companyId}/updates/key={CompanyUpdateKey}/likes" : {
      "get" : {
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "event-type",
          "in" : "query",
          "description" : "Any valid Company Update Type from the table below.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Maximum",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "The offset by which to start Network Update pagination",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded  \n",
            "examples" : {
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "CompanyUpdateKey",
        "in" : "path",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "companyId",
        "in" : "path",
        "description" : "The unique internal numeric company identifier.",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/companies/{companyId}/updates/key={CompanyUpdateKey}/update-comments" : {
      "get" : {
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "event-type",
          "in" : "query",
          "description" : "Any valid Company Update Type from the table below.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Maximum",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "The offset by which to start Network Update pagination",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded  \n",
            "examples" : {
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "CompanyUpdateKey",
        "in" : "path",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "companyId",
        "in" : "path",
        "description" : "The unique internal numeric company identifier.",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/companies/{companyId}{fieldSelectors}" : {
      "get" : {
        "description" : "Returns a single company if found.",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded  \n",
            "schema" : {
              "$ref" : "#/definitions/company-about-xml"
            },
            "examples" : {
              "application/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<company>\r\n  <id>1337</id>\r\n  <universal-name>linkedin</universal-name>\r\n  <name>LinkedIn</name>\r\n  <ticker>LNKD</ticker>\r\n  <logo-url>http://media.linkedin.com/mpr/mpr/p/2/000/072/3f9/35d2127.png</logo-url>\r\n  <description>LinkedIn takes your professional network online, giving you access to people, jobs and opportunities like never before. Built upon trusted connections and relationships, LinkedIn has established the worldÕs largest and most powerful professional network. Currently, more than 200 million professionals are on LinkedIn, including executives from all five hundred of the Fortune 500 companies, as well as a wide range of household names in technology, financial services, media, consumer packaged goods, entertainment, and numerous other industries. LinkedIn is backed by world-class investors including Sequoia Capital, Greylock, the European Founders Fund, Bessemer Venture Partners, Bain Capital, Goldman Sachs, SAP Ventures, and The McGraw-Hill Companies</description>\r\n  <company-type>\r\n    <code>P</code>\r\n    <name>Privately Held</name>\r\n  </company-type>\r\n  <industries total=\"1\">\r\n    <industry>\r\n      <code>6</code>\r\n      <name>Internet</name>\r\n    </industry>\r\n  </industries>\r\n  <size>501-1000</size>\r\n  <specialties total=\"8\">\r\n    <specialty>Online Professional Network</specialty>\r\n    <specialty>Jobs</specialty>\r\n    <specialty>People Search</specialty>\r\n    <specialty>Company Search</specialty>\r\n    <specialty>Address Book</specialty>\r\n    <specialty>Advertising</specialty>\r\n    <specialty>Professional Identity</specialty>\r\n    <specialty>Group Collaboration</specialty>\r\n  </specialties>\r\n  <blog-rss-url>http://feeds.feedburner.com/LinkedInBlog</blog-rss-url>\r\n  <twitter-id>linkedin</twitter-id>\r\n  <square-logo-url>http://media.linkedin.com/mpr/mpr/p/3/000/072/3db/1283f2d.png</square-logo-url>\r\n  <locations total=\"15\">\r\n    <location>\r\n      <address>\r\n        <street1>2029 Stierlin Court</street1>\r\n        <city>Mountain View</city>\r\n        <postal-code>94043</postal-code>\r\n      </address>\r\n      <contact-info>\r\n      </contact-info>\r\n    </location>\r\n    <location>\r\n      <address>\r\n        <street1>2126 N 117th Ave</street1>\r\n        <city>Omaha</city>\r\n        <postal-code>68164</postal-code>\r\n      </address>\r\n      <contact-info>\r\n        <phone1>(402) 452-2320</phone1>\r\n      </contact-info>\r\n    </location>\r\n    <location>\r\n      <address>\r\n        <street1>15 Shady Brook Lane</street1>\r\n        <city>Belmont</city>\r\n        <postal-code>02478</postal-code>\r\n      </address>\r\n      <contact-info>\r\n      </contact-info>\r\n    </location>\r\n    <location>\r\n      <address>\r\n        <street1>2126 N 117th Ave</street1>\r\n        <city>Omaha</city>\r\n        <postal-code>68164</postal-code>\r\n      </address>\r\n      <contact-info>\r\n        <phone1>(402) 452-2320</phone1>\r\n      </contact-info>\r\n    </location>\r\n    <location>\r\n      <address>\r\n        <street1>2029 Stierlin Court</street1>\r\n        <city>Mountain View</city>\r\n        <postal-code>94043</postal-code>\r\n      </address>\r\n      <contact-info>\r\n      </contact-info>\r\n    </location>\r\n    <location>\r\n      <address>\r\n        <street1>2029 Stierlin Court</street1>\r\n        <city>Mountain View</city>\r\n        <postal-code>94043</postal-code>\r\n      </address>\r\n      <contact-info>\r\n      </contact-info>\r\n    </location>\r\n    <location>\r\n      <address>\r\n        <street1>30 S. Wacker Drive</street1>\r\n        <city>Chicago</city>\r\n        <postal-code>60606</postal-code>\r\n      </address>\r\n      <contact-info>\r\n      </contact-info>\r\n    </location>\r\n  </locations>\r\n  <founded-year>2003</founded-year>\r\n  <email-domains total=\"1\">\r\n    <email-domain>linkedin.com</email-domain>\r\n  </email-domains>\r\n  <website-url>http://www.linkedin.com</website-url>\r\n  <status>\r\n   <code>OPR</code>\r\n   <name>Operating</name>\r\n  </status>\r\n  <employee-count-range>\r\n    <code>F</code>\r\n    <name>501-1000</name>\r\n  </employee-count-range>\r\n</company>",
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "companyId",
        "in" : "path",
        "description" : "The unique internal numeric company identifier.",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "fieldSelectors",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/companies{fieldSelectors}" : {
      "get" : {
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "is-company-admin",
          "in" : "query",
          "description" : "The authenticated user is an administrator",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "email-domains",
          "in" : "query",
          "description" : "Company email domains.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Maximum",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "The offset by which to start Network Update pagination",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded  \n",
            "schema" : {
              "$ref" : "#/definitions/companies-xml"
            },
            "examples" : {
              "application/xml" : null,
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "fieldSelectors",
        "in" : "path",
        "description" : "Many of our resources allow you to specify what fields you want returned. We call this syntax field selectors.\nBy indicating exactly the information you need, we can optimize the amount of time needed to return your results.\nIt also reduces the amount of data passing across the wire. The two combine to make our APIs speedy and efficient,\na critical factor in any web application, and more so for anyone relying on external APIs.\n\nField selectors are specified after the resource identifiers and path components of a resource, prefixed by a colon,\ncontained within parenthesis, and separated by commas. Fields will be returned in the order specified. When URL-encoding\nyour resource URLs, ensure that the parenthesis used in selectors remain unescaped.\n\nExamples\n--------\nTo get a member's ID, first name, last name, and industry:\n  `http://api.linkedin.com/v1/people/~:(id,first-name,last-name,industry)`\n\nOr the same set of information for their connections:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,industry)`\n\nFields selectors can also be nested to access individual fields from a larger collection. For example, to get just the\njob titles and not the rest of the information about positions:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,positions:(title))`\n\nField selectors with resource identifiers allow you to request information about multiple entities at once. Specify them\nsimilarly, but append a double colon - here's an example getting profile information about thee members: the first is the\ncurrent member, indicated by a tilde; the next has an id of 12345; and the last has a public profile URL\n\n  `http://api.linkedin.com/v1/people::(~, id=12345,url=http%3A%2F%2Fwww.linkedin.com%2Fin%2Fadamnash)`\n",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/company-search{fieldSelectors}" : {
      "get" : {
        "description" : "Use the Company Search API to find companies using keywords, industry, location, or some other criteria. It returns a collection of matching companies. Each entry can contain much of the information available on the company page.\nThe API can also return facets. Facets provide you with data about the collection of companies, such as which companies are located in a certain area, size of the companies, and the industry a company is in. You can then use this data to make a new API call that further refines your original request. This is similar to clicking the buttons on the left-hand side of the LinkedIn Search results page.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "hq-only",
          "in" : "query",
          "description" : "Matching companies by the headquarters location. When this is set to \"true\" and a location facet is used, this restricts returned companies to only those whose headquarters resides in the specified location.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Maximum",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "The offset by which to start Network Update pagination",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "keywords",
          "in" : "query",
          "description" : "Members who have all the keywords anywhere in their profile. Use this field when you don't know how to\nmore accurately map the input to a more specific parameter. (Don't forget to URL encode this data.)\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "facet",
          "in" : "query",
          "description" : "Facet values to search over.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "facets",
          "in" : "query",
          "description" : "|Parameter| Definition| Values|\n|---|---|---|\n|location|A geographical region. This is not necessarily a country. It could be a city or regional area, such as San Francisco Bay Area.|A geographical code, such as us:84 for San Francisco Bay Area or fr:0 for France.| \n|industry|An industry field.|Industry codes are listed on a separate page.|\n|network|Collection of companies based on relationship.||\n|company-size|The company collection based on size range specified.|Valid values are: B: 1-10 C: 11-50 D: 51-200 E: 201-500 F: 501-1000 G: 1001-5000 H: 5001-10,000 I: 10,000+|\n|num-followers-range|The company collection based on the number of followers.||\n|fortune|The company collection based on the Fortune ranking.||\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "\"Controls the search result order. There are four options:\nconnections: Number of connections per person, from largest to smallest.\nrecommenders: Number of recommendations per person, from largest to smallest.\ndistance: Degree of separation within the member's network, from first degree, then second degree, and then all others mixed together, including third degree and out-of-network.\nrelevance: Relevance of results based on the query, from most to least relevant.          \nBy default, results are ordered by the number of connections.\"\n",
          "required" : false,
          "type" : "string",
          "default" : "connections"
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/companySearch-xml"
            },
            "examples" : {
              "application/xml" : null,
              "application/json" : null
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "fieldSelectors",
        "in" : "path",
        "description" : "Many of our resources allow you to specify what fields you want returned. We call this syntax field selectors.\nBy indicating exactly the information you need, we can optimize the amount of time needed to return your results.\nIt also reduces the amount of data passing across the wire. The two combine to make our APIs speedy and efficient,\na critical factor in any web application, and more so for anyone relying on external APIs.\n\nField selectors are specified after the resource identifiers and path components of a resource, prefixed by a colon,\ncontained within parenthesis, and separated by commas. Fields will be returned in the order specified. When URL-encoding\nyour resource URLs, ensure that the parenthesis used in selectors remain unescaped.\n\nExamples\n--------\nTo get a member's ID, first name, last name, and industry:\n  `http://api.linkedin.com/v1/people/~:(id,first-name,last-name,industry)`\n\nOr the same set of information for their connections:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,industry)`\n\nFields selectors can also be nested to access individual fields from a larger collection. For example, to get just the\njob titles and not the rest of the information about positions:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,positions:(title))`\n\nField selectors with resource identifiers allow you to request information about multiple entities at once. Specify them\nsimilarly, but append a double colon - here's an example getting profile information about thee members: the first is the\ncurrent member, indicated by a tilde; the next has an id of 12345; and the last has a public profile URL\n\n  `http://api.linkedin.com/v1/people::(~, id=12345,url=http%3A%2F%2Fwww.linkedin.com%2Fin%2Fadamnash)`\n",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/groups/{groupId}/posts" : {
      "get" : {
        "description" : "Returns a Group's Discussion Posts\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "count",
          "in" : "query",
          "description" : "Maximum",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "The offset by which to start Network Update pagination",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "role",
          "in" : "query",
          "description" : "Filter for posts related to the caller. Valid only for group-memberships/{id}/posts resource.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "category",
          "in" : "query",
          "description" : "Category of posts.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "order",
          "in" : "query",
          "description" : "Sort order for posts.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "modified-since",
          "in" : "query",
          "description" : "Timestamp filter for posts created after the specified value.\n",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded  \n",
            "schema" : {
              "$ref" : "#/definitions/groupPosts-xml"
            },
            "examples" : {
              "application/xml" : null,
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "post" : {
        "description" : "Sharing content with a post is fairly straight forward. Simply make a POST call to the Groups API",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/groupPost-xml"
          },
          "x-examples" : {
            "application/xml" : null,
            "application/json" : null
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded\n",
            "examples" : {
              "application/json" : null,
              "text/xml" : null
            }
          },
          "201" : {
            "description" : "Your request to POST or PUT a record was successful. A Location HTTP header is often returned when we respond with a 201.\n",
            "examples" : {
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "fieldSelectors",
        "in" : "path",
        "description" : "Many of our resources allow you to specify what fields you want returned. We call this syntax field selectors.\nBy indicating exactly the information you need, we can optimize the amount of time needed to return your results.\nIt also reduces the amount of data passing across the wire. The two combine to make our APIs speedy and efficient,\na critical factor in any web application, and more so for anyone relying on external APIs.\n\nField selectors are specified after the resource identifiers and path components of a resource, prefixed by a colon,\ncontained within parenthesis, and separated by commas. Fields will be returned in the order specified. When URL-encoding\nyour resource URLs, ensure that the parenthesis used in selectors remain unescaped.\n\nExamples\n--------\nTo get a member's ID, first name, last name, and industry:\n  `http://api.linkedin.com/v1/people/~:(id,first-name,last-name,industry)`\n\nOr the same set of information for their connections:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,industry)`\n\nFields selectors can also be nested to access individual fields from a larger collection. For example, to get just the\njob titles and not the rest of the information about positions:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,positions:(title))`\n\nField selectors with resource identifiers allow you to request information about multiple entities at once. Specify them\nsimilarly, but append a double colon - here's an example getting profile information about thee members: the first is the\ncurrent member, indicated by a tilde; the next has an id of 12345; and the last has a public profile URL\n\n  `http://api.linkedin.com/v1/people::(~, id=12345,url=http%3A%2F%2Fwww.linkedin.com%2Fin%2Fadamnash)`\n",
        "required" : false,
        "type" : "string"
      }, {
        "name" : "groupId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/groups/{groupId}{fieldSelectors}" : {
      "get" : {
        "description" : "Returns Group's Profile Details\n",
        "schemes" : [ "http" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/group-xml"
            },
            "examples" : {
              "application/xml" : null,
              "application/json" : null
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "groupId",
        "in" : "path",
        "description" : "The unique identifier for a LinkedIn group\n",
        "required" : true,
        "type" : "integer"
      }, {
        "name" : "fieldSelectors",
        "in" : "path",
        "description" : "Many of our resources allow you to specify what fields you want returned. We call this syntax field selectors.\nBy indicating exactly the information you need, we can optimize the amount of time needed to return your results.\nIt also reduces the amount of data passing across the wire. The two combine to make our APIs speedy and efficient,\na critical factor in any web application, and more so for anyone relying on external APIs.\n\nField selectors are specified after the resource identifiers and path components of a resource, prefixed by a colon,\ncontained within parenthesis, and separated by commas. Fields will be returned in the order specified. When URL-encoding\nyour resource URLs, ensure that the parenthesis used in selectors remain unescaped.\n\nExamples\n--------\nTo get a member's ID, first name, last name, and industry:\n  `http://api.linkedin.com/v1/people/~:(id,first-name,last-name,industry)`\n\nOr the same set of information for their connections:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,industry)`\n\nFields selectors can also be nested to access individual fields from a larger collection. For example, to get just the\njob titles and not the rest of the information about positions:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,positions:(title))`\n\nField selectors with resource identifiers allow you to request information about multiple entities at once. Specify them\nsimilarly, but append a double colon - here's an example getting profile information about thee members: the first is the\ncurrent member, indicated by a tilde; the next has an id of 12345; and the last has a public profile URL\n\n  `http://api.linkedin.com/v1/people::(~, id=12345,url=http%3A%2F%2Fwww.linkedin.com%2Fin%2Fadamnash)`\n",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/job-search{fieldSelectors}" : {
      "get" : {
        "description" : "Returns Jobs found by some criteria\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "distance",
          "in" : "query",
          "description" : "Matches jobs within a distance from a central point. This is measured in miles. This is best used in combination with both country-code and postal-code.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "postal-code",
          "in" : "query",
          "description" : "Matches jobs centered around a Postal Code. Must be combined with the country-code parameter. Not supported for all countries.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "country-code",
          "in" : "query",
          "description" : "Matches jobs with a location in a specific country. Values are defined in by ISO 3166 standard. Country codes must be in all lower case.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "job-title",
          "in" : "query",
          "description" : "Matches jobs with the same job title.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "company-name",
          "in" : "query",
          "description" : "Jobs with a matching company name. It's often valuable to not be too specific with the company name. LinkedIn has made great efforts at standardizing company names, but including suffixes such as \"Inc\" and \"Company\" may overly limit your search, missing people who did not include those suffixes on their company names. It's usually better to  search for the basic name of the company and all different versions will be returned. This does increase the possibility of a false positive match return, though, so consider the most specific terms you can use. For example, consider using \"Acme\" instead of \"Acme, Inc\" to find people from a company called Acme, Inc. But this runs the risk of finding people from different companies with Acme in the title, such as \"Acme Vending\" and \"Acme Services\".\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Maximum",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "The offset by which to start Network Update pagination",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "keywords",
          "in" : "query",
          "description" : "Members who have all the keywords anywhere in their profile. Use this field when you don't know how to\nmore accurately map the input to a more specific parameter. (Don't forget to URL encode this data.)\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "facet",
          "in" : "query",
          "description" : "Facet values to search over.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "facets",
          "in" : "query",
          "description" : "|Parameter| Definition| Values|\n|---|---|---|\n|company|The job postings by company.|| \n|date-posted|The job postings by the date posted.|Format: YearMonthDay (e.g. 20121031)|\n|location|A geographical region. This is not necessarily a country. It could be a city or regional area, such as San Francisco Bay Area.|A geographical code, such as us:84 for San Francisco Bay Area or fr:0 for France.|\n|job-function|The job postings by job function.|| \n|industry|An industry field.|Industry values are listed on a separate page.|\n|salary|The job postings based on salary.||\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "\"Controls the search result order. There are four options:\nconnections: Number of connections per person, from largest to smallest.\nrecommenders: Number of recommendations per person, from largest to smallest.\ndistance: Degree of separation within the member's network, from first degree, then second degree, and then all others mixed together, including third degree and out-of-network.\nrelevance: Relevance of results based on the query, from most to least relevant.          \nBy default, results are ordered by the number of connections.\"\n",
          "required" : false,
          "type" : "string",
          "default" : "connections"
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/jobSearch-xml"
            },
            "examples" : {
              "application/xml" : null,
              "application/json" : null
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "fieldSelectors",
        "in" : "path",
        "description" : "Many of our resources allow you to specify what fields you want returned. We call this syntax field selectors.\nBy indicating exactly the information you need, we can optimize the amount of time needed to return your results.\nIt also reduces the amount of data passing across the wire. The two combine to make our APIs speedy and efficient,\na critical factor in any web application, and more so for anyone relying on external APIs.\n\nField selectors are specified after the resource identifiers and path components of a resource, prefixed by a colon,\ncontained within parenthesis, and separated by commas. Fields will be returned in the order specified. When URL-encoding\nyour resource URLs, ensure that the parenthesis used in selectors remain unescaped.\n\nExamples\n--------\nTo get a member's ID, first name, last name, and industry:\n  `http://api.linkedin.com/v1/people/~:(id,first-name,last-name,industry)`\n\nOr the same set of information for their connections:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,industry)`\n\nFields selectors can also be nested to access individual fields from a larger collection. For example, to get just the\njob titles and not the rest of the information about positions:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,positions:(title))`\n\nField selectors with resource identifiers allow you to request information about multiple entities at once. Specify them\nsimilarly, but append a double colon - here's an example getting profile information about thee members: the first is the\ncurrent member, indicated by a tilde; the next has an id of 12345; and the last has a public profile URL\n\n  `http://api.linkedin.com/v1/people::(~, id=12345,url=http%3A%2F%2Fwww.linkedin.com%2Fin%2Fadamnash)`\n",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/jobs" : {
      "post" : {
        "description" : "Post a job",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "Content-Type",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/job-xml"
          },
          "x-examples" : {
            "application/xml" : "<job>\r\n  <partner-job-id>LIJ-13239292</partner-job-id>\r\n  <contract-id>1234</contract-id>\r\n  <customer-job-code>DE247X</customer-job-code>\r\n  <company>\r\n    <id>1234</id>\r\n    <name>Company ABC</name>\r\n    <description>A great company</description>\r\n  </company>\r\n  <position>\r\n    <title>Chief Architect</title>\r\n    <description>This is a great job.</description>\r\n    <skills-and-experience>Programming, financial analysis, and  thought leadership.</skills-and-experience>\r\n    <location>\r\n     <country>\r\n       <code>us</code>\r\n      </country>\r\n      <postal-code>10012</postal-code>\r\n      <name>Midtown Manhattan</name>\r\n    </location>\r\n    <job-functions>\r\n      <job-function>\r\n        <code>acct</code>\r\n      </job-function>\r\n            <job-function>\r\n              <code>dsgn</code>\r\n            </job-function>\r\n        </job-functions>\r\n    <industries>\r\n      <industry>\r\n        <code>38</code>\r\n      </industry>\r\n      <industry>\r\n        <code>44</code>\r\n      </industry>\r\n    </industries>\r\n    <job-type>\r\n      <code>C</code>\r\n    </job-type>\r\n    <experience-level>\r\n      <code>4</code>\r\n    </experience-level>\r\n  </position>\r\n  <salary>$100,000-120,000 per year</salary>\r\n  <referral-bonus>$5,000 for employees</referral-bonus>\r\n  <poster>\r\n    <display>true</display>\r\n    <role>\r\n      <code>R</code>\r\n    </role>\r\n        <email-address>user@contract.com</email-address>\r\n  </poster>\r\n  <how-to-apply>\r\n    <application-url>http://www.linkedin.com</application-url>\r\n  </how-to-apply>\r\n  <tracking-pixel-url>http://www.linkedin.com/track.gif</tracking-pixel-url>\r\n</job>",
            "application/json" : null
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded\n",
            "examples" : {
              "application/json" : null,
              "text/xml" : null
            }
          },
          "201" : {
            "description" : "Your request to POST or PUT a record was successful. A Location HTTP header is often returned when we respond with a 201.\n",
            "examples" : {
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "402" : {
            "description" : "No job inventory available"
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "409" : {
            "description" : "Duplicate job.Happens when you try to Post a New Job, but another job with the same Partner Job Id already exists. Partner Job Id has to be unique. So either repost with a new Partner Job Id, or edit the existing job.\nJob is closed. Happens when you try to update or renew a job that has already been closed. Renew is not ReOpen. To reopen a closed job, post it again.\nJob is expired. Happens when you try to update a job that has been expired. \nMake a renew call. You can edit and renew a job in the same call.\n"
          }
        },
        "security" : [ ]
      }
    },
    "/jobs/partner-job-id={partnerJobId}" : {
      "get" : {
        "schemes" : [ "http" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/jobUpdate-xml"
            },
            "examples" : {
              "application/xml" : null,
              "application/json" : null
            }
          }
        },
        "security" : [ ]
      },
      "put" : {
        "description" : "Edit or renew a job",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "in" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/jobUpdate-xml"
          },
          "x-examples" : {
            "application/xml" : "<job>\r\n  <position> \r\n    <description>This is a great job.</description>\r\n  </position>\r\n  <compensation>\r\n    <salary>\r\n      <description>$100k per year + benefits</description>\r\n    </salary>\r\n  </compensation>\r\n</job>",
            "application/json" : null
          }
        } ],
        "responses" : {
          "200" : { }
        },
        "security" : [ ]
      },
      "delete" : {
        "description" : "Close calls should not include XML; only the URL is required.\nAn HTTP DELETE must be used to close a job.\n",
        "schemes" : [ "http" ],
        "parameters" : [ ],
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "partnerJobId",
        "in" : "path",
        "description" : "Unique ID for the job created by the partner (must be unique for each job posted).",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/jobs/{jobId}{fieldSelectors}" : {
      "get" : {
        "description" : "Returns Job info\n",
        "schemes" : [ "http" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/jobGet-xml"
            },
            "examples" : {
              "application/xml" : null,
              "application/json" : null
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "jobId",
        "in" : "path",
        "description" : "The unique identifier for a job.\n",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "fieldSelectors",
        "in" : "path",
        "description" : "Many of our resources allow you to specify what fields you want returned. We call this syntax field selectors.\nBy indicating exactly the information you need, we can optimize the amount of time needed to return your results.\nIt also reduces the amount of data passing across the wire. The two combine to make our APIs speedy and efficient,\na critical factor in any web application, and more so for anyone relying on external APIs.\n\nField selectors are specified after the resource identifiers and path components of a resource, prefixed by a colon,\ncontained within parenthesis, and separated by commas. Fields will be returned in the order specified. When URL-encoding\nyour resource URLs, ensure that the parenthesis used in selectors remain unescaped.\n\nExamples\n--------\nTo get a member's ID, first name, last name, and industry:\n  `http://api.linkedin.com/v1/people/~:(id,first-name,last-name,industry)`\n\nOr the same set of information for their connections:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,industry)`\n\nFields selectors can also be nested to access individual fields from a larger collection. For example, to get just the\njob titles and not the rest of the information about positions:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,positions:(title))`\n\nField selectors with resource identifiers allow you to request information about multiple entities at once. Specify them\nsimilarly, but append a double colon - here's an example getting profile information about thee members: the first is the\ncurrent member, indicated by a tilde; the next has an id of 12345; and the last has a public profile URL\n\n  `http://api.linkedin.com/v1/people::(~, id=12345,url=http%3A%2F%2Fwww.linkedin.com%2Fin%2Fadamnash)`\n",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/people-search{fieldSelectors}" : {
      "get" : {
        "description" : "Returns information about people\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "first-name",
          "in" : "query",
          "description" : "Members with a matching first name. Matches must be exact. Multiple words should be separated by a space.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "last-name",
          "in" : "query",
          "description" : "Members with a matching last name. Matches must be exactly. Multiple words should be separated by a space.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "company-name",
          "in" : "query",
          "description" : "Members who have a matching company name on their profile. company-name can be combined with the current-company parameter\nto specifies whether the person is or is not still working at the company.\n\nIt's often valuable to not be too specific with the company name. LinkedIn has made great efforts at standardizing company names,\nbut including suffixes such as \"Inc\" and \"Company\" may overly limit your search, missing people who did not include those suffixes\non their company names. It's usually better to  search for the basic name of the company and all different versions will be returned.\nThis does increase the possibility of a false positive match return, though, so consider the most specific terms you can use.\nFor example, consider using \"Acme\" instead of \"Acme, Inc\" to find people from a company called Acme, Inc. But this runs the risk\nof finding people from different companies with Acme in the title, such as \"Acme Vending\" and \"Acme Services\".\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "current-company",
          "in" : "query",
          "description" : "Valid values are true or false. A value of true matches members who currently work at the company specified in the company-name parameter.\nA value of false matches members who once worked at the company. Omitting the parameter matches members who currently or once worked\nthe company.\n",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "title",
          "in" : "query",
          "description" : "Matches members with that title on their profile. Works with the current-title parameter.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "current-title",
          "in" : "query",
          "description" : "Valid values are true or false. A value of true matches members whose title is currently the one specified in the title-name parameter.\nA value of false matches members who once had that title. Omitting the parameter matches members who currently or once had that title.\n",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "school-name",
          "in" : "query",
          "description" : "Members who have a matching school name on their profile. school-name can be combined with the current-school parameter to specifies\nwhether the person is or is not still at the school.\n\nIt's often valuable to not be too specific with the school name. The same explation provided with company name applies:\n\"Yale\" vs. \"Yale University\".\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "current-school",
          "in" : "query",
          "description" : "Valid values are true or false. A value of true matches members who currently attend the school specified in the school-name parameter.\nA value of false matches members who once attended the school. Omitting the parameter matches members who currently or once attended\nthe school.\n",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "country-code",
          "in" : "query",
          "description" : "Matches members with a location in a specific country. Values are defined in by ISO 3166 standard. Country codes must be in all lower case.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "postal-code",
          "in" : "query",
          "description" : "Matches members centered around a Postal Code. Must be combined with the country-code parameter. Not supported for all countries.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "distance",
          "in" : "query",
          "description" : "Matches members within a distance from a central point. This is measured in miles. This is best used in combination with both country-code\nand postal-code.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Maximum",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "The offset by which to start Network Update pagination",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "keywords",
          "in" : "query",
          "description" : "Members who have all the keywords anywhere in their profile. Use this field when you don't know how to\nmore accurately map the input to a more specific parameter. (Don't forget to URL encode this data.)\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "facet",
          "in" : "query",
          "description" : "Facet values to search over.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "facets",
          "in" : "query",
          "description" : "\"Use facets to discover for a member:          \nWho in their network works at a specific company, or group of companies.\nHow the people their network cluster together. What locations or industries are the most popular?          \nWhere their connections graduated from school.\"\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "\"Controls the search result order. There are four options:\nconnections: Number of connections per person, from largest to smallest.\nrecommenders: Number of recommendations per person, from largest to smallest.\ndistance: Degree of separation within the member's network, from first degree, then second degree, and then all others mixed together, including third degree and out-of-network.\nrelevance: Relevance of results based on the query, from most to least relevant.          \nBy default, results are ordered by the number of connections.\"\n",
          "required" : false,
          "type" : "string",
          "default" : "connections"
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/peopleSearch-xml"
            },
            "examples" : {
              "application/xml" : null,
              "application/json" : null
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "fieldSelectors",
        "in" : "path",
        "description" : "Many of our resources allow you to specify what fields you want returned. We call this syntax field selectors.\nBy indicating exactly the information you need, we can optimize the amount of time needed to return your results.\nIt also reduces the amount of data passing across the wire. The two combine to make our APIs speedy and efficient,\na critical factor in any web application, and more so for anyone relying on external APIs.\n\nField selectors are specified after the resource identifiers and path components of a resource, prefixed by a colon,\ncontained within parenthesis, and separated by commas. Fields will be returned in the order specified. When URL-encoding\nyour resource URLs, ensure that the parenthesis used in selectors remain unescaped.\n\nExamples\n--------\nTo get a member's ID, first name, last name, and industry:\n  `http://api.linkedin.com/v1/people/~:(id,first-name,last-name,industry)`\n\nOr the same set of information for their connections:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,industry)`\n\nFields selectors can also be nested to access individual fields from a larger collection. For example, to get just the\njob titles and not the rest of the information about positions:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,positions:(title))`\n\nField selectors with resource identifiers allow you to request information about multiple entities at once. Specify them\nsimilarly, but append a double colon - here's an example getting profile information about thee members: the first is the\ncurrent member, indicated by a tilde; the next has an id of 12345; and the last has a public profile URL\n\n  `http://api.linkedin.com/v1/people::(~, id=12345,url=http%3A%2F%2Fwww.linkedin.com%2Fin%2Fadamnash)`\n",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/people/id={peopleId}/connections{fieldSelectors}" : {
      "get" : {
        "description" : "Returns a list of 1st degree connections for a user who has granted access to his/her accoun\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "count",
          "in" : "query",
          "description" : "Maximum",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "The offset by which to start Network Update pagination",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "modified-since",
          "in" : "query",
          "description" : "Value as a Unix time stamp of milliseconds since epoch.\n",
          "required" : false,
          "type" : "integer",
          "minimum" : 0.0
        }, {
          "name" : "modified",
          "in" : "query",
          "description" : "Values are updated or new.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded  \n",
            "schema" : {
              "$ref" : "#/definitions/connections-xml"
            },
            "examples" : {
              "application/xml" : null,
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "fieldSelectors",
        "in" : "path",
        "description" : "Many of our resources allow you to specify what fields you want returned. We call this syntax field selectors.\nBy indicating exactly the information you need, we can optimize the amount of time needed to return your results.\nIt also reduces the amount of data passing across the wire. The two combine to make our APIs speedy and efficient,\na critical factor in any web application, and more so for anyone relying on external APIs.\n\nField selectors are specified after the resource identifiers and path components of a resource, prefixed by a colon,\ncontained within parenthesis, and separated by commas. Fields will be returned in the order specified. When URL-encoding\nyour resource URLs, ensure that the parenthesis used in selectors remain unescaped.\n\nExamples\n--------\nTo get a member's ID, first name, last name, and industry:\n  `http://api.linkedin.com/v1/people/~:(id,first-name,last-name,industry)`\n\nOr the same set of information for their connections:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,industry)`\n\nFields selectors can also be nested to access individual fields from a larger collection. For example, to get just the\njob titles and not the rest of the information about positions:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,positions:(title))`\n\nField selectors with resource identifiers allow you to request information about multiple entities at once. Specify them\nsimilarly, but append a double colon - here's an example getting profile information about thee members: the first is the\ncurrent member, indicated by a tilde; the next has an id of 12345; and the last has a public profile URL\n\n  `http://api.linkedin.com/v1/people::(~, id=12345,url=http%3A%2F%2Fwww.linkedin.com%2Fin%2Fadamnash)`\n",
        "required" : false,
        "type" : "string"
      }, {
        "name" : "peopleId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/people/id={peopleId}{fieldSelectors}" : {
      "get" : {
        "description" : "Returns profile of user by ID\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "secure-urls",
          "in" : "query",
          "description" : "secure-urls query parameter indicates that you want the URLs in your response to be HTTPS\n",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/person-xml"
            },
            "examples" : {
              "application/xml" : null,
              "application/json" : null
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "fieldSelectors",
        "in" : "path",
        "description" : "Many of our resources allow you to specify what fields you want returned. We call this syntax field selectors.\nBy indicating exactly the information you need, we can optimize the amount of time needed to return your results.\nIt also reduces the amount of data passing across the wire. The two combine to make our APIs speedy and efficient,\na critical factor in any web application, and more so for anyone relying on external APIs.\n\nField selectors are specified after the resource identifiers and path components of a resource, prefixed by a colon,\ncontained within parenthesis, and separated by commas. Fields will be returned in the order specified. When URL-encoding\nyour resource URLs, ensure that the parenthesis used in selectors remain unescaped.\n\nExamples\n--------\nTo get a member's ID, first name, last name, and industry:\n  `http://api.linkedin.com/v1/people/~:(id,first-name,last-name,industry)`\n\nOr the same set of information for their connections:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,industry)`\n\nFields selectors can also be nested to access individual fields from a larger collection. For example, to get just the\njob titles and not the rest of the information about positions:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,positions:(title))`\n\nField selectors with resource identifiers allow you to request information about multiple entities at once. Specify them\nsimilarly, but append a double colon - here's an example getting profile information about thee members: the first is the\ncurrent member, indicated by a tilde; the next has an id of 12345; and the last has a public profile URL\n\n  `http://api.linkedin.com/v1/people::(~, id=12345,url=http%3A%2F%2Fwww.linkedin.com%2Fin%2Fadamnash)`\n",
        "required" : false,
        "type" : "string"
      }, {
        "name" : "peopleId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/people/url={publicProfileUrl}/connections{fieldSelectors}" : {
      "get" : {
        "description" : "Returns a list of 1st degree connections for a user who has granted access to his/her accoun\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "count",
          "in" : "query",
          "description" : "Maximum",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "The offset by which to start Network Update pagination",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "modified-since",
          "in" : "query",
          "description" : "Value as a Unix time stamp of milliseconds since epoch.\n",
          "required" : false,
          "type" : "integer",
          "minimum" : 0.0
        }, {
          "name" : "modified",
          "in" : "query",
          "description" : "Values are updated or new.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded  \n",
            "schema" : {
              "$ref" : "#/definitions/connections-xml"
            },
            "examples" : {
              "application/xml" : null,
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "fieldSelectors",
        "in" : "path",
        "description" : "Many of our resources allow you to specify what fields you want returned. We call this syntax field selectors.\nBy indicating exactly the information you need, we can optimize the amount of time needed to return your results.\nIt also reduces the amount of data passing across the wire. The two combine to make our APIs speedy and efficient,\na critical factor in any web application, and more so for anyone relying on external APIs.\n\nField selectors are specified after the resource identifiers and path components of a resource, prefixed by a colon,\ncontained within parenthesis, and separated by commas. Fields will be returned in the order specified. When URL-encoding\nyour resource URLs, ensure that the parenthesis used in selectors remain unescaped.\n\nExamples\n--------\nTo get a member's ID, first name, last name, and industry:\n  `http://api.linkedin.com/v1/people/~:(id,first-name,last-name,industry)`\n\nOr the same set of information for their connections:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,industry)`\n\nFields selectors can also be nested to access individual fields from a larger collection. For example, to get just the\njob titles and not the rest of the information about positions:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,positions:(title))`\n\nField selectors with resource identifiers allow you to request information about multiple entities at once. Specify them\nsimilarly, but append a double colon - here's an example getting profile information about thee members: the first is the\ncurrent member, indicated by a tilde; the next has an id of 12345; and the last has a public profile URL\n\n  `http://api.linkedin.com/v1/people::(~, id=12345,url=http%3A%2F%2Fwww.linkedin.com%2Fin%2Fadamnash)`\n",
        "required" : false,
        "type" : "string"
      }, {
        "name" : "publicProfileUrl",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/people/url={publicProfileUrl}{fieldSelectors}" : {
      "get" : {
        "description" : "Returns profile of user by URL\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "secure-urls",
          "in" : "query",
          "description" : "secure-urls query parameter indicates that you want the URLs in your response to be HTTPS\n",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/person-xml"
            },
            "examples" : {
              "application/xml" : null,
              "application/json" : null
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "fieldSelectors",
        "in" : "path",
        "description" : "Many of our resources allow you to specify what fields you want returned. We call this syntax field selectors.\nBy indicating exactly the information you need, we can optimize the amount of time needed to return your results.\nIt also reduces the amount of data passing across the wire. The two combine to make our APIs speedy and efficient,\na critical factor in any web application, and more so for anyone relying on external APIs.\n\nField selectors are specified after the resource identifiers and path components of a resource, prefixed by a colon,\ncontained within parenthesis, and separated by commas. Fields will be returned in the order specified. When URL-encoding\nyour resource URLs, ensure that the parenthesis used in selectors remain unescaped.\n\nExamples\n--------\nTo get a member's ID, first name, last name, and industry:\n  `http://api.linkedin.com/v1/people/~:(id,first-name,last-name,industry)`\n\nOr the same set of information for their connections:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,industry)`\n\nFields selectors can also be nested to access individual fields from a larger collection. For example, to get just the\njob titles and not the rest of the information about positions:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,positions:(title))`\n\nField selectors with resource identifiers allow you to request information about multiple entities at once. Specify them\nsimilarly, but append a double colon - here's an example getting profile information about thee members: the first is the\ncurrent member, indicated by a tilde; the next has an id of 12345; and the last has a public profile URL\n\n  `http://api.linkedin.com/v1/people::(~, id=12345,url=http%3A%2F%2Fwww.linkedin.com%2Fin%2Fadamnash)`\n",
        "required" : false,
        "type" : "string"
      }, {
        "name" : "publicProfileUrl",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/people/~/connections{fieldSelectors}" : {
      "get" : {
        "description" : "Returns a list of 1st degree connections for a user who has granted access to his/her accoun\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "count",
          "in" : "query",
          "description" : "Maximum",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "The offset by which to start Network Update pagination",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "modified-since",
          "in" : "query",
          "description" : "Value as a Unix time stamp of milliseconds since epoch.\n",
          "required" : false,
          "type" : "integer",
          "minimum" : 0.0
        }, {
          "name" : "modified",
          "in" : "query",
          "description" : "Values are updated or new.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded  \n",
            "schema" : {
              "$ref" : "#/definitions/connections-xml"
            },
            "examples" : {
              "application/xml" : null,
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "fieldSelectors",
        "in" : "path",
        "description" : "Many of our resources allow you to specify what fields you want returned. We call this syntax field selectors.\nBy indicating exactly the information you need, we can optimize the amount of time needed to return your results.\nIt also reduces the amount of data passing across the wire. The two combine to make our APIs speedy and efficient,\na critical factor in any web application, and more so for anyone relying on external APIs.\n\nField selectors are specified after the resource identifiers and path components of a resource, prefixed by a colon,\ncontained within parenthesis, and separated by commas. Fields will be returned in the order specified. When URL-encoding\nyour resource URLs, ensure that the parenthesis used in selectors remain unescaped.\n\nExamples\n--------\nTo get a member's ID, first name, last name, and industry:\n  `http://api.linkedin.com/v1/people/~:(id,first-name,last-name,industry)`\n\nOr the same set of information for their connections:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,industry)`\n\nFields selectors can also be nested to access individual fields from a larger collection. For example, to get just the\njob titles and not the rest of the information about positions:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,positions:(title))`\n\nField selectors with resource identifiers allow you to request information about multiple entities at once. Specify them\nsimilarly, but append a double colon - here's an example getting profile information about thee members: the first is the\ncurrent member, indicated by a tilde; the next has an id of 12345; and the last has a public profile URL\n\n  `http://api.linkedin.com/v1/people::(~, id=12345,url=http%3A%2F%2Fwww.linkedin.com%2Fin%2Fadamnash)`\n",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/people/~/following/companies" : {
      "get" : {
        "description" : "Retrieve a list of companies a member is following",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded  \n",
            "schema" : {
              "$ref" : "#/definitions/companies-xml"
            },
            "examples" : {
              "application/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<companies count=\"10\" start=\"0\">\r\n  <company>\r\n    <id>49648</id>\r\n    <name>Merix Financial</name>\r\n  </company>\r\n  <company>\r\n    <id>118370</id>\r\n    <name>Movaya Wireless</name>\r\n  </company>\r\n  <company>\r\n    <id>119265</id>\r\n    <name>Maison Martin Margiela</name>\r\n  </company>\r\n  <company>\r\n    <id>112571</id>\r\n    <name>CoActive</name>\r\n  </company>\r\n  <company>\r\n    <id>97548</id>\r\n    <name>Actronic</name>\r\n  </company>\r\n  <company>\r\n    <id>1115987</id>\r\n    <name>EELA</name>\r\n  </company>\r\n  <company>\r\n    <id>2204291</id>\r\n    <name>OfftheHookHats.org</name>\r\n  </company>\r\n  <company>\r\n    <id>1973202</id>\r\n    <name>Ministry of Communication and Information Technology</name>\r\n  </company>\r\n  <company>\r\n    <id>2102550</id>\r\n    <name>Lundsbergs skola</name>\r\n  </company>\r\n  <company>\r\n    <id>1086137</id>\r\n    <name>Netsolve Limited</name>\r\n  </company>\r\n</companies>",
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "post" : {
        "description" : "Start following a company",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/company-xml"
          },
          "x-examples" : {
            "application/xml" : "<company>\r\n  <id>162479</id>\r\n  <name>Apple</name>\r\n</company>",
            "application/json" : null
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded\n",
            "examples" : {
              "application/json" : null,
              "text/xml" : null
            }
          },
          "201" : {
            "description" : "Your request to POST or PUT a record was successful. A Location HTTP header is often returned when we respond with a 201.\n",
            "examples" : {
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/people/~/following/companies/id={id}" : {
      "delete" : {
        "description" : "Stop following a company",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "204" : {
            "description" : "Your request to DELETE a record was successful\n"
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/people/~/group-memberships/{groupId}/posts{fieldSelectors}" : {
      "get" : {
        "description" : "Returns a Group's Discussion Posts\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "count",
          "in" : "query",
          "description" : "Maximum",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "The offset by which to start Network Update pagination",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "role",
          "in" : "query",
          "description" : "Filter for posts related to the caller. Valid only for group-memberships/{id}/posts resource.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "category",
          "in" : "query",
          "description" : "Category of posts.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "order",
          "in" : "query",
          "description" : "Sort order for posts.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "modified-since",
          "in" : "query",
          "description" : "Timestamp filter for posts created after the specified value.\n",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded  \n",
            "schema" : {
              "$ref" : "#/definitions/posts-xml"
            },
            "examples" : {
              "application/xml" : null,
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "fieldSelectors",
        "in" : "path",
        "description" : "Many of our resources allow you to specify what fields you want returned. We call this syntax field selectors.\nBy indicating exactly the information you need, we can optimize the amount of time needed to return your results.\nIt also reduces the amount of data passing across the wire. The two combine to make our APIs speedy and efficient,\na critical factor in any web application, and more so for anyone relying on external APIs.\n\nField selectors are specified after the resource identifiers and path components of a resource, prefixed by a colon,\ncontained within parenthesis, and separated by commas. Fields will be returned in the order specified. When URL-encoding\nyour resource URLs, ensure that the parenthesis used in selectors remain unescaped.\n\nExamples\n--------\nTo get a member's ID, first name, last name, and industry:\n  `http://api.linkedin.com/v1/people/~:(id,first-name,last-name,industry)`\n\nOr the same set of information for their connections:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,industry)`\n\nFields selectors can also be nested to access individual fields from a larger collection. For example, to get just the\njob titles and not the rest of the information about positions:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,positions:(title))`\n\nField selectors with resource identifiers allow you to request information about multiple entities at once. Specify them\nsimilarly, but append a double colon - here's an example getting profile information about thee members: the first is the\ncurrent member, indicated by a tilde; the next has an id of 12345; and the last has a public profile URL\n\n  `http://api.linkedin.com/v1/people::(~, id=12345,url=http%3A%2F%2Fwww.linkedin.com%2Fin%2Fadamnash)`\n",
        "required" : false,
        "type" : "string"
      }, {
        "name" : "groupId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/people/~/group-memberships/{groupId}{fieldSelectors}" : {
      "get" : {
        "description" : "Returns Group settings\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "membership-state",
          "in" : "query",
          "description" : "The state of the callers membership to the specified group. Use the value member to retrieve the groups to which a\nuser belongs.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded  \n",
            "schema" : {
              "$ref" : "#/definitions/people-gm-group-xml"
            },
            "examples" : {
              "application/xml" : "<?xml version='1.0' encoding='UTF-8' standalone='yes'?>\n<group-membership>\n  <show-group-logo-in-profile>true</show-group-logo-in-profile>\n  <email-digest-frequency>\n    <code>daily</code>\n  </email-digest-frequency>\n  <email-announcements-from-managers>true</email-announcements-from-managers>\n  <allow-messages-from-members>true</allow-messages-from-members>\n  <email-for-every-new-post>true</email-for-every-new-post>\n</group-membership>",
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "put" : {
        "description" : "Change Group settings\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/people-gm-group-xml"
          },
          "x-examples" : {
            "application/xml" : "<?xml version='1.0' encoding='UTF-8' standalone='yes'?>\n<group-membership>\n  <show-group-logo-in-profile>true</show-group-logo-in-profile>\n  <email-digest-frequency>\n    <code>daily</code>\n  </email-digest-frequency>\n  <email-announcements-from-managers>true</email-announcements-from-managers>\n  <allow-messages-from-members>true</allow-messages-from-members>\n  <email-for-every-new-post>true</email-for-every-new-post>\n</group-membership>"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "examples" : {
              "application/json" : null,
              "text/xml" : null
            }
          },
          "201" : {
            "description" : "Your request to POST or PUT a record was successful. A Location HTTP header is often returned when we respond with a 201.   \n",
            "examples" : {
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "delete" : {
        "description" : "Leave a Group",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "204" : {
            "description" : "Your request to DELETE a record was successful\n"
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "groupId",
        "in" : "path",
        "description" : "The unique identifier for a LinkedIn group\n",
        "required" : true,
        "type" : "integer"
      }, {
        "name" : "fieldSelectors",
        "in" : "path",
        "description" : "Many of our resources allow you to specify what fields you want returned. We call this syntax field selectors.\nBy indicating exactly the information you need, we can optimize the amount of time needed to return your results.\nIt also reduces the amount of data passing across the wire. The two combine to make our APIs speedy and efficient,\na critical factor in any web application, and more so for anyone relying on external APIs.\n\nField selectors are specified after the resource identifiers and path components of a resource, prefixed by a colon,\ncontained within parenthesis, and separated by commas. Fields will be returned in the order specified. When URL-encoding\nyour resource URLs, ensure that the parenthesis used in selectors remain unescaped.\n\nExamples\n--------\nTo get a member's ID, first name, last name, and industry:\n  `http://api.linkedin.com/v1/people/~:(id,first-name,last-name,industry)`\n\nOr the same set of information for their connections:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,industry)`\n\nFields selectors can also be nested to access individual fields from a larger collection. For example, to get just the\njob titles and not the rest of the information about positions:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,positions:(title))`\n\nField selectors with resource identifiers allow you to request information about multiple entities at once. Specify them\nsimilarly, but append a double colon - here's an example getting profile information about thee members: the first is the\ncurrent member, indicated by a tilde; the next has an id of 12345; and the last has a public profile URL\n\n  `http://api.linkedin.com/v1/people::(~, id=12345,url=http%3A%2F%2Fwww.linkedin.com%2Fin%2Fadamnash)`\n",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/people/~/group-memberships{fieldSelectors}" : {
      "get" : {
        "description" : "Returns Group Memberships for a User\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "membership-state",
          "in" : "query",
          "description" : "The state of the callers membership to the specified group. Use the value member to retrieve the groups to which a\nuser belongs.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Maximum",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "The offset by which to start Network Update pagination",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/groupMembership-xml"
            },
            "examples" : {
              "application/xml" : null,
              "application/json" : null
            }
          }
        },
        "security" : [ ]
      },
      "post" : {
        "description" : "POSTs additional group settings information\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "in" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/groupMembership-xml"
          },
          "x-examples" : {
            "application/xml" : null,
            "application/json" : null
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "fieldSelectors",
        "in" : "path",
        "description" : "Many of our resources allow you to specify what fields you want returned. We call this syntax field selectors.\nBy indicating exactly the information you need, we can optimize the amount of time needed to return your results.\nIt also reduces the amount of data passing across the wire. The two combine to make our APIs speedy and efficient,\na critical factor in any web application, and more so for anyone relying on external APIs.\n\nField selectors are specified after the resource identifiers and path components of a resource, prefixed by a colon,\ncontained within parenthesis, and separated by commas. Fields will be returned in the order specified. When URL-encoding\nyour resource URLs, ensure that the parenthesis used in selectors remain unescaped.\n\nExamples\n--------\nTo get a member's ID, first name, last name, and industry:\n  `http://api.linkedin.com/v1/people/~:(id,first-name,last-name,industry)`\n\nOr the same set of information for their connections:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,industry)`\n\nFields selectors can also be nested to access individual fields from a larger collection. For example, to get just the\njob titles and not the rest of the information about positions:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,positions:(title))`\n\nField selectors with resource identifiers allow you to request information about multiple entities at once. Specify them\nsimilarly, but append a double colon - here's an example getting profile information about thee members: the first is the\ncurrent member, indicated by a tilde; the next has an id of 12345; and the last has a public profile URL\n\n  `http://api.linkedin.com/v1/people::(~, id=12345,url=http%3A%2F%2Fwww.linkedin.com%2Fin%2Fadamnash)`\n",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/people/~/job-bookmarks" : {
      "get" : {
        "description" : "Returns Job Bookmarks\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded  \n",
            "schema" : {
              "$ref" : "#/definitions/jobBookmarks-xml"
            },
            "examples" : {
              "application/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<job-bookmarks total=\"2\">\n  <job-bookmark>\n    <is-applied>false</is-applied>\n    <is-saved>true</is-saved>\n    <saved-timestamp>1306261147000</saved-timestamp>\n    <job>\n      <id>1641165</id>\n      <active>true</active>\n      <company>\n        <id>35876</id>\n        <name>ClairMail</name>\n      </company>\n      <position>\n        <title>Senior Technical Writer</title>\n      </position>\n      <description-snippet>The Technical Writer will be responsible for creating, maintaining and \nupdating documentation, including internal and external facing technical documentation of ClairMail software, \nsuch as user guides, installation guides, configuration guides, and developers guides. The products are \nenterprise software products and the audience is technical, so the candidate must be able to understand highly tec</description-snippet>\n      <posting-timestamp>1306256696000</posting-timestamp>\n    </job>\n  </job-bookmark>\n  <job-bookmark>\n    <is-applied>false</is-applied>\n    <is-saved>true</is-saved>\n    <saved-timestamp>1306261165000</saved-timestamp>\n    <job>\n      <id>1578133</id>\n      <active>true</active>\n      <company>\n        <id>26909</id>\n        <name>Greenplum</name>\n      </company>\n      <position>\n        <title>Senior Manager Technical Publications</title>\n      </position>\n      <description-snippet>Greenplum is seeking an experienced Senior Manager, Technical Publications to \nsupport its worldwide technical content demand and generation efforts.  The Senior Manager will report to the \nVice-President of Engineering, and will be responsible for developing work plans, establishing technical and \nother functional objectives, assigning tasks, and managing groups/teams. Maintains schedules and coordi</description-snippet>\n      <posting-timestamp>1303854887000</posting-timestamp>\n    </job>\n  </job-bookmark>\n</job-bookmarks>",
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "post" : {
        "description" : "Bookmarking a Job\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/jobBookmark-xml"
          },
          "x-examples" : {
            "application/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n  <job-bookmark>\r\n    <job>\r\n      <id>{job-id}</id>\r\n    </job>\r\n  </job-bookmark>",
            "application/json" : null
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "examples" : {
              "application/json" : null,
              "text/xml" : null
            }
          },
          "201" : {
            "description" : "Your request to POST or PUT a record was successful. A Location HTTP header is often returned when we respond with a 201.\n",
            "examples" : {
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/people/~/job-bookmarks/{jobId}" : {
      "delete" : {
        "description" : "Deleting a Job Bookmark\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "204" : {
            "description" : "Your request to DELETE a record was successful\n"
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "jobId",
        "in" : "path",
        "description" : "The unique identifier for a job.\n",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/people/~/mailbox" : {
      "post" : {
        "description" : "This call requires that you identify only the person being invited. The inviter will always come from the access token you use when you make the call. There are two methods of identifying the user being invited:\nMember ID + auth token: If the invitee was found using a search API call, then the search result will have included the member ID and auth token to make the API call. Use both of those to identify the member to invite.\nEmail: For all other cases, you can use email address to identify the member to invite.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/mailboxItem-xml"
          },
          "x-examples" : {
            "application/xml" : "<?xml version='1.0' encoding='UTF-8'?>\r\n<mailbox-item>\r\n  <recipients>\r\n    <recipient>\r\n      <person path='/people/~'/>\r\n    </recipient>\r\n    <recipient>\r\n      <person path=\"/people/abcdefg\" />\r\n    </recipient>\r\n  </recipients>\r\n  <subject>Congratulations on your new position.</subject>\r\n  <body>You're certainly the best person for the job!</body>\r\n</mailbox-item>",
            "application/json" : null
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded\n",
            "examples" : {
              "application/json" : null,
              "text/xml" : null
            }
          },
          "201" : {
            "description" : "Your request to POST or PUT a record was successful. A Location HTTP header is often returned when we respond with a 201.\n",
            "examples" : {
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/people/~/network/network-stats" : {
      "get" : {
        "description" : "Information about the member's network, such as how many connections they have one and two degrees away.",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded  \n",
            "schema" : {
              "$ref" : "#/definitions/networkStats-xml"
            },
            "examples" : {
              "application/xml" : "<network-stats total=\"2\">\r\n  <property key=\"degree-1-count\">123</property>\r\n  <property key=\"degree-2-count\">13633</property>\r\n</network-stats>",
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/people/~/network/updates" : {
      "get" : {
        "description" : "Retreive updates.",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "scope",
          "in" : "query",
          "description" : "self to return member's feed. Omitted to return aggregated network feed.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Any valid Network Update Type from the table below. Types must be in all capital letters. To specify more than one Network Update type, add the type parameter to the resource URL for each type.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "timestamp after which to retrieve updates for (Ex: 1243834824000) note: precision is milliseconds since the epoch",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "before",
          "in" : "query",
          "description" : "timestamp before which to retrieve updates for (Ex: 1243834824000) note: precision is milliseconds since the epoch",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "show-hidden-members",
          "in" : "query",
          "description" : "true or false. default is false. Whether to display updates from people the member has chosen to \"hide\" from their update stream.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Maximum",
          "required" : false,
          "type" : "integer",
          "default" : 10
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "The offset by which to start Network Update pagination",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/update-xml"
            },
            "examples" : {
              "application/xml" : "<update>\r\n   <timestamp>1315338683355</timestamp>\r\n   <update-type>CMPY</update-type>\r\n   <update-content>\r\n      <company>\r\n         <id>1337</id>\r\n         <name>LinkedIn</name>\r\n      </company>\r\n      <company-person-update>\r\n          <person>\r\n              <id>14381178</id>\r\n                  <first-name>Patrick</first-name>\r\n                  <last-name>Smith</last-name>\r\n                  <headline>Enterprise Relationship Manager at LinkedIn</headline>\r\n                  <picture-url>http://media.linkedin.com/mpr/mprx/0_gPLYkP6SpokSOnUc0-vDkA9DYulmpzUc0tA3krFxTW5YiluBAvztoKPlKGAlx-sRyKF8wBMg5HkD</picture-url>\r\n                  <api-standard-profile-request>\r\n                      <url>http://api.linkedin.com/v1/people/14381178</url>\r\n                      <headers total=\"1\">\r\n                           <http-header>\r\n                              <name>x-li-auth-token</name>\r\n                              <value>name:4gRT</value>\r\n                           </http-header>\r\n                      </headers>\r\n                  </api-standard-profile-request>\r\n                  <site-standard-profile-request>\r\n                        <url>http://www.linkedin.com/profile?viewProfile=&amp;key=14381178&amp;authToken=4gRT&amp;authType=name&amp;trk=api*</url>\r\n                  </site-standard-profile-request>\r\n             </person>\r\n             <action>\r\n                <code>joined</code>\r\n             </action>\r\n             <old-position>\r\n                  <title>Actor</title>\r\n                  <company>\r\n                       <name>IndependentContractor</name>\r\n                  </company>\r\n             </old-position>\r\n             <new-position>\r\n                  <title>Enterprise Relationship Manager</title>\r\n                  <company>\r\n                       <id>1337</id>\r\n                       <name>LinkedIn</name>\r\n                  </company>\r\n             </new-position>\r\n         </company-person-update>\r\n     </update-content>\r\n</update>",
              "application/json" : null
            }
          }
        },
        "security" : [ ]
      }
    },
    "/people/~/network/updates/key={NetworkUpdateKey}/is-liked" : {
      "put" : {
        "description" : "A successful comment PUT will return a 201 Content Created status code.",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/is-liked-xml"
          },
          "x-examples" : {
            "application/xml" : "<?xml version='1.0' encoding='UTF-8'?>\r\n<is-liked>true</is-liked>"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded\n",
            "examples" : {
              "application/json" : null,
              "text/xml" : null
            }
          },
          "201" : {
            "description" : "Your request to POST or PUT a record was successful. A Location HTTP header is often returned when we respond with a 201.   \n",
            "examples" : {
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "NetworkUpdateKey",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/people/~/network/updates/key={NetworkUpdateKey}/likes" : {
      "get" : {
        "description" : "Use a similar syntax to retrive the complete list of people who liked an update",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded  \n",
            "schema" : {
              "$ref" : "#/definitions/updates-xml"
            },
            "examples" : {
              "application/xml" : "<network>\r\n  <updates total=\"1\">\r\n    <update>\r\n      <timestamp>1257187431000</timestamp>\r\n      <update-key>STAT-54321-11</update-key>\r\n      <update-type>STAT</update-type>\r\n      <update-content>\r\n        <person>\r\n          <id>abcdefg</id>\r\n          <first-name>Richard</first-name>\r\n          <last-name>Brautigan</last-name>\r\n          <headline>Author</headline>\r\n          <current-status>is thinking about rivers.</current-status>\r\n          <api-standard-profile-request>\r\n            <url>http://api.linkedin.com/v1/people/abcdefg:full</url>\r\n            <headers total=\"1\">\r\n              <http-header>\r\n                <name>x-li-auth-token</name>\r\n                <value>name:abcdefg</value>\r\n              </http-header>\r\n            </headers>\r\n          </api-standard-profile-request>\r\n          <site-standard-profile-request>\r\n            <url>http://www.linkedin.com/profile?viewProfile=&amp;key=abcdefg&amp;authToken=abcdefg&amp;authType=name</url>\r\n          </site-standard-profile-request>\r\n        </person>\r\n      </update-content>\r\n      <is-commentable>true</is-commentable>\r\n      <update-comments total=\"1\">\r\n        <update-comment>\r\n          <id>22995112</id>\r\n          <sequence-number>0</sequence-number>\r\n          <timestamp>1284737901266</timestamp>\r\n          <comment>You've got me thinking about trout.</comment>\r\n          <person>\r\n            <id>zyxwvut</id>\r\n            <first-name>Gertrude</first-name>\r\n            <last-name>Stein</last-name>\r\n            <headline>Author</headline>\r\n            <api-standard-profile-request>\r\n              <url>http://api.linkedin.com/v1/people/dsfsf:full</url>\r\n              <headers total=\"1\">\r\n                <http-header>\r\n                  <name>x-li-auth-token</name>\r\n                  <value>name:dsfsf</value>\r\n                </http-header>\r\n              </headers>\r\n            </api-standard-profile-request>\r\n            <site-standard-profile-request>\r\n              <url>http://www.linkedin.com/profile?viewProfile=&amp;key=dsfsf&amp;authToken=dsfsf&amp;authType=name</url>\r\n            </site-standard-profile-request>\r\n          </person>\r\n        </update-comment>\r\n      </update-comments>\r\n      <is-likable>true</is-likable>\r\n      <is-liked>true</is-liked>\r\n      <num-likes>1</num-likes>\r\n      <likes total=\"1\">\r\n        <like>\r\n          <person>\r\n            <id>POfcN6JhcU</id>\r\n            <first-name>George</first-name>\r\n            <last-name>Washington</last-name>\r\n            <headline>President, United States of America</headline>\r\n          </person>\r\n        </like>\r\n      </likes> \r\n    </update>\r\n  </updates>\r\n</network>",
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "NetworkUpdateKey",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/people/~/network/updates/key={NetworkUpdateKey}/update-comments" : {
      "get" : {
        "description" : "By default, a network update containing more than 10 comments will only return you the most recent five. To retrieve all comments for a given network update",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded  \n",
            "examples" : {
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "post" : {
        "description" : "When you want to post a new comment to an existing update:\nEnsure update/is-commentable is set to true\nTake the update/update-key from an existing update and POST to the following URL structure:\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/update-comment-xml"
          },
          "x-examples" : {
            "application/xml" : "<?xml version='1.0' encoding='UTF-8'?>\r\n<update-comment>\r\n  <comment>Save me a trout, Richard!</comment>\r\n</update-comment>"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded\n",
            "examples" : {
              "application/json" : null,
              "text/xml" : null
            }
          },
          "201" : {
            "description" : "Your request to POST or PUT a record was successful. A Location HTTP header is often returned when we respond with a 201.\n",
            "examples" : {
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "NetworkUpdateKey",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/people/~/person-activities" : {
      "post" : {
        "description" : "The Post Network Update API allows you to send in an activity from your site to be posted to the first degree connections of the LinkedIn user. Network updates are the LinkedIn term for news feed activities and appear on the center column of the home page. Use it when a user on your site performs some activity on your site that they want to broadcast to their connections. For example, you might send a message \"Peter Smith booked a trip to London, England on October 30.\"",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/activity-xml"
          },
          "x-examples" : {
            "application/xml" : "<activity locale=\"en_US\">\r\n    <content-type>linkedin-html</content-type>\r\n    <body>&amp;lt;a href=&amp;quot;http://www.linkedin.com/profile?viewProfile=&amp;amp;key=3639896&amp;amp;authToken=JdAa&amp;amp;authType=name&amp;amp;trk=api*a119686*s128146*&amp;quot;&amp;gt;Kirsten Jones&amp;lt;/a&amp;gt; is reading about &amp;lt;a href=&amp;quot;http://www.tigers.com&amp;quot;&amp;gt;Tigers&amp;lt;/a&amp;gt;http://www.tigers.com&amp;gt;Tigers&amp;lt;/a&amp;gt;..</body>\r\n</activity>",
            "application/json" : null
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded\n",
            "examples" : {
              "application/json" : null,
              "text/xml" : null
            }
          },
          "201" : {
            "description" : "Your request to POST or PUT a record was successful. A Location HTTP header is often returned when we respond with a 201.\n",
            "examples" : {
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/people/~/shares" : {
      "post" : {
        "description" : "Post a share",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/personShare-xml"
          },
          "x-examples" : {
            "application/xml" : "<share>\r\n  <comment>Check out the LinkedIn Share API!</comment>\r\n  <content>\r\n    <title>LinkedIn Developers Documentation On Using the Share API</title>\r\n    <description>Leverage the Share API to maximize engagement on user-generated content on LinkedIn</description>\r\n    <submitted-url>https://developer.linkedin.com/documents/share-api</submitted-url>\r\n    <submitted-image-url>http://m3.licdn.com/media/p/3/000/124/1a6/089a29a.png</submitted-image-url> \r\n  </content>\r\n  <visibility> \r\n    <code>anyone</code> \r\n  </visibility>\r\n</share>",
            "application/json" : null
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded\n",
            "examples" : {
              "application/json" : null,
              "text/xml" : null
            }
          },
          "201" : {
            "description" : "Your request to POST or PUT a record was successful. A Location HTTP header is often returned when we respond with a 201.\n",
            "examples" : {
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/people/~/suggestions/groups{fieldSelectors}" : {
      "get" : {
        "description" : "Get Suggested Groups for a User\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded  \n",
            "examples" : {
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "fieldSelectors",
        "in" : "path",
        "description" : "Many of our resources allow you to specify what fields you want returned. We call this syntax field selectors.\nBy indicating exactly the information you need, we can optimize the amount of time needed to return your results.\nIt also reduces the amount of data passing across the wire. The two combine to make our APIs speedy and efficient,\na critical factor in any web application, and more so for anyone relying on external APIs.\n\nField selectors are specified after the resource identifiers and path components of a resource, prefixed by a colon,\ncontained within parenthesis, and separated by commas. Fields will be returned in the order specified. When URL-encoding\nyour resource URLs, ensure that the parenthesis used in selectors remain unescaped.\n\nExamples\n--------\nTo get a member's ID, first name, last name, and industry:\n  `http://api.linkedin.com/v1/people/~:(id,first-name,last-name,industry)`\n\nOr the same set of information for their connections:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,industry)`\n\nFields selectors can also be nested to access individual fields from a larger collection. For example, to get just the\njob titles and not the rest of the information about positions:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,positions:(title))`\n\nField selectors with resource identifiers allow you to request information about multiple entities at once. Specify them\nsimilarly, but append a double colon - here's an example getting profile information about thee members: the first is the\ncurrent member, indicated by a tilde; the next has an id of 12345; and the last has a public profile URL\n\n  `http://api.linkedin.com/v1/people::(~, id=12345,url=http%3A%2F%2Fwww.linkedin.com%2Fin%2Fadamnash)`\n",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/people/~/suggestions/groups{fieldSelectors}/{groupId}" : {
      "delete" : {
        "description" : "Remove a Group Suggestion for a Use\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "204" : {
            "description" : "Your request to DELETE a record was successful\n"
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "groupId",
        "in" : "path",
        "description" : "The unique identifier for a LinkedIn group\n",
        "required" : true,
        "type" : "integer"
      }, {
        "name" : "fieldSelectors",
        "in" : "path",
        "description" : "Many of our resources allow you to specify what fields you want returned. We call this syntax field selectors.\nBy indicating exactly the information you need, we can optimize the amount of time needed to return your results.\nIt also reduces the amount of data passing across the wire. The two combine to make our APIs speedy and efficient,\na critical factor in any web application, and more so for anyone relying on external APIs.\n\nField selectors are specified after the resource identifiers and path components of a resource, prefixed by a colon,\ncontained within parenthesis, and separated by commas. Fields will be returned in the order specified. When URL-encoding\nyour resource URLs, ensure that the parenthesis used in selectors remain unescaped.\n\nExamples\n--------\nTo get a member's ID, first name, last name, and industry:\n  `http://api.linkedin.com/v1/people/~:(id,first-name,last-name,industry)`\n\nOr the same set of information for their connections:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,industry)`\n\nFields selectors can also be nested to access individual fields from a larger collection. For example, to get just the\njob titles and not the rest of the information about positions:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,positions:(title))`\n\nField selectors with resource identifiers allow you to request information about multiple entities at once. Specify them\nsimilarly, but append a double colon - here's an example getting profile information about thee members: the first is the\ncurrent member, indicated by a tilde; the next has an id of 12345; and the last has a public profile URL\n\n  `http://api.linkedin.com/v1/people::(~, id=12345,url=http%3A%2F%2Fwww.linkedin.com%2Fin%2Fadamnash)`\n",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/people/~/suggestions/job-suggestions{fieldSelectors}" : {
      "get" : {
        "description" : "Retrieving a List of a Member's Suggested Jobs\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded  \n",
            "schema" : {
              "$ref" : "#/definitions/jobSuggestions-xml"
            },
            "examples" : {
              "application/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<job-suggestions>\n  <jobs total=\"50\" count=\"10\" start=\"0\">\n    <job>\n      <id>1577323</id>\n      <company>\n        <id>1281</id>\n        <name>Unisys</name>\n      </company>\n      <job-poster>\n        <id>OHYinXGMKT</id>\n        <first-name>Joanne</first-name>\n        <last-name>Rawls</last-name>\n        <headline>Recruiting Lead at Unisys Corporation</headline>\n      </job-poster>\n      <description-snippet>Unisys is expanding our Federal Proposal Development Center and looking for talented professionals to join our team. As a Senior Technical Writer, you will be responsible for: Analyzing Request for Proposals (RFP) and work with Solution Architects to package company services into a technical proposal response; write technical proposals that spell out what the company can offer to the agency seek</description-snippet>\n      <location-description>Reston, VA  </location-description>\n    </job>\n    <job>\n      <id>1579926</id>\n      <company>\n        <id>15759</id>\n        <name>Velti</name>\n      </company>\n      <salary>Negotiable</salary>\n      <job-poster>\n        <id>UlfGF2nmYN</id>\n        <first-name>Maria</first-name>\n        <last-name>Maragoudakis-Gregoriou</last-name>\n        <headline>Experienced Business Manager with extensive international and start-up experience</headline>\n      </job-poster>\n      <description-snippet>Senior Technical Writer (Job Code: SF-SRTCR) Velti is a leading global provider of mobile marketing and advertising software solutions that enable brands, advertising agencies, mobile operators, and media companies to implement highly targeted, interactive, and measurable campaigns by communicating with and engaging consumers via their mobile devices. Job DescriptionThe Senior Technical Writer pos</description-snippet>\n      <location-description>San Francisco</location-description>\n    </job>\n    <job>\n      <id>1609091</id>\n      <company>\n      </company>\n      <salary>Annual Salary, Bonus</salary>\n      <job-poster>\n        <id>VLhDZNHMmG</id>\n        <first-name>Ties</first-name>\n        <last-name>van de Voort</last-name>\n        <headline>International Corporate Recruiter at SDL Tridion</headline>\n      </job-poster>\n      <description-snippet>The Senior Technical Support Engineer works in a team of support engineers and reports to the Manager Customer Support. The Senior Technical Support Engineer is guarding and meeting service levels as agreed with customers, partners and the internal organization. The Senior Technical Support Engineer independently provides complex technical support to customers and partners, provides onsite support</description-snippet>\n      <location-description>New York</location-description>\n    </job>\n </jobs>\n</job-suggestions>",
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "fieldSelectors",
        "in" : "path",
        "description" : "Many of our resources allow you to specify what fields you want returned. We call this syntax field selectors.\nBy indicating exactly the information you need, we can optimize the amount of time needed to return your results.\nIt also reduces the amount of data passing across the wire. The two combine to make our APIs speedy and efficient,\na critical factor in any web application, and more so for anyone relying on external APIs.\n\nField selectors are specified after the resource identifiers and path components of a resource, prefixed by a colon,\ncontained within parenthesis, and separated by commas. Fields will be returned in the order specified. When URL-encoding\nyour resource URLs, ensure that the parenthesis used in selectors remain unescaped.\n\nExamples\n--------\nTo get a member's ID, first name, last name, and industry:\n  `http://api.linkedin.com/v1/people/~:(id,first-name,last-name,industry)`\n\nOr the same set of information for their connections:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,industry)`\n\nFields selectors can also be nested to access individual fields from a larger collection. For example, to get just the\njob titles and not the rest of the information about positions:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,positions:(title))`\n\nField selectors with resource identifiers allow you to request information about multiple entities at once. Specify them\nsimilarly, but append a double colon - here's an example getting profile information about thee members: the first is the\ncurrent member, indicated by a tilde; the next has an id of 12345; and the last has a public profile URL\n\n  `http://api.linkedin.com/v1/people::(~, id=12345,url=http%3A%2F%2Fwww.linkedin.com%2Fin%2Fadamnash)`\n",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/people/~/suggestions/to-follow/companies" : {
      "get" : {
        "description" : "You can retrieve a collection of suggested companies for the current user.",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded  \n",
            "schema" : {
              "$ref" : "#/definitions/companies-xml"
            },
            "examples" : {
              "application/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<companies count=\"10\" start=\"0\">\r\n  <company>\r\n    <id>49648</id>\r\n    <name>Merix Financial</name>\r\n  </company>\r\n  <company>\r\n    <id>118370</id>\r\n    <name>Movaya Wireless</name>\r\n  </company>\r\n  <company>\r\n    <id>119265</id>\r\n    <name>Maison Martin Margiela</name>\r\n  </company>\r\n  <company>\r\n    <id>112571</id>\r\n    <name>CoActive</name>\r\n  </company>\r\n  <company>\r\n    <id>97548</id>\r\n    <name>Actronic</name>\r\n  </company>\r\n  <company>\r\n    <id>1115987</id>\r\n    <name>EELA</name>\r\n  </company>\r\n  <company>\r\n    <id>2204291</id>\r\n    <name>OfftheHookHats.org</name>\r\n  </company>\r\n  <company>\r\n    <id>1973202</id>\r\n    <name>Ministry of Communication and Information Technology</name>\r\n  </company>\r\n  <company>\r\n    <id>2102550</id>\r\n    <name>Lundsbergs skola</name>\r\n  </company>\r\n  <company>\r\n    <id>1086137</id>\r\n    <name>Netsolve Limited</name>\r\n  </company>\r\n</companies>",
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/people/~{fieldSelectors}" : {
      "get" : {
        "description" : "Returns profile of the current user\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "secure-urls",
          "in" : "query",
          "description" : "secure-urls query parameter indicates that you want the URLs in your response to be HTTPS\n",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/currentUser-xml"
            },
            "examples" : {
              "application/xml" : null,
              "application/json" : null
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "fieldSelectors",
        "in" : "path",
        "description" : "Many of our resources allow you to specify what fields you want returned. We call this syntax field selectors.\nBy indicating exactly the information you need, we can optimize the amount of time needed to return your results.\nIt also reduces the amount of data passing across the wire. The two combine to make our APIs speedy and efficient,\na critical factor in any web application, and more so for anyone relying on external APIs.\n\nField selectors are specified after the resource identifiers and path components of a resource, prefixed by a colon,\ncontained within parenthesis, and separated by commas. Fields will be returned in the order specified. When URL-encoding\nyour resource URLs, ensure that the parenthesis used in selectors remain unescaped.\n\nExamples\n--------\nTo get a member's ID, first name, last name, and industry:\n  `http://api.linkedin.com/v1/people/~:(id,first-name,last-name,industry)`\n\nOr the same set of information for their connections:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,industry)`\n\nFields selectors can also be nested to access individual fields from a larger collection. For example, to get just the\njob titles and not the rest of the information about positions:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,positions:(title))`\n\nField selectors with resource identifiers allow you to request information about multiple entities at once. Specify them\nsimilarly, but append a double colon - here's an example getting profile information about thee members: the first is the\ncurrent member, indicated by a tilde; the next has an id of 12345; and the last has a public profile URL\n\n  `http://api.linkedin.com/v1/people::(~, id=12345,url=http%3A%2F%2Fwww.linkedin.com%2Fin%2Fadamnash)`\n",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/posts/{postId}/comments" : {
      "get" : {
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded  \n",
            "schema" : {
              "$ref" : "#/definitions/comments-xml"
            },
            "examples" : {
              "application/xml" : null,
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "post" : {
        "description" : "Add a Comment to a Post",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "x-li-format",
          "in" : "header",
          "description" : "Type of data\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/comment-xml"
          },
          "x-examples" : {
            "application/xml" : "<comment>\r\n<text>Comment text</text>\r\n</comment>",
            "application/json" : null
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Request succeeded\n",
            "examples" : {
              "application/json" : null,
              "text/xml" : null
            }
          },
          "201" : {
            "description" : "Your request to POST or PUT a record was successful. A Location HTTP header is often returned when we respond with a 201.\n",
            "examples" : {
              "application/json" : null,
              "text/xml" : null
            }
          },
          "400" : {
            "description" : "Your request was not formatted correctly\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "401" : {
            "description" : "The OAuth signature was bad\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "500" : {
            "description" : "There was an application error on the LinkedIn server.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "403" : {
            "description" : "Access to the resource was denied. Usually this means you have reached a throttle limit. Can also mean you do not have permission to access this resource.\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "404" : {
            "description" : "The resource was not found (i.e. you asked for a non-existent user or URL)\n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          },
          "405" : {
            "description" : "Usually this means you used the wrong HTTP method (GET when you should POST, etc) \n",
            "schema" : {
              "$ref" : "#/definitions/error-xml"
            },
            "examples" : {
              "application/json" : "{\n  \"errorCode\": 0,\n  \"message\": \"Invalid access token.\",\n  \"requestId\": \"Y703T8HXBF\",\n  \"status\": 401,\n  \"timestamp\": 1378122137646\n}",
              "text/xml" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<error>\n  <status>401</status>\n  <timestamp>1378122242574</timestamp>\n  <request-id>8PQJRYO7JK</request-id>\n  <error-code>0</error-code>\n  <message>Invalid access token.</message>\n</error>"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "postId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/posts/{postId}{fieldSelectors}" : {
      "get" : {
        "description" : "Returns Discussion Post\n",
        "schemes" : [ "http" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/post-xml"
            },
            "examples" : {
              "application/xml" : null,
              "application/json" : null
            }
          }
        },
        "security" : [ ]
      },
      "delete" : {
        "description" : "Deletes a Post\n",
        "schemes" : [ "http" ],
        "parameters" : [ ],
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "postId",
        "in" : "path",
        "description" : "The unique identifier for a post\n",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "fieldSelectors",
        "in" : "path",
        "description" : "Many of our resources allow you to specify what fields you want returned. We call this syntax field selectors.\nBy indicating exactly the information you need, we can optimize the amount of time needed to return your results.\nIt also reduces the amount of data passing across the wire. The two combine to make our APIs speedy and efficient,\na critical factor in any web application, and more so for anyone relying on external APIs.\n\nField selectors are specified after the resource identifiers and path components of a resource, prefixed by a colon,\ncontained within parenthesis, and separated by commas. Fields will be returned in the order specified. When URL-encoding\nyour resource URLs, ensure that the parenthesis used in selectors remain unescaped.\n\nExamples\n--------\nTo get a member's ID, first name, last name, and industry:\n  `http://api.linkedin.com/v1/people/~:(id,first-name,last-name,industry)`\n\nOr the same set of information for their connections:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,industry)`\n\nFields selectors can also be nested to access individual fields from a larger collection. For example, to get just the\njob titles and not the rest of the information about positions:\n  `http://api.linkedin.com/v1/people/~/connections:(id,first-name,last-name,positions:(title))`\n\nField selectors with resource identifiers allow you to request information about multiple entities at once. Specify them\nsimilarly, but append a double colon - here's an example getting profile information about thee members: the first is the\ncurrent member, indicated by a tilde; the next has an id of 12345; and the last has a public profile URL\n\n  `http://api.linkedin.com/v1/people::(~, id=12345,url=http%3A%2F%2Fwww.linkedin.com%2Fin%2Fadamnash)`\n",
        "required" : false,
        "type" : "string"
      } ]
    }
  },
  "securityDefinitions" : {
    "apiKey" : {
      "type" : "apiKey",
      "name" : "x-Gateway-APIKey",
      "in" : "header"
    }
  },
  "definitions" : {
    "error-xml" : {
      "type" : "object"
    },
    "group-xml" : {
      "type" : "object"
    },
    "jobUpdate-xml" : {
      "type" : "object"
    },
    "posts-xml" : {
      "type" : "object"
    },
    "companyShare-xml" : {
      "type" : "object"
    },
    "groupMembership-xml" : {
      "type" : "object"
    },
    "connections-xml" : {
      "type" : "object"
    },
    "groupPosts-xml" : {
      "type" : "object"
    },
    "companySearch-xml" : {
      "type" : "object"
    },
    "peopleSearch-xml" : {
      "type" : "object"
    },
    "people-gm-group-xml" : {
      "type" : "object"
    },
    "jobGet-xml" : {
      "type" : "object"
    },
    "comments-xml" : {
      "type" : "object"
    },
    "update-xml" : {
      "type" : "object"
    },
    "products-xml" : {
      "type" : "object"
    },
    "networkStats-xml" : {
      "type" : "object"
    },
    "jobSuggestions-xml" : {
      "type" : "object"
    },
    "activity-xml" : {
      "type" : "object"
    },
    "followedCompanies-xml" : {
      "type" : "object"
    },
    "jobBookmarks-xml" : {
      "type" : "object"
    },
    "companyStatistics-xml" : {
      "type" : "object"
    },
    "updates-xml" : {
      "type" : "object"
    },
    "mailboxItem-xml" : {
      "type" : "object"
    },
    "comment-xml" : {
      "type" : "object"
    },
    "personShare-xml" : {
      "type" : "object"
    },
    "post-xml" : {
      "type" : "object"
    },
    "company-xml" : {
      "type" : "object"
    },
    "jobBookmark-xml" : {
      "type" : "object"
    },
    "error-schema" : {
      "type" : "object"
    },
    "folowing-company-xml" : {
      "type" : "object"
    },
    "companyShare" : {
      "type" : "object"
    },
    "groupPost-xml" : {
      "type" : "object"
    },
    "people" : {
      "type" : "object"
    },
    "companies-xml" : {
      "type" : "object"
    },
    "company-about-xml" : {
      "type" : "object"
    },
    "currentUser" : {
      "type" : "object"
    },
    "update-comment-xml" : {
      "type" : "object"
    },
    "is-liked-xml" : {
      "type" : "object"
    },
    "currentUser-xml" : {
      "type" : "object"
    },
    "jobSearch-xml" : {
      "type" : "object"
    },
    "people-share-xml" : {
      "type" : "object"
    },
    "person-xml" : {
      "type" : "object"
    },
    "job-xml" : {
      "type" : "object"
    }
  },
  "externalDocs" : {
    "description" : "Headline",
    "url" : "LinkedIn is a business-oriented social networking service."
  },
  "securityRequirement" : [ {
    "apiKey" : [ ]
  