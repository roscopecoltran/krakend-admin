{
  "swagger" : "2.0",
  "info" : {
    "version" : "v1",
    "title" : "Stripe"
  },
  "host" : "api.stripe.com",
  "basePath" : "/v1",
  "schemes" : [ "https" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/account" : {
      "get" : {
        "description" : "Retrieves the details of the account, based on the API key that was used to\nmake the request.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"id\": \"BKFamDcAnurQgZDPT6vvOzGJboJhPCcF\",\n  \"email\": \"site@stripe.com\",\n  \"statement_descriptor\": null,\n  \"details_submitted\": false,\n  \"charge_enabled\": false,\n  \"transfer_enabled\": false,\n  \"currencies_supported\": [\n    \"USD\"\n  ],\n  \"default_currency\": \"USD\",\n  \"country\": \"US\",\n  \"object\": \"account\"\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/application_fees" : {
      "get" : {
        "description" : "Returns a list of application fees you've previously collected. The application fees are returned in sorted order, with the most recent fees appearing first.",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "charge",
          "in" : "query",
          "description" : "Only return application fees for the charge specified by this charge ID.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "created",
          "in" : "query",
          "description" : "A filter on the list based on the object created field. The value can be a string with an exact UTC timestamp, or it can be a dictionary with the following options",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned. Limit can range between 1 and 100 items.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int64"
        }, {
          "name" : "starting_after",
          "in" : "query",
          "description" : "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ending_before",
          "in" : "query",
          "description" : "A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"object\" : \"list\" ,\n  \"url\" : \"/v1/application_fees\" ,\n  \"count\" : 3 ,\n  \"data\" : [\n    {\n      \"id\" : \"fee_3MtYts51CjAXud\" ,\n      \"object\" : \"application_fee\" ,\n      \"created\" : 1390569172 ,\n      \"livemode\" : false ,\n      \"amount\" : 100 ,\n      \"currency\" : \"usd\" ,\n      \"refunded\" : false ,\n      \"amount_refunded\" : 0 ,\n      \"refunds\" : [\n      ] ,\n      \"balance_transaction\" : \"txn_103KRT2eZvKYlo2CKWGDLrJ9\" ,\n      \"account\" : \"acct_1032D82eZvKYlo2C\" ,\n      \"application\" : \"ca_3MtYFDWCIsYB8D8QDrfUT5vOyCo9WjdY\" ,\n      \"charge\" : \"ch_103MtR2eZvKYlo2CpKeID6hP\"\n    }\n  ]\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/application_fees/{FEE_ID}" : {
      "get" : {
        "description" : "Retrieves the details of an application fee that your account has collected. The same information is returned when refunding the application fee.",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "required" : false,
          "x-examples" : {
            "application/json" : "{\n  \"id\" : \"fee_3MtYts51CjAXud\" ,\n  \"object\" : \"application_fee\" ,\n  \"created\" : 1390569172 ,\n  \"livemode\" : false ,\n  \"amount\" : 100 ,\n  \"currency\" : \"usd\" ,\n  \"refunded\" : false ,\n  \"amount_refunded\" : 0 ,\n  \"refunds\" : [\n  ] ,\n  \"balance_transaction\" : \"txn_103KRT2eZvKYlo2CKWGDLrJ9\" ,\n  \"account\" : \"acct_1032D82eZvKYlo2C\" ,\n  \"application\" : \"ca_3MtYFDWCIsYB8D8QDrfUT5vOyCo9WjdY\" ,\n  \"charge\" : \"ch_103MtR2eZvKYlo2CpKeID6hP\"\n}"
          }
        } ],
        "responses" : {
          "200" : { },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "FEE_ID",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/application_fees/{FEE_ID}/refund" : {
      "post" : {
        "description" : "Refunds an application fee that has previously been collected but not yet refunded. Funds will be refunded to the Stripe account that the fee was originally collected from.\nYou can optionally refund only part of an application fee. You can do so as many times as you wish until the entire fee has been refunded.\nOnce entirely refunded, an application fee can't be refunded again. This method will return an error when called on an already-refunded application fee, or when trying to refund more money than is left on an application fee.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "amount",
          "in" : "formData",
          "description" : "A positive integer in cents representing how much of this fee to refund. Can only refund up to the unrefunded amount remaining of the fee.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"id\" : \"fee_3MtYts51CjAXud\" ,\n  \"object\" : \"application_fee\" ,\n  \"created\" : 1390569172 ,\n  \"livemode\" : false ,\n  \"amount\" : 100 ,\n  \"currency\" : \"usd\" ,\n  \"refunded\" : false ,\n  \"amount_refunded\" : 0 ,\n  \"refunds\" : [\n  ] ,\n  \"balance_transaction\" : \"txn_103KRT2eZvKYlo2CKWGDLrJ9\" ,\n  \"account\" : \"acct_1032D82eZvKYlo2C\" ,\n  \"application\" : \"ca_3MtYFDWCIsYB8D8QDrfUT5vOyCo9WjdY\" ,\n  \"charge\" : \"ch_103MtR2eZvKYlo2CpKeID6hP\"\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "FEE_ID",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/balance" : {
      "get" : {
        "description" : "Retrieves the current account balance, based on the API key that was used to\nmake the request.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"pending\": [\n    {\n      \"amount\": 0,\n      \"currency\": \"cad\"\n    },\n    {\n      \"amount\": 363361,\n      \"currency\": \"usd\"\n    }\n  ],\n  \"available\": [\n    {\n      \"amount\": -358,\n      \"currency\": \"cad\"\n    },\n    {\n      \"amount\": -124791940,\n      \"currency\": \"usd\"\n    }\n  ],\n  \"livemode\": false,\n  \"object\": \"balance\"\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/balance/history" : {
      "get" : {
        "description" : "Returns a list of transactions that have contributed to the Stripe accoun\nbalance (includes charges, refunds, transfers, and so on). The transactions\nare returned in sorted order, with the most recent transactions appearing\nfirst.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "available_on",
          "in" : "query",
          "description" : "A filter on the list based on the object available_on field. The value\ncan be a string with an exact UTC timestamp, or it can be a dictionary\nwith the following options:\n  **gt**: optional Return values where the available_on field is after this timestamp.\n  **gte**: optional Return values where the available_on field is after or equal to this timestamp.\n  **lt**: optional Return values where the available_on field is before this timestamp.\n  **lte**: optional Return values where the available_on field is before or equal to this timestamp.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "created",
          "in" : "query",
          "description" : "A filter on the list based on the object created field. The value can be\na string with an exact UTC timestamp, or it can be a dictionary with the\nfollowing options:\n  **gt**: optional Return values where the created field is after this timestamp.\n  **gte**: optional Return values where the created field is after or equal to this timestamp.\n  **lt**: optional Return values where the created field is before this timestamp.\n  **lte**: optional Return values where the created field is before or equal to this timestamp.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "currency",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "source",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transfer",
          "in" : "query",
          "description" : "For automatic Stripe transfers only, only returns transactions tha\nwere transferred out on the specified transfer ID.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Only returns transactions of the given type. One of: charge, refund,\nadjustment, application_fee, application_fee_refund, transfer, or transfer_failure.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned. Limit can range between 1 and 100 items.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int64"
        }, {
          "name" : "starting_after",
          "in" : "query",
          "description" : "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ending_before",
          "in" : "query",
          "description" : "A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"object\": \"list\",\n  \"url\": \"/v1/balance/history\",\n  \"count\": 1,\n  \"data\": [\n    {\n    \"id\": \"txn_2hrAStwRKjXiIp\",\n    \"object\": \"balance_transaction\",\n    \"source\": \"ch_2hrAFVP6jlr1jB\",\n    \"amount\": 100,\n    \"currency\": \"usd\",\n    \"net\": 41,\n    \"type\": \"charge\",\n    \"created\": 1381104058,\n    \"available_on\": 1381104000,\n    \"status\": \"available\",\n    \"fee\": 59,\n    \"fee_details\": [\n      {\n        \"amount\": 45,\n        \"currency\": \"usd\",\n        \"type\": \"stripe_fee\",\n        \"description\": \"Stripe processing fees\",\n        \"application\": null\n      }\n    ],\n    \"description\": null\n  }\n  ]\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/balance/history/{TRANSACTION_ID}" : {
      "get" : {
        "description" : "Retrieves the balance transaction with the given ID.",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "required" : false,
          "x-examples" : {
            "application/json" : "{\n  \"id\": \"txn_2hrAStwRKjXiIp\",\n  \"object\": \"balance_transaction\",\n  \"source\": \"ch_2hrAFVP6jlr1jB\",\n  \"amount\": 100,\n  \"currency\": \"usd\",\n  \"net\": 41,\n  \"type\": \"charge\",\n  \"created\": 1381104058,\n  \"available_on\": 1381104000,\n  \"status\": \"available\",\n  \"fee\": 59,\n  \"fee_details\": [\n    {\n      \"amount\": 45,\n      \"currency\": \"usd\",\n      \"type\": \"stripe_fee\",\n      \"description\": \"Stripe processing fees\",\n      \"application\": null\n    }\n  ],\n  \"description\": null\n}"
          }
        } ],
        "responses" : {
          "200" : { },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "TRANSACTION_ID",
        "in" : "path",
        "description" : "The ID of the desired balance transaction (as found on any API objec\nthat affects the balance, e.g. a charge or transfer).\n",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/charges" : {
      "get" : {
        "description" : "Returns a list of charges you've previously created. The charges are returned in sorted order, with the most recent charges appearing first.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "created",
          "in" : "query",
          "description" : "A filter on the list based on the object created field. The value can be a string with an exact UTC timestamp\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customer",
          "in" : "query",
          "description" : "Only return charges for the customer specified by this customer ID.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned. Limit can range between 1 and 100 items.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int64"
        }, {
          "name" : "starting_after",
          "in" : "query",
          "description" : "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ending_before",
          "in" : "query",
          "description" : "A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{ \n\"object\": \"list\", \n\"url\": \"/v1/charges\", \n\"count\": 2, \n\"data\": [ \n  { \n  \"id\": \"ch_2W2skeSVoEIgH8\", \n  \"object\": \"charge\", \n  \"created\": 1378379935, \n  \"livemode\": false, \n  \"paid\": true, \n  \"amount\": 400, \n  \"currency\": \"usd\", \n  \"refunded\": false, \n  \"card\": \n    {\n     \"id\": \"cc_1SvbSeGL19eaMi\", \n     \"object\": \"card\", \n     \"last4\": \"4242\", \n     \"type\": \"Visa\", \n     \"exp_month\": 8, \n     \"exp_year\": 2014, \n     \"fingerprint\": \"qhjxpr7DiCdFYTlH\", \n     \"customer\": null, \n     \"country\": \"US\", \n     \"name\": null, \n     \"address_line1\": null, \n     \"address_line2\": null, \n     \"address_city\": null, \n     \"address_state\": null, \n     \"address_zip\": null, \n     \"address_country\": null, \n     \"cvc_check\": null, \n     \"address_line1_check\": null, \n     \"address_zip_check\": null }, \n   \"captured\": true, \"refunds\": [ \n     { \n     \"amount\": 400, \n     \"currency\": \"usd\", \n     \"created\": 1378379955, \n     \"object\": \"refund\", \n     \"balance_transaction\": \"txn_2W2s5pXW1h3t3Q\" } ],\n   \"balance_transaction\": \"txn_2VrwM1WyxXifsV\", \n   \"failure_message\": null, \n   \"failure_code\": null, \n   \"amount_refunded\": 400, \n   \"customer\": null, \n   \"invoice\": null, \n   \"description\": \"Charge for test@example.com\", \n   \"dispute\": null }, \n  { \n  \"id\": \"ch_2W2skeusdf67IgH8\", \n  \"object\": \"charge\", \n  \"created\": 1378374535, \n  \"livemode\": false, \n  \"paid\": true, \n  \"amount\": 500, \n  \"currency\": \"usd\", \n  \"refunded\": false, \n  \"card\": \n    {\n     \"id\": \"cc_1SvbSeGL19eaMi\", \n     \"object\": \"card\", \n     \"last4\": \"4242\", \n     \"type\": \"Visa\", \n     \"exp_month\": 8, \n     \"exp_year\": 2014, \n     \"fingerprint\": \"qhjxpr7DiCdFYTlH\", \n     \"customer\": null, \n     \"country\": \"US\", \n     \"name\": null, \n     \"address_line1\": null, \n     \"address_line2\": null, \n     \"address_city\": null, \n     \"address_state\": null, \n     \"address_zip\": null, \n     \"address_country\": null, \n     \"cvc_check\": null, \n     \"address_line1_check\": null, \n     \"address_zip_check\": null }, \n   \"captured\": true, \"refunds\": [ \n     { \n     \"amount\": 500, \n     \"currency\": \"usd\", \n     \"created\": 1378379955, \n     \"object\": \"refund\", \n     \"balance_transaction\": \"txn_2W2s5pXsdfsd3t3Q\" } ],\n   \"balance_transaction\": \"txn_2W2s5pXsdfsd3t3Q\", \n   \"failure_message\": null, \n   \"failure_code\": null, \n   \"amount_refunded\": 500, \n   \"customer\": null, \n   \"invoice\": null, \n   \"description\": \"Charge 2 for test@example.com\", \n   \"dispute\": null }\n ] }"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "post" : {
        "description" : "Creating a new charge (charging a credit card).\nTo charge a credit card, you create a new charge object. If your API key is in test mode, the supplied card won'\nactually be charged, though everything else will occur as if in live mode. (Stripe assumes that the charge would have\ncompleted successfully).\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "amount",
          "in" : "formData",
          "description" : "A positive integer in cents representing how much to charge the card.\n",
          "required" : true,
          "type" : "integer",
          "minimum" : 50.0,
          "format" : "int64"
        }, {
          "name" : "currency",
          "in" : "formData",
          "description" : "3-letter ISO code for currency.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "customer",
          "in" : "formData",
          "description" : "The ID of an existing customer that will be charged in this request.\noptional, either card or customer is required\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "card",
          "in" : "formData",
          "description" : "A card to be charged. If you also pass a customer ID, the card must be the ID of a card belonging to the customer.\nOtherwise, if you do not pass a customer ID, the card you provide must either be a token, like the ones returned by\nStripe.js, or a dictionary containing a user's credit card details, with the options described below. Although no\nall information is required, the extra info helps prevent fraud.\noptional, either card or customer is required\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "capture",
          "in" : "formData",
          "description" : "Whether or not to immediately capture the charge. When false, the charge issues an authorization (or pre-authorization),\nand will need to be captured later. Uncaptured charges expire in 7 days.\n",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "statement_description",
          "in" : "formData",
          "description" : "An arbitrary string to be displayed alongside your company name on your customer's credit card statement.\nThis may be up to 15 characters. As an example, if your website is RunClub and you specify 5K Race Ticket,\nthe user will see RUNCLUB 5K RACE TICKET. The statement description may not include <>\"' characters.\nWhile most banks display this information consistently, some may display it incorrectly or not at all.            \n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "application_fee",
          "in" : "formData",
          "description" : "A fee in cents that will be applied to the charge and transferred to the application owner's Stripe account. The reques\nmust be made with an OAuth key in order to take an application fee.\n",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "description",
          "in" : "formData",
          "description" : "An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking. This will be unset if you POST an empty value.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "metadata",
          "in" : "formData",
          "description" : "A set of key/value pairs that you can attach to an item. It can be useful for storing additional information about the item in a structured format. You can unset individual keys if you POST an empty value for that key. You can clear all keys if you POST an empty value for metadata.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n \"id\": \"ch_2VzIHEg2arH51K\",\n  \"object\": \"charge\",\n  \"created\": 1378366611,\n  \"livemode\": false,\n  \"paid\": true,\n  \"amount\": 500,\n  \"currency\": \"usd\",\n  \"refunded\": false,\n  \"card\": { \n    \"id\": \"card_2VzIt541zNEwjf\", \n    \"object\": \"card\", \n    \"last4\": \"4242\", \n    \"type\": \"Visa\", \n    \"exp_month\": 1, \n    \"exp_year\": 2050, \n    \"fingerprint\": \"qhjxpr7DiCdFYTlH\", \n    \"customer\": null, \n    \"country\": \"US\", \n    \"name\": null, \n    \"address_line1\": null, \n    \"address_line2\": null, \n    \"address_city\": null, \n    \"address_state\": null, \n    \"address_zip\": null, \n    \"address_country\": null, \n    \"cvc_check\": \"pass\", \n    \"address_line1_check\": null, \n    \"address_zip_check\": null \n  }, \n  \"captured\": true, \n  \"refunds\": [ ], \n  \"balance_transaction\": \"txn_2VrwM1WyxXifsV\", \n  \"failure_message\": null, \n  \"failure_code\": null, \n  \"amount_refunded\": 0, \n  \"customer\": null, \n  \"invoice\": null, \n  \"description\": null, \n  \"dispute\": null \n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/charges/{CHARGE_ID}" : {
      "get" : {
        "description" : "Retrieves the details of a charge that has previously been created. Supply the unique charge ID that was returned\nfrom your previous request, and Stripe will return the corresponding charge information. The same information is\nreturned when creating or refunding the charge.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n \"id\": \"ch_2VzIHEg2arH51K\",\n  \"object\": \"charge\",\n  \"created\": 1378366611,\n  \"livemode\": false,\n  \"paid\": true,\n  \"amount\": 500,\n  \"currency\": \"usd\",\n  \"refunded\": false,\n  \"card\": { \n    \"id\": \"card_2VzIt541zNEwjf\", \n    \"object\": \"card\", \n    \"last4\": \"4242\", \n    \"type\": \"Visa\", \n    \"exp_month\": 1, \n    \"exp_year\": 2050, \n    \"fingerprint\": \"qhjxpr7DiCdFYTlH\", \n    \"customer\": null, \n    \"country\": \"US\", \n    \"name\": null, \n    \"address_line1\": null, \n    \"address_line2\": null, \n    \"address_city\": null, \n    \"address_state\": null, \n    \"address_zip\": null, \n    \"address_country\": null, \n    \"cvc_check\": \"pass\", \n    \"address_line1_check\": null, \n    \"address_zip_check\": null \n  }, \n  \"captured\": true, \n  \"refunds\": [ ], \n  \"balance_transaction\": \"txn_2VrwM1WyxXifsV\", \n  \"failure_message\": null, \n  \"failure_code\": null, \n  \"amount_refunded\": 0, \n  \"customer\": null, \n  \"invoice\": null, \n  \"description\": null, \n  \"dispute\": null \n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "post" : {
        "description" : "Updates the specified charge by setting the values of the parameters passed. Any parameters not provided will be left unchanged.",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "descripttion",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "description",
          "in" : "formData",
          "description" : "An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking. This will be unset if you POST an empty value.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "metadata",
          "in" : "formData",
          "description" : "A set of key/value pairs that you can attach to an item. It can be useful for storing additional information about the item in a structured format. You can unset individual keys if you POST an empty value for that key. You can clear all keys if you POST an empty value for metadata.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n \"id\": \"ch_2VzIHEg2arH51K\",\n  \"object\": \"charge\",\n  \"created\": 1378366611,\n  \"livemode\": false,\n  \"paid\": true,\n  \"amount\": 500,\n  \"currency\": \"usd\",\n  \"refunded\": false,\n  \"card\": { \n    \"id\": \"card_2VzIt541zNEwjf\", \n    \"object\": \"card\", \n    \"last4\": \"4242\", \n    \"type\": \"Visa\", \n    \"exp_month\": 1, \n    \"exp_year\": 2050, \n    \"fingerprint\": \"qhjxpr7DiCdFYTlH\", \n    \"customer\": null, \n    \"country\": \"US\", \n    \"name\": null, \n    \"address_line1\": null, \n    \"address_line2\": null, \n    \"address_city\": null, \n    \"address_state\": null, \n    \"address_zip\": null, \n    \"address_country\": null, \n    \"cvc_check\": \"pass\", \n    \"address_line1_check\": null, \n    \"address_zip_check\": null \n  }, \n  \"captured\": true, \n  \"refunds\": [ ], \n  \"balance_transaction\": \"txn_2VrwM1WyxXifsV\", \n  \"failure_message\": null, \n  \"failure_code\": null, \n  \"amount_refunded\": 0, \n  \"customer\": null, \n  \"invoice\": null, \n  \"description\": null, \n  \"dispute\": null \n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "CHARGE_ID",
        "in" : "path",
        "description" : "The identifier of the charge to be retrieved.",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/charges/{CHARGE_ID}/capture" : {
      "post" : {
        "description" : "Capture the payment of an existing, uncaptured, charge. This is the second half of the two-step payment flow, where first you created\na charge with the capture option set to false.\n\nUncaptured payments expire exactly seven days after they are created. If they are not captured by that point in time, they will be\nmarked as refunded and will no longer be capturable.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "amount",
          "in" : "formData",
          "description" : "The amount to capture, which must be less than or equal to the original amount. Any additional amount will be automatically refunded.\n",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "refund_application_fee",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n \"id\": \"ch_2VzIHEg2arH51K\",\n  \"object\": \"charge\",\n  \"created\": 1378366611,\n  \"livemode\": false,\n  \"paid\": true,\n  \"amount\": 500,\n  \"currency\": \"usd\",\n  \"refunded\": false,\n  \"card\": { \n    \"id\": \"card_2VzIt541zNEwjf\", \n    \"object\": \"card\", \n    \"last4\": \"4242\", \n    \"type\": \"Visa\", \n    \"exp_month\": 1, \n    \"exp_year\": 2050, \n    \"fingerprint\": \"qhjxpr7DiCdFYTlH\", \n    \"customer\": null, \n    \"country\": \"US\", \n    \"name\": null, \n    \"address_line1\": null, \n    \"address_line2\": null, \n    \"address_city\": null, \n    \"address_state\": null, \n    \"address_zip\": null, \n    \"address_country\": null, \n    \"cvc_check\": \"pass\", \n    \"address_line1_check\": null, \n    \"address_zip_check\": null \n  }, \n  \"captured\": true, \n  \"refunds\": [ ], \n  \"balance_transaction\": \"txn_2VrwM1WyxXifsV\", \n  \"failure_message\": null, \n  \"failure_code\": null, \n  \"amount_refunded\": 0, \n  \"customer\": null, \n  \"invoice\": null, \n  \"description\": null, \n  \"dispute\": null \n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "CHARGE_ID",
        "in" : "path",
        "description" : "The identifier of the charge to be retrieved.",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/charges/{CHARGE_ID}/dispute" : {
      "post" : {
        "description" : "Contacting your customer is always the best first step, but if that doesn'\nwork, you can submit (text-only) evidence in order to help us resolve the\ndispute in your favor. You can do this in your dashboard, but if you prefer,\nyou can use the API to submit evidence programmatically.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "evidence",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"charge\": \"ch_2i0bEetfZQnWS2\",\n  \"amount\": 1000,\n  \"created\": 1381139172,\n  \"status\": \"needs_response\",\n  \"livemode\": false,\n  \"currency\": \"usd\",\n  \"object\": \"dispute\",\n  \"reason\": \"general\",\n  \"balance_transaction\": \"txn_2hrAStwRKjXiIp\",\n  \"evidence_due_by\": 1382831999,\n  \"evidence\": null\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "CHARGE_ID",
        "in" : "path",
        "description" : "The identifier of the charge to be retrieved.",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/charges/{CHARGE_ID}/dispute/close" : {
      "post" : {
        "description" : "Closing the dispute for a charge indicates that you do not have any evidence\nto submit and are essentially 'dismissing' the dispute, acknowledging it as\nlost.\nThe status of the dispute will change from under_review to lost. Closing\na dispute is irreversible.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"charge\": \"ch_2i0bEetfZQnWS2\",\n  \"amount\": 1000,\n  \"created\": 1381139172,\n  \"status\": \"needs_response\",\n  \"livemode\": false,\n  \"currency\": \"usd\",\n  \"object\": \"dispute\",\n  \"reason\": \"general\",\n  \"balance_transaction\": \"txn_2hrAStwRKjXiIp\",\n  \"evidence_due_by\": 1382831999,\n  \"evidence\": null\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "CHARGE_ID",
        "in" : "path",
        "description" : "The identifier of the charge to be retrieved.",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/charges/{CHARGE_ID}/refund" : {
      "post" : {
        "description" : "Refunds a charge that has previously been created but not yet refunded. Funds will be refunded to the credit or\ndebit card that was originally charged. The fees you were originally charged are also refunded.\n\nYou can optionally refund only part of a charge. You can do so as many times as you wish until the entire charge has been refunded.\n\nOnce entirely refunded, a charge can't be refunded again. This method will return an error when called on an already-refunded charge,\nor when trying to refund more money than is left on a charge.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "amount",
          "in" : "formData",
          "description" : "A positive integer in cents representing how much of this charge to refund. Can only refund up to the unrefunded amount remaining of the charge.  Default is entire charge.",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n \"id\": \"ch_2VzIHEg2arH51K\",\n  \"object\": \"charge\",\n  \"created\": 1378366611,\n  \"livemode\": false,\n  \"paid\": true,\n  \"amount\": 500,\n  \"currency\": \"usd\",\n  \"refunded\": false,\n  \"card\": { \n    \"id\": \"card_2VzIt541zNEwjf\", \n    \"object\": \"card\", \n    \"last4\": \"4242\", \n    \"type\": \"Visa\", \n    \"exp_month\": 1, \n    \"exp_year\": 2050, \n    \"fingerprint\": \"qhjxpr7DiCdFYTlH\", \n    \"customer\": null, \n    \"country\": \"US\", \n    \"name\": null, \n    \"address_line1\": null, \n    \"address_line2\": null, \n    \"address_city\": null, \n    \"address_state\": null, \n    \"address_zip\": null, \n    \"address_country\": null, \n    \"cvc_check\": \"pass\", \n    \"address_line1_check\": null, \n    \"address_zip_check\": null \n  }, \n  \"captured\": true, \n  \"refunds\": [ ], \n  \"balance_transaction\": \"txn_2VrwM1WyxXifsV\", \n  \"failure_message\": null, \n  \"failure_code\": null, \n  \"amount_refunded\": 0, \n  \"customer\": null, \n  \"invoice\": null, \n  \"description\": null, \n  \"dispute\": null \n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "CHARGE_ID",
        "in" : "path",
        "description" : "The identifier of the charge to be retrieved.",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/coupons" : {
      "get" : {
        "description" : "Returns a list of your coupons.",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned. Limit can range between 1 and 100 items.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int64"
        }, {
          "name" : "starting_after",
          "in" : "query",
          "description" : "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ending_before",
          "in" : "query",
          "description" : "A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"object\": \"list\",\n  \"url\": \"/v1/coupons\",\n  \"count\": 1,\n  \"data\": [\n    {\n    \"id\": \"259FF\",\n    \"percent_off\": 25,\n    \"amount_off\": null,\n    \"currency\": \"usd\",\n    \"object\": \"coupon\",\n    \"livemode\": false,\n    \"duration\": \"repeating\",\n    \"redeem_by\": null,\n    \"max_redemptions\": null,\n    \"times_redeemed\": 0,\n    \"duration_in_months\": 3\n  }\n  ]\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "post" : {
        "description" : "You can create coupons easily via the coupon management page of the Stripe\ndashboard. Coupon creation is also accessible via the API if you need to\ncreate coupons on the fly.\nA coupon has either a percent_off or an amount_off and currency. If you se\nan amount_off, that amount will be subtracted from any invoice's subtotal.\nFor example, an invoice with a subtotal $10 will have a final total of -$10\nif a coupon with an amount_off of 2000 is applied to it.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "formData",
          "description" : "Unique string of your choice that will be used to identify this coupon\nwhen applying it a customer. This is often a specific code youll\ngive to your customer to use when signing up (e.g. FALL25OFF). If\nyou dont want to specify a particular code, you can leave the ID\nblank and well generate a random code for you.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "duration",
          "in" : "formData",
          "description" : "Specifies how long the discount will be in effect. Can be forever,\nonce, or repeating.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "amount_off",
          "in" : "formData",
          "description" : "A positive integer representing the amount to subtract from an invoice\ntotal (if percent_off is not passed).\n",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "currency",
          "in" : "formData",
          "description" : "Currency of the amount_off parameter (if percent_off is not passed)\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "duration_in_months",
          "in" : "formData",
          "description" : "Required only if duration is repeating If duration is repeating, a\npositive integer that specifies the number of months the discoun\nwill be in effect.\n",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "max_redemptions",
          "in" : "formData",
          "description" : "A positive integer specifying the number of times the coupon can be\nredeemed before its no longer valid. For example, you might have a\n50% off coupon that the first 20 readers of your blog can use.\n",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "percent_off",
          "in" : "formData",
          "description" : "A positive integer between 1 and 100 that represents the discoun\nthe coupon will apply (if amount_off is not passed).\n",
          "required" : false,
          "type" : "integer",
          "maximum" : 100.0,
          "minimum" : 1.0,
          "format" : "int64"
        }, {
          "name" : "redeem_by",
          "in" : "formData",
          "description" : "UTC timestamp specifying the last time at which the coupon can be\nredeemed. After the redeem_by date, the coupon can no longer be\napplied to new customers.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "metadata",
          "in" : "formData",
          "description" : "A set of key/value pairs that you can attach to a coupon object. It can be useful for storing additional information about the coupon in a structured format. This will be unset if you POST an empty value.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"id\": \"259FF\",\n  \"percent_off\": 25,\n  \"amount_off\": null,\n  \"currency\": \"usd\",\n  \"object\": \"coupon\",\n  \"livemode\": false,\n  \"duration\": \"repeating\",\n  \"redeem_by\": null,\n  \"max_redemptions\": null,\n  \"times_redeemed\": 0,\n  \"duration_in_months\": 3\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/coupons/{COUPON_ID}" : {
      "get" : {
        "description" : "Retrieves the coupon with the given ID.",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"id\": \"259FF\",\n  \"percent_off\": 25,\n  \"amount_off\": null,\n  \"currency\": \"usd\",\n  \"object\": \"coupon\",\n  \"livemode\": false,\n  \"duration\": \"repeating\",\n  \"redeem_by\": null,\n  \"max_redemptions\": null,\n  \"times_redeemed\": 0,\n  \"duration_in_months\": 3\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "delete" : {
        "description" : "You can delete coupons via the coupon management page of the Stripe dashboard.\nHowever, deleting a coupon does not affect any customers who have already\napplied the coupon; it means that new customers can't redeem the coupon. You\ncan also delete coupons via the API.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"id\" : \"cu_2W2fo9IOza32fP\" ,\n  \"deleted\" : true\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "COUPON_ID",
        "in" : "path",
        "description" : "The ID of the desired coupon.",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/customers" : {
      "get" : {
        "description" : "Returns a list of your customers. The customers are returned sorted by creation date, with the most recently created customers appearing first.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "created",
          "in" : "query",
          "description" : "A filter on the list based on the object created field. The value can be a string with an exact UTC timestamp\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned. Limit can range between 1 and 100 items.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int64"
        }, {
          "name" : "starting_after",
          "in" : "query",
          "description" : "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ending_before",
          "in" : "query",
          "description" : "A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n    \"object\": \"list\", \n    \"url\": \"v1/customers\", \n    \"count\": 2, \n    \"data\": [\n        {\n            \"object\": \"customer\", \n            \"created\": 1378379137, \n            \"id\": \"cus_2W2fj6IHUNOc2d\", \n            \"livemode\": false, \n            \"description\": null, \n            \"email\": \"victor@huge-success.net\", \n            \"delinquent\": false, \n            \"subscription\": {\n                \"id\": \"su_2W2fay9kQDcftp\", \n                \"plan\": {\n                    \"interval\": \"month\", \n                    \"name\": \"Basic\", \n                    \"amount\": 1000, \n                    \"currency\": \"usd\", \n                    \"id\": \"basic\", \n                    \"object\": \"plan\", \n                    \"livemode\": false, \n                    \"interval_count\": 1, \n                    \"trial_period_days\": null\n                }, \n                \"object\": \"subscription\", \n                \"start\": 1378379138, \n                \"status\": \"active\", \n                \"customer\": \"cus_2W2fj6IHUNOc2d\", \n                \"cancel_at_period_end\": false, \n                \"current_period_start\": 1378379138, \n                \"current_period_end\": 1380971138, \n                \"ended_at\": null, \n                \"trial_start\": null, \n                \"trial_end\": null, \n                \"canceled_at\": null, \n                \"quantity\": 1\n            }, \n            \"discount\": null, \n            \"account_balance\": 0, \n            \"cards\": {\n                \"object\": \"list\", \n                \"count\": 1, \n                \"url\": \"/v1/customers/cus_2W2fj6IHUNOc2d/cards\", \n                \"data\": [\n                    {\n                        \"id\": \"card_2W2fhiuUB8W9Bq\", \n                        \"object\": \"card\", \n                        \"last4\": \"4242\", \n                        \"type\": \"Visa\", \n                        \"exp_month\": 10, \n                        \"exp_year\": 2020, \n                        \"fingerprint\": \"qhjxpr7DiCdFYTlH\", \n                        \"customer\": \"cus_2W2fj6IHUNOc2d\", \n                        \"country\": \"US\", \n                        \"name\": null, \n                        \"address_line1\": null, \n                        \"address_line2\": null, \n                        \"address_city\": null, \n                        \"address_state\": null, \n                        \"address_zip\": null, \n                        \"address_country\": null, \n                        \"cvc_check\": null, \n                        \"address_line1_check\": null, \n                        \"address_zip_check\": null\n                    }\n                ]\n            }, \n            \"default_card\": \"card_2W2fhiuUB8W9Bq\"\n        }, \n        {\n            \"object\": \"customer\", \n            \"created\": 1378379137, \n            \"id\": \"cus_2W2fj6IHUNOc2d\", \n            \"livemode\": false, \n            \"description\": null, \n            \"email\": \"victor@huge-success.net\", \n            \"delinquent\": false, \n            \"subscription\": {\n                \"id\": \"su_2W2fay9kQDcftp\", \n                \"plan\": {\n                    \"interval\": \"month\", \n                    \"name\": \"Basic\", \n                    \"amount\": 1000, \n                    \"currency\": \"usd\", \n                    \"id\": \"basic\", \n                    \"object\": \"plan\", \n                    \"livemode\": false, \n                    \"interval_count\": 1, \n                    \"trial_period_days\": null\n                }, \n                \"object\": \"subscription\", \n                \"start\": 1378379138, \n                \"status\": \"active\", \n                \"customer\": \"cus_2W2fj6IHUNOc2d\", \n                \"cancel_at_period_end\": false, \n                \"current_period_start\": 1378379138, \n                \"current_period_end\": 1380971138, \n                \"ended_at\": null, \n                \"trial_start\": null, \n                \"trial_end\": null, \n                \"canceled_at\": null, \n                \"quantity\": 1\n            }, \n            \"discount\": null, \n            \"account_balance\": 0, \n            \"cards\": {\n                \"object\": \"list\", \n                \"count\": 1, \n                \"url\": \"/v1/customers/cus_2W2fj6IHUNOc2d/cards\", \n                \"data\": [\n                    {\n                        \"id\": \"card_2W2fhiuUB8W9Bq\", \n                        \"object\": \"card\", \n                        \"last4\": \"4242\", \n                        \"type\": \"Visa\", \n                        \"exp_month\": 10, \n                        \"exp_year\": 2020, \n                        \"fingerprint\": \"qhjxpr7DiCdFYTlH\", \n                        \"customer\": \"cus_2W2fj6IHUNOc2d\", \n                        \"country\": \"US\", \n                        \"name\": null, \n                        \"address_line1\": null, \n                        \"address_line2\": null, \n                        \"address_city\": null, \n                        \"address_state\": null, \n                        \"address_zip\": null, \n                        \"address_country\": null, \n                        \"cvc_check\": null, \n                        \"address_line1_check\": null, \n                        \"address_zip_check\": null\n                    }\n                ]\n            }, \n            \"default_card\": \"card_2W2fhiuUB8W9Bq\"\n        }\n    ]\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "post" : {
        "description" : "Creates a new customer object.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "account_balance",
          "in" : "formData",
          "description" : "An integer amount in cents that is the starting account balance for your customer. A negative amount represents a\ncredit that will be used before attempting any charges to the customers card; a positive amount will be added to\nthe next invoice.\n",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "card",
          "in" : "formData",
          "description" : "The card can either be a token, like the ones returned by our Stripe.js, or a dictionary containing a users credi\ncard details (with the options shown below). Passing card will create a new card, make it the new customer defaul\ncard, and delete the old customer default if one exists. If you want to add additional cards instead of replacing the\nexisting default, use the card creation API. Whenever you attach a card to a customer, Stripe will automatically\nvalidate the card.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "coupon",
          "in" : "formData",
          "description" : "If you provide a coupon code, the customer will have a discount applied on all recurring charges. Charges you create\nthrough the API will not have the discount.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "email",
          "in" : "formData",
          "description" : "Customer's email address. Its displayed alongside the customer in your dashboard and can be useful for searching and\ntracking. This will be unset if you POST an empty value.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "plan",
          "in" : "formData",
          "description" : "The identifier of the plan to subscribe the customer to. If provided, the returned customer object has a 'subscription'\nattribute describing the state of the customers subscription\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "quantity",
          "in" : "formData",
          "description" : "The quantity youd like to apply to the subscription youre creating. For example, if your plan is 10 cents/user/month,\nand your customer has 5 users, you could pass 5 as the quantity to have the customer charged 50 cents (5 x 10 cents) monthly.\nDefaults to 1 if not set.\n",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int64"
        }, {
          "name" : "trial_end",
          "in" : "formData",
          "description" : "UTC integer timestamp representing the end of the trial period the customer will get before being charged for the first time.\nIf set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value\nnow can be provided to end the customers trial immediately. Only applies when the plan parameter is also provided.\n",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "description",
          "in" : "formData",
          "description" : "An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking. This will be unset if you POST an empty value.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "metadata",
          "in" : "formData",
          "description" : "A set of key/value pairs that you can attach to an item. It can be useful for storing additional information about the item in a structured format. You can unset individual keys if you POST an empty value for that key. You can clear all keys if you POST an empty value for metadata.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n    \"object\": \"customer\", \n    \"created\": 1378379137, \n    \"id\": \"cus_2W2fj6IHUNOc2d\", \n    \"livemode\": false, \n    \"description\": null, \n    \"email\": \"victor@huge-success.net\", \n    \"delinquent\": false, \n    \"subscription\": {\n        \"id\": \"su_2W2fay9kQDcftp\", \n        \"plan\": {\n            \"interval\": \"month\", \n            \"name\": \"Basic\", \n            \"amount\": 1000, \n            \"currency\": \"usd\", \n            \"id\": \"basic\", \n            \"object\": \"plan\", \n            \"livemode\": false, \n            \"interval_count\": 1, \n            \"trial_period_days\": null\n        }, \n        \"object\": \"subscription\", \n        \"start\": 1378379138, \n        \"status\": \"active\", \n        \"customer\": \"cus_2W2fj6IHUNOc2d\", \n        \"cancel_at_period_end\": false, \n        \"current_period_start\": 1378379138, \n        \"current_period_end\": 1380971138, \n        \"ended_at\": null, \n        \"trial_start\": null, \n        \"trial_end\": null, \n        \"canceled_at\": null, \n        \"quantity\": 1\n    }, \n    \"discount\": null, \n    \"account_balance\": 0, \n    \"cards\": {\n        \"object\": \"list\", \n        \"count\": 1, \n        \"url\": \"/v1/customers/cus_2W2fj6IHUNOc2d/cards\", \n        \"data\": [\n            {\n                \"id\": \"card_2W2fhiuUB8W9Bq\", \n                \"object\": \"card\", \n                \"last4\": \"4242\", \n                \"type\": \"Visa\", \n                \"exp_month\": 10, \n                \"exp_year\": 2020, \n                \"fingerprint\": \"qhjxpr7DiCdFYTlH\", \n                \"customer\": \"cus_2W2fj6IHUNOc2d\", \n                \"country\": \"US\", \n                \"name\": null, \n                \"address_line1\": null, \n                \"address_line2\": null, \n                \"address_city\": null, \n                \"address_state\": null, \n                \"address_zip\": null, \n                \"address_country\": null, \n                \"cvc_check\": null, \n                \"address_line1_check\": null, \n                \"address_zip_check\": null\n            }\n        ]\n    }, \n    \"default_card\": \"card_2W2fhiuUB8W9Bq\"\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/customers/{CUSTOMER_ID}" : {
      "get" : {
        "description" : "Retrieves the details of an existing customer.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n    \"object\": \"customer\", \n    \"created\": 1378379137, \n    \"id\": \"cus_2W2fj6IHUNOc2d\", \n    \"livemode\": false, \n    \"description\": null, \n    \"email\": \"victor@huge-success.net\", \n    \"delinquent\": false, \n    \"subscription\": {\n        \"id\": \"su_2W2fay9kQDcftp\", \n        \"plan\": {\n            \"interval\": \"month\", \n            \"name\": \"Basic\", \n            \"amount\": 1000, \n            \"currency\": \"usd\", \n            \"id\": \"basic\", \n            \"object\": \"plan\", \n            \"livemode\": false, \n            \"interval_count\": 1, \n            \"trial_period_days\": null\n        }, \n        \"object\": \"subscription\", \n        \"start\": 1378379138, \n        \"status\": \"active\", \n        \"customer\": \"cus_2W2fj6IHUNOc2d\", \n        \"cancel_at_period_end\": false, \n        \"current_period_start\": 1378379138, \n        \"current_period_end\": 1380971138, \n        \"ended_at\": null, \n        \"trial_start\": null, \n        \"trial_end\": null, \n        \"canceled_at\": null, \n        \"quantity\": 1\n    }, \n    \"discount\": null, \n    \"account_balance\": 0, \n    \"cards\": {\n        \"object\": \"list\", \n        \"count\": 1, \n        \"url\": \"/v1/customers/cus_2W2fj6IHUNOc2d/cards\", \n        \"data\": [\n            {\n                \"id\": \"card_2W2fhiuUB8W9Bq\", \n                \"object\": \"card\", \n                \"last4\": \"4242\", \n                \"type\": \"Visa\", \n                \"exp_month\": 10, \n                \"exp_year\": 2020, \n                \"fingerprint\": \"qhjxpr7DiCdFYTlH\", \n                \"customer\": \"cus_2W2fj6IHUNOc2d\", \n                \"country\": \"US\", \n                \"name\": null, \n                \"address_line1\": null, \n                \"address_line2\": null, \n                \"address_city\": null, \n                \"address_state\": null, \n                \"address_zip\": null, \n                \"address_country\": null, \n                \"cvc_check\": null, \n                \"address_line1_check\": null, \n                \"address_zip_check\": null\n            }\n        ]\n    }, \n    \"default_card\": \"card_2W2fhiuUB8W9Bq\"\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "post" : {
        "description" : "Updates the specified customer by setting the values of the parameters passed. Any parameters not provided will\nbe left unchanged. For example, if you pass the card parameter, that becomes the customer's active card to be\nused for all charges in future. When you update a customer to a new valid card, the last unpaid invoice (if one exists)\nwill be retried automatically.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "account_balance",
          "in" : "formData",
          "description" : "An integer amount in cents that is the starting account balance for your customer. A negative amount represents a\ncredit that will be used before attempting any charges to the customer's card; a positive amount will be added to\nthe next invoice.\n",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "card",
          "in" : "formData",
          "description" : "The card can either be a token, like the ones returned by our Stripe.js, or a dictionary containing a user's credi\ncard details (with the options shown below). Passing card will create a new card, make it the new customer defaul\ncard, and delete the old customer default if one exists. If you want to add additional cards instead of replacing the\nexisting default, use the card creation API. Whenever you attach a card to a customer, Stripe will automatically\nvalidate the card.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "coupon",
          "in" : "formData",
          "description" : "If you provide a coupon code, the customer will have a discount applied on all recurring charges. Charges you create\nthrough the API will not have the discount.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "default_card",
          "in" : "formData",
          "description" : "ID of card to make the customer's new default for invoice payments\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "email",
          "in" : "formData",
          "description" : "Customer's email address. It's displayed alongside the customer in your dashboard and can be useful for searching and\ntracking. This will be unset if you POST an empty value.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "description",
          "in" : "formData",
          "description" : "An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking. This will be unset if you POST an empty value.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "metadata",
          "in" : "formData",
          "description" : "A set of key/value pairs that you can attach to an item. It can be useful for storing additional information about the item in a structured format. You can unset individual keys if you POST an empty value for that key. You can clear all keys if you POST an empty value for metadata.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n    \"object\": \"customer\", \n    \"created\": 1378379137, \n    \"id\": \"cus_2W2fj6IHUNOc2d\", \n    \"livemode\": false, \n    \"description\": null, \n    \"email\": \"victor@huge-success.net\", \n    \"delinquent\": false, \n    \"subscription\": {\n        \"id\": \"su_2W2fay9kQDcftp\", \n        \"plan\": {\n            \"interval\": \"month\", \n            \"name\": \"Basic\", \n            \"amount\": 1000, \n            \"currency\": \"usd\", \n            \"id\": \"basic\", \n            \"object\": \"plan\", \n            \"livemode\": false, \n            \"interval_count\": 1, \n            \"trial_period_days\": null\n        }, \n        \"object\": \"subscription\", \n        \"start\": 1378379138, \n        \"status\": \"active\", \n        \"customer\": \"cus_2W2fj6IHUNOc2d\", \n        \"cancel_at_period_end\": false, \n        \"current_period_start\": 1378379138, \n        \"current_period_end\": 1380971138, \n        \"ended_at\": null, \n        \"trial_start\": null, \n        \"trial_end\": null, \n        \"canceled_at\": null, \n        \"quantity\": 1\n    }, \n    \"discount\": null, \n    \"account_balance\": 0, \n    \"cards\": {\n        \"object\": \"list\", \n        \"count\": 1, \n        \"url\": \"/v1/customers/cus_2W2fj6IHUNOc2d/cards\", \n        \"data\": [\n            {\n                \"id\": \"card_2W2fhiuUB8W9Bq\", \n                \"object\": \"card\", \n                \"last4\": \"4242\", \n                \"type\": \"Visa\", \n                \"exp_month\": 10, \n                \"exp_year\": 2020, \n                \"fingerprint\": \"qhjxpr7DiCdFYTlH\", \n                \"customer\": \"cus_2W2fj6IHUNOc2d\", \n                \"country\": \"US\", \n                \"name\": null, \n                \"address_line1\": null, \n                \"address_line2\": null, \n                \"address_city\": null, \n                \"address_state\": null, \n                \"address_zip\": null, \n                \"address_country\": null, \n                \"cvc_check\": null, \n                \"address_line1_check\": null, \n                \"address_zip_check\": null\n            }\n        ]\n    }, \n    \"default_card\": \"card_2W2fhiuUB8W9Bq\"\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "delete" : {
        "description" : "Permanently deletes a customer. It cannot be undone.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"id\" : \"cu_2W2fo9IOza32fP\" ,\n  \"deleted\" : true\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "CUSTOMER_ID",
        "in" : "path",
        "description" : "The identifier of the customer to be retrieved.",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/customers/{CUSTOMER_ID}/cards" : {
      "get" : {
        "description" : "You can see a list of the customer's cards. Note that the 10 most recent cards are always available by default on the customer object.\nIf you need more than 10, you can use the listing API to page through the additional cards.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned. Limit can range between 1 and 100 items.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int64"
        }, {
          "name" : "starting_after",
          "in" : "query",
          "description" : "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ending_before",
          "in" : "query",
          "description" : "A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n    \"object\": \"list\", \n    \"url\": \"/v1/customers/cu_2W3K3PwO1ECFGh/cards\", \n    \"count\": 2, \n    \"data\": [\n        {\n            \"id\": \"card_2W6ZlG7CMrI5Us\", \n            \"object\": \"card\", \n            \"last4\": \"4242\", \n            \"type\": \"Visa\", \n            \"exp_month\": 1, \n            \"exp_year\": 2050, \n            \"fingerprint\": \"qhjxpr7DiCdFYTlH\", \n            \"customer\": null, \n            \"country\": \"US\", \n            \"name\": null, \n            \"address_line1\": null, \n            \"address_line2\": null, \n            \"address_city\": null, \n            \"address_state\": null, \n            \"address_zip\": null, \n            \"address_country\": null, \n            \"cvc_check\": \"pass\", \n            \"address_line1_check\": null, \n            \"address_zip_check\": null\n        }, \n        {\n            \"id\": \"card_2W6ZlGsdfMrI5Us\", \n            \"object\": \"card\", \n            \"last4\": \"1234\", \n            \"type\": \"Visa\", \n            \"exp_month\": 1, \n            \"exp_year\": 2051, \n            \"fingerprint\": \"qhjxpr7DiCdFYTlH\", \n            \"customer\": null, \n            \"country\": \"US\", \n            \"name\": null, \n            \"address_line1\": null, \n            \"address_line2\": null, \n            \"address_city\": null, \n            \"address_state\": null, \n            \"address_zip\": null, \n            \"address_country\": null, \n            \"cvc_check\": \"pass\", \n            \"address_line1_check\": null, \n            \"address_zip_check\": null\n        }\n    ]\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "post" : {
        "description" : "Creating a new card.\nWhen you create a new credit card, you must specify a customer.\n\nCreating a new credit card will not change the customer's default credit card automatically;\nyou should update the customer with a new default_card for that.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "card",
          "in" : "formData",
          "description" : "The card can either be a token, like the ones returned by our Stripe.js, or a dictionary containing a users credit card details\n(with the options shown below). Whenever you create a new card for a customer, Stripe will automatically validate the card.\nCard details:\n**number**: required The card number, as a string without any separators.\n**exp_month**: required Two digit number representing the card's expiration month.\n**exp_year**: required Two or four digit number representing the card's expiration year.\n**cvc**: optional, highly recommended Card security code.\n**name**: optional, Cardholder's full name.\n**address_line1**: optional\n**address_line2**: optional\n**address_zip**: optional\n**address_state**: optional\n**address_country**: optional\n",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n    \"id\": \"card_2W2sZ5oLJ4aVNE\", \n    \"object\": \"card\", \n    \"last4\": \"4242\", \n    \"type\": \"Visa\", \n    \"exp_month\": 1, \n    \"exp_year\": 2050, \n    \"fingerprint\": \"qhjxpr7DiCdFYTlH\", \n    \"customer\": null, \n    \"country\": \"US\", \n    \"name\": null, \n    \"address_line1\": null, \n    \"address_line2\": null, \n    \"address_city\": null, \n    \"address_state\": null, \n    \"address_zip\": null, \n    \"address_country\": null, \n    \"cvc_check\": \"pass\", \n    \"address_line1_check\": null, \n    \"address_zip_check\": null\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "CUSTOMER_ID",
        "in" : "path",
        "description" : "The identifier of the customer to be retrieved.",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/customers/{CUSTOMER_ID}/cards/{CARD_ID}" : {
      "get" : {
        "description" : "Retrieving a customer's card.\nBy default, you can see the 10 most recent cards stored on a customer directly on the customer object,\nbut you can also retrieve details about a specific card stored on the customer.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n    \"id\": \"card_2W2sZ5oLJ4aVNE\", \n    \"object\": \"card\", \n    \"last4\": \"4242\", \n    \"type\": \"Visa\", \n    \"exp_month\": 1, \n    \"exp_year\": 2050, \n    \"fingerprint\": \"qhjxpr7DiCdFYTlH\", \n    \"customer\": null, \n    \"country\": \"US\", \n    \"name\": null, \n    \"address_line1\": null, \n    \"address_line2\": null, \n    \"address_city\": null, \n    \"address_state\": null, \n    \"address_zip\": null, \n    \"address_country\": null, \n    \"cvc_check\": \"pass\", \n    \"address_line1_check\": null, \n    \"address_zip_check\": null\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "post" : {
        "description" : "Updating a card.\nIf you need to update only some card details, like the billing address or expiration date, you can do so withou\nhaving to re-enter the full card details.\n\nWhen you update a card, Stripe will automatically validate the card.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "address_city",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "address_country",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "address_line1",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "address_line2",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "address_state",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "address_zip",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "exp_month",
          "in" : "formData",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "exp_year",
          "in" : "formData",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n    \"id\": \"card_2W2sZ5oLJ4aVNE\", \n    \"object\": \"card\", \n    \"last4\": \"4242\", \n    \"type\": \"Visa\", \n    \"exp_month\": 1, \n    \"exp_year\": 2050, \n    \"fingerprint\": \"qhjxpr7DiCdFYTlH\", \n    \"customer\": null, \n    \"country\": \"US\", \n    \"name\": null, \n    \"address_line1\": null, \n    \"address_line2\": null, \n    \"address_city\": null, \n    \"address_state\": null, \n    \"address_zip\": null, \n    \"address_country\": null, \n    \"cvc_check\": \"pass\", \n    \"address_line1_check\": null, \n    \"address_zip_check\": null\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "delete" : {
        "description" : "You can delete cards from a customer. If you delete a card that is currently a customer's default, the most recently\nadded card will be used as the new default. If you delete the customer's last remaining card, the default_card\nattribute on the customer will become null.\n\nNote that you may want to prevent customers on paid subscriptions from deleting all cards on file so that there\nis at least one default card for the next invoice payment attempt.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"id\" : \"cu_2W2fo9IOza32fP\" ,\n  \"deleted\" : true\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "CARD_ID",
        "in" : "path",
        "description" : "ID of card to retrieve",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "CUSTOMER_ID",
        "in" : "path",
        "description" : "The identifier of the customer to be retrieved.",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/customers/{CUSTOMER_ID}/discount" : {
      "delete" : {
        "description" : "Removes the currently applied discount on a customer.",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"id\" : \"cu_2W2fo9IOza32fP\" ,\n  \"deleted\" : true\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "CUSTOMER_ID",
        "in" : "path",
        "description" : "The identifier of the customer to be retrieved.",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/customers/{CUSTOMER_ID}/subscriptions" : {
      "get" : {
        "description" : "You can see a list of the customer's active subscriptions. Note that the 10 most recent active subscriptions are always available by default on the customer object. If you need more than those 10, you can use the 'limit' and 'starting_after' parameters to page through additional subscriptions.",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : { },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "post" : {
        "description" : "Subscribes a customer to a plan, meaning the customer will be billed monthly\nstarting from signup. If the customer already has an active subscription,\nwe'll update it to the new plan and optionally prorate the price we charge\nnext month to make up for any price changes.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "plan",
          "in" : "formData",
          "description" : "The identifier of the plan to subscribe the customer to.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "coupon",
          "in" : "formData",
          "description" : "The code of the coupon to apply to the customer if you would like to\napply it at the same time as creating the subscription.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "prorate",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trial_end",
          "in" : "formData",
          "description" : "UTC integer timestamp representing the end of the trial period the\ncustomer will get before being charged for the first time. If set,\ntrial_end will override the default trial period of the plan the\ncustomer is being subscribed to. The special value now can be\nprovided to end the customer's trial immediately.\n",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "card",
          "in" : "formData",
          "description" : "The card can either be a token, like the ones returned by our Stripe.js,\nor a dictionary containing a user's credit card details (with the\noptions shown below). You must provide a card if the customer does\nnot already have a valid card attached, and you are subscribing the\ncustomer for a plan that is not free. Passing card will create a new\ncard, make it the customer default card, and delete the old customer\ndefault if one exists. If you want to add an additional card to use\nwith subscriptions, instead use the card creation API to add the card\nand then the customer update API to set it as the default. Whenever\nyou attach a card to a customer, Stripe will automatically validate\nthe card.\nCard details:\n**number**: required The card number, as a string without any separators.\n**exp_month**: required Two digit number representing the card's expiration month.\n**exp_year**: required Two or four digit number representing the card's expiration year.\n**cvc**: optional, highly recommended Card security code.\n**name**: optional, Cardholder's full name.\n**address_line1**: optional\n**address_line2**: optional\n**address_zip**: optional\n**address_state**: optional\n**address_country**: optional\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "quantity",
          "in" : "formData",
          "description" : "The quantity you'd like to apply to the subscription you're creating.\nFor example, if your plan is $10/user/month, and your customer has 5\nusers, you could pass 5 as the quantity to have the customer charged\n$50 (5 x $10) monthly. If you update a subscription but don't change\nthe plan ID (e.g. changing only the trial_end), the subscription will\ninherit the old subscription's quantity attribute unless you pass a\nnew quantity parameter. If you update a subscription and change the\nplan ID, the new subscription will not inherit the quantity attribute\nand will default to 1 unless you pass a quantity parameter.\n",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int64"
        }, {
          "name" : "application_fee_percent",
          "in" : "formData",
          "description" : "A positive integer between 1 and 100 that represents the percentage\nof the subscription invoice amount due each billing period (including\nany bundled invoice items) that will be transferred to the application\nowners Stripe account. The request must be made with an OAuth key\nin order to set an application fee percentage . For more information,\nsee the application fees documentation.\n",
          "required" : false,
          "type" : "string",
          "default" : "null"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"id\": \"su_2i0bDIlnaMV0Vq\",\n  \"plan\": {\n    \"interval\": \"month\",\n    \"name\": \"Java Bindings Plan\",\n    \"amount\": 100,\n    \"currency\": \"usd\",\n    \"id\": \"JAVA-PLAN-dbfd01a0-c28c-421d-8ae9-5a999575fa1b\",\n    \"object\": \"plan\",\n    \"livemode\": false,\n    \"interval_count\": 1,\n    \"trial_period_days\": null\n  },\n  \"object\": \"subscription\",\n  \"start\": 1381139171,\n  \"status\": \"active\",\n  \"customer\": \"cus_2hzElrZhmfV9my\",\n  \"cancel_at_period_end\": false,\n  \"current_period_start\": 1381139171,\n  \"current_period_end\": 1383817571,\n  \"ended_at\": null,\n  \"trial_start\": null,\n  \"trial_end\": null,\n  \"canceled_at\": null,\n  \"quantity\": 1,\n  \"application_fee_percent\": null\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "CUSTOMER_ID",
        "in" : "path",
        "description" : "The identifier of the customer to be retrieved.",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/customers/{CUSTOMER_ID}/subscriptions/{SUBSCRIPTION_ID}" : {
      "get" : {
        "description" : "Retrieving a customer's subscription\nBy default, you can see the 10 most recent active subscriptions stored on a customer directly on the customer object, but you can also retrieve details about a specific active subscription for a customer.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"id\": \"su_2i0bDIlnaMV0Vq\",\n  \"plan\": {\n    \"interval\": \"month\",\n    \"name\": \"Java Bindings Plan\",\n    \"amount\": 100,\n    \"currency\": \"usd\",\n    \"id\": \"JAVA-PLAN-dbfd01a0-c28c-421d-8ae9-5a999575fa1b\",\n    \"object\": \"plan\",\n    \"livemode\": false,\n    \"interval_count\": 1,\n    \"trial_period_days\": null\n  },\n  \"object\": \"subscription\",\n  \"start\": 1381139171,\n  \"status\": \"active\",\n  \"customer\": \"cus_2hzElrZhmfV9my\",\n  \"cancel_at_period_end\": false,\n  \"current_period_start\": 1381139171,\n  \"current_period_end\": 1383817571,\n  \"ended_at\": null,\n  \"trial_start\": null,\n  \"trial_end\": null,\n  \"canceled_at\": null,\n  \"quantity\": 1,\n  \"application_fee_percent\": null\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "post" : {
        "description" : "Updates an existing subscription on a customer to match the specified parameters. When changing plans or quantities, we will optionally prorate the price we charge next month to make up for any price changes.",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "plan",
          "in" : "formData",
          "description" : "The identifier of the plan to subscribe the customer to.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "coupon",
          "in" : "formData",
          "description" : "The code of the coupon to apply to the customer if you would like to\napply it at the same time as creating the subscription.\n",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "prorate",
          "in" : "formData",
          "description" : "Flag telling us whether to prorate switching plans during a billing\ncycle.\n",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "trial_end",
          "in" : "formData",
          "description" : "UTC integer timestamp representing the end of the trial period the\ncustomer will get before being charged for the first time. If set,\ntrial_end will override the default trial period of the plan the\ncustomer is being subscribed to. The special value now can be\nprovided to end the customer's trial immediately.\n",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "card",
          "in" : "formData",
          "description" : "The card can either be a token, like the ones returned by our Stripe.js,\nor a dictionary containing a user's credit card details (with the\noptions shown below). You must provide a card if the customer does\nnot already have a valid card attached, and you are subscribing the\ncustomer for a plan that is not free. Passing card will create a new\ncard, make it the customer default card, and delete the old customer\ndefault if one exists. If you want to add an additional card to use\nwith subscriptions, instead use the card creation API to add the card\nand then the customer update API to set it as the default. Whenever\nyou attach a card to a customer, Stripe will automatically validate\nthe card.\nCard details:\n**number**: required The card number, as a string without any separators.\n**exp_month**: required Two digit number representing the card's expiration month.\n**exp_year**: required Two or four digit number representing the card's expiration year.\n**cvc**: optional, highly recommended Card security code.\n**name**: optional, Cardholder's full name.\n**address_line1**: optional\n**address_line2**: optional\n**address_zip**: optional\n**address_state**: optional\n**address_country**: optional\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "quantity",
          "in" : "formData",
          "description" : "The quantity you'd like to apply to the subscription you're creating.\nFor example, if your plan is $10/user/month, and your customer has 5\nusers, you could pass 5 as the quantity to have the customer charged\n$50 (5 x $10) monthly. If you update a subscription but don't change\nthe plan ID (e.g. changing only the trial_end), the subscription will\ninherit the old subscription's quantity attribute unless you pass a\nnew quantity parameter. If you update a subscription and change the\nplan ID, the new subscription will not inherit the quantity attribute\nand will default to 1 unless you pass a quantity parameter.\n",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int64"
        }, {
          "name" : "application_fee_percent",
          "in" : "formData",
          "description" : "A positive integer between 1 and 100 that represents the percentage\nof the subscription invoice amount due each billing period (including\nany bundled invoice items) that will be transferred to the application\nowners Stripe account. The request must be made with an OAuth key\nin order to set an application fee percentage . For more information,\nsee the application fees documentation.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"id\": \"su_2i0bDIlnaMV0Vq\",\n  \"plan\": {\n    \"interval\": \"month\",\n    \"name\": \"Java Bindings Plan\",\n    \"amount\": 100,\n    \"currency\": \"usd\",\n    \"id\": \"JAVA-PLAN-dbfd01a0-c28c-421d-8ae9-5a999575fa1b\",\n    \"object\": \"plan\",\n    \"livemode\": false,\n    \"interval_count\": 1,\n    \"trial_period_days\": null\n  },\n  \"object\": \"subscription\",\n  \"start\": 1381139171,\n  \"status\": \"active\",\n  \"customer\": \"cus_2hzElrZhmfV9my\",\n  \"cancel_at_period_end\": false,\n  \"current_period_start\": 1381139171,\n  \"current_period_end\": 1383817571,\n  \"ended_at\": null,\n  \"trial_start\": null,\n  \"trial_end\": null,\n  \"canceled_at\": null,\n  \"quantity\": 1,\n  \"application_fee_percent\": null\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "delete" : {
        "description" : "Cancels the subscription if it exists. If you set the at_period_end parameter\nto true, the subscription will remain active until the end of the period, a\nwhich point it will be cancelled and not renewed. By default, the subscription\nis terminated immediately. In either case, the customer will not be charged\nagain for the subscription. Note, however, that any pending invoice items\nthat you've created will still be charged for at the end of the period unless\nmanually deleted.If you've set the subscription to cancel at period end, any\npending prorations will also be left in place and collected at the end of the\nperiod, but if the subscription is set to cancel immediately, pending prorations\nwill be removed.\nBy default, all unpaid invoices for the customer will be closed upon subscription\ncancellation. We do this in order to prevent unexpected payment retries once\nthe customer has canceled a subscription. However, you can reopen the invoices\nmanually after subscription cancellation to have us proceed with automatic\nretries, or you could even re-attempt payment yourself on all unpaid invoices\nbefore allowing the customer to cancel the subscription at all.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "at_period_end",
          "in" : "formData",
          "description" : "A flag that if set to true will delay the cancellation of the subscription until the end of the current period.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"id\" : \"cu_2W2fo9IOza32fP\" ,\n  \"deleted\" : true\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "SUBSCRIPTION_ID",
        "in" : "path",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "CUSTOMER_ID",
        "in" : "path",
        "description" : "The identifier of the customer to be retrieved.",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/customers/{CUSTOMER_ID}/subscriptions/{SUBSCRIPTION_ID}/discount" : {
      "delete" : {
        "description" : "Removes the currently applied discount on a subscription.",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"id\" : \"cu_2W2fo9IOza32fP\" ,\n  \"deleted\" : true\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "SUBSCRIPTION_ID",
        "in" : "path",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "CUSTOMER_ID",
        "in" : "path",
        "description" : "The identifier of the customer to be retrieved.",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/events" : {
      "get" : {
        "description" : "List events, going back (at least) up to 30 days.",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "created",
          "in" : "query",
          "description" : "A filter on the list based on the object created field. The value can be\na string with an exact UTC timestamp, or it can be a dictionary with the\nfollowing options:\n  **gt**: optional Return values where the created field is after this timestamp.\n  **gte**: optional Return values where the created field is after or equal to this timestamp.\n  **lt**: optional Return values where the created field is before this timestamp.\n  **lte**: optional Return values where the created field is before or equal to this timestamp.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "A string containing a specific event name, or group of events using * as\na wildcard. The list will be filtered to include only events with a\nmatching event property\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned. Limit can range between 1 and 100 items.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int64"
        }, {
          "name" : "starting_after",
          "in" : "query",
          "description" : "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ending_before",
          "in" : "query",
          "description" : "A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"object\": \"list\",\n  \"url\": \"/v1/events\",\n  \"count\": 1,\n  \"data\": [\n    {\n    \"id\": \"evt_2i0bkMsBaZwLp1\",\n    \"created\": 1381139159,\n    \"livemode\": false,\n    \"type\": \"charge.succeeded\",\n    \"data\": {\n      \"object\": {\n        \"id\": \"ch_2i0bEetfZQnWS2\",\n        \"object\": \"charge\",\n        \"created\": 1381139159,\n        \"livemode\": false,\n        \"paid\": true,\n        \"amount\": 500,\n        \"currency\": \"usd\",\n        \"refunded\": false,\n        \"card\": {\n          \"id\": \"card_2i0baJexR7HVae\",\n          \"object\": \"card\",\n          \"last4\": \"4242\",\n          \"type\": \"Visa\",\n          \"exp_month\": 1,\n          \"exp_year\": 2050,\n          \"fingerprint\": \"qhjxpr7DiCdFYTlH\",\n          \"customer\": null,\n          \"country\": \"US\",\n          \"name\": null,\n          \"address_line1\": null,\n          \"address_line2\": null,\n          \"address_city\": null,\n          \"address_state\": null,\n          \"address_zip\": null,\n          \"address_country\": null,\n          \"cvc_check\": \"pass\",\n          \"address_line1_check\": null,\n          \"address_zip_check\": null\n        },\n        \"captured\": true,\n        \"refunds\": [\n  \n        ],\n        \"balance_transaction\": \"txn_2i0bWLMtt8QnOF\",\n        \"failure_message\": null,\n        \"failure_code\": null,\n        \"amount_refunded\": 0,\n        \"customer\": null,\n        \"invoice\": null,\n        \"description\": null,\n        \"dispute\": null,\n        \"metadata\": {\n        }\n      }\n    },\n    \"object\": \"event\",\n    \"pending_webhooks\": 0,\n    \"request\": \"iar_2i0bwZ3Bh7TiPp\"\n  }\n  ]\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/events/{EVENT_ID}" : {
      "get" : {
        "description" : "Retrieves the details of an event. Supply the unique identifier of the\nevent, which you might have received in a webhook.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "required" : false,
          "x-examples" : {
            "application/json" : "{\n  \"id\": \"evt_2i0bkMsBaZwLp1\",\n  \"created\": 1381139159,\n  \"livemode\": false,\n  \"type\": \"charge.succeeded\",\n  \"data\": {\n    \"object\": {\n      \"id\": \"ch_2i0bEetfZQnWS2\",\n      \"object\": \"charge\",\n      \"created\": 1381139159,\n      \"livemode\": false,\n      \"paid\": true,\n      \"amount\": 500,\n      \"currency\": \"usd\",\n      \"refunded\": false,\n      \"card\": {\n        \"id\": \"card_2i0baJexR7HVae\",\n        \"object\": \"card\",\n        \"last4\": \"4242\",\n        \"type\": \"Visa\",\n        \"exp_month\": 1,\n        \"exp_year\": 2050,\n        \"fingerprint\": \"qhjxpr7DiCdFYTlH\",\n        \"customer\": null,\n        \"country\": \"US\",\n        \"name\": null,\n        \"address_line1\": null,\n        \"address_line2\": null,\n        \"address_city\": null,\n        \"address_state\": null,\n        \"address_zip\": null,\n        \"address_country\": null,\n        \"cvc_check\": \"pass\",\n        \"address_line1_check\": null,\n        \"address_zip_check\": null\n      },\n      \"captured\": true,\n      \"refunds\": [\n\n      ],\n      \"balance_transaction\": \"txn_2i0bWLMtt8QnOF\",\n      \"failure_message\": null,\n      \"failure_code\": null,\n      \"amount_refunded\": 0,\n      \"customer\": null,\n      \"invoice\": null,\n      \"description\": null,\n      \"dispute\": null,\n      \"metadata\": {\n      }\n    }\n  },\n  \"object\": \"event\",\n  \"pending_webhooks\": 0,\n  \"request\": \"iar_2i0bwZ3Bh7TiPp\"\n}"
          }
        } ],
        "responses" : {
          "200" : { },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "EVENT_ID",
        "in" : "path",
        "description" : "The identifier of the event.",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/invoiceitems" : {
      "get" : {
        "description" : "Returns a list of your invoice items. Invoice Items are returned sorted by\ncreation date, with the most recently created invoice items appearing first.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "created",
          "in" : "query",
          "description" : "A filter on the list based on the object created field. The value can be\na string with an exact UTC timestamp, or it can be a dictionary with the\nfollowing options:\n  **gt**: optional Return values where the created field is after this timestamp.\n  **gte**: optional Return values where the created field is after or equal to this timestamp.\n  **lt**: optional Return values where the created field is before this timestamp.\n  **lte**: optional Return values where the created field is before or equal to this timestamp.\n  **customer**: optional The identifier of the customer whose invoice items to return. If none is provided, all invoice items will be returned.\n  **offset**: optional  default is 0 An offset into the list of returned items. The API will return the requested number of items starting at that offset.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customer",
          "in" : "query",
          "description" : "The identifier of the customer whose invoice items to return. If none is\nprovided, all invoice items will be returned.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned. Limit can range between 1 and 100 items.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int64"
        }, {
          "name" : "starting_after",
          "in" : "query",
          "description" : "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ending_before",
          "in" : "query",
          "description" : "A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"object\": \"list\",\n  \"url\": \"/v1/invoiceitems\",\n  \"count\": 1,\n  \"data\": [\n    {\n    \"object\": \"invoiceitem\",\n    \"id\": \"ii_2Xovytvup4IajJ\",\n    \"date\": 1378789336,\n    \"amount\": 0,\n    \"livemode\": false,\n    \"proration\": true,\n    \"currency\": \"usd\",\n    \"customer\": \"cus_2hzElrZhmfV9my\",\n    \"description\": \"Remaining time on Prep Plan 2 after 10 Sep 2013\",\n    \"invoice\": null\n  }\n  ]\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "post" : {
        "description" : "Adds an arbitrary charge or credit to the customer's upcoming invoice.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customer",
          "in" : "formData",
          "description" : "The ID of the customer who will be billed when this invoice item is\nbilled.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "amount",
          "in" : "formData",
          "description" : "The integer amount in cents of the charge to be applied to the upcoming\ninvoice. If you want to apply a credit to the customer's account,\npass a negative amount.\n",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "currency",
          "in" : "formData",
          "description" : "3-letter ISO code for currency.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "invoice",
          "in" : "formData",
          "description" : "The ID of an existing invoice to add this invoice item to. When lef\nblank, the invoice item will be added to the next upcoming scheduled\ninvoice. Use this when adding invoice items in response to an\ninvoice.created webhook. You cannot add an invoice item to an invoice\nthat has already been paid or closed.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "subscription",
          "in" : "formData",
          "description" : "The ID of a subscription to add this invoice item to. When left blank, the invoice item will be be added to the next upcoming scheduled invoice. When set, scheduled invoices for subscriptions other than the specified subscription will ignore the invoice item. Use this when you want to express that an invoice item has been accrued within the context of a particular subscription.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "description",
          "in" : "formData",
          "description" : "An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking. This will be unset if you POST an empty value.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "metadata",
          "in" : "formData",
          "description" : "A set of key/value pairs that you can attach to an item. It can be useful for storing additional information about the item in a structured format. You can unset individual keys if you POST an empty value for that key. You can clear all keys if you POST an empty value for metadata.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"object\": \"invoiceitem\",\n  \"id\": \"ii_2Xovytvup4IajJ\",\n  \"date\": 1378789336,\n  \"amount\": 0,\n  \"livemode\": false,\n  \"proration\": true,\n  \"currency\": \"usd\",\n  \"customer\": \"cus_2hzElrZhmfV9my\",\n  \"description\": \"Remaining time on Prep Plan 2 after 10 Sep 2013\",\n  \"invoice\": null\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/invoiceitems/{ID}" : {
      "get" : {
        "description" : "Retrieves the invoice item with the given ID.",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"object\": \"invoiceitem\",\n  \"id\": \"ii_2Xovytvup4IajJ\",\n  \"date\": 1378789336,\n  \"amount\": 0,\n  \"livemode\": false,\n  \"proration\": true,\n  \"currency\": \"usd\",\n  \"customer\": \"cus_2hzElrZhmfV9my\",\n  \"description\": \"Remaining time on Prep Plan 2 after 10 Sep 2013\",\n  \"invoice\": null\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "post" : {
        "description" : "Updates the amount or description of an invoice item on an upcoming invoice. Updating an invoice item is only possible before the invoice it's attached to is closed.",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "amount",
          "in" : "formData",
          "description" : "The integer amount in cents of the charge to be applied to the upcoming invoice. If you want to apply a credit to the customer's account, pass a negative amount.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "description",
          "in" : "formData",
          "description" : "An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking. This will be unset if you POST an empty value.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "metadata",
          "in" : "formData",
          "description" : "A set of key/value pairs that you can attach to an item. It can be useful for storing additional information about the item in a structured format. You can unset individual keys if you POST an empty value for that key. You can clear all keys if you POST an empty value for metadata.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"object\": \"invoiceitem\",\n  \"id\": \"ii_2Xovytvup4IajJ\",\n  \"date\": 1378789336,\n  \"amount\": 0,\n  \"livemode\": false,\n  \"proration\": true,\n  \"currency\": \"usd\",\n  \"customer\": \"cus_2hzElrZhmfV9my\",\n  \"description\": \"Remaining time on Prep Plan 2 after 10 Sep 2013\",\n  \"invoice\": null\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "delete" : {
        "description" : "Removes an invoice item from the upcoming invoice. Removing an invoice item\nis only possible before the invoice it's attached to is closed.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"id\" : \"cu_2W2fo9IOza32fP\" ,\n  \"deleted\" : true\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "ID",
        "in" : "path",
        "description" : "The identifier of the invoice item.",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/invoices" : {
      "get" : {
        "description" : "You can list all invoices, or list the invoices for a specific customer. The invoices are returned sorted by creation date, with the most recently created invoices appearing first.",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "customer",
          "in" : "query",
          "description" : "The identifier of the customer whose invoices to return. If none is provided, all invoices will be returned.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "A filter on the list based on the object date field. The value can be a string with an exact UTC timestamp, or it can be a dictionary with the following options",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned. Limit can range between 1 and 100 items.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int64"
        }, {
          "name" : "starting_after",
          "in" : "query",
          "description" : "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ending_before",
          "in" : "query",
          "description" : "A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"object\": \"list\",\n  \"url\": \"/v1/invoices\",\n  \"count\": 1,\n  \"data\": [\n    {\n    \"date\": 1381134043,\n    \"id\": \"in_2hzEcE91Q3iHBb\",\n    \"period_start\": 1381134043,\n    \"period_end\": 1381134043,\n    \"lines\": {\n      \"data\": [\n        {\n          \"id\": \"su_2i0bDIlnaMV0Vq\",\n          \"object\": \"line_item\",\n          \"type\": \"subscription\",\n          \"livemode\": true,\n          \"amount\": 100,\n          \"currency\": \"usd\",\n          \"proration\": false,\n          \"period\": {\n            \"start\": 1383817571,\n            \"end\": 1386409571\n          },\n          \"quantity\": 1,\n          \"plan\": {\n            \"interval\": \"month\",\n            \"name\": \"Java Bindings Plan\",\n            \"amount\": 100,\n            \"currency\": \"usd\",\n            \"id\": \"JAVA-PLAN-dbfd01a0-c28c-421d-8ae9-5a999575fa1b\",\n            \"object\": \"plan\",\n            \"livemode\": false,\n            \"interval_count\": 1,\n            \"trial_period_days\": null\n          },\n          \"description\": null\n        }\n      ],\n      \"count\": 1,\n      \"object\": \"list\",\n      \"url\": \"/v1/invoices/in_2hzEcE91Q3iHBb/lines\"\n    },\n    \"subtotal\": 0,\n    \"total\": 0,\n    \"customer\": \"cus_2hzElrZhmfV9my\",\n    \"object\": \"invoice\",\n    \"attempted\": true,\n    \"closed\": true,\n    \"paid\": true,\n    \"livemode\": false,\n    \"attempt_count\": 0,\n    \"amount_due\": 0,\n    \"currency\": \"usd\",\n    \"starting_balance\": 0,\n    \"ending_balance\": null,\n    \"next_payment_attempt\": null,\n    \"charge\": null,\n    \"discount\": null,\n    \"application_fee\": null\n  }\n  ]\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "post" : {
        "description" : "If you need to invoice your customer outside the regular billing cycle, you\ncan create an invoice that pulls in all pending invoice items, including\nprorations. The customer's billing cycle and regular subscription won't be\naffected.\nOnce you create the invoice, it'll be picked up and paid automatically,\nthough you can choose to pay it right away.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customer",
          "in" : "formData",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "application_fee",
          "in" : "formData",
          "description" : "A fee in cents that will be applied to the invoice and transferred\nto the application owners Stripe account. The request must be made\nwith an OAuth key in order to take an application fee. For more\ninformation, see the application fees documentation.\n",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "subscription",
          "in" : "formData",
          "description" : "The ID of the subscription to invoice. If not set, the created invoice will include all pending invoice items for the customer. If set, the created invoice will exclude pending invoice items that pertain to a subscription other than the specified subscription.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "description",
          "in" : "formData",
          "description" : "An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking. This will be unset if you POST an empty value.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "metadata",
          "in" : "formData",
          "description" : "A set of key/value pairs that you can attach to an item. It can be useful for storing additional information about the item in a structured format. You can unset individual keys if you POST an empty value for that key. You can clear all keys if you POST an empty value for metadata.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"date\": 1381134043,\n  \"id\": \"in_2hzEcE91Q3iHBb\",\n  \"period_start\": 1381134043,\n  \"period_end\": 1381134043,\n  \"lines\": {\n    \"data\": [\n      {\n        \"id\": \"su_2i0bDIlnaMV0Vq\",\n        \"object\": \"line_item\",\n        \"type\": \"subscription\",\n        \"livemode\": true,\n        \"amount\": 100,\n        \"currency\": \"usd\",\n        \"proration\": false,\n        \"period\": {\n          \"start\": 1383817571,\n          \"end\": 1386409571\n        },\n        \"quantity\": 1,\n        \"plan\": {\n          \"interval\": \"month\",\n          \"name\": \"Java Bindings Plan\",\n          \"amount\": 100,\n          \"currency\": \"usd\",\n          \"id\": \"JAVA-PLAN-dbfd01a0-c28c-421d-8ae9-5a999575fa1b\",\n          \"object\": \"plan\",\n          \"livemode\": false,\n          \"interval_count\": 1,\n          \"trial_period_days\": null\n        },\n        \"description\": null\n      }\n    ],\n    \"count\": 1,\n    \"object\": \"list\",\n    \"url\": \"/v1/invoices/in_2hzEcE91Q3iHBb/lines\"\n  },\n  \"subtotal\": 0,\n  \"total\": 0,\n  \"customer\": \"cus_2hzElrZhmfV9my\",\n  \"object\": \"invoice\",\n  \"attempted\": true,\n  \"closed\": true,\n  \"paid\": true,\n  \"livemode\": false,\n  \"attempt_count\": 0,\n  \"amount_due\": 0,\n  \"currency\": \"usd\",\n  \"starting_balance\": 0,\n  \"ending_balance\": null,\n  \"next_payment_attempt\": null,\n  \"charge\": null,\n  \"discount\": null,\n  \"application_fee\": null\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/invoices/upcoming" : {
      "get" : {
        "description" : "At any time, you can view the upcoming invoice for a customer. This will\nshow you all the charges that are pending, including subscription renewal\ncharges, invoice item charges, etc. It will also show you any discoun\nthat is applicable to the customer.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "customer",
          "in" : "query",
          "description" : "The identifier of the customer whose upcoming invoice you'd like to retrieve.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscription",
          "in" : "query",
          "description" : "The identifier of the subscription for which you'd like to retrieve the upcoming invoice. If not provided, you will retrieve the next upcoming invoice from among the customer's subscriptions.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"date\": 1381134043,\n  \"id\": \"in_2hzEcE91Q3iHBb\",\n  \"period_start\": 1381134043,\n  \"period_end\": 1381134043,\n  \"lines\": {\n    \"data\": [\n      {\n        \"id\": \"su_2i0bDIlnaMV0Vq\",\n        \"object\": \"line_item\",\n        \"type\": \"subscription\",\n        \"livemode\": true,\n        \"amount\": 100,\n        \"currency\": \"usd\",\n        \"proration\": false,\n        \"period\": {\n          \"start\": 1383817571,\n          \"end\": 1386409571\n        },\n        \"quantity\": 1,\n        \"plan\": {\n          \"interval\": \"month\",\n          \"name\": \"Java Bindings Plan\",\n          \"amount\": 100,\n          \"currency\": \"usd\",\n          \"id\": \"JAVA-PLAN-dbfd01a0-c28c-421d-8ae9-5a999575fa1b\",\n          \"object\": \"plan\",\n          \"livemode\": false,\n          \"interval_count\": 1,\n          \"trial_period_days\": null\n        },\n        \"description\": null\n      }\n    ],\n    \"count\": 1,\n    \"object\": \"list\",\n    \"url\": \"/v1/invoices/in_2hzEcE91Q3iHBb/lines\"\n  },\n  \"subtotal\": 0,\n  \"total\": 0,\n  \"customer\": \"cus_2hzElrZhmfV9my\",\n  \"object\": \"invoice\",\n  \"attempted\": true,\n  \"closed\": true,\n  \"paid\": true,\n  \"livemode\": false,\n  \"attempt_count\": 0,\n  \"amount_due\": 0,\n  \"currency\": \"usd\",\n  \"starting_balance\": 0,\n  \"ending_balance\": null,\n  \"next_payment_attempt\": null,\n  \"charge\": null,\n  \"discount\": null,\n  \"application_fee\": null\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/invoices/{INVOICE_ID}" : {
      "get" : {
        "description" : "Retrieves the invoice with the given ID.\nReturns an invoice object if a valid invoice ID was provided. Returns an\nerror otherwise.\nThe invoice object contains a lines hash that contains information about the\nsubscriptions and invoice items that have been applied to the invoice, as\nwell as any prorations that Stripe has automatically calculated. Each line\non the invoice has an amount attribute that represents the amount actually\ncontributed to the invoice's total. For invoice items and prorations, the\namount attribute is the same as for the invoice item or proration respectively.\nFor subscriptions, the amount may be different from the plan's regular price\ndepending on whether the invoice covers a trial period or the invoice period\ndiffers from the plan's usual interval.\nThe invoice object has both a subtotal and a total. The subtotal represents\nthe total before any discounts, while the total is the final amount to be\ncharged to the customer after all coupons have been applied.\nThe invoice also has a next_payment_attempt attribute that tells you the nex\ntime (as a UTC timestamp) payment for the invoice will be automatically\nattempted. For invoices that have been closed or that have reached the maximum\nnumber of retries (specified in your retry settings) , the next_payment_attemp\nwill be null.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"date\": 1381134043,\n  \"id\": \"in_2hzEcE91Q3iHBb\",\n  \"period_start\": 1381134043,\n  \"period_end\": 1381134043,\n  \"lines\": {\n    \"data\": [\n      {\n        \"id\": \"su_2i0bDIlnaMV0Vq\",\n        \"object\": \"line_item\",\n        \"type\": \"subscription\",\n        \"livemode\": true,\n        \"amount\": 100,\n        \"currency\": \"usd\",\n        \"proration\": false,\n        \"period\": {\n          \"start\": 1383817571,\n          \"end\": 1386409571\n        },\n        \"quantity\": 1,\n        \"plan\": {\n          \"interval\": \"month\",\n          \"name\": \"Java Bindings Plan\",\n          \"amount\": 100,\n          \"currency\": \"usd\",\n          \"id\": \"JAVA-PLAN-dbfd01a0-c28c-421d-8ae9-5a999575fa1b\",\n          \"object\": \"plan\",\n          \"livemode\": false,\n          \"interval_count\": 1,\n          \"trial_period_days\": null\n        },\n        \"description\": null\n      }\n    ],\n    \"count\": 1,\n    \"object\": \"list\",\n    \"url\": \"/v1/invoices/in_2hzEcE91Q3iHBb/lines\"\n  },\n  \"subtotal\": 0,\n  \"total\": 0,\n  \"customer\": \"cus_2hzElrZhmfV9my\",\n  \"object\": \"invoice\",\n  \"attempted\": true,\n  \"closed\": true,\n  \"paid\": true,\n  \"livemode\": false,\n  \"attempt_count\": 0,\n  \"amount_due\": 0,\n  \"currency\": \"usd\",\n  \"starting_balance\": 0,\n  \"ending_balance\": null,\n  \"next_payment_attempt\": null,\n  \"charge\": null,\n  \"discount\": null,\n  \"application_fee\": null\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "post" : {
        "description" : "Until an invoice is paid, it is marked as open (closed=false). If you'd like to\nstop Stripe from automatically attempting payment on an invoice or would simply\nlike to close the invoice out as no longer owed by the customer, you can update\nthe closed parameter.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "application_fee",
          "in" : "formData",
          "description" : "A fee in cents that will be applied to the invoice and transferred to\nthe application owners Stripe account. The request must be made with\nan OAuth key in order to take an application fee. For more information,\nsee the application fees documentation.\n",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "closed",
          "in" : "formData",
          "description" : "Boolean representing whether an invoice is closed or not. To close an\ninvoice, pass true.\n",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "description",
          "in" : "formData",
          "description" : "An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking. This will be unset if you POST an empty value.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "metadata",
          "in" : "formData",
          "description" : "A set of key/value pairs that you can attach to an item. It can be useful for storing additional information about the item in a structured format. You can unset individual keys if you POST an empty value for that key. You can clear all keys if you POST an empty value for metadata.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"date\": 1381134043,\n  \"id\": \"in_2hzEcE91Q3iHBb\",\n  \"period_start\": 1381134043,\n  \"period_end\": 1381134043,\n  \"lines\": {\n    \"data\": [\n      {\n        \"id\": \"su_2i0bDIlnaMV0Vq\",\n        \"object\": \"line_item\",\n        \"type\": \"subscription\",\n        \"livemode\": true,\n        \"amount\": 100,\n        \"currency\": \"usd\",\n        \"proration\": false,\n        \"period\": {\n          \"start\": 1383817571,\n          \"end\": 1386409571\n        },\n        \"quantity\": 1,\n        \"plan\": {\n          \"interval\": \"month\",\n          \"name\": \"Java Bindings Plan\",\n          \"amount\": 100,\n          \"currency\": \"usd\",\n          \"id\": \"JAVA-PLAN-dbfd01a0-c28c-421d-8ae9-5a999575fa1b\",\n          \"object\": \"plan\",\n          \"livemode\": false,\n          \"interval_count\": 1,\n          \"trial_period_days\": null\n        },\n        \"description\": null\n      }\n    ],\n    \"count\": 1,\n    \"object\": \"list\",\n    \"url\": \"/v1/invoices/in_2hzEcE91Q3iHBb/lines\"\n  },\n  \"subtotal\": 0,\n  \"total\": 0,\n  \"customer\": \"cus_2hzElrZhmfV9my\",\n  \"object\": \"invoice\",\n  \"attempted\": true,\n  \"closed\": true,\n  \"paid\": true,\n  \"livemode\": false,\n  \"attempt_count\": 0,\n  \"amount_due\": 0,\n  \"currency\": \"usd\",\n  \"starting_balance\": 0,\n  \"ending_balance\": null,\n  \"next_payment_attempt\": null,\n  \"charge\": null,\n  \"discount\": null,\n  \"application_fee\": null\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "INVOICE_ID",
        "in" : "path",
        "description" : "The identifier of the desired invoice.",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/invoices/{INVOICE_ID}/lines" : {
      "get" : {
        "description" : "When retrieving an invoice, you'll get a lines property containing the total\ncount of line items and the first handful of those items. There is also a URL\nwhere you can retrieve the full (paginated) list of line items.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "The id of the invoice containing the lines to be retrieved\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "customer",
          "in" : "query",
          "description" : "In the case of upcoming invoices, the customer of the upcoming invoice\nis required. In other cases it is ignored.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "subscription",
          "in" : "query",
          "description" : "In the case of upcoming invoices, the subscription of the upcoming invoice is optional. In other cases it is ignored.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned. Limit can range between 1 and 100 items.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int64"
        }, {
          "name" : "starting_after",
          "in" : "query",
          "description" : "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ending_before",
          "in" : "query",
          "description" : "A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"object\": \"list\",\n  \"url\": \"/v1/invoices/in_2hzEcE91Q3iHBb/lines\",\n  \"count\": 1,\n  \"data\": [\n    {\n    \"id\": \"ii_2Xovytvup4IajJ\",\n    \"object\": \"line_item\",\n    \"type\": \"invoiceitem\",\n    \"livemode\": false,\n    \"amount\": 1,\n    \"currency\": \"usd\",\n    \"proration\": true,\n    \"period\": {\n      \"start\": 1378789336,\n      \"end\": 1378789336\n    },\n    \"quantity\": null,\n    \"plan\": null,\n    \"description\": \"Remaining time on Prep Plan 2 after 10 Sep 2013\"\n  }\n  ]\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "INVOICE_ID",
        "in" : "path",
        "description" : "The identifier of the desired invoice.",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/invoices/{INVOICE_ID}/pay" : {
      "post" : {
        "description" : "Stripe automatically creates and then attempts to pay invoices for customers\non subscriptions. We'll also retry unpaid invoices according to your retry\nsettings. However, if you'd like to attempt to collect payment on an invoice\nout of the normal retry schedule or for some other reason, you can do so.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"date\": 1381134043,\n  \"id\": \"in_2hzEcE91Q3iHBb\",\n  \"period_start\": 1381134043,\n  \"period_end\": 1381134043,\n  \"lines\": {\n    \"data\": [\n      {\n        \"id\": \"su_2i0bDIlnaMV0Vq\",\n        \"object\": \"line_item\",\n        \"type\": \"subscription\",\n        \"livemode\": true,\n        \"amount\": 100,\n        \"currency\": \"usd\",\n        \"proration\": false,\n        \"period\": {\n          \"start\": 1383817571,\n          \"end\": 1386409571\n        },\n        \"quantity\": 1,\n        \"plan\": {\n          \"interval\": \"month\",\n          \"name\": \"Java Bindings Plan\",\n          \"amount\": 100,\n          \"currency\": \"usd\",\n          \"id\": \"JAVA-PLAN-dbfd01a0-c28c-421d-8ae9-5a999575fa1b\",\n          \"object\": \"plan\",\n          \"livemode\": false,\n          \"interval_count\": 1,\n          \"trial_period_days\": null\n        },\n        \"description\": null\n      }\n    ],\n    \"count\": 1,\n    \"object\": \"list\",\n    \"url\": \"/v1/invoices/in_2hzEcE91Q3iHBb/lines\"\n  },\n  \"subtotal\": 0,\n  \"total\": 0,\n  \"customer\": \"cus_2hzElrZhmfV9my\",\n  \"object\": \"invoice\",\n  \"attempted\": true,\n  \"closed\": true,\n  \"paid\": true,\n  \"livemode\": false,\n  \"attempt_count\": 0,\n  \"amount_due\": 0,\n  \"currency\": \"usd\",\n  \"starting_balance\": 0,\n  \"ending_balance\": null,\n  \"next_payment_attempt\": null,\n  \"charge\": null,\n  \"discount\": null,\n  \"application_fee\": null\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "INVOICE_ID",
        "in" : "path",
        "description" : "The identifier of the desired invoice.",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/plans" : {
      "get" : {
        "description" : "Returns a list of your plans.",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned. Limit can range between 1 and 100 items.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int64"
        }, {
          "name" : "starting_after",
          "in" : "query",
          "description" : "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ending_before",
          "in" : "query",
          "description" : "A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"object\": \"list\",\n  \"url\": \"/v1/plans\",\n  \"count\": 1,\n  \"data\": [\n    {\n    \"interval\": \"month\",\n    \"name\": \"Java Bindings Plan\",\n    \"amount\": 100,\n    \"currency\": \"usd\",\n    \"id\": \"JAVA-PLAN-dbfd01a0-c28c-421d-8ae9-5a999575fa1b\",\n    \"object\": \"plan\",\n    \"livemode\": false,\n    \"interval_count\": 1,\n    \"trial_period_days\": null\n  }\n  ]\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "post" : {
        "description" : "You can create plans easily via the plan management page of the Stripe dashboard.\nPlan creation is also accessible via the API if you need to create plans on\nthe fly.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "formData",
          "description" : "Unique string of your choice that will be used to identify this plan\nwhen subscribing a customer. This could be an identifier like \"gold\"\nor a primary key from your own database.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "amount",
          "in" : "formData",
          "description" : "A positive integer in cents (or 0 for a free plan) representing how\nmuch to charge (on a recurring basis).\n",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "currency",
          "in" : "formData",
          "description" : "3-letter ISO code for currency.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "interval",
          "in" : "formData",
          "description" : "Specifies billing frequency. Either week, month or year.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "interval_count",
          "in" : "formData",
          "description" : "The number of the unit specified in the interval parameter. For\nexample, you could specify an interval_count of 3 and an interval of\n'month' for quarterly billing (every 3 months).\n",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "formData",
          "description" : "Name of the plan, to be displayed on invoices and in the web interface.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "trial_period_days",
          "in" : "formData",
          "description" : "Specifies a trial period in (an integer number of) days. If you\ninclude a trial period, the customer won't be billed for the firs\ntime until the trial period ends. If the customer cancels before the\ntrial period is over, she'll never be billed at all.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "metadata",
          "in" : "formData",
          "description" : "A set of key/value pairs that you can attach to a plan object. It can be useful for storing additional information about the plan in a structured format.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "statement_description",
          "in" : "formData",
          "description" : "An arbitrary string to be displayed on your customers' credit card statements (alongside your company name) for charges created by this plan. This may be up to 15 characters. As an example, if your website is RunClub and you specify Silver Plan, the user will see RUNCLUB SILVER PLAN. The statement description may not include <>\"' characters. While most banks display this information consistently, some may display it incorrectly or not at all.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"interval\": \"month\",\n  \"name\": \"Java Bindings Plan\",\n  \"amount\": 100,\n  \"currency\": \"usd\",\n  \"id\": \"JAVA-PLAN-dbfd01a0-c28c-421d-8ae9-5a999575fa1b\",\n  \"object\": \"plan\",\n  \"livemode\": false,\n  \"interval_count\": 1,\n  \"trial_period_days\": null\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/plans/{PLAN_ID}" : {
      "get" : {
        "description" : "Retrieves the plan with the given ID.",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"interval\": \"month\",\n  \"name\": \"Java Bindings Plan\",\n  \"amount\": 100,\n  \"currency\": \"usd\",\n  \"id\": \"JAVA-PLAN-dbfd01a0-c28c-421d-8ae9-5a999575fa1b\",\n  \"object\": \"plan\",\n  \"livemode\": false,\n  \"interval_count\": 1,\n  \"trial_period_days\": null\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "post" : {
        "description" : "Updates the name of a plan. Other plan details (price, interval, etc.) are,\nby design, not editable.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "formData",
          "description" : "Name of the plan, to be displayed on invoices and in the web interface.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "metadata",
          "in" : "formData",
          "description" : "A set of key/value pairs that you can attach to a plan object. It can be useful for storing additional information about the plan in a structured format. You can unset individual keys if you POST an empty value for that key. You can clear all keys if you POST an empty value for metadata.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "statement_description",
          "in" : "formData",
          "description" : "An arbitrary string to be displayed on your customers' credit card statements (alongside your company name) for charges created by this plan. This may be up to 15 characters. As an example, if your website is RunClub and you specify Silver Plan, the user will see RUNCLUB SILVER PLAN. The statement description may not include <>\"' characters. While most banks display this information consistently, some may display it incorrectly or not at all. This will be unset if you POST an empty value.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"interval\": \"month\",\n  \"name\": \"Java Bindings Plan\",\n  \"amount\": 100,\n  \"currency\": \"usd\",\n  \"id\": \"JAVA-PLAN-dbfd01a0-c28c-421d-8ae9-5a999575fa1b\",\n  \"object\": \"plan\",\n  \"livemode\": false,\n  \"interval_count\": 1,\n  \"trial_period_days\": null\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "delete" : {
        "description" : "You can delete plans via the plan management page of the Stripe dashboard.\nHowever, deleting a plan does not affect any current subscribers to the plan;\nit merely means that new subscribers can't be added to that plan. You can\nalso delete plans via the API.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"id\" : \"cu_2W2fo9IOza32fP\" ,\n  \"deleted\" : true\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "PLAN_ID",
        "in" : "path",
        "description" : "The ID of the desired plan.",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/recipients" : {
      "get" : {
        "description" : "Returns a list of your recipients. The recipients are returned sorted by\ncreation date, with the most recently created recipient appearing first.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "verified",
          "in" : "query",
          "description" : "Only return recipients that are verified or unverified.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned. Limit can range between 1 and 100 items.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int64"
        }, {
          "name" : "starting_after",
          "in" : "query",
          "description" : "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ending_before",
          "in" : "query",
          "description" : "A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"object\": \"list\",\n  \"url\": \"v1/recipients\",\n  \"count\": 1,\n  \"data\": [\n    {\n    \"id\": \"rp_2dlCVjwuvlBoSm\",\n    \"object\": \"recipient\",\n    \"created\": 1380159281,\n    \"livemode\": false,\n    \"type\": \"individual\",\n    \"description\": null,\n    \"email\": \"jesse@mybitfix.com\",\n    \"name\": \"Jessiford P Franklin\",\n    \"verified\": false,\n    \"metadata\": {\n    },\n    \"active_account\": {\n      \"object\": \"bank_account\",\n      \"bank_name\": \"STRIPE TEST BANK\",\n      \"last4\": \"6789\",\n      \"country\": \"US\",\n      \"currency\": \"usd\",\n      \"validated\": false,\n      \"fingerprint\": \"StvKx0vy9W8cn6pd\"\n    }\n  }\n  ]\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "post" : {
        "description" : "Creates a new recipient object and verifies both the recipient identity and\nbank account information.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "formData",
          "description" : "The recipient's full, legal name. For type individual, should be in\nthe format \"First Last\", \"First Middle Last\", or \"First M Last\" (no\nprefixes or suffixes). For corporation, the full incorporated name.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "formData",
          "description" : "Type of the recipient: either individual or corporation.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tax_id",
          "in" : "formData",
          "description" : "The recipient's tax ID, as a string. For type individual, the full SSN;\nfor type corporation, the full EIN.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bank_account",
          "in" : "formData",
          "description" : "A bank account to attach to the recipient.\n**country**: required The country the bank account is in. Currently, only US is supported.\n**routing_number**: required The routing number for the bank account in string form. This should be the ACH routing number, not the wire routing number.\n**account_number**: required The account number for the bank account in string form. Must be a checking account.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "email",
          "in" : "formData",
          "description" : "The recipient's email address. It is displayed alongside the recipien\nin the web interface and can be useful for searching and tracking.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "description",
          "in" : "formData",
          "description" : "An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking. This will be unset if you POST an empty value.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "metadata",
          "in" : "formData",
          "description" : "A set of key/value pairs that you can attach to an item. It can be useful for storing additional information about the item in a structured format. You can unset individual keys if you POST an empty value for that key. You can clear all keys if you POST an empty value for metadata.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"id\": \"rp_2dlCVjwuvlBoSm\",\n  \"object\": \"recipient\",\n  \"created\": 1380159281,\n  \"livemode\": false,\n  \"type\": \"individual\",\n  \"description\": null,\n  \"email\": \"jesse@mybitfix.com\",\n  \"name\": \"Jessiford P Franklin\",\n  \"verified\": false,\n  \"metadata\": {\n  },\n  \"active_account\": {\n    \"object\": \"bank_account\",\n    \"bank_name\": \"STRIPE TEST BANK\",\n    \"last4\": \"6789\",\n    \"country\": \"US\",\n    \"currency\": \"usd\",\n    \"validated\": false,\n    \"fingerprint\": \"StvKx0vy9W8cn6pd\"\n  }\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/recipients/{recipient_ID}" : {
      "get" : {
        "description" : "Retrieves the details of an existing recipient. You need only supply the\nunique recipient identifier that was returned upon recipient creation.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"id\": \"rp_2dlCVjwuvlBoSm\",\n  \"object\": \"recipient\",\n  \"created\": 1380159281,\n  \"livemode\": false,\n  \"type\": \"individual\",\n  \"description\": null,\n  \"email\": \"jesse@mybitfix.com\",\n  \"name\": \"Jessiford P Franklin\",\n  \"verified\": false,\n  \"metadata\": {\n  },\n  \"active_account\": {\n    \"object\": \"bank_account\",\n    \"bank_name\": \"STRIPE TEST BANK\",\n    \"last4\": \"6789\",\n    \"country\": \"US\",\n    \"currency\": \"usd\",\n    \"validated\": false,\n    \"fingerprint\": \"StvKx0vy9W8cn6pd\"\n  }\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "post" : {
        "description" : "Updates the specified recipient by setting the values of the parameters\npassed. Any parameters not provided will be left unchanged.\nIf you update the name or tax ID, the identity verification will automatically\nbe rerun. If you update the bank account, the bank account validation will\nautomatically be rerun.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "formData",
          "description" : "The recipient's full, legal name. For type individual, should be in\nthe format \"First Last\", \"First Middle Last\", or \"First M Last\" (no\nprefixes or suffixes). For corporation, the full incorporated name.\n",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "tax_id",
          "in" : "formData",
          "description" : "The recipient's tax ID, as a string. For type individual, the full\nSSN; for type corporation, the full EIN.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bank_account",
          "in" : "formData",
          "description" : "A new bank account to attach to the recipient.\n  **country**: required The country the bank account is in. Currently, only US is supported.\n  **routing_number**: required The routing number for the bank account in string form. This should be the ACH routing number, not the wire routing number.\n  **account_number**: required The account number for the bank account in string form. Must be a checking account.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "email",
          "in" : "formData",
          "description" : "The recipient's email address. It is displayed alongside the recipien\nin the web interface and can be useful for searching and tracking.\nThis will be unset if you POST an empty value.\n",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "description",
          "in" : "formData",
          "description" : "An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking. This will be unset if you POST an empty value.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "metadata",
          "in" : "formData",
          "description" : "A set of key/value pairs that you can attach to an item. It can be useful for storing additional information about the item in a structured format. You can unset individual keys if you POST an empty value for that key. You can clear all keys if you POST an empty value for metadata.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"id\": \"rp_2dlCVjwuvlBoSm\",\n  \"object\": \"recipient\",\n  \"created\": 1380159281,\n  \"livemode\": false,\n  \"type\": \"individual\",\n  \"description\": null,\n  \"email\": \"jesse@mybitfix.com\",\n  \"name\": \"Jessiford P Franklin\",\n  \"verified\": false,\n  \"metadata\": {\n  },\n  \"active_account\": {\n    \"object\": \"bank_account\",\n    \"bank_name\": \"STRIPE TEST BANK\",\n    \"last4\": \"6789\",\n    \"country\": \"US\",\n    \"currency\": \"usd\",\n    \"validated\": false,\n    \"fingerprint\": \"StvKx0vy9W8cn6pd\"\n  }\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "delete" : {
        "description" : "Permanently deletes a recipient. It cannot be undone.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"id\" : \"cu_2W2fo9IOza32fP\" ,\n  \"deleted\" : true\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "recipient_ID",
        "in" : "path",
        "description" : "The identifier of the recipient to be retrieved.",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/tokens" : {
      "post" : {
        "description" : "Creates a single use token that wraps the details of a credit card. This\ntoken can be used in place of a credit card dictionary with any API method.\nThese tokens can only be used once: by creating a new charge object, or\nattaching them to a customer.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "card",
          "in" : "formData",
          "description" : "optional, either customer or card is required, but not both\nThe card details this token will represent.\n  **number**: required The card number, as a string without any separators.\n  **exp_month**: required Two digit number representing the card's expiration month.\n  **exp_year**: required Two or four digit number representing the card's expiration year.\n  **cvc**: optional, highly recommended Card security code.\n  **name**: optional Cardholder's full name.\n  **address_line1**: optional\n  **address_line2**: optional\n  **address_city**: optional\n  **address_zip**: optional\n  **address_state**: optional\n  **address_country**: optional\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customer",
          "in" : "formData",
          "description" : "optional, either customer or card is required, but not both\nFor use with Stripe Connect only; the API key used for the reques\nmust be an OAuth access token. For more details, see the shared\ncustomers documentation.\nA customer (owned by the application's account) to create a token for.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bank_account",
          "in" : "formData",
          "description" : "A bank account to attach to the recipient.\n\n**country** required The country the bank account is in. Currently, only US is supported.\n**routing_number** required The routing number for the bank account in string form. This should be the ACH routing number, not the wire routing number.\n**account_number** required The account number for the bank account in string form. Must be a checking account.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"id\": \"tok_1RjCszdhnuTnGF\",\n  \"livemode\": false,\n  \"created\": 1363084496,\n  \"used\": false,\n  \"object\": \"token\",\n  \"type\": \"card\",\n  \"card\": {\n    \"id\": \"cc_1RjCGyzfsxF0AF\",\n    \"object\": \"card\",\n    \"last4\": \"4242\",\n    \"type\": \"Visa\",\n    \"exp_month\": 8,\n    \"exp_year\": 2014,\n    \"fingerprint\": \"qhjxpr7DiCdFYTlH\",\n    \"customer\": null,\n    \"country\": \"US\",\n    \"name\": null,\n    \"address_line1\": null,\n    \"address_line2\": null,\n    \"address_city\": null,\n    \"address_state\": null,\n    \"address_zip\": null,\n    \"address_country\": null\n  }\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/tokens/{ID}" : {
      "get" : {
        "description" : "Retrieves the token with the given ID.",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "required" : false,
          "x-examples" : {
            "application/json" : "{\n  \"id\": \"tok_1RjCszdhnuTnGF\",\n  \"livemode\": false,\n  \"created\": 1363084496,\n  \"used\": false,\n  \"object\": \"token\",\n  \"type\": \"card\",\n  \"card\": {\n    \"id\": \"cc_1RjCGyzfsxF0AF\",\n    \"object\": \"card\",\n    \"last4\": \"4242\",\n    \"type\": \"Visa\",\n    \"exp_month\": 8,\n    \"exp_year\": 2014,\n    \"fingerprint\": \"qhjxpr7DiCdFYTlH\",\n    \"customer\": null,\n    \"country\": \"US\",\n    \"name\": null,\n    \"address_line1\": null,\n    \"address_line2\": null,\n    \"address_city\": null,\n    \"address_state\": null,\n    \"address_zip\": null,\n    \"address_country\": null\n  }\n}"
          }
        } ],
        "responses" : {
          "200" : { },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "ID",
        "in" : "path",
        "description" : "ID of a token.",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/transfers" : {
      "get" : {
        "description" : "Returns a list of existing transfers sent to third-party bank accounts or\nthat Stripe has sent you. The transfers are returned in sorted order, with\nthe most recent transfers appearing first.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "date",
          "in" : "query",
          "description" : "A filter on the list based on the object date field. The value can be a\nstring with an exact UTC timestamp, or it can be a dictionary with the\nfollowing options:\n  **gt**: optional Return values where the date field is after this timestamp.\n  **gte**: optional Return values where the date field is after or equal to this timestamp.\n  **lt**: optional Return values where the date field is before this timestamp.\n  **lte**: optional Return values where the date field is before or equal to this timestamp.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "recipient",
          "in" : "query",
          "description" : "Only return transfers for the recipient specified by this recipient ID.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Only return transfers that have the given status: pending, paid, or failed.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "created",
          "in" : "query",
          "description" : "A filter on the list based on the object created field. The value can be a string with an exact UTC timestamp, or it can be a dictionary with the following options:\n\n**gt** optional Return values where the created field is after this timestamp.\n**gte** optional Return values where the created field is after or equal to this timestamp.\n**lt** optional Return values where the created field is before this timestamp.\n**lte** optional Return values where the created field is before or equal to this timestamp.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit on the number of objects to be returned. Limit can range between 1 and 100 items.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int64"
        }, {
          "name" : "starting_after",
          "in" : "query",
          "description" : "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ending_before",
          "in" : "query",
          "description" : "A cursor for use in pagination. ending_before is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_bar, your subsequent call can include ending_before=obj_bar in order to fetch the previous page of the list.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"object\": \"list\",\n  \"url\": \"/v1/transfers\",\n  \"count\": 1,\n  \"data\": [\n    {\n    \"id\": \"tr_2OKKQ4A6HN1WJy\",\n    \"object\": \"transfer\",\n    \"date\": 1376524800,\n    \"livemode\": false,\n    \"amount\": 286710,\n    \"currency\": \"usd\",\n    \"status\": \"paid\",\n    \"balance_transaction\": \"txn_2hrAStwRKjXiIp\",\n    \"summary\": {\n      \"charge_gross\": 316670,\n      \"charge_fees\": 29960,\n      \"charge_fee_details\": [\n        {\n          \"amount\": 29960,\n          \"currency\": \"usd\",\n          \"type\": \"stripe_fee\",\n          \"description\": null,\n          \"application\": null\n        }\n      ],\n      \"refund_gross\": 0,\n      \"refund_fees\": 0,\n      \"refund_fee_details\": [\n  \n      ],\n      \"adjustment_gross\": 0,\n      \"adjustment_fees\": 0,\n      \"adjustment_fee_details\": [\n  \n      ],\n      \"validation_fees\": 0,\n      \"validation_count\": 0,\n      \"charge_count\": 682,\n      \"refund_count\": 0,\n      \"adjustment_count\": 0,\n      \"net\": 286710,\n      \"currency\": \"usd\",\n      \"collected_fee_gross\": 0,\n      \"collected_fee_count\": 0,\n      \"collected_fee_refund_gross\": 0,\n      \"collected_fee_refund_count\": 0\n    },\n    \"transactions\": {\n      \"object\": \"list\",\n      \"count\": 682,\n      \"url\": \"/v1/transfers/tr_2OKKQ4A6HN1WJy/transactions\",\n      \"data\": [\n        {\n          \"id\": \"ch_2Nn7UTSkz0cxq9\",\n          \"type\": \"charge\",\n          \"amount\": 500,\n          \"currency\": \"usd\",\n          \"net\": 455,\n          \"created\": 1376476192,\n          \"description\": null,\n          \"fee\": 45,\n          \"fee_details\": [\n            {\n              \"amount\": 45,\n              \"currency\": \"usd\",\n              \"type\": \"stripe_fee\",\n              \"description\": \"Stripe processing fees\",\n              \"application\": null\n            }\n          ]\n        },\n        {\n          \"id\": \"ch_2Nn8hBMCCN0b1r\",\n          \"type\": \"charge\",\n          \"amount\": 500,\n          \"currency\": \"usd\",\n          \"net\": 455,\n          \"created\": 1376476252,\n          \"description\": null,\n          \"fee\": 45,\n          \"fee_details\": [\n            {\n              \"amount\": 45,\n              \"currency\": \"usd\",\n              \"type\": \"stripe_fee\",\n              \"description\": \"Stripe processing fees\",\n              \"application\": null\n            }\n          ]\n        },\n        {\n          \"id\": \"ch_2Nn9rrWLlKk7Mj\",\n          \"type\": \"charge\",\n          \"amount\": 500,\n          \"currency\": \"usd\",\n          \"net\": 455,\n          \"created\": 1376476312,\n          \"description\": null,\n          \"fee\": 45,\n          \"fee_details\": [\n            {\n              \"amount\": 45,\n              \"currency\": \"usd\",\n              \"type\": \"stripe_fee\",\n              \"description\": \"Stripe processing fees\",\n              \"application\": null\n            }\n          ]\n        },\n        {\n          \"id\": \"ch_2Nn9z9LTfcoJvW\",\n          \"type\": \"charge\",\n          \"amount\": 100,\n          \"currency\": \"usd\",\n          \"net\": 67,\n          \"created\": 1376476323,\n          \"description\": null,\n          \"fee\": 33,\n          \"fee_details\": [\n            {\n              \"amount\": 33,\n              \"currency\": \"usd\",\n              \"type\": \"stripe_fee\",\n              \"description\": \"Stripe processing fees\",\n              \"application\": null\n            }\n          ]\n        },\n        {\n          \"id\": \"ch_2Nn9jymNURQqY5\",\n          \"type\": \"charge\",\n          \"amount\": 100,\n          \"currency\": \"usd\",\n          \"net\": 67,\n          \"created\": 1376476323,\n          \"description\": null,\n          \"fee\": 33,\n          \"fee_details\": [\n            {\n              \"amount\": 33,\n              \"currency\": \"usd\",\n              \"type\": \"stripe_fee\",\n              \"description\": \"Stripe processing fees\",\n              \"application\": null\n            }\n          ]\n        }\n      ]\n    },\n    \"other_transfers\": [\n      \"tr_2OKKQ4A6HN1WJy\"\n    ],\n    \"account\": null,\n    \"description\": \"STRIPE TRANSFER\",\n    \"metadata\": {\n    },\n    \"statement_descriptor\": null,\n    \"recipient\": null\n  }\n  ]\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "post" : {
        "description" : "To send funds from your Stripe account to a third-party bank account, you\ncreate a new transfer object. Your Stripe balance must be able to cover\nthe transfer amount, or you'll receive an \"Insufficient Funds\" error.\nIf your API key is in test mode, money won't actually be sent, though\neverything else will occur as if in live mode.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "amount",
          "in" : "formData",
          "description" : "A positive integer in cents representing how much to transfer.\n",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "currency",
          "in" : "formData",
          "description" : "3-letter ISO code for currency.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "recipient",
          "in" : "formData",
          "description" : "The ID of an existing, verified recipient that the money will\nbe transferred to in this request. If self, the money will be\ntransferred to the bank account associated with your account.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "statement_descriptor",
          "in" : "formData",
          "description" : "An arbitrary string which will be displayed on the recipient's bank\nstatement. This should not include your company name, as that will\nalready be part of the descriptor. The maximum length of this string\nis 15 characters; longer strings will be truncated.\nFor example, if your website is EXAMPLE.COM and you pass in\n`INVOICE 1234`, the user will see\n`EXAMPLE.COM INVOICE 1234`.\nNote: While most banks display this information consistently, some\nmay display it incorrectly or not at all.\n",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "description",
          "in" : "formData",
          "description" : "An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking. This will be unset if you POST an empty value.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "metadata",
          "in" : "formData",
          "description" : "A set of key/value pairs that you can attach to an item. It can be useful for storing additional information about the item in a structured format. You can unset individual keys if you POST an empty value for that key. You can clear all keys if you POST an empty value for metadata.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"id\": \"tr_2OKKQ4A6HN1WJy\",\n  \"object\": \"transfer\",\n  \"date\": 1376524800,\n  \"livemode\": false,\n  \"amount\": 286710,\n  \"currency\": \"usd\",\n  \"status\": \"paid\",\n  \"balance_transaction\": \"txn_2hrAStwRKjXiIp\",\n  \"summary\": {\n    \"charge_gross\": 316670,\n    \"charge_fees\": 29960,\n    \"charge_fee_details\": [\n      {\n        \"amount\": 29960,\n        \"currency\": \"usd\",\n        \"type\": \"stripe_fee\",\n        \"description\": null,\n        \"application\": null\n      }\n    ],\n    \"refund_gross\": 0,\n    \"refund_fees\": 0,\n    \"refund_fee_details\": [\n\n    ],\n    \"adjustment_gross\": 0,\n    \"adjustment_fees\": 0,\n    \"adjustment_fee_details\": [\n\n    ],\n    \"validation_fees\": 0,\n    \"validation_count\": 0,\n    \"charge_count\": 682,\n    \"refund_count\": 0,\n    \"adjustment_count\": 0,\n    \"net\": 286710,\n    \"currency\": \"usd\",\n    \"collected_fee_gross\": 0,\n    \"collected_fee_count\": 0,\n    \"collected_fee_refund_gross\": 0,\n    \"collected_fee_refund_count\": 0\n  },\n  \"transactions\": {\n    \"object\": \"list\",\n    \"count\": 682,\n    \"url\": \"/v1/transfers/tr_2OKKQ4A6HN1WJy/transactions\",\n    \"data\": [\n      {\n        \"id\": \"ch_2Nn7UTSkz0cxq9\",\n        \"type\": \"charge\",\n        \"amount\": 500,\n        \"currency\": \"usd\",\n        \"net\": 455,\n        \"created\": 1376476192,\n        \"description\": null,\n        \"fee\": 45,\n        \"fee_details\": [\n          {\n            \"amount\": 45,\n            \"currency\": \"usd\",\n            \"type\": \"stripe_fee\",\n            \"description\": \"Stripe processing fees\",\n            \"application\": null\n          }\n        ]\n      },\n      {\n        \"id\": \"ch_2Nn8hBMCCN0b1r\",\n        \"type\": \"charge\",\n        \"amount\": 500,\n        \"currency\": \"usd\",\n        \"net\": 455,\n        \"created\": 1376476252,\n        \"description\": null,\n        \"fee\": 45,\n        \"fee_details\": [\n          {\n            \"amount\": 45,\n            \"currency\": \"usd\",\n            \"type\": \"stripe_fee\",\n            \"description\": \"Stripe processing fees\",\n            \"application\": null\n          }\n        ]\n      },\n      {\n        \"id\": \"ch_2Nn9rrWLlKk7Mj\",\n        \"type\": \"charge\",\n        \"amount\": 500,\n        \"currency\": \"usd\",\n        \"net\": 455,\n        \"created\": 1376476312,\n        \"description\": null,\n        \"fee\": 45,\n        \"fee_details\": [\n          {\n            \"amount\": 45,\n            \"currency\": \"usd\",\n            \"type\": \"stripe_fee\",\n            \"description\": \"Stripe processing fees\",\n            \"application\": null\n          }\n        ]\n      },\n      {\n        \"id\": \"ch_2Nn9z9LTfcoJvW\",\n        \"type\": \"charge\",\n        \"amount\": 100,\n        \"currency\": \"usd\",\n        \"net\": 67,\n        \"created\": 1376476323,\n        \"description\": null,\n        \"fee\": 33,\n        \"fee_details\": [\n          {\n            \"amount\": 33,\n            \"currency\": \"usd\",\n            \"type\": \"stripe_fee\",\n            \"description\": \"Stripe processing fees\",\n            \"application\": null\n          }\n        ]\n      },\n      {\n        \"id\": \"ch_2Nn9jymNURQqY5\",\n        \"type\": \"charge\",\n        \"amount\": 100,\n        \"currency\": \"usd\",\n        \"net\": 67,\n        \"created\": 1376476323,\n        \"description\": null,\n        \"fee\": 33,\n        \"fee_details\": [\n          {\n            \"amount\": 33,\n            \"currency\": \"usd\",\n            \"type\": \"stripe_fee\",\n            \"description\": \"Stripe processing fees\",\n            \"application\": null\n          }\n        ]\n      }\n    ]\n  },\n  \"other_transfers\": [\n    \"tr_2OKKQ4A6HN1WJy\"\n  ],\n  \"account\": null,\n  \"description\": \"STRIPE TRANSFER\",\n  \"metadata\": {\n  },\n  \"statement_descriptor\": null,\n  \"recipient\": null\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/transfers/{transfer_ID}" : {
      "get" : {
        "description" : "Retrieves the details of an existing transfer. Supply the unique transfer ID\nfrom either a transfer creation request or the transfer list, and Stripe will\nreturn the corresponding transfer information.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"id\": \"tr_2OKKQ4A6HN1WJy\",\n  \"object\": \"transfer\",\n  \"date\": 1376524800,\n  \"livemode\": false,\n  \"amount\": 286710,\n  \"currency\": \"usd\",\n  \"status\": \"paid\",\n  \"balance_transaction\": \"txn_2hrAStwRKjXiIp\",\n  \"summary\": {\n    \"charge_gross\": 316670,\n    \"charge_fees\": 29960,\n    \"charge_fee_details\": [\n      {\n        \"amount\": 29960,\n        \"currency\": \"usd\",\n        \"type\": \"stripe_fee\",\n        \"description\": null,\n        \"application\": null\n      }\n    ],\n    \"refund_gross\": 0,\n    \"refund_fees\": 0,\n    \"refund_fee_details\": [\n\n    ],\n    \"adjustment_gross\": 0,\n    \"adjustment_fees\": 0,\n    \"adjustment_fee_details\": [\n\n    ],\n    \"validation_fees\": 0,\n    \"validation_count\": 0,\n    \"charge_count\": 682,\n    \"refund_count\": 0,\n    \"adjustment_count\": 0,\n    \"net\": 286710,\n    \"currency\": \"usd\",\n    \"collected_fee_gross\": 0,\n    \"collected_fee_count\": 0,\n    \"collected_fee_refund_gross\": 0,\n    \"collected_fee_refund_count\": 0\n  },\n  \"transactions\": {\n    \"object\": \"list\",\n    \"count\": 682,\n    \"url\": \"/v1/transfers/tr_2OKKQ4A6HN1WJy/transactions\",\n    \"data\": [\n      {\n        \"id\": \"ch_2Nn7UTSkz0cxq9\",\n        \"type\": \"charge\",\n        \"amount\": 500,\n        \"currency\": \"usd\",\n        \"net\": 455,\n        \"created\": 1376476192,\n        \"description\": null,\n        \"fee\": 45,\n        \"fee_details\": [\n          {\n            \"amount\": 45,\n            \"currency\": \"usd\",\n            \"type\": \"stripe_fee\",\n            \"description\": \"Stripe processing fees\",\n            \"application\": null\n          }\n        ]\n      },\n      {\n        \"id\": \"ch_2Nn8hBMCCN0b1r\",\n        \"type\": \"charge\",\n        \"amount\": 500,\n        \"currency\": \"usd\",\n        \"net\": 455,\n        \"created\": 1376476252,\n        \"description\": null,\n        \"fee\": 45,\n        \"fee_details\": [\n          {\n            \"amount\": 45,\n            \"currency\": \"usd\",\n            \"type\": \"stripe_fee\",\n            \"description\": \"Stripe processing fees\",\n            \"application\": null\n          }\n        ]\n      },\n      {\n        \"id\": \"ch_2Nn9rrWLlKk7Mj\",\n        \"type\": \"charge\",\n        \"amount\": 500,\n        \"currency\": \"usd\",\n        \"net\": 455,\n        \"created\": 1376476312,\n        \"description\": null,\n        \"fee\": 45,\n        \"fee_details\": [\n          {\n            \"amount\": 45,\n            \"currency\": \"usd\",\n            \"type\": \"stripe_fee\",\n            \"description\": \"Stripe processing fees\",\n            \"application\": null\n          }\n        ]\n      },\n      {\n        \"id\": \"ch_2Nn9z9LTfcoJvW\",\n        \"type\": \"charge\",\n        \"amount\": 100,\n        \"currency\": \"usd\",\n        \"net\": 67,\n        \"created\": 1376476323,\n        \"description\": null,\n        \"fee\": 33,\n        \"fee_details\": [\n          {\n            \"amount\": 33,\n            \"currency\": \"usd\",\n            \"type\": \"stripe_fee\",\n            \"description\": \"Stripe processing fees\",\n            \"application\": null\n          }\n        ]\n      },\n      {\n        \"id\": \"ch_2Nn9jymNURQqY5\",\n        \"type\": \"charge\",\n        \"amount\": 100,\n        \"currency\": \"usd\",\n        \"net\": 67,\n        \"created\": 1376476323,\n        \"description\": null,\n        \"fee\": 33,\n        \"fee_details\": [\n          {\n            \"amount\": 33,\n            \"currency\": \"usd\",\n            \"type\": \"stripe_fee\",\n            \"description\": \"Stripe processing fees\",\n            \"application\": null\n          }\n        ]\n      }\n    ]\n  },\n  \"other_transfers\": [\n    \"tr_2OKKQ4A6HN1WJy\"\n  ],\n  \"account\": null,\n  \"description\": \"STRIPE TRANSFER\",\n  \"metadata\": {\n  },\n  \"statement_descriptor\": null,\n  \"recipient\": null\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "post" : {
        "description" : "Updates the specified transfer by setting the values of the parameters passed. Any parameters not provided will be left unchanged.",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "description",
          "in" : "formData",
          "description" : "An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking. This will be unset if you POST an empty value.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "metadata",
          "in" : "formData",
          "description" : "A set of key/value pairs that you can attach to an item. It can be useful for storing additional information about the item in a structured format. You can unset individual keys if you POST an empty value for that key. You can clear all keys if you POST an empty value for metadata.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : { },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "transfer_ID",
        "in" : "path",
        "description" : "The identifier of the transfer.",
        "required" : false,
        "type" : "string"
      } ]
    },
    "/transfers/{transfer_ID}/cancel" : {
      "post" : {
        "description" : "Cancels a transfer that has previously been created. Funds will be refunded\nto your available balance, and the fees you were originally charged on the\ntransfer will be refunded. You may not cancel transfers that have already\nbeen paid out, or automatic Stripe transfers.\n",
        "schemes" : [ "http" ],
        "parameters" : [ {
          "name" : "expand[]",
          "in" : "query",
          "description" : "Many objects contain the id of another object in their response properties. Those objects can be expanded in\ninline with the expand request parameter. Objects that can be expanded are noted in this documentation.\n\nThis parameter is available on all API requests, and applies to the response of that request only. You can nes\nexpand requests with the dot property. For example, requesting invoice.customer on a charge will expand the invoice\nproperty into a full invoice object, and will then expand the customer property on that invoice into a full customer\nobject. You can expand multiple things at once by sending an array.\n",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Stripe-Version",
          "in" : "header",
          "description" : "When we make backwards-incompatible changes to the API, we release new dated versions.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "examples" : {
              "application/json" : "{\n  \"id\": \"tr_2OKKQ4A6HN1WJy\",\n  \"object\": \"transfer\",\n  \"date\": 1376524800,\n  \"livemode\": false,\n  \"amount\": 286710,\n  \"currency\": \"usd\",\n  \"status\": \"paid\",\n  \"balance_transaction\": \"txn_2hrAStwRKjXiIp\",\n  \"summary\": {\n    \"charge_gross\": 316670,\n    \"charge_fees\": 29960,\n    \"charge_fee_details\": [\n      {\n        \"amount\": 29960,\n        \"currency\": \"usd\",\n        \"type\": \"stripe_fee\",\n        \"description\": null,\n        \"application\": null\n      }\n    ],\n    \"refund_gross\": 0,\n    \"refund_fees\": 0,\n    \"refund_fee_details\": [\n\n    ],\n    \"adjustment_gross\": 0,\n    \"adjustment_fees\": 0,\n    \"adjustment_fee_details\": [\n\n    ],\n    \"validation_fees\": 0,\n    \"validation_count\": 0,\n    \"charge_count\": 682,\n    \"refund_count\": 0,\n    \"adjustment_count\": 0,\n    \"net\": 286710,\n    \"currency\": \"usd\",\n    \"collected_fee_gross\": 0,\n    \"collected_fee_count\": 0,\n    \"collected_fee_refund_gross\": 0,\n    \"collected_fee_refund_count\": 0\n  },\n  \"transactions\": {\n    \"object\": \"list\",\n    \"count\": 682,\n    \"url\": \"/v1/transfers/tr_2OKKQ4A6HN1WJy/transactions\",\n    \"data\": [\n      {\n        \"id\": \"ch_2Nn7UTSkz0cxq9\",\n        \"type\": \"charge\",\n        \"amount\": 500,\n        \"currency\": \"usd\",\n        \"net\": 455,\n        \"created\": 1376476192,\n        \"description\": null,\n        \"fee\": 45,\n        \"fee_details\": [\n          {\n            \"amount\": 45,\n            \"currency\": \"usd\",\n            \"type\": \"stripe_fee\",\n            \"description\": \"Stripe processing fees\",\n            \"application\": null\n          }\n        ]\n      },\n      {\n        \"id\": \"ch_2Nn8hBMCCN0b1r\",\n        \"type\": \"charge\",\n        \"amount\": 500,\n        \"currency\": \"usd\",\n        \"net\": 455,\n        \"created\": 1376476252,\n        \"description\": null,\n        \"fee\": 45,\n        \"fee_details\": [\n          {\n            \"amount\": 45,\n            \"currency\": \"usd\",\n            \"type\": \"stripe_fee\",\n            \"description\": \"Stripe processing fees\",\n            \"application\": null\n          }\n        ]\n      },\n      {\n        \"id\": \"ch_2Nn9rrWLlKk7Mj\",\n        \"type\": \"charge\",\n        \"amount\": 500,\n        \"currency\": \"usd\",\n        \"net\": 455,\n        \"created\": 1376476312,\n        \"description\": null,\n        \"fee\": 45,\n        \"fee_details\": [\n          {\n            \"amount\": 45,\n            \"currency\": \"usd\",\n            \"type\": \"stripe_fee\",\n            \"description\": \"Stripe processing fees\",\n            \"application\": null\n          }\n        ]\n      },\n      {\n        \"id\": \"ch_2Nn9z9LTfcoJvW\",\n        \"type\": \"charge\",\n        \"amount\": 100,\n        \"currency\": \"usd\",\n        \"net\": 67,\n        \"created\": 1376476323,\n        \"description\": null,\n        \"fee\": 33,\n        \"fee_details\": [\n          {\n            \"amount\": 33,\n            \"currency\": \"usd\",\n            \"type\": \"stripe_fee\",\n            \"description\": \"Stripe processing fees\",\n            \"application\": null\n          }\n        ]\n      },\n      {\n        \"id\": \"ch_2Nn9jymNURQqY5\",\n        \"type\": \"charge\",\n        \"amount\": 100,\n        \"currency\": \"usd\",\n        \"net\": 67,\n        \"created\": 1376476323,\n        \"description\": null,\n        \"fee\": 33,\n        \"fee_details\": [\n          {\n            \"amount\": 33,\n            \"currency\": \"usd\",\n            \"type\": \"stripe_fee\",\n            \"description\": \"Stripe processing fees\",\n            \"application\": null\n          }\n        ]\n      }\n    ]\n  },\n  \"other_transfers\": [\n    \"tr_2OKKQ4A6HN1WJy\"\n  ],\n  \"account\": null,\n  \"description\": \"STRIPE TRANSFER\",\n  \"metadata\": {\n  },\n  \"statement_descriptor\": null,\n  \"recipient\": null\n}"
            }
          },
          "400" : {
            "description" : "Bad Request - Often missing a required parameter.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "401" : {
            "description" : "Unauthorized - No valid API key provided.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "500" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "402" : {
            "description" : "Request Failed - Parameters were valid but request failed.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "502" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "404" : {
            "description" : "Not Found - The requested item doesn't exist.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "503" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          },
          "504" : {
            "description" : "Server errors - something went wrong on Stripe's end.\n",
            "schema" : {
              "type" : "StringSchemaProperty"
            },
            "examples" : {
              "application/json" : "{\n  \"error\": {\n    \"type\": \"invalid_request_error\",\n    \"message\": \"No such charge: ch_2Vcu103KQjX3Ey\",\n    \"code\": \"missing\",\n    \"param\": \"id\"\n  }\n}"
            }
          }
        },
        "security" : [ ]
      },
      "parameters" : [ {
        "name" : "transfer_ID",
        "in" : "path",
        "description" : "The identifier of the transfer.",
        "required" : false,
        "type" : "string"
      } ]
    }
  },
  "securityDefinitions" : {
    "apiKey" : {
      "type" : "apiKey",
      "name" : "x-Gateway-APIKey",
      "in" : "header"
    }
  },
  "definitions" : {
    "balance_transaction" : {
      "type" : "object"
    },
    "cards" : {
      "type" : "object"
    },
    "invoice_items" : {
      "type" : "object"
    },
    "invoice-line_items" : {
      "type" : "object"
    },
    "subscription" : {
      "type" : "object"
    },
    "delete" : {
      "type" : "object"
    },
    "balance" : {
      "type" : "object"
    },
    "balance_transactions" : {
      "type" : "object"
    },
    "invoices" : {
      "type" : "object"
    },
    "coupons" : {
      "type" : "object"
    },
    "transfers" : {
      "type" : "object"
    },
    "customers" : {
      "type" : "object"
    },
    "event" : {
      "type" : "object"
    },
    "plan" : {
      "type" : "object"
    },
    "events" : {
      "type" : "object"
    },
    "dispute" : {
      "type" : "object"
    },
    "charge" : {
      "type" : "object"
    },
    "coupon" : {
      "type" : "object"
    },
    "token" : {
      "type" : "object"
    },
    "charges" : {
      "type" : "object"
    },
    "transfer" : {
      "type" : "object"
    },
    "invoice_item" : {
      "type" : "object"
    },
    "plans" : {
      "type" : "object"
    },
    "recipients" : {
      "type" : "object"
    },
    "recipient" : {
      "type" : "object"
    },
    "application_fees" : {
      "type" : "object"
    },
    "application_fee" : {
      "type" : "object"
    },
    "invoice" : {
      "type" : "object"
    },
    "account" : {
      "type" : "object"
    },
    "card" : {
      "type" : "object"
    },
    "customer" : {
      "type" : "object"
    }
  },
  "parameters" : { },
  "externalDocs" : {
    "description" : "Headline",
    "url" : "Stripe is a company that provides a way for individuals and businesses to accept payments over the internet."
  },
  "securityRequirement" : [ {
    "apiKey" : [ ]
  } ]
}