{
  "swagger" : "2.0",
  "info" : {
    "description" : "* [Sign up for a developer API key!](https://www.synq.fm/register)\n* [SYNQ API Guide](/)",
    "version" : "1.9.1",
    "title" : "SYNQ Video"
  },
  "host" : "api.synq.fm",
  "basePath" : "/v1",
  "schemes" : [ "http" ],
  "consumes" : [ "multipart/form-data", "application/x-www-form-urlencoded" ],
  "paths" : {
    "/video/create" : {
      "post" : {
        "tags" : [ "video" ],
        "summary" : "Create a new video, optionally setting some metadata fields.",
        "description" : "Create a new video, optionally setting some metadata fields. You may optionally set some of the metadata associated with the video. Only fields inside the \"userdata\" field can be set.",
        "operationId" : "create",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "api_key",
          "in" : "formData",
          "required" : true,
          "type" : "string",
          "default" : "a1df31e82e614c89b3f16f2f9ce431c2"
        }, {
          "name" : "userdata",
          "in" : "formData",
          "description" : "Additional metadata that will be associated with the video",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A video object, containing all metadata members."
          },
          "400" : {
            "description" : "An error occurred"
          }
        }
      }
    },
    "/video/details" : {
      "post" : {
        "tags" : [ "video" ],
        "summary" : "Return details about a video.",
        "description" : "Return details about a video. You may optionally request that only some of the metadata fields are returned.",
        "operationId" : "details",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "api_key",
          "in" : "formData",
          "required" : true,
          "type" : "string",
          "default" : "a1df31e82e614c89b3f16f2f9ce431c2"
        }, {
          "name" : "video_id",
          "in" : "formData",
          "description" : "ID of the video to retrieve the metadata from",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A video object, containing all metadata members."
          },
          "400" : {
            "description" : "An error occurred"
          }
        }
      }
    },
    "/video/query" : {
      "post" : {
        "tags" : [ "video" ],
        "summary" : "Perform a JavaScript query to return video objects matching any desired criteria.",
        "description" : "Find videos matching any criteria, by running a JavaScript function over each video object. A detailed tutorial on how to use this functionality is available on the [documentation page](https://www.synq.fm/queries-video-api/).",
        "operationId" : "query",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "api_key",
          "in" : "formData",
          "required" : true,
          "type" : "string",
          "default" : "a1df31e82e614c89b3f16f2f9ce431c2"
        }, {
          "name" : "filter",
          "in" : "formData",
          "description" : "JavaScript code to be run over each video object, to determine what should be returend.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of arbitrary elements, up to one element for each video object",
            "schema" : {
              "type" : "StringSchemaProperty"
            }
          },
          "400" : {
            "description" : "An error occurred"
          }
        }
      }
    },
    "/video/stream" : {
      "post" : {
        "tags" : [ "video" ],
        "summary" : "Returns urls for streaming.",
        "description" : "Returns a stream url that you can stream to from your broadcasting software, and a playback url people can use to watch the stream.",
        "operationId" : "stream",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "api_key",
          "in" : "formData",
          "required" : true,
          "type" : "string",
          "default" : "a1df31e82e614c89b3f16f2f9ce431c2"
        }, {
          "name" : "video_id",
          "in" : "formData",
          "description" : "The ID of the video you want to stream to. The video needs to have been previously created.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSON object with urls for streaming.",
            "schema" : {
              "type" : "StringSchemaProperty"
            }
          },
          "400" : {
            "description" : "An error occurred"
          }
        }
      }
    },
    "/video/update" : {
      "post" : {
        "tags" : [ "video" ],
        "summary" : "Update a video's metadata.",
        "description" : "Update a video's metadata through JavaScript code. Only fields inside the \"userdata\" object can be set.",
        "operationId" : "update",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "api_key",
          "in" : "formData",
          "required" : true,
          "type" : "string",
          "default" : "a1df31e82e614c89b3f16f2f9ce431c2"
        }, {
          "name" : "video_id",
          "in" : "formData",
          "description" : "The ID of the video whose metadata will be updated",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "source",
          "in" : "formData",
          "description" : "JavaScript code to execute on the video object.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A video object, containing all metadata members."
          },
          "400" : {
            "description" : "An error occurred"
          }
        }
      }
    },
    "/video/upload" : {
      "post" : {
        "tags" : [ "video" ],
        "summary" : "Return parameters needed for uploading a video file.",
        "description" : "Return parameters needed for uploading a video file to Amazon Simple Storage Service. See http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-post-example.html as well as the language-specific code-examples.\n#### *Example request*\n```shell\ncurl -s https://api.synq.fm/v1/video/upload \\\n  -F api_key=${SYNQ_API_KEY} \\\n  -F video_id=2d81c30ce62f4dfdb501dbca96c7ae56\n```\n\n#### *Example response*\n```json\n{\n  \"action\": \"https://synqfm.s3.amazonaws.com/\",\n  \"AWSAccessKeyId\": \"AKIAIP77Y7MMX3ITZMFA\",\n  \"Content-Type\": \"video/mp4\",\n  \"Policy\": \"eyJleHBpcmF0aW9uIiA6ICIyMDE2LTA0LTIyVDE5OjAyOjI2LjE3MloiLCAiY29uZGl0aW9ucyIgOiBbeyJidWNrZXQiIDogInN5bnFmbSJ9LCB7ImFjbCIgOiAicHVibGljLXJlYWQifSwgWyJzdGFydHMtd2l0aCIsICIka2V5IiwgInByb2plY3RzLzZlLzYzLzZlNjNiNzUyYTE4NTRkZGU4ODViNWNjNDcyZWRmNTY5L3VwbG9hZHMvdmlkZW9zLzJkLzgxLzJkODFjMzBjZTYyZjRkZmRiNTAxZGJjYTk2YzdhZTU2Lm1wNCJdLCBbInN0YXJ0cy13aXRoIiwgIiRDb250ZW50LVR5cGUiLCAidmlkZW8vbXA0Il0sIFsiY29udGVudC1sZW5ndGgtcmFuZ2UiLCAwLCAxMDk5NTExNjI3Nzc2XV19\",\n  \"Signature\": \"ysqDemlKXKr6hKzVFP0hCGgf/cs=\",\n  \"acl\": \"public-read\",\n  \"key\": \"projects/6e/63/6e63b752a1854dde885b5cc472edf569/uploads/videos/2d/81/2d81c30ce62f4dfdb501dbca96c7ae56.mp4\"\n}\n```\n\nTo upload the file, you can then make a multipart POST request to the URL in `action`, and for all the other parameters returned, set them as form parameters.\n\nGiven the parameters above, you would upload a file `test.mp4` using cURL like this:\n\n```shell\ncurl -s https://synqfm.s3.amazonaws.com/ \\\n  -F AWSAccessKeyId=\"AKIAIP77Y7MMX3ITZMFA\" \\\n  -F Content-Type=\"video/mp4\" \\\n  -F Policy=\"eyJleHBpcmF0aW9uIiA6ICIyMDE2LTA0LTIyVDE5OjAyOjI2LjE3MloiLCAiY29uZGl0aW9ucyIgOiBbeyJidWNrZXQiIDogInN5bnFmbSJ9LCB7ImFjbCIgOiAicHVibGljLXJlYWQifSwgWyJzdGFydHMtd2l0aCIsICIka2V5IiwgInByb2plY3RzLzZlLzYzLzZlNjNiNzUyYTE4NTRkZGU4ODViNWNjNDcyZWRmNTY5L3VwbG9hZHMvdmlkZW9zLzJkLzgxLzJkODFjMzBjZTYyZjRkZmRiNTAxZGJjYTk2YzdhZTU2Lm1wNCJdLCBbInN0YXJ0cy13aXRoIiwgIiRDb250ZW50LVR5cGUiLCAidmlkZW8vbXA0Il0sIFsiY29udGVudC1sZW5ndGgtcmFuZ2UiLCAwLCAxMDk5NTExNjI3Nzc2XV19\" \\\n  -F Signature=\"ysqDemlKXKr6hKzVFP0hCGgf/cs=\" \\\n  -F acl=\"public-read\" \\\n  -F key=\"projects/6e/63/6e63b752a1854dde885b5cc472edf569/uploads/videos/2d/81/2d81c30ce62f4dfdb501dbca96c7ae56.mp4\" \\\n  -F file=\"@my_video_file.mp4\"\n```\n\n",
        "operationId" : "upload",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "api_key",
          "in" : "formData",
          "required" : true,
          "type" : "string",
          "default" : "a1df31e82e614c89b3f16f2f9ce431c2"
        }, {
          "name" : "video_id",
          "in" : "formData",
          "description" : "The ID of the video you are going to upload into. The video needs to have been previously created.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "An object containing all parameters needed for uploading the file."
          },
          "400" : {
            "description" : "An error occurred"
          }
        }
      }
    },
    "/video/uploader" : {
      "post" : {
        "tags" : [ "video" ],
        "summary" : "Return embeddable url to an uploader widget",
        "description" : "Returns an embeddable url, that contains an uploader widget that allows you to easily upload any mp4. Great way to simplify the uploading process for end users.",
        "operationId" : "uploader",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "api_key",
          "in" : "formData",
          "required" : true,
          "type" : "string",
          "default" : "a1df31e82e614c89b3f16f2f9ce431c2"
        }, {
          "name" : "video_id",
          "in" : "formData",
          "description" : "The ID of the video you are going to upload into. The video needs to have been previously created.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "timeout",
          "in" : "formData",
          "description" : "How long the uploader widget works for. Anything from '30 minutes' to '2 days'.",
          "required" : false,
          "type" : "string",
          "default" : "2 hours"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSON object with an embeddable url to an uploader page/widget.",
            "schema" : {
              "type" : "StringSchemaProperty"
            }
          },
          "400" : {
            "description" : "An error occurred"
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "apiKey" : {
      "type" : "apiKey",
      "name" : "x-Gateway-APIKey",
      "in" : "header"
    }
  },
  "definitions" : {
    "StreamConfigurationObject" : {
      "type" : "object",
      "properties" : {
        "rtmp_host" : {
          "type" : "string",
          "example" : "ec2-54-171-205-23.eu-west-1.compute.amazonaws.com"
        },
        "rtmp_key" : {
          "type" : "string",
          "example" : "live/ce29d1cb5da48a564d2c9f62be7ade06"
        },
        "rtmp_port" : {
          "type" : "string",
          "example" : "1935"
        },
        "rtmp_url" : {
          "type" : "string",
          "example" : "rtmp://ec2-54-171-205-23.eu-west-1.compute.amazonaws.com:1935/live/ce29d1cb5da48a564d2c9f62be7ade06"
        }
      }
    },
    "UploadParameterObject" : {
      "type" : "object",
      "properties" : {
        "AWSAccessKeyId" : {
          "type" : "string"
        },
        "Content-Type" : {
          "type" : "string"
        },
        "Policy" : {
          "type" : "string"
        },
        "Signature" : {
          "type" : "string"
        },
        "acl" : {
          "type" : "string"
        },
        "action" : {
          "type" : "string"
        },
        "key" : {
          "type" : "string"
        }
      }
    },
    "VideoObject" : {
      "type" : "object",
      "required" : [ "created_at", "state", "updated_at", "userdata", "video_id" ],
      "properties" : {
        "created_at" : {
          "type" : "string"
        },
        "input" : {
          "type" : "object"
        },
        "outputs" : {
          "type" : "object"
        },
        "state" : {
          "type" : "string"
        },
        "updated_at" : {
          "type" : "string"
        },
        "userdata" : {
          "type" : "object"
        },
        "video_id" : {
          "type" : "string"
        }
      }
    },
    "ErrorObject" : {
      "type" : "object",
      "required" : [ "message", "name", "url" ],
      "properties" : {
        "details" : {
          "type" : "object"
        },
        "message" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        }
      }
    }
  },
  "parameters" : { },
  "securityRequirement" : [ {
    "apiKey" : [ ]
  } ]
}