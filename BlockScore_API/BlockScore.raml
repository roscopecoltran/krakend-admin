#%RAML 0.8
title: BlockScore
version: "4"
baseUri: "https://api.blockscore.com"
protocols: [HTTP]
schemas: 
    - 
        questionResponse: |
                {
                  "required" : true ,
                  "$schema" : "http://json-schema.org/draft-03/schema" ,
                  "type" : "object" ,
                  "properties" : {
                    "object" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "id" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "created_at" : {
                      "type" : "number" ,
                      "required" : false
                    } ,
                    "updated_at" : {
                      "type" : "number" ,
                      "required" : false
                    } ,
                    "livemode" : {
                      "type" : "boolean" ,
                      "required" : false
                    } ,
                    "person_id" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "score" : {
                      "type" : "number" ,
                      "required" : false
                    } ,
                    "expired" : {
                      "type" : "boolean" ,
                      "required" : false
                    } ,
                    "time_limit" : {
                      "type" : "number" ,
                      "required" : false
                    } ,
                    "questions" : {
                      "type" : "array" ,
                      "required" : false ,
                      "items" : [
                        {
                          "type" : "object" ,
                          "properties" : {
                            "id" : {
                              "type" : "number" ,
                              "required" : false
                            } ,
                            "question" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "answers" : {
                              "type" : "array" ,
                              "required" : false ,
                              "items" : [
                                {
                                  "type" : "object" ,
                                  "properties" : {
                                    "id" : {
                                      "type" : "number" ,
                                      "required" : false
                                    } ,
                                    "answer" : {
                                      "type" : "string" ,
                                      "required" : false
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
        candidateHitsResponse: |
                {
                  "required" : true ,
                  "$schema" : "http://json-schema.org/draft-03/schema" ,
                  "type" : "object" ,
                  "properties" : {
                    "object" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "data" : {
                      "type" : "array" ,
                      "required" : false ,
                      "items" : [
                        {
                          "type" : "object" ,
                          "properties" : {
                            "object" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "id" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "created_at" : {
                              "type" : "number" ,
                              "required" : false
                            } ,
                            "updated_at" : {
                              "type" : "number" ,
                              "required" : false
                            } ,
                            "livemode" : {
                              "type" : "boolean" ,
                              "required" : false
                            } ,
                            "note" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "ssn" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "passport" : {
                              "type" : "object" ,
                              "required" : false
                            } ,
                            "date_of_birth" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "name_first" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "name_middle" : {
                              "type" : "object" ,
                              "required" : false
                            } ,
                            "name_last" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "address_street1" : {
                              "type" : "object" ,
                              "required" : false
                            } ,
                            "address_street2" : {
                              "type" : "object" ,
                              "required" : false
                            } ,
                            "address_city" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "address_subdivision" : {
                              "type" : "object" ,
                              "required" : false
                            } ,
                            "address_postal_code" : {
                              "type" : "object" ,
                              "required" : false
                            } ,
                            "address_country_code" : {
                              "type" : "string" ,
                              "required" : false
                            }
                          }
                        }
                      ]
                    }
                  }
                }
        listAllCandidatesResponse: |
                {
                  "required" : true ,
                  "$schema" : "http://json-schema.org/draft-03/schema" ,
                  "type" : "object" ,
                  "properties" : {
                    "total_count" : {
                      "type" : "number" ,
                      "required" : false
                    } ,
                    "has_more" : {
                      "type" : "boolean" ,
                      "required" : false
                    } ,
                    "object" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "data" : {
                      "type" : "array" ,
                      "required" : false ,
                      "items" : [
                        {
                          "type" : "object" ,
                          "properties" : {
                            "object" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "id" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "created_at" : {
                              "type" : "number" ,
                              "required" : false
                            } ,
                            "updated_at" : {
                              "type" : "number" ,
                              "required" : false
                            } ,
                            "livemode" : {
                              "type" : "boolean" ,
                              "required" : false
                            } ,
                            "note" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "ssn" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "passport" : {
                              "type" : "object" ,
                              "required" : false
                            } ,
                            "date_of_birth" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "name_first" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "name_middle" : {
                              "type" : "object" ,
                              "required" : false
                            } ,
                            "name_last" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "address_street1" : {
                              "type" : "object" ,
                              "required" : false
                            } ,
                            "address_street2" : {
                              "type" : "object" ,
                              "required" : false
                            } ,
                            "address_city" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "address_subdivision" : {
                              "type" : "object" ,
                              "required" : false
                            } ,
                            "address_postal_code" : {
                              "type" : "object" ,
                              "required" : false
                            } ,
                            "address_country_code" : {
                              "type" : "string" ,
                              "required" : false
                            }
                          }
                        }
                      ]
                    }
                  }
                }
        historicalQuestionSetsResponse: |
                {
                  "required" : true ,
                  "$schema" : "http://json-schema.org/draft-03/schema" ,
                  "type" : "object" ,
                  "properties" : {
                    "total_count" : {
                      "type" : "number" ,
                      "required" : false
                    } ,
                    "has_more" : {
                      "type" : "boolean" ,
                      "required" : false
                    } ,
                    "object" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "data" : {
                      "type" : "array" ,
                      "required" : false ,
                      "items" : [
                        {
                          "type" : "object" ,
                          "properties" : {
                            "object" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "id" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "created_at" : {
                              "type" : "number" ,
                              "required" : false
                            } ,
                            "updated_at" : {
                              "type" : "number" ,
                              "required" : false
                            } ,
                            "livemode" : {
                              "type" : "boolean" ,
                              "required" : false
                            } ,
                            "person_id" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "score" : {
                              "type" : "number" ,
                              "required" : false
                            } ,
                            "expired" : {
                              "type" : "boolean" ,
                              "required" : false
                            } ,
                            "time_limit" : {
                              "type" : "number" ,
                              "required" : false
                            } ,
                            "questions" : {
                              "type" : "array" ,
                              "required" : false ,
                              "items" : [
                                {
                                  "type" : "object" ,
                                  "properties" : {
                                    "id" : {
                                      "type" : "number" ,
                                      "required" : false
                                    } ,
                                    "question" : {
                                      "type" : "string" ,
                                      "required" : false
                                    } ,
                                    "answers" : {
                                      "type" : "array" ,
                                      "required" : false ,
                                      "items" : [
                                        {
                                          "type" : "object" ,
                                          "properties" : {
                                            "id" : {
                                              "type" : "number" ,
                                              "required" : false
                                            } ,
                                            "answer" : {
                                              "type" : "string" ,
                                              "required" : false
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
        verificationsListResponse: |
                {
                  "required" : true ,
                  "$schema" : "http://json-schema.org/draft-03/schema" ,
                  "type" : "object" ,
                  "properties" : {
                    "total_count" : {
                      "type" : "number" ,
                      "required" : false
                    } ,
                    "has_more" : {
                      "type" : "boolean" ,
                      "required" : false
                    } ,
                    "object" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "data" : {
                      "type" : "array" ,
                      "required" : false ,
                      "items" : [
                        {
                          "type" : "object" ,
                          "properties" : {
                            "object" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "id" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "created_at" : {
                              "type" : "number" ,
                              "required" : false
                            } ,
                            "updated_at" : {
                              "type" : "number" ,
                              "required" : false
                            } ,
                            "status" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "livemode" : {
                              "type" : "boolean" ,
                              "required" : false
                            } ,
                            "phone_number" : {
                              "type" : "object" ,
                              "required" : false
                            } ,
                            "ip_address" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "birth_day" : {
                              "type" : "number" ,
                              "required" : false
                            } ,
                            "birth_month" : {
                              "type" : "number" ,
                              "required" : false
                            } ,
                            "birth_year" : {
                              "type" : "number" ,
                              "required" : false
                            } ,
                            "name_first" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "name_middle" : {
                              "type" : "object" ,
                              "required" : false
                            } ,
                            "name_last" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "address_street1" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "address_street2" : {
                              "type" : "object" ,
                              "required" : false
                            } ,
                            "address_city" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "address_subdivision" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "address_postal_code" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "address_country_code" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "document_type" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "document_value" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "note" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "details" : {
                              "type" : "object" ,
                              "required" : false ,
                              "properties" : {
                                "address" : {
                                  "type" : "string" ,
                                  "required" : false
                                } ,
                                "address_risk" : {
                                  "type" : "string" ,
                                  "required" : false
                                } ,
                                "identification" : {
                                  "type" : "string" ,
                                  "required" : false
                                } ,
                                "date_of_birth" : {
                                  "type" : "string" ,
                                  "required" : false
                                } ,
                                "ofac" : {
                                  "type" : "string" ,
                                  "required" : false
                                } ,
                                "pep" : {
                                  "type" : "string" ,
                                  "required" : false
                                }
                              }
                            } ,
                            "question_sets" : {
                              "type" : "array" ,
                              "required" : false ,
                              "items" : [
                                {
                                  "type" : "string"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
        candidateResponse: |
                {
                  "required" : true ,
                  "$schema" : "http://json-schema.org/draft-03/schema" ,
                  "type" : "object" ,
                  "properties" : {
                    "object" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "id" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "created_at" : {
                      "type" : "number" ,
                      "required" : false
                    } ,
                    "updated_at" : {
                      "type" : "number" ,
                      "required" : false
                    } ,
                    "livemode" : {
                      "type" : "boolean" ,
                      "required" : false
                    } ,
                    "note" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "ssn" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "passport" : {
                      "type" : "object" ,
                      "required" : false
                    } ,
                    "date_of_birth" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "name_first" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "name_middle" : {
                      "type" : "object" ,
                      "required" : false
                    } ,
                    "name_last" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "address_street1" : {
                      "type" : "object" ,
                      "required" : false
                    } ,
                    "address_street2" : {
                      "type" : "object" ,
                      "required" : false
                    } ,
                    "address_city" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "address_subdivision" : {
                      "type" : "object" ,
                      "required" : false
                    } ,
                    "address_postal_code" : {
                      "type" : "object" ,
                      "required" : false
                    } ,
                    "address_country_code" : {
                      "type" : "string" ,
                      "required" : false
                    }
                  }
                }
        listAllCompaniesResponse: |
                {
                  "required" : true ,
                  "$schema" : "http://json-schema.org/draft-03/schema" ,
                  "type" : "object" ,
                  "properties" : {
                    "total_count" : {
                      "type" : "number" ,
                      "required" : false
                    } ,
                    "has_more" : {
                      "type" : "boolean" ,
                      "required" : false
                    } ,
                    "object" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "data" : {
                      "type" : "array" ,
                      "required" : false ,
                      "items" : [
                        {
                          "type" : "object" ,
                          "properties" : {
                            "object" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "id" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "created_at" : {
                              "type" : "number" ,
                              "required" : false
                            } ,
                            "updated_at" : {
                              "type" : "number" ,
                              "required" : false
                            } ,
                            "status" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "livemode" : {
                              "type" : "boolean" ,
                              "required" : false
                            } ,
                            "entity_name" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "tax_id" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "incorporation_day" : {
                              "type" : "number" ,
                              "required" : false
                            } ,
                            "incorporation_month" : {
                              "type" : "number" ,
                              "required" : false
                            } ,
                            "incorporation_year" : {
                              "type" : "number" ,
                              "required" : false
                            } ,
                            "incorporation_state" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "incorporation_country_code" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "incorporation_type" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "dbas" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "registration_number" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "email" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "url" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "phone_number" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "note" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "ip_address" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "address_street1" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "address_street2" : {
                              "type" : "object" ,
                              "required" : false
                            } ,
                            "address_city" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "address_subdivision" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "address_postal_code" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "address_country_code" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "details" : {
                              "type" : "object" ,
                              "required" : false ,
                              "properties" : {
                                "ofac" : {
                                  "type" : "string" ,
                                  "required" : false
                                } ,
                                "state" : {
                                  "type" : "string" ,
                                  "required" : false
                                } ,
                                "tax_id" : {
                                  "type" : "string" ,
                                  "required" : false
                                } ,
                                "address" : {
                                  "type" : "string" ,
                                  "required" : false
                                } ,
                                "entity_name" : {
                                  "type" : "string" ,
                                  "required" : false
                                } ,
                                "incorp_date" : {
                                  "type" : "string" ,
                                  "required" : false
                                } ,
                                "country_code" : {
                                  "type" : "string" ,
                                  "required" : false
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
        watchlistsResponse: |
                {
                  "required" : true ,
                  "$schema" : "http://json-schema.org/draft-03/schema" ,
                  "type" : "object" ,
                  "properties" : {
                    "livemode" : {
                      "type" : "boolean" ,
                      "required" : false
                    } ,
                    "searched_lists" : {
                      "type" : "array" ,
                      "required" : false ,
                      "items" : [
                        {
                          "type" : "string"
                        }
                      ]
                    } ,
                    "count" : {
                      "type" : "number" ,
                      "required" : false
                    } ,
                    "matches" : {
                      "type" : "array" ,
                      "required" : false ,
                      "items" : [
                        {
                          "type" : "object" ,
                          "properties" : {
                            "id" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "watchlist_name" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "entry_type" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "matching_info" : {
                              "type" : "array" ,
                              "required" : false ,
                              "items" : [
                                {
                                  "type" : "string"
                                }
                              ]
                            } ,
                            "confidence" : {
                              "type" : "number" ,
                              "required" : false
                            } ,
                            "url" : {
                              "type" : "object" ,
                              "required" : false
                            } ,
                            "notes" : {
                              "type" : "object" ,
                              "required" : false
                            } ,
                            "title" : {
                              "type" : "object" ,
                              "required" : false
                            } ,
                            "name_full" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "alternate_names" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "date_of_birth" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "passport" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "ssn" : {
                              "type" : "object" ,
                              "required" : false
                            } ,
                            "address_street1" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "address_street2" : {
                              "type" : "object" ,
                              "required" : false
                            } ,
                            "address_city" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "address_state" : {
                              "type" : "object" ,
                              "required" : false
                            } ,
                            "address_postal_code" : {
                              "type" : "object" ,
                              "required" : false
                            } ,
                            "address_country_code" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "address_raw" : {
                              "type" : "string" ,
                              "required" : false
                            } ,
                            "names" : {
                              "type" : "array" ,
                              "required" : false ,
                              "items" : [
                                {
                                  "type" : "object" ,
                                  "properties" : {
                                    "name_primary" : {
                                      "type" : "boolean" ,
                                      "required" : false
                                    } ,
                                    "name_full" : {
                                      "type" : "string" ,
                                      "required" : false
                                    } ,
                                    "name_strength" : {
                                      "type" : "string" ,
                                      "required" : false
                                    }
                                  }
                                }
                              ]
                            } ,
                            "births" : {
                              "type" : "array" ,
                              "required" : false ,
                              "items" : [
                                {
                                  "type" : "object" ,
                                  "properties" : {
                                    "birth_day" : {
                                      "type" : "number" ,
                                      "required" : false
                                    } ,
                                    "birth_month" : {
                                      "type" : "number" ,
                                      "required" : false
                                    } ,
                                    "birth_year" : {
                                      "type" : "number" ,
                                      "required" : false
                                    } ,
                                    "birth_day_end" : {
                                      "type" : "object" ,
                                      "required" : false
                                    } ,
                                    "birth_month_end" : {
                                      "type" : "object" ,
                                      "required" : false
                                    } ,
                                    "birth_year_end" : {
                                      "type" : "object" ,
                                      "required" : false
                                    }
                                  }
                                }
                              ]
                            } ,
                            "documents" : {
                              "type" : "array" ,
                              "required" : false ,
                              "items" : [
                                {
                                  "type" : "object" ,
                                  "properties" : {
                                    "document_type" : {
                                      "type" : "string" ,
                                      "required" : false
                                    } ,
                                    "document_value" : {
                                      "type" : "string" ,
                                      "required" : false
                                    } ,
                                    "document_country_code" : {
                                      "type" : "string" ,
                                      "required" : false
                                    }
                                  }
                                }
                              ]
                            } ,
                            "addresses" : {
                              "type" : "array" ,
                              "required" : false ,
                              "items" : [
                                {
                                  "type" : "object" ,
                                  "properties" : {
                                    "address_street1" : {
                                      "type" : "string" ,
                                      "required" : false
                                    } ,
                                    "address_street2" : {
                                      "type" : "object" ,
                                      "required" : false
                                    } ,
                                    "address_city" : {
                                      "type" : "string" ,
                                      "required" : false
                                    } ,
                                    "address_state" : {
                                      "type" : "object" ,
                                      "required" : false
                                    } ,
                                    "address_postal_code" : {
                                      "type" : "object" ,
                                      "required" : false
                                    } ,
                                    "address_country_code" : {
                                      "type" : "string" ,
                                      "required" : false
                                    } ,
                                    "address_full" : {
                                      "type" : "string" ,
                                      "required" : false
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
        companyResponse: |
                {
                  "required" : true ,
                  "$schema" : "http://json-schema.org/draft-03/schema" ,
                  "type" : "object" ,
                  "properties" : {
                    "object" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "id" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "created_at" : {
                      "type" : "number" ,
                      "required" : false
                    } ,
                    "updated_at" : {
                      "type" : "number" ,
                      "required" : false
                    } ,
                    "status" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "livemode" : {
                      "type" : "boolean" ,
                      "required" : false
                    } ,
                    "entity_name" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "tax_id" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "incorporation_day" : {
                      "type" : "number" ,
                      "required" : false
                    } ,
                    "incorporation_month" : {
                      "type" : "number" ,
                      "required" : false
                    } ,
                    "incorporation_year" : {
                      "type" : "number" ,
                      "required" : false
                    } ,
                    "incorporation_state" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "incorporation_country_code" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "incorporation_type" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "dbas" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "registration_number" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "email" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "url" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "phone_number" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "note" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "ip_address" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "address_street1" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "address_street2" : {
                      "type" : "object" ,
                      "required" : false
                    } ,
                    "address_city" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "address_subdivision" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "address_postal_code" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "address_country_code" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "details" : {
                      "type" : "object" ,
                      "required" : false ,
                      "properties" : {
                        "ofac" : {
                          "type" : "string" ,
                          "required" : false
                        } ,
                        "state" : {
                          "type" : "string" ,
                          "required" : false
                        } ,
                        "tax_id" : {
                          "type" : "string" ,
                          "required" : false
                        } ,
                        "address" : {
                          "type" : "string" ,
                          "required" : false
                        } ,
                        "entity_name" : {
                          "type" : "string" ,
                          "required" : false
                        } ,
                        "incorp_date" : {
                          "type" : "string" ,
                          "required" : false
                        } ,
                        "country_code" : {
                          "type" : "string" ,
                          "required" : false
                        }
                      }
                    }
                  }
                }
        peopleResponse: |
                {
                  "required" : true ,
                  "$schema" : "http://json-schema.org/draft-03/schema" ,
                  "type" : "object" ,
                  "properties" : {
                    "object" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "id" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "created_at" : {
                      "type" : "number" ,
                      "required" : false
                    } ,
                    "updated_at" : {
                      "type" : "number" ,
                      "required" : false
                    } ,
                    "status" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "livemode" : {
                      "type" : "boolean" ,
                      "required" : false
                    } ,
                    "phone_number" : {
                      "type" : "object" ,
                      "required" : false
                    } ,
                    "ip_address" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "birth_day" : {
                      "type" : "number" ,
                      "required" : false
                    } ,
                    "birth_month" : {
                      "type" : "number" ,
                      "required" : false
                    } ,
                    "birth_year" : {
                      "type" : "number" ,
                      "required" : false
                    } ,
                    "name_first" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "name_middle" : {
                      "type" : "object" ,
                      "required" : false
                    } ,
                    "name_last" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "address_street1" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "address_street2" : {
                      "type" : "object" ,
                      "required" : false
                    } ,
                    "address_city" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "address_subdivision" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "address_postal_code" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "address_country_code" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "document_type" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "document_value" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "note" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "details" : {
                      "type" : "object" ,
                      "required" : false ,
                      "properties" : {
                        "address" : {
                          "type" : "string" ,
                          "required" : false
                        } ,
                        "address_risk" : {
                          "type" : "string" ,
                          "required" : false
                        } ,
                        "identification" : {
                          "type" : "string" ,
                          "required" : false
                        } ,
                        "date_of_birth" : {
                          "type" : "string" ,
                          "required" : false
                        } ,
                        "ofac" : {
                          "type" : "string" ,
                          "required" : false
                        } ,
                        "pep" : {
                          "type" : "string" ,
                          "required" : false
                        }
                      }
                    } ,
                    "question_sets" : {
                      "type" : "array" ,
                      "required" : false ,
                      "items" : [
                        {
                          "type" : "string"
                        }
                      ]
                    }
                  }
                }
        candidatesHistoryResponse: |
                {
                  "required" : true ,
                  "$schema" : "http://json-schema.org/draft-03/schema" ,
                  "type" : "array" ,
                  "items" : [
                    {
                      "type" : "object" ,
                      "properties" : {
                        "object" : {
                          "type" : "string" ,
                          "required" : false
                        } ,
                        "id" : {
                          "type" : "string" ,
                          "required" : false
                        } ,
                        "created_at" : {
                          "type" : "number" ,
                          "required" : false
                        } ,
                        "updated_at" : {
                          "type" : "number" ,
                          "required" : false
                        } ,
                        "livemode" : {
                          "type" : "boolean" ,
                          "required" : false
                        } ,
                        "note" : {
                          "type" : "object" ,
                          "required" : false
                        } ,
                        "ssn" : {
                          "type" : "object" ,
                          "required" : false
                        } ,
                        "passport" : {
                          "type" : "object" ,
                          "required" : false
                        } ,
                        "date_of_birth" : {
                          "type" : "object" ,
                          "required" : false
                        } ,
                        "name_first" : {
                          "type" : "string" ,
                          "required" : false
                        } ,
                        "name_middle" : {
                          "type" : "object" ,
                          "required" : false
                        } ,
                        "name_last" : {
                          "type" : "string" ,
                          "required" : false
                        } ,
                        "address_street1" : {
                          "type" : "object" ,
                          "required" : false
                        } ,
                        "address_street2" : {
                          "type" : "object" ,
                          "required" : false
                        } ,
                        "address_city" : {
                          "type" : "object" ,
                          "required" : false
                        } ,
                        "address_subdivision" : {
                          "type" : "object" ,
                          "required" : false
                        } ,
                        "address_postal_code" : {
                          "type" : "object" ,
                          "required" : false
                        } ,
                        "address_country_code" : {
                          "type" : "string" ,
                          "required" : false
                        }
                      }
                    } , {
                      "type" : "object" ,
                      "properties" : {
                        "object" : {
                          "type" : "string" ,
                          "required" : false
                        } ,
                        "id" : {
                          "type" : "string" ,
                          "required" : false
                        } ,
                        "created_at" : {
                          "type" : "number" ,
                          "required" : false
                        } ,
                        "updated_at" : {
                          "type" : "number" ,
                          "required" : false
                        } ,
                        "livemode" : {
                          "type" : "boolean" ,
                          "required" : false
                        } ,
                        "note" : {
                          "type" : "object" ,
                          "required" : false
                        } ,
                        "ssn" : {
                          "type" : "object" ,
                          "required" : false
                        } ,
                        "passport" : {
                          "type" : "object" ,
                          "required" : false
                        } ,
                        "date_of_birth" : {
                          "type" : "object" ,
                          "required" : false
                        } ,
                        "name_first" : {
                          "type" : "string" ,
                          "required" : false
                        } ,
                        "name_middle" : {
                          "type" : "object" ,
                          "required" : false
                        } ,
                        "name_last" : {
                          "type" : "string" ,
                          "required" : false
                        } ,
                        "address_street1" : {
                          "type" : "object" ,
                          "required" : false
                        } ,
                        "address_street2" : {
                          "type" : "object" ,
                          "required" : false
                        } ,
                        "address_city" : {
                          "type" : "object" ,
                          "required" : false
                        } ,
                        "address_subdivision" : {
                          "type" : "object" ,
                          "required" : false
                        } ,
                        "address_postal_code" : {
                          "type" : "object" ,
                          "required" : false
                        } ,
                        "address_country_code" : {
                          "type" : "object" ,
                          "required" : false
                        }
                      }
                    }
                  ]
                }
        candidateDeleteResponse: |
                {
                  "required" : true ,
                  "$schema" : "http://json-schema.org/draft-03/schema" ,
                  "type" : "object" ,
                  "properties" : {
                    "object" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "id" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "deleted" : {
                      "type" : "boolean" ,
                      "required" : false
                    } ,
                    "created_at" : {
                      "type" : "number" ,
                      "required" : false
                    } ,
                    "updated_at" : {
                      "type" : "number" ,
                      "required" : false
                    } ,
                    "livemode" : {
                      "type" : "boolean" ,
                      "required" : false
                    } ,
                    "note" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "ssn" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "passport" : {
                      "type" : "object" ,
                      "required" : false
                    } ,
                    "date_of_birth" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "name_first" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "name_middle" : {
                      "type" : "object" ,
                      "required" : false
                    } ,
                    "name_last" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "address_street1" : {
                      "type" : "object" ,
                      "required" : false
                    } ,
                    "address_street2" : {
                      "type" : "object" ,
                      "required" : false
                    } ,
                    "address_city" : {
                      "type" : "string" ,
                      "required" : false
                    } ,
                    "address_subdivision" : {
                      "type" : "object" ,
                      "required" : false
                    } ,
                    "address_postal_code" : {
                      "type" : "object" ,
                      "required" : false
                    } ,
                    "address_country_code" : {
                      "type" : "string" ,
                      "required" : false
                    }
                  }
                }
securitySchemes: 
    - 
        apiKey: 
            type: x-apiKey
            describedBy: 
                headers: 
                    Authorization: 
                        type: string
                        required: false
                        repeat: false
securedBy: 
    - 
        apiKey
/candidates: 
    displayName: /candidates
    get: 
        description: |
            List all candidates
            
            This endpoint will allow you to see a historical record of all candidates you have created.
            
            The list is displayed in reverse chronological order (newer candidates appear first).
        responses: 
            "200": 
                body: 
                    application/json: 
                        example: |
                            {
                              "total_count" : 5 ,
                              "has_more" : false ,
                              "object" : "list" ,
                              "data" : [
                                {
                                  "object" : "candidate" ,
                                  "id" : "544aba053163310002630500" ,
                                  "created_at" : 1414183429 ,
                                  "updated_at" : 1414183429 ,
                                  "livemode" : true ,
                                  "note" : "55555555" ,
                                  "ssn" : "0002" ,
                                  "passport" : null ,
                                  "date_of_birth" : "1940-08-11" ,
                                  "name_first" : "John" ,
                                  "name_middle" : null ,
                                  "name_last" : "Bredenkamp" ,
                                  "address_street1" : null ,
                                  "address_street2" : null ,
                                  "address_city" : "Harare" ,
                                  "address_subdivision" : null ,
                                  "address_postal_code" : null ,
                                  "address_country_code" : "AR"
                                }
                              ]
                            }
        protocols: [HTTP]
    post: 
        description: |
            Create a new candidate.
            This endpoint creates a new candidate.
        queryParameters: 
            note: 
                description: You can store additional information about the candidate here such as your internal system's identifier for this individual. This will allow you to keep track of them.
                type: string
                required: false
                repeat: false
            name_first: 
                description: The legal first name of the customer.
                type: string
                required: false
                repeat: false
            address_postal_code: 
                description: |
                    The postal code of the person. Also known as a ZIP code.
                    The country of the customer. Should be of the ISO code form.
                type: string
                required: false
                repeat: false
            address_country_code: 
                description: The country of the customer. Should be of the ISO code form.
                type: string
                required: false
                repeat: false
            date_of_birth: 
                description: The date of birth of the candidate in ISO form.
                type: string
                required: false
                repeat: false
            address_street1: 
                description: The primary street address of the customer. This is automatically normalized.
                type: string
                required: false
                repeat: false
            name_last: 
                description: The legal middle name of the customer.
                type: string
                required: false
                repeat: false
            address_street2: 
                description: The second address line typically used for apartment or suite numbers. This is automatically normalized.
                type: string
                required: false
                repeat: false
            address_city: 
                description: The city name of the customer. This is automatically normalized.
                type: string
                required: false
                repeat: false
            ssn: 
                description: This can be either the last 4 digits of the US Social Security Number or the whole SSN.
                type: string
                required: false
                repeat: false
            address_subdivision: 
                description: |
                    The subdivision of the entered country. For instance in the United States, this would be a 'state'.
                    The state of the customer. Should be of the FIPS code form. For example California would be CA.
                type: string
                required: false
                repeat: false
            name_middle: 
                description: The legal middle name of the customer.
                type: string
                required: false
                repeat: false
            passport: 
                description: The passport number of the individual being verified. This is only used for verifying non-US customers.
                type: string
                required: false
                repeat: false
        responses: 
            "201": 
                body: 
                    application/json: 
                        example: |
                            {
                              "object" : "candidate" ,
                              "id" : "544aba053163310002630500" ,
                              "created_at" : 1414183429 ,
                              "updated_at" : 1414183429 ,
                              "livemode" : true ,
                              "note" : "55555555" ,
                              "ssn" : "0002" ,
                              "passport" : null ,
                              "date_of_birth" : "1940-08-11" ,
                              "name_first" : "John" ,
                              "name_middle" : null ,
                              "name_last" : "Bredenkamp" ,
                              "address_street1" : null ,
                              "address_street2" : null ,
                              "address_city" : "Harare" ,
                              "address_subdivision" : null ,
                              "address_postal_code" : null ,
                              "address_country_code" : "AR"
                            }
        protocols: [HTTP]
    /{CANDIDATE_ID}: 
        displayName: /candidates/{CANDIDATE_ID}
        uriParameters: 
            CANDIDATE_ID: 
                type: string
                required: true
                repeat: false
        get: 
            description: |
                Retrieve an existing candidate
                
                This endpoint allows you to retrieve the record of a candidate using their stored candidate_id.
            responses: 
                "200": 
                    body: 
                        application/json: 
                            example: |
                                {
                                  "object" : "candidate" ,
                                  "id" : "544aba053163310002630500" ,
                                  "created_at" : 1414183429 ,
                                  "updated_at" : 1414183429 ,
                                  "livemode" : true ,
                                  "note" : "55555555" ,
                                  "ssn" : "0002" ,
                                  "passport" : null ,
                                  "date_of_birth" : "1940-08-11" ,
                                  "name_first" : "John" ,
                                  "name_middle" : null ,
                                  "name_last" : "Bredenkamp" ,
                                  "address_street1" : null ,
                                  "address_street2" : null ,
                                  "address_city" : "Harare" ,
                                  "address_subdivision" : null ,
                                  "address_postal_code" : null ,
                                  "address_country_code" : "AR"
                                }
            protocols: [HTTP]
        delete: 
            description: |
                Delete a candidate
                This endpoint allows you to remove a candidate from our system. If you have signed up for continuous verification, then the deleted candidate will no longer be scanned.
            responses: 
                "200": 
                    body: 
                        application/json: 
                            example: |
                                {
                                  "object" : "candidate" ,
                                  "id" : "544aba053163310002630500" ,
                                  "deleted": true,
                                  "created_at" : 1414183429 ,
                                  "updated_at" : 1414183429 ,
                                  "livemode" : true ,
                                  "note" : "55555555" ,
                                  "ssn" : "0002" ,
                                  "passport" : null ,
                                  "date_of_birth" : "1940-08-11" ,
                                  "name_first" : "John" ,
                                  "name_middle" : null ,
                                  "name_last" : "Bredenkamp" ,
                                  "address_street1" : null ,
                                  "address_street2" : null ,
                                  "address_city" : "Harare" ,
                                  "address_subdivision" : null ,
                                  "address_postal_code" : null ,
                                  "address_country_code" : "AR"
                                }
            protocols: [HTTP]
        patch: 
            description: |
                Edit a candidate
                If you'd like to amend the information associated with a candidate, you can modify it using this route. For instance, if your candidate changes addresses or you learn additional information about them. Only the information you send us will be updated - the rest will remain the same.
            queryParameters: 
                note: 
                    description: You can store additional information about the candidate here such as your internal system's identifier for this individual. This will allow you to keep track of them.
                    type: string
                    required: false
                    repeat: false
                name_first: 
                    description: The legal first name of the customer.
                    type: string
                    required: false
                    repeat: false
                address_postal_code: 
                    description: |
                        The postal code of the person. Also known as a ZIP code.
                        The country of the customer. Should be of the ISO code form.
                    type: string
                    required: false
                    repeat: false
                address_country_code: 
                    description: The country of the customer. Should be of the ISO code form.
                    type: string
                    required: false
                    repeat: false
                date_of_birth: 
                    description: The date of birth of the candidate in ISO form.
                    type: string
                    required: false
                    repeat: false
                address_street1: 
                    description: The primary street address of the customer. This is automatically normalized.
                    type: string
                    required: false
                    repeat: false
                name_last: 
                    description: The legal middle name of the customer.
                    type: string
                    required: false
                    repeat: false
                address_street2: 
                    description: The second address line typically used for apartment or suite numbers. This is automatically normalized.
                    type: string
                    required: false
                    repeat: false
                address_city: 
                    description: The city name of the customer. This is automatically normalized.
                    type: string
                    required: false
                    repeat: false
                ssn: 
                    description: This can be either the last 4 digits of the US Social Security Number or the whole SSN.
                    type: string
                    required: false
                    repeat: false
                address_subdivision: 
                    description: |
                        The subdivision of the entered country. For instance in the United States, this would be a 'state'.
                        The state of the customer. Should be of the FIPS code form. For example California would be CA.
                    type: string
                    required: false
                    repeat: false
                name_middle: 
                    description: The legal middle name of the customer.
                    type: string
                    required: false
                    repeat: false
                passport: 
                    description: The passport number of the individual being verified. This is only used for verifying non-US customers.
                    type: string
                    required: false
                    repeat: false
            responses: 
                "201": 
                    body: 
                        application/json: 
                            example: |
                                {
                                  "object" : "candidate" ,
                                  "id" : "544aba053163310002630500" ,
                                  "created_at" : 1414183429 ,
                                  "updated_at" : 1414183429 ,
                                  "livemode" : true ,
                                  "note" : "55555555" ,
                                  "ssn" : "0002" ,
                                  "passport" : null ,
                                  "date_of_birth" : "1940-08-11" ,
                                  "name_first" : "John" ,
                                  "name_middle" : null ,
                                  "name_last" : "Bredenkamp" ,
                                  "address_street1" : null ,
                                  "address_street2" : null ,
                                  "address_city" : "Harare" ,
                                  "address_subdivision" : null ,
                                  "address_postal_code" : null ,
                                  "address_country_code" : "AR"
                                }
            protocols: [HTTP]
        /hits: 
            displayName: /candidates/{CANDIDATE_ID}/hits
            uriParameters: 
                CANDIDATE_ID: 
                    type: string
                    required: true
                    repeat: false
            get: 
                description: |
                    View a candidate's past hits
                    
                    Whenever a search is executed for a candidate, we store the results of that search with timestamps of when those hits occurred. This endpoint allows you to view all historical watchlist hits for a given candidate.
                responses: 
                    "200": 
                        body: 
                            application/json: 
                                example: |
                                    {
                                      "object" : "list" ,
                                      "data" : [
                                        {
                                          "object" : "candidate" ,
                                          "id" : "544aba053163310002630500" ,
                                          "created_at" : 1414183429 ,
                                          "updated_at" : 1414183429 ,
                                          "livemode" : true ,
                                          "note" : "55555555" ,
                                          "ssn" : "0002" ,
                                          "passport" : null ,
                                          "date_of_birth" : "1940-08-11" ,
                                          "name_first" : "John" ,
                                          "name_middle" : null ,
                                          "name_last" : "Bredenkamp" ,
                                          "address_street1" : null ,
                                          "address_street2" : null ,
                                          "address_city" : "Harare" ,
                                          "address_subdivision" : null ,
                                          "address_postal_code" : null ,
                                          "address_country_code" : "AR"
                                        }
                                      ]
                                    }
                protocols: [HTTP]
        /history: 
            displayName: /candidates/{CANDIDATE_ID}/history
            uriParameters: 
                CANDIDATE_ID: 
                    type: string
                    required: true
                    repeat: false
            get: 
                description: |
                    View a candidate's revision history
                    
                    We store a complete revision history of a candidate's edits. This allows you to maintain a full audit trail of when and how you update a client's profile over time.
                    
                    The latest revision is presented at the top of the array, and the original is at the end of the array.
                responses: 
                    "200": 
                        body: 
                            application/json: 
                                example: |
                                    [
                                      {
                                        "object": "candidate",
                                        "id": "544aba053163310002630500",
                                        "created_at": 1414183429,
                                        "updated_at": 1414183429,
                                        "livemode": true,
                                        "note": null,
                                        "ssn": null,
                                        "passport": null,
                                        "date_of_birth": null,
                                        "name_first": "John",
                                        "name_middle": null,
                                        "name_last": "Bredenkamp",
                                        "address_street1": null,
                                        "address_street2": null,
                                        "address_city": null,
                                        "address_subdivision": null,
                                        "address_postal_code": null,
                                        "address_country_code": "ZW"
                                      },
                                      {
                                        "object": "candidate",
                                        "id": "544aba053163310002630500",
                                        "created_at": 1414183429,
                                        "updated_at": 1414183429,
                                        "livemode": true,
                                        "note": null,
                                        "ssn": null,
                                        "passport": null,
                                        "date_of_birth": null,
                                        "name_first": "John",
                                        "name_middle": null,
                                        "name_last": "Bredenkamp",
                                        "address_street1": null,
                                        "address_street2": null,
                                        "address_city": null,
                                        "address_subdivision": null,
                                        "address_postal_code": null,
                                        "address_country_code": null
                                      }
                                    ]
                protocols: [HTTP]
/question_sets: 
    displayName: /question_sets
    get: 
        description: |
            List all question sets
            
            This endpoint will allow you to see a historical record of all question sets that you have created.
            
            The list is displayed in reverse chronological order (newer question sets appear first).
        responses: 
            "200": 
                body: 
                    application/json: 
                        example: |
                            {
                              "total_count": 5,
                              "has_more": false,
                              "object": "list",
                              "data": [
                                {
                                  "object": "question_set",
                                  "id": "533ce7e5627463792f010000",
                                  "created_at": 1402450269,
                                  "updated_at": 1403742375,
                                  "livemode": false,
                                  "person_id": "530c48b2627463452b570000",
                                  "score": 60.0,
                                  "expired": false,
                                  "time_limit": 300,
                                  "questions": [
                                    {
                                      "id": 1,
                                      "question": "Which of these people do you know?",
                                      "answers": [
                                        { "id": 1, "answer": "Alain" },
                                        { "id": 2, "answer": "John" },
                                        { "id": 3, "answer": "Chris" },
                                        { "id": 4, "answer": "Connor" },
                                        { "id": 5, "answer": "None Of The Above" }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
        protocols: [HTTP]
    post: 
        description: This method will create a new question set to ask your users. You can call this endpoint multiple times with the same person ID and the questions asked as well as the order that everything is presented in will be randomized.
        queryParameters: 
            time_limit: 
                description: How long after creating a question set that the `expired` boolean will remain `false`. This is inputted in seconds and defaults to `0`, which means no time limit. This allows you to make sure that your customer does not take too long to answer a question set.
                type: string
                required: false
                repeat: false
                default: "0"
            person_id: 
                description: The ID of the person, and thus the identity, on which to base the question sets. You can create multiple question sets using the same question set ID.
                type: string
                required: true
                repeat: false
        responses: 
            "201": 
                body: 
                    application/json: 
                        example: |
                            {
                              "object": "question_set",
                              "id": "533ce7e5627463792f010000",
                              "created_at": 1402450269,
                              "updated_at": 1403742375,
                              "livemode": false,
                              "person_id": "530c48b2627463452b570000",
                              "score": 60.0,
                              "expired": false,
                              "time_limit": 300,
                              "questions": [
                                {
                                  "id": 1,
                                  "question": "Which of these people do you know?",
                                  "answers": [
                                    { "id": 1, "answer": "Alain" },
                                    { "id": 2, "answer": "John" },
                                    { "id": 3, "answer": "Chris" },
                                    { "id": 4, "answer": "Connor" },
                                    { "id": 5, "answer": "None Of The Above" }
                                  ]
                                }
                              ]
                            }
        protocols: [HTTP]
    /{QUESTION_SET_ID}: 
        displayName: /question_sets/{QUESTION_SET_ID}
        uriParameters: 
            QUESTION_SET_ID: 
                type: string
                required: true
                repeat: false
        get: 
            description: |
                Retrieve an existing question set
                
                This allows you to retrieve a question set you have created. If you have already scored the question set, we will also return the last score of your submitted answers.
            responses: 
                "200": 
                    body: 
                        application/json: 
                            example: |
                                {
                                  "object": "question_set",
                                  "id": "533ce7e5627463792f010000",
                                  "created_at": 1402450269,
                                  "updated_at": 1403742375,
                                  "livemode": false,
                                  "person_id": "530c48b2627463452b570000",
                                  "score": 60.0,
                                  "expired": false,
                                  "time_limit": 300,
                                  "questions": [
                                    {
                                      "id": 1,
                                      "question": "Which of these people do you know?",
                                      "answers": [
                                        { "id": 1, "answer": "Alain" },
                                        { "id": 2, "answer": "John" },
                                        { "id": 3, "answer": "Chris" },
                                        { "id": 4, "answer": "Connor" },
                                        { "id": 5, "answer": "None Of The Above" }
                                      ]
                                    }
                                  ]
                                }
            protocols: [HTTP]
        /score: 
            displayName: /question_sets/{QUESTION_SET_ID}/score
            uriParameters: 
                QUESTION_SET_ID: 
                    type: string
                    required: true
                    repeat: false
            post: 
                description: Once the user has finished answering the questions, you will need to send us their answers so that we can score it. The scoring system will score it based on how many questions you submit, so if you would only like to ask 3 questions, only submit the 3 questions which you would like scored.
                queryParameters: 
                    answers[][question_id]: 
                        description: The ID of the question to which the user is responding. This ID is found in the response when creating a question set.
                        type: string
                        required: true
                        repeat: false
                    answers[][answer_id]: 
                        description: The ID of the answer that the user picks while answering questions. The ID is found in the response when creating a question set.
                        type: string
                        required: true
                        repeat: false
                    answers: 
                        description: An array of objects containing question_id and answer_id pairs. This is the container for all of the user's answers.
                        type: string
                        required: true
                        repeat: false
                responses: 
                    "201": 
                        body: 
                            application/json: 
                                example: |
                                    {
                                      "object": "question_set",
                                      "id": "533ce7e5627463792f010000",
                                      "created_at": 1402450269,
                                      "updated_at": 1403742375,
                                      "livemode": false,
                                      "person_id": "530c48b2627463452b570000",
                                      "score": 60.0,
                                      "expired": false,
                                      "time_limit": 300,
                                      "questions": [
                                        {
                                          "id": 1,
                                          "question": "Which of these people do you know?",
                                          "answers": [
                                            { "id": 1, "answer": "Alain" },
                                            { "id": 2, "answer": "John" },
                                            { "id": 3, "answer": "Chris" },
                                            { "id": 4, "answer": "Connor" },
                                            { "id": 5, "answer": "None Of The Above" }
                                          ]
                                        }
                                      ]
                                    }
                protocols: [HTTP]
/companies: 
    displayName: /companies
    get: 
        description: |
            List all companies
            
            This endpoint will allow you to see a historical record of all company verifications that you have completed.
            
            The list is displayed in reverse chronological order (newer company verifications appear first).
        responses: 
            "200": 
                body: 
                    application/json: 
                        example: |
                            {
                              "total_count" : 443 ,
                              "has_more" : true ,
                              "object" : "list" ,
                              "data" : [
                                {
                                  "object" : "company" ,
                                  "id" : "54d956c06230620003760500" ,
                                  "created_at" : 1423529664 ,
                                  "updated_at" : 1423529664 ,
                                  "status" : "valid" ,
                                  "livemode" : false ,
                                  "entity_name" : "BlockScore" ,
                                  "tax_id" : "123410000" ,
                                  "incorporation_day" : 23 ,
                                  "incorporation_month" : 8 ,
                                  "incorporation_year" : 1993 ,
                                  "incorporation_state" : "DE" ,
                                  "incorporation_country_code" : "US" ,
                                  "incorporation_type" : "corporation" ,
                                  "dbas" : "BitRemit" ,
                                  "registration_number" : "123123123" ,
                                  "email" : "test@example.com" ,
                                  "url" : "https://blockscore.com" ,
                                  "phone_number" : "6505555555" ,
                                  "note" : "ref-id:12345" ,
                                  "ip_address" : "67.160.8.182" ,
                                  "address_street1" : "123 Fake Streets" ,
                                  "address_street2" : null ,
                                  "address_city" : "Stanford" ,
                                  "address_subdivision" : "CA" ,
                                  "address_postal_code" : "94305" ,
                                  "address_country_code" : "US" ,
                                  "details" : {
                                    "ofac" : "no_match" ,
                                    "state" : "match" ,
                                    "tax_id" : "match" ,
                                    "address" : "no_match" ,
                                    "entity_name" : "mismatch" ,
                                    "incorp_date" : "no_match" ,
                                    "country_code" : "match"
                                  }
                                }
                              ]
                            }
        protocols: [HTTP]
    post: 
        description: |
            Create a new company
            
            This endpoint creates a new company. The information will be run through our company verification process and then returned with additional information that will help you determine the authenticity of the information given.
            
            Please be aware that the response time can sometimes be more than 6 seconds due to the speed of some government data sources.
        queryParameters: 
            note: 
                description: You can store additional information about the candidate here such as your internal system's identifier for this individual. This will allow you to keep track of them.
                type: string
                required: false
                repeat: false
            entity_name: 
                description: This should exclude any legal endings like 'Co' or 'Inc' for best results.
                type: string
                required: true
                repeat: false
            address_postal_code: 
                description: The country of the customer. Should be of the ISO code form.
                type: string
                required: true
                repeat: false
            registration_number: 
                description: Should only include the digits of the registration number with no extraneous characters like dashes.
                type: string
                required: false
                repeat: false
            address_country_code: 
                description: The country of the customer. Should be of the ISO code form.
                type: string
                required: true
                repeat: false
            incorporation_type: 
                description: Must be one of the pre-defined incorporation types listed in the 'Incorporation types' table.
                type: string
                required: true
                repeat: false
            address_street1: 
                description: The primary street address of the customer. This is automatically normalized.
                type: string
                required: true
                repeat: false
            ip_address: 
                description: |
                    Your customers' IP address can be passed to us for storage purposes. Soon we will be using this information for anti-fraud and verification purposes. With this information we will be able to back-test your verifications when this feature is released.
                    Both IPv4 and IPv6 style IP addresses are acceptable.
                type: string
                required: false
                repeat: false
            tax_id: 
                description: The tax ID should only include the digits of the ID with no extraneous characters like dashes.
                type: string
                required: true
                repeat: false
            url: 
                description: "Can either contain protocol information or not (ex. www.example.com and http://www.example.com)."
                type: string
                required: false
                repeat: false
            address_street2: 
                description: The second address line typically used for apartment or suite numbers. This is automatically normalized.
                type: string
                required: false
                repeat: false
            incorporation_month: 
                description: The month in integer form of the company's incorporation.
                type: string
                required: false
                repeat: false
            address_city: 
                description: The city name of the customer. This is automatically normalized.
                type: string
                required: true
                repeat: false
            address_subdivision: 
                description: The state of the customer. Should be of the FIPS code form. For example California would be CA.
                type: string
                required: true
                repeat: false
            incorporation_state: 
                description: Can be either of ISO code form or the full length name of the state.
                type: string
                required: false
                repeat: false
            incorporation_day: 
                description: The day in integer form of the company's incorporation.
                type: string
                required: false
                repeat: false
            incorporation_year: 
                description: The year in 4-digit integer form of the company's incorporation.
                type: string
                required: false
                repeat: false
            phone_number: 
                description: |
                    If you pass in the phone number, we will use it as an additional 'positive' data point for the consumer. That is, if it is provided, it will help us identify them, but if we cannot, they will not be penalized.
                    Extra characters like parenthesis and dashes are accepted - can either contain the country code or not.
                type: string
                required: false
                repeat: false
            dbas: 
                description: Both commas and spaces are acceptable for delimiting multiple names.
                type: string
                required: false
                repeat: false
            email: 
                description: Any form of valid email is accepted.
                type: string
                required: false
                repeat: false
            incorporation_country_code: 
                description: Should be of the ISO alpha-2 code form.
                type: string
                required: true
                repeat: false
        responses: 
            "201": 
                body: 
                    application/json: 
                        example: |
                            {
                              "object" : "company" ,
                              "id" : "54d956c06230620003760500" ,
                              "created_at" : 1423529664 ,
                              "updated_at" : 1423529664 ,
                              "status" : "valid" ,
                              "livemode" : false ,
                              "entity_name" : "BlockScore" ,
                              "tax_id" : "123410000" ,
                              "incorporation_day" : 23 ,
                              "incorporation_month" : 8 ,
                              "incorporation_year" : 1993 ,
                              "incorporation_state" : "DE" ,
                              "incorporation_country_code" : "US" ,
                              "incorporation_type" : "corporation" ,
                              "dbas" : "BitRemit" ,
                              "registration_number" : "123123123" ,
                              "email" : "test@example.com" ,
                              "url" : "https://blockscore.com" ,
                              "phone_number" : "6505555555" ,
                              "note" : "ref-id:12345" ,
                              "ip_address" : "67.160.8.182" ,
                              "address_street1" : "123 Fake Streets" ,
                              "address_street2" : null ,
                              "address_city" : "Stanford" ,
                              "address_subdivision" : "CA" ,
                              "address_postal_code" : "94305" ,
                              "address_country_code" : "US" ,
                              "details" : {
                                "ofac" : "no_match" ,
                                "state" : "match" ,
                                "tax_id" : "match" ,
                                "address" : "no_match" ,
                                "entity_name" : "mismatch" ,
                                "incorp_date" : "no_match" ,
                                "country_code" : "match"
                              }
                            }
        protocols: [HTTP]
    /{COMPANY_ID}: 
        displayName: /companies/{COMPANY_ID}
        uriParameters: 
            COMPANY_ID: 
                type: string
                required: true
                repeat: false
        get: 
            description: |
                Retrieve an existing company
                
                You can pull up a single company verification at any time (typically this is used for auditing purposes).
            responses: 
                "200": 
                    body: 
                        application/json: 
                            example: |
                                {
                                  "object" : "company" ,
                                  "id" : "54d956c06230620003760500" ,
                                  "created_at" : 1423529664 ,
                                  "updated_at" : 1423529664 ,
                                  "status" : "valid" ,
                                  "livemode" : false ,
                                  "entity_name" : "BlockScore" ,
                                  "tax_id" : "123410000" ,
                                  "incorporation_day" : 23 ,
                                  "incorporation_month" : 8 ,
                                  "incorporation_year" : 1993 ,
                                  "incorporation_state" : "DE" ,
                                  "incorporation_country_code" : "US" ,
                                  "incorporation_type" : "corporation" ,
                                  "dbas" : "BitRemit" ,
                                  "registration_number" : "123123123" ,
                                  "email" : "test@example.com" ,
                                  "url" : "https://blockscore.com" ,
                                  "phone_number" : "6505555555" ,
                                  "note" : "ref-id:12345" ,
                                  "ip_address" : "67.160.8.182" ,
                                  "address_street1" : "123 Fake Streets" ,
                                  "address_street2" : null ,
                                  "address_city" : "Stanford" ,
                                  "address_subdivision" : "CA" ,
                                  "address_postal_code" : "94305" ,
                                  "address_country_code" : "US" ,
                                  "details" : {
                                    "ofac" : "no_match" ,
                                    "state" : "match" ,
                                    "tax_id" : "match" ,
                                    "address" : "no_match" ,
                                    "entity_name" : "mismatch" ,
                                    "incorp_date" : "no_match" ,
                                    "country_code" : "match"
                                  }
                                }
            protocols: [HTTP]
/people: 
    displayName: /people
    get: 
        description: |
            This endpoint will allow you to see a historical record of all verifications that you have completed.
            
            The list is displayed in reverse chronological order (newer people appear first).
        responses: 
            "200": 
                body: 
                    application/json: 
                        example: |
                            {
                              "total_count" : 5 ,
                              "has_more" : false ,
                              "object" : "list" ,
                              "data" : [
                                {
                                  "object" : "person" ,
                                  "id" : "544744f43266330002010000" ,
                                  "created_at" : 1413956852 ,
                                  "updated_at" : 1413956984 ,
                                  "status" : "valid" ,
                                  "livemode" : true ,
                                  "phone_number" : null ,
                                  "ip_address" : "" ,
                                  "birth_day" : 23 ,
                                  "birth_month" : 8 ,
                                  "birth_year" : 1993 ,
                                  "name_first" : "John" ,
                                  "name_middle" : null ,
                                  "name_last" : "Doe" ,
                                  "address_street1" : "1 Infinite Loop" ,
                                  "address_street2" : null ,
                                  "address_city" : "Cupertino" ,
                                  "address_subdivision" : "CA" ,
                                  "address_postal_code" : "95014" ,
                                  "address_country_code" : "US" ,
                                  "document_type" : "ssn" ,
                                  "document_value" : "0000" ,
                                  "note" : "ref-id:12345" ,
                                  "details" : {
                                    "address" : "no_match" ,
                                    "address_risk" : "low" ,
                                    "identification" : "partial_match" ,
                                    "date_of_birth" : "partial_match" ,
                                    "ofac" : "no_match" ,
                                    "pep" : "no_match"
                                  } ,
                                  "question_sets" : [
                                    "536c1532627463780b000000"
                                  ]
                                }
                              ]
                            }
        protocols: [HTTP]
    post: 
        description: This endpoint creates a new person. The information will be run through our verification process and then returned with additional information that will help you determine the authenticity of the information given.
        queryParameters: 
            document_value: 
                description: The number associated with the form of documentation used.
                type: string
                required: true
                repeat: false
            name_first: 
                description: The legal first name of the customer.
                type: string
                required: true
                repeat: false
            note: 
                description: You can store additional information about the candidate here such as your internal system's identifier for this individual. This will allow you to keep track of them.
                type: string
                required: false
                repeat: false
            address_postal_code: 
                description: The postal code of the person. Also known as a ZIP code.
                type: string
                required: true
                repeat: false
            birth_month: 
                description: The integer associated with the month of birth.
                type: string
                required: true
                repeat: false
            address_country_code: 
                description: The country of the customer. Should be of the ISO code form.
                type: string
                required: true
                repeat: false
            address_street1: 
                description: The primary street address of the customer. This is automatically normalized.
                type: string
                required: true
                repeat: false
            ip_address: 
                description: |
                    Your customers' IP address can be passed to us for storage purposes. Soon we will be using this information for anti-fraud and verification purposes. With this information we will be able to back-test your verifications when this feature is released.
                    Both IPv4 and IPv6 style IP addresses are acceptable.
                type: string
                required: false
                repeat: false
            name_last: 
                description: The legal middle name of the customer.
                type: string
                required: true
                repeat: false
            address_street2: 
                description: The second address line typically used for apartment or suite numbers. This is automatically normalized.
                type: string
                required: false
                repeat: false
            birth_year: 
                description: The full 4-digit year of birth.
                type: string
                required: true
                repeat: false
            address_city: 
                description: The city name of the customer. This is automatically normalized.
                type: string
                required: true
                repeat: false
            name_middle: 
                description: The legal middle name of the customer.
                type: string
                required: false
                repeat: false
            birth_day: 
                description: The integer associated with the day of birth.
                type: string
                required: true
                repeat: false
            address_subdivision: 
                description: The subdivision of the entered country. For instance in the United States, this would be a 'state'.
                type: string
                required: true
                repeat: false
            phone_number: 
                description: |
                    If you pass in the phone number, we will use it as an additional 'positive' data point for the consumer. That is, if it is provided, it will help us identify them, but if we cannot, they will not be penalized.
                    Extra characters like parenthesis and dashes are accepted - can either contain the country code or not.
                type: string
                required: false
                repeat: false
            document_type: 
                description: Must be one of the document types described in the Documents section.
                type: string
                required: true
                repeat: false
        responses: 
            "201": 
                body: 
                    application/json: 
                        example: |
                            {
                              "object": "person",
                              "id": "544744f43266330002010000",
                              "created_at": 1413956852,
                              "updated_at": 1413956984,
                              "status": "valid",
                              "livemode": true,
                              "phone_number": null,
                              "ip_address": "",
                              "birth_day": 23,
                              "birth_month": 8,
                              "birth_year": 1993,
                              "name_first": "John",
                              "name_middle": null,
                              "name_last": "Doe",
                              "address_street1": "1 Infinite Loop",
                              "address_street2": null,
                              "address_city": "Cupertino",
                              "address_subdivision": "CA",
                              "address_postal_code": "95014",
                              "address_country_code": "US",
                              "document_type": "ssn",
                              "document_value": "0000",
                              "note": "ref-id:12345",
                              "details": {
                                "address": "no_match",
                                "address_risk": "low",
                                "identification": "partial_match",
                                "date_of_birth": "partial_match",
                                "ofac": "no_match",
                                "pep": "no_match"
                              },
                              "question_sets": [
                                "536c1532627463780b000000"
                              ]
                            }
        protocols: [HTTP]
    /{PERSON_ID}: 
        displayName: /people/{PERSON_ID}
        uriParameters: 
            PERSON_ID: 
                type: string
                required: true
                repeat: false
        get: 
            description: You can pull up a single person at any time (typically this is used for auditing purposes).
            responses: 
                "200": 
                    body: 
                        application/json: 
                            example: |
                                {
                                  "object": "person",
                                  "id": "544744f43266330002010000",
                                  "created_at": 1413956852,
                                  "updated_at": 1413956984,
                                  "status": "valid",
                                  "livemode": true,
                                  "phone_number": null,
                                  "ip_address": "",
                                  "birth_day": 23,
                                  "birth_month": 8,
                                  "birth_year": 1993,
                                  "name_first": "John",
                                  "name_middle": null,
                                  "name_last": "Doe",
                                  "address_street1": "1 Infinite Loop",
                                  "address_street2": null,
                                  "address_city": "Cupertino",
                                  "address_subdivision": "CA",
                                  "address_postal_code": "95014",
                                  "address_country_code": "US",
                                  "document_type": "ssn",
                                  "document_value": "0000",
                                  "note": "ref-id:12345",
                                  "details": {
                                    "address": "no_match",
                                    "address_risk": "low",
                                    "identification": "partial_match",
                                    "date_of_birth": "partial_match",
                                    "ofac": "no_match",
                                    "pep": "no_match"
                                  },
                                  "question_sets": [
                                    "536c1532627463780b000000"
                                  ]
                                }
            protocols: [HTTP]
/watchlists: 
    displayName: /watchlists
    post: 
        description: This endpoint creates a new verification. The information will be run through our verification process and then returned with additional information that will help you determine the authenticity of the information given.
        queryParameters: 
            candidate_id: 
                description: The ID the candidate you have created. We search on all of the information provided in the associated profile.
                type: string
                required: true
                repeat: false
            similarity_threshold: 
                description: The sensitivity of search results. Expects a float between 0.0 and 1.0 where 1.0 is exact matches only and 0.0 is lenient matching. The default value is 0.7.
                type: string
                required: false
                repeat: false
                default: "0.7"
            match_type: 
                description: Can be either the value person or company and will restrict the search to only search for people or entities on the watchlists.
                type: string
                required: false
                repeat: false
        responses: 
            "201": 
                body: 
                    application/json: 
                        example: |
                            {
                              "livemode" : true ,
                              "searched_lists" : [
                                "US_SDN"
                              ] ,
                              "count" : 1 ,
                              "matches" : [
                                {
                                  "id" : "ent_554056e4b4cf7103000009d5" ,
                                  "watchlist_name" : "US_SDN" ,
                                  "entry_type" : "individual" ,
                                  "matching_info" : [
                                    "name"
                                  ] ,
                                  "confidence" : 1 ,
                                  "url" : null ,
                                  "notes" : null ,
                                  "title" : null ,
                                  "name_full" : "John Bredenkamp" ,
                                  "alternate_names" : "John A. Bredenkamp; John Arnold Bredenkamp" ,
                                  "date_of_birth" : "1940-8-11" ,
                                  "passport" : "367537C; Z153612; Z01024064; ND1285143" ,
                                  "ssn" : null ,
                                  "address_street1" : "62 Chester Square" ,
                                  "address_street2" : null ,
                                  "address_city" : "London" ,
                                  "address_state" : null ,
                                  "address_postal_code" : null ,
                                  "address_country_code" : "GB" ,
                                  "address_raw" : "62 Chester Square, London, GB" ,
                                  "names" : [
                                    {
                                      "name_primary" : true ,
                                      "name_full" : "John Bredenkamp" ,
                                      "name_strength" : "medium"
                                    } , {
                                      "name_primary" : false ,
                                      "name_full" : "John A. Bredenkamp" ,
                                      "name_strength" : "medium"
                                    } , {
                                      "name_primary" : false ,
                                      "name_full" : "John Arnold Bredenkamp" ,
                                      "name_strength" : "medium"
                                    }
                                  ] ,
                                  "births" : [
                                    {
                                      "birth_day" : 11 ,
                                      "birth_month" : 8 ,
                                      "birth_year" : 1940 ,
                                      "birth_day_end" : null ,
                                      "birth_month_end" : null ,
                                      "birth_year_end" : null
                                    }
                                  ] ,
                                  "documents" : [
                                    {
                                      "document_type" : "passport" ,
                                      "document_value" : "367537C" ,
                                      "document_country_code" : "SR"
                                    } , {
                                      "document_type" : "passport" ,
                                      "document_value" : "Z153612" ,
                                      "document_country_code" : "NL"
                                    }
                                  ] ,
                                  "addresses" : [
                                    {
                                      "address_street1" : "62 Chester Square" ,
                                      "address_street2" : null ,
                                      "address_city" : "London" ,
                                      "address_state" : null ,
                                      "address_postal_code" : null ,
                                      "address_country_code" : "GB" ,
                                      "address_full" : "62 Chester Square, London, GB"
                                    } , {
                                      "address_street1" : "Dennerlei 30" ,
                                      "address_street2" : null ,
                                      "address_city" : "Schoten" ,
                                      "address_state" : null ,
                                      "address_postal_code" : null ,
                                      "address_country_code" : "BE" ,
                                      "address_full" : "Dennerlei 30, Schoten, BE"
                                    }
                                  ]
                                }
                              ]
                            }
        protocols: [HTTP]
documentation: 
    - 
        title: Headline
        content: BlockScore is a customer authentication and verification service that aims to assists users with handling the regulatory compliance issues surrounding international payment and transfers. The BlockScore API uses REST calls and allows users to submit data for authentication, off-load data, verify passports, and perform other tasks. An account, and an API key are required for use. SSL is required for all calls.
