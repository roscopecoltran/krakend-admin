{
	"basePath": "/",
	"externalDocs.description": "Physical Address Geocoder Web Site",
	"externalDocs.url": "http://www2.gov.bc.ca/gov/content/governments/about-the-bc-government/databc/geographic-data-and-services/geocoder",
	"host": "geocoder.api.gov.bc.ca",
	"info.contact.email": "DataBCBA@gov.bc.ca",
	"info.contact.name": "DataBC",
	"info.contact.url": "https://forms.gov.bc.ca/databc-contact-us/",
	"info.description": "This gated API computes the physical locations (i.e., latitude and longitude) and correct, standardized forms of civic and non-civic addresses in British Columbia.  CORS is enabled for any domain. To request an apikey, please contact the \u003ca href=https://forms.gov.bc.ca/databc-contact-us/  target=\"_blank\"\u003eDataBC Help Desk\u003c/a\u003e\u003cbr\u003ePlease read our \u003ca href=https://github.com/bcgov/api-specs/blob/master/COLLECTION_NOTICE.md#collection-notice target=\"_blank\"\u003edata collection notice\u003c/a\u003e",
	"info.license.name": "Open Government License - British Columbia",
	"info.license.url": "http://www2.gov.bc.ca/gov/content/governments/about-the-bc-government/databc/open-data/open-government-license-bc",
	"info.termsOfService": "http://www2.gov.bc.ca/gov/content/governments/about-the-bc-government/databc/open-data/api-terms-of-use-for-ogl-information",
	"info.title": "Gated Geocoder",
	"info.version": "2.0.0",
	"info.x-apisguru-categories.length": 1,
	"info.x-apisguru-categories[0]": "open_data",
	"info.x-logo.url": "https://api.apis.guru/v2/cache/logo/https_avatars1.githubusercontent.com_u_916280.jpeg",
	"info.x-origin.length": 1,
	"info.x-origin[0].format": "swagger",
	"info.x-origin[0].url": "https://raw.githubusercontent.com/bcgov/api-specs/master/geocoder/gated-geocoder.json",
	"info.x-origin[0].version": "2.0",
	"info.x-preferred": true,
	"info.x-providerName": "gov.bc.ca",
	"info.x-serviceName": "geocoder",
	"paths./addresses.{outputFormat}.get.description": "Represents the set of geocoded and standardized sites and intersections whose address best matches a given query address.",
	"paths./addresses.{outputFormat}.get.parameters.length": 30,
	"paths./addresses.{outputFormat}.get.parameters[0].default": "json",
	"paths./addresses.{outputFormat}.get.parameters[0].description": "Results format. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputFormat target=\"_blank\"\u003eoutputFormat\u003c/a\u003e",
	"paths./addresses.{outputFormat}.get.parameters[0].enum.length": 7,
	"paths./addresses.{outputFormat}.get.parameters[0].enum[0]": "json",
	"paths./addresses.{outputFormat}.get.parameters[0].enum[1]": "geojson",
	"paths./addresses.{outputFormat}.get.parameters[0].enum[2]": "xhtml",
	"paths./addresses.{outputFormat}.get.parameters[0].enum[3]": "kml",
	"paths./addresses.{outputFormat}.get.parameters[0].enum[4]": "gml",
	"paths./addresses.{outputFormat}.get.parameters[0].enum[5]": "csv",
	"paths./addresses.{outputFormat}.get.parameters[0].enum[6]": "shpz",
	"paths./addresses.{outputFormat}.get.parameters[0].in": "path",
	"paths./addresses.{outputFormat}.get.parameters[0].name": "outputFormat",
	"paths./addresses.{outputFormat}.get.parameters[0].required": true,
	"paths./addresses.{outputFormat}.get.parameters[0].type": "string",
	"paths./addresses.{outputFormat}.get.parameters[10].description": "Example: street,locality.  A comma separated list of individual match precision levels to exclude from results. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#matchPrecisionNot target=\"_blank\"\u003ematchPrecisionNot\u003c/a\u003e",
	"paths./addresses.{outputFormat}.get.parameters[10].in": "query",
	"paths./addresses.{outputFormat}.get.parameters[10].name": "matchPrecisionNot",
	"paths./addresses.{outputFormat}.get.parameters[10].required": false,
	"paths./addresses.{outputFormat}.get.parameters[10].type": "string",
	"paths./addresses.{outputFormat}.get.parameters[11].description": "A string containing the name of the building, facility, or institution (e.g., Duck Building, Casa Del Mar, Crystal Garden, Bluebird House).See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#siteName target=\"_blank\"\u003esiteName\u003c/a\u003e",
	"paths./addresses.{outputFormat}.get.parameters[11].in": "query",
	"paths./addresses.{outputFormat}.get.parameters[11].name": "siteName",
	"paths./addresses.{outputFormat}.get.parameters[11].required": false,
	"paths./addresses.{outputFormat}.get.parameters[11].type": "string",
	"paths./addresses.{outputFormat}.get.parameters[12].description": "The type of unit within a house or building. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#unitDesignator target=\"_blank\"\u003eunitDesignator\u003c/a\u003e",
	"paths./addresses.{outputFormat}.get.parameters[12].enum.length": 16,
	"paths./addresses.{outputFormat}.get.parameters[12].enum[0]": "APT",
	"paths./addresses.{outputFormat}.get.parameters[12].enum[10]": "SIDE",
	"paths./addresses.{outputFormat}.get.parameters[12].enum[11]": "SITE",
	"paths./addresses.{outputFormat}.get.parameters[12].enum[12]": "SUITE",
	"paths./addresses.{outputFormat}.get.parameters[12].enum[13]": "TH",
	"paths./addresses.{outputFormat}.get.parameters[12].enum[14]": "UNIT",
	"paths./addresses.{outputFormat}.get.parameters[12].enum[15]": "UPPR",
	"paths./addresses.{outputFormat}.get.parameters[12].enum[1]": "BLDG",
	"paths./addresses.{outputFormat}.get.parameters[12].enum[2]": "BSMT",
	"paths./addresses.{outputFormat}.get.parameters[12].enum[3]": "FLR",
	"paths./addresses.{outputFormat}.get.parameters[12].enum[4]": "LOBBY",
	"paths./addresses.{outputFormat}.get.parameters[12].enum[5]": "LWR",
	"paths./addresses.{outputFormat}.get.parameters[12].enum[6]": "PAD",
	"paths./addresses.{outputFormat}.get.parameters[12].enum[7]": "PH",
	"paths./addresses.{outputFormat}.get.parameters[12].enum[8]": "REAR",
	"paths./addresses.{outputFormat}.get.parameters[12].enum[9]": "RM",
	"paths./addresses.{outputFormat}.get.parameters[12].in": "query",
	"paths./addresses.{outputFormat}.get.parameters[12].name": "unitDesignator",
	"paths./addresses.{outputFormat}.get.parameters[12].required": false,
	"paths./addresses.{outputFormat}.get.parameters[12].type": "string",
	"paths./addresses.{outputFormat}.get.parameters[13].description": "The number of the unit, suite, or apartment within a house or building.",
	"paths./addresses.{outputFormat}.get.parameters[13].in": "query",
	"paths./addresses.{outputFormat}.get.parameters[13].name": "unitNumber",
	"paths./addresses.{outputFormat}.get.parameters[13].required": false,
	"paths./addresses.{outputFormat}.get.parameters[13].type": "string",
	"paths./addresses.{outputFormat}.get.parameters[14].description": "A letter that follows the unit number as in Unit 1A or Suite 302B.",
	"paths./addresses.{outputFormat}.get.parameters[14].in": "query",
	"paths./addresses.{outputFormat}.get.parameters[14].name": "unitNumberSuffix",
	"paths./addresses.{outputFormat}.get.parameters[14].required": false,
	"paths./addresses.{outputFormat}.get.parameters[14].type": "string",
	"paths./addresses.{outputFormat}.get.parameters[15].description": "The official number assigned to a site by an address authority. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#civicNumber target=\"_blank\"\u003ecivicNumber\u003c/a\u003e",
	"paths./addresses.{outputFormat}.get.parameters[15].in": "query",
	"paths./addresses.{outputFormat}.get.parameters[15].name": "civicNumber",
	"paths./addresses.{outputFormat}.get.parameters[15].required": false,
	"paths./addresses.{outputFormat}.get.parameters[15].type": "string",
	"paths./addresses.{outputFormat}.get.parameters[16].description": "A letter or fraction that follows the civic number (e.g., the A in 1039A Bledsoe St). See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#civicNumberSuffix target=\"_blank\"\u003ecivicNumberSuffix\u003c/a\u003e",
	"paths./addresses.{outputFormat}.get.parameters[16].in": "query",
	"paths./addresses.{outputFormat}.get.parameters[16].name": "civicNumberSuffix",
	"paths./addresses.{outputFormat}.get.parameters[16].required": false,
	"paths./addresses.{outputFormat}.get.parameters[16].type": "string",
	"paths./addresses.{outputFormat}.get.parameters[17].description": "The official name of the street as assigned by an address authority (e.g., the Douglas in 1175 Douglas Street). See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#streetName target=\"_blank\"\u003estreetName\u003c/a\u003e",
	"paths./addresses.{outputFormat}.get.parameters[17].in": "query",
	"paths./addresses.{outputFormat}.get.parameters[17].name": "streetName",
	"paths./addresses.{outputFormat}.get.parameters[17].required": false,
	"paths./addresses.{outputFormat}.get.parameters[17].type": "string",
	"paths./addresses.{outputFormat}.get.parameters[18].description": "The type of street as assigned by a municipality (e.g., the ST in 1175 DOUGLAS St). See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#streetType target=\"_blank\"\u003estreetType\u003c/a\u003e",
	"paths./addresses.{outputFormat}.get.parameters[18].in": "query",
	"paths./addresses.{outputFormat}.get.parameters[18].name": "streetType",
	"paths./addresses.{outputFormat}.get.parameters[18].required": false,
	"paths./addresses.{outputFormat}.get.parameters[18].type": "string",
	"paths./addresses.{outputFormat}.get.parameters[19].description": "The abbreviated compass direction as defined by Canada Post and B.C. civic addressing authorities. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#streetDirection target=\"_blank\"\u003estreetDirection\u003c/a\u003e",
	"paths./addresses.{outputFormat}.get.parameters[19].enum.length": 11,
	"paths./addresses.{outputFormat}.get.parameters[19].enum[0]": "N",
	"paths./addresses.{outputFormat}.get.parameters[19].enum[10]": "SW",
	"paths./addresses.{outputFormat}.get.parameters[19].enum[1]": "S",
	"paths./addresses.{outputFormat}.get.parameters[19].enum[2]": "E",
	"paths./addresses.{outputFormat}.get.parameters[19].enum[3]": "W",
	"paths./addresses.{outputFormat}.get.parameters[19].enum[4]": "O",
	"paths./addresses.{outputFormat}.get.parameters[19].enum[5]": "NE",
	"paths./addresses.{outputFormat}.get.parameters[19].enum[6]": "NO",
	"paths./addresses.{outputFormat}.get.parameters[19].enum[7]": "NW",
	"paths./addresses.{outputFormat}.get.parameters[19].enum[8]": "SE",
	"paths./addresses.{outputFormat}.get.parameters[19].enum[9]": "SO",
	"paths./addresses.{outputFormat}.get.parameters[19].in": "query",
	"paths./addresses.{outputFormat}.get.parameters[19].name": "streetDirection",
	"paths./addresses.{outputFormat}.get.parameters[19].required": false,
	"paths./addresses.{outputFormat}.get.parameters[19].type": "string",
	"paths./addresses.{outputFormat}.get.parameters[1].description": "Examples: 525 Superior Street, Victoria, BC\u003cbr\u003e301-780 Blanshard St, Victoria, BC\u003cbr\u003eJohnson St and Government St, Victoria, BC.\u003cbr\u003e Civic or intersection address as a single string. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#addressString target=\"_blank\"\u003eaddressString\u003c/a\u003e",
	"paths./addresses.{outputFormat}.get.parameters[1].in": "query",
	"paths./addresses.{outputFormat}.get.parameters[1].name": "addressString",
	"paths./addresses.{outputFormat}.get.parameters[1].required": false,
	"paths./addresses.{outputFormat}.get.parameters[1].type": "string",
	"paths./addresses.{outputFormat}.get.parameters[20].description": "Example: the Bridge in Johnson St Bridge. The qualifier of a street name. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#streetQulifier target=\"_blank\"\u003estreetQualifier\u003c/a\u003e",
	"paths./addresses.{outputFormat}.get.parameters[20].in": "query",
	"paths./addresses.{outputFormat}.get.parameters[20].name": "streetQualifier",
	"paths./addresses.{outputFormat}.get.parameters[20].required": false,
	"paths./addresses.{outputFormat}.get.parameters[20].type": "string",
	"paths./addresses.{outputFormat}.get.parameters[21].description": "The name of the locality assigned to a given site by an address authority. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#localityName target=\"_blank\"\u003elocalityName\u003c/a\u003e",
	"paths./addresses.{outputFormat}.get.parameters[21].in": "query",
	"paths./addresses.{outputFormat}.get.parameters[21].name": "localityName",
	"paths./addresses.{outputFormat}.get.parameters[21].required": false,
	"paths./addresses.{outputFormat}.get.parameters[21].type": "string",
	"paths./addresses.{outputFormat}.get.parameters[22].default": "BC",
	"paths./addresses.{outputFormat}.get.parameters[22].description": "The ISO 3166-2 Sub-Country Code. The code for British Columbia is BC.",
	"paths./addresses.{outputFormat}.get.parameters[22].in": "query",
	"paths./addresses.{outputFormat}.get.parameters[22].name": "provinceCode",
	"paths./addresses.{outputFormat}.get.parameters[22].required": false,
	"paths./addresses.{outputFormat}.get.parameters[22].type": "string",
	"paths./addresses.{outputFormat}.get.parameters[23].description": "A comma separated list of locality names that matched addresses must belong to. For example, setting localities to Nanaimo only returns addresses in Nanaimo",
	"paths./addresses.{outputFormat}.get.parameters[23].in": "query",
	"paths./addresses.{outputFormat}.get.parameters[23].name": "localities",
	"paths./addresses.{outputFormat}.get.parameters[23].required": false,
	"paths./addresses.{outputFormat}.get.parameters[23].type": "string",
	"paths./addresses.{outputFormat}.get.parameters[24].description": "A comma-separated list of localities to exclude from the search.",
	"paths./addresses.{outputFormat}.get.parameters[24].in": "query",
	"paths./addresses.{outputFormat}.get.parameters[24].name": "notLocalities",
	"paths./addresses.{outputFormat}.get.parameters[24].required": false,
	"paths./addresses.{outputFormat}.get.parameters[24].type": "string",
	"paths./addresses.{outputFormat}.get.parameters[25].description": "Example: -126.0792,49.7628,-126.0163,49.7907.  A bounding box (xmin,ymin,xmax,ymax) that limits the search area. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#bbox target=\"_blank\"\u003ebbox\u003c/a\u003e",
	"paths./addresses.{outputFormat}.get.parameters[25].in": "query",
	"paths./addresses.{outputFormat}.get.parameters[25].name": "bbox",
	"paths./addresses.{outputFormat}.get.parameters[25].required": false,
	"paths./addresses.{outputFormat}.get.parameters[25].type": "string",
	"paths./addresses.{outputFormat}.get.parameters[26].description": "Example: -124.01659,49.2296.  The coordinates of a centre point (x,y) used to define a bounding circle that will limit the search area. This parameter must be specified together with 'maxDistance'. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#centre target='_blank'\u003ecentre\u003c/a\u003e",
	"paths./addresses.{outputFormat}.get.parameters[26].in": "query",
	"paths./addresses.{outputFormat}.get.parameters[26].name": "centre",
	"paths./addresses.{outputFormat}.get.parameters[26].required": false,
	"paths./addresses.{outputFormat}.get.parameters[26].type": "string",
	"paths./addresses.{outputFormat}.get.parameters[27].description": "The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited.",
	"paths./addresses.{outputFormat}.get.parameters[27].in": "query",
	"paths./addresses.{outputFormat}.get.parameters[27].name": "maxDistance",
	"paths./addresses.{outputFormat}.get.parameters[27].required": false,
	"paths./addresses.{outputFormat}.get.parameters[27].type": "number",
	"paths./addresses.{outputFormat}.get.parameters[28].description": "If true, uses supplied parcelPoint to derive an appropriate accessPoint.           See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#extrapolate target=\"_blank\"\u003eextrapolate\u003c/a\u003e",
	"paths./addresses.{outputFormat}.get.parameters[28].in": "query",
	"paths./addresses.{outputFormat}.get.parameters[28].name": "extrapolate",
	"paths./addresses.{outputFormat}.get.parameters[28].required": false,
	"paths./addresses.{outputFormat}.get.parameters[28].type": "boolean",
	"paths./addresses.{outputFormat}.get.parameters[29].description": "The coordinates of a point (x,y) known to be inside the parcel containing a given address. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#parcelPoint target=\"_blank\"\u003eparcelPoint\u003c/a\u003e",
	"paths./addresses.{outputFormat}.get.parameters[29].in": "query",
	"paths./addresses.{outputFormat}.get.parameters[29].name": "parcelPoint",
	"paths./addresses.{outputFormat}.get.parameters[29].required": false,
	"paths./addresses.{outputFormat}.get.parameters[29].type": "string",
	"paths./addresses.{outputFormat}.get.parameters[2].default": "any",
	"paths./addresses.{outputFormat}.get.parameters[2].description": "Describes the nature of the address location. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#locationDescriptor target=\"_blank\"\u003elocationDescriptor\u003c/a\u003e",
	"paths./addresses.{outputFormat}.get.parameters[2].enum.length": 6,
	"paths./addresses.{outputFormat}.get.parameters[2].enum[0]": "any",
	"paths./addresses.{outputFormat}.get.parameters[2].enum[1]": "accessPoint",
	"paths./addresses.{outputFormat}.get.parameters[2].enum[2]": "frontDoorPoint",
	"paths./addresses.{outputFormat}.get.parameters[2].enum[3]": "parcelPoint",
	"paths./addresses.{outputFormat}.get.parameters[2].enum[4]": "rooftopPoint",
	"paths./addresses.{outputFormat}.get.parameters[2].enum[5]": "routingPoint",
	"paths./addresses.{outputFormat}.get.parameters[2].in": "query",
	"paths./addresses.{outputFormat}.get.parameters[2].name": "locationDescriptor",
	"paths./addresses.{outputFormat}.get.parameters[2].required": false,
	"paths./addresses.{outputFormat}.get.parameters[2].type": "string",
	"paths./addresses.{outputFormat}.get.parameters[3].default": 1,
	"paths./addresses.{outputFormat}.get.parameters[3].description": "The maximum number of search results to return.",
	"paths./addresses.{outputFormat}.get.parameters[3].in": "query",
	"paths./addresses.{outputFormat}.get.parameters[3].name": "maxResults",
	"paths./addresses.{outputFormat}.get.parameters[3].required": false,
	"paths./addresses.{outputFormat}.get.parameters[3].type": "integer",
	"paths./addresses.{outputFormat}.get.parameters[4].default": "adaptive",
	"paths./addresses.{outputFormat}.get.parameters[4].description": "accessPoint interpolation method. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#interpolation target=\"_blank\"\u003einterpolation\u003c/a\u003e",
	"paths./addresses.{outputFormat}.get.parameters[4].enum.length": 3,
	"paths./addresses.{outputFormat}.get.parameters[4].enum[0]": "adaptive",
	"paths./addresses.{outputFormat}.get.parameters[4].enum[1]": "linear",
	"paths./addresses.{outputFormat}.get.parameters[4].enum[2]": "none",
	"paths./addresses.{outputFormat}.get.parameters[4].in": "query",
	"paths./addresses.{outputFormat}.get.parameters[4].name": "interpolation",
	"paths./addresses.{outputFormat}.get.parameters[4].required": false,
	"paths./addresses.{outputFormat}.get.parameters[4].type": "string",
	"paths./addresses.{outputFormat}.get.parameters[5].default": true,
	"paths./addresses.{outputFormat}.get.parameters[5].description": "If true, include unmatched address details such as site name in results.",
	"paths./addresses.{outputFormat}.get.parameters[5].in": "query",
	"paths./addresses.{outputFormat}.get.parameters[5].name": "echo",
	"paths./addresses.{outputFormat}.get.parameters[5].required": false,
	"paths./addresses.{outputFormat}.get.parameters[5].type": "boolean",
	"paths./addresses.{outputFormat}.get.parameters[6].default": 0,
	"paths./addresses.{outputFormat}.get.parameters[6].description": "The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.",
	"paths./addresses.{outputFormat}.get.parameters[6].in": "query",
	"paths./addresses.{outputFormat}.get.parameters[6].name": "setBack",
	"paths./addresses.{outputFormat}.get.parameters[6].required": false,
	"paths./addresses.{outputFormat}.get.parameters[6].type": "integer",
	"paths./addresses.{outputFormat}.get.parameters[7].default": 4326,
	"paths./addresses.{outputFormat}.get.parameters[7].description": "The EPSG code of the spatial reference system (SRS) to use for output geometries. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputSRS target=\"_blank\"\u003eoutputSRS\u003c/a\u003e",
	"paths./addresses.{outputFormat}.get.parameters[7].enum.length": 8,
	"paths./addresses.{outputFormat}.get.parameters[7].enum[0]": 4326,
	"paths./addresses.{outputFormat}.get.parameters[7].enum[1]": 4269,
	"paths./addresses.{outputFormat}.get.parameters[7].enum[2]": 3005,
	"paths./addresses.{outputFormat}.get.parameters[7].enum[3]": 26907,
	"paths./addresses.{outputFormat}.get.parameters[7].enum[4]": 26908,
	"paths./addresses.{outputFormat}.get.parameters[7].enum[5]": 26909,
	"paths./addresses.{outputFormat}.get.parameters[7].enum[6]": 26910,
	"paths./addresses.{outputFormat}.get.parameters[7].enum[7]": 26911,
	"paths./addresses.{outputFormat}.get.parameters[7].in": "query",
	"paths./addresses.{outputFormat}.get.parameters[7].name": "outputSRS",
	"paths./addresses.{outputFormat}.get.parameters[7].required": false,
	"paths./addresses.{outputFormat}.get.parameters[7].type": "integer",
	"paths./addresses.{outputFormat}.get.parameters[8].default": 1,
	"paths./addresses.{outputFormat}.get.parameters[8].description": "The minimum score required for a match to be returned. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#minScore target=\"_blank\"\u003eminScore\u003c/a\u003e",
	"paths./addresses.{outputFormat}.get.parameters[8].in": "query",
	"paths./addresses.{outputFormat}.get.parameters[8].name": "minScore",
	"paths./addresses.{outputFormat}.get.parameters[8].required": false,
	"paths./addresses.{outputFormat}.get.parameters[8].type": "integer",
	"paths./addresses.{outputFormat}.get.parameters[9].description": "Example: street,locality.  A comma separated list of individual match precision levels to include in results. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#matchPrecision target=\"_blank\"\u003ematchPrecision\u003c/a\u003e",
	"paths./addresses.{outputFormat}.get.parameters[9].in": "query",
	"paths./addresses.{outputFormat}.get.parameters[9].name": "matchPrecision",
	"paths./addresses.{outputFormat}.get.parameters[9].required": false,
	"paths./addresses.{outputFormat}.get.parameters[9].type": "string",
	"paths./addresses.{outputFormat}.get.responses.200.description": "A list of matching sites or intersections and their physical locations. See \u003ca href='https://github.com/bcgov/api-specs/blob/master/geocoder/geocoder-developer-guide.md#resource-representations-in-http-responses' target=\"_blank\"\u003eaddresses response\u003c/a\u003e",
	"paths./addresses.{outputFormat}.get.responses.400.description": "Bad request",
	"paths./addresses.{outputFormat}.get.responses.401.description": "Invalid or missing api key",
	"paths./addresses.{outputFormat}.get.summary": "Geocode an address",
	"paths./addresses.{outputFormat}.get.tags.length": 2,
	"paths./addresses.{outputFormat}.get.tags[0]": "sites",
	"paths./addresses.{outputFormat}.get.tags[1]": "intersections",
	"paths./intersections/near.{outputFormat}.get.description": "Represents intersections near a given point",
	"paths./intersections/near.{outputFormat}.get.parameters.length": 7,
	"paths./intersections/near.{outputFormat}.get.parameters[0].default": "json",
	"paths./intersections/near.{outputFormat}.get.parameters[0].description": "Results format. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputFormat target=\"_blank\"\u003eoutputFormat\u003c/a\u003e",
	"paths./intersections/near.{outputFormat}.get.parameters[0].enum.length": 7,
	"paths./intersections/near.{outputFormat}.get.parameters[0].enum[0]": "json",
	"paths./intersections/near.{outputFormat}.get.parameters[0].enum[1]": "geojson",
	"paths./intersections/near.{outputFormat}.get.parameters[0].enum[2]": "xhtml",
	"paths./intersections/near.{outputFormat}.get.parameters[0].enum[3]": "kml",
	"paths./intersections/near.{outputFormat}.get.parameters[0].enum[4]": "gml",
	"paths./intersections/near.{outputFormat}.get.parameters[0].enum[5]": "csv",
	"paths./intersections/near.{outputFormat}.get.parameters[0].enum[6]": "shpz",
	"paths./intersections/near.{outputFormat}.get.parameters[0].in": "path",
	"paths./intersections/near.{outputFormat}.get.parameters[0].name": "outputFormat",
	"paths./intersections/near.{outputFormat}.get.parameters[0].required": true,
	"paths./intersections/near.{outputFormat}.get.parameters[0].type": "string",
	"paths./intersections/near.{outputFormat}.get.parameters[1].description": "Example: -122.377,50.121  The point (x,y) from which the nearest site will be identified. The coordinates must be specified in the same SRS as given by the 'outputSRS' parameter.",
	"paths./intersections/near.{outputFormat}.get.parameters[1].in": "query",
	"paths./intersections/near.{outputFormat}.get.parameters[1].name": "point",
	"paths./intersections/near.{outputFormat}.get.parameters[1].required": true,
	"paths./intersections/near.{outputFormat}.get.parameters[1].type": "string",
	"paths./intersections/near.{outputFormat}.get.parameters[2].description": "The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited.",
	"paths./intersections/near.{outputFormat}.get.parameters[2].in": "query",
	"paths./intersections/near.{outputFormat}.get.parameters[2].name": "maxDistance",
	"paths./intersections/near.{outputFormat}.get.parameters[2].required": false,
	"paths./intersections/near.{outputFormat}.get.parameters[2].type": "integer",
	"paths./intersections/near.{outputFormat}.get.parameters[3].default": 4326,
	"paths./intersections/near.{outputFormat}.get.parameters[3].description": "The EPSG code of the spatial reference system (SRS) to use for output geometries. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputSRS target=\"_blank\"\u003eoutputSRS\u003c/a\u003e",
	"paths./intersections/near.{outputFormat}.get.parameters[3].enum.length": 8,
	"paths./intersections/near.{outputFormat}.get.parameters[3].enum[0]": 4326,
	"paths./intersections/near.{outputFormat}.get.parameters[3].enum[1]": 4269,
	"paths./intersections/near.{outputFormat}.get.parameters[3].enum[2]": 3005,
	"paths./intersections/near.{outputFormat}.get.parameters[3].enum[3]": 26907,
	"paths./intersections/near.{outputFormat}.get.parameters[3].enum[4]": 26908,
	"paths./intersections/near.{outputFormat}.get.parameters[3].enum[5]": 26909,
	"paths./intersections/near.{outputFormat}.get.parameters[3].enum[6]": 26910,
	"paths./intersections/near.{outputFormat}.get.parameters[3].enum[7]": 26911,
	"paths./intersections/near.{outputFormat}.get.parameters[3].in": "query",
	"paths./intersections/near.{outputFormat}.get.parameters[3].name": "outputSRS",
	"paths./intersections/near.{outputFormat}.get.parameters[3].required": true,
	"paths./intersections/near.{outputFormat}.get.parameters[3].type": "integer",
	"paths./intersections/near.{outputFormat}.get.parameters[4].default": 1,
	"paths./intersections/near.{outputFormat}.get.parameters[4].description": "The maximum number of search results to return.",
	"paths./intersections/near.{outputFormat}.get.parameters[4].in": "query",
	"paths./intersections/near.{outputFormat}.get.parameters[4].name": "maxResults",
	"paths./intersections/near.{outputFormat}.get.parameters[4].required": false,
	"paths./intersections/near.{outputFormat}.get.parameters[4].type": "integer",
	"paths./intersections/near.{outputFormat}.get.parameters[5].default": 2,
	"paths./intersections/near.{outputFormat}.get.parameters[5].description": "The minimum degree an intersection can have to be included in results. A dead-end has a degree of 1.",
	"paths./intersections/near.{outputFormat}.get.parameters[5].in": "query",
	"paths./intersections/near.{outputFormat}.get.parameters[5].name": "minDegree",
	"paths./intersections/near.{outputFormat}.get.parameters[5].required": false,
	"paths./intersections/near.{outputFormat}.get.parameters[5].type": "integer",
	"paths./intersections/near.{outputFormat}.get.parameters[6].default": 100,
	"paths./intersections/near.{outputFormat}.get.parameters[6].description": "The maximum degree an interesection can have to be included in results. A four-way stop has a degree of 4.",
	"paths./intersections/near.{outputFormat}.get.parameters[6].in": "query",
	"paths./intersections/near.{outputFormat}.get.parameters[6].name": "maxDegree",
	"paths./intersections/near.{outputFormat}.get.parameters[6].required": false,
	"paths./intersections/near.{outputFormat}.get.parameters[6].type": "integer",
	"paths./intersections/near.{outputFormat}.get.responses.200.description": "A list of selected intersections near a given point. Each intersection is in \u003ca href=\"https://github.com/bcgov/api-specs/blob/master/geocoder/geocoder-developer-guide.md#intersection-address-representation\" target=\"_blank\"\u003eIntersection Address Representation\u003c/a\u003e",
	"paths./intersections/near.{outputFormat}.get.responses.400.description": "Bad request",
	"paths./intersections/near.{outputFormat}.get.responses.401.description": "Invalid or missing api key",
	"paths./intersections/near.{outputFormat}.get.summary": "Find intersections near to a geographic point",
	"paths./intersections/near.{outputFormat}.get.tags.length": 1,
	"paths./intersections/near.{outputFormat}.get.tags[0]": "intersections",
	"paths./intersections/nearest.{outputFormat}.get.description": "Represents the closest intersection to a given point",
	"paths./intersections/nearest.{outputFormat}.get.parameters.length": 6,
	"paths./intersections/nearest.{outputFormat}.get.parameters[0].default": "json",
	"paths./intersections/nearest.{outputFormat}.get.parameters[0].description": "Results format. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputFormat target=\"_blank\"\u003eoutputFormat\u003c/a\u003e",
	"paths./intersections/nearest.{outputFormat}.get.parameters[0].enum.length": 7,
	"paths./intersections/nearest.{outputFormat}.get.parameters[0].enum[0]": "json",
	"paths./intersections/nearest.{outputFormat}.get.parameters[0].enum[1]": "geojson",
	"paths./intersections/nearest.{outputFormat}.get.parameters[0].enum[2]": "xhtml",
	"paths./intersections/nearest.{outputFormat}.get.parameters[0].enum[3]": "kml",
	"paths./intersections/nearest.{outputFormat}.get.parameters[0].enum[4]": "gml",
	"paths./intersections/nearest.{outputFormat}.get.parameters[0].enum[5]": "csv",
	"paths./intersections/nearest.{outputFormat}.get.parameters[0].enum[6]": "shpz",
	"paths./intersections/nearest.{outputFormat}.get.parameters[0].in": "path",
	"paths./intersections/nearest.{outputFormat}.get.parameters[0].name": "outputFormat",
	"paths./intersections/nearest.{outputFormat}.get.parameters[0].required": true,
	"paths./intersections/nearest.{outputFormat}.get.parameters[0].type": "string",
	"paths./intersections/nearest.{outputFormat}.get.parameters[1].description": "Example: -122.377,50.121  The point (x,y) from which the nearest site will be identified. The coordinates must be specified in the same SRS as given by the 'outputSRS' parameter.",
	"paths./intersections/nearest.{outputFormat}.get.parameters[1].in": "query",
	"paths./intersections/nearest.{outputFormat}.get.parameters[1].name": "point",
	"paths./intersections/nearest.{outputFormat}.get.parameters[1].required": true,
	"paths./intersections/nearest.{outputFormat}.get.parameters[1].type": "string",
	"paths./intersections/nearest.{outputFormat}.get.parameters[2].description": "The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited.",
	"paths./intersections/nearest.{outputFormat}.get.parameters[2].in": "query",
	"paths./intersections/nearest.{outputFormat}.get.parameters[2].name": "maxDistance",
	"paths./intersections/nearest.{outputFormat}.get.parameters[2].required": false,
	"paths./intersections/nearest.{outputFormat}.get.parameters[2].type": "integer",
	"paths./intersections/nearest.{outputFormat}.get.parameters[3].default": 4326,
	"paths./intersections/nearest.{outputFormat}.get.parameters[3].description": "The EPSG code of the spatial reference system (SRS) to use for output geometries. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputSRS target=\"_blank\"\u003eoutputSRS\u003c/a\u003e",
	"paths./intersections/nearest.{outputFormat}.get.parameters[3].enum.length": 8,
	"paths./intersections/nearest.{outputFormat}.get.parameters[3].enum[0]": 4326,
	"paths./intersections/nearest.{outputFormat}.get.parameters[3].enum[1]": 4269,
	"paths./intersections/nearest.{outputFormat}.get.parameters[3].enum[2]": 3005,
	"paths./intersections/nearest.{outputFormat}.get.parameters[3].enum[3]": 26907,
	"paths./intersections/nearest.{outputFormat}.get.parameters[3].enum[4]": 26908,
	"paths./intersections/nearest.{outputFormat}.get.parameters[3].enum[5]": 26909,
	"paths./intersections/nearest.{outputFormat}.get.parameters[3].enum[6]": 26910,
	"paths./intersections/nearest.{outputFormat}.get.parameters[3].enum[7]": 26911,
	"paths./intersections/nearest.{outputFormat}.get.parameters[3].in": "query",
	"paths./intersections/nearest.{outputFormat}.get.parameters[3].name": "outputSRS",
	"paths./intersections/nearest.{outputFormat}.get.parameters[3].required": false,
	"paths./intersections/nearest.{outputFormat}.get.parameters[3].type": "integer",
	"paths./intersections/nearest.{outputFormat}.get.parameters[4].default": 2,
	"paths./intersections/nearest.{outputFormat}.get.parameters[4].description": "The minimum degree an intersection can have to be included in results. A dead-end has a degree of 1.",
	"paths./intersections/nearest.{outputFormat}.get.parameters[4].in": "query",
	"paths./intersections/nearest.{outputFormat}.get.parameters[4].name": "minDegree",
	"paths./intersections/nearest.{outputFormat}.get.parameters[4].required": false,
	"paths./intersections/nearest.{outputFormat}.get.parameters[4].type": "integer",
	"paths./intersections/nearest.{outputFormat}.get.parameters[5].default": 100,
	"paths./intersections/nearest.{outputFormat}.get.parameters[5].description": "The maximum degree an interesection can have to be included in results. A four-way stop has a degree of 4.",
	"paths./intersections/nearest.{outputFormat}.get.parameters[5].in": "query",
	"paths./intersections/nearest.{outputFormat}.get.parameters[5].name": "maxDegree",
	"paths./intersections/nearest.{outputFormat}.get.parameters[5].required": false,
	"paths./intersections/nearest.{outputFormat}.get.parameters[5].type": "integer",
	"paths./intersections/nearest.{outputFormat}.get.responses.200.description": "The nearest intersection in \u003ca href=\"https://github.com/bcgov/api-specs/blob/master/geocoder/geocoder-developer-guide.md#intersection-address-representation\" target=\"_blank\"\u003eIntersection Address Representation\u003c/a\u003e",
	"paths./intersections/nearest.{outputFormat}.get.responses.400.description": "Bad request",
	"paths./intersections/nearest.{outputFormat}.get.responses.401.description": "Invalid or missing api key",
	"paths./intersections/nearest.{outputFormat}.get.summary": "Find nearest intersection to a geographic point",
	"paths./intersections/nearest.{outputFormat}.get.tags.length": 1,
	"paths./intersections/nearest.{outputFormat}.get.tags[0]": "intersections",
	"paths./intersections/within.{outputFormat}.get.description": "Represents all intersections within a given area",
	"paths./intersections/within.{outputFormat}.get.parameters.length": 6,
	"paths./intersections/within.{outputFormat}.get.parameters[0].default": "json",
	"paths./intersections/within.{outputFormat}.get.parameters[0].description": "Results format. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputFormattarget=\"_blank\"\u003eoutputFormat\u003c/a\u003e",
	"paths./intersections/within.{outputFormat}.get.parameters[0].enum.length": 7,
	"paths./intersections/within.{outputFormat}.get.parameters[0].enum[0]": "json",
	"paths./intersections/within.{outputFormat}.get.parameters[0].enum[1]": "geojson",
	"paths./intersections/within.{outputFormat}.get.parameters[0].enum[2]": "xhtml",
	"paths./intersections/within.{outputFormat}.get.parameters[0].enum[3]": "kml",
	"paths./intersections/within.{outputFormat}.get.parameters[0].enum[4]": "gml",
	"paths./intersections/within.{outputFormat}.get.parameters[0].enum[5]": "csv",
	"paths./intersections/within.{outputFormat}.get.parameters[0].enum[6]": "shpz",
	"paths./intersections/within.{outputFormat}.get.parameters[0].in": "path",
	"paths./intersections/within.{outputFormat}.get.parameters[0].name": "outputFormat",
	"paths./intersections/within.{outputFormat}.get.parameters[0].required": true,
	"paths./intersections/within.{outputFormat}.get.parameters[0].type": "string",
	"paths./intersections/within.{outputFormat}.get.parameters[1].description": "Example: -119.51,49.48,-119.53,49.50. A bounding box (xmin,ymin,xmax,ymax) used to limit the search area. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#bbox target=\"_blank\"\u003ebbox\u003c/a\u003e",
	"paths./intersections/within.{outputFormat}.get.parameters[1].in": "query",
	"paths./intersections/within.{outputFormat}.get.parameters[1].name": "bbox",
	"paths./intersections/within.{outputFormat}.get.parameters[1].required": true,
	"paths./intersections/within.{outputFormat}.get.parameters[1].type": "string",
	"paths./intersections/within.{outputFormat}.get.parameters[2].default": 4326,
	"paths./intersections/within.{outputFormat}.get.parameters[2].description": "The EPSG code of the spatial reference system (SRS) to use for output geometries. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputSRS target=\"_blank\"\u003eoutputSRS\u003c/a\u003e",
	"paths./intersections/within.{outputFormat}.get.parameters[2].enum.length": 8,
	"paths./intersections/within.{outputFormat}.get.parameters[2].enum[0]": 4326,
	"paths./intersections/within.{outputFormat}.get.parameters[2].enum[1]": 4269,
	"paths./intersections/within.{outputFormat}.get.parameters[2].enum[2]": 3005,
	"paths./intersections/within.{outputFormat}.get.parameters[2].enum[3]": 26907,
	"paths./intersections/within.{outputFormat}.get.parameters[2].enum[4]": 26908,
	"paths./intersections/within.{outputFormat}.get.parameters[2].enum[5]": 26909,
	"paths./intersections/within.{outputFormat}.get.parameters[2].enum[6]": 26910,
	"paths./intersections/within.{outputFormat}.get.parameters[2].enum[7]": 26911,
	"paths./intersections/within.{outputFormat}.get.parameters[2].in": "query",
	"paths./intersections/within.{outputFormat}.get.parameters[2].name": "outputSRS",
	"paths./intersections/within.{outputFormat}.get.parameters[2].required": false,
	"paths./intersections/within.{outputFormat}.get.parameters[2].type": "integer",
	"paths./intersections/within.{outputFormat}.get.parameters[3].default": 200,
	"paths./intersections/within.{outputFormat}.get.parameters[3].description": "The maximum number of search results",
	"paths./intersections/within.{outputFormat}.get.parameters[3].in": "query",
	"paths./intersections/within.{outputFormat}.get.parameters[3].name": "maxResults",
	"paths./intersections/within.{outputFormat}.get.parameters[3].required": false,
	"paths./intersections/within.{outputFormat}.get.parameters[3].type": "integer",
	"paths./intersections/within.{outputFormat}.get.parameters[4].default": 2,
	"paths./intersections/within.{outputFormat}.get.parameters[4].description": "The minimum degree an intersection can have to be included in results. A dead-end has a degree of 1.",
	"paths./intersections/within.{outputFormat}.get.parameters[4].in": "query",
	"paths./intersections/within.{outputFormat}.get.parameters[4].name": "minDegree",
	"paths./intersections/within.{outputFormat}.get.parameters[4].required": false,
	"paths./intersections/within.{outputFormat}.get.parameters[4].type": "integer",
	"paths./intersections/within.{outputFormat}.get.parameters[5].default": 100,
	"paths./intersections/within.{outputFormat}.get.parameters[5].description": "The maximum degree an interesection can have to be included in results. A four-way stop has a degree of 4.",
	"paths./intersections/within.{outputFormat}.get.parameters[5].in": "query",
	"paths./intersections/within.{outputFormat}.get.parameters[5].name": "maxDegree",
	"paths./intersections/within.{outputFormat}.get.parameters[5].required": false,
	"paths./intersections/within.{outputFormat}.get.parameters[5].type": "integer",
	"paths./intersections/within.{outputFormat}.get.responses.200.description": "A list of selected intersections within the given area. Each intersection is in Each intersection is in \u003ca href=\"https://github.com/bcgov/api-specs/blob/master/geocoder/geocoder-developer-guide.md#intersection-address-representation\" target=\"_blank\"\u003eIntersection Address Representation\u003c/a\u003e",
	"paths./intersections/within.{outputFormat}.get.responses.400.description": "Bad request",
	"paths./intersections/within.{outputFormat}.get.responses.401.description": "Invalid or missing api key",
	"paths./intersections/within.{outputFormat}.get.summary": "Find intersections in a geographic area",
	"paths./intersections/within.{outputFormat}.get.tags.length": 1,
	"paths./intersections/within.{outputFormat}.get.tags[0]": "intersections",
	"paths./intersections/{intersectionID}.{outputFormat}.get.description": "Represents a individual intersection",
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters.length": 3,
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[0].description": "A unique intersection identifier",
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[0].in": "path",
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[0].name": "intersectionID",
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[0].required": true,
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[0].type": "string",
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[1].default": "json",
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[1].description": "Results format. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputFormat target=\"_blank\"\u003eoutputFormat\u003c/a\u003e",
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[1].enum.length": 7,
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[1].enum[0]": "json",
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[1].enum[1]": "geojson",
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[1].enum[2]": "xhtml",
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[1].enum[3]": "kml",
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[1].enum[4]": "gml",
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[1].enum[5]": "csv",
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[1].enum[6]": "shpz",
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[1].in": "path",
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[1].name": "outputFormat",
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[1].required": true,
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[1].type": "string",
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[2].default": 4326,
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[2].description": "The EPSG code of the spatial reference system (SRS) to use for output geometries. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputSRS target=\"_blank\"\u003eoutputSRS\u003c/a\u003e",
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[2].enum.length": 8,
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[2].enum[0]": 4326,
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[2].enum[1]": 4269,
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[2].enum[2]": 3005,
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[2].enum[3]": 26907,
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[2].enum[4]": 26908,
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[2].enum[5]": 26909,
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[2].enum[6]": 26910,
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[2].enum[7]": 26911,
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[2].in": "query",
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[2].name": "outputSRS",
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[2].required": false,
	"paths./intersections/{intersectionID}.{outputFormat}.get.parameters[2].type": "integer",
	"paths./intersections/{intersectionID}.{outputFormat}.get.responses.200.description": "The Intersection with the requested intersectionID in \u003ca href=\"https://github.com/bcgov/api-specs/blob/master/geocoder/geocoder-developer-guide.md#intersection-address-representation\" target=\"_blank\"\u003eIntersection Address Representation\u003c/a\u003e",
	"paths./intersections/{intersectionID}.{outputFormat}.get.responses.400.description": "Bad request",
	"paths./intersections/{intersectionID}.{outputFormat}.get.responses.401.description": "Invalid or missing api key",
	"paths./intersections/{intersectionID}.{outputFormat}.get.summary": "Get an intersection by its unique ID",
	"paths./intersections/{intersectionID}.{outputFormat}.get.tags.length": 1,
	"paths./intersections/{intersectionID}.{outputFormat}.get.tags[0]": "intersections",
	"paths./occupants/addresses.{outputFormat}.get.description": "Represents the set of occupants whose addresses best match a given query address. Every occupant has an associated site which has a standardized address and a coordinate location on the Earth.",
	"paths./occupants/addresses.{outputFormat}.get.parameters.length": 31,
	"paths./occupants/addresses.{outputFormat}.get.parameters[0].default": "json",
	"paths./occupants/addresses.{outputFormat}.get.parameters[0].description": "Results format. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputFormat target=\"_blank\"\u003eoutputFormat\u003c/a\u003e",
	"paths./occupants/addresses.{outputFormat}.get.parameters[0].enum.length": 7,
	"paths./occupants/addresses.{outputFormat}.get.parameters[0].enum[0]": "json",
	"paths./occupants/addresses.{outputFormat}.get.parameters[0].enum[1]": "geojson",
	"paths./occupants/addresses.{outputFormat}.get.parameters[0].enum[2]": "xhtml",
	"paths./occupants/addresses.{outputFormat}.get.parameters[0].enum[3]": "kml",
	"paths./occupants/addresses.{outputFormat}.get.parameters[0].enum[4]": "gml",
	"paths./occupants/addresses.{outputFormat}.get.parameters[0].enum[5]": "csv",
	"paths./occupants/addresses.{outputFormat}.get.parameters[0].enum[6]": "shpz",
	"paths./occupants/addresses.{outputFormat}.get.parameters[0].in": "path",
	"paths./occupants/addresses.{outputFormat}.get.parameters[0].name": "outputFormat",
	"paths./occupants/addresses.{outputFormat}.get.parameters[0].required": true,
	"paths./occupants/addresses.{outputFormat}.get.parameters[0].type": "string",
	"paths./occupants/addresses.{outputFormat}.get.parameters[10].default": "OCCUPANT",
	"paths./occupants/addresses.{outputFormat}.get.parameters[10].description": "Example: street,locality.  A comma separated list of individual match precision levels to include in results. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#matchPrecision target=\"_blank\"\u003ematchPrecision\u003c/a\u003e",
	"paths./occupants/addresses.{outputFormat}.get.parameters[10].in": "query",
	"paths./occupants/addresses.{outputFormat}.get.parameters[10].name": "matchPrecision",
	"paths./occupants/addresses.{outputFormat}.get.parameters[10].required": false,
	"paths./occupants/addresses.{outputFormat}.get.parameters[10].type": "string",
	"paths./occupants/addresses.{outputFormat}.get.parameters[11].description": "Example: street,locality.  A comma separated list of individual match precision levels to exclude from results. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#matchPrecisionNot target=\"_blank\"\u003ematchPrecisionNot\u003c/a\u003e",
	"paths./occupants/addresses.{outputFormat}.get.parameters[11].in": "query",
	"paths./occupants/addresses.{outputFormat}.get.parameters[11].name": "matchPrecisionNot",
	"paths./occupants/addresses.{outputFormat}.get.parameters[11].required": false,
	"paths./occupants/addresses.{outputFormat}.get.parameters[11].type": "string",
	"paths./occupants/addresses.{outputFormat}.get.parameters[12].description": "A string containing the name of the building, facility, or institution (e.g., Duck Building, Casa Del Mar, Crystal Garden, Bluebird House).See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#siteName target=\"_blank\"\u003esiteName\u003c/a\u003e",
	"paths./occupants/addresses.{outputFormat}.get.parameters[12].in": "query",
	"paths./occupants/addresses.{outputFormat}.get.parameters[12].name": "siteName",
	"paths./occupants/addresses.{outputFormat}.get.parameters[12].required": false,
	"paths./occupants/addresses.{outputFormat}.get.parameters[12].type": "string",
	"paths./occupants/addresses.{outputFormat}.get.parameters[13].description": "The type of unit within a house or building. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#unitDesignator target=\"_blank\"\u003eunitDesignator\u003c/a\u003e",
	"paths./occupants/addresses.{outputFormat}.get.parameters[13].enum.length": 16,
	"paths./occupants/addresses.{outputFormat}.get.parameters[13].enum[0]": "APT",
	"paths./occupants/addresses.{outputFormat}.get.parameters[13].enum[10]": "SIDE",
	"paths./occupants/addresses.{outputFormat}.get.parameters[13].enum[11]": "SITE",
	"paths./occupants/addresses.{outputFormat}.get.parameters[13].enum[12]": "SUITE",
	"paths./occupants/addresses.{outputFormat}.get.parameters[13].enum[13]": "TH",
	"paths./occupants/addresses.{outputFormat}.get.parameters[13].enum[14]": "UNIT",
	"paths./occupants/addresses.{outputFormat}.get.parameters[13].enum[15]": "UPPR",
	"paths./occupants/addresses.{outputFormat}.get.parameters[13].enum[1]": "BLDG",
	"paths./occupants/addresses.{outputFormat}.get.parameters[13].enum[2]": "BSMT",
	"paths./occupants/addresses.{outputFormat}.get.parameters[13].enum[3]": "FLR",
	"paths./occupants/addresses.{outputFormat}.get.parameters[13].enum[4]": "LOBBY",
	"paths./occupants/addresses.{outputFormat}.get.parameters[13].enum[5]": "LWR",
	"paths./occupants/addresses.{outputFormat}.get.parameters[13].enum[6]": "PAD",
	"paths./occupants/addresses.{outputFormat}.get.parameters[13].enum[7]": "PH",
	"paths./occupants/addresses.{outputFormat}.get.parameters[13].enum[8]": "REAR",
	"paths./occupants/addresses.{outputFormat}.get.parameters[13].enum[9]": "RM",
	"paths./occupants/addresses.{outputFormat}.get.parameters[13].in": "query",
	"paths./occupants/addresses.{outputFormat}.get.parameters[13].name": "unitDesignator",
	"paths./occupants/addresses.{outputFormat}.get.parameters[13].required": false,
	"paths./occupants/addresses.{outputFormat}.get.parameters[13].type": "string",
	"paths./occupants/addresses.{outputFormat}.get.parameters[14].description": "The number of the unit, suite, or apartment within a house or building.",
	"paths./occupants/addresses.{outputFormat}.get.parameters[14].in": "query",
	"paths./occupants/addresses.{outputFormat}.get.parameters[14].name": "unitNumber",
	"paths./occupants/addresses.{outputFormat}.get.parameters[14].required": false,
	"paths./occupants/addresses.{outputFormat}.get.parameters[14].type": "string",
	"paths./occupants/addresses.{outputFormat}.get.parameters[15].description": "A letter that follows the unit number as in Unit 1A or Suite 302B.",
	"paths./occupants/addresses.{outputFormat}.get.parameters[15].in": "query",
	"paths./occupants/addresses.{outputFormat}.get.parameters[15].name": "unitNumberSuffix",
	"paths./occupants/addresses.{outputFormat}.get.parameters[15].required": false,
	"paths./occupants/addresses.{outputFormat}.get.parameters[15].type": "string",
	"paths./occupants/addresses.{outputFormat}.get.parameters[16].description": "The official number assigned to a site by an address authority. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#civicNumber target=\"_blank\"\u003ecivicNumber\u003c/a\u003e",
	"paths./occupants/addresses.{outputFormat}.get.parameters[16].in": "query",
	"paths./occupants/addresses.{outputFormat}.get.parameters[16].name": "civicNumber",
	"paths./occupants/addresses.{outputFormat}.get.parameters[16].required": false,
	"paths./occupants/addresses.{outputFormat}.get.parameters[16].type": "string",
	"paths./occupants/addresses.{outputFormat}.get.parameters[17].description": "A letter or fraction that follows the civic number (e.g., the A in 1039A Bledsoe St). See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#civicNumberSuffix target=\"_blank\"\u003ecivicNumberSuffix\u003c/a\u003e",
	"paths./occupants/addresses.{outputFormat}.get.parameters[17].in": "query",
	"paths./occupants/addresses.{outputFormat}.get.parameters[17].name": "civicNumberSuffix",
	"paths./occupants/addresses.{outputFormat}.get.parameters[17].required": false,
	"paths./occupants/addresses.{outputFormat}.get.parameters[17].type": "string",
	"paths./occupants/addresses.{outputFormat}.get.parameters[18].description": "The official name of the street as assigned by an address authority (e.g., the Douglas in 1175 Douglas Street). See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#streetName target=\"_blank\"\u003estreetName\u003c/a\u003e",
	"paths./occupants/addresses.{outputFormat}.get.parameters[18].in": "query",
	"paths./occupants/addresses.{outputFormat}.get.parameters[18].name": "streetName",
	"paths./occupants/addresses.{outputFormat}.get.parameters[18].required": false,
	"paths./occupants/addresses.{outputFormat}.get.parameters[18].type": "string",
	"paths./occupants/addresses.{outputFormat}.get.parameters[19].description": "The type of street as assigned by a municipality (e.g., the ST in 1175 DOUGLAS St). See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#streetType target=\"_blank\"\u003estreetType\u003c/a\u003e",
	"paths./occupants/addresses.{outputFormat}.get.parameters[19].in": "query",
	"paths./occupants/addresses.{outputFormat}.get.parameters[19].name": "streetType",
	"paths./occupants/addresses.{outputFormat}.get.parameters[19].required": false,
	"paths./occupants/addresses.{outputFormat}.get.parameters[19].type": "string",
	"paths./occupants/addresses.{outputFormat}.get.parameters[1].description": "Examples: Redfish Elementary --\u003cbr\u003eRedfish Elementary -- Balfour\u003cbr\u003eRedfish Elementary School -- 265 Bryan Rd, Balfour, BC\u003cbr\u003eOccupant name followed by a frontGate delimiter ('--') followed by an optional address",
	"paths./occupants/addresses.{outputFormat}.get.parameters[1].in": "query",
	"paths./occupants/addresses.{outputFormat}.get.parameters[1].name": "addressString",
	"paths./occupants/addresses.{outputFormat}.get.parameters[1].required": false,
	"paths./occupants/addresses.{outputFormat}.get.parameters[1].type": "string",
	"paths./occupants/addresses.{outputFormat}.get.parameters[20].description": "The abbreviated compass direction as defined by Canada Post and B.C. civic addressing authorities. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#streetDirection target=\"_blank\"\u003estreetDirection\u003c/a\u003e",
	"paths./occupants/addresses.{outputFormat}.get.parameters[20].enum.length": 11,
	"paths./occupants/addresses.{outputFormat}.get.parameters[20].enum[0]": "N",
	"paths./occupants/addresses.{outputFormat}.get.parameters[20].enum[10]": "SW",
	"paths./occupants/addresses.{outputFormat}.get.parameters[20].enum[1]": "S",
	"paths./occupants/addresses.{outputFormat}.get.parameters[20].enum[2]": "E",
	"paths./occupants/addresses.{outputFormat}.get.parameters[20].enum[3]": "W",
	"paths./occupants/addresses.{outputFormat}.get.parameters[20].enum[4]": "O",
	"paths./occupants/addresses.{outputFormat}.get.parameters[20].enum[5]": "NE",
	"paths./occupants/addresses.{outputFormat}.get.parameters[20].enum[6]": "NO",
	"paths./occupants/addresses.{outputFormat}.get.parameters[20].enum[7]": "NW",
	"paths./occupants/addresses.{outputFormat}.get.parameters[20].enum[8]": "SE",
	"paths./occupants/addresses.{outputFormat}.get.parameters[20].enum[9]": "SO",
	"paths./occupants/addresses.{outputFormat}.get.parameters[20].in": "query",
	"paths./occupants/addresses.{outputFormat}.get.parameters[20].name": "streetDirection",
	"paths./occupants/addresses.{outputFormat}.get.parameters[20].required": false,
	"paths./occupants/addresses.{outputFormat}.get.parameters[20].type": "string",
	"paths./occupants/addresses.{outputFormat}.get.parameters[21].description": "The qualifier of a street name (e.g., the Bridge in Johnson St Bridge)",
	"paths./occupants/addresses.{outputFormat}.get.parameters[21].in": "query",
	"paths./occupants/addresses.{outputFormat}.get.parameters[21].name": "streetQualifier",
	"paths./occupants/addresses.{outputFormat}.get.parameters[21].required": false,
	"paths./occupants/addresses.{outputFormat}.get.parameters[21].type": "string",
	"paths./occupants/addresses.{outputFormat}.get.parameters[22].description": "The name of the locality assigned to a given site by an address authority. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#streetDirection target=\"_blank\"\u003estreetDirection\u003c/a\u003e",
	"paths./occupants/addresses.{outputFormat}.get.parameters[22].in": "query",
	"paths./occupants/addresses.{outputFormat}.get.parameters[22].name": "localityName",
	"paths./occupants/addresses.{outputFormat}.get.parameters[22].required": false,
	"paths./occupants/addresses.{outputFormat}.get.parameters[22].type": "string",
	"paths./occupants/addresses.{outputFormat}.get.parameters[23].default": "BC",
	"paths./occupants/addresses.{outputFormat}.get.parameters[23].description": "The ISO 3166-2 Sub-Country Code. The code for British Columbia is BC.",
	"paths./occupants/addresses.{outputFormat}.get.parameters[23].in": "query",
	"paths./occupants/addresses.{outputFormat}.get.parameters[23].name": "provinceCode",
	"paths./occupants/addresses.{outputFormat}.get.parameters[23].required": false,
	"paths./occupants/addresses.{outputFormat}.get.parameters[23].type": "string",
	"paths./occupants/addresses.{outputFormat}.get.parameters[24].description": "A comma separated list of locality names that matched addresses must belong to. For example, setting localities to Nanaimo only returns addresses in Nanaimo",
	"paths./occupants/addresses.{outputFormat}.get.parameters[24].in": "query",
	"paths./occupants/addresses.{outputFormat}.get.parameters[24].name": "localities",
	"paths./occupants/addresses.{outputFormat}.get.parameters[24].required": false,
	"paths./occupants/addresses.{outputFormat}.get.parameters[24].type": "string",
	"paths./occupants/addresses.{outputFormat}.get.parameters[25].description": "A comma-separated list of localities to exclude from the search.",
	"paths./occupants/addresses.{outputFormat}.get.parameters[25].in": "query",
	"paths./occupants/addresses.{outputFormat}.get.parameters[25].name": "notLocalities",
	"paths./occupants/addresses.{outputFormat}.get.parameters[25].required": false,
	"paths./occupants/addresses.{outputFormat}.get.parameters[25].type": "string",
	"paths./occupants/addresses.{outputFormat}.get.parameters[26].description": "Example: -126.07929,49.7628,-126.0163,49.7907.  A bounding box (xmin,ymin,xmax,ymax) that limits the search area. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#bbox target=\"_blank\"\u003ebbox\u003c/a\u003e",
	"paths./occupants/addresses.{outputFormat}.get.parameters[26].in": "query",
	"paths./occupants/addresses.{outputFormat}.get.parameters[26].name": "bbox",
	"paths./occupants/addresses.{outputFormat}.get.parameters[26].required": false,
	"paths./occupants/addresses.{outputFormat}.get.parameters[26].type": "string",
	"paths./occupants/addresses.{outputFormat}.get.parameters[27].description": "Example: -124.0165,49.2296.  The coordinates of a centre point (x,y) used to define a bounding circle that will limit the search area. This parameter must be specified together with 'maxDistance'. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#centre target='_blank'\u003ecentre\u003c/a\u003e",
	"paths./occupants/addresses.{outputFormat}.get.parameters[27].in": "query",
	"paths./occupants/addresses.{outputFormat}.get.parameters[27].name": "centre",
	"paths./occupants/addresses.{outputFormat}.get.parameters[27].required": false,
	"paths./occupants/addresses.{outputFormat}.get.parameters[27].type": "string",
	"paths./occupants/addresses.{outputFormat}.get.parameters[28].description": "The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited.",
	"paths./occupants/addresses.{outputFormat}.get.parameters[28].in": "query",
	"paths./occupants/addresses.{outputFormat}.get.parameters[28].name": "maxDistance",
	"paths./occupants/addresses.{outputFormat}.get.parameters[28].required": false,
	"paths./occupants/addresses.{outputFormat}.get.parameters[28].type": "number",
	"paths./occupants/addresses.{outputFormat}.get.parameters[29].description": "If true, uses supplied parcelPoint to derive an appropriate accessPoint.           See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#extrapolate target=\"_blank\"\u003eextrapolate\u003c/a\u003e",
	"paths./occupants/addresses.{outputFormat}.get.parameters[29].in": "query",
	"paths./occupants/addresses.{outputFormat}.get.parameters[29].name": "extrapolate",
	"paths./occupants/addresses.{outputFormat}.get.parameters[29].required": false,
	"paths./occupants/addresses.{outputFormat}.get.parameters[29].type": "boolean",
	"paths./occupants/addresses.{outputFormat}.get.parameters[2].description": "Example: schools;courts;employment\u003cbr\u003eA list of tags separated by semicolons.",
	"paths./occupants/addresses.{outputFormat}.get.parameters[2].in": "query",
	"paths./occupants/addresses.{outputFormat}.get.parameters[2].name": "tags",
	"paths./occupants/addresses.{outputFormat}.get.parameters[2].required": false,
	"paths./occupants/addresses.{outputFormat}.get.parameters[2].type": "string",
	"paths./occupants/addresses.{outputFormat}.get.parameters[30].description": "The coordinates of a point (x,y) known to be inside the parcel containing a given address. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#parcelPoint target=\"_blank\"\u003eparcelPoint\u003c/a\u003e",
	"paths./occupants/addresses.{outputFormat}.get.parameters[30].in": "query",
	"paths./occupants/addresses.{outputFormat}.get.parameters[30].name": "parcelPoint",
	"paths./occupants/addresses.{outputFormat}.get.parameters[30].required": false,
	"paths./occupants/addresses.{outputFormat}.get.parameters[30].type": "string",
	"paths./occupants/addresses.{outputFormat}.get.parameters[3].default": "any",
	"paths./occupants/addresses.{outputFormat}.get.parameters[3].description": "Describes the nature of the address location. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#locationDescriptor target=\"_blank\"\u003elocationDescriptor\u003c/a\u003e",
	"paths./occupants/addresses.{outputFormat}.get.parameters[3].enum.length": 6,
	"paths./occupants/addresses.{outputFormat}.get.parameters[3].enum[0]": "any",
	"paths./occupants/addresses.{outputFormat}.get.parameters[3].enum[1]": "accessPoint",
	"paths./occupants/addresses.{outputFormat}.get.parameters[3].enum[2]": "frontDoorPoint",
	"paths./occupants/addresses.{outputFormat}.get.parameters[3].enum[3]": "parcelPoint",
	"paths./occupants/addresses.{outputFormat}.get.parameters[3].enum[4]": "rooftopPoint",
	"paths./occupants/addresses.{outputFormat}.get.parameters[3].enum[5]": "routingPoint",
	"paths./occupants/addresses.{outputFormat}.get.parameters[3].in": "query",
	"paths./occupants/addresses.{outputFormat}.get.parameters[3].name": "locationDescriptor",
	"paths./occupants/addresses.{outputFormat}.get.parameters[3].required": false,
	"paths./occupants/addresses.{outputFormat}.get.parameters[3].type": "string",
	"paths./occupants/addresses.{outputFormat}.get.parameters[4].default": 1,
	"paths./occupants/addresses.{outputFormat}.get.parameters[4].description": "The maximum number of search results to return.",
	"paths./occupants/addresses.{outputFormat}.get.parameters[4].in": "query",
	"paths./occupants/addresses.{outputFormat}.get.parameters[4].name": "maxResults",
	"paths./occupants/addresses.{outputFormat}.get.parameters[4].required": false,
	"paths./occupants/addresses.{outputFormat}.get.parameters[4].type": "integer",
	"paths./occupants/addresses.{outputFormat}.get.parameters[5].default": "adaptive",
	"paths./occupants/addresses.{outputFormat}.get.parameters[5].description": "accessPoint interpolation method. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#interpolation target=\"_blank\"\u003einterpolation\u003c/a\u003e",
	"paths./occupants/addresses.{outputFormat}.get.parameters[5].enum.length": 3,
	"paths./occupants/addresses.{outputFormat}.get.parameters[5].enum[0]": "adaptive",
	"paths./occupants/addresses.{outputFormat}.get.parameters[5].enum[1]": "linear",
	"paths./occupants/addresses.{outputFormat}.get.parameters[5].enum[2]": "none",
	"paths./occupants/addresses.{outputFormat}.get.parameters[5].in": "query",
	"paths./occupants/addresses.{outputFormat}.get.parameters[5].name": "interpolation",
	"paths./occupants/addresses.{outputFormat}.get.parameters[5].required": false,
	"paths./occupants/addresses.{outputFormat}.get.parameters[5].type": "string",
	"paths./occupants/addresses.{outputFormat}.get.parameters[6].default": false,
	"paths./occupants/addresses.{outputFormat}.get.parameters[6].description": "If true, include unmatched address details such as site name in results.",
	"paths./occupants/addresses.{outputFormat}.get.parameters[6].in": "query",
	"paths./occupants/addresses.{outputFormat}.get.parameters[6].name": "echo",
	"paths./occupants/addresses.{outputFormat}.get.parameters[6].type": "boolean",
	"paths./occupants/addresses.{outputFormat}.get.parameters[7].default": 0,
	"paths./occupants/addresses.{outputFormat}.get.parameters[7].description": "The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.",
	"paths./occupants/addresses.{outputFormat}.get.parameters[7].in": "query",
	"paths./occupants/addresses.{outputFormat}.get.parameters[7].name": "setBack",
	"paths./occupants/addresses.{outputFormat}.get.parameters[7].required": false,
	"paths./occupants/addresses.{outputFormat}.get.parameters[7].type": "integer",
	"paths./occupants/addresses.{outputFormat}.get.parameters[8].default": 4326,
	"paths./occupants/addresses.{outputFormat}.get.parameters[8].description": "The EPSG code of the spatial reference system (SRS) to use for output geometries. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputSRS target=\"_blank\"\u003eoutputSRS\u003c/a\u003e",
	"paths./occupants/addresses.{outputFormat}.get.parameters[8].enum.length": 8,
	"paths./occupants/addresses.{outputFormat}.get.parameters[8].enum[0]": 4326,
	"paths./occupants/addresses.{outputFormat}.get.parameters[8].enum[1]": 4269,
	"paths./occupants/addresses.{outputFormat}.get.parameters[8].enum[2]": 3005,
	"paths./occupants/addresses.{outputFormat}.get.parameters[8].enum[3]": 26907,
	"paths./occupants/addresses.{outputFormat}.get.parameters[8].enum[4]": 26908,
	"paths./occupants/addresses.{outputFormat}.get.parameters[8].enum[5]": 26909,
	"paths./occupants/addresses.{outputFormat}.get.parameters[8].enum[6]": 26910,
	"paths./occupants/addresses.{outputFormat}.get.parameters[8].enum[7]": 26911,
	"paths./occupants/addresses.{outputFormat}.get.parameters[8].in": "query",
	"paths./occupants/addresses.{outputFormat}.get.parameters[8].name": "outputSRS",
	"paths./occupants/addresses.{outputFormat}.get.parameters[8].required": false,
	"paths./occupants/addresses.{outputFormat}.get.parameters[8].type": "integer",
	"paths./occupants/addresses.{outputFormat}.get.parameters[9].default": 1,
	"paths./occupants/addresses.{outputFormat}.get.parameters[9].description": "The minimum score required for a match to be returned. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#minScore target=\"_blank\"\u003eminScore\u003c/a\u003e",
	"paths./occupants/addresses.{outputFormat}.get.parameters[9].in": "query",
	"paths./occupants/addresses.{outputFormat}.get.parameters[9].name": "minScore",
	"paths./occupants/addresses.{outputFormat}.get.parameters[9].required": false,
	"paths./occupants/addresses.{outputFormat}.get.parameters[9].type": "integer",
	"paths./occupants/addresses.{outputFormat}.get.responses.200.description": "A list of matching occupants, sites, and their physical locations. Response document will contain one \u003ca href=\"https://github.com/bcgov/api-specs/blob/master/geocoder/geocoder-developer-guide.md#about-query-representation\" target=\"_blank\"\u003eAbout Query Representation\u003c/a\u003e and one \u003ca href=\"https://github.com/bcgov/api-specs/blob/master/geocoder/geocoder-developer-guide.md#site-address-representation\" target=\"_blank\"\u003eSite Address Representation\u003c/a\u003e plus \u003ca href=\"https://github.com/bcgov/api-specs/blob/master/geocoder/geocoder-developer-guide.md#occupant-representation\" target=\"_blank\"\u003eOccupant Representation\u003c/a\u003e for each matching occupant.",
	"paths./occupants/addresses.{outputFormat}.get.responses.400.description": "Bad request",
	"paths./occupants/addresses.{outputFormat}.get.responses.401.description": "Invalid or missing api key",
	"paths./occupants/addresses.{outputFormat}.get.summary": "Geocode an address and identify site occupants",
	"paths./occupants/addresses.{outputFormat}.get.tags.length": 1,
	"paths./occupants/addresses.{outputFormat}.get.tags[0]": "occupants",
	"paths./occupants/near.{outputFormat}.get.description": "Represents occupants near a given point in order of closest to farthest",
	"paths./occupants/near.{outputFormat}.get.parameters.length": 9,
	"paths./occupants/near.{outputFormat}.get.parameters[0].default": "json",
	"paths./occupants/near.{outputFormat}.get.parameters[0].description": "Results format. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputFormat target=\"_blank\"\u003eoutputFormat\u003c/a\u003e",
	"paths./occupants/near.{outputFormat}.get.parameters[0].enum.length": 7,
	"paths./occupants/near.{outputFormat}.get.parameters[0].enum[0]": "json",
	"paths./occupants/near.{outputFormat}.get.parameters[0].enum[1]": "geojson",
	"paths./occupants/near.{outputFormat}.get.parameters[0].enum[2]": "xhtml",
	"paths./occupants/near.{outputFormat}.get.parameters[0].enum[3]": "kml",
	"paths./occupants/near.{outputFormat}.get.parameters[0].enum[4]": "gml",
	"paths./occupants/near.{outputFormat}.get.parameters[0].enum[5]": "csv",
	"paths./occupants/near.{outputFormat}.get.parameters[0].enum[6]": "shpz",
	"paths./occupants/near.{outputFormat}.get.parameters[0].in": "path",
	"paths./occupants/near.{outputFormat}.get.parameters[0].name": "outputFormat",
	"paths./occupants/near.{outputFormat}.get.parameters[0].required": true,
	"paths./occupants/near.{outputFormat}.get.parameters[0].type": "string",
	"paths./occupants/near.{outputFormat}.get.parameters[1].description": "Example: -122.377,50.121  The point (x,y) from which the nearest site will be identified. The coordinates must be specified in the same SRS as given by the 'outputSRS' parameter.",
	"paths./occupants/near.{outputFormat}.get.parameters[1].in": "query",
	"paths./occupants/near.{outputFormat}.get.parameters[1].name": "point",
	"paths./occupants/near.{outputFormat}.get.parameters[1].required": true,
	"paths./occupants/near.{outputFormat}.get.parameters[1].type": "string",
	"paths./occupants/near.{outputFormat}.get.parameters[2].description": "Example: schools;courts;employment\u003cbr\u003eA list of tags separated by semicolons.",
	"paths./occupants/near.{outputFormat}.get.parameters[2].in": "query",
	"paths./occupants/near.{outputFormat}.get.parameters[2].name": "tags",
	"paths./occupants/near.{outputFormat}.get.parameters[2].required": false,
	"paths./occupants/near.{outputFormat}.get.parameters[2].type": "string",
	"paths./occupants/near.{outputFormat}.get.parameters[3].description": "The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited.",
	"paths./occupants/near.{outputFormat}.get.parameters[3].in": "query",
	"paths./occupants/near.{outputFormat}.get.parameters[3].name": "maxDistance",
	"paths./occupants/near.{outputFormat}.get.parameters[3].required": false,
	"paths./occupants/near.{outputFormat}.get.parameters[3].type": "integer",
	"paths./occupants/near.{outputFormat}.get.parameters[4].default": 4326,
	"paths./occupants/near.{outputFormat}.get.parameters[4].description": "The EPSG code of the spatial reference system (SRS) to use for output geometries. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputSRS target=\"_blank\"\u003eoutputSRS\u003c/a\u003e",
	"paths./occupants/near.{outputFormat}.get.parameters[4].enum.length": 8,
	"paths./occupants/near.{outputFormat}.get.parameters[4].enum[0]": 4326,
	"paths./occupants/near.{outputFormat}.get.parameters[4].enum[1]": 4269,
	"paths./occupants/near.{outputFormat}.get.parameters[4].enum[2]": 3005,
	"paths./occupants/near.{outputFormat}.get.parameters[4].enum[3]": 26907,
	"paths./occupants/near.{outputFormat}.get.parameters[4].enum[4]": 26908,
	"paths./occupants/near.{outputFormat}.get.parameters[4].enum[5]": 26909,
	"paths./occupants/near.{outputFormat}.get.parameters[4].enum[6]": 26910,
	"paths./occupants/near.{outputFormat}.get.parameters[4].enum[7]": 26911,
	"paths./occupants/near.{outputFormat}.get.parameters[4].in": "query",
	"paths./occupants/near.{outputFormat}.get.parameters[4].name": "outputSRS",
	"paths./occupants/near.{outputFormat}.get.parameters[4].required": false,
	"paths./occupants/near.{outputFormat}.get.parameters[4].type": "integer",
	"paths./occupants/near.{outputFormat}.get.parameters[5].default": 1,
	"paths./occupants/near.{outputFormat}.get.parameters[5].description": "The maximum number of search results to return.",
	"paths./occupants/near.{outputFormat}.get.parameters[5].in": "query",
	"paths./occupants/near.{outputFormat}.get.parameters[5].name": "maxResults",
	"paths./occupants/near.{outputFormat}.get.parameters[5].required": false,
	"paths./occupants/near.{outputFormat}.get.parameters[5].type": "integer",
	"paths./occupants/near.{outputFormat}.get.parameters[6].default": "any",
	"paths./occupants/near.{outputFormat}.get.parameters[6].description": "Describes the nature of the address location. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#locationDescriptor target=\"_blank\"\u003elocationDescriptor\u003c/a\u003e",
	"paths./occupants/near.{outputFormat}.get.parameters[6].enum.length": 6,
	"paths./occupants/near.{outputFormat}.get.parameters[6].enum[0]": "any",
	"paths./occupants/near.{outputFormat}.get.parameters[6].enum[1]": "accessPoint",
	"paths./occupants/near.{outputFormat}.get.parameters[6].enum[2]": "frontDoorPoint",
	"paths./occupants/near.{outputFormat}.get.parameters[6].enum[3]": "parcelPoint",
	"paths./occupants/near.{outputFormat}.get.parameters[6].enum[4]": "rooftopPoint",
	"paths./occupants/near.{outputFormat}.get.parameters[6].enum[5]": "routingPoint",
	"paths./occupants/near.{outputFormat}.get.parameters[6].in": "query",
	"paths./occupants/near.{outputFormat}.get.parameters[6].name": "locationDescriptor",
	"paths./occupants/near.{outputFormat}.get.parameters[6].required": false,
	"paths./occupants/near.{outputFormat}.get.parameters[6].type": "string",
	"paths./occupants/near.{outputFormat}.get.parameters[7].default": 0,
	"paths./occupants/near.{outputFormat}.get.parameters[7].description": "The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.",
	"paths./occupants/near.{outputFormat}.get.parameters[7].in": "query",
	"paths./occupants/near.{outputFormat}.get.parameters[7].name": "setBack",
	"paths./occupants/near.{outputFormat}.get.parameters[7].required": false,
	"paths./occupants/near.{outputFormat}.get.parameters[7].type": "integer",
	"paths./occupants/near.{outputFormat}.get.parameters[8].description": "If true, excludes sites that are units of a parent site",
	"paths./occupants/near.{outputFormat}.get.parameters[8].in": "query",
	"paths./occupants/near.{outputFormat}.get.parameters[8].name": "excludeUnits",
	"paths./occupants/near.{outputFormat}.get.parameters[8].required": false,
	"paths./occupants/near.{outputFormat}.get.parameters[8].type": "boolean",
	"paths./occupants/near.{outputFormat}.get.responses.200.description": "A list of selected occupants that are near a given point in order of closest to farther. Each occupant is returned as a \u003ca href=\"https://github.com/bcgov/api-specs/blob/master/geocoder/geocoder-developer-guide.md#site-address-representation\" target=\"_blank\"\u003eSite Address Representation\u003c/a\u003e plus a \u003ca href=\"https://github.com/bcgov/api-specs/blob/master/geocoder/geocoder-developer-guide.md#occupant-representation\" target=\"_blank\"\u003eOccupant Representation\u003c/a\u003e",
	"paths./occupants/near.{outputFormat}.get.responses.400.description": "Bad request",
	"paths./occupants/near.{outputFormat}.get.responses.401.description": "Invalid or missing api key",
	"paths./occupants/near.{outputFormat}.get.summary": "Find occupants of sites near to a geographic point",
	"paths./occupants/near.{outputFormat}.get.tags.length": 1,
	"paths./occupants/near.{outputFormat}.get.tags[0]": "occupants",
	"paths./occupants/nearest.{outputFormat}.get.description": "Represents the closest occupant to a given point",
	"paths./occupants/nearest.{outputFormat}.get.parameters.length": 7,
	"paths./occupants/nearest.{outputFormat}.get.parameters[0].default": "json",
	"paths./occupants/nearest.{outputFormat}.get.parameters[0].description": "Results format. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputFormat target=\"_blank\"\u003eoutputFormat\u003c/a\u003e",
	"paths./occupants/nearest.{outputFormat}.get.parameters[0].enum.length": 7,
	"paths./occupants/nearest.{outputFormat}.get.parameters[0].enum[0]": "json",
	"paths./occupants/nearest.{outputFormat}.get.parameters[0].enum[1]": "geojson",
	"paths./occupants/nearest.{outputFormat}.get.parameters[0].enum[2]": "xhtml",
	"paths./occupants/nearest.{outputFormat}.get.parameters[0].enum[3]": "kml",
	"paths./occupants/nearest.{outputFormat}.get.parameters[0].enum[4]": "gml",
	"paths./occupants/nearest.{outputFormat}.get.parameters[0].enum[5]": "csv",
	"paths./occupants/nearest.{outputFormat}.get.parameters[0].enum[6]": "shpz",
	"paths./occupants/nearest.{outputFormat}.get.parameters[0].in": "path",
	"paths./occupants/nearest.{outputFormat}.get.parameters[0].name": "outputFormat",
	"paths./occupants/nearest.{outputFormat}.get.parameters[0].required": true,
	"paths./occupants/nearest.{outputFormat}.get.parameters[0].type": "string",
	"paths./occupants/nearest.{outputFormat}.get.parameters[1].description": "Example: -122.377,50.121  The point (x,y) from which the nearest site will be identified. The coordinates must be specified in the same SRS as given by the 'outputSRS' parameter.",
	"paths./occupants/nearest.{outputFormat}.get.parameters[1].in": "query",
	"paths./occupants/nearest.{outputFormat}.get.parameters[1].name": "point",
	"paths./occupants/nearest.{outputFormat}.get.parameters[1].required": true,
	"paths./occupants/nearest.{outputFormat}.get.parameters[1].type": "string",
	"paths./occupants/nearest.{outputFormat}.get.parameters[2].description": "The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited.",
	"paths./occupants/nearest.{outputFormat}.get.parameters[2].in": "query",
	"paths./occupants/nearest.{outputFormat}.get.parameters[2].name": "maxDistance",
	"paths./occupants/nearest.{outputFormat}.get.parameters[2].required": false,
	"paths./occupants/nearest.{outputFormat}.get.parameters[2].type": "integer",
	"paths./occupants/nearest.{outputFormat}.get.parameters[3].description": "Example: schools;courts;employment\u003cbr\u003eA list of tags separated by semicolons.",
	"paths./occupants/nearest.{outputFormat}.get.parameters[3].in": "query",
	"paths./occupants/nearest.{outputFormat}.get.parameters[3].name": "tags",
	"paths./occupants/nearest.{outputFormat}.get.parameters[3].required": false,
	"paths./occupants/nearest.{outputFormat}.get.parameters[3].type": "string",
	"paths./occupants/nearest.{outputFormat}.get.parameters[4].default": 4326,
	"paths./occupants/nearest.{outputFormat}.get.parameters[4].description": "The EPSG code of the spatial reference system (SRS) to use for output geometries. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputSRS target=\"_blank\"\u003eoutputSRS\u003c/a\u003e",
	"paths./occupants/nearest.{outputFormat}.get.parameters[4].enum.length": 8,
	"paths./occupants/nearest.{outputFormat}.get.parameters[4].enum[0]": 4326,
	"paths./occupants/nearest.{outputFormat}.get.parameters[4].enum[1]": 4269,
	"paths./occupants/nearest.{outputFormat}.get.parameters[4].enum[2]": 3005,
	"paths./occupants/nearest.{outputFormat}.get.parameters[4].enum[3]": 26907,
	"paths./occupants/nearest.{outputFormat}.get.parameters[4].enum[4]": 26908,
	"paths./occupants/nearest.{outputFormat}.get.parameters[4].enum[5]": 26909,
	"paths./occupants/nearest.{outputFormat}.get.parameters[4].enum[6]": 26910,
	"paths./occupants/nearest.{outputFormat}.get.parameters[4].enum[7]": 26911,
	"paths./occupants/nearest.{outputFormat}.get.parameters[4].in": "query",
	"paths./occupants/nearest.{outputFormat}.get.parameters[4].name": "outputSRS",
	"paths./occupants/nearest.{outputFormat}.get.parameters[4].required": false,
	"paths./occupants/nearest.{outputFormat}.get.parameters[4].type": "integer",
	"paths./occupants/nearest.{outputFormat}.get.parameters[5].default": "any",
	"paths./occupants/nearest.{outputFormat}.get.parameters[5].description": "Describes the nature of the address location. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#locationDescriptor target=\"_blank\"\u003elocationDescriptor\u003c/a\u003e",
	"paths./occupants/nearest.{outputFormat}.get.parameters[5].enum.length": 6,
	"paths./occupants/nearest.{outputFormat}.get.parameters[5].enum[0]": "any",
	"paths./occupants/nearest.{outputFormat}.get.parameters[5].enum[1]": "accessPoint",
	"paths./occupants/nearest.{outputFormat}.get.parameters[5].enum[2]": "frontDoorPoint",
	"paths./occupants/nearest.{outputFormat}.get.parameters[5].enum[3]": "parcelPoint",
	"paths./occupants/nearest.{outputFormat}.get.parameters[5].enum[4]": "rooftopPoint",
	"paths./occupants/nearest.{outputFormat}.get.parameters[5].enum[5]": "routingPoint",
	"paths./occupants/nearest.{outputFormat}.get.parameters[5].in": "query",
	"paths./occupants/nearest.{outputFormat}.get.parameters[5].name": "locationDescriptor",
	"paths./occupants/nearest.{outputFormat}.get.parameters[5].required": false,
	"paths./occupants/nearest.{outputFormat}.get.parameters[5].type": "string",
	"paths./occupants/nearest.{outputFormat}.get.parameters[6].default": 0,
	"paths./occupants/nearest.{outputFormat}.get.parameters[6].description": "The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.",
	"paths./occupants/nearest.{outputFormat}.get.parameters[6].in": "query",
	"paths./occupants/nearest.{outputFormat}.get.parameters[6].name": "setBack",
	"paths./occupants/nearest.{outputFormat}.get.parameters[6].required": false,
	"paths./occupants/nearest.{outputFormat}.get.parameters[6].type": "integer",
	"paths./occupants/nearest.{outputFormat}.get.responses.200.description": "The nearest occupant in \u003ca href=\"https://github.com/bcgov/api-specs/blob/master/geocoder/geocoder-developer-guide.md#site-address-representation\" target=\"_blank\"\u003eSite Address Representation\u003c/a\u003e plus \u003ca href=\"https://github.com/bcgov/api-specs/blob/master/geocoder/geocoder-developer-guide.md#occupant-representation\" target=\"_blank\"\u003eOccupant Representation\u003c/a\u003e",
	"paths./occupants/nearest.{outputFormat}.get.responses.400.description": "Bad request",
	"paths./occupants/nearest.{outputFormat}.get.responses.401.description": "Invalid or missing api key",
	"paths./occupants/nearest.{outputFormat}.get.summary": "Find occupants of the site nearest to a geographic point",
	"paths./occupants/nearest.{outputFormat}.get.tags.length": 1,
	"paths./occupants/nearest.{outputFormat}.get.tags[0]": "occupants",
	"paths./occupants/within.{outputFormat}.get.description": "Represents all occupants within a given area",
	"paths./occupants/within.{outputFormat}.get.parameters.length": 7,
	"paths./occupants/within.{outputFormat}.get.parameters[0].default": "json",
	"paths./occupants/within.{outputFormat}.get.parameters[0].description": "Results format. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputFormat target=\"_blank\"\u003eoutputFormat\u003c/a\u003e",
	"paths./occupants/within.{outputFormat}.get.parameters[0].enum.length": 7,
	"paths./occupants/within.{outputFormat}.get.parameters[0].enum[0]": "json",
	"paths./occupants/within.{outputFormat}.get.parameters[0].enum[1]": "geojson",
	"paths./occupants/within.{outputFormat}.get.parameters[0].enum[2]": "xhtml",
	"paths./occupants/within.{outputFormat}.get.parameters[0].enum[3]": "kml",
	"paths./occupants/within.{outputFormat}.get.parameters[0].enum[4]": "gml",
	"paths./occupants/within.{outputFormat}.get.parameters[0].enum[5]": "csv",
	"paths./occupants/within.{outputFormat}.get.parameters[0].enum[6]": "shpz",
	"paths./occupants/within.{outputFormat}.get.parameters[0].in": "path",
	"paths./occupants/within.{outputFormat}.get.parameters[0].name": "outputFormat",
	"paths./occupants/within.{outputFormat}.get.parameters[0].required": true,
	"paths./occupants/within.{outputFormat}.get.parameters[0].type": "string",
	"paths./occupants/within.{outputFormat}.get.parameters[1].description": "Example: -119.51,49.48,-119.53,49.50. A bounding box (xmin,ymin,xmax,ymax) used to limit the search area. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#bbox target=\"_blank\"\u003ebbox\u003c/a\u003e",
	"paths./occupants/within.{outputFormat}.get.parameters[1].in": "query",
	"paths./occupants/within.{outputFormat}.get.parameters[1].name": "bbox",
	"paths./occupants/within.{outputFormat}.get.parameters[1].required": true,
	"paths./occupants/within.{outputFormat}.get.parameters[1].type": "string",
	"paths./occupants/within.{outputFormat}.get.parameters[2].description": "Example: schools;courts;employment\u003cbr\u003eA list of tags separated by semicolons.",
	"paths./occupants/within.{outputFormat}.get.parameters[2].in": "query",
	"paths./occupants/within.{outputFormat}.get.parameters[2].name": "tags",
	"paths./occupants/within.{outputFormat}.get.parameters[2].required": false,
	"paths./occupants/within.{outputFormat}.get.parameters[2].type": "string",
	"paths./occupants/within.{outputFormat}.get.parameters[3].default": 4326,
	"paths./occupants/within.{outputFormat}.get.parameters[3].description": "The EPSG code of the spatial reference system (SRS) to use for output geometries. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputSRS target=\"_blank\"\u003eoutputSRS\u003c/a\u003e",
	"paths./occupants/within.{outputFormat}.get.parameters[3].enum.length": 8,
	"paths./occupants/within.{outputFormat}.get.parameters[3].enum[0]": 4326,
	"paths./occupants/within.{outputFormat}.get.parameters[3].enum[1]": 4269,
	"paths./occupants/within.{outputFormat}.get.parameters[3].enum[2]": 3005,
	"paths./occupants/within.{outputFormat}.get.parameters[3].enum[3]": 26907,
	"paths./occupants/within.{outputFormat}.get.parameters[3].enum[4]": 26908,
	"paths./occupants/within.{outputFormat}.get.parameters[3].enum[5]": 26909,
	"paths./occupants/within.{outputFormat}.get.parameters[3].enum[6]": 26910,
	"paths./occupants/within.{outputFormat}.get.parameters[3].enum[7]": 26911,
	"paths./occupants/within.{outputFormat}.get.parameters[3].in": "query",
	"paths./occupants/within.{outputFormat}.get.parameters[3].name": "outputSRS",
	"paths./occupants/within.{outputFormat}.get.parameters[3].required": false,
	"paths./occupants/within.{outputFormat}.get.parameters[3].type": "integer",
	"paths./occupants/within.{outputFormat}.get.parameters[4].default": 200,
	"paths./occupants/within.{outputFormat}.get.parameters[4].description": "The maximum number of search results to return.",
	"paths./occupants/within.{outputFormat}.get.parameters[4].in": "query",
	"paths./occupants/within.{outputFormat}.get.parameters[4].name": "maxResults",
	"paths./occupants/within.{outputFormat}.get.parameters[4].required": false,
	"paths./occupants/within.{outputFormat}.get.parameters[4].type": "integer",
	"paths./occupants/within.{outputFormat}.get.parameters[5].default": "any",
	"paths./occupants/within.{outputFormat}.get.parameters[5].description": "Describes the nature of the address location. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#locationDescriptor target=\"_blank\"\u003elocationDescriptor\u003c/a\u003e",
	"paths./occupants/within.{outputFormat}.get.parameters[5].enum.length": 6,
	"paths./occupants/within.{outputFormat}.get.parameters[5].enum[0]": "any",
	"paths./occupants/within.{outputFormat}.get.parameters[5].enum[1]": "accessPoint",
	"paths./occupants/within.{outputFormat}.get.parameters[5].enum[2]": "frontDoorPoint",
	"paths./occupants/within.{outputFormat}.get.parameters[5].enum[3]": "parcelPoint",
	"paths./occupants/within.{outputFormat}.get.parameters[5].enum[4]": "rooftopPoint",
	"paths./occupants/within.{outputFormat}.get.parameters[5].enum[5]": "routingPoint",
	"paths./occupants/within.{outputFormat}.get.parameters[5].in": "query",
	"paths./occupants/within.{outputFormat}.get.parameters[5].name": "locationDescriptor",
	"paths./occupants/within.{outputFormat}.get.parameters[5].required": false,
	"paths./occupants/within.{outputFormat}.get.parameters[5].type": "string",
	"paths./occupants/within.{outputFormat}.get.parameters[6].default": 0,
	"paths./occupants/within.{outputFormat}.get.parameters[6].description": "The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.",
	"paths./occupants/within.{outputFormat}.get.parameters[6].in": "query",
	"paths./occupants/within.{outputFormat}.get.parameters[6].name": "setBack",
	"paths./occupants/within.{outputFormat}.get.parameters[6].required": false,
	"paths./occupants/within.{outputFormat}.get.parameters[6].type": "integer",
	"paths./occupants/within.{outputFormat}.get.responses.200.description": "A list of selected occupants within the given area. Each occupant is returned in a \u003ca href=\"https://github.com/bcgov/api-specs/blob/master/geocoder/geocoder-developer-guide.md#site-address-representation\" target=\"_blank\"\u003eSite Address Representation\u003c/a\u003e plus \u003ca href=\"https://github.com/bcgov/api-specs/blob/master/geocoder/geocoder-developer-guide.md#occupant-representation\" target=\"_blank\"\u003eOccupant Representation\u003c/a\u003e",
	"paths./occupants/within.{outputFormat}.get.responses.400.description": "Bad request",
	"paths./occupants/within.{outputFormat}.get.responses.401.description": "Invalid or missing api key",
	"paths./occupants/within.{outputFormat}.get.summary": "Find occupants of sites in a geographic area",
	"paths./occupants/within.{outputFormat}.get.tags.length": 1,
	"paths./occupants/within.{outputFormat}.get.tags[0]": "occupants",
	"paths./occupants/{occupantID}.{outputFormat}.get.description": "Represents an individual occupant",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters.length": 5,
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[0].description": "Occupant identifier",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[0].in": "path",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[0].name": "occupantID",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[0].required": true,
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[0].type": "string",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[1].default": "json",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[1].description": "Results format. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputFormat target=\"_blank\"\u003eoutputFormat\u003c/a\u003e",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[1].enum.length": 7,
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[1].enum[0]": "json",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[1].enum[1]": "geojson",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[1].enum[2]": "xhtml",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[1].enum[3]": "kml",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[1].enum[4]": "gml",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[1].enum[5]": "csv",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[1].enum[6]": "shpz",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[1].in": "path",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[1].name": "outputFormat",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[1].required": true,
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[1].type": "string",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[2].default": 4326,
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[2].description": "The EPSG code of the spatial reference system (SRS) to use for output geometries. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputSRS target=\"_blank\"\u003eoutputSRS\u003c/a\u003e",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[2].enum.length": 8,
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[2].enum[0]": 4326,
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[2].enum[1]": 4269,
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[2].enum[2]": 3005,
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[2].enum[3]": 26907,
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[2].enum[4]": 26908,
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[2].enum[5]": 26909,
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[2].enum[6]": 26910,
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[2].enum[7]": 26911,
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[2].in": "query",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[2].name": "outputSRS",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[2].required": false,
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[2].type": "integer",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[3].default": "any",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[3].description": "Describes the nature of the address location. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#locationDescriptor target=\"_blank\"\u003elocationDescriptor\u003c/a\u003e",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[3].enum.length": 6,
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[3].enum[0]": "any",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[3].enum[1]": "accessPoint",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[3].enum[2]": "frontDoorPoint",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[3].enum[3]": "parcelPoint",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[3].enum[4]": "rooftopPoint",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[3].enum[5]": "routingPoint",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[3].in": "query",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[3].name": "locationDescriptor",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[3].required": false,
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[3].type": "string",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[4].default": 0,
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[4].description": "The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[4].in": "query",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[4].name": "setBack",
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[4].required": false,
	"paths./occupants/{occupantID}.{outputFormat}.get.parameters[4].type": "integer",
	"paths./occupants/{occupantID}.{outputFormat}.get.responses.200.description": "The occupant with the requested occupantID in \u003ca href=\"https://github.com/bcgov/api-specs/blob/master/geocoder/geocoder-developer-guide.md#site-address-representation\" target=\"_blank\"\u003eSite Address Representation\u003c/a\u003e plus \u003ca href=\"https://github.com/bcgov/api-specs/blob/master/geocoder/geocoder-developer-guide.md#occupant-representation\" target=\"_blank\"\u003eOccupant Representation\u003c/a\u003e",
	"paths./occupants/{occupantID}.{outputFormat}.get.responses.400.description": "Bad request",
	"paths./occupants/{occupantID}.{outputFormat}.get.responses.401.description": "Invalid or missing api key",
	"paths./occupants/{occupantID}.{outputFormat}.get.summary": "Get an occupant (of a site) by its unique ID",
	"paths./occupants/{occupantID}.{outputFormat}.get.tags.length": 1,
	"paths./occupants/{occupantID}.{outputFormat}.get.tags[0]": "occupants",
	"paths./sites/near.{outputFormat}.get.description": "Represents sites near a given point in the order of closest to farthest",
	"paths./sites/near.{outputFormat}.get.parameters.length": 8,
	"paths./sites/near.{outputFormat}.get.parameters[0].default": "json",
	"paths./sites/near.{outputFormat}.get.parameters[0].description": "Results format. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputFormat target=\"_blank\"\u003eoutputFormat\u003c/a\u003e",
	"paths./sites/near.{outputFormat}.get.parameters[0].enum.length": 7,
	"paths./sites/near.{outputFormat}.get.parameters[0].enum[0]": "json",
	"paths./sites/near.{outputFormat}.get.parameters[0].enum[1]": "geojson",
	"paths./sites/near.{outputFormat}.get.parameters[0].enum[2]": "xhtml",
	"paths./sites/near.{outputFormat}.get.parameters[0].enum[3]": "kml",
	"paths./sites/near.{outputFormat}.get.parameters[0].enum[4]": "gml",
	"paths./sites/near.{outputFormat}.get.parameters[0].enum[5]": "csv",
	"paths./sites/near.{outputFormat}.get.parameters[0].enum[6]": "shpz",
	"paths./sites/near.{outputFormat}.get.parameters[0].in": "path",
	"paths./sites/near.{outputFormat}.get.parameters[0].name": "outputFormat",
	"paths./sites/near.{outputFormat}.get.parameters[0].required": true,
	"paths./sites/near.{outputFormat}.get.parameters[0].type": "string",
	"paths./sites/near.{outputFormat}.get.parameters[1].description": "Example: -122.377,50.121  The point (x,y) from which the nearby sites will be identified. The coordinates must be specified in the same SRS as given by the 'outputSRS' parameter.",
	"paths./sites/near.{outputFormat}.get.parameters[1].in": "query",
	"paths./sites/near.{outputFormat}.get.parameters[1].name": "point",
	"paths./sites/near.{outputFormat}.get.parameters[1].required": true,
	"paths./sites/near.{outputFormat}.get.parameters[1].type": "string",
	"paths./sites/near.{outputFormat}.get.parameters[2].description": "The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited.",
	"paths./sites/near.{outputFormat}.get.parameters[2].in": "query",
	"paths./sites/near.{outputFormat}.get.parameters[2].name": "maxDistance",
	"paths./sites/near.{outputFormat}.get.parameters[2].required": false,
	"paths./sites/near.{outputFormat}.get.parameters[2].type": "integer",
	"paths./sites/near.{outputFormat}.get.parameters[3].default": 4326,
	"paths./sites/near.{outputFormat}.get.parameters[3].description": "The EPSG code of the spatial reference system (SRS) to use for output geometries. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputSRS target=\"_blank\"\u003eoutputSRS\u003c/a\u003e",
	"paths./sites/near.{outputFormat}.get.parameters[3].enum.length": 8,
	"paths./sites/near.{outputFormat}.get.parameters[3].enum[0]": 4326,
	"paths./sites/near.{outputFormat}.get.parameters[3].enum[1]": 4269,
	"paths./sites/near.{outputFormat}.get.parameters[3].enum[2]": 3005,
	"paths./sites/near.{outputFormat}.get.parameters[3].enum[3]": 26907,
	"paths./sites/near.{outputFormat}.get.parameters[3].enum[4]": 26908,
	"paths./sites/near.{outputFormat}.get.parameters[3].enum[5]": 26909,
	"paths./sites/near.{outputFormat}.get.parameters[3].enum[6]": 26910,
	"paths./sites/near.{outputFormat}.get.parameters[3].enum[7]": 26911,
	"paths./sites/near.{outputFormat}.get.parameters[3].in": "query",
	"paths./sites/near.{outputFormat}.get.parameters[3].name": "outputSRS",
	"paths./sites/near.{outputFormat}.get.parameters[3].required": false,
	"paths./sites/near.{outputFormat}.get.parameters[3].type": "integer",
	"paths./sites/near.{outputFormat}.get.parameters[4].default": 1,
	"paths./sites/near.{outputFormat}.get.parameters[4].description": "The maximum number of search results to return.",
	"paths./sites/near.{outputFormat}.get.parameters[4].in": "query",
	"paths./sites/near.{outputFormat}.get.parameters[4].name": "maxResults",
	"paths./sites/near.{outputFormat}.get.parameters[4].required": false,
	"paths./sites/near.{outputFormat}.get.parameters[4].type": "integer",
	"paths./sites/near.{outputFormat}.get.parameters[5].default": "any",
	"paths./sites/near.{outputFormat}.get.parameters[5].description": "Describes the nature of the address location. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#locationDescriptor target=\"_blank\"\u003elocationDescriptor\u003c/a\u003e",
	"paths./sites/near.{outputFormat}.get.parameters[5].enum.length": 6,
	"paths./sites/near.{outputFormat}.get.parameters[5].enum[0]": "any",
	"paths./sites/near.{outputFormat}.get.parameters[5].enum[1]": "accessPoint",
	"paths./sites/near.{outputFormat}.get.parameters[5].enum[2]": "frontDoorPoint",
	"paths./sites/near.{outputFormat}.get.parameters[5].enum[3]": "parcelPoint",
	"paths./sites/near.{outputFormat}.get.parameters[5].enum[4]": "rooftopPoint",
	"paths./sites/near.{outputFormat}.get.parameters[5].enum[5]": "routingPoint",
	"paths./sites/near.{outputFormat}.get.parameters[5].in": "query",
	"paths./sites/near.{outputFormat}.get.parameters[5].name": "locationDescriptor",
	"paths./sites/near.{outputFormat}.get.parameters[5].required": false,
	"paths./sites/near.{outputFormat}.get.parameters[5].type": "string",
	"paths./sites/near.{outputFormat}.get.parameters[6].default": 0,
	"paths./sites/near.{outputFormat}.get.parameters[6].description": "The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.",
	"paths./sites/near.{outputFormat}.get.parameters[6].in": "query",
	"paths./sites/near.{outputFormat}.get.parameters[6].name": "setBack",
	"paths./sites/near.{outputFormat}.get.parameters[6].required": false,
	"paths./sites/near.{outputFormat}.get.parameters[6].type": "integer",
	"paths./sites/near.{outputFormat}.get.parameters[7].description": "If true, excludes sites that are units of a parent site",
	"paths./sites/near.{outputFormat}.get.parameters[7].in": "query",
	"paths./sites/near.{outputFormat}.get.parameters[7].name": "excludeUnits",
	"paths./sites/near.{outputFormat}.get.parameters[7].required": false,
	"paths./sites/near.{outputFormat}.get.parameters[7].type": "boolean",
	"paths./sites/near.{outputFormat}.get.responses.200.description": "A list of selected sites that are near a given point in order of closest to farther. Each site in the response document is structured as a \u003ca href=\"https://github.com/bcgov/api-specs/blob/master/geocoder/geocoder-developer-guide.md#site-address-representation\" target=\"_blank\"\u003eSite Address Representation\u003c/a\u003e",
	"paths./sites/near.{outputFormat}.get.responses.400.description": "Bad request",
	"paths./sites/near.{outputFormat}.get.responses.401.description": "Invalid or missing api key",
	"paths./sites/near.{outputFormat}.get.summary": "Find sites near to a geographic point",
	"paths./sites/near.{outputFormat}.get.tags.length": 1,
	"paths./sites/near.{outputFormat}.get.tags[0]": "sites",
	"paths./sites/nearest.{outputFormat}.get.description": "Represents the site nearest a given point",
	"paths./sites/nearest.{outputFormat}.get.parameters.length": 7,
	"paths./sites/nearest.{outputFormat}.get.parameters[0].default": "json",
	"paths./sites/nearest.{outputFormat}.get.parameters[0].description": "Results format. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputFormat target=\"_blank\"\u003eoutputFormat\u003c/a\u003e",
	"paths./sites/nearest.{outputFormat}.get.parameters[0].enum.length": 7,
	"paths./sites/nearest.{outputFormat}.get.parameters[0].enum[0]": "json",
	"paths./sites/nearest.{outputFormat}.get.parameters[0].enum[1]": "geojson",
	"paths./sites/nearest.{outputFormat}.get.parameters[0].enum[2]": "xhtml",
	"paths./sites/nearest.{outputFormat}.get.parameters[0].enum[3]": "kml",
	"paths./sites/nearest.{outputFormat}.get.parameters[0].enum[4]": "gml",
	"paths./sites/nearest.{outputFormat}.get.parameters[0].enum[5]": "csv",
	"paths./sites/nearest.{outputFormat}.get.parameters[0].enum[6]": "shpz",
	"paths./sites/nearest.{outputFormat}.get.parameters[0].in": "path",
	"paths./sites/nearest.{outputFormat}.get.parameters[0].name": "outputFormat",
	"paths./sites/nearest.{outputFormat}.get.parameters[0].required": true,
	"paths./sites/nearest.{outputFormat}.get.parameters[0].type": "string",
	"paths./sites/nearest.{outputFormat}.get.parameters[1].description": "Example: -122.377,50.121  Centre point of search. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#point target=\"_blank\"\u003epoint\u003c/a\u003e",
	"paths./sites/nearest.{outputFormat}.get.parameters[1].in": "query",
	"paths./sites/nearest.{outputFormat}.get.parameters[1].name": "point",
	"paths./sites/nearest.{outputFormat}.get.parameters[1].required": true,
	"paths./sites/nearest.{outputFormat}.get.parameters[1].type": "string",
	"paths./sites/nearest.{outputFormat}.get.parameters[2].description": "The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited.",
	"paths./sites/nearest.{outputFormat}.get.parameters[2].in": "query",
	"paths./sites/nearest.{outputFormat}.get.parameters[2].name": "maxDistance",
	"paths./sites/nearest.{outputFormat}.get.parameters[2].required": false,
	"paths./sites/nearest.{outputFormat}.get.parameters[2].type": "integer",
	"paths./sites/nearest.{outputFormat}.get.parameters[3].default": 4326,
	"paths./sites/nearest.{outputFormat}.get.parameters[3].description": "The EPSG code of the spatial reference system (SRS) to use for output geometries. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputSRS target=\"_blank\"\u003eoutputSRS\u003c/a\u003e",
	"paths./sites/nearest.{outputFormat}.get.parameters[3].enum.length": 8,
	"paths./sites/nearest.{outputFormat}.get.parameters[3].enum[0]": 4326,
	"paths./sites/nearest.{outputFormat}.get.parameters[3].enum[1]": 4269,
	"paths./sites/nearest.{outputFormat}.get.parameters[3].enum[2]": 3005,
	"paths./sites/nearest.{outputFormat}.get.parameters[3].enum[3]": 26907,
	"paths./sites/nearest.{outputFormat}.get.parameters[3].enum[4]": 26908,
	"paths./sites/nearest.{outputFormat}.get.parameters[3].enum[5]": 26909,
	"paths./sites/nearest.{outputFormat}.get.parameters[3].enum[6]": 26910,
	"paths./sites/nearest.{outputFormat}.get.parameters[3].enum[7]": 26911,
	"paths./sites/nearest.{outputFormat}.get.parameters[3].in": "query",
	"paths./sites/nearest.{outputFormat}.get.parameters[3].name": "outputSRS",
	"paths./sites/nearest.{outputFormat}.get.parameters[3].required": false,
	"paths./sites/nearest.{outputFormat}.get.parameters[3].type": "integer",
	"paths./sites/nearest.{outputFormat}.get.parameters[4].default": "any",
	"paths./sites/nearest.{outputFormat}.get.parameters[4].description": "Describes the nature of the address location. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#locationDescriptor target=\"_blank\"\u003elocationDescriptor\u003c/a\u003e",
	"paths./sites/nearest.{outputFormat}.get.parameters[4].enum.length": 6,
	"paths./sites/nearest.{outputFormat}.get.parameters[4].enum[0]": "any",
	"paths./sites/nearest.{outputFormat}.get.parameters[4].enum[1]": "accessPoint",
	"paths./sites/nearest.{outputFormat}.get.parameters[4].enum[2]": "frontDoorPoint",
	"paths./sites/nearest.{outputFormat}.get.parameters[4].enum[3]": "parcelPoint",
	"paths./sites/nearest.{outputFormat}.get.parameters[4].enum[4]": "rooftopPoint",
	"paths./sites/nearest.{outputFormat}.get.parameters[4].enum[5]": "routingPoint",
	"paths./sites/nearest.{outputFormat}.get.parameters[4].in": "query",
	"paths./sites/nearest.{outputFormat}.get.parameters[4].name": "locationDescriptor",
	"paths./sites/nearest.{outputFormat}.get.parameters[4].required": false,
	"paths./sites/nearest.{outputFormat}.get.parameters[4].type": "string",
	"paths./sites/nearest.{outputFormat}.get.parameters[5].default": 0,
	"paths./sites/nearest.{outputFormat}.get.parameters[5].description": "The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.",
	"paths./sites/nearest.{outputFormat}.get.parameters[5].in": "query",
	"paths./sites/nearest.{outputFormat}.get.parameters[5].name": "setBack",
	"paths./sites/nearest.{outputFormat}.get.parameters[5].required": false,
	"paths./sites/nearest.{outputFormat}.get.parameters[5].type": "integer",
	"paths./sites/nearest.{outputFormat}.get.parameters[6].description": "If true, excludes sites that are units of a parent site",
	"paths./sites/nearest.{outputFormat}.get.parameters[6].in": "query",
	"paths./sites/nearest.{outputFormat}.get.parameters[6].name": "excludeUnits",
	"paths./sites/nearest.{outputFormat}.get.parameters[6].required": false,
	"paths./sites/nearest.{outputFormat}.get.parameters[6].type": "boolean",
	"paths./sites/nearest.{outputFormat}.get.responses.200.description": "The nearest site in \u003ca href=\"https://github.com/bcgov/api-specs/blob/master/geocoder/geocoder-developer-guide.md#site-address-representation\" target=\"_blank\"\u003eSite Address Representation\u003c/a\u003e",
	"paths./sites/nearest.{outputFormat}.get.responses.400.description": "Bad request",
	"paths./sites/nearest.{outputFormat}.get.responses.401.description": "Invalid or missing api key",
	"paths./sites/nearest.{outputFormat}.get.summary": "Find the site nearest to a geographic point",
	"paths./sites/nearest.{outputFormat}.get.tags.length": 1,
	"paths./sites/nearest.{outputFormat}.get.tags[0]": "sites",
	"paths./sites/within.{outputFormat}.get.description": "Represents sites within a given area",
	"paths./sites/within.{outputFormat}.get.parameters.length": 7,
	"paths./sites/within.{outputFormat}.get.parameters[0].default": "json",
	"paths./sites/within.{outputFormat}.get.parameters[0].description": "Results format. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputFormat target=\"_blank\"\u003eoutputFormat\u003c/a\u003e",
	"paths./sites/within.{outputFormat}.get.parameters[0].enum.length": 7,
	"paths./sites/within.{outputFormat}.get.parameters[0].enum[0]": "json",
	"paths./sites/within.{outputFormat}.get.parameters[0].enum[1]": "geojson",
	"paths./sites/within.{outputFormat}.get.parameters[0].enum[2]": "xhtml",
	"paths./sites/within.{outputFormat}.get.parameters[0].enum[3]": "kml",
	"paths./sites/within.{outputFormat}.get.parameters[0].enum[4]": "gml",
	"paths./sites/within.{outputFormat}.get.parameters[0].enum[5]": "csv",
	"paths./sites/within.{outputFormat}.get.parameters[0].enum[6]": "shpz",
	"paths./sites/within.{outputFormat}.get.parameters[0].in": "path",
	"paths./sites/within.{outputFormat}.get.parameters[0].name": "outputFormat",
	"paths./sites/within.{outputFormat}.get.parameters[0].required": true,
	"paths./sites/within.{outputFormat}.get.parameters[0].type": "string",
	"paths./sites/within.{outputFormat}.get.parameters[1].description": "Example: -119.51,49.48,-119.53,49.50. A bounding box (xmin,ymin,xmax,ymax) used to limit the search area. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#bbox target=\"_blank\"\u003ebbox\u003c/a\u003e",
	"paths./sites/within.{outputFormat}.get.parameters[1].in": "query",
	"paths./sites/within.{outputFormat}.get.parameters[1].name": "bbox",
	"paths./sites/within.{outputFormat}.get.parameters[1].required": true,
	"paths./sites/within.{outputFormat}.get.parameters[1].type": "string",
	"paths./sites/within.{outputFormat}.get.parameters[2].default": 4326,
	"paths./sites/within.{outputFormat}.get.parameters[2].description": "The EPSG code of the spatial reference system (SRS) to use for output geometries. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputSRS target=\"_blank\"\u003eoutputSRS\u003c/a\u003e",
	"paths./sites/within.{outputFormat}.get.parameters[2].enum.length": 8,
	"paths./sites/within.{outputFormat}.get.parameters[2].enum[0]": 4326,
	"paths./sites/within.{outputFormat}.get.parameters[2].enum[1]": 4269,
	"paths./sites/within.{outputFormat}.get.parameters[2].enum[2]": 3005,
	"paths./sites/within.{outputFormat}.get.parameters[2].enum[3]": 26907,
	"paths./sites/within.{outputFormat}.get.parameters[2].enum[4]": 26908,
	"paths./sites/within.{outputFormat}.get.parameters[2].enum[5]": 26909,
	"paths./sites/within.{outputFormat}.get.parameters[2].enum[6]": 26910,
	"paths./sites/within.{outputFormat}.get.parameters[2].enum[7]": 26911,
	"paths./sites/within.{outputFormat}.get.parameters[2].in": "query",
	"paths./sites/within.{outputFormat}.get.parameters[2].name": "outputSRS",
	"paths./sites/within.{outputFormat}.get.parameters[2].required": false,
	"paths./sites/within.{outputFormat}.get.parameters[2].type": "integer",
	"paths./sites/within.{outputFormat}.get.parameters[3].default": 1,
	"paths./sites/within.{outputFormat}.get.parameters[3].description": "The maximum number of search results to return.",
	"paths./sites/within.{outputFormat}.get.parameters[3].in": "query",
	"paths./sites/within.{outputFormat}.get.parameters[3].name": "maxResults",
	"paths./sites/within.{outputFormat}.get.parameters[3].required": false,
	"paths./sites/within.{outputFormat}.get.parameters[3].type": "integer",
	"paths./sites/within.{outputFormat}.get.parameters[4].default": "any",
	"paths./sites/within.{outputFormat}.get.parameters[4].description": "Describes the nature of the address location. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#locationDescriptor target=\"_blank\"\u003elocationDescriptor\u003c/a\u003e",
	"paths./sites/within.{outputFormat}.get.parameters[4].enum.length": 6,
	"paths./sites/within.{outputFormat}.get.parameters[4].enum[0]": "any",
	"paths./sites/within.{outputFormat}.get.parameters[4].enum[1]": "accessPoint",
	"paths./sites/within.{outputFormat}.get.parameters[4].enum[2]": "frontDoorPoint",
	"paths./sites/within.{outputFormat}.get.parameters[4].enum[3]": "parcelPoint",
	"paths./sites/within.{outputFormat}.get.parameters[4].enum[4]": "rooftopPoint",
	"paths./sites/within.{outputFormat}.get.parameters[4].enum[5]": "routingPoint",
	"paths./sites/within.{outputFormat}.get.parameters[4].in": "query",
	"paths./sites/within.{outputFormat}.get.parameters[4].name": "locationDescriptor",
	"paths./sites/within.{outputFormat}.get.parameters[4].required": false,
	"paths./sites/within.{outputFormat}.get.parameters[4].type": "string",
	"paths./sites/within.{outputFormat}.get.parameters[5].default": 0,
	"paths./sites/within.{outputFormat}.get.parameters[5].description": "The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.",
	"paths./sites/within.{outputFormat}.get.parameters[5].in": "query",
	"paths./sites/within.{outputFormat}.get.parameters[5].name": "setBack",
	"paths./sites/within.{outputFormat}.get.parameters[5].required": false,
	"paths./sites/within.{outputFormat}.get.parameters[5].type": "integer",
	"paths./sites/within.{outputFormat}.get.parameters[6].description": "If true, excludes sites that are units of a parent site",
	"paths./sites/within.{outputFormat}.get.parameters[6].in": "query",
	"paths./sites/within.{outputFormat}.get.parameters[6].name": "excludeUnits",
	"paths./sites/within.{outputFormat}.get.parameters[6].required": false,
	"paths./sites/within.{outputFormat}.get.parameters[6].type": "boolean",
	"paths./sites/within.{outputFormat}.get.responses.200.description": "A list of selected sites within a given area. Each site in the response document is structured as a \u003ca href=\"https://github.com/bcgov/api-specs/blob/master/geocoder/geocoder-developer-guide.md#site-address-representation\" target=\"_blank\"\u003eSite Address Representation\u003c/a\u003e",
	"paths./sites/within.{outputFormat}.get.responses.400.description": "Bad request",
	"paths./sites/within.{outputFormat}.get.responses.401.description": "Invalid or missing api key",
	"paths./sites/within.{outputFormat}.get.summary": "Find sites in a geographic area",
	"paths./sites/within.{outputFormat}.get.tags.length": 1,
	"paths./sites/within.{outputFormat}.get.tags[0]": "sites",
	"paths./sites/{siteID}.{outputFormat}.get.description": "Represents an individual site",
	"paths./sites/{siteID}.{outputFormat}.get.parameters.length": 5,
	"paths./sites/{siteID}.{outputFormat}.get.parameters[0].description": "A unique, but not immutable, site identifier.",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[0].in": "path",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[0].name": "siteID",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[0].required": true,
	"paths./sites/{siteID}.{outputFormat}.get.parameters[0].type": "string",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[1].default": "json",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[1].description": "Results format. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputFormat target=\"_blank\"\u003eoutputFormat\u003c/a\u003e",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[1].enum.length": 7,
	"paths./sites/{siteID}.{outputFormat}.get.parameters[1].enum[0]": "json",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[1].enum[1]": "geojson",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[1].enum[2]": "xhtml",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[1].enum[3]": "kml",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[1].enum[4]": "gml",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[1].enum[5]": "csv",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[1].enum[6]": "shpz",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[1].in": "path",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[1].name": "outputFormat",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[1].required": true,
	"paths./sites/{siteID}.{outputFormat}.get.parameters[1].type": "string",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[2].default": 4326,
	"paths./sites/{siteID}.{outputFormat}.get.parameters[2].description": "The EPSG code of the spatial reference system (SRS) to use for output geometries. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputSRS target=\"_blank\"\u003eoutputSRS\u003c/a\u003e",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[2].enum.length": 8,
	"paths./sites/{siteID}.{outputFormat}.get.parameters[2].enum[0]": 4326,
	"paths./sites/{siteID}.{outputFormat}.get.parameters[2].enum[1]": 4269,
	"paths./sites/{siteID}.{outputFormat}.get.parameters[2].enum[2]": 3005,
	"paths./sites/{siteID}.{outputFormat}.get.parameters[2].enum[3]": 26907,
	"paths./sites/{siteID}.{outputFormat}.get.parameters[2].enum[4]": 26908,
	"paths./sites/{siteID}.{outputFormat}.get.parameters[2].enum[5]": 26909,
	"paths./sites/{siteID}.{outputFormat}.get.parameters[2].enum[6]": 26910,
	"paths./sites/{siteID}.{outputFormat}.get.parameters[2].enum[7]": 26911,
	"paths./sites/{siteID}.{outputFormat}.get.parameters[2].in": "query",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[2].name": "outputSRS",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[2].required": false,
	"paths./sites/{siteID}.{outputFormat}.get.parameters[2].type": "integer",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[3].default": "any",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[3].description": "Describes the nature of the address location. See \u003ca href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#locationDescriptor target=\"_blank\"\u003elocationDescriptor\u003c/a\u003e",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[3].enum.length": 6,
	"paths./sites/{siteID}.{outputFormat}.get.parameters[3].enum[0]": "any",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[3].enum[1]": "accessPoint",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[3].enum[2]": "frontDoorPoint",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[3].enum[3]": "parcelPoint",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[3].enum[4]": "rooftopPoint",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[3].enum[5]": "routingPoint",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[3].in": "query",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[3].name": "locationDescriptor",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[3].required": false,
	"paths./sites/{siteID}.{outputFormat}.get.parameters[3].type": "string",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[4].default": 0,
	"paths./sites/{siteID}.{outputFormat}.get.parameters[4].description": "The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[4].in": "query",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[4].name": "setBack",
	"paths./sites/{siteID}.{outputFormat}.get.parameters[4].required": false,
	"paths./sites/{siteID}.{outputFormat}.get.parameters[4].type": "integer",
	"paths./sites/{siteID}.{outputFormat}.get.responses.200.description": "The site with the requested siteID in \u003ca href=\"https://github.com/bcgov/api-specs/blob/master/geocoder/geocoder-developer-guide.md#site-address-representation\" target=\"_blank\"\u003eSite Address Representation\u003c/a\u003e",
	"paths./sites/{siteID}.{outputFormat}.get.responses.400.description": "Bad request",
	"paths./sites/{siteID}.{outputFormat}.get.responses.401.description": "Invalid or missing api key",
	"paths./sites/{siteID}.{outputFormat}.get.summary": "Get a site by its unique ID",
	"paths./sites/{siteID}.{outputFormat}.get.tags.length": 1,
	"paths./sites/{siteID}.{outputFormat}.get.tags[0]": "sites",
	"produces.length": 5,
	"produces[0]": "application/json",
	"produces[1]": "application/vnd.geo+json",
	"produces[2]": "application/vnd.google-earth.kml+xml",
	"produces[3]": "application/gml+xml",
	"produces[4]": "application/text+csv",
	"schemes.length": 1,
	"schemes[0]": "https",
	"security.length": 1,
	"securityDefinitions.apikey.in": "header",
	"securityDefinitions.apikey.name": "apikey",
	"securityDefinitions.apikey.type": "apiKey",
	"security[0].apikey.length": 0,
	"swagger": "2.0",
	"tags.length": 3,
	"tags[0].name": "sites",
	"tags[1].name": "intersections",
	"tags[2].name": "occupants"
}