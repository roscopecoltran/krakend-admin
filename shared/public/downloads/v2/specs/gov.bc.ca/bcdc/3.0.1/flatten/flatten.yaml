basePath: /api/3
consumes.length: 1
consumes[0]: application/json
host: catalogue.data.gov.bc.ca
info.contact.email: data@gov.bc.ca
info.contact.name: Data BC
info.contact.url: http://data.gov.bc.ca/
info.description: 'This API provides live access to the BC Data Catalogue. Further
  documentation on the API is available from http://docs.ckan.org/en/latest/ Confirm
  the version of the API available from the catalogue by requesting https://catalogue.data.gov.bc.ca/api/3/action/status_show '
info.license.name: Open Government License - British Columbia
info.license.url: http://www2.gov.bc.ca/gov/content/governments/about-the-bc-government/databc/open-data/open-government-license-bc
info.termsOfService: http://www2.gov.bc.ca/gov/content/governments/about-the-bc-government/databc/open-data/api-terms-of-use-for-ogl-information
info.title: BC Data Catalogue
info.version: 3.0.1
info.x-apisguru-categories.length: 1
info.x-apisguru-categories[0]: open_data
info.x-logo.url: https://api.apis.guru/v2/cache/logo/https_avatars1.githubusercontent.com_u_916280.jpeg
info.x-origin.length: 1
info.x-origin[0].format: swagger
info.x-origin[0].url: https://raw.githubusercontent.com/bcgov/api-specs/master/bcdc/bcdc.json
info.x-origin[0].version: "2.0"
info.x-preferred: true
info.x-providerName: gov.bc.ca
info.x-serviceName: bcdc
paths./action/organization_activity_list.get.description: Return an organization's
  activity stream
paths./action/organization_activity_list.get.parameters.length: 1
paths./action/organization_activity_list.get.parameters[0].default: ministry-of-agriculture
paths./action/organization_activity_list.get.parameters[0].description: The id or
  name of the organization
paths./action/organization_activity_list.get.parameters[0].in: query
paths./action/organization_activity_list.get.parameters[0].name: id
paths./action/organization_activity_list.get.parameters[0].type: string
paths./action/organization_activity_list.get.responses.200.description: List of an
  organization's activities
paths./action/organization_activity_list.get.summary: Get the activity stream of an
  organization
paths./action/organization_activity_list.get.tags.length: 1
paths./action/organization_activity_list.get.tags[0]: action
paths./action/organization_activity_list_html.get.description: Return an organization's
  activity stream as HTML
paths./action/organization_activity_list_html.get.parameters.length: 1
paths./action/organization_activity_list_html.get.parameters[0].default: ministry-of-agriculture
paths./action/organization_activity_list_html.get.parameters[0].description: The id
  or name of the organization
paths./action/organization_activity_list_html.get.parameters[0].in: query
paths./action/organization_activity_list_html.get.parameters[0].name: id
paths./action/organization_activity_list_html.get.parameters[0].type: string
paths./action/organization_activity_list_html.get.responses.200.description: List
  of an organization's activities in HTML
paths./action/organization_activity_list_html.get.summary: Get the activity stream
  of an organization, HTML format
paths./action/organization_activity_list_html.get.tags.length: 1
paths./action/organization_activity_list_html.get.tags[0]: action
paths./action/organization_autocomplete.get.description: Return a list of organization
  names that contain a string
paths./action/organization_autocomplete.get.parameters.length: 2
paths./action/organization_autocomplete.get.parameters[0].default: ministry
paths./action/organization_autocomplete.get.parameters[0].description: The string
  to search for
paths./action/organization_autocomplete.get.parameters[0].in: query
paths./action/organization_autocomplete.get.parameters[0].name: q
paths./action/organization_autocomplete.get.parameters[0].type: string
paths./action/organization_autocomplete.get.parameters[1].default: 20
paths./action/organization_autocomplete.get.parameters[1].description: The maximum
  number of organizations to return (optional)
paths./action/organization_autocomplete.get.parameters[1].in: query
paths./action/organization_autocomplete.get.parameters[1].name: limit
paths./action/organization_autocomplete.get.parameters[1].type: integer
paths./action/organization_autocomplete.get.responses.200.description: List of organizations
paths./action/organization_autocomplete.get.summary: Get names of organizations that
  match a query string
paths./action/organization_autocomplete.get.tags.length: 1
paths./action/organization_autocomplete.get.tags[0]: action
paths./action/organization_follower_count.get.description: Return the number of followers
  of an organization
paths./action/organization_follower_count.get.parameters.length: 1
paths./action/organization_follower_count.get.parameters[0].default: ministry-of-agriculture
paths./action/organization_follower_count.get.parameters[0].description: The id or
  name of the organization
paths./action/organization_follower_count.get.parameters[0].in: query
paths./action/organization_follower_count.get.parameters[0].name: id
paths./action/organization_follower_count.get.parameters[0].type: string
paths./action/organization_follower_count.get.responses.200.description: Count of
  organization followers
paths./action/organization_follower_count.get.summary: Get number of followers of
  an organization
paths./action/organization_follower_count.get.tags.length: 1
paths./action/organization_follower_count.get.tags[0]: action
paths./action/organization_follower_list.get.description: Return a list of users that
  are following a given organization
paths./action/organization_follower_list.get.parameters.length: 1
paths./action/organization_follower_list.get.parameters[0].default: ministry-of-agriculture
paths./action/organization_follower_list.get.parameters[0].description: The id or
  name of the organization
paths./action/organization_follower_list.get.parameters[0].in: query
paths./action/organization_follower_list.get.parameters[0].name: id
paths./action/organization_follower_list.get.parameters[0].type: string
paths./action/organization_follower_list.get.responses.200.description: List of organization
  followers
paths./action/organization_follower_list.get.summary: Get users following an organization
paths./action/organization_follower_list.get.tags.length: 1
paths./action/organization_follower_list.get.tags[0]: action
paths./action/organization_list.get.description: Returns the names of all indexed
  organizations
paths./action/organization_list.get.parameters.length: 2
paths./action/organization_list.get.parameters[0].default: 0
paths./action/organization_list.get.parameters[0].description: The offset (index)
  of the first organizations to return
paths./action/organization_list.get.parameters[0].in: query
paths./action/organization_list.get.parameters[0].name: offset
paths./action/organization_list.get.parameters[0].type: integer
paths./action/organization_list.get.parameters[1].default: 100
paths./action/organization_list.get.parameters[1].description: The number of organizations
  to be returned per page
paths./action/organization_list.get.parameters[1].in: query
paths./action/organization_list.get.parameters[1].name: limit
paths./action/organization_list.get.parameters[1].type: integer
paths./action/organization_list.get.responses.200.description: List of organizations
paths./action/organization_list.get.summary: Get names of all organizations
paths./action/organization_list.get.tags.length: 1
paths./action/organization_list.get.tags[0]: action
paths./action/organization_list_for_user.get.description: Return the organizations
  that the user has a given permission for
paths./action/organization_list_for_user.get.parameters.length: 1
paths./action/organization_list_for_user.get.parameters[0].default: '"edit_group"'
paths./action/organization_list_for_user.get.parameters[0].description: The permission
  the user has against the returned organization
paths./action/organization_list_for_user.get.parameters[0].in: query
paths./action/organization_list_for_user.get.parameters[0].name: permission
paths./action/organization_list_for_user.get.parameters[0].type: string
paths./action/organization_list_for_user.get.responses.200.description: List of organizations
  for given permission
paths./action/organization_list_for_user.get.summary: Get organizations that a user
  has a given permission for
paths./action/organization_list_for_user.get.tags.length: 1
paths./action/organization_list_for_user.get.tags[0]: action
paths./action/organization_revision_list.get.description: Return an organization's
  revisions
paths./action/organization_revision_list.get.parameters.length: 1
paths./action/organization_revision_list.get.parameters[0].default: ministry-of-agriculture
paths./action/organization_revision_list.get.parameters[0].description: The name or
  id of the organization
paths./action/organization_revision_list.get.parameters[0].in: query
paths./action/organization_revision_list.get.parameters[0].name: id
paths./action/organization_revision_list.get.parameters[0].type: string
paths./action/organization_revision_list.get.responses.200.description: List of an
  organization's revisions
paths./action/organization_revision_list.get.summary: Get organization revisions
paths./action/organization_revision_list.get.tags.length: 1
paths./action/organization_revision_list.get.tags[0]: action
paths./action/organization_show.get.description: Return the details of an organization
paths./action/organization_show.get.parameters.length: 2
paths./action/organization_show.get.parameters[0].default: ministry-of-agriculture
paths./action/organization_show.get.parameters[0].description: The id or name of the
  organization
paths./action/organization_show.get.parameters[0].in: query
paths./action/organization_show.get.parameters[0].name: id
paths./action/organization_show.get.parameters[0].type: string
paths./action/organization_show.get.parameters[1].default: true
paths./action/organization_show.get.parameters[1].description: include a list of the
  organization's datasets
paths./action/organization_show.get.parameters[1].in: query
paths./action/organization_show.get.parameters[1].name: include_datasets
paths./action/organization_show.get.parameters[1].type: boolean
paths./action/organization_show.get.responses.200.description: List organization details
paths./action/organization_show.get.summary: Get details of a specific organization
paths./action/organization_show.get.tags.length: 1
paths./action/organization_show.get.tags[0]: action
paths./action/package_activity_list.get.description: Returns a package's activity
  stream
paths./action/package_activity_list.get.parameters.length: 3
paths./action/package_activity_list.get.parameters[0].default: grizzly-bear-population-units
paths./action/package_activity_list.get.parameters[0].description: The id or name
  of the package
paths./action/package_activity_list.get.parameters[0].in: query
paths./action/package_activity_list.get.parameters[0].name: id
paths./action/package_activity_list.get.parameters[0].type: string
paths./action/package_activity_list.get.parameters[1].default: 0
paths./action/package_activity_list.get.parameters[1].description: Where to start
  getting activity items from
paths./action/package_activity_list.get.parameters[1].in: query
paths./action/package_activity_list.get.parameters[1].name: offset
paths./action/package_activity_list.get.parameters[1].type: integer
paths./action/package_activity_list.get.parameters[2].default: 31
paths./action/package_activity_list.get.parameters[2].description: The maximum number
  of activities to return
paths./action/package_activity_list.get.parameters[2].in: query
paths./action/package_activity_list.get.parameters[2].name: limit
paths./action/package_activity_list.get.parameters[2].type: integer
paths./action/package_activity_list.get.responses.200.description: List of activities
paths./action/package_activity_list.get.summary: Get the activity stream of a package
  (dataset)
paths./action/package_activity_list.get.tags.length: 1
paths./action/package_activity_list.get.tags[0]: action
paths./action/package_activity_list_html.get.description: The activity stream is rendered
  as a snippet of HTML meant to be included in an HTML pag, i.e it doesn't have any
  header or footer.
paths./action/package_activity_list_html.get.parameters.length: 3
paths./action/package_activity_list_html.get.parameters[0].default: grizzly-bear-population-units
paths./action/package_activity_list_html.get.parameters[0].description: The id or
  name of the package
paths./action/package_activity_list_html.get.parameters[0].in: query
paths./action/package_activity_list_html.get.parameters[0].name: id
paths./action/package_activity_list_html.get.parameters[0].type: string
paths./action/package_activity_list_html.get.parameters[1].default: 0
paths./action/package_activity_list_html.get.parameters[1].description: Where to start
  getting activity items from
paths./action/package_activity_list_html.get.parameters[1].in: query
paths./action/package_activity_list_html.get.parameters[1].name: offset
paths./action/package_activity_list_html.get.parameters[1].type: integer
paths./action/package_activity_list_html.get.parameters[2].default: 31
paths./action/package_activity_list_html.get.parameters[2].description: The maximum
  number of activities to return
paths./action/package_activity_list_html.get.parameters[2].in: query
paths./action/package_activity_list_html.get.parameters[2].name: limit
paths./action/package_activity_list_html.get.parameters[2].type: integer
paths./action/package_activity_list_html.get.responses.200.description: List of activities
  rendered as HTML snippet
paths./action/package_activity_list_html.get.summary: Get the activity stream of a
  package (dataset), HTML format
paths./action/package_activity_list_html.get.tags.length: 1
paths./action/package_activity_list_html.get.tags[0]: action
paths./action/package_autocomplete.get.description: Return a list of datasets that
  match a string
paths./action/package_autocomplete.get.parameters.length: 2
paths./action/package_autocomplete.get.parameters[0].default: '"Okanagan Lake"'
paths./action/package_autocomplete.get.parameters[0].description: The string to query
paths./action/package_autocomplete.get.parameters[0].in: query
paths./action/package_autocomplete.get.parameters[0].name: q
paths./action/package_autocomplete.get.parameters[0].type: string
paths./action/package_autocomplete.get.parameters[1].default: 10
paths./action/package_autocomplete.get.parameters[1].description: The maximum number
  of resource formats to return
paths./action/package_autocomplete.get.parameters[1].in: query
paths./action/package_autocomplete.get.parameters[1].name: limit
paths./action/package_autocomplete.get.parameters[1].type: integer
paths./action/package_autocomplete.get.responses.200.description: List of datasets
  that match a string
paths./action/package_autocomplete.get.summary: Find packages (datasets) matching
  a query
paths./action/package_autocomplete.get.tags.length: 1
paths./action/package_autocomplete.get.tags[0]: action
paths./action/package_list.get.description: Returns the names of all indexed packages
  (datasets)
paths./action/package_list.get.parameters.length: 2
paths./action/package_list.get.parameters[0].default: 0
paths./action/package_list.get.parameters[0].description: The offset (index) of the
  first package to return
paths./action/package_list.get.parameters[0].in: query
paths./action/package_list.get.parameters[0].name: offset
paths./action/package_list.get.parameters[0].type: integer
paths./action/package_list.get.parameters[1].default: 100
paths./action/package_list.get.parameters[1].description: The number of packages to
  be returned per page
paths./action/package_list.get.parameters[1].in: query
paths./action/package_list.get.parameters[1].name: limit
paths./action/package_list.get.parameters[1].type: integer
paths./action/package_list.get.responses.200.description: List of packages
paths./action/package_list.get.summary: Get a list of all packages (datasets)
paths./action/package_list.get.tags.length: 1
paths./action/package_list.get.tags[0]: action
paths./action/package_relationships_list.get.description: Return a dataset's relationships
paths./action/package_relationships_list.get.parameters.length: 3
paths./action/package_relationships_list.get.parameters[0].default: grizzly-bear-population-units
paths./action/package_relationships_list.get.parameters[0].description: The id or
  name of the first package
paths./action/package_relationships_list.get.parameters[0].in: query
paths./action/package_relationships_list.get.parameters[0].name: id
paths./action/package_relationships_list.get.parameters[0].type: string
paths./action/package_relationships_list.get.parameters[1].default: important-fossil-areas
paths./action/package_relationships_list.get.parameters[1].description: The id or
  name of the second package
paths./action/package_relationships_list.get.parameters[1].in: query
paths./action/package_relationships_list.get.parameters[1].name: id2
paths./action/package_relationships_list.get.parameters[1].type: string
paths./action/package_relationships_list.get.parameters[2].description: relationship
  as string
paths./action/package_relationships_list.get.parameters[2].in: query
paths./action/package_relationships_list.get.parameters[2].name: rel
paths./action/package_relationships_list.get.parameters[2].type: string
paths./action/package_relationships_list.get.responses.200.description: List of dataset
  relationships
paths./action/package_relationships_list.get.summary: Get package (dataset) relationships
paths./action/package_relationships_list.get.tags.length: 1
paths./action/package_relationships_list.get.tags[0]: action
paths./action/package_revision_list.get.description: Return a dataset's revision as
  a list of dictionaries
paths./action/package_revision_list.get.parameters.length: 1
paths./action/package_revision_list.get.parameters[0].default: grizzly-bear-population-units
paths./action/package_revision_list.get.parameters[0].description: The id or name
  of the dataset
paths./action/package_revision_list.get.parameters[0].in: query
paths./action/package_revision_list.get.parameters[0].name: id
paths./action/package_revision_list.get.parameters[0].type: string
paths./action/package_revision_list.get.responses.200.description: List of dataset
  revisions
paths./action/package_revision_list.get.summary: Get list of revisions for a package
  (dataset)
paths./action/package_revision_list.get.tags.length: 1
paths./action/package_revision_list.get.tags[0]: action
paths./action/package_search.get.description: Searches for packages (datasets) matching
  the specified query terms
paths./action/package_search.get.parameters.length: 1
paths./action/package_search.get.parameters[0].default: '"Okanagan Lake"'
paths./action/package_search.get.parameters[0].description: A query string
paths./action/package_search.get.parameters[0].in: query
paths./action/package_search.get.parameters[0].name: q
paths./action/package_search.get.parameters[0].type: string
paths./action/package_search.get.responses.200.description: List of packages
paths./action/package_search.get.summary: Find packages (datasets) matching query
  terms
paths./action/package_search.get.tags.length: 1
paths./action/package_search.get.tags[0]: action
paths./action/package_show.get.description: Returns metadata about the package (dataset)
  corresponding to the specified unique name
paths./action/package_show.get.parameters.length: 1
paths./action/package_show.get.parameters[0].default: grizzly-bear-population-units
paths./action/package_show.get.parameters[0].description: The package name
paths./action/package_show.get.parameters[0].in: query
paths./action/package_show.get.parameters[0].name: id
paths./action/package_show.get.parameters[0].type: string
paths./action/package_show.get.responses.200.description: A package metadata object
paths./action/package_show.get.summary: Get metadata about one specific package (dataset)
paths./action/package_show.get.tags.length: 1
paths./action/package_show.get.tags[0]: action
paths./action/related_list.get.description: Returns a dataset's related items.
paths./action/related_list.get.parameters.length: 5
paths./action/related_list.get.parameters[0].description: id or name of the dataset
  (optional)
paths./action/related_list.get.parameters[0].in: query
paths./action/related_list.get.parameters[0].name: id
paths./action/related_list.get.parameters[0].type: string
paths./action/related_list.get.parameters[1].description: Dataset dictionary of the
  dataset (optional)
paths./action/related_list.get.parameters[1].in: query
paths./action/related_list.get.parameters[1].name: dataset
paths./action/related_list.get.parameters[1].type: string
paths./action/related_list.get.parameters[2].description: The type of related item
  to show (optional)
paths./action/related_list.get.parameters[2].in: query
paths./action/related_list.get.parameters[2].name: type_filter
paths./action/related_list.get.parameters[2].type: string
paths./action/related_list.get.parameters[3].description: The order to sort the related
  items in
paths./action/related_list.get.parameters[3].in: query
paths./action/related_list.get.parameters[3].name: sort
paths./action/related_list.get.parameters[3].type: string
paths./action/related_list.get.parameters[4].description: whether or not to restrict
  the results to only featured items
paths./action/related_list.get.parameters[4].in: query
paths./action/related_list.get.parameters[4].name: featured
paths./action/related_list.get.parameters[4].type: string
paths./action/related_list.get.responses.200.description: Search for related items
paths./action/related_list.get.summary: Gets items related to a package (dataset)
paths./action/related_list.get.tags.length: 1
paths./action/related_list.get.tags[0]: action
paths./action/resource_search.get.description: Returns a dictionary with two fields
  ``count`` and ``results``.             The ``count`` field contains the total number
  of Resources                found without the limit or query parameters having an
  effect.             The ``results`` field is a list of dictized Resource objects.             The
  query parameter is a required field. It is a string in                the form ``{field}:{term}``
  or a list of strings, each of the             same form. Within each string, ``{field}``
  is a field or extra             field on the Resource domain object.
paths./action/resource_search.get.parameters.length: 5
paths./action/resource_search.get.parameters[0].default: format:csv
paths./action/resource_search.get.parameters[0].description: The search criteria string
  or list of strings of the form ``{field}:{term1}``
paths./action/resource_search.get.parameters[0].in: query
paths./action/resource_search.get.parameters[0].name: query
paths./action/resource_search.get.parameters[0].type: string
paths./action/resource_search.get.parameters[1].description: Depreciated
paths./action/resource_search.get.parameters[1].in: query
paths./action/resource_search.get.parameters[1].name: fields
paths./action/resource_search.get.parameters[1].type: string
paths./action/resource_search.get.parameters[2].description: A field on the resource
  model that orders the results
paths./action/resource_search.get.parameters[2].in: query
paths./action/resource_search.get.parameters[2].name: order_by
paths./action/resource_search.get.parameters[2].type: string
paths./action/resource_search.get.parameters[3].default: 0
paths./action/resource_search.get.parameters[3].description: Apply an offset to the
  query
paths./action/resource_search.get.parameters[3].in: query
paths./action/resource_search.get.parameters[3].name: offset
paths./action/resource_search.get.parameters[3].type: integer
paths./action/resource_search.get.parameters[4].default: 0
paths./action/resource_search.get.parameters[4].description: Apply a limit to the
  query
paths./action/resource_search.get.parameters[4].in: query
paths./action/resource_search.get.parameters[4].name: limit
paths./action/resource_search.get.parameters[4].type: integer
paths./action/resource_search.get.responses.200.description: Search for resources
paths./action/resource_search.get.summary: Find resources
paths./action/resource_search.get.tags.length: 1
paths./action/resource_search.get.tags[0]: action
paths./action/resource_show.get.description: Return the metadata of a resource
paths./action/resource_show.get.parameters.length: 2
paths./action/resource_show.get.parameters[0].default: e6c8bb1d-3726-418b-9b7e-1d97a9bbb817
paths./action/resource_show.get.parameters[0].description: The id of the resource
paths./action/resource_show.get.parameters[0].in: query
paths./action/resource_show.get.parameters[0].name: id
paths./action/resource_show.get.parameters[0].type: string
paths./action/resource_show.get.parameters[1].default: false
paths./action/resource_show.get.parameters[1].description: Add tracking information
  to dataset
paths./action/resource_show.get.parameters[1].in: query
paths./action/resource_show.get.parameters[1].name: include_tracking
paths./action/resource_show.get.parameters[1].type: boolean
paths./action/resource_show.get.responses.200.description: Return metadata of a resource
paths./action/resource_show.get.summary: Get metadata for a specific resource
paths./action/resource_show.get.tags.length: 1
paths./action/resource_show.get.tags[0]: action
paths./action/status_show.get.description: Returns the site status
paths./action/status_show.get.responses.200.description: Returns the site status,
  version, installed extensions
paths./action/status_show.get.summary: Get the site status
paths./action/status_show.get.tags.length: 1
paths./action/status_show.get.tags[0]: action
paths./action/tag_list.get.description: Returns the names of all indexed tags
paths./action/tag_list.get.parameters.length: 2
paths./action/tag_list.get.parameters[0].default: 0
paths./action/tag_list.get.parameters[0].description: The offset (index) of the first
  tag to return
paths./action/tag_list.get.parameters[0].in: query
paths./action/tag_list.get.parameters[0].name: offset
paths./action/tag_list.get.parameters[0].type: integer
paths./action/tag_list.get.parameters[1].default: 100
paths./action/tag_list.get.parameters[1].description: The number of tags to be returned
  per page
paths./action/tag_list.get.parameters[1].in: query
paths./action/tag_list.get.parameters[1].name: limit
paths./action/tag_list.get.parameters[1].type: integer
paths./action/tag_list.get.responses.200.description: List of tags
paths./action/tag_list.get.summary: Get a list of tags
paths./action/tag_list.get.tags.length: 1
paths./action/tag_list.get.tags[0]: action
produces.length: 1
produces[0]: application/json
schemes.length: 1
schemes[0]: https
security.length: 2
security[0].githubAccessCode.length: 19
security[0].githubAccessCode[0]: user
security[0].githubAccessCode[1]: user:email
security[0].githubAccessCode[2]: user:follow
security[0].githubAccessCode[3]: public_repo
security[0].githubAccessCode[4]: repo
security[0].githubAccessCode[5]: repo_deployment
security[0].githubAccessCode[6]: repo:status
security[0].githubAccessCode[7]: delete_repo
security[0].githubAccessCode[8]: notifications
security[0].githubAccessCode[9]: gist
security[0].githubAccessCode[10]: read:repo_hook
security[0].githubAccessCode[11]: write:repo_hook
security[0].githubAccessCode[12]: admin:repo_hook
security[0].githubAccessCode[13]: read:org
security[0].githubAccessCode[14]: write:org
security[0].githubAccessCode[15]: admin:org
security[0].githubAccessCode[16]: read:public_key
security[0].githubAccessCode[17]: write:public_key
security[0].githubAccessCode[18]: admin:public_key
security[1].internalApiKey.length: 0
securityDefinitions.githubAccessCode.authorizationUrl: https://github.com/login/oauth/authorize
securityDefinitions.githubAccessCode.flow: accessCode
securityDefinitions.githubAccessCode.scopes.admin:org: Fully manage organization,
  teams, and memberships.
securityDefinitions.githubAccessCode.scopes.admin:public_key: Fully manage public
  keys.
securityDefinitions.githubAccessCode.scopes.admin:repo_hook: Grants read, write, ping,
  and delete access to hooks in public or private repositories.
securityDefinitions.githubAccessCode.scopes.delete_repo: Grants access to delete adminable
  repositories.
securityDefinitions.githubAccessCode.scopes.gist: Grants write access to gists.
securityDefinitions.githubAccessCode.scopes.notifications: Grants read access to a
  user’s notifications. repo also provides this access.
securityDefinitions.githubAccessCode.scopes.public_repo: Grants read/write access
  to code, commit statuses, and deployment statuses for public repositories and organizations.
securityDefinitions.githubAccessCode.scopes.read:org: Read-only access to organization,
  teams, and membership.
securityDefinitions.githubAccessCode.scopes.read:public_key: List and view details
  for public keys.
securityDefinitions.githubAccessCode.scopes.read:repo_hook: Grants read and ping access
  to hooks in public or private repositories.
securityDefinitions.githubAccessCode.scopes.repo: Grants read/write access to code,
  commit statuses, and deployment statuses for public and private repositories and
  organizations.
securityDefinitions.githubAccessCode.scopes.repo:status: Grants read/write access
  to public and private repository commit statuses. This scope is only necessary to
  grant other users or services access to private repository commit statuses without
  granting access to the code.
securityDefinitions.githubAccessCode.scopes.repo_deployment: Grants access to deployment
  statuses for public and private repositories. This scope is only necessary to grant
  other users or services access to deployment statuses, without granting access to
  the code.
securityDefinitions.githubAccessCode.scopes.user: Grants read/write access to profile
  info only. Note that this scope includes user:email and user:follow.
securityDefinitions.githubAccessCode.scopes.user:email: Grants read access to a user’s
  email addresses.
securityDefinitions.githubAccessCode.scopes.user:follow: Grants access to follow or
  unfollow other users.
securityDefinitions.githubAccessCode.scopes.write:org: Publicize and unpublicize organization
  membership.
securityDefinitions.githubAccessCode.scopes.write:public_key: Create, list, and view
  details for public keys.
securityDefinitions.githubAccessCode.scopes.write:repo_hook: Grants read, write, and
  ping access to hooks in public or private repositories.
securityDefinitions.githubAccessCode.tokenUrl: https://github.com/login/oauth/access_token
securityDefinitions.githubAccessCode.type: oauth2
securityDefinitions.internalApiKey.in: header
securityDefinitions.internalApiKey.name: ckan_api_key
securityDefinitions.internalApiKey.type: apiKey
swagger: "2.0"
tags.length: 1
tags[0].description: CKAN’s Action API is a powerful, RPC-style API that exposes all
  of CKAN’s core features to API clients.
tags[0].externalDocs.description: Find out more
tags[0].externalDocs.url: http://docs.ckan.org/en/ckan-2.5.3/api/index.html
tags[0].name: action
