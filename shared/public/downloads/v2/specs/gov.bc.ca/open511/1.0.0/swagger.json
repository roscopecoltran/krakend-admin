{
  "swagger": "2.0",
  "schemes": [
    "http",
    "https"
  ],
  "host": "api.open511.gov.bc.ca",
  "basePath": "/",
  "info": {
    "contact": {
      "email": "TRANBMClientRelations@gov.bc.ca",
      "name": "Drive BC",
      "url": "http://www.drivebc.ca/"
    },
    "description": "This API is DriveBC's implementation of the Open511 specification.  It provides information about known road events (traffic accidents, construction, etc.) in British Columbia, Canada.",
    "license": {
      "name": "Open Government License - British Columbia",
      "url": "http://www2.gov.bc.ca/gov/content?id=A519A56BC2BF44E4A008B33FCF527F61"
    },
    "termsOfService": "http://www2.gov.bc.ca/gov/content?id=D1EE0A405E584363B205CD4353E02C88",
    "title": "DriveBC's Open511",
    "version": "1.0.0",
    "x-apisguru-categories": [
      "open_data"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_avatars1.githubusercontent.com_u_916280.jpeg"
    },
    "x-origin": [
      {
        "format": "swagger",
        "url": "https://raw.githubusercontent.com/bcgov/api-specs/master/open511/open511.json",
        "version": "2.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "gov.bc.ca",
    "x-serviceName": "open511"
  },
  "externalDocs": {
    "description": "DriveBC Open511 API Guidelines",
    "url": "http://api.open511.gov.bc.ca/help"
  },
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "resources"
    }
  ],
  "paths": {
    "/areas": {
      "get": {
        "parameters": [
          {
            "default": "json",
            "description": "The format of the response",
            "enum": [
              "json",
              "xml"
            ],
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of packages"
          }
        },
        "summary": "Lists the geographical areas (e.g. districts) that can be used to filter events.",
        "tags": [
          "resources"
        ]
      }
    },
    "/events": {
      "get": {
        "description": "The events resource provides information about road events (e.g. accidents, construction, special events). The response is a list of event elements matching the filtering parameters if any are provided. ",
        "parameters": [
          {
            "default": "json",
            "description": "The format of the response",
            "enum": [
              "json",
              "xml"
            ],
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          },
          {
            "default": "ALL",
            "description": "Limits the response to events having a given status.",
            "enum": [
              "ALL",
              "ACTIVE",
              "ARCHIVED"
            ],
            "in": "query",
            "name": "status",
            "type": "string"
          },
          {
            "default": "MAJOR",
            "description": "Limits the response to events tagged with one of the listed severity values. The possible values are: [MINOR, MODERATE, MAJOR].  Multiple values may be listed, and should be separated by a comma. The default is to return events of any severity.",
            "in": "query",
            "name": "severity",
            "type": "string"
          },
          {
            "default": "drivebc.ca",
            "description": "Limits the response to events reported by a given jurisdiction. The value given must be specified as the ID of a jurisdiction returned by the /jurisdiction resource. The default is to return events from all jurisdictions.",
            "in": "query",
            "name": "jurisdiction",
            "required": false,
            "type": "string"
          },
          {
            "default": "INCIDENT",
            "description": "Limits the response to events tagged with one of the listed event types.  The possible values include: [CONSTRUCTION, INCIDENT, SPECIAL_EVENT, WEATHER_CONDITION].  Multiple values may be listed, and should be separated by a comma. The default is to return events of all types.",
            "enum": [
              "CONSTRUCTION",
              "SPECIAL_EVENT",
              "INCIDENT",
              "WEATHER_CONDITION",
              "ROAD_CONDITION"
            ],
            "in": "query",
            "name": "event_type",
            "required": false,
            "type": "string"
          },
          {
            "default": ">2015-09-01T12:00:00Z",
            "description": "Limits the response to events based on the date and time that the event was created (first recorded). The date/time must be specified in ISO 8601 format, and may be prefixed by one of the following operators [<, <=, >, >=] to indicate 'before', 'before or equal to', 'after' or 'after or equal to' respectively.  For example, >2013-12-01T12:00:00Z requests all events create after Dec. 1, 2015 at 12pm (noon) Coordinated Universal Time.  The default is to return events with any creation time.",
            "in": "query",
            "name": "created",
            "required": false,
            "type": "string"
          },
          {
            "default": ">2015-09-01T12:00:00Z",
            "description": "Limits the response to events based on the date and time that the event was last updated. The date/time must be specified in ISO 8601 format, and may be prefixed by one of the following operators [<, <=, >, >=] to indicate 'before', 'before or equal to', 'after' or 'after or equal to' respectively.  For example, >2013-12-01T12:00:00Z requests all events updated after Dec. 1, 2015 at 12pm (noon) Coordinated Universal Time. The default is to return events with any update time",
            "in": "query",
            "name": "updated",
            "required": false,
            "type": "string"
          },
          {
            "default": "Highway 99",
            "description": "Limits the response to events on a given road as specified by the road name.  An example of a valid road name is 'Highway 1'. The default is to return events on all roads.",
            "in": "query",
            "name": "road_name",
            "required": false,
            "type": "string"
          },
          {
            "default": "drivebc.ca/1",
            "description": "Limits the response to events within one of the specified areas.  An area must be specified as the ID of an item returned by the /areas resource. For example: an area_id of 'drivebc.ca/1' limits events to those within the Lower Mainland District.  The default is to return events in all areas.",
            "in": "query",
            "name": "area_id",
            "required": false,
            "type": "string"
          },
          {
            "default": "-130,48,-116,60",
            "description": "Limits the response to events that fall within the specified geographical bounding box.  The bbox format must be '[min longitude],[min latitude],[max longitude],[max latitude]' with WGS84 coordinates.  For example: -123.45,48.99,-122.45,49.49.  The default is to return events in all geographical locations.",
            "in": "query",
            "name": "bbox",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of packages"
          }
        },
        "summary": "Lists road events",
        "tags": [
          "resources"
        ]
      }
    },
    "/jurisdiction": {
      "get": {
        "parameters": [
          {
            "default": "json",
            "description": "The format of the response",
            "enum": [
              "json",
              "xml"
            ],
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of packages"
          }
        },
        "summary": "Lists the jurisdictions publishing data through this Open511 API implementation",
        "tags": [
          "resources"
        ]
      }
    },
    "/jurisdictiongeography": {
      "get": {
        "parameters": [
          {
            "default": "json",
            "description": "The format of the response",
            "enum": [
              "json",
              "xml"
            ],
            "in": "query",
            "name": "format",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of packages"
          }
        },
        "summary": "Provides the geographical boundaries for all the jurisdictions.",
        "tags": [
          "resources"
        ]
      }
    }
  }
}
