syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package bcrouteplanner;

message GetDirectionsOutputFormatRequest {
    // Routing criteria to optimize (e.g., shortest, fastest). Default is shortest.
    enum GetDirectionsOutputFormatRequest_Criteria {
        GETDIRECTIONSOUTPUTFORMATREQUEST_CRITERIA_SHORTEST = 0;
        GETDIRECTIONSOUTPUTFORMATREQUEST_CRITERIA_FASTEST = 1;
    }
    GetDirectionsOutputFormatRequest_Criteria criteria = 1;
    // distance unit of measure (e.g., km, mi). Default is km.
    enum GetDirectionsOutputFormatRequest_DistanceUnit {
        GETDIRECTIONSOUTPUTFORMATREQUEST_DISTANCEUNIT_KM = 0;
        GETDIRECTIONSOUTPUTFORMATREQUEST_DISTANCEUNIT_MI = 1;
    }
    GetDirectionsOutputFormatRequest_DistanceUnit distanceUnit = 2;
    // Format of representation
    enum GetDirectionsOutputFormatRequest_OutputFormat {
        GETDIRECTIONSOUTPUTFORMATREQUEST_OUTPUTFORMAT_JSON = 0;
        GETDIRECTIONSOUTPUTFORMATREQUEST_OUTPUTFORMAT_KML = 1;
        GETDIRECTIONSOUTPUTFORMATREQUEST_OUTPUTFORMAT_HTML = 2;
    }
    GetDirectionsOutputFormatRequest_OutputFormat outputFormat = 3;
    // The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/api-specs/blob/master/router/glossary.md#outputSRS target="_blank">outputSRS</a>
    int32 outputSRS = 4;
    // Example: -123.70794,48.77869,-123.53785,48.38200. A list of any number of route points in start to end order. See <a href=https://github.com/bcgov/api-specs/blob/master/router/glossary.md#points target='_blank'>points</a>
    string points = 5;
    // Route description (e.g., Shortest route from 1002 Johnson St, Victoria to 1105 Royal Ave,New Westminster)
    string routeDescription = 6;
}

message GetDistanceOutputFormatRequest {
    // Routing criteria to optimize (e.g., shortest, fastest). Default is shortest.
    enum GetDistanceOutputFormatRequest_Criteria {
        GETDISTANCEOUTPUTFORMATREQUEST_CRITERIA_SHORTEST = 0;
        GETDISTANCEOUTPUTFORMATREQUEST_CRITERIA_FASTEST = 1;
    }
    GetDistanceOutputFormatRequest_Criteria criteria = 1;
    // distance unit of measure (e.g., km, mi). Default is km.
    enum GetDistanceOutputFormatRequest_DistanceUnit {
        GETDISTANCEOUTPUTFORMATREQUEST_DISTANCEUNIT_KM = 0;
        GETDISTANCEOUTPUTFORMATREQUEST_DISTANCEUNIT_MI = 1;
    }
    GetDistanceOutputFormatRequest_DistanceUnit distanceUnit = 2;
    // Format of representation
    enum GetDistanceOutputFormatRequest_OutputFormat {
        GETDISTANCEOUTPUTFORMATREQUEST_OUTPUTFORMAT_JSON = 0;
        GETDISTANCEOUTPUTFORMATREQUEST_OUTPUTFORMAT_KML = 1;
        GETDISTANCEOUTPUTFORMATREQUEST_OUTPUTFORMAT_HTML = 2;
    }
    GetDistanceOutputFormatRequest_OutputFormat outputFormat = 3;
    // The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/api-specs/blob/master/router/glossary.md#outputSRS target="_blank">outputSRS</a>
    int32 outputSRS = 4;
    // Example: -123.70794,48.77869,-123.53785,48.38200. A list of any number of route points in start to end order. See <a href=https://github.com/bcgov/api-specs/blob/master/router/glossary.md#points target='_blank'>points</a>
    string points = 5;
    // Route description (e.g., Shortest route from 1002 Johnson St, Victoria to 1105 Royal Ave,New Westminster)
    string routeDescription = 6;
}

message GetDistanceBetweenPairsOutputFormatRequest {
    // Routing criteria to optimize (e.g., shortest, fastest). Default is shortest.
    enum GetDistanceBetweenPairsOutputFormatRequest_Criteria {
        GETDISTANCEBETWEENPAIRSOUTPUTFORMATREQUEST_CRITERIA_SHORTEST = 0;
        GETDISTANCEBETWEENPAIRSOUTPUTFORMATREQUEST_CRITERIA_FASTEST = 1;
    }
    GetDistanceBetweenPairsOutputFormatRequest_Criteria criteria = 1;
    // distance unit of measure (e.g., km, mi). Default is km.
    enum GetDistanceBetweenPairsOutputFormatRequest_DistanceUnit {
        GETDISTANCEBETWEENPAIRSOUTPUTFORMATREQUEST_DISTANCEUNIT_KM = 0;
        GETDISTANCEBETWEENPAIRSOUTPUTFORMATREQUEST_DISTANCEUNIT_MI = 1;
    }
    GetDistanceBetweenPairsOutputFormatRequest_DistanceUnit distanceUnit = 2;
    // Example: -123.70794,48.77869,-123.53785,48.38200. A comma-separated list of origin points.  See <a href=https://github.com/bcgov/api-specs/blob/master/router/glossary.md#fromPoints target='_blank'>fromPoints</a>
    string fromPoints = 3;
    // Format of representation
    enum GetDistanceBetweenPairsOutputFormatRequest_OutputFormat {
        GETDISTANCEBETWEENPAIRSOUTPUTFORMATREQUEST_OUTPUTFORMAT_JSON = 0;
        GETDISTANCEBETWEENPAIRSOUTPUTFORMATREQUEST_OUTPUTFORMAT_HTML = 1;
    }
    GetDistanceBetweenPairsOutputFormatRequest_OutputFormat outputFormat = 4;
    // The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/api-specs/blob/master/router/glossary.md#outputSRS target="_blank">outputSRS</a>
    int32 outputSRS = 5;
    // Route description (e.g., Shortest route from 1002 Johnson St, Victoria to 1105 Royal Ave,New Westminster)
    string routeDescription = 6;
    // Example: -124.972951,49.715181,-123.139464,49.704015. A comma-separated list of destination points. See <a href=https://github.com/bcgov/api-specs/blob/master/router/glossary.md#toPoints target='_blank'>toPoints</a>
    string toPoints = 7;
}

message GetRouteOutputFormatRequest {
    // Routing criteria to optimize (e.g., shortest, fastest). Default is shortest.
    enum GetRouteOutputFormatRequest_Criteria {
        GETROUTEOUTPUTFORMATREQUEST_CRITERIA_SHORTEST = 0;
        GETROUTEOUTPUTFORMATREQUEST_CRITERIA_FASTEST = 1;
    }
    GetRouteOutputFormatRequest_Criteria criteria = 1;
    // distance unit of measure (e.g., km, mi). Default is km.
    enum GetRouteOutputFormatRequest_DistanceUnit {
        GETROUTEOUTPUTFORMATREQUEST_DISTANCEUNIT_KM = 0;
        GETROUTEOUTPUTFORMATREQUEST_DISTANCEUNIT_MI = 1;
    }
    GetRouteOutputFormatRequest_DistanceUnit distanceUnit = 2;
    // Format of representation
    enum GetRouteOutputFormatRequest_OutputFormat {
        GETROUTEOUTPUTFORMATREQUEST_OUTPUTFORMAT_JSON = 0;
        GETROUTEOUTPUTFORMATREQUEST_OUTPUTFORMAT_KML = 1;
        GETROUTEOUTPUTFORMATREQUEST_OUTPUTFORMAT_HTML = 2;
    }
    GetRouteOutputFormatRequest_OutputFormat outputFormat = 3;
    // The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/api-specs/blob/master/router/glossary.md#outputSRS target="_blank">outputSRS</a>
    int32 outputSRS = 4;
    // Example: -123.70794,48.77869,-123.53785,48.38200. A list of any number of route points in start to end order. See <a href=https://github.com/bcgov/api-specs/blob/master/router/glossary.md#points target='_blank'>points</a>
    string points = 5;
    // Route description (e.g., Shortest route from 1002 Johnson St, Victoria to 1105 Royal Ave,New Westminster)
    string routeDescription = 6;
}

service BCRoutePlannerService {
    // Get the directions, path, distance and travel time between a series of geographic points
    // 
    // Represents the turn-by-turn directions, geometry, distance, and time of the shortest path or fastest path between given start and end points
    rpc GetDirectionsOutputFormat(GetDirectionsOutputFormatRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//directions.{outputFormat}"
      };
    }
    // Get distance and travel time between two geographic points
    // 
    // Represents the distance and time of the shortest or fastest path between given start and end points.
    rpc GetDistanceOutputFormat(GetDistanceOutputFormatRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//distance.{outputFormat}"
      };
    }
    // Get distance and travel time between each pair of geographic points
    // 
    // Represents the distance and time of the shortest or fastest paths between all pairs of fromPoints and toPoints. The number of fromPoints times the number of toPoints should not exceed 100 or the request will time out.
    rpc GetDistanceBetweenPairsOutputFormat(GetDistanceBetweenPairsOutputFormatRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//distance/betweenPairs.{outputFormat}"
      };
    }
    // Get the path, distance and travel time between a series of geographic points
    // 
    // Represents the geometry, distance, and time of the shortest or fastest path between given start and end points.
    rpc GetRouteOutputFormat(GetRouteOutputFormatRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//route.{outputFormat}"
      };
    }
}
