definitions.AccessToken.properties.token.type: string
definitions.AccessToken.type: object
definitions.ApiMetadata.properties.categories.items.type: string
definitions.ApiMetadata.properties.categories.type: array
definitions.ApiMetadata.properties.categories.uniqueItems: true
definitions.ApiMetadata.properties.defaultVersion.type: string
definitions.ApiMetadata.properties.links.items.$ref: '#/definitions/ApiMetadataLink'
definitions.ApiMetadata.properties.links.type: array
definitions.ApiMetadata.properties.links.uniqueItems: true
definitions.ApiMetadata.properties.tags.items.type: string
definitions.ApiMetadata.properties.tags.type: array
definitions.ApiMetadata.properties.tags.uniqueItems: true
definitions.ApiMetadata.required.length: 2
definitions.ApiMetadata.required[0]: categories
definitions.ApiMetadata.required[1]: tags
definitions.ApiMetadata.type: object
definitions.ApiMetadataLink.properties.type.type: string
definitions.ApiMetadataLink.properties.url.type: string
definitions.ApiMetadataLink.required.length: 2
definitions.ApiMetadataLink.required[0]: type
definitions.ApiMetadataLink.required[1]: url
definitions.ApiMetadataLink.type: object
definitions.ApisJson.properties.apis.items.$ref: '#/definitions/ApisJsonApi'
definitions.ApisJson.properties.apis.type: array
definitions.ApisJson.properties.created.format: date-time
definitions.ApisJson.properties.created.type: string
definitions.ApisJson.properties.description.type: string
definitions.ApisJson.properties.modified.format: date-time
definitions.ApisJson.properties.modified.type: string
definitions.ApisJson.properties.name.type: string
definitions.ApisJson.properties.offset.format: int32
definitions.ApisJson.properties.offset.type: integer
definitions.ApisJson.properties.specificationVersion.type: string
definitions.ApisJson.properties.totalCount.format: int64
definitions.ApisJson.properties.totalCount.type: integer
definitions.ApisJson.properties.url.type: string
definitions.ApisJson.type: object
definitions.ApisJsonApi.properties.description.type: string
definitions.ApisJsonApi.properties.name.type: string
definitions.ApisJsonApi.properties.properties.items.$ref: '#/definitions/ApisJsonProperty'
definitions.ApisJsonApi.properties.properties.type: array
definitions.ApisJsonApi.properties.tags.items.type: string
definitions.ApisJsonApi.properties.tags.type: array
definitions.ApisJsonApi.properties.tags.uniqueItems: true
definitions.ApisJsonApi.type: object
definitions.ApisJsonProperty.description: an API property
definitions.ApisJsonProperty.properties.type.type: string
definitions.ApisJsonProperty.type: object
definitions.ApisJsonUrlProperty.allOf.length: 2
definitions.ApisJsonUrlProperty.allOf[0].$ref: '#/definitions/ApisJsonProperty'
definitions.ApisJsonUrlProperty.allOf[1].description: an API property where the value
  is a URL
definitions.ApisJsonUrlProperty.allOf[1].properties.url.format: url
definitions.ApisJsonUrlProperty.allOf[1].properties.url.type: string
definitions.ApisJsonUrlProperty.allOf[1].type: object
definitions.ApisJsonValueProperty.allOf.length: 2
definitions.ApisJsonValueProperty.allOf[0].$ref: '#/definitions/ApisJsonProperty'
definitions.ApisJsonValueProperty.allOf[1].description: an API property with a string
  value
definitions.ApisJsonValueProperty.allOf[1].properties.value.type: string
definitions.ApisJsonValueProperty.allOf[1].type: object
definitions.ClosableComment.allOf.length: 2
definitions.ClosableComment.allOf[0].$ref: '#/definitions/Comment'
definitions.ClosableComment.allOf[1].properties.position.format: int32
definitions.ClosableComment.allOf[1].properties.position.type: integer
definitions.ClosableComment.allOf[1].properties.replies.items.$ref: '#/definitions/Comment'
definitions.ClosableComment.allOf[1].properties.replies.type: array
definitions.ClosableComment.allOf[1].properties.status.enum.length: 2
definitions.ClosableComment.allOf[1].properties.status.enum[0]: OPEN
definitions.ClosableComment.allOf[1].properties.status.enum[1]: RESOLVED
definitions.ClosableComment.allOf[1].properties.status.type: string
definitions.ClosableComment.allOf[1].type: object
definitions.ClosableCommentPatch.allOf.length: 2
definitions.ClosableCommentPatch.allOf[0].$ref: '#/definitions/CommentPatch'
definitions.ClosableCommentPatch.allOf[1].properties.position.format: int32
definitions.ClosableCommentPatch.allOf[1].properties.position.type: integer
definitions.ClosableCommentPatch.allOf[1].type: object
definitions.CodegenLanguage.properties.customValues.additionalProperties.type: string
definitions.CodegenLanguage.properties.customValues.type: object
definitions.CodegenLanguage.properties.visible.default: true
definitions.CodegenLanguage.properties.visible.type: boolean
definitions.CodegenLanguage.required.length: 1
definitions.CodegenLanguage.required[0]: visible
definitions.CodegenLanguage.type: object
definitions.CodegenSettings.properties.client.additionalProperties.$ref: '#/definitions/CodegenLanguage'
definitions.CodegenSettings.properties.client.type: object
definitions.CodegenSettings.properties.server.additionalProperties.$ref: '#/definitions/CodegenLanguage'
definitions.CodegenSettings.properties.server.type: object
definitions.CodegenSettings.type: object
definitions.Collaboration.properties.hint.$ref: '#/definitions/CollaborationHint'
definitions.Collaboration.properties.members.items.$ref: '#/definitions/CollaborationMembership'
definitions.Collaboration.properties.members.type: array
definitions.Collaboration.properties.owner.readOnly: true
definitions.Collaboration.properties.owner.type: string
definitions.Collaboration.properties.owners.items.type: string
definitions.Collaboration.properties.owners.type: array
definitions.Collaboration.properties.pendingMembers.items.$ref: '#/definitions/CollaborationMembership'
definitions.Collaboration.properties.pendingMembers.type: array
definitions.Collaboration.properties.teams.items.$ref: '#/definitions/CollaborationTeamMembership'
definitions.Collaboration.properties.teams.type: array
definitions.Collaboration.required.length: 1
definitions.Collaboration.required[0]: hint
definitions.Collaboration.type: object
definitions.CollaborationHint.properties.type.description: type identifier of the
  managed entity
definitions.CollaborationHint.properties.type.format: uuid
definitions.CollaborationHint.properties.type.type: string
definitions.CollaborationHint.required.length: 1
definitions.CollaborationHint.required[0]: type
definitions.CollaborationHint.type: object
definitions.CollaborationMember.properties.name.type: string
definitions.CollaborationMember.properties.startTime.format: date-time
definitions.CollaborationMember.properties.startTime.readOnly: true
definitions.CollaborationMember.properties.startTime.type: string
definitions.CollaborationMember.properties.title.readOnly: true
definitions.CollaborationMember.properties.title.type: string
definitions.CollaborationMember.properties.uuid.readOnly: true
definitions.CollaborationMember.properties.uuid.type: string
definitions.CollaborationMember.required.length: 1
definitions.CollaborationMember.required[0]: name
definitions.CollaborationMember.type: object
definitions.CollaborationMembership.allOf.length: 2
definitions.CollaborationMembership.allOf[0].$ref: '#/definitions/CollaborationMember'
definitions.CollaborationMembership.allOf[1].properties.blocked.readOnly: true
definitions.CollaborationMembership.allOf[1].properties.blocked.type: boolean
definitions.CollaborationMembership.allOf[1].properties.donotdisturb.readOnly: true
definitions.CollaborationMembership.allOf[1].properties.donotdisturb.type: boolean
definitions.CollaborationMembership.allOf[1].properties.roles.items.enum.length: 3
definitions.CollaborationMembership.allOf[1].properties.roles.items.enum[0]: EDIT
definitions.CollaborationMembership.allOf[1].properties.roles.items.enum[1]: COMMENT
definitions.CollaborationMembership.allOf[1].properties.roles.items.enum[2]: VIEW
definitions.CollaborationMembership.allOf[1].properties.roles.items.type: string
definitions.CollaborationMembership.allOf[1].properties.roles.type: array
definitions.CollaborationMembership.allOf[1].required.length: 1
definitions.CollaborationMembership.allOf[1].required[0]: roles
definitions.CollaborationMembership.allOf[1].type: object
definitions.CollaborationMembershipList.properties.hint.$ref: '#/definitions/CollaborationHint'
definitions.CollaborationMembershipList.properties.items.items.$ref: '#/definitions/CollaborationMembership'
definitions.CollaborationMembershipList.properties.items.type: array
definitions.CollaborationMembershipList.required.length: 1
definitions.CollaborationMembershipList.required[0]: hint
definitions.CollaborationMembershipList.type: object
definitions.CollaborationRoles.properties.api.type: string
definitions.CollaborationRoles.properties.owner.type: string
definitions.CollaborationRoles.properties.roles.items.enum.length: 3
definitions.CollaborationRoles.properties.roles.items.enum[0]: EDIT
definitions.CollaborationRoles.properties.roles.items.enum[1]: COMMENT
definitions.CollaborationRoles.properties.roles.items.enum[2]: VIEW
definitions.CollaborationRoles.properties.roles.items.type: string
definitions.CollaborationRoles.properties.roles.type: array
definitions.CollaborationRoles.properties.roles.uniqueItems: true
definitions.CollaborationRoles.type: object
definitions.CollaborationTeamMembership.allOf.length: 2
definitions.CollaborationTeamMembership.allOf[0].$ref: '#/definitions/CollaborationMembership'
definitions.CollaborationTeamMembership.allOf[1].properties.members.items.$ref: '#/definitions/CollaborationMember'
definitions.CollaborationTeamMembership.allOf[1].properties.members.type: array
definitions.CollaborationTeamMembership.allOf[1].type: object
definitions.Comment.properties.body.type: string
definitions.Comment.properties.created.format: date-time
definitions.Comment.properties.created.type: string
definitions.Comment.properties.id.type: string
definitions.Comment.properties.modified.format: date-time
definitions.Comment.properties.modified.type: string
definitions.Comment.properties.user.$ref: '#/definitions/User'
definitions.Comment.required.length: 4
definitions.Comment.required[0]: body
definitions.Comment.required[1]: created
definitions.Comment.required[2]: id
definitions.Comment.required[3]: user
definitions.Comment.type: object
definitions.CommentPatch.properties.body.type: string
definitions.CommentPatch.type: object
definitions.CommentsBatch.properties.addComment.items.$ref: '#/definitions/NewComment'
definitions.CommentsBatch.properties.addComment.type: array
definitions.CommentsBatch.properties.addReply.additionalProperties.items.$ref: '#/definitions/NewReply'
definitions.CommentsBatch.properties.addReply.additionalProperties.type: array
definitions.CommentsBatch.properties.addReply.type: object
definitions.CommentsBatch.properties.deleteComment.items.type: string
definitions.CommentsBatch.properties.deleteComment.type: array
definitions.CommentsBatch.properties.deleteReply.additionalProperties.items.type: string
definitions.CommentsBatch.properties.deleteReply.additionalProperties.type: array
definitions.CommentsBatch.properties.deleteReply.additionalProperties.uniqueItems: true
definitions.CommentsBatch.properties.deleteReply.type: object
definitions.CommentsBatch.properties.updateComment.additionalProperties.$ref: '#/definitions/ClosableCommentPatch'
definitions.CommentsBatch.properties.updateComment.type: object
definitions.CommentsBatch.properties.updateReply.additionalProperties.additionalProperties.$ref: '#/definitions/CommentPatch'
definitions.CommentsBatch.properties.updateReply.additionalProperties.type: object
definitions.CommentsBatch.properties.updateReply.type: object
definitions.CommentsBatch.properties.updateStatus.additionalProperties.enum.length: 2
definitions.CommentsBatch.properties.updateStatus.additionalProperties.enum[0]: OPEN
definitions.CommentsBatch.properties.updateStatus.additionalProperties.enum[1]: RESOLVED
definitions.CommentsBatch.properties.updateStatus.additionalProperties.type: string
definitions.CommentsBatch.properties.updateStatus.type: object
definitions.CommentsBatch.type: object
definitions.Comparison.description: a list of differences between two APIs
definitions.Comparison.items.$ref: '#/definitions/ComparisonPart'
definitions.Comparison.type: array
definitions.ComparisonDetail.description: details for one side of a ComparisonPart
definitions.ComparisonDetail.properties.content.description: the content of the API
  definition between `startPosition` and `endPosition`
definitions.ComparisonDetail.properties.content.type: string
definitions.ComparisonDetail.properties.endPosition.$ref: '#/definitions/Position'
definitions.ComparisonDetail.properties.path.description: the path to the object (notation
  similar to JSONPath)
definitions.ComparisonDetail.properties.path.type: string
definitions.ComparisonDetail.properties.startPosition.$ref: '#/definitions/Position'
definitions.ComparisonDetail.required.length: 3
definitions.ComparisonDetail.required[0]: content
definitions.ComparisonDetail.required[1]: endPosition
definitions.ComparisonDetail.required[2]: startPosition
definitions.ComparisonDetail.type: object
definitions.ComparisonPart.description: a part of the API that was (or wasn't) changed
definitions.ComparisonPart.properties.base.$ref: '#/definitions/ComparisonDetail'
definitions.ComparisonPart.properties.other.$ref: '#/definitions/ComparisonDetail'
definitions.ComparisonPart.properties.type.description: |
  the type of change that this part describes
  * UNMODIFIED - this part is the same in both APIs. Only available for FULL compare.
  * INSERTED - this is present in `other` but missing in `base`. `base` will not be present.
  * DELETED - this is present in `base` but missing in `other`. `other` will not be present.
  * CHANGED - this has been changed between `base` and `other`. Both `base` and `other` present.
definitions.ComparisonPart.properties.type.enum.length: 4
definitions.ComparisonPart.properties.type.enum[0]: UNMODIFIED
definitions.ComparisonPart.properties.type.enum[1]: INSERTED
definitions.ComparisonPart.properties.type.enum[2]: DELETED
definitions.ComparisonPart.properties.type.enum[3]: CHANGED
definitions.ComparisonPart.properties.type.type: string
definitions.ComparisonPart.required.length: 1
definitions.ComparisonPart.required[0]: type
definitions.ComparisonPart.type: object
definitions.EntryId.properties.name.type: string
definitions.EntryId.properties.owner.type: string
definitions.EntryId.properties.version.type: string
definitions.EntryId.type: object
definitions.GitHubExportSettings.properties.branch.type: string
definitions.GitHubExportSettings.properties.notificationEmail.type: string
definitions.GitHubExportSettings.properties.owner.type: string
definitions.GitHubExportSettings.properties.path.type: string
definitions.GitHubExportSettings.properties.repository.type: string
definitions.GitHubExportSettings.properties.token.type: string
definitions.GitHubExportSettings.properties.yamlPath.type: string
definitions.GitHubExportSettings.required.length: 5
definitions.GitHubExportSettings.required[0]: branch
definitions.GitHubExportSettings.required[1]: notificationEmail
definitions.GitHubExportSettings.required[2]: owner
definitions.GitHubExportSettings.required[3]: repository
definitions.GitHubExportSettings.required[4]: token
definitions.GitHubExportSettings.type: object
definitions.LifecycleSettings.properties.published.type: boolean
definitions.LifecycleSettings.type: object
definitions.MissingSpecMembers.properties.names.items.type: string
definitions.MissingSpecMembers.properties.names.type: array
definitions.MissingSpecMembers.properties.spec.$ref: '#/definitions/SimpleSpec'
definitions.MissingSpecMembers.type: object
definitions.NewComment.properties.body.type: string
definitions.NewComment.properties.position.format: int32
definitions.NewComment.properties.position.type: integer
definitions.NewComment.properties.replies.items.$ref: '#/definitions/NewReply'
definitions.NewComment.properties.replies.type: array
definitions.NewComment.required.length: 2
definitions.NewComment.required[0]: body
definitions.NewComment.required[1]: position
definitions.NewComment.type: object
definitions.NewReply.properties.body.type: string
definitions.NewReply.required.length: 1
definitions.NewReply.required[0]: body
definitions.NewReply.type: object
definitions.NotCollaboratorProjectMembers.properties.missingApisMembers.items.$ref: '#/definitions/MissingSpecMembers'
definitions.NotCollaboratorProjectMembers.properties.missingApisMembers.type: array
definitions.NotCollaboratorProjectMembers.properties.missingApisTeams.items.$ref: '#/definitions/MissingSpecMembers'
definitions.NotCollaboratorProjectMembers.properties.missingApisTeams.type: array
definitions.NotCollaboratorProjectMembers.properties.missingDomainsMembers.items.$ref: '#/definitions/MissingSpecMembers'
definitions.NotCollaboratorProjectMembers.properties.missingDomainsMembers.type: array
definitions.NotCollaboratorProjectMembers.properties.missingDomainsTeams.items.$ref: '#/definitions/MissingSpecMembers'
definitions.NotCollaboratorProjectMembers.properties.missingDomainsTeams.type: array
definitions.NotCollaboratorProjectMembers.type: object
definitions.Page.properties.items.items.type: object
definitions.Page.properties.items.type: array
definitions.Page.properties.offset.format: int32
definitions.Page.properties.offset.type: integer
definitions.Page.properties.total.format: int64
definitions.Page.properties.total.type: integer
definitions.Page.type: object
definitions.PluginConfiguration.properties.configuration.additionalProperties.type: string
definitions.PluginConfiguration.properties.configuration.type: object
definitions.PluginConfiguration.properties.definitionId.type: string
definitions.PluginConfiguration.properties.draft.type: boolean
definitions.PluginConfiguration.properties.id.format: UUID
definitions.PluginConfiguration.properties.id.type: string
definitions.PluginConfiguration.properties.lifecycles.items.type: string
definitions.PluginConfiguration.properties.lifecycles.type: array
definitions.PluginConfiguration.properties.name.type: string
definitions.PluginConfiguration.properties.objectId.type: string
definitions.PluginConfiguration.properties.ownerName.type: string
definitions.PluginConfiguration.properties.path.type: string
definitions.PluginConfiguration.required.length: 6
definitions.PluginConfiguration.required[0]: definitionId
definitions.PluginConfiguration.required[1]: lifecycles
definitions.PluginConfiguration.required[2]: name
definitions.PluginConfiguration.required[3]: objectId
definitions.PluginConfiguration.required[4]: ownerName
definitions.PluginConfiguration.required[5]: path
definitions.PluginConfiguration.type: object
definitions.PluginDefinition.properties.configurationSchema.type: object
definitions.PluginDefinition.properties.createdBy.type: string
definitions.PluginDefinition.properties.createdOn.format: date-time
definitions.PluginDefinition.properties.createdOn.type: string
definitions.PluginDefinition.properties.enabled.type: boolean
definitions.PluginDefinition.properties.id.type: string
definitions.PluginDefinition.properties.implementingClass.type: string
definitions.PluginDefinition.properties.limit.description: count of allowed configurations
definitions.PluginDefinition.properties.limit.format: int64
definitions.PluginDefinition.properties.limit.type: integer
definitions.PluginDefinition.properties.name.type: string
definitions.PluginDefinition.properties.version.type: string
definitions.PluginDefinition.required.length: 7
definitions.PluginDefinition.required[0]: configurationSchema
definitions.PluginDefinition.required[1]: createdBy
definitions.PluginDefinition.required[2]: createdOn
definitions.PluginDefinition.required[3]: enabled
definitions.PluginDefinition.required[4]: implementingClass
definitions.PluginDefinition.required[5]: name
definitions.PluginDefinition.required[6]: version
definitions.PluginDefinition.type: object
definitions.Position.description: a position in a text document
definitions.Position.properties.column.type: integer
definitions.Position.properties.line.type: integer
definitions.Position.required.length: 2
definitions.Position.required[0]: column
definitions.Position.required[1]: line
definitions.Position.type: object
definitions.Private.properties.private.type: boolean
definitions.Private.required.length: 1
definitions.Private.required[0]: private
definitions.Private.type: object
definitions.ProjectEntry.properties.apis.items.$ref: '#/definitions/EntryId'
definitions.ProjectEntry.properties.apis.type: array
definitions.ProjectEntry.properties.domains.items.$ref: '#/definitions/EntryId'
definitions.ProjectEntry.properties.domains.type: array
definitions.ProjectEntry.properties.groupId.type: string
definitions.ProjectEntry.properties.name.type: string
definitions.ProjectEntry.properties.projectId.type: string
definitions.ProjectEntry.required.length: 3
definitions.ProjectEntry.required[0]: groupId
definitions.ProjectEntry.required[1]: name
definitions.ProjectEntry.required[2]: projectId
definitions.ProjectEntry.type: object
definitions.ProjectMember.properties.name.type: string
definitions.ProjectMember.properties.roles.items.type: string
definitions.ProjectMember.properties.roles.type: array
definitions.ProjectMember.properties.type.default: USER
definitions.ProjectMember.properties.type.enum.length: 2
definitions.ProjectMember.properties.type.enum[0]: USER
definitions.ProjectMember.properties.type.enum[1]: TEAM
definitions.ProjectMember.properties.type.type: string
definitions.ProjectMember.required.length: 3
definitions.ProjectMember.required[0]: name
definitions.ProjectMember.required[1]: roles
definitions.ProjectMember.required[2]: type
definitions.ProjectMember.type: object
definitions.ProjectMemberList.properties.members.items.$ref: '#/definitions/ProjectMember'
definitions.ProjectMemberList.properties.members.type: array
definitions.ProjectMemberList.type: object
definitions.ProjectsJson.properties.offset.format: int32
definitions.ProjectsJson.properties.offset.type: integer
definitions.ProjectsJson.properties.projects.items.$ref: '#/definitions/ProjectEntry'
definitions.ProjectsJson.properties.projects.type: array
definitions.ProjectsJson.properties.totalCount.format: int64
definitions.ProjectsJson.properties.totalCount.type: integer
definitions.ProjectsJson.type: object
definitions.SimpleSpec.properties.name.type: string
definitions.SimpleSpec.properties.owner.type: string
definitions.SimpleSpec.type: object
definitions.SpecId.properties.name.type: string
definitions.SpecId.properties.owner.type: string
definitions.SpecId.properties.version.type: string
definitions.SpecId.required.length: 3
definitions.SpecId.required[0]: name
definitions.SpecId.required[1]: owner
definitions.SpecId.required[2]: version
definitions.SpecId.type: object
definitions.SystemPluginConfiguration.properties.configuration.additionalProperties.type: string
definitions.SystemPluginConfiguration.properties.configuration.type: object
definitions.SystemPluginConfiguration.properties.id.format: UUID
definitions.SystemPluginConfiguration.properties.id.type: string
definitions.SystemPluginConfiguration.properties.implementingClass.type: string
definitions.SystemPluginConfiguration.properties.lifecycles.items.type: string
definitions.SystemPluginConfiguration.properties.lifecycles.type: array
definitions.SystemPluginConfiguration.properties.version.type: string
definitions.SystemPluginConfiguration.required.length: 3
definitions.SystemPluginConfiguration.required[0]: implementingClass
definitions.SystemPluginConfiguration.required[1]: lifecycles
definitions.SystemPluginConfiguration.required[2]: version
definitions.SystemPluginConfiguration.type: object
definitions.Template.properties.id.type: string
definitions.Template.properties.title.type: string
definitions.Template.required.length: 2
definitions.Template.required[0]: id
definitions.Template.required[1]: title
definitions.Template.type: object
definitions.TemplateCatalog.properties.default.$ref: '#/definitions/Template'
definitions.TemplateCatalog.properties.templates.items.$ref: '#/definitions/Template'
definitions.TemplateCatalog.properties.templates.type: array
definitions.TemplateCatalog.type: object
definitions.User.properties.active.type: boolean
definitions.User.properties.id.type: string
definitions.User.type: object
definitions.UserCredentials.properties.password.type: string
definitions.UserCredentials.properties.username.type: string
definitions.UserCredentials.type: object
definitions.VersionMetadata.properties.codegenSettings.$ref: '#/definitions/CodegenSettings'
definitions.VersionMetadata.type: object
host: api.swaggerhub.com
info.contact.email: info@swaggerhub.com
info.contact.name: SwaggerHub
info.contact.url: http://swaggerhub.com
info.description: |
  # Introduction
  This is the registry API for SwaggerHub. It allows you to access, manage, and update your APIs and Domains in SwaggerHub bypassing the Web application.

  # Authentication
  Use your personal API Key: you may find it by visiting the   [API Key page](https://app.swaggerhub.com/settings/apiKey).
info.title: SwaggerHub Registry
info.version: 1.0.45
info.x-apisguru-categories.length: 1
info.x-apisguru-categories[0]: developer_tools
info.x-logo.url: https://api.apis.guru/v2/cache/logo/https_pbs.twimg.com_profile_images_725794797592690688_r20oBBuu_400x400.jpg
info.x-origin.length: 1
info.x-origin[0].format: swagger
info.x-origin[0].url: https://api.swaggerhub.com/apis/swagger-hub/registry-api/1.0.45
info.x-origin[0].version: "2.0"
info.x-preferred: true
info.x-providerName: swaggerhub.com
paths./apis.get.description: ""
paths./apis.get.operationId: searchApis
paths./apis.get.parameters.length: 7
paths./apis.get.parameters[0].description: free text query to match
paths./apis.get.parameters[0].in: query
paths./apis.get.parameters[0].name: query
paths./apis.get.parameters[0].required: false
paths./apis.get.parameters[0].type: string
paths./apis.get.parameters[1].default: ALL
paths./apis.get.parameters[1].description: |
  matches against published state of the spec
  * UNPUBLISHED - spec is a draft, a work in progress
  * PUBLISHED - spec is a stable version ready for consuming from client applications
  * ANY - either PUBLISHED or UNPUBLISHED
paths./apis.get.parameters[1].enum.length: 3
paths./apis.get.parameters[1].enum[0]: ALL
paths./apis.get.parameters[1].enum[1]: PUBLISHED
paths./apis.get.parameters[1].enum[2]: UNPUBLISHED
paths./apis.get.parameters[1].in: query
paths./apis.get.parameters[1].name: state
paths./apis.get.parameters[1].required: false
paths./apis.get.parameters[1].type: string
paths./apis.get.parameters[2].collectionFormat: multi
paths./apis.get.parameters[2].description: matches against tags associated with an
  API
paths./apis.get.parameters[2].in: query
paths./apis.get.parameters[2].items.type: string
paths./apis.get.parameters[2].name: tag
paths./apis.get.parameters[2].required: false
paths./apis.get.parameters[2].type: array
paths./apis.get.parameters[3].default: 0
paths./apis.get.parameters[3].description: page to return
paths./apis.get.parameters[3].format: int32
paths./apis.get.parameters[3].in: query
paths./apis.get.parameters[3].name: page
paths./apis.get.parameters[3].required: false
paths./apis.get.parameters[3].type: integer
paths./apis.get.parameters[4].default: 10
paths./apis.get.parameters[4].description: number of results per page
paths./apis.get.parameters[4].format: int32
paths./apis.get.parameters[4].in: query
paths./apis.get.parameters[4].name: limit
paths./apis.get.parameters[4].required: false
paths./apis.get.parameters[4].type: integer
paths./apis.get.parameters[5].default: NAME
paths./apis.get.parameters[5].description: |
  sort criteria or result set
  * NAME -
  * UPATED
  * CREATED
  * OWNER
paths./apis.get.parameters[5].enum.length: 4
paths./apis.get.parameters[5].enum[0]: NAME
paths./apis.get.parameters[5].enum[1]: UPDATED
paths./apis.get.parameters[5].enum[2]: CREATED
paths./apis.get.parameters[5].enum[3]: OWNER
paths./apis.get.parameters[5].in: query
paths./apis.get.parameters[5].name: sort
paths./apis.get.parameters[5].required: false
paths./apis.get.parameters[5].type: string
paths./apis.get.parameters[6].default: ASC
paths./apis.get.parameters[6].description: sort order
paths./apis.get.parameters[6].enum.length: 2
paths./apis.get.parameters[6].enum[0]: ASC
paths./apis.get.parameters[6].enum[1]: DESC
paths./apis.get.parameters[6].in: query
paths./apis.get.parameters[6].name: order
paths./apis.get.parameters[6].required: false
paths./apis.get.parameters[6].type: string
paths./apis.get.responses.303.description: 303 response
paths./apis.get.responses.303.headers.Location.type: string
paths./apis.get.security.length: 1
paths./apis.get.security[0].TokenSecured.length: 0
paths./apis.get.summary: Retrieves a list of currently defined APIs in APIs.json format.
paths./apis.get.tags.length: 1
paths./apis.get.tags[0]: APIs
paths./apis/{owner}.get.description: ""
paths./apis/{owner}.get.operationId: getOwnerApis
paths./apis/{owner}.get.parameters.length: 5
paths./apis/{owner}.get.parameters[0].description: API or Domaion owner identifier
paths./apis/{owner}.get.parameters[0].in: path
paths./apis/{owner}.get.parameters[0].name: owner
paths./apis/{owner}.get.parameters[0].required: true
paths./apis/{owner}.get.parameters[0].type: string
paths./apis/{owner}.get.parameters[1].default: 0
paths./apis/{owner}.get.parameters[1].description: page to return
paths./apis/{owner}.get.parameters[1].format: int32
paths./apis/{owner}.get.parameters[1].in: query
paths./apis/{owner}.get.parameters[1].name: page
paths./apis/{owner}.get.parameters[1].required: false
paths./apis/{owner}.get.parameters[1].type: integer
paths./apis/{owner}.get.parameters[2].default: 10
paths./apis/{owner}.get.parameters[2].description: number of results per page
paths./apis/{owner}.get.parameters[2].format: int32
paths./apis/{owner}.get.parameters[2].in: query
paths./apis/{owner}.get.parameters[2].name: limit
paths./apis/{owner}.get.parameters[2].required: false
paths./apis/{owner}.get.parameters[2].type: integer
paths./apis/{owner}.get.parameters[3].default: NAME
paths./apis/{owner}.get.parameters[3].description: |
  sort criteria or result set
  * NAME -
  * UPATED
  * CREATED
  * OWNER
paths./apis/{owner}.get.parameters[3].enum.length: 4
paths./apis/{owner}.get.parameters[3].enum[0]: NAME
paths./apis/{owner}.get.parameters[3].enum[1]: UPDATED
paths./apis/{owner}.get.parameters[3].enum[2]: CREATED
paths./apis/{owner}.get.parameters[3].enum[3]: OWNER
paths./apis/{owner}.get.parameters[3].in: query
paths./apis/{owner}.get.parameters[3].name: sort
paths./apis/{owner}.get.parameters[3].required: false
paths./apis/{owner}.get.parameters[3].type: string
paths./apis/{owner}.get.parameters[4].default: ASC
paths./apis/{owner}.get.parameters[4].description: sort order
paths./apis/{owner}.get.parameters[4].enum.length: 2
paths./apis/{owner}.get.parameters[4].enum[0]: ASC
paths./apis/{owner}.get.parameters[4].enum[1]: DESC
paths./apis/{owner}.get.parameters[4].in: query
paths./apis/{owner}.get.parameters[4].name: order
paths./apis/{owner}.get.parameters[4].required: false
paths./apis/{owner}.get.parameters[4].type: string
paths./apis/{owner}.get.responses.200.description: a list of APIs in APIs.json format
paths./apis/{owner}.get.responses.200.schema.$ref: '#/definitions/ApisJson'
paths./apis/{owner}.get.security.length: 1
paths./apis/{owner}.get.security[0].TokenSecured.length: 0
paths./apis/{owner}.get.summary: Retrieves an APIs.json listing of all APIs defined
  for this owner
paths./apis/{owner}.get.tags.length: 1
paths./apis/{owner}.get.tags[0]: APIs
paths./apis/{owner}/{api}.delete.description: ""
paths./apis/{owner}/{api}.delete.operationId: deleteApi
paths./apis/{owner}/{api}.delete.parameters.length: 2
paths./apis/{owner}/{api}.delete.parameters[0].description: API or Domaion owner identifier
paths./apis/{owner}/{api}.delete.parameters[0].in: path
paths./apis/{owner}/{api}.delete.parameters[0].name: owner
paths./apis/{owner}/{api}.delete.parameters[0].required: true
paths./apis/{owner}/{api}.delete.parameters[0].type: string
paths./apis/{owner}/{api}.delete.parameters[1].description: API identifier
paths./apis/{owner}/{api}.delete.parameters[1].in: path
paths./apis/{owner}/{api}.delete.parameters[1].name: api
paths./apis/{owner}/{api}.delete.parameters[1].required: true
paths./apis/{owner}/{api}.delete.parameters[1].type: string
paths./apis/{owner}/{api}.delete.responses.200.description: the API was successfully
  deleted
paths./apis/{owner}/{api}.delete.responses.403.description: access denied
paths./apis/{owner}/{api}.delete.responses.404.description: specified API not found
paths./apis/{owner}/{api}.delete.responses.409.description: the API has published
  versions and can not be deleted
paths./apis/{owner}/{api}.delete.security.length: 1
paths./apis/{owner}/{api}.delete.security[0].TokenSecured.length: 0
paths./apis/{owner}/{api}.delete.summary: Deletes the specified API
paths./apis/{owner}/{api}.delete.tags.length: 1
paths./apis/{owner}/{api}.delete.tags[0]: APIs
paths./apis/{owner}/{api}.get.operationId: getApiVersions
paths./apis/{owner}/{api}.get.parameters.length: 2
paths./apis/{owner}/{api}.get.parameters[0].description: API or Domaion owner identifier
paths./apis/{owner}/{api}.get.parameters[0].in: path
paths./apis/{owner}/{api}.get.parameters[0].name: owner
paths./apis/{owner}/{api}.get.parameters[0].required: true
paths./apis/{owner}/{api}.get.parameters[0].type: string
paths./apis/{owner}/{api}.get.parameters[1].description: API identifier
paths./apis/{owner}/{api}.get.parameters[1].in: path
paths./apis/{owner}/{api}.get.parameters[1].name: api
paths./apis/{owner}/{api}.get.parameters[1].required: true
paths./apis/{owner}/{api}.get.parameters[1].type: string
paths./apis/{owner}/{api}.get.responses.200.description: a list of API versions in
  APIs.json format
paths./apis/{owner}/{api}.get.responses.200.schema.$ref: '#/definitions/ApisJson'
paths./apis/{owner}/{api}.get.security.length: 1
paths./apis/{owner}/{api}.get.security[0].TokenSecured.length: 0
paths./apis/{owner}/{api}.get.summary: Retrieves an APIs.json listing for all API
  versions for this owner and API
paths./apis/{owner}/{api}.get.tags.length: 1
paths./apis/{owner}/{api}.get.tags[0]: APIs
paths./apis/{owner}/{api}.post.consumes.length: 2
paths./apis/{owner}/{api}.post.consumes[0]: application/json
paths./apis/{owner}/{api}.post.consumes[1]: application/yaml
paths./apis/{owner}/{api}.post.description: Saves the provided Swagger definition;
  the owner must match the token owner. The version will be extracted from the Swagger
  definitions itself.
paths./apis/{owner}/{api}.post.operationId: saveDefinition
paths./apis/{owner}/{api}.post.parameters.length: 6
paths./apis/{owner}/{api}.post.parameters[0].description: API or Domaion owner identifier
paths./apis/{owner}/{api}.post.parameters[0].in: path
paths./apis/{owner}/{api}.post.parameters[0].name: owner
paths./apis/{owner}/{api}.post.parameters[0].required: true
paths./apis/{owner}/{api}.post.parameters[0].type: string
paths./apis/{owner}/{api}.post.parameters[1].description: API identifier
paths./apis/{owner}/{api}.post.parameters[1].in: path
paths./apis/{owner}/{api}.post.parameters[1].name: api
paths./apis/{owner}/{api}.post.parameters[1].required: true
paths./apis/{owner}/{api}.post.parameters[1].type: string
paths./apis/{owner}/{api}.post.parameters[2].default: false
paths./apis/{owner}/{api}.post.parameters[2].description: Defines whether the API
  has to be private
paths./apis/{owner}/{api}.post.parameters[2].in: query
paths./apis/{owner}/{api}.post.parameters[2].name: isPrivate
paths./apis/{owner}/{api}.post.parameters[2].required: false
paths./apis/{owner}/{api}.post.parameters[2].type: boolean
paths./apis/{owner}/{api}.post.parameters[3].description: api version
paths./apis/{owner}/{api}.post.parameters[3].in: query
paths./apis/{owner}/{api}.post.parameters[3].name: version
paths./apis/{owner}/{api}.post.parameters[3].required: false
paths./apis/{owner}/{api}.post.parameters[3].type: string
paths./apis/{owner}/{api}.post.parameters[4].description: the Swagger definition of
  this API
paths./apis/{owner}/{api}.post.parameters[4].in: body
paths./apis/{owner}/{api}.post.parameters[4].name: definition
paths./apis/{owner}/{api}.post.parameters[4].required: true
paths./apis/{owner}/{api}.post.parameters[4].schema.type: string
paths./apis/{owner}/{api}.post.parameters[5].description: force update
paths./apis/{owner}/{api}.post.parameters[5].in: query
paths./apis/{owner}/{api}.post.parameters[5].name: force
paths./apis/{owner}/{api}.post.parameters[5].required: false
paths./apis/{owner}/{api}.post.parameters[5].type: boolean
paths./apis/{owner}/{api}.post.responses.200.description: the API was successfully
  saved
paths./apis/{owner}/{api}.post.responses.201.description: new API was successfully
  saved
paths./apis/{owner}/{api}.post.responses.205.description: the API was successfully
  saved and should be reloaded
paths./apis/{owner}/{api}.post.responses.400.description: the Swagger definition was
  invalid
paths./apis/{owner}/{api}.post.responses.403.description: maximum number of APIs reached
paths./apis/{owner}/{api}.post.responses.409.description: can not overwrite a published
  API version
paths./apis/{owner}/{api}.post.responses.415.description: invalid content type
paths./apis/{owner}/{api}.post.security.length: 1
paths./apis/{owner}/{api}.post.security[0].TokenSecured.length: 0
paths./apis/{owner}/{api}.post.summary: Saves the provided Swagger definition
paths./apis/{owner}/{api}.post.tags.length: 1
paths./apis/{owner}/{api}.post.tags[0]: APIs
paths./apis/{owner}/{api}/.collaboration.delete.operationId: deleteCollaboration
paths./apis/{owner}/{api}/.collaboration.delete.parameters.length: 2
paths./apis/{owner}/{api}/.collaboration.delete.parameters[0].description: API or
  Domaion owner identifier
paths./apis/{owner}/{api}/.collaboration.delete.parameters[0].in: path
paths./apis/{owner}/{api}/.collaboration.delete.parameters[0].name: owner
paths./apis/{owner}/{api}/.collaboration.delete.parameters[0].required: true
paths./apis/{owner}/{api}/.collaboration.delete.parameters[0].type: string
paths./apis/{owner}/{api}/.collaboration.delete.parameters[1].description: API identifier
paths./apis/{owner}/{api}/.collaboration.delete.parameters[1].in: path
paths./apis/{owner}/{api}/.collaboration.delete.parameters[1].name: api
paths./apis/{owner}/{api}/.collaboration.delete.parameters[1].required: true
paths./apis/{owner}/{api}/.collaboration.delete.parameters[1].type: string
paths./apis/{owner}/{api}/.collaboration.delete.responses.default.description: successfully
  deleted a collaboration
paths./apis/{owner}/{api}/.collaboration.delete.security.length: 1
paths./apis/{owner}/{api}/.collaboration.delete.security[0].TokenSecured.length: 0
paths./apis/{owner}/{api}/.collaboration.delete.summary: Deletes API's collaboration
paths./apis/{owner}/{api}/.collaboration.delete.tags.length: 1
paths./apis/{owner}/{api}/.collaboration.delete.tags[0]: APIs
paths./apis/{owner}/{api}/.collaboration.get.operationId: getCollaboration
paths./apis/{owner}/{api}/.collaboration.get.parameters.length: 3
paths./apis/{owner}/{api}/.collaboration.get.parameters[0].description: API or Domaion
  owner identifier
paths./apis/{owner}/{api}/.collaboration.get.parameters[0].in: path
paths./apis/{owner}/{api}/.collaboration.get.parameters[0].name: owner
paths./apis/{owner}/{api}/.collaboration.get.parameters[0].required: true
paths./apis/{owner}/{api}/.collaboration.get.parameters[0].type: string
paths./apis/{owner}/{api}/.collaboration.get.parameters[1].description: API identifier
paths./apis/{owner}/{api}/.collaboration.get.parameters[1].in: path
paths./apis/{owner}/{api}/.collaboration.get.parameters[1].name: api
paths./apis/{owner}/{api}/.collaboration.get.parameters[1].required: true
paths./apis/{owner}/{api}/.collaboration.get.parameters[1].type: string
paths./apis/{owner}/{api}/.collaboration.get.parameters[2].default: false
paths./apis/{owner}/{api}/.collaboration.get.parameters[2].in: query
paths./apis/{owner}/{api}/.collaboration.get.parameters[2].name: expandTeams
paths./apis/{owner}/{api}/.collaboration.get.parameters[2].required: false
paths./apis/{owner}/{api}/.collaboration.get.parameters[2].type: boolean
paths./apis/{owner}/{api}/.collaboration.get.responses.200.description: the existing
  collaboration on an API
paths./apis/{owner}/{api}/.collaboration.get.responses.200.schema.$ref: '#/definitions/Collaboration'
paths./apis/{owner}/{api}/.collaboration.get.security.length: 1
paths./apis/{owner}/{api}/.collaboration.get.security[0].TokenSecured.length: 0
paths./apis/{owner}/{api}/.collaboration.get.summary: Gets API's collaboration
paths./apis/{owner}/{api}/.collaboration.get.tags.length: 1
paths./apis/{owner}/{api}/.collaboration.get.tags[0]: APIs
paths./apis/{owner}/{api}/.collaboration.put.operationId: updateCollaboration
paths./apis/{owner}/{api}/.collaboration.put.parameters.length: 3
paths./apis/{owner}/{api}/.collaboration.put.parameters[0].description: API or Domaion
  owner identifier
paths./apis/{owner}/{api}/.collaboration.put.parameters[0].in: path
paths./apis/{owner}/{api}/.collaboration.put.parameters[0].name: owner
paths./apis/{owner}/{api}/.collaboration.put.parameters[0].required: true
paths./apis/{owner}/{api}/.collaboration.put.parameters[0].type: string
paths./apis/{owner}/{api}/.collaboration.put.parameters[1].description: API identifier
paths./apis/{owner}/{api}/.collaboration.put.parameters[1].in: path
paths./apis/{owner}/{api}/.collaboration.put.parameters[1].name: api
paths./apis/{owner}/{api}/.collaboration.put.parameters[1].required: true
paths./apis/{owner}/{api}/.collaboration.put.parameters[1].type: string
paths./apis/{owner}/{api}/.collaboration.put.parameters[2].in: body
paths./apis/{owner}/{api}/.collaboration.put.parameters[2].name: body
paths./apis/{owner}/{api}/.collaboration.put.parameters[2].required: false
paths./apis/{owner}/{api}/.collaboration.put.parameters[2].schema.$ref: '#/definitions/Collaboration'
paths./apis/{owner}/{api}/.collaboration.put.responses.default.description: successfully
  updated API collaboration
paths./apis/{owner}/{api}/.collaboration.put.security.length: 1
paths./apis/{owner}/{api}/.collaboration.put.security[0].TokenSecured.length: 0
paths./apis/{owner}/{api}/.collaboration.put.summary: Updates API's collaboration
paths./apis/{owner}/{api}/.collaboration.put.tags.length: 1
paths./apis/{owner}/{api}/.collaboration.put.tags[0]: APIs
paths./apis/{owner}/{api}/{version}.delete.description: ""
paths./apis/{owner}/{api}/{version}.delete.operationId: deleteApiVersion
paths./apis/{owner}/{api}/{version}.delete.parameters.length: 3
paths./apis/{owner}/{api}/{version}.delete.parameters[0].description: API or Domaion
  owner identifier
paths./apis/{owner}/{api}/{version}.delete.parameters[0].in: path
paths./apis/{owner}/{api}/{version}.delete.parameters[0].name: owner
paths./apis/{owner}/{api}/{version}.delete.parameters[0].required: true
paths./apis/{owner}/{api}/{version}.delete.parameters[0].type: string
paths./apis/{owner}/{api}/{version}.delete.parameters[1].description: API identifier
paths./apis/{owner}/{api}/{version}.delete.parameters[1].in: path
paths./apis/{owner}/{api}/{version}.delete.parameters[1].name: api
paths./apis/{owner}/{api}/{version}.delete.parameters[1].required: true
paths./apis/{owner}/{api}/{version}.delete.parameters[1].type: string
paths./apis/{owner}/{api}/{version}.delete.parameters[2].description: version identifier
paths./apis/{owner}/{api}/{version}.delete.parameters[2].in: path
paths./apis/{owner}/{api}/{version}.delete.parameters[2].name: version
paths./apis/{owner}/{api}/{version}.delete.parameters[2].required: true
paths./apis/{owner}/{api}/{version}.delete.parameters[2].type: string
paths./apis/{owner}/{api}/{version}.delete.responses.200.description: the API version
  was successfully deleted
paths./apis/{owner}/{api}/{version}.delete.responses.403.description: access denied
paths./apis/{owner}/{api}/{version}.delete.responses.404.description: specified API
  not found
paths./apis/{owner}/{api}/{version}.delete.responses.409.description: the API version
  is published and can not be deleted or it is the only version of this API
paths./apis/{owner}/{api}/{version}.delete.security.length: 1
paths./apis/{owner}/{api}/{version}.delete.security[0].TokenSecured.length: 0
paths./apis/{owner}/{api}/{version}.delete.summary: Deletes a particular version of
  the specified API
paths./apis/{owner}/{api}/{version}.delete.tags.length: 1
paths./apis/{owner}/{api}/{version}.delete.tags[0]: APIs
paths./apis/{owner}/{api}/{version}.get.description: ""
paths./apis/{owner}/{api}/{version}.get.operationId: getDefinition
paths./apis/{owner}/{api}/{version}.get.parameters.length: 3
paths./apis/{owner}/{api}/{version}.get.parameters[0].description: API or Domaion
  owner identifier
paths./apis/{owner}/{api}/{version}.get.parameters[0].in: path
paths./apis/{owner}/{api}/{version}.get.parameters[0].name: owner
paths./apis/{owner}/{api}/{version}.get.parameters[0].required: true
paths./apis/{owner}/{api}/{version}.get.parameters[0].type: string
paths./apis/{owner}/{api}/{version}.get.parameters[1].description: API identifier
paths./apis/{owner}/{api}/{version}.get.parameters[1].in: path
paths./apis/{owner}/{api}/{version}.get.parameters[1].name: api
paths./apis/{owner}/{api}/{version}.get.parameters[1].required: true
paths./apis/{owner}/{api}/{version}.get.parameters[1].type: string
paths./apis/{owner}/{api}/{version}.get.parameters[2].description: version identifier
paths./apis/{owner}/{api}/{version}.get.parameters[2].in: path
paths./apis/{owner}/{api}/{version}.get.parameters[2].name: version
paths./apis/{owner}/{api}/{version}.get.parameters[2].required: true
paths./apis/{owner}/{api}/{version}.get.parameters[2].type: string
paths./apis/{owner}/{api}/{version}.get.produces.length: 2
paths./apis/{owner}/{api}/{version}.get.produces[0]: application/json
paths./apis/{owner}/{api}/{version}.get.produces[1]: application/yaml
paths./apis/{owner}/{api}/{version}.get.responses.200.description: the Swagger API
  in requested format
paths./apis/{owner}/{api}/{version}.get.responses.200.schema.type: object
paths./apis/{owner}/{api}/{version}.get.responses.404.description: specified API not
  found
paths./apis/{owner}/{api}/{version}.get.security.length: 1
paths./apis/{owner}/{api}/{version}.get.security[0].TokenSecured.length: 0
paths./apis/{owner}/{api}/{version}.get.summary: Retrieves the Swagger definition
  for the specified API and version
paths./apis/{owner}/{api}/{version}.get.tags.length: 1
paths./apis/{owner}/{api}/{version}.get.tags[0]: APIs
paths./apis/{owner}/{api}/{version}/swagger.json.get.description: ""
paths./apis/{owner}/{api}/{version}/swagger.json.get.operationId: getJsonDefinition
paths./apis/{owner}/{api}/{version}/swagger.json.get.parameters.length: 3
paths./apis/{owner}/{api}/{version}/swagger.json.get.parameters[0].description: API
  or Domaion owner identifier
paths./apis/{owner}/{api}/{version}/swagger.json.get.parameters[0].in: path
paths./apis/{owner}/{api}/{version}/swagger.json.get.parameters[0].name: owner
paths./apis/{owner}/{api}/{version}/swagger.json.get.parameters[0].required: true
paths./apis/{owner}/{api}/{version}/swagger.json.get.parameters[0].type: string
paths./apis/{owner}/{api}/{version}/swagger.json.get.parameters[1].description: API
  identifier
paths./apis/{owner}/{api}/{version}/swagger.json.get.parameters[1].in: path
paths./apis/{owner}/{api}/{version}/swagger.json.get.parameters[1].name: api
paths./apis/{owner}/{api}/{version}/swagger.json.get.parameters[1].required: true
paths./apis/{owner}/{api}/{version}/swagger.json.get.parameters[1].type: string
paths./apis/{owner}/{api}/{version}/swagger.json.get.parameters[2].description: version
  identifier
paths./apis/{owner}/{api}/{version}/swagger.json.get.parameters[2].in: path
paths./apis/{owner}/{api}/{version}/swagger.json.get.parameters[2].name: version
paths./apis/{owner}/{api}/{version}/swagger.json.get.parameters[2].required: true
paths./apis/{owner}/{api}/{version}/swagger.json.get.parameters[2].type: string
paths./apis/{owner}/{api}/{version}/swagger.json.get.responses.200.description: the
  Swagger API in JSON format
paths./apis/{owner}/{api}/{version}/swagger.json.get.responses.200.schema.type: object
paths./apis/{owner}/{api}/{version}/swagger.json.get.responses.404.description: specified
  API not found
paths./apis/{owner}/{api}/{version}/swagger.json.get.security.length: 1
paths./apis/{owner}/{api}/{version}/swagger.json.get.security[0].TokenSecured.length: 0
paths./apis/{owner}/{api}/{version}/swagger.json.get.summary: Retrieves the Swagger
  definition for the specified API and version in JSON format
paths./apis/{owner}/{api}/{version}/swagger.json.get.tags.length: 1
paths./apis/{owner}/{api}/{version}/swagger.json.get.tags[0]: APIs
paths./apis/{owner}/{api}/{version}/swagger.yaml.get.description: ""
paths./apis/{owner}/{api}/{version}/swagger.yaml.get.operationId: getYamlDefinition
paths./apis/{owner}/{api}/{version}/swagger.yaml.get.parameters.length: 3
paths./apis/{owner}/{api}/{version}/swagger.yaml.get.parameters[0].description: API
  or Domaion owner identifier
paths./apis/{owner}/{api}/{version}/swagger.yaml.get.parameters[0].in: path
paths./apis/{owner}/{api}/{version}/swagger.yaml.get.parameters[0].name: owner
paths./apis/{owner}/{api}/{version}/swagger.yaml.get.parameters[0].required: true
paths./apis/{owner}/{api}/{version}/swagger.yaml.get.parameters[0].type: string
paths./apis/{owner}/{api}/{version}/swagger.yaml.get.parameters[1].description: API
  identifier
paths./apis/{owner}/{api}/{version}/swagger.yaml.get.parameters[1].in: path
paths./apis/{owner}/{api}/{version}/swagger.yaml.get.parameters[1].name: api
paths./apis/{owner}/{api}/{version}/swagger.yaml.get.parameters[1].required: true
paths./apis/{owner}/{api}/{version}/swagger.yaml.get.parameters[1].type: string
paths./apis/{owner}/{api}/{version}/swagger.yaml.get.parameters[2].description: version
  identifier
paths./apis/{owner}/{api}/{version}/swagger.yaml.get.parameters[2].in: path
paths./apis/{owner}/{api}/{version}/swagger.yaml.get.parameters[2].name: version
paths./apis/{owner}/{api}/{version}/swagger.yaml.get.parameters[2].required: true
paths./apis/{owner}/{api}/{version}/swagger.yaml.get.parameters[2].type: string
paths./apis/{owner}/{api}/{version}/swagger.yaml.get.produces.length: 1
paths./apis/{owner}/{api}/{version}/swagger.yaml.get.produces[0]: application/yaml
paths./apis/{owner}/{api}/{version}/swagger.yaml.get.responses.200.description: the
  Swagger API in YAML format
paths./apis/{owner}/{api}/{version}/swagger.yaml.get.responses.200.schema.type: object
paths./apis/{owner}/{api}/{version}/swagger.yaml.get.responses.404.description: specified
  API not found
paths./apis/{owner}/{api}/{version}/swagger.yaml.get.security.length: 1
paths./apis/{owner}/{api}/{version}/swagger.yaml.get.security[0].TokenSecured.length: 0
paths./apis/{owner}/{api}/{version}/swagger.yaml.get.summary: Retrieves the Swagger
  definition for the specified API and version in YAML format
paths./apis/{owner}/{api}/{version}/swagger.yaml.get.tags.length: 1
paths./apis/{owner}/{api}/{version}/swagger.yaml.get.tags[0]: APIs
paths./domains.get.operationId: searchDomains
paths./domains.get.parameters.length: 7
paths./domains.get.parameters[0].description: free text query to match
paths./domains.get.parameters[0].in: query
paths./domains.get.parameters[0].name: query
paths./domains.get.parameters[0].required: false
paths./domains.get.parameters[0].type: string
paths./domains.get.parameters[1].default: ALL
paths./domains.get.parameters[1].description: |
  matches against published state of the spec
  * UNPUBLISHED - spec is a draft, a work in progress
  * PUBLISHED - spec is a stable version ready for consuming from client applications
  * ANY - either PUBLISHED or UNPUBLISHED
paths./domains.get.parameters[1].enum.length: 3
paths./domains.get.parameters[1].enum[0]: ALL
paths./domains.get.parameters[1].enum[1]: PUBLISHED
paths./domains.get.parameters[1].enum[2]: UNPUBLISHED
paths./domains.get.parameters[1].in: query
paths./domains.get.parameters[1].name: state
paths./domains.get.parameters[1].required: false
paths./domains.get.parameters[1].type: string
paths./domains.get.parameters[2].collectionFormat: multi
paths./domains.get.parameters[2].description: matches against tags associated with
  a domain
paths./domains.get.parameters[2].in: query
paths./domains.get.parameters[2].items.type: string
paths./domains.get.parameters[2].name: tag
paths./domains.get.parameters[2].required: false
paths./domains.get.parameters[2].type: array
paths./domains.get.parameters[3].default: 0
paths./domains.get.parameters[3].description: page to return
paths./domains.get.parameters[3].format: int32
paths./domains.get.parameters[3].in: query
paths./domains.get.parameters[3].name: page
paths./domains.get.parameters[3].required: false
paths./domains.get.parameters[3].type: integer
paths./domains.get.parameters[4].default: 10
paths./domains.get.parameters[4].description: number of results per page
paths./domains.get.parameters[4].format: int32
paths./domains.get.parameters[4].in: query
paths./domains.get.parameters[4].name: limit
paths./domains.get.parameters[4].required: false
paths./domains.get.parameters[4].type: integer
paths./domains.get.parameters[5].default: NAME
paths./domains.get.parameters[5].description: |
  sort criteria or result set
  * NAME -
  * UPATED
  * CREATED
  * OWNER
paths./domains.get.parameters[5].enum.length: 4
paths./domains.get.parameters[5].enum[0]: NAME
paths./domains.get.parameters[5].enum[1]: UPDATED
paths./domains.get.parameters[5].enum[2]: CREATED
paths./domains.get.parameters[5].enum[3]: OWNER
paths./domains.get.parameters[5].in: query
paths./domains.get.parameters[5].name: sort
paths./domains.get.parameters[5].required: false
paths./domains.get.parameters[5].type: string
paths./domains.get.parameters[6].default: ASC
paths./domains.get.parameters[6].description: sort order
paths./domains.get.parameters[6].enum.length: 2
paths./domains.get.parameters[6].enum[0]: ASC
paths./domains.get.parameters[6].enum[1]: DESC
paths./domains.get.parameters[6].in: query
paths./domains.get.parameters[6].name: order
paths./domains.get.parameters[6].required: false
paths./domains.get.parameters[6].type: string
paths./domains.get.responses.303.description: 303 response
paths./domains.get.responses.303.headers.Location.type: string
paths./domains.get.security.length: 1
paths./domains.get.security[0].TokenSecured.length: 0
paths./domains.get.summary: Retrieves a list of currently defined domains in APIs.json
  format
paths./domains.get.tags.length: 1
paths./domains.get.tags[0]: Domains
paths./domains/{owner}.get.operationId: getOwnerDomains
paths./domains/{owner}.get.parameters.length: 5
paths./domains/{owner}.get.parameters[0].description: API or Domaion owner identifier
paths./domains/{owner}.get.parameters[0].in: path
paths./domains/{owner}.get.parameters[0].name: owner
paths./domains/{owner}.get.parameters[0].required: true
paths./domains/{owner}.get.parameters[0].type: string
paths./domains/{owner}.get.parameters[1].default: 0
paths./domains/{owner}.get.parameters[1].description: page to return
paths./domains/{owner}.get.parameters[1].format: int32
paths./domains/{owner}.get.parameters[1].in: query
paths./domains/{owner}.get.parameters[1].name: page
paths./domains/{owner}.get.parameters[1].required: false
paths./domains/{owner}.get.parameters[1].type: integer
paths./domains/{owner}.get.parameters[2].default: 10
paths./domains/{owner}.get.parameters[2].description: number of results per page
paths./domains/{owner}.get.parameters[2].format: int32
paths./domains/{owner}.get.parameters[2].in: query
paths./domains/{owner}.get.parameters[2].name: limit
paths./domains/{owner}.get.parameters[2].required: false
paths./domains/{owner}.get.parameters[2].type: integer
paths./domains/{owner}.get.parameters[3].default: NAME
paths./domains/{owner}.get.parameters[3].description: |
  sort criteria or result set
  * NAME -
  * UPATED
  * CREATED
  * OWNER
paths./domains/{owner}.get.parameters[3].enum.length: 4
paths./domains/{owner}.get.parameters[3].enum[0]: NAME
paths./domains/{owner}.get.parameters[3].enum[1]: UPDATED
paths./domains/{owner}.get.parameters[3].enum[2]: CREATED
paths./domains/{owner}.get.parameters[3].enum[3]: OWNER
paths./domains/{owner}.get.parameters[3].in: query
paths./domains/{owner}.get.parameters[3].name: sort
paths./domains/{owner}.get.parameters[3].required: false
paths./domains/{owner}.get.parameters[3].type: string
paths./domains/{owner}.get.parameters[4].default: ASC
paths./domains/{owner}.get.parameters[4].description: sort order
paths./domains/{owner}.get.parameters[4].enum.length: 2
paths./domains/{owner}.get.parameters[4].enum[0]: ASC
paths./domains/{owner}.get.parameters[4].enum[1]: DESC
paths./domains/{owner}.get.parameters[4].in: query
paths./domains/{owner}.get.parameters[4].name: order
paths./domains/{owner}.get.parameters[4].required: false
paths./domains/{owner}.get.parameters[4].type: string
paths./domains/{owner}.get.responses.200.description: a list of domains in APIs.json
  format
paths./domains/{owner}.get.responses.200.schema.$ref: '#/definitions/ApisJson'
paths./domains/{owner}.get.security.length: 1
paths./domains/{owner}.get.security[0].TokenSecured.length: 0
paths./domains/{owner}.get.summary: Retrieves an APIs.json listing of all domains
  defined for this owner
paths./domains/{owner}.get.tags.length: 1
paths./domains/{owner}.get.tags[0]: Domains
paths./domains/{owner}/{domain}.delete.operationId: deleteDomain
paths./domains/{owner}/{domain}.delete.parameters.length: 3
paths./domains/{owner}/{domain}.delete.parameters[0].description: API or Domaion owner
  identifier
paths./domains/{owner}/{domain}.delete.parameters[0].in: path
paths./domains/{owner}/{domain}.delete.parameters[0].name: owner
paths./domains/{owner}/{domain}.delete.parameters[0].required: true
paths./domains/{owner}/{domain}.delete.parameters[0].type: string
paths./domains/{owner}/{domain}.delete.parameters[1].description: domain identifier
paths./domains/{owner}/{domain}.delete.parameters[1].in: path
paths./domains/{owner}/{domain}.delete.parameters[1].name: domain
paths./domains/{owner}/{domain}.delete.parameters[1].required: true
paths./domains/{owner}/{domain}.delete.parameters[1].type: string
paths./domains/{owner}/{domain}.delete.parameters[2].description: force update
paths./domains/{owner}/{domain}.delete.parameters[2].in: query
paths./domains/{owner}/{domain}.delete.parameters[2].name: force
paths./domains/{owner}/{domain}.delete.parameters[2].required: false
paths./domains/{owner}/{domain}.delete.parameters[2].type: boolean
paths./domains/{owner}/{domain}.delete.responses.200.description: the domain was successfully
  deleted
paths./domains/{owner}/{domain}.delete.responses.403.description: access denied
paths./domains/{owner}/{domain}.delete.responses.404.description: specified domain
  not found
paths./domains/{owner}/{domain}.delete.responses.409.description: the domain has published
  versions and can not be deleted
paths./domains/{owner}/{domain}.delete.responses.424.description: can't delete because
  there are some dependencies for domain
paths./domains/{owner}/{domain}.delete.responses.424.schema.$ref: '#/definitions/Page'
paths./domains/{owner}/{domain}.delete.security.length: 1
paths./domains/{owner}/{domain}.delete.security[0].TokenSecured.length: 0
paths./domains/{owner}/{domain}.delete.summary: Deletes the specified domain
paths./domains/{owner}/{domain}.delete.tags.length: 1
paths./domains/{owner}/{domain}.delete.tags[0]: Domains
paths./domains/{owner}/{domain}.get.operationId: getDomainVersions
paths./domains/{owner}/{domain}.get.parameters.length: 2
paths./domains/{owner}/{domain}.get.parameters[0].description: API or Domaion owner
  identifier
paths./domains/{owner}/{domain}.get.parameters[0].in: path
paths./domains/{owner}/{domain}.get.parameters[0].name: owner
paths./domains/{owner}/{domain}.get.parameters[0].required: true
paths./domains/{owner}/{domain}.get.parameters[0].type: string
paths./domains/{owner}/{domain}.get.parameters[1].description: domain identifier
paths./domains/{owner}/{domain}.get.parameters[1].in: path
paths./domains/{owner}/{domain}.get.parameters[1].name: domain
paths./domains/{owner}/{domain}.get.parameters[1].required: true
paths./domains/{owner}/{domain}.get.parameters[1].type: string
paths./domains/{owner}/{domain}.get.responses.200.description: a list of domain versions
  in APIs.json format
paths./domains/{owner}/{domain}.get.responses.200.schema.$ref: '#/definitions/ApisJson'
paths./domains/{owner}/{domain}.get.security.length: 1
paths./domains/{owner}/{domain}.get.security[0].TokenSecured.length: 0
paths./domains/{owner}/{domain}.get.summary: Retrieves an APIs.json listing for all
  domain versions for this owner and domain
paths./domains/{owner}/{domain}.get.tags.length: 1
paths./domains/{owner}/{domain}.get.tags[0]: Domains
paths./domains/{owner}/{domain}.post.consumes.length: 2
paths./domains/{owner}/{domain}.post.consumes[0]: application/json
paths./domains/{owner}/{domain}.post.consumes[1]: application/yaml
paths./domains/{owner}/{domain}.post.operationId: saveDomainDefinition
paths./domains/{owner}/{domain}.post.parameters.length: 6
paths./domains/{owner}/{domain}.post.parameters[0].description: API or Domaion owner
  identifier
paths./domains/{owner}/{domain}.post.parameters[0].in: path
paths./domains/{owner}/{domain}.post.parameters[0].name: owner
paths./domains/{owner}/{domain}.post.parameters[0].required: true
paths./domains/{owner}/{domain}.post.parameters[0].type: string
paths./domains/{owner}/{domain}.post.parameters[1].description: domain identifier
paths./domains/{owner}/{domain}.post.parameters[1].in: path
paths./domains/{owner}/{domain}.post.parameters[1].name: domain
paths./domains/{owner}/{domain}.post.parameters[1].required: true
paths./domains/{owner}/{domain}.post.parameters[1].type: string
paths./domains/{owner}/{domain}.post.parameters[2].default: false
paths./domains/{owner}/{domain}.post.parameters[2].description: Defines whether the
  API has to be private
paths./domains/{owner}/{domain}.post.parameters[2].in: query
paths./domains/{owner}/{domain}.post.parameters[2].name: isPrivate
paths./domains/{owner}/{domain}.post.parameters[2].required: false
paths./domains/{owner}/{domain}.post.parameters[2].type: boolean
paths./domains/{owner}/{domain}.post.parameters[3].description: domain version
paths./domains/{owner}/{domain}.post.parameters[3].in: query
paths./domains/{owner}/{domain}.post.parameters[3].name: version
paths./domains/{owner}/{domain}.post.parameters[3].required: true
paths./domains/{owner}/{domain}.post.parameters[3].type: string
paths./domains/{owner}/{domain}.post.parameters[4].description: the Swagger definition
  of this Domain
paths./domains/{owner}/{domain}.post.parameters[4].in: body
paths./domains/{owner}/{domain}.post.parameters[4].name: definition
paths./domains/{owner}/{domain}.post.parameters[4].required: false
paths./domains/{owner}/{domain}.post.parameters[4].schema.type: string
paths./domains/{owner}/{domain}.post.parameters[5].description: force update
paths./domains/{owner}/{domain}.post.parameters[5].in: query
paths./domains/{owner}/{domain}.post.parameters[5].name: force
paths./domains/{owner}/{domain}.post.parameters[5].required: false
paths./domains/{owner}/{domain}.post.parameters[5].type: boolean
paths./domains/{owner}/{domain}.post.responses.200.description: the domain was successfully
  saved
paths./domains/{owner}/{domain}.post.responses.201.description: new domain was successfully
  saved
paths./domains/{owner}/{domain}.post.responses.205.description: the domain was successfully
  saved and should be reloaded
paths./domains/{owner}/{domain}.post.responses.403.description: maximum number of
  domains reached
paths./domains/{owner}/{domain}.post.responses.409.description: can not overwrite
  a published domain version
paths./domains/{owner}/{domain}.post.responses.415.description: invalid content type
paths./domains/{owner}/{domain}.post.security.length: 1
paths./domains/{owner}/{domain}.post.security[0].TokenSecured.length: 0
paths./domains/{owner}/{domain}.post.summary: Saves the provided Swagger definition
  of a domain
paths./domains/{owner}/{domain}.post.tags.length: 1
paths./domains/{owner}/{domain}.post.tags[0]: Domains
paths./domains/{owner}/{domain}/{version}.delete.operationId: deleteDomainVersion
paths./domains/{owner}/{domain}/{version}.delete.parameters.length: 4
paths./domains/{owner}/{domain}/{version}.delete.parameters[0].description: API or
  Domaion owner identifier
paths./domains/{owner}/{domain}/{version}.delete.parameters[0].in: path
paths./domains/{owner}/{domain}/{version}.delete.parameters[0].name: owner
paths./domains/{owner}/{domain}/{version}.delete.parameters[0].required: true
paths./domains/{owner}/{domain}/{version}.delete.parameters[0].type: string
paths./domains/{owner}/{domain}/{version}.delete.parameters[1].description: domain
  identifier
paths./domains/{owner}/{domain}/{version}.delete.parameters[1].in: path
paths./domains/{owner}/{domain}/{version}.delete.parameters[1].name: domain
paths./domains/{owner}/{domain}/{version}.delete.parameters[1].required: true
paths./domains/{owner}/{domain}/{version}.delete.parameters[1].type: string
paths./domains/{owner}/{domain}/{version}.delete.parameters[2].description: version
  identifier
paths./domains/{owner}/{domain}/{version}.delete.parameters[2].in: path
paths./domains/{owner}/{domain}/{version}.delete.parameters[2].name: version
paths./domains/{owner}/{domain}/{version}.delete.parameters[2].required: true
paths./domains/{owner}/{domain}/{version}.delete.parameters[2].type: string
paths./domains/{owner}/{domain}/{version}.delete.parameters[3].description: force
  update
paths./domains/{owner}/{domain}/{version}.delete.parameters[3].in: query
paths./domains/{owner}/{domain}/{version}.delete.parameters[3].name: force
paths./domains/{owner}/{domain}/{version}.delete.parameters[3].required: false
paths./domains/{owner}/{domain}/{version}.delete.parameters[3].type: boolean
paths./domains/{owner}/{domain}/{version}.delete.responses.200.description: the domain
  version was successfully deleted
paths./domains/{owner}/{domain}/{version}.delete.responses.403.description: access
  denied
paths./domains/{owner}/{domain}/{version}.delete.responses.404.description: specified
  domain not found
paths./domains/{owner}/{domain}/{version}.delete.responses.409.description: the domain
  version is published and can not be deleted or it is the only version of this API
paths./domains/{owner}/{domain}/{version}.delete.responses.424.description: can't
  delete because there are some dependencies for domain
paths./domains/{owner}/{domain}/{version}.delete.responses.424.schema.$ref: '#/definitions/Page'
paths./domains/{owner}/{domain}/{version}.delete.security.length: 1
paths./domains/{owner}/{domain}/{version}.delete.security[0].TokenSecured.length: 0
paths./domains/{owner}/{domain}/{version}.delete.summary: Deletes a particular version
  of the specified domain
paths./domains/{owner}/{domain}/{version}.delete.tags.length: 1
paths./domains/{owner}/{domain}/{version}.delete.tags[0]: Domains
paths./domains/{owner}/{domain}/{version}.get.operationId: getDomainDefinition
paths./domains/{owner}/{domain}/{version}.get.parameters.length: 3
paths./domains/{owner}/{domain}/{version}.get.parameters[0].description: API or Domaion
  owner identifier
paths./domains/{owner}/{domain}/{version}.get.parameters[0].in: path
paths./domains/{owner}/{domain}/{version}.get.parameters[0].name: owner
paths./domains/{owner}/{domain}/{version}.get.parameters[0].required: true
paths./domains/{owner}/{domain}/{version}.get.parameters[0].type: string
paths./domains/{owner}/{domain}/{version}.get.parameters[1].description: domain identifier
paths./domains/{owner}/{domain}/{version}.get.parameters[1].in: path
paths./domains/{owner}/{domain}/{version}.get.parameters[1].name: domain
paths./domains/{owner}/{domain}/{version}.get.parameters[1].required: true
paths./domains/{owner}/{domain}/{version}.get.parameters[1].type: string
paths./domains/{owner}/{domain}/{version}.get.parameters[2].description: version identifier
paths./domains/{owner}/{domain}/{version}.get.parameters[2].in: path
paths./domains/{owner}/{domain}/{version}.get.parameters[2].name: version
paths./domains/{owner}/{domain}/{version}.get.parameters[2].required: true
paths./domains/{owner}/{domain}/{version}.get.parameters[2].type: string
paths./domains/{owner}/{domain}/{version}.get.produces.length: 2
paths./domains/{owner}/{domain}/{version}.get.produces[0]: application/json
paths./domains/{owner}/{domain}/{version}.get.produces[1]: application/yaml
paths./domains/{owner}/{domain}/{version}.get.responses.200.description: the Swagger
  domain in requested format
paths./domains/{owner}/{domain}/{version}.get.responses.200.schema.type: object
paths./domains/{owner}/{domain}/{version}.get.responses.404.description: specified
  domain not found
paths./domains/{owner}/{domain}/{version}.get.security.length: 1
paths./domains/{owner}/{domain}/{version}.get.security[0].TokenSecured.length: 0
paths./domains/{owner}/{domain}/{version}.get.summary: Retrieves the Swagger definition
  for the specified domain and version
paths./domains/{owner}/{domain}/{version}.get.tags.length: 1
paths./domains/{owner}/{domain}/{version}.get.tags[0]: Domains
paths./domains/{owner}/{domain}/{version}/domain.json.get.operationId: getDomainJsonDefinition
paths./domains/{owner}/{domain}/{version}/domain.json.get.parameters.length: 3
paths./domains/{owner}/{domain}/{version}/domain.json.get.parameters[0].description: API
  or Domaion owner identifier
paths./domains/{owner}/{domain}/{version}/domain.json.get.parameters[0].in: path
paths./domains/{owner}/{domain}/{version}/domain.json.get.parameters[0].name: owner
paths./domains/{owner}/{domain}/{version}/domain.json.get.parameters[0].required: true
paths./domains/{owner}/{domain}/{version}/domain.json.get.parameters[0].type: string
paths./domains/{owner}/{domain}/{version}/domain.json.get.parameters[1].description: domain
  identifier
paths./domains/{owner}/{domain}/{version}/domain.json.get.parameters[1].in: path
paths./domains/{owner}/{domain}/{version}/domain.json.get.parameters[1].name: domain
paths./domains/{owner}/{domain}/{version}/domain.json.get.parameters[1].required: true
paths./domains/{owner}/{domain}/{version}/domain.json.get.parameters[1].type: string
paths./domains/{owner}/{domain}/{version}/domain.json.get.parameters[2].description: version
  identifier
paths./domains/{owner}/{domain}/{version}/domain.json.get.parameters[2].in: path
paths./domains/{owner}/{domain}/{version}/domain.json.get.parameters[2].name: version
paths./domains/{owner}/{domain}/{version}/domain.json.get.parameters[2].required: true
paths./domains/{owner}/{domain}/{version}/domain.json.get.parameters[2].type: string
paths./domains/{owner}/{domain}/{version}/domain.json.get.responses.200.description: definition
  in JSON format
paths./domains/{owner}/{domain}/{version}/domain.json.get.responses.200.schema.type: object
paths./domains/{owner}/{domain}/{version}/domain.json.get.responses.404.description: specified
  domain not found
paths./domains/{owner}/{domain}/{version}/domain.json.get.security.length: 1
paths./domains/{owner}/{domain}/{version}/domain.json.get.security[0].TokenSecured.length: 0
paths./domains/{owner}/{domain}/{version}/domain.json.get.summary: Retrieves the definition
  for the specified domain and version in JSON format
paths./domains/{owner}/{domain}/{version}/domain.json.get.tags.length: 1
paths./domains/{owner}/{domain}/{version}/domain.json.get.tags[0]: Domains
paths./domains/{owner}/{domain}/{version}/domain.yaml.get.operationId: getDomainYamlDefinition
paths./domains/{owner}/{domain}/{version}/domain.yaml.get.parameters.length: 3
paths./domains/{owner}/{domain}/{version}/domain.yaml.get.parameters[0].description: API
  or Domaion owner identifier
paths./domains/{owner}/{domain}/{version}/domain.yaml.get.parameters[0].in: path
paths./domains/{owner}/{domain}/{version}/domain.yaml.get.parameters[0].name: owner
paths./domains/{owner}/{domain}/{version}/domain.yaml.get.parameters[0].required: true
paths./domains/{owner}/{domain}/{version}/domain.yaml.get.parameters[0].type: string
paths./domains/{owner}/{domain}/{version}/domain.yaml.get.parameters[1].description: domain
  identifier
paths./domains/{owner}/{domain}/{version}/domain.yaml.get.parameters[1].in: path
paths./domains/{owner}/{domain}/{version}/domain.yaml.get.parameters[1].name: domain
paths./domains/{owner}/{domain}/{version}/domain.yaml.get.parameters[1].required: true
paths./domains/{owner}/{domain}/{version}/domain.yaml.get.parameters[1].type: string
paths./domains/{owner}/{domain}/{version}/domain.yaml.get.parameters[2].description: version
  identifier
paths./domains/{owner}/{domain}/{version}/domain.yaml.get.parameters[2].in: path
paths./domains/{owner}/{domain}/{version}/domain.yaml.get.parameters[2].name: version
paths./domains/{owner}/{domain}/{version}/domain.yaml.get.parameters[2].required: true
paths./domains/{owner}/{domain}/{version}/domain.yaml.get.parameters[2].type: string
paths./domains/{owner}/{domain}/{version}/domain.yaml.get.produces.length: 1
paths./domains/{owner}/{domain}/{version}/domain.yaml.get.produces[0]: application/yaml
paths./domains/{owner}/{domain}/{version}/domain.yaml.get.responses.200.description: definition
  in YAML format
paths./domains/{owner}/{domain}/{version}/domain.yaml.get.responses.200.schema.type: object
paths./domains/{owner}/{domain}/{version}/domain.yaml.get.responses.404.description: specified
  domain not found
paths./domains/{owner}/{domain}/{version}/domain.yaml.get.security.length: 1
paths./domains/{owner}/{domain}/{version}/domain.yaml.get.security[0].TokenSecured.length: 0
paths./domains/{owner}/{domain}/{version}/domain.yaml.get.summary: Retrieves the definition
  for the specified domain and version in YAML format
paths./domains/{owner}/{domain}/{version}/domain.yaml.get.tags.length: 1
paths./domains/{owner}/{domain}/{version}/domain.yaml.get.tags[0]: Domains
paths./specs.get.description: ""
paths./specs.get.operationId: searchApisAndDomains
paths./specs.get.parameters.length: 9
paths./specs.get.parameters[0].default: ANY
paths./specs.get.parameters[0].description: |
  Type of Swagger specs to search
  * API - APIs only
  * DOMAIN - Domains only
  * ANY - Both APIs and Domains
paths./specs.get.parameters[0].enum.length: 3
paths./specs.get.parameters[0].enum[0]: API
paths./specs.get.parameters[0].enum[1]: DOMAIN
paths./specs.get.parameters[0].enum[2]: ANY
paths./specs.get.parameters[0].in: query
paths./specs.get.parameters[0].name: specType
paths./specs.get.parameters[0].required: false
paths./specs.get.parameters[0].type: string
paths./specs.get.parameters[1].default: ANY
paths./specs.get.parameters[1].description: |
  The visibility of a spec in SwaggerHub
  * PUBLIC - can be viewed by anyone
  * PRIVATE - can only be viewed by you or your Org and those that you are collaborating with or have shared it with
  * ANY - either PUBLIC or PRIVATE
paths./specs.get.parameters[1].enum.length: 3
paths./specs.get.parameters[1].enum[0]: PUBLIC
paths./specs.get.parameters[1].enum[1]: PRIVATE
paths./specs.get.parameters[1].enum[2]: ANY
paths./specs.get.parameters[1].in: query
paths./specs.get.parameters[1].name: visibility
paths./specs.get.parameters[1].required: false
paths./specs.get.parameters[1].type: string
paths./specs.get.parameters[2].default: ALL
paths./specs.get.parameters[2].description: |
  matches against published state of the spec
  * UNPUBLISHED - spec is a draft, a work in progress
  * PUBLISHED - spec is a stable version ready for consuming from client applications
  * ANY - either PUBLISHED or UNPUBLISHED
paths./specs.get.parameters[2].enum.length: 3
paths./specs.get.parameters[2].enum[0]: ALL
paths./specs.get.parameters[2].enum[1]: PUBLISHED
paths./specs.get.parameters[2].enum[2]: UNPUBLISHED
paths./specs.get.parameters[2].in: query
paths./specs.get.parameters[2].name: state
paths./specs.get.parameters[2].required: false
paths./specs.get.parameters[2].type: string
paths./specs.get.parameters[3].description: API or Domaion owner identifier. Can be
  username or Organization name
paths./specs.get.parameters[3].in: query
paths./specs.get.parameters[3].name: owner
paths./specs.get.parameters[3].required: false
paths./specs.get.parameters[3].type: string
paths./specs.get.parameters[4].description: free text query to match
paths./specs.get.parameters[4].in: query
paths./specs.get.parameters[4].name: query
paths./specs.get.parameters[4].required: false
paths./specs.get.parameters[4].type: string
paths./specs.get.parameters[5].default: 0
paths./specs.get.parameters[5].description: page to return
paths./specs.get.parameters[5].format: int32
paths./specs.get.parameters[5].in: query
paths./specs.get.parameters[5].name: page
paths./specs.get.parameters[5].required: false
paths./specs.get.parameters[5].type: integer
paths./specs.get.parameters[6].default: 10
paths./specs.get.parameters[6].description: number of results per page
paths./specs.get.parameters[6].format: int32
paths./specs.get.parameters[6].in: query
paths./specs.get.parameters[6].name: limit
paths./specs.get.parameters[6].required: false
paths./specs.get.parameters[6].type: integer
paths./specs.get.parameters[7].default: NAME
paths./specs.get.parameters[7].description: |
  sort criteria or result set
  * NAME -
  * UPATED
  * CREATED
  * OWNER
paths./specs.get.parameters[7].enum.length: 4
paths./specs.get.parameters[7].enum[0]: NAME
paths./specs.get.parameters[7].enum[1]: UPDATED
paths./specs.get.parameters[7].enum[2]: CREATED
paths./specs.get.parameters[7].enum[3]: OWNER
paths./specs.get.parameters[7].in: query
paths./specs.get.parameters[7].name: sort
paths./specs.get.parameters[7].required: false
paths./specs.get.parameters[7].type: string
paths./specs.get.parameters[8].default: ASC
paths./specs.get.parameters[8].description: sort order
paths./specs.get.parameters[8].enum.length: 2
paths./specs.get.parameters[8].enum[0]: ASC
paths./specs.get.parameters[8].enum[1]: DESC
paths./specs.get.parameters[8].in: query
paths./specs.get.parameters[8].name: order
paths./specs.get.parameters[8].required: false
paths./specs.get.parameters[8].type: string
paths./specs.get.responses.200.description: a list of APIs and Domains in APIs.json
  format
paths./specs.get.responses.200.schema.$ref: '#/definitions/ApisJson'
paths./specs.get.security.length: 1
paths./specs.get.security[0].TokenSecured.length: 0
paths./specs.get.summary: Retrieves a list of currently defined APIs and Domains in
  APIs.json format
paths./specs.get.tags.length: 2
paths./specs.get.tags[0]: APIs
paths./specs.get.tags[1]: Domains
produces.length: 1
produces[0]: application/json
schemes.length: 1
schemes[0]: https
securityDefinitions.TokenSecured.in: header
securityDefinitions.TokenSecured.name: Authorization
securityDefinitions.TokenSecured.type: apiKey
swagger: "2.0"
tags.length: 2
tags[0].description: Operations for APIs
tags[0].name: APIs
tags[1].description: Operations for Domains
tags[1].name: Domains
