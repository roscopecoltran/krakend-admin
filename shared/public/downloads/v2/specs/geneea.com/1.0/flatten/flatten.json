{
	"basePath": "/",
	"consumes.length": 1,
	"consumes[0]": "application/json",
	"definitions.EntitiesResponse.description": "Response for the named-entity recognition",
	"definitions.EntitiesResponse.properties.entities.description": "Found named entities in the document",
	"definitions.EntitiesResponse.properties.entities.items.$ref": "#/definitions/Entity",
	"definitions.EntitiesResponse.properties.entities.type": "array",
	"definitions.EntitiesResponse.properties.language.description": "The used language of the document",
	"definitions.EntitiesResponse.properties.language.type": "string",
	"definitions.EntitiesResponse.properties.text.description": "The raw text of the document which has been analysed",
	"definitions.EntitiesResponse.properties.text.type": "string",
	"definitions.EntitiesResponse.required.length": 2,
	"definitions.EntitiesResponse.required[0]": "entities",
	"definitions.EntitiesResponse.required[1]": "language",
	"definitions.Entity.description": "The named entity",
	"definitions.Entity.properties.entity.description": "Disambiguated and standardized form of the entity",
	"definitions.Entity.properties.entity.type": "string",
	"definitions.Entity.properties.links.description": "Disambiguation links for the entity, e.g. its DBpedia page",
	"definitions.Entity.properties.links.type": "object",
	"definitions.Entity.properties.sentiment.description": "Detected sentiment of the entity (value from -1.0 to 1.0)",
	"definitions.Entity.properties.sentiment.format": "double",
	"definitions.Entity.properties.sentiment.type": "number",
	"definitions.Entity.properties.textOffset.description": "Character offset in the text (starting from 0)",
	"definitions.Entity.properties.textOffset.format": "int32",
	"definitions.Entity.properties.textOffset.type": "integer",
	"definitions.Entity.properties.type.description": "Detected type of the entity",
	"definitions.Entity.properties.type.type": "string",
	"definitions.Entity.required.length": 4,
	"definitions.Entity.required[0]": "entity",
	"definitions.Entity.required[1]": "links",
	"definitions.Entity.required[2]": "textOffset",
	"definitions.Entity.required[3]": "type",
	"definitions.Entry«string,long».properties.key.format": "int64",
	"definitions.Entry«string,long».properties.key.type": "integer",
	"definitions.Information_about_a_user_account..properties.remainingQuotas.description": "Remaining quotas for the user account.",
	"definitions.Information_about_a_user_account..properties.remainingQuotas.items.$ref": "#/definitions/Entry«string,long»",
	"definitions.Information_about_a_user_account..properties.remainingQuotas.type": "array",
	"definitions.Information_about_a_user_account..properties.type.description": "Type (plan) of the user account.",
	"definitions.Information_about_a_user_account..properties.type.type": "string",
	"definitions.Label.description": "The topic label",
	"definitions.Label.properties.confidence.description": "Confidence (probability) of this label",
	"definitions.Label.properties.confidence.format": "double",
	"definitions.Label.properties.confidence.type": "number",
	"definitions.Label.properties.label.description": "The value of this label",
	"definitions.Label.properties.label.type": "string",
	"definitions.Label.required.length": 2,
	"definitions.Label.required[0]": "confidence",
	"definitions.Label.required[1]": "label",
	"definitions.LemmatizeResponse.description": "Response for the lemmatization",
	"definitions.LemmatizeResponse.properties.language.description": "The used language of the document",
	"definitions.LemmatizeResponse.properties.language.type": "string",
	"definitions.LemmatizeResponse.properties.lemmatizedText.description": "Lemmatized text of the document, individual tokens are separated by a space and sentences are separated by a new-line character",
	"definitions.LemmatizeResponse.properties.lemmatizedText.type": "string",
	"definitions.LemmatizeResponse.properties.text.description": "The raw text of the document which has been analysed",
	"definitions.LemmatizeResponse.properties.text.type": "string",
	"definitions.LemmatizeResponse.required.length": 2,
	"definitions.LemmatizeResponse.required[0]": "language",
	"definitions.LemmatizeResponse.required[1]": "lemmatizedText",
	"definitions.Request.description": "Request encapsulation for simple API version 1",
	"definitions.Request.properties.extractor.description": "[optional] Text extractor to be used when analyzing HTML document",
	"definitions.Request.properties.extractor.enum.length": 3,
	"definitions.Request.properties.extractor.enum[0]": "default",
	"definitions.Request.properties.extractor.enum[1]": "article",
	"definitions.Request.properties.extractor.enum[2]": "keep-everything",
	"definitions.Request.properties.extractor.type": "string",
	"definitions.Request.properties.language.description": "[optional] The language of the document, auto-detection will be used if omitted",
	"definitions.Request.properties.language.type": "string",
	"definitions.Request.properties.options.description": "[optional] Additional options for the internal modules (key-value pairs)",
	"definitions.Request.properties.options.type": "object",
	"definitions.Request.properties.returnTextInfo.description": "[optional] Indicates whether to return the source text within the response object",
	"definitions.Request.properties.returnTextInfo.type": "boolean",
	"definitions.Request.properties.text.description": "The raw text to be analyzed, mutually exclusive with the 'url' parameter",
	"definitions.Request.properties.text.type": "string",
	"definitions.Request.properties.url.description": "URL of a document to be analysed, mutually exclusive with the 'text' parameter",
	"definitions.Request.properties.url.type": "string",
	"definitions.Response_for_the_text_correction.properties.corrected.type": "boolean",
	"definitions.Response_for_the_text_correction.properties.correctedText.description": "Corrected text of the document",
	"definitions.Response_for_the_text_correction.properties.correctedText.type": "string",
	"definitions.Response_for_the_text_correction.properties.diacritized.type": "boolean",
	"definitions.Response_for_the_text_correction.properties.language.description": "The used language of the document",
	"definitions.Response_for_the_text_correction.properties.language.type": "string",
	"definitions.Response_for_the_text_correction.properties.text.description": "The raw text of the document which has been analysed",
	"definitions.Response_for_the_text_correction.properties.text.type": "string",
	"definitions.Response_for_the_text_correction.required.length": 2,
	"definitions.Response_for_the_text_correction.required[0]": "correctedText",
	"definitions.Response_for_the_text_correction.required[1]": "language",
	"definitions.SentimentResponse.description": "Response for the sentiment analysis",
	"definitions.SentimentResponse.properties.language.description": "The used language of the document",
	"definitions.SentimentResponse.properties.language.type": "string",
	"definitions.SentimentResponse.properties.sentiment.description": "Detected sentiment of the document (value from -1.0 to 1.0)",
	"definitions.SentimentResponse.properties.sentiment.format": "double",
	"definitions.SentimentResponse.properties.sentiment.type": "number",
	"definitions.SentimentResponse.properties.text.description": "The raw text of the document which has been analysed",
	"definitions.SentimentResponse.properties.text.type": "string",
	"definitions.SentimentResponse.required.length": 2,
	"definitions.SentimentResponse.required[0]": "language",
	"definitions.SentimentResponse.required[1]": "sentiment",
	"definitions.TopicResponse.description": "Response for the topic detection",
	"definitions.TopicResponse.properties.confidence.description": "Confidence for the detected topic",
	"definitions.TopicResponse.properties.confidence.format": "double",
	"definitions.TopicResponse.properties.confidence.type": "number",
	"definitions.TopicResponse.properties.labels.description": "Probabilistic distribution over possible topic labels",
	"definitions.TopicResponse.properties.labels.items.$ref": "#/definitions/Label",
	"definitions.TopicResponse.properties.labels.type": "array",
	"definitions.TopicResponse.properties.language.description": "The used language of the document",
	"definitions.TopicResponse.properties.language.type": "string",
	"definitions.TopicResponse.properties.text.description": "The raw text of the document which has been analysed",
	"definitions.TopicResponse.properties.text.type": "string",
	"definitions.TopicResponse.properties.topic.description": "Detected topic of the document",
	"definitions.TopicResponse.properties.topic.type": "string",
	"definitions.TopicResponse.required.length": 4,
	"definitions.TopicResponse.required[0]": "confidence",
	"definitions.TopicResponse.required[1]": "labels",
	"definitions.TopicResponse.required[2]": "language",
	"definitions.TopicResponse.required[3]": "topic",
	"host": "api.geneea.com",
	"info.description": "\u003cdiv class=\"api-description\"\u003e\n    \u003ch2\u003eAuthentication\u003c/h2\u003e\n    \u003cp\u003eFor all calls, supply your API key. \u003ca href=\"https://www.geneea.com/pricing\"\u003eSign up to \u003cem\u003eobtain the key\u003c/em\u003e\u003c/a\u003e.\u003c/p\u003e\n    \u003cp\u003e\n        Our API supports both \u003cem\u003eunencrypted (HTTP)\u003c/em\u003e and \u003cem\u003eencrypted (HTTPS)\u003c/em\u003e protocols.\n        However, for security reasons, we strongly encourage using only the encrypted version.\n    \u003c/p\u003e\n    \u003cp\u003eThe API key should be supplied as either a request parameter \u003ccode\u003euser_key\u003c/code\u003e or in \u003ccode\u003eAuthorization\u003c/code\u003e header.\u003c/p\u003e\n    \u003cpre\u003e\u003ccode\u003eAuthorization: user_key \u0026lt;YOUR_API_KEY\u0026gt;\u003c/code\u003e\u003c/pre\u003e\n\n    \u003ch2\u003eAPI operations\u003c/h2\u003e\n    \u003cp\u003e\n        All API operations can perform analysis on supplied raw text or on text extracted from a given URL.\n        Optionally, one can supply additional information which can make the result more precise. An example\n        of such information would be the language of text or a particular text extractor for URL resources.\n    \u003c/p\u003e\n    \u003cp\u003eThe supported types of analyses are:\u003c/p\u003e\n    \u003cul\u003e\n        \u003cli\u003e\u003cstrong\u003elemmatization\u003c/strong\u003e \u0026longrightarrow;\n            Finds out lemmata (basic forms) of all the words in the document.\n        \u003c/li\u003e\n        \u003cli\u003e\u003cstrong\u003ecorrection\u003c/strong\u003e \u0026longrightarrow;\n            Performs correction (diacritization) on all the words in the document.\n        \u003c/li\u003e\n        \u003cli\u003e\u003cstrong\u003etopic detection\u003c/strong\u003e \u0026longrightarrow;\n            Determines a topic of the document, e.g. finance or sports.\n        \u003c/li\u003e\n        \u003cli\u003e\u003cstrong\u003esentiment analysis\u003c/strong\u003e \u0026longrightarrow;\n            Determines a sentiment of the document, i.e. how positive or negative the document is.\n        \u003c/li\u003e\n        \u003cli\u003e\u003cstrong\u003enamed entity recognition\u003c/strong\u003e \u0026longrightarrow;\n            Finds named entities (like person, location, date etc.) mentioned the the document.\n        \u003c/li\u003e\n    \u003c/ul\u003e\n\n    \u003ch2\u003eEncoding\u003c/h2\u003e\n    \u003cp\u003eThe supplied text is expected to be in UTF-8 encoding, this is especially important for non-english texts.\u003c/p\u003e\n\n    \u003ch2\u003eReturned values\u003c/h2\u003e\n    \u003cp\u003eThe API calls always return objects in serialized JSON format in UTF-8 encoding.\u003c/p\u003e\n    \u003cp\u003e\n        If any error occurs, the HTTP response code will be in the range \u003ccode\u003e4xx\u003c/code\u003e (client-side error) or\n        \u003ccode\u003e5xx\u003c/code\u003e (server-side error). In this situation, the body of the response will contain information\n        about the error in JSON format, with \u003ccode\u003eexception\u003c/code\u003e and \u003ccode\u003emessage\u003c/code\u003e values.\n    \u003c/p\u003e\n\n    \u003ch2\u003eURL limitations\u003c/h2\u003e\n    \u003cp\u003e\n        All the requests are semantically \u003ccode\u003eGET\u003c/code\u003e. However, for longer texts, you may run into issues\n        with URL length limit. Therefore, it's possible to always issue a \u003ccode\u003ePOST\u003c/code\u003e request with all\n        the parameters encoded as a JSON in the request body.\n    \u003c/p\u003e\n    \u003cp\u003eExample:\u003c/p\u003e\n    \u003cpre\u003e\u003ccode\u003e\n        POST /s1/sentiment\n        Content-Type: application/json\n\n        {\"text\":\"There is no harm in being sometimes wrong - especially if one is promptly found out.\"}\n    \u003c/code\u003e\u003c/pre\u003e\n    \u003cp\u003eThis is equivalent to \u003ccode\u003eGET /s1/sentiment?text=There%20is%20no%20harm...\u003c/code\u003e\u003c/p\u003e\n\n    \u003ch2\u003eRequest limitations\u003c/h2\u003e\n    \u003cp\u003e\n        The API has other limitations concerning the size of the HTTP requests. The maximum allowed size of any\n        POST request body is \u003cem\u003e512 KiB\u003c/em\u003e. For request with a URL resource, the maximum allowed number of\n        extracted characters from each such resource is \u003cem\u003e100,000\u003c/em\u003e.\n    \u003c/p\u003e\n\n    \u003ch2\u003eTerms of Service\u003c/h2\u003e\n    \u003cp\u003e\n        By using the API, you agree to our\n        \u003ca href=\"https://www.geneea.com/terms.html\" target=\"_blank\"\u003eTerms of Service Agreement\u003c/a\u003e.\n    \u003c/p\u003e\n\n    \u003ch2\u003eMore information\u003c/h2\u003e\n    \u003cp\u003e\n        \u003ca href=\"https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation\" target=\"_blank\"\u003e\n        The Interpretor Public Documentation\n        \u003c/a\u003e\n    \u003c/p\u003e\n\u003c/div\u003e\n",
	"info.title": "Geneea Natural Language Processing",
	"info.version": "1.0",
	"info.x-apisguru-categories.length": 1,
	"info.x-apisguru-categories[0]": "text",
	"info.x-logo.url": "https://api.apis.guru/v2/cache/logo/http_www.geneea.com_img_geneea-logo.png",
	"info.x-origin.length": 1,
	"info.x-origin[0].converter.url": "https://github.com/lucybot/api-spec-converter",
	"info.x-origin[0].converter.version": "2.5.0",
	"info.x-origin[0].format": "swagger",
	"info.x-origin[0].url": "https://api.geneea.com/api-docs?group=s1",
	"info.x-origin[0].version": "1.2",
	"info.x-preferred": true,
	"info.x-providerName": "geneea.com",
	"paths./account.get.deprecated": false,
	"paths./account.get.description": "getInfo",
	"paths./account.get.operationId": "getInfo",
	"paths./account.get.responses.200.description": "OK",
	"paths./account.get.responses.200.schema.$ref": "#/definitions/Information_about_a_user_account.",
	"paths./account.get.responses.401.description": "Unauthorized",
	"paths./account.get.responses.403.description": "Forbidden",
	"paths./account.get.responses.404.description": "Not Found",
	"paths./account.get.summary": "Information about current user account",
	"paths./account.get.tags.length": 1,
	"paths./account.get.tags[0]": "account",
	"paths./s1/correction.get.deprecated": false,
	"paths./s1/correction.get.description": "\u003cbr/\u003e\u003cstrong\u003ePossible options:\u003c/strong\u003e\u003cp class=\"markdown\"\u003eAn optional parameter \u003ccode\u003ediacritize\u003c/code\u003e with values \u003ccode\u003eyes\u003c/code\u003e, \u003ccode\u003eno\u003c/code\u003e or \u003ccode\u003eauto\u003c/code\u003e indicate whether the text diacritization will be performed. The default value is \u003ccode\u003eauto\u003c/code\u003e.\u003c/p\u003e",
	"paths./s1/correction.get.operationId": "correctionGet",
	"paths./s1/correction.get.parameters.length": 5,
	"paths./s1/correction.get.parameters[0].description": "raw document text",
	"paths./s1/correction.get.parameters[0].in": "query",
	"paths./s1/correction.get.parameters[0].name": "text",
	"paths./s1/correction.get.parameters[0].required": false,
	"paths./s1/correction.get.parameters[0].type": "string",
	"paths./s1/correction.get.parameters[1].description": "document URL",
	"paths./s1/correction.get.parameters[1].in": "query",
	"paths./s1/correction.get.parameters[1].name": "url",
	"paths./s1/correction.get.parameters[1].required": false,
	"paths./s1/correction.get.parameters[1].type": "string",
	"paths./s1/correction.get.parameters[2].description": "document extractor",
	"paths./s1/correction.get.parameters[2].enum.length": 3,
	"paths./s1/correction.get.parameters[2].enum[0]": "default",
	"paths./s1/correction.get.parameters[2].enum[1]": "article",
	"paths./s1/correction.get.parameters[2].enum[2]": "keep-everything",
	"paths./s1/correction.get.parameters[2].in": "query",
	"paths./s1/correction.get.parameters[2].name": "extractor",
	"paths./s1/correction.get.parameters[2].required": false,
	"paths./s1/correction.get.parameters[2].type": "string",
	"paths./s1/correction.get.parameters[3].description": "document language",
	"paths./s1/correction.get.parameters[3].in": "query",
	"paths./s1/correction.get.parameters[3].name": "language",
	"paths./s1/correction.get.parameters[3].required": false,
	"paths./s1/correction.get.parameters[3].type": "string",
	"paths./s1/correction.get.parameters[4].in": "query",
	"paths./s1/correction.get.parameters[4].name": "returnTextInfo",
	"paths./s1/correction.get.parameters[4].required": false,
	"paths./s1/correction.get.parameters[4].type": "boolean",
	"paths./s1/correction.get.responses.200.description": "OK",
	"paths./s1/correction.get.responses.200.schema.$ref": "#/definitions/Response_for_the_text_correction",
	"paths./s1/correction.get.responses.401.description": "Unauthorized",
	"paths./s1/correction.get.responses.403.description": "Forbidden",
	"paths./s1/correction.get.responses.404.description": "Not Found",
	"paths./s1/correction.get.summary": "Performs text correction (diacritization) on the given document",
	"paths./s1/correction.get.tags.length": 1,
	"paths./s1/correction.get.tags[0]": "geneea-api-s1",
	"paths./s1/correction.post.deprecated": false,
	"paths./s1/correction.post.description": "\u003cstrong\u003eNotes:\u003c/strong\u003e\u003cbr/\u003eValid JSON cannot contain newline characters. These have to be escaped. (See also \u003ca href=\"https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation#TheInterpretorAPIPublicDocumentation-Interactiveonlinedocumentation\" target=\"_blank\"\u003eInterpretor documentation\u003c/a\u003e)\u003cbr/\u003eFields \u003ccode\u003etext\u003c/code\u003e and \u003ccode\u003eurl\u003c/code\u003e are mutually exclusive.\u003cbr/\u003e\u003cstrong\u003eExamples:\u003c/strong\u003e\u003cpre\u003e\u003ccode\u003e{\"text\": \"Hello world!\"}\u003c/code\u003e\u003c/pre\u003e\u003cpre\u003e\u003ccode\u003e{\"url\": \"https://en.wikipedia.org/wiki/Pyrrhuloxia\"}\u003c/code\u003e\u003c/pre\u003e\u003cbr/\u003e\u003cstrong\u003ePossible options:\u003c/strong\u003e\u003cp class=\"markdown\"\u003eAn optional parameter \u003ccode\u003ediacritize\u003c/code\u003e with values \u003ccode\u003eyes\u003c/code\u003e, \u003ccode\u003eno\u003c/code\u003e or \u003ccode\u003eauto\u003c/code\u003e indicate whether the text diacritization will be performed. The default value is \u003ccode\u003eauto\u003c/code\u003e.\u003c/p\u003e",
	"paths./s1/correction.post.operationId": "correctionPost",
	"paths./s1/correction.post.parameters.length": 1,
	"paths./s1/correction.post.parameters[0].description": "request",
	"paths./s1/correction.post.parameters[0].in": "body",
	"paths./s1/correction.post.parameters[0].name": "body",
	"paths./s1/correction.post.parameters[0].required": false,
	"paths./s1/correction.post.parameters[0].schema.$ref": "#/definitions/Request",
	"paths./s1/correction.post.responses.200.description": "Description was not specified",
	"paths./s1/correction.post.responses.200.schema.$ref": "#/definitions/Response_for_the_text_correction",
	"paths./s1/correction.post.responses.201.description": "Created",
	"paths./s1/correction.post.responses.401.description": "Unauthorized",
	"paths./s1/correction.post.responses.403.description": "Forbidden",
	"paths./s1/correction.post.responses.404.description": "Not Found",
	"paths./s1/correction.post.summary": "Performs text correction (diacritization) on the given document",
	"paths./s1/correction.post.tags.length": 1,
	"paths./s1/correction.post.tags[0]": "geneea-api-s1",
	"paths./s1/entities.get.deprecated": false,
	"paths./s1/entities.get.description": "entitiesGet",
	"paths./s1/entities.get.operationId": "entitiesGet",
	"paths./s1/entities.get.parameters.length": 5,
	"paths./s1/entities.get.parameters[0].description": "raw document text",
	"paths./s1/entities.get.parameters[0].in": "query",
	"paths./s1/entities.get.parameters[0].name": "text",
	"paths./s1/entities.get.parameters[0].required": false,
	"paths./s1/entities.get.parameters[0].type": "string",
	"paths./s1/entities.get.parameters[1].description": "document URL",
	"paths./s1/entities.get.parameters[1].in": "query",
	"paths./s1/entities.get.parameters[1].name": "url",
	"paths./s1/entities.get.parameters[1].required": false,
	"paths./s1/entities.get.parameters[1].type": "string",
	"paths./s1/entities.get.parameters[2].description": "document extractor",
	"paths./s1/entities.get.parameters[2].enum.length": 3,
	"paths./s1/entities.get.parameters[2].enum[0]": "default",
	"paths./s1/entities.get.parameters[2].enum[1]": "article",
	"paths./s1/entities.get.parameters[2].enum[2]": "keep-everything",
	"paths./s1/entities.get.parameters[2].in": "query",
	"paths./s1/entities.get.parameters[2].name": "extractor",
	"paths./s1/entities.get.parameters[2].required": false,
	"paths./s1/entities.get.parameters[2].type": "string",
	"paths./s1/entities.get.parameters[3].description": "document language",
	"paths./s1/entities.get.parameters[3].in": "query",
	"paths./s1/entities.get.parameters[3].name": "language",
	"paths./s1/entities.get.parameters[3].required": false,
	"paths./s1/entities.get.parameters[3].type": "string",
	"paths./s1/entities.get.parameters[4].in": "query",
	"paths./s1/entities.get.parameters[4].name": "returnTextInfo",
	"paths./s1/entities.get.parameters[4].required": false,
	"paths./s1/entities.get.parameters[4].type": "boolean",
	"paths./s1/entities.get.responses.200.description": "OK",
	"paths./s1/entities.get.responses.200.schema.$ref": "#/definitions/EntitiesResponse",
	"paths./s1/entities.get.responses.401.description": "Unauthorized",
	"paths./s1/entities.get.responses.403.description": "Forbidden",
	"paths./s1/entities.get.responses.404.description": "Not Found",
	"paths./s1/entities.get.summary": "Performs named-entity recognition on the given document",
	"paths./s1/entities.get.tags.length": 1,
	"paths./s1/entities.get.tags[0]": "geneea-api-s1",
	"paths./s1/entities.post.deprecated": false,
	"paths./s1/entities.post.description": "\u003cstrong\u003eNotes:\u003c/strong\u003e\u003cbr/\u003eValid JSON cannot contain newline characters. These have to be escaped. (See also \u003ca href=\"https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation#TheInterpretorAPIPublicDocumentation-Interactiveonlinedocumentation\" target=\"_blank\"\u003eInterpretor documentation\u003c/a\u003e)\u003cbr/\u003eFields \u003ccode\u003etext\u003c/code\u003e and \u003ccode\u003eurl\u003c/code\u003e are mutually exclusive.\u003cbr/\u003e\u003cstrong\u003eExamples:\u003c/strong\u003e\u003cpre\u003e\u003ccode\u003e{\"text\": \"Hello world!\"}\u003c/code\u003e\u003c/pre\u003e\u003cpre\u003e\u003ccode\u003e{\"url\": \"https://en.wikipedia.org/wiki/Pyrrhuloxia\"}\u003c/code\u003e\u003c/pre\u003e",
	"paths./s1/entities.post.operationId": "entitiesPost",
	"paths./s1/entities.post.parameters.length": 1,
	"paths./s1/entities.post.parameters[0].description": "request",
	"paths./s1/entities.post.parameters[0].in": "body",
	"paths./s1/entities.post.parameters[0].name": "body",
	"paths./s1/entities.post.parameters[0].required": false,
	"paths./s1/entities.post.parameters[0].schema.$ref": "#/definitions/Request",
	"paths./s1/entities.post.responses.200.description": "Description was not specified",
	"paths./s1/entities.post.responses.200.schema.$ref": "#/definitions/EntitiesResponse",
	"paths./s1/entities.post.responses.201.description": "Created",
	"paths./s1/entities.post.responses.401.description": "Unauthorized",
	"paths./s1/entities.post.responses.403.description": "Forbidden",
	"paths./s1/entities.post.responses.404.description": "Not Found",
	"paths./s1/entities.post.summary": "Performs named-entity recognition on the given document",
	"paths./s1/entities.post.tags.length": 1,
	"paths./s1/entities.post.tags[0]": "geneea-api-s1",
	"paths./s1/lemmatize.get.deprecated": false,
	"paths./s1/lemmatize.get.description": "lemmatizeGet",
	"paths./s1/lemmatize.get.operationId": "lemmatizeGet",
	"paths./s1/lemmatize.get.parameters.length": 5,
	"paths./s1/lemmatize.get.parameters[0].description": "raw document text",
	"paths./s1/lemmatize.get.parameters[0].in": "query",
	"paths./s1/lemmatize.get.parameters[0].name": "text",
	"paths./s1/lemmatize.get.parameters[0].required": false,
	"paths./s1/lemmatize.get.parameters[0].type": "string",
	"paths./s1/lemmatize.get.parameters[1].description": "document URL",
	"paths./s1/lemmatize.get.parameters[1].in": "query",
	"paths./s1/lemmatize.get.parameters[1].name": "url",
	"paths./s1/lemmatize.get.parameters[1].required": false,
	"paths./s1/lemmatize.get.parameters[1].type": "string",
	"paths./s1/lemmatize.get.parameters[2].description": "document extractor",
	"paths./s1/lemmatize.get.parameters[2].enum.length": 3,
	"paths./s1/lemmatize.get.parameters[2].enum[0]": "default",
	"paths./s1/lemmatize.get.parameters[2].enum[1]": "article",
	"paths./s1/lemmatize.get.parameters[2].enum[2]": "keep-everything",
	"paths./s1/lemmatize.get.parameters[2].in": "query",
	"paths./s1/lemmatize.get.parameters[2].name": "extractor",
	"paths./s1/lemmatize.get.parameters[2].required": false,
	"paths./s1/lemmatize.get.parameters[2].type": "string",
	"paths./s1/lemmatize.get.parameters[3].description": "document language",
	"paths./s1/lemmatize.get.parameters[3].in": "query",
	"paths./s1/lemmatize.get.parameters[3].name": "language",
	"paths./s1/lemmatize.get.parameters[3].required": false,
	"paths./s1/lemmatize.get.parameters[3].type": "string",
	"paths./s1/lemmatize.get.parameters[4].in": "query",
	"paths./s1/lemmatize.get.parameters[4].name": "returnTextInfo",
	"paths./s1/lemmatize.get.parameters[4].required": false,
	"paths./s1/lemmatize.get.parameters[4].type": "boolean",
	"paths./s1/lemmatize.get.responses.200.description": "OK",
	"paths./s1/lemmatize.get.responses.200.schema.$ref": "#/definitions/LemmatizeResponse",
	"paths./s1/lemmatize.get.responses.401.description": "Unauthorized",
	"paths./s1/lemmatize.get.responses.403.description": "Forbidden",
	"paths./s1/lemmatize.get.responses.404.description": "Not Found",
	"paths./s1/lemmatize.get.summary": "Performs lemmatization on the given document",
	"paths./s1/lemmatize.get.tags.length": 1,
	"paths./s1/lemmatize.get.tags[0]": "geneea-api-s1",
	"paths./s1/lemmatize.post.deprecated": false,
	"paths./s1/lemmatize.post.description": "\u003cstrong\u003eNotes:\u003c/strong\u003e\u003cbr/\u003eValid JSON cannot contain newline characters. These have to be escaped. (See also \u003ca href=\"https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation#TheInterpretorAPIPublicDocumentation-Interactiveonlinedocumentation\" target=\"_blank\"\u003eInterpretor documentation\u003c/a\u003e)\u003cbr/\u003eFields \u003ccode\u003etext\u003c/code\u003e and \u003ccode\u003eurl\u003c/code\u003e are mutually exclusive.\u003cbr/\u003e\u003cstrong\u003eExamples:\u003c/strong\u003e\u003cpre\u003e\u003ccode\u003e{\"text\": \"Hello world!\"}\u003c/code\u003e\u003c/pre\u003e\u003cpre\u003e\u003ccode\u003e{\"url\": \"https://en.wikipedia.org/wiki/Pyrrhuloxia\"}\u003c/code\u003e\u003c/pre\u003e",
	"paths./s1/lemmatize.post.operationId": "lemmatizePost",
	"paths./s1/lemmatize.post.parameters.length": 1,
	"paths./s1/lemmatize.post.parameters[0].description": "request",
	"paths./s1/lemmatize.post.parameters[0].in": "body",
	"paths./s1/lemmatize.post.parameters[0].name": "body",
	"paths./s1/lemmatize.post.parameters[0].required": false,
	"paths./s1/lemmatize.post.parameters[0].schema.$ref": "#/definitions/Request",
	"paths./s1/lemmatize.post.responses.200.description": "Description was not specified",
	"paths./s1/lemmatize.post.responses.200.schema.$ref": "#/definitions/LemmatizeResponse",
	"paths./s1/lemmatize.post.responses.201.description": "Created",
	"paths./s1/lemmatize.post.responses.401.description": "Unauthorized",
	"paths./s1/lemmatize.post.responses.403.description": "Forbidden",
	"paths./s1/lemmatize.post.responses.404.description": "Not Found",
	"paths./s1/lemmatize.post.summary": "Performs lemmatization on the given document",
	"paths./s1/lemmatize.post.tags.length": 1,
	"paths./s1/lemmatize.post.tags[0]": "geneea-api-s1",
	"paths./s1/sentiment.get.deprecated": false,
	"paths./s1/sentiment.get.description": "sentimentGet",
	"paths./s1/sentiment.get.operationId": "sentimentGet",
	"paths./s1/sentiment.get.parameters.length": 5,
	"paths./s1/sentiment.get.parameters[0].description": "raw document text",
	"paths./s1/sentiment.get.parameters[0].in": "query",
	"paths./s1/sentiment.get.parameters[0].name": "text",
	"paths./s1/sentiment.get.parameters[0].required": false,
	"paths./s1/sentiment.get.parameters[0].type": "string",
	"paths./s1/sentiment.get.parameters[1].description": "document URL",
	"paths./s1/sentiment.get.parameters[1].in": "query",
	"paths./s1/sentiment.get.parameters[1].name": "url",
	"paths./s1/sentiment.get.parameters[1].required": false,
	"paths./s1/sentiment.get.parameters[1].type": "string",
	"paths./s1/sentiment.get.parameters[2].description": "document extractor",
	"paths./s1/sentiment.get.parameters[2].enum.length": 3,
	"paths./s1/sentiment.get.parameters[2].enum[0]": "default",
	"paths./s1/sentiment.get.parameters[2].enum[1]": "article",
	"paths./s1/sentiment.get.parameters[2].enum[2]": "keep-everything",
	"paths./s1/sentiment.get.parameters[2].in": "query",
	"paths./s1/sentiment.get.parameters[2].name": "extractor",
	"paths./s1/sentiment.get.parameters[2].required": false,
	"paths./s1/sentiment.get.parameters[2].type": "string",
	"paths./s1/sentiment.get.parameters[3].description": "document language",
	"paths./s1/sentiment.get.parameters[3].in": "query",
	"paths./s1/sentiment.get.parameters[3].name": "language",
	"paths./s1/sentiment.get.parameters[3].required": false,
	"paths./s1/sentiment.get.parameters[3].type": "string",
	"paths./s1/sentiment.get.parameters[4].in": "query",
	"paths./s1/sentiment.get.parameters[4].name": "returnTextInfo",
	"paths./s1/sentiment.get.parameters[4].required": false,
	"paths./s1/sentiment.get.parameters[4].type": "boolean",
	"paths./s1/sentiment.get.responses.200.description": "OK",
	"paths./s1/sentiment.get.responses.200.schema.$ref": "#/definitions/SentimentResponse",
	"paths./s1/sentiment.get.responses.401.description": "Unauthorized",
	"paths./s1/sentiment.get.responses.403.description": "Forbidden",
	"paths./s1/sentiment.get.responses.404.description": "Not Found",
	"paths./s1/sentiment.get.summary": "Performs sentiment analysis on the given document",
	"paths./s1/sentiment.get.tags.length": 1,
	"paths./s1/sentiment.get.tags[0]": "geneea-api-s1",
	"paths./s1/sentiment.post.deprecated": false,
	"paths./s1/sentiment.post.description": "\u003cstrong\u003eNotes:\u003c/strong\u003e\u003cbr/\u003eValid JSON cannot contain newline characters. These have to be escaped. (See also \u003ca href=\"https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation#TheInterpretorAPIPublicDocumentation-Interactiveonlinedocumentation\" target=\"_blank\"\u003eInterpretor documentation\u003c/a\u003e)\u003cbr/\u003eFields \u003ccode\u003etext\u003c/code\u003e and \u003ccode\u003eurl\u003c/code\u003e are mutually exclusive.\u003cbr/\u003e\u003cstrong\u003eExamples:\u003c/strong\u003e\u003cpre\u003e\u003ccode\u003e{\"text\": \"Hello world!\"}\u003c/code\u003e\u003c/pre\u003e\u003cpre\u003e\u003ccode\u003e{\"url\": \"https://en.wikipedia.org/wiki/Pyrrhuloxia\"}\u003c/code\u003e\u003c/pre\u003e",
	"paths./s1/sentiment.post.operationId": "sentimentPost",
	"paths./s1/sentiment.post.parameters.length": 1,
	"paths./s1/sentiment.post.parameters[0].description": "request",
	"paths./s1/sentiment.post.parameters[0].in": "body",
	"paths./s1/sentiment.post.parameters[0].name": "body",
	"paths./s1/sentiment.post.parameters[0].required": false,
	"paths./s1/sentiment.post.parameters[0].schema.$ref": "#/definitions/Request",
	"paths./s1/sentiment.post.responses.200.description": "Description was not specified",
	"paths./s1/sentiment.post.responses.200.schema.$ref": "#/definitions/SentimentResponse",
	"paths./s1/sentiment.post.responses.201.description": "Created",
	"paths./s1/sentiment.post.responses.401.description": "Unauthorized",
	"paths./s1/sentiment.post.responses.403.description": "Forbidden",
	"paths./s1/sentiment.post.responses.404.description": "Not Found",
	"paths./s1/sentiment.post.summary": "Performs sentiment analysis on the given document",
	"paths./s1/sentiment.post.tags.length": 1,
	"paths./s1/sentiment.post.tags[0]": "geneea-api-s1",
	"paths./s1/topic.get.deprecated": false,
	"paths./s1/topic.get.description": "topicGet",
	"paths./s1/topic.get.operationId": "topicGet",
	"paths./s1/topic.get.parameters.length": 5,
	"paths./s1/topic.get.parameters[0].description": "raw document text",
	"paths./s1/topic.get.parameters[0].in": "query",
	"paths./s1/topic.get.parameters[0].name": "text",
	"paths./s1/topic.get.parameters[0].required": false,
	"paths./s1/topic.get.parameters[0].type": "string",
	"paths./s1/topic.get.parameters[1].description": "document URL",
	"paths./s1/topic.get.parameters[1].in": "query",
	"paths./s1/topic.get.parameters[1].name": "url",
	"paths./s1/topic.get.parameters[1].required": false,
	"paths./s1/topic.get.parameters[1].type": "string",
	"paths./s1/topic.get.parameters[2].description": "document extractor",
	"paths./s1/topic.get.parameters[2].enum.length": 3,
	"paths./s1/topic.get.parameters[2].enum[0]": "default",
	"paths./s1/topic.get.parameters[2].enum[1]": "article",
	"paths./s1/topic.get.parameters[2].enum[2]": "keep-everything",
	"paths./s1/topic.get.parameters[2].in": "query",
	"paths./s1/topic.get.parameters[2].name": "extractor",
	"paths./s1/topic.get.parameters[2].required": false,
	"paths./s1/topic.get.parameters[2].type": "string",
	"paths./s1/topic.get.parameters[3].description": "document language",
	"paths./s1/topic.get.parameters[3].in": "query",
	"paths./s1/topic.get.parameters[3].name": "language",
	"paths./s1/topic.get.parameters[3].required": false,
	"paths./s1/topic.get.parameters[3].type": "string",
	"paths./s1/topic.get.parameters[4].in": "query",
	"paths./s1/topic.get.parameters[4].name": "returnTextInfo",
	"paths./s1/topic.get.parameters[4].required": false,
	"paths./s1/topic.get.parameters[4].type": "boolean",
	"paths./s1/topic.get.responses.200.description": "OK",
	"paths./s1/topic.get.responses.200.schema.$ref": "#/definitions/TopicResponse",
	"paths./s1/topic.get.responses.401.description": "Unauthorized",
	"paths./s1/topic.get.responses.403.description": "Forbidden",
	"paths./s1/topic.get.responses.404.description": "Not Found",
	"paths./s1/topic.get.summary": "Performs topic detection on the given document",
	"paths./s1/topic.get.tags.length": 1,
	"paths./s1/topic.get.tags[0]": "geneea-api-s1",
	"paths./s1/topic.post.deprecated": false,
	"paths./s1/topic.post.description": "\u003cstrong\u003eNotes:\u003c/strong\u003e\u003cbr/\u003eValid JSON cannot contain newline characters. These have to be escaped. (See also \u003ca href=\"https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation#TheInterpretorAPIPublicDocumentation-Interactiveonlinedocumentation\" target=\"_blank\"\u003eInterpretor documentation\u003c/a\u003e)\u003cbr/\u003eFields \u003ccode\u003etext\u003c/code\u003e and \u003ccode\u003eurl\u003c/code\u003e are mutually exclusive.\u003cbr/\u003e\u003cstrong\u003eExamples:\u003c/strong\u003e\u003cpre\u003e\u003ccode\u003e{\"text\": \"Hello world!\"}\u003c/code\u003e\u003c/pre\u003e\u003cpre\u003e\u003ccode\u003e{\"url\": \"https://en.wikipedia.org/wiki/Pyrrhuloxia\"}\u003c/code\u003e\u003c/pre\u003e",
	"paths./s1/topic.post.operationId": "topicPost",
	"paths./s1/topic.post.parameters.length": 1,
	"paths./s1/topic.post.parameters[0].description": "request",
	"paths./s1/topic.post.parameters[0].in": "body",
	"paths./s1/topic.post.parameters[0].name": "body",
	"paths./s1/topic.post.parameters[0].required": false,
	"paths./s1/topic.post.parameters[0].schema.$ref": "#/definitions/Request",
	"paths./s1/topic.post.responses.200.description": "Description was not specified",
	"paths./s1/topic.post.responses.200.schema.$ref": "#/definitions/TopicResponse",
	"paths./s1/topic.post.responses.201.description": "Created",
	"paths./s1/topic.post.responses.401.description": "Unauthorized",
	"paths./s1/topic.post.responses.403.description": "Forbidden",
	"paths./s1/topic.post.responses.404.description": "Not Found",
	"paths./s1/topic.post.summary": "Performs topic detection on the given document",
	"paths./s1/topic.post.tags.length": 1,
	"paths./s1/topic.post.tags[0]": "geneea-api-s1",
	"produces.length": 1,
	"produces[0]": "application/json",
	"schemes.length": 1,
	"schemes[0]": "https",
	"security.length": 1,
	"securityDefinitions.user_key.in": "query",
	"securityDefinitions.user_key.name": "user_key",
	"securityDefinitions.user_key.type": "apiKey",
	"security[0].user_key.length": 0,
	"swagger": "2.0",
	"tags.length": 2,
	"tags[0].description": "Basic information about the user account.",
	"tags[0].name": "account",
	"tags[1].description": "Geneea simple REST API version 1",
	"tags[1].name": "geneea-api-s1"
}