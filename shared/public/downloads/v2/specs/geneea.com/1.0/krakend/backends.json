{
	"backends": [
		{
			"group": "geneea-natural-language-processing-1-0",
			"url_pattern": "/account",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://api.geneea.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "geneea.com",
				"description": "\u003cdiv class=\"api-description\"\u003e\n    \u003ch2\u003eAuthentication\u003c/h2\u003e\n    \u003cp\u003eFor all calls, supply your API key. \u003ca href=\"https://www.geneea.com/pricing\"\u003eSign up to \u003cem\u003eobtain the key\u003c/em\u003e\u003c/a\u003e.\u003c/p\u003e\n    \u003cp\u003e\n        Our API supports both \u003cem\u003eunencrypted (HTTP)\u003c/em\u003e and \u003cem\u003eencrypted (HTTPS)\u003c/em\u003e protocols.\n        However, for security reasons, we strongly encourage using only the encrypted version.\n    \u003c/p\u003e\n    \u003cp\u003eThe API key should be supplied as either a request parameter \u003ccode\u003euser_key\u003c/code\u003e or in \u003ccode\u003eAuthorization\u003c/code\u003e header.\u003c/p\u003e\n    \u003cpre\u003e\u003ccode\u003eAuthorization: user_key \u0026lt;YOUR_API_KEY\u0026gt;\u003c/code\u003e\u003c/pre\u003e\n\n    \u003ch2\u003eAPI operations\u003c/h2\u003e\n    \u003cp\u003e\n        All API operations can perform analysis on supplied raw text or on text extracted from a given URL.\n        Optionally, one can supply additional information which can make the result more precise. An example\n        of such information would be the language of text or a particular text extractor for URL resources.\n    \u003c/p\u003e\n    \u003cp\u003eThe supported types of analyses are:\u003c/p\u003e\n    \u003cul\u003e\n        \u003cli\u003e\u003cstrong\u003elemmatization\u003c/strong\u003e \u0026longrightarrow;\n            Finds out lemmata (basic forms) of all the words in the document.\n        \u003c/li\u003e\n        \u003cli\u003e\u003cstrong\u003ecorrection\u003c/strong\u003e \u0026longrightarrow;\n            Performs correction (diacritization) on all the words in the document.\n        \u003c/li\u003e\n        \u003cli\u003e\u003cstrong\u003etopic detection\u003c/strong\u003e \u0026longrightarrow;\n            Determines a topic of the document, e.g. finance or sports.\n        \u003c/li\u003e\n        \u003cli\u003e\u003cstrong\u003esentiment analysis\u003c/strong\u003e \u0026longrightarrow;\n            Determines a sentiment of the document, i.e. how positive or negative the document is.\n        \u003c/li\u003e\n        \u003cli\u003e\u003cstrong\u003enamed entity recognition\u003c/strong\u003e \u0026longrightarrow;\n            Finds named entities (like person, location, date etc.) mentioned the the document.\n        \u003c/li\u003e\n    \u003c/ul\u003e\n\n    \u003ch2\u003eEncoding\u003c/h2\u003e\n    \u003cp\u003eThe supplied text is expected to be in UTF-8 encoding, this is especially important for non-english texts.\u003c/p\u003e\n\n    \u003ch2\u003eReturned values\u003c/h2\u003e\n    \u003cp\u003eThe API calls always return objects in serialized JSON format in UTF-8 encoding.\u003c/p\u003e\n    \u003cp\u003e\n        If any error occurs, the HTTP response code will be in the range \u003ccode\u003e4xx\u003c/code\u003e (client-side error) or\n        \u003ccode\u003e5xx\u003c/code\u003e (server-side error). In this situation, the body of the response will contain information\n        about the error in JSON format, with \u003ccode\u003eexception\u003c/code\u003e and \u003ccode\u003emessage\u003c/code\u003e values.\n    \u003c/p\u003e\n\n    \u003ch2\u003eURL limitations\u003c/h2\u003e\n    \u003cp\u003e\n        All the requests are semantically \u003ccode\u003eGET\u003c/code\u003e. However, for longer texts, you may run into issues\n        with URL length limit. Therefore, it's possible to always issue a \u003ccode\u003ePOST\u003c/code\u003e request with all\n        the parameters encoded as a JSON in the request body.\n    \u003c/p\u003e\n    \u003cp\u003eExample:\u003c/p\u003e\n    \u003cpre\u003e\u003ccode\u003e\n        POST /s1/sentiment\n        Content-Type: application/json\n\n        {\"text\":\"There is no harm in being sometimes wrong - especially if one is promptly found out.\"}\n    \u003c/code\u003e\u003c/pre\u003e\n    \u003cp\u003eThis is equivalent to \u003ccode\u003eGET /s1/sentiment?text=There%20is%20no%20harm...\u003c/code\u003e\u003c/p\u003e\n\n    \u003ch2\u003eRequest limitations\u003c/h2\u003e\n    \u003cp\u003e\n        The API has other limitations concerning the size of the HTTP requests. The maximum allowed size of any\n        POST request body is \u003cem\u003e512 KiB\u003c/em\u003e. For request with a URL resource, the maximum allowed number of\n        extracted characters from each such resource is \u003cem\u003e100,000\u003c/em\u003e.\n    \u003c/p\u003e\n\n    \u003ch2\u003eTerms of Service\u003c/h2\u003e\n    \u003cp\u003e\n        By using the API, you agree to our\n        \u003ca href=\"https://www.geneea.com/terms.html\" target=\"_blank\"\u003eTerms of Service Agreement\u003c/a\u003e.\n    \u003c/p\u003e\n\n    \u003ch2\u003eMore information\u003c/h2\u003e\n    \u003cp\u003e\n        \u003ca href=\"https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation\" target=\"_blank\"\u003e\n        The Interpretor Public Documentation\n        \u003c/a\u003e\n    \u003c/p\u003e\n\u003c/div\u003e\n",
				"version": "1.0",
				"slug": "geneea-natural-language-processing-1-0-account",
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://api.geneea.com"
				],
				"topics": [
					"text"
				],
				"schemes": [
					"https"
				]
			}
		},
		{
			"group": "geneea-natural-language-processing-1-0",
			"url_pattern": "/s1/correction",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://api.geneea.com"
			],
			"query_string_params": [
				"extractor",
				"language",
				"returnTextInfo",
				"text",
				"url"
			],
			"whitelist": [
				"corrected",
				"correctedText",
				"diacritized",
				"language",
				"text"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "geneea.com",
				"description": "\u003cdiv class=\"api-description\"\u003e\n    \u003ch2\u003eAuthentication\u003c/h2\u003e\n    \u003cp\u003eFor all calls, supply your API key. \u003ca href=\"https://www.geneea.com/pricing\"\u003eSign up to \u003cem\u003eobtain the key\u003c/em\u003e\u003c/a\u003e.\u003c/p\u003e\n    \u003cp\u003e\n        Our API supports both \u003cem\u003eunencrypted (HTTP)\u003c/em\u003e and \u003cem\u003eencrypted (HTTPS)\u003c/em\u003e protocols.\n        However, for security reasons, we strongly encourage using only the encrypted version.\n    \u003c/p\u003e\n    \u003cp\u003eThe API key should be supplied as either a request parameter \u003ccode\u003euser_key\u003c/code\u003e or in \u003ccode\u003eAuthorization\u003c/code\u003e header.\u003c/p\u003e\n    \u003cpre\u003e\u003ccode\u003eAuthorization: user_key \u0026lt;YOUR_API_KEY\u0026gt;\u003c/code\u003e\u003c/pre\u003e\n\n    \u003ch2\u003eAPI operations\u003c/h2\u003e\n    \u003cp\u003e\n        All API operations can perform analysis on supplied raw text or on text extracted from a given URL.\n        Optionally, one can supply additional information which can make the result more precise. An example\n        of such information would be the language of text or a particular text extractor for URL resources.\n    \u003c/p\u003e\n    \u003cp\u003eThe supported types of analyses are:\u003c/p\u003e\n    \u003cul\u003e\n        \u003cli\u003e\u003cstrong\u003elemmatization\u003c/strong\u003e \u0026longrightarrow;\n            Finds out lemmata (basic forms) of all the words in the document.\n        \u003c/li\u003e\n        \u003cli\u003e\u003cstrong\u003ecorrection\u003c/strong\u003e \u0026longrightarrow;\n            Performs correction (diacritization) on all the words in the document.\n        \u003c/li\u003e\n        \u003cli\u003e\u003cstrong\u003etopic detection\u003c/strong\u003e \u0026longrightarrow;\n            Determines a topic of the document, e.g. finance or sports.\n        \u003c/li\u003e\n        \u003cli\u003e\u003cstrong\u003esentiment analysis\u003c/strong\u003e \u0026longrightarrow;\n            Determines a sentiment of the document, i.e. how positive or negative the document is.\n        \u003c/li\u003e\n        \u003cli\u003e\u003cstrong\u003enamed entity recognition\u003c/strong\u003e \u0026longrightarrow;\n            Finds named entities (like person, location, date etc.) mentioned the the document.\n        \u003c/li\u003e\n    \u003c/ul\u003e\n\n    \u003ch2\u003eEncoding\u003c/h2\u003e\n    \u003cp\u003eThe supplied text is expected to be in UTF-8 encoding, this is especially important for non-english texts.\u003c/p\u003e\n\n    \u003ch2\u003eReturned values\u003c/h2\u003e\n    \u003cp\u003eThe API calls always return objects in serialized JSON format in UTF-8 encoding.\u003c/p\u003e\n    \u003cp\u003e\n        If any error occurs, the HTTP response code will be in the range \u003ccode\u003e4xx\u003c/code\u003e (client-side error) or\n        \u003ccode\u003e5xx\u003c/code\u003e (server-side error). In this situation, the body of the response will contain information\n        about the error in JSON format, with \u003ccode\u003eexception\u003c/code\u003e and \u003ccode\u003emessage\u003c/code\u003e values.\n    \u003c/p\u003e\n\n    \u003ch2\u003eURL limitations\u003c/h2\u003e\n    \u003cp\u003e\n        All the requests are semantically \u003ccode\u003eGET\u003c/code\u003e. However, for longer texts, you may run into issues\n        with URL length limit. Therefore, it's possible to always issue a \u003ccode\u003ePOST\u003c/code\u003e request with all\n        the parameters encoded as a JSON in the request body.\n    \u003c/p\u003e\n    \u003cp\u003eExample:\u003c/p\u003e\n    \u003cpre\u003e\u003ccode\u003e\n        POST /s1/sentiment\n        Content-Type: application/json\n\n        {\"text\":\"There is no harm in being sometimes wrong - especially if one is promptly found out.\"}\n    \u003c/code\u003e\u003c/pre\u003e\n    \u003cp\u003eThis is equivalent to \u003ccode\u003eGET /s1/sentiment?text=There%20is%20no%20harm...\u003c/code\u003e\u003c/p\u003e\n\n    \u003ch2\u003eRequest limitations\u003c/h2\u003e\n    \u003cp\u003e\n        The API has other limitations concerning the size of the HTTP requests. The maximum allowed size of any\n        POST request body is \u003cem\u003e512 KiB\u003c/em\u003e. For request with a URL resource, the maximum allowed number of\n        extracted characters from each such resource is \u003cem\u003e100,000\u003c/em\u003e.\n    \u003c/p\u003e\n\n    \u003ch2\u003eTerms of Service\u003c/h2\u003e\n    \u003cp\u003e\n        By using the API, you agree to our\n        \u003ca href=\"https://www.geneea.com/terms.html\" target=\"_blank\"\u003eTerms of Service Agreement\u003c/a\u003e.\n    \u003c/p\u003e\n\n    \u003ch2\u003eMore information\u003c/h2\u003e\n    \u003cp\u003e\n        \u003ca href=\"https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation\" target=\"_blank\"\u003e\n        The Interpretor Public Documentation\n        \u003c/a\u003e\n    \u003c/p\u003e\n\u003c/div\u003e\n",
				"version": "1.0",
				"slug": "geneea-natural-language-processing-1-0-s1-correction",
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"mapping": {
					"corrected": "corrected",
					"correctedText": "correctedText",
					"diacritized": "diacritized",
					"language": "language",
					"text": "text"
				},
				"hosts": [
					"https://api.geneea.com"
				],
				"topics": [
					"text"
				],
				"schemes": [
					"https"
				]
			}
		},
		{
			"group": "geneea-natural-language-processing-1-0",
			"url_pattern": "/s1/entities",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://api.geneea.com"
			],
			"query_string_params": [
				"extractor",
				"language",
				"returnTextInfo",
				"text",
				"url"
			],
			"whitelist": [
				"entities",
				"language",
				"text"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "geneea.com",
				"description": "\u003cdiv class=\"api-description\"\u003e\n    \u003ch2\u003eAuthentication\u003c/h2\u003e\n    \u003cp\u003eFor all calls, supply your API key. \u003ca href=\"https://www.geneea.com/pricing\"\u003eSign up to \u003cem\u003eobtain the key\u003c/em\u003e\u003c/a\u003e.\u003c/p\u003e\n    \u003cp\u003e\n        Our API supports both \u003cem\u003eunencrypted (HTTP)\u003c/em\u003e and \u003cem\u003eencrypted (HTTPS)\u003c/em\u003e protocols.\n        However, for security reasons, we strongly encourage using only the encrypted version.\n    \u003c/p\u003e\n    \u003cp\u003eThe API key should be supplied as either a request parameter \u003ccode\u003euser_key\u003c/code\u003e or in \u003ccode\u003eAuthorization\u003c/code\u003e header.\u003c/p\u003e\n    \u003cpre\u003e\u003ccode\u003eAuthorization: user_key \u0026lt;YOUR_API_KEY\u0026gt;\u003c/code\u003e\u003c/pre\u003e\n\n    \u003ch2\u003eAPI operations\u003c/h2\u003e\n    \u003cp\u003e\n        All API operations can perform analysis on supplied raw text or on text extracted from a given URL.\n        Optionally, one can supply additional information which can make the result more precise. An example\n        of such information would be the language of text or a particular text extractor for URL resources.\n    \u003c/p\u003e\n    \u003cp\u003eThe supported types of analyses are:\u003c/p\u003e\n    \u003cul\u003e\n        \u003cli\u003e\u003cstrong\u003elemmatization\u003c/strong\u003e \u0026longrightarrow;\n            Finds out lemmata (basic forms) of all the words in the document.\n        \u003c/li\u003e\n        \u003cli\u003e\u003cstrong\u003ecorrection\u003c/strong\u003e \u0026longrightarrow;\n            Performs correction (diacritization) on all the words in the document.\n        \u003c/li\u003e\n        \u003cli\u003e\u003cstrong\u003etopic detection\u003c/strong\u003e \u0026longrightarrow;\n            Determines a topic of the document, e.g. finance or sports.\n        \u003c/li\u003e\n        \u003cli\u003e\u003cstrong\u003esentiment analysis\u003c/strong\u003e \u0026longrightarrow;\n            Determines a sentiment of the document, i.e. how positive or negative the document is.\n        \u003c/li\u003e\n        \u003cli\u003e\u003cstrong\u003enamed entity recognition\u003c/strong\u003e \u0026longrightarrow;\n            Finds named entities (like person, location, date etc.) mentioned the the document.\n        \u003c/li\u003e\n    \u003c/ul\u003e\n\n    \u003ch2\u003eEncoding\u003c/h2\u003e\n    \u003cp\u003eThe supplied text is expected to be in UTF-8 encoding, this is especially important for non-english texts.\u003c/p\u003e\n\n    \u003ch2\u003eReturned values\u003c/h2\u003e\n    \u003cp\u003eThe API calls always return objects in serialized JSON format in UTF-8 encoding.\u003c/p\u003e\n    \u003cp\u003e\n        If any error occurs, the HTTP response code will be in the range \u003ccode\u003e4xx\u003c/code\u003e (client-side error) or\n        \u003ccode\u003e5xx\u003c/code\u003e (server-side error). In this situation, the body of the response will contain information\n        about the error in JSON format, with \u003ccode\u003eexception\u003c/code\u003e and \u003ccode\u003emessage\u003c/code\u003e values.\n    \u003c/p\u003e\n\n    \u003ch2\u003eURL limitations\u003c/h2\u003e\n    \u003cp\u003e\n        All the requests are semantically \u003ccode\u003eGET\u003c/code\u003e. However, for longer texts, you may run into issues\n        with URL length limit. Therefore, it's possible to always issue a \u003ccode\u003ePOST\u003c/code\u003e request with all\n        the parameters encoded as a JSON in the request body.\n    \u003c/p\u003e\n    \u003cp\u003eExample:\u003c/p\u003e\n    \u003cpre\u003e\u003ccode\u003e\n        POST /s1/sentiment\n        Content-Type: application/json\n\n        {\"text\":\"There is no harm in being sometimes wrong - especially if one is promptly found out.\"}\n    \u003c/code\u003e\u003c/pre\u003e\n    \u003cp\u003eThis is equivalent to \u003ccode\u003eGET /s1/sentiment?text=There%20is%20no%20harm...\u003c/code\u003e\u003c/p\u003e\n\n    \u003ch2\u003eRequest limitations\u003c/h2\u003e\n    \u003cp\u003e\n        The API has other limitations concerning the size of the HTTP requests. The maximum allowed size of any\n        POST request body is \u003cem\u003e512 KiB\u003c/em\u003e. For request with a URL resource, the maximum allowed number of\n        extracted characters from each such resource is \u003cem\u003e100,000\u003c/em\u003e.\n    \u003c/p\u003e\n\n    \u003ch2\u003eTerms of Service\u003c/h2\u003e\n    \u003cp\u003e\n        By using the API, you agree to our\n        \u003ca href=\"https://www.geneea.com/terms.html\" target=\"_blank\"\u003eTerms of Service Agreement\u003c/a\u003e.\n    \u003c/p\u003e\n\n    \u003ch2\u003eMore information\u003c/h2\u003e\n    \u003cp\u003e\n        \u003ca href=\"https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation\" target=\"_blank\"\u003e\n        The Interpretor Public Documentation\n        \u003c/a\u003e\n    \u003c/p\u003e\n\u003c/div\u003e\n",
				"version": "1.0",
				"slug": "geneea-natural-language-processing-1-0-s1-entities",
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"mapping": {
					"entities": "entities",
					"language": "language",
					"text": "text"
				},
				"hosts": [
					"https://api.geneea.com"
				],
				"topics": [
					"text"
				],
				"schemes": [
					"https"
				]
			}
		},
		{
			"group": "geneea-natural-language-processing-1-0",
			"url_pattern": "/s1/lemmatize",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://api.geneea.com"
			],
			"query_string_params": [
				"extractor",
				"language",
				"returnTextInfo",
				"text",
				"url"
			],
			"whitelist": [
				"language",
				"lemmatizedText",
				"text"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "geneea.com",
				"description": "\u003cdiv class=\"api-description\"\u003e\n    \u003ch2\u003eAuthentication\u003c/h2\u003e\n    \u003cp\u003eFor all calls, supply your API key. \u003ca href=\"https://www.geneea.com/pricing\"\u003eSign up to \u003cem\u003eobtain the key\u003c/em\u003e\u003c/a\u003e.\u003c/p\u003e\n    \u003cp\u003e\n        Our API supports both \u003cem\u003eunencrypted (HTTP)\u003c/em\u003e and \u003cem\u003eencrypted (HTTPS)\u003c/em\u003e protocols.\n        However, for security reasons, we strongly encourage using only the encrypted version.\n    \u003c/p\u003e\n    \u003cp\u003eThe API key should be supplied as either a request parameter \u003ccode\u003euser_key\u003c/code\u003e or in \u003ccode\u003eAuthorization\u003c/code\u003e header.\u003c/p\u003e\n    \u003cpre\u003e\u003ccode\u003eAuthorization: user_key \u0026lt;YOUR_API_KEY\u0026gt;\u003c/code\u003e\u003c/pre\u003e\n\n    \u003ch2\u003eAPI operations\u003c/h2\u003e\n    \u003cp\u003e\n        All API operations can perform analysis on supplied raw text or on text extracted from a given URL.\n        Optionally, one can supply additional information which can make the result more precise. An example\n        of such information would be the language of text or a particular text extractor for URL resources.\n    \u003c/p\u003e\n    \u003cp\u003eThe supported types of analyses are:\u003c/p\u003e\n    \u003cul\u003e\n        \u003cli\u003e\u003cstrong\u003elemmatization\u003c/strong\u003e \u0026longrightarrow;\n            Finds out lemmata (basic forms) of all the words in the document.\n        \u003c/li\u003e\n        \u003cli\u003e\u003cstrong\u003ecorrection\u003c/strong\u003e \u0026longrightarrow;\n            Performs correction (diacritization) on all the words in the document.\n        \u003c/li\u003e\n        \u003cli\u003e\u003cstrong\u003etopic detection\u003c/strong\u003e \u0026longrightarrow;\n            Determines a topic of the document, e.g. finance or sports.\n        \u003c/li\u003e\n        \u003cli\u003e\u003cstrong\u003esentiment analysis\u003c/strong\u003e \u0026longrightarrow;\n            Determines a sentiment of the document, i.e. how positive or negative the document is.\n        \u003c/li\u003e\n        \u003cli\u003e\u003cstrong\u003enamed entity recognition\u003c/strong\u003e \u0026longrightarrow;\n            Finds named entities (like person, location, date etc.) mentioned the the document.\n        \u003c/li\u003e\n    \u003c/ul\u003e\n\n    \u003ch2\u003eEncoding\u003c/h2\u003e\n    \u003cp\u003eThe supplied text is expected to be in UTF-8 encoding, this is especially important for non-english texts.\u003c/p\u003e\n\n    \u003ch2\u003eReturned values\u003c/h2\u003e\n    \u003cp\u003eThe API calls always return objects in serialized JSON format in UTF-8 encoding.\u003c/p\u003e\n    \u003cp\u003e\n        If any error occurs, the HTTP response code will be in the range \u003ccode\u003e4xx\u003c/code\u003e (client-side error) or\n        \u003ccode\u003e5xx\u003c/code\u003e (server-side error). In this situation, the body of the response will contain information\n        about the error in JSON format, with \u003ccode\u003eexception\u003c/code\u003e and \u003ccode\u003emessage\u003c/code\u003e values.\n    \u003c/p\u003e\n\n    \u003ch2\u003eURL limitations\u003c/h2\u003e\n    \u003cp\u003e\n        All the requests are semantically \u003ccode\u003eGET\u003c/code\u003e. However, for longer texts, you may run into issues\n        with URL length limit. Therefore, it's possible to always issue a \u003ccode\u003ePOST\u003c/code\u003e request with all\n        the parameters encoded as a JSON in the request body.\n    \u003c/p\u003e\n    \u003cp\u003eExample:\u003c/p\u003e\n    \u003cpre\u003e\u003ccode\u003e\n        POST /s1/sentiment\n        Content-Type: application/json\n\n        {\"text\":\"There is no harm in being sometimes wrong - especially if one is promptly found out.\"}\n    \u003c/code\u003e\u003c/pre\u003e\n    \u003cp\u003eThis is equivalent to \u003ccode\u003eGET /s1/sentiment?text=There%20is%20no%20harm...\u003c/code\u003e\u003c/p\u003e\n\n    \u003ch2\u003eRequest limitations\u003c/h2\u003e\n    \u003cp\u003e\n        The API has other limitations concerning the size of the HTTP requests. The maximum allowed size of any\n        POST request body is \u003cem\u003e512 KiB\u003c/em\u003e. For request with a URL resource, the maximum allowed number of\n        extracted characters from each such resource is \u003cem\u003e100,000\u003c/em\u003e.\n    \u003c/p\u003e\n\n    \u003ch2\u003eTerms of Service\u003c/h2\u003e\n    \u003cp\u003e\n        By using the API, you agree to our\n        \u003ca href=\"https://www.geneea.com/terms.html\" target=\"_blank\"\u003eTerms of Service Agreement\u003c/a\u003e.\n    \u003c/p\u003e\n\n    \u003ch2\u003eMore information\u003c/h2\u003e\n    \u003cp\u003e\n        \u003ca href=\"https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation\" target=\"_blank\"\u003e\n        The Interpretor Public Documentation\n        \u003c/a\u003e\n    \u003c/p\u003e\n\u003c/div\u003e\n",
				"version": "1.0",
				"slug": "geneea-natural-language-processing-1-0-s1-lemmatize",
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"mapping": {
					"language": "language",
					"lemmatizedText": "lemmatizedText",
					"text": "text"
				},
				"hosts": [
					"https://api.geneea.com"
				],
				"topics": [
					"text"
				],
				"schemes": [
					"https"
				]
			}
		},
		{
			"group": "geneea-natural-language-processing-1-0",
			"url_pattern": "/s1/sentiment",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://api.geneea.com"
			],
			"query_string_params": [
				"extractor",
				"language",
				"returnTextInfo",
				"text",
				"url"
			],
			"whitelist": [
				"language",
				"sentiment",
				"text"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "geneea.com",
				"description": "\u003cdiv class=\"api-description\"\u003e\n    \u003ch2\u003eAuthentication\u003c/h2\u003e\n    \u003cp\u003eFor all calls, supply your API key. \u003ca href=\"https://www.geneea.com/pricing\"\u003eSign up to \u003cem\u003eobtain the key\u003c/em\u003e\u003c/a\u003e.\u003c/p\u003e\n    \u003cp\u003e\n        Our API supports both \u003cem\u003eunencrypted (HTTP)\u003c/em\u003e and \u003cem\u003eencrypted (HTTPS)\u003c/em\u003e protocols.\n        However, for security reasons, we strongly encourage using only the encrypted version.\n    \u003c/p\u003e\n    \u003cp\u003eThe API key should be supplied as either a request parameter \u003ccode\u003euser_key\u003c/code\u003e or in \u003ccode\u003eAuthorization\u003c/code\u003e header.\u003c/p\u003e\n    \u003cpre\u003e\u003ccode\u003eAuthorization: user_key \u0026lt;YOUR_API_KEY\u0026gt;\u003c/code\u003e\u003c/pre\u003e\n\n    \u003ch2\u003eAPI operations\u003c/h2\u003e\n    \u003cp\u003e\n        All API operations can perform analysis on supplied raw text or on text extracted from a given URL.\n        Optionally, one can supply additional information which can make the result more precise. An example\n        of such information would be the language of text or a particular text extractor for URL resources.\n    \u003c/p\u003e\n    \u003cp\u003eThe supported types of analyses are:\u003c/p\u003e\n    \u003cul\u003e\n        \u003cli\u003e\u003cstrong\u003elemmatization\u003c/strong\u003e \u0026longrightarrow;\n            Finds out lemmata (basic forms) of all the words in the document.\n        \u003c/li\u003e\n        \u003cli\u003e\u003cstrong\u003ecorrection\u003c/strong\u003e \u0026longrightarrow;\n            Performs correction (diacritization) on all the words in the document.\n        \u003c/li\u003e\n        \u003cli\u003e\u003cstrong\u003etopic detection\u003c/strong\u003e \u0026longrightarrow;\n            Determines a topic of the document, e.g. finance or sports.\n        \u003c/li\u003e\n        \u003cli\u003e\u003cstrong\u003esentiment analysis\u003c/strong\u003e \u0026longrightarrow;\n            Determines a sentiment of the document, i.e. how positive or negative the document is.\n        \u003c/li\u003e\n        \u003cli\u003e\u003cstrong\u003enamed entity recognition\u003c/strong\u003e \u0026longrightarrow;\n            Finds named entities (like person, location, date etc.) mentioned the the document.\n        \u003c/li\u003e\n    \u003c/ul\u003e\n\n    \u003ch2\u003eEncoding\u003c/h2\u003e\n    \u003cp\u003eThe supplied text is expected to be in UTF-8 encoding, this is especially important for non-english texts.\u003c/p\u003e\n\n    \u003ch2\u003eReturned values\u003c/h2\u003e\n    \u003cp\u003eThe API calls always return objects in serialized JSON format in UTF-8 encoding.\u003c/p\u003e\n    \u003cp\u003e\n        If any error occurs, the HTTP response code will be in the range \u003ccode\u003e4xx\u003c/code\u003e (client-side error) or\n        \u003ccode\u003e5xx\u003c/code\u003e (server-side error). In this situation, the body of the response will contain information\n        about the error in JSON format, with \u003ccode\u003eexception\u003c/code\u003e and \u003ccode\u003emessage\u003c/code\u003e values.\n    \u003c/p\u003e\n\n    \u003ch2\u003eURL limitations\u003c/h2\u003e\n    \u003cp\u003e\n        All the requests are semantically \u003ccode\u003eGET\u003c/code\u003e. However, for longer texts, you may run into issues\n        with URL length limit. Therefore, it's possible to always issue a \u003ccode\u003ePOST\u003c/code\u003e request with all\n        the parameters encoded as a JSON in the request body.\n    \u003c/p\u003e\n    \u003cp\u003eExample:\u003c/p\u003e\n    \u003cpre\u003e\u003ccode\u003e\n        POST /s1/sentiment\n        Content-Type: application/json\n\n        {\"text\":\"There is no harm in being sometimes wrong - especially if one is promptly found out.\"}\n    \u003c/code\u003e\u003c/pre\u003e\n    \u003cp\u003eThis is equivalent to \u003ccode\u003eGET /s1/sentiment?text=There%20is%20no%20harm...\u003c/code\u003e\u003c/p\u003e\n\n    \u003ch2\u003eRequest limitations\u003c/h2\u003e\n    \u003cp\u003e\n        The API has other limitations concerning the size of the HTTP requests. The maximum allowed size of any\n        POST request body is \u003cem\u003e512 KiB\u003c/em\u003e. For request with a URL resource, the maximum allowed number of\n        extracted characters from each such resource is \u003cem\u003e100,000\u003c/em\u003e.\n    \u003c/p\u003e\n\n    \u003ch2\u003eTerms of Service\u003c/h2\u003e\n    \u003cp\u003e\n        By using the API, you agree to our\n        \u003ca href=\"https://www.geneea.com/terms.html\" target=\"_blank\"\u003eTerms of Service Agreement\u003c/a\u003e.\n    \u003c/p\u003e\n\n    \u003ch2\u003eMore information\u003c/h2\u003e\n    \u003cp\u003e\n        \u003ca href=\"https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation\" target=\"_blank\"\u003e\n        The Interpretor Public Documentation\n        \u003c/a\u003e\n    \u003c/p\u003e\n\u003c/div\u003e\n",
				"version": "1.0",
				"slug": "geneea-natural-language-processing-1-0-s1-sentiment",
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"mapping": {
					"language": "language",
					"sentiment": "sentiment",
					"text": "text"
				},
				"hosts": [
					"https://api.geneea.com"
				],
				"topics": [
					"text"
				],
				"schemes": [
					"https"
				]
			}
		},
		{
			"group": "geneea-natural-language-processing-1-0",
			"url_pattern": "/s1/topic",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://api.geneea.com"
			],
			"query_string_params": [
				"extractor",
				"language",
				"returnTextInfo",
				"text",
				"url"
			],
			"whitelist": [
				"confidence",
				"labels",
				"language",
				"text",
				"topic"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "geneea.com",
				"description": "\u003cdiv class=\"api-description\"\u003e\n    \u003ch2\u003eAuthentication\u003c/h2\u003e\n    \u003cp\u003eFor all calls, supply your API key. \u003ca href=\"https://www.geneea.com/pricing\"\u003eSign up to \u003cem\u003eobtain the key\u003c/em\u003e\u003c/a\u003e.\u003c/p\u003e\n    \u003cp\u003e\n        Our API supports both \u003cem\u003eunencrypted (HTTP)\u003c/em\u003e and \u003cem\u003eencrypted (HTTPS)\u003c/em\u003e protocols.\n        However, for security reasons, we strongly encourage using only the encrypted version.\n    \u003c/p\u003e\n    \u003cp\u003eThe API key should be supplied as either a request parameter \u003ccode\u003euser_key\u003c/code\u003e or in \u003ccode\u003eAuthorization\u003c/code\u003e header.\u003c/p\u003e\n    \u003cpre\u003e\u003ccode\u003eAuthorization: user_key \u0026lt;YOUR_API_KEY\u0026gt;\u003c/code\u003e\u003c/pre\u003e\n\n    \u003ch2\u003eAPI operations\u003c/h2\u003e\n    \u003cp\u003e\n        All API operations can perform analysis on supplied raw text or on text extracted from a given URL.\n        Optionally, one can supply additional information which can make the result more precise. An example\n        of such information would be the language of text or a particular text extractor for URL resources.\n    \u003c/p\u003e\n    \u003cp\u003eThe supported types of analyses are:\u003c/p\u003e\n    \u003cul\u003e\n        \u003cli\u003e\u003cstrong\u003elemmatization\u003c/strong\u003e \u0026longrightarrow;\n            Finds out lemmata (basic forms) of all the words in the document.\n        \u003c/li\u003e\n        \u003cli\u003e\u003cstrong\u003ecorrection\u003c/strong\u003e \u0026longrightarrow;\n            Performs correction (diacritization) on all the words in the document.\n        \u003c/li\u003e\n        \u003cli\u003e\u003cstrong\u003etopic detection\u003c/strong\u003e \u0026longrightarrow;\n            Determines a topic of the document, e.g. finance or sports.\n        \u003c/li\u003e\n        \u003cli\u003e\u003cstrong\u003esentiment analysis\u003c/strong\u003e \u0026longrightarrow;\n            Determines a sentiment of the document, i.e. how positive or negative the document is.\n        \u003c/li\u003e\n        \u003cli\u003e\u003cstrong\u003enamed entity recognition\u003c/strong\u003e \u0026longrightarrow;\n            Finds named entities (like person, location, date etc.) mentioned the the document.\n        \u003c/li\u003e\n    \u003c/ul\u003e\n\n    \u003ch2\u003eEncoding\u003c/h2\u003e\n    \u003cp\u003eThe supplied text is expected to be in UTF-8 encoding, this is especially important for non-english texts.\u003c/p\u003e\n\n    \u003ch2\u003eReturned values\u003c/h2\u003e\n    \u003cp\u003eThe API calls always return objects in serialized JSON format in UTF-8 encoding.\u003c/p\u003e\n    \u003cp\u003e\n        If any error occurs, the HTTP response code will be in the range \u003ccode\u003e4xx\u003c/code\u003e (client-side error) or\n        \u003ccode\u003e5xx\u003c/code\u003e (server-side error). In this situation, the body of the response will contain information\n        about the error in JSON format, with \u003ccode\u003eexception\u003c/code\u003e and \u003ccode\u003emessage\u003c/code\u003e values.\n    \u003c/p\u003e\n\n    \u003ch2\u003eURL limitations\u003c/h2\u003e\n    \u003cp\u003e\n        All the requests are semantically \u003ccode\u003eGET\u003c/code\u003e. However, for longer texts, you may run into issues\n        with URL length limit. Therefore, it's possible to always issue a \u003ccode\u003ePOST\u003c/code\u003e request with all\n        the parameters encoded as a JSON in the request body.\n    \u003c/p\u003e\n    \u003cp\u003eExample:\u003c/p\u003e\n    \u003cpre\u003e\u003ccode\u003e\n        POST /s1/sentiment\n        Content-Type: application/json\n\n        {\"text\":\"There is no harm in being sometimes wrong - especially if one is promptly found out.\"}\n    \u003c/code\u003e\u003c/pre\u003e\n    \u003cp\u003eThis is equivalent to \u003ccode\u003eGET /s1/sentiment?text=There%20is%20no%20harm...\u003c/code\u003e\u003c/p\u003e\n\n    \u003ch2\u003eRequest limitations\u003c/h2\u003e\n    \u003cp\u003e\n        The API has other limitations concerning the size of the HTTP requests. The maximum allowed size of any\n        POST request body is \u003cem\u003e512 KiB\u003c/em\u003e. For request with a URL resource, the maximum allowed number of\n        extracted characters from each such resource is \u003cem\u003e100,000\u003c/em\u003e.\n    \u003c/p\u003e\n\n    \u003ch2\u003eTerms of Service\u003c/h2\u003e\n    \u003cp\u003e\n        By using the API, you agree to our\n        \u003ca href=\"https://www.geneea.com/terms.html\" target=\"_blank\"\u003eTerms of Service Agreement\u003c/a\u003e.\n    \u003c/p\u003e\n\n    \u003ch2\u003eMore information\u003c/h2\u003e\n    \u003cp\u003e\n        \u003ca href=\"https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation\" target=\"_blank\"\u003e\n        The Interpretor Public Documentation\n        \u003c/a\u003e\n    \u003c/p\u003e\n\u003c/div\u003e\n",
				"version": "1.0",
				"slug": "geneea-natural-language-processing-1-0-s1-topic",
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"mapping": {
					"confidence": "confidence",
					"labels": "labels",
					"language": "language",
					"text": "text",
					"topic": "topic"
				},
				"hosts": [
					"https://api.geneea.com"
				],
				"topics": [
					"text"
				],
				"schemes": [
					"https"
				]
			}
		}
	]
}