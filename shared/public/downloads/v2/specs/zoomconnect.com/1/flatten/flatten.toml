basePath = "/app"
"consumes.length" = 2
"consumes[0]" = "application/json"
"consumes[1]" = "application/xml"
"definitions.Link.properties.href.type" = "string"
"definitions.Link.properties.rel.type" = "string"
"definitions.Link.properties.templated.type" = "boolean"
"definitions.RestErrorDTO.description" = "RestErrorDTO"
"definitions.RestErrorDTO.properties.code.format" = "int32"
"definitions.RestErrorDTO.properties.code.type" = "integer"
"definitions.RestErrorDTO.properties.developerMessage.type" = "string"
"definitions.RestErrorDTO.properties.message.type" = "string"
"definitions.RestErrorDTO.properties.moreInfoUrl.type" = "string"
"definitions.RestErrorDTO.properties.status.type" = "string"
"definitions.WebServiceAccount.description" = "WebServiceAccount"
"definitions.WebServiceAccount.properties.creditBalance.format" = "double"
"definitions.WebServiceAccount.properties.creditBalance.type" = "number"
"definitions.WebServiceAccount.properties.links.items.$ref" = "#/definitions/Link"
"definitions.WebServiceAccount.properties.links.type" = "array"
"definitions.WebServiceContact.description" = "WebServiceContact"
"definitions.WebServiceContact.properties.contactId.type" = "string"
"definitions.WebServiceContact.properties.contactNumber.type" = "string"
"definitions.WebServiceContact.properties.firstName.type" = "string"
"definitions.WebServiceContact.properties.lastName.type" = "string"
"definitions.WebServiceContact.properties.links.items.$ref" = "#/definitions/Link"
"definitions.WebServiceContact.properties.links.type" = "array"
"definitions.WebServiceContact.properties.title.type" = "string"
"definitions.WebServiceContactLink.description" = "WebServiceContactLink"
"definitions.WebServiceContactLink.properties.contactId.type" = "string"
"definitions.WebServiceContactLink.properties.links.items.$ref" = "#/definitions/Link"
"definitions.WebServiceContactLink.properties.links.type" = "array"
"definitions.WebServiceContacts.description" = "WebServiceContacts"
"definitions.WebServiceContacts.properties.links.items.$ref" = "#/definitions/Link"
"definitions.WebServiceContacts.properties.links.type" = "array"
"definitions.WebServiceContacts.properties.webServiceContacts.items.$ref" = "#/definitions/WebServiceContact"
"definitions.WebServiceContacts.properties.webServiceContacts.type" = "array"
"definitions.WebServiceGroup.description" = "WebServiceGroup"
"definitions.WebServiceGroup.properties.groupId.type" = "string"
"definitions.WebServiceGroup.properties.links.items.$ref" = "#/definitions/Link"
"definitions.WebServiceGroup.properties.links.type" = "array"
"definitions.WebServiceGroup.properties.name.type" = "string"
"definitions.WebServiceGroups.description" = "WebServiceGroups"
"definitions.WebServiceGroups.properties.links.items.$ref" = "#/definitions/Link"
"definitions.WebServiceGroups.properties.links.type" = "array"
"definitions.WebServiceGroups.properties.webServiceGroups.items.$ref" = "#/definitions/WebServiceGroup"
"definitions.WebServiceGroups.properties.webServiceGroups.type" = "array"
"definitions.WebServiceMessage.description" = "WebServiceMessage"
"definitions.WebServiceMessage.properties.campaign.type" = "string"
"definitions.WebServiceMessage.properties.contact.$ref" = "#/definitions/WebServiceContactLink"
"definitions.WebServiceMessage.properties.creditCost.format" = "double"
"definitions.WebServiceMessage.properties.creditCost.type" = "number"
"definitions.WebServiceMessage.properties.dateTimeReceived.format" = "date-time"
"definitions.WebServiceMessage.properties.dateTimeReceived.type" = "string"
"definitions.WebServiceMessage.properties.dateTimeScheduled.format" = "date-time"
"definitions.WebServiceMessage.properties.dateTimeScheduled.type" = "string"
"definitions.WebServiceMessage.properties.dateTimeSent.format" = "date-time"
"definitions.WebServiceMessage.properties.dateTimeSent.type" = "string"
"definitions.WebServiceMessage.properties.deleted.type" = "boolean"
"definitions.WebServiceMessage.properties.fromNumber.type" = "string"
"definitions.WebServiceMessage.properties.links.items.$ref" = "#/definitions/Link"
"definitions.WebServiceMessage.properties.links.type" = "array"
"definitions.WebServiceMessage.properties.message.type" = "string"
"definitions.WebServiceMessage.properties.messageId.type" = "string"
"definitions.WebServiceMessage.properties.messageStatus.type" = "string"
"definitions.WebServiceMessage.properties.messageType.type" = "string"
"definitions.WebServiceMessage.properties.numberOfMessages.format" = "int32"
"definitions.WebServiceMessage.properties.numberOfMessages.type" = "integer"
"definitions.WebServiceMessage.properties.read.type" = "boolean"
"definitions.WebServiceMessage.properties.toNumber.type" = "string"
"definitions.WebServiceMessage.properties.userDataField.type" = "string"
"definitions.WebServiceMessages.description" = "WebServiceMessages"
"definitions.WebServiceMessages.properties.elements.format" = "int32"
"definitions.WebServiceMessages.properties.elements.type" = "integer"
"definitions.WebServiceMessages.properties.links.items.$ref" = "#/definitions/Link"
"definitions.WebServiceMessages.properties.links.type" = "array"
"definitions.WebServiceMessages.properties.page.format" = "int32"
"definitions.WebServiceMessages.properties.page.type" = "integer"
"definitions.WebServiceMessages.properties.pageSize.format" = "int32"
"definitions.WebServiceMessages.properties.pageSize.type" = "integer"
"definitions.WebServiceMessages.properties.totalElements.format" = "int64"
"definitions.WebServiceMessages.properties.totalElements.type" = "integer"
"definitions.WebServiceMessages.properties.totalPages.format" = "int32"
"definitions.WebServiceMessages.properties.totalPages.type" = "integer"
"definitions.WebServiceMessages.properties.webServiceMessages.items.$ref" = "#/definitions/WebServiceMessage"
"definitions.WebServiceMessages.properties.webServiceMessages.type" = "array"
"definitions.WebServiceNumberContextLookupRequest.description" = "WebServiceNumberContextLookupRequest"
"definitions.WebServiceNumberContextLookupRequest.properties.links.items.$ref" = "#/definitions/Link"
"definitions.WebServiceNumberContextLookupRequest.properties.links.type" = "array"
"definitions.WebServiceNumberContextLookupRequest.properties.numbers.items.type" = "string"
"definitions.WebServiceNumberContextLookupRequest.properties.numbers.type" = "array"
"definitions.WebServiceNumberContextLookupResponse.description" = "WebServiceNumberContextLookupResponse"
"definitions.WebServiceNumberContextLookupResponse.properties.links.items.$ref" = "#/definitions/Link"
"definitions.WebServiceNumberContextLookupResponse.properties.links.type" = "array"
"definitions.WebServiceNumberContextLookupResponse.properties.number.type" = "string"
"definitions.WebServiceNumberContextLookupResponse.properties.numberValid.type" = "boolean"
"definitions.WebServiceSendSmsRequest.description" = "WebServiceSendSmsRequest"
"definitions.WebServiceSendSmsRequest.properties.campaign.type" = "string"
"definitions.WebServiceSendSmsRequest.properties.dataField.type" = "string"
"definitions.WebServiceSendSmsRequest.properties.dateToSend.format" = "date-time"
"definitions.WebServiceSendSmsRequest.properties.dateToSend.type" = "string"
"definitions.WebServiceSendSmsRequest.properties.message.type" = "string"
"definitions.WebServiceSendSmsRequest.properties.recipientNumber.type" = "string"
"definitions.WebServiceSendSmsRequests.description" = "WebServiceSendSmsRequests"
"definitions.WebServiceSendSmsRequests.properties.defaultDateToSend.format" = "date-time"
"definitions.WebServiceSendSmsRequests.properties.defaultDateToSend.type" = "string"
"definitions.WebServiceSendSmsRequests.properties.messagesPerMinute.format" = "int32"
"definitions.WebServiceSendSmsRequests.properties.messagesPerMinute.type" = "integer"
"definitions.WebServiceSendSmsRequests.properties.sendSmsRequests.items.$ref" = "#/definitions/WebServiceSendSmsRequest"
"definitions.WebServiceSendSmsRequests.properties.sendSmsRequests.type" = "array"
"definitions.WebServiceSendSmsResponse.description" = "WebServiceSendSmsResponse"
"definitions.WebServiceSendSmsResponse.properties.error.type" = "string"
"definitions.WebServiceSendSmsResponse.properties.messageId.type" = "string"
"definitions.WebServiceSendSmsResponses.description" = "WebServiceSendSmsResponses"
"definitions.WebServiceSendSmsResponses.properties.sendSmsResponses.items.$ref" = "#/definitions/WebServiceSendSmsResponse"
"definitions.WebServiceSendSmsResponses.properties.sendSmsResponses.type" = "array"
"definitions.WebServiceTemplate.description" = "WebServiceTemplate"
"definitions.WebServiceTemplate.properties.data.type" = "string"
"definitions.WebServiceTemplate.properties.links.items.$ref" = "#/definitions/Link"
"definitions.WebServiceTemplate.properties.links.type" = "array"
"definitions.WebServiceTemplate.properties.name.type" = "string"
"definitions.WebServiceTemplate.properties.templateId.format" = "int64"
"definitions.WebServiceTemplate.properties.templateId.type" = "integer"
"definitions.WebServiceTemplates.description" = "WebServiceTemplates"
"definitions.WebServiceTemplates.properties.links.items.$ref" = "#/definitions/Link"
"definitions.WebServiceTemplates.properties.links.type" = "array"
"definitions.WebServiceTemplates.properties.webServiceTemplates.items.$ref" = "#/definitions/WebServiceTemplate"
"definitions.WebServiceTemplates.properties.webServiceTemplates.type" = "array"
"definitions.WebServiceTransferCreditsRequest.description" = "WebServiceTransferCreditsRequest"
"definitions.WebServiceTransferCreditsRequest.properties.numberOfCreditsToTransfer.format" = "int32"
"definitions.WebServiceTransferCreditsRequest.properties.numberOfCreditsToTransfer.type" = "integer"
"definitions.WebServiceTransferCreditsRequest.properties.transferFromEmailAddress.type" = "string"
"definitions.WebServiceTransferCreditsRequest.properties.transferToEmailAddress.type" = "string"
"definitions.WebServiceUser.description" = "WebServiceUser"
"definitions.WebServiceUser.properties.company.type" = "string"
"definitions.WebServiceUser.properties.contactNumber.type" = "string"
"definitions.WebServiceUser.properties.creditBalance.format" = "double"
"definitions.WebServiceUser.properties.creditBalance.type" = "number"
"definitions.WebServiceUser.properties.emailAddress.type" = "string"
"definitions.WebServiceUser.properties.firstName.type" = "string"
"definitions.WebServiceUser.properties.lastName.type" = "string"
"definitions.WebServiceUser.properties.password.type" = "string"
"definitions.WebServiceUser.properties.userId.format" = "int64"
"definitions.WebServiceUser.properties.userId.type" = "integer"
"definitions.WebServiceUsers.description" = "WebServiceUsers"
"definitions.WebServiceUsers.properties.webServiceUserList.items.$ref" = "#/definitions/WebServiceUser"
"definitions.WebServiceUsers.properties.webServiceUserList.type" = "array"
host = "www.zoomconnect.com"
"info.description" = "The world's greatest SMS API"
"info.title" = "Zoom Connect"
"info.version" = "1"
"info.x-apisguru-categories.length" = 2
"info.x-apisguru-categories[0]" = "messaging"
"info.x-apisguru-categories[1]" = "marketing"
"info.x-logo.url" = "https://api.apis.guru/v2/cache/logo/http_zoomconnect.com_assets_logo.png"
"info.x-origin.length" = 1
"info.x-origin[0].converter.url" = "https://github.com/lucybot/api-spec-converter"
"info.x-origin[0].converter.version" = "2.5.0"
"info.x-origin[0].format" = "swagger"
"info.x-origin[0].url" = "https://www.zoomconnect.com/zoom/api-docs"
"info.x-origin[0].version" = "1.2"
"info.x-preferred" = true
"info.x-providerName" = "zoomconnect.com"
"info.x-tags.length" = 2
"info.x-tags[0]" = "SMS"
"info.x-tags[1]" = "bulk SMS"
"paths./api/rest/v1/account/balance.get.deprecated" = false
"paths./api/rest/v1/account/balance.get.description" = "Returns your account's credit balance"
"paths./api/rest/v1/account/balance.get.operationId" = "getBalance"
"paths./api/rest/v1/account/balance.get.responses.200.description" = "Success"
"paths./api/rest/v1/account/balance.get.responses.200.schema.$ref" = "#/definitions/WebServiceAccount"
"paths./api/rest/v1/account/balance.get.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/account/balance.get.responses.403.description" = "Forbidden"
"paths./api/rest/v1/account/balance.get.responses.404.description" = "Not Found"
"paths./api/rest/v1/account/balance.get.summary" = "balance"
"paths./api/rest/v1/account/balance.get.tags.length" = 1
"paths./api/rest/v1/account/balance.get.tags[0]" = "account"
"paths./api/rest/v1/account/transfer.post.deprecated" = false
"paths./api/rest/v1/account/transfer.post.description" = "Transfers credits between two users in the same team. The <i>account email address</i> fields as well as the <i>number of credits to transfer</i> are required. "
"paths./api/rest/v1/account/transfer.post.operationId" = "transfer"
"paths./api/rest/v1/account/transfer.post.parameters.length" = 1
"paths./api/rest/v1/account/transfer.post.parameters[0].description" = "request"
"paths./api/rest/v1/account/transfer.post.parameters[0].in" = "body"
"paths./api/rest/v1/account/transfer.post.parameters[0].name" = "body"
"paths./api/rest/v1/account/transfer.post.parameters[0].required" = false
"paths./api/rest/v1/account/transfer.post.parameters[0].schema.$ref" = "#/definitions/WebServiceTransferCreditsRequest"
"paths./api/rest/v1/account/transfer.post.responses.200.description" = "Description was not specified"
"paths./api/rest/v1/account/transfer.post.responses.201.description" = "Created"
"paths./api/rest/v1/account/transfer.post.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/account/transfer.post.responses.403.description" = "Forbidden"
"paths./api/rest/v1/account/transfer.post.responses.404.description" = "Not Found"
"paths./api/rest/v1/account/transfer.post.summary" = "transfer"
"paths./api/rest/v1/account/transfer.post.tags.length" = 1
"paths./api/rest/v1/account/transfer.post.tags[0]" = "account"
"paths./api/rest/v1/account/user.get.deprecated" = false
"paths./api/rest/v1/account/user.get.description" = "Find a user for a particular email address"
"paths./api/rest/v1/account/user.get.operationId" = "search"
"paths./api/rest/v1/account/user.get.parameters.length" = 1
"paths./api/rest/v1/account/user.get.parameters[0].description" = "search by email address"
"paths./api/rest/v1/account/user.get.parameters[0].in" = "query"
"paths./api/rest/v1/account/user.get.parameters[0].name" = "searchEmail"
"paths./api/rest/v1/account/user.get.parameters[0].required" = true
"paths./api/rest/v1/account/user.get.parameters[0].type" = "string"
"paths./api/rest/v1/account/user.get.responses.200.description" = "OK"
"paths./api/rest/v1/account/user.get.responses.200.schema.$ref" = "#/definitions/WebServiceUsers"
"paths./api/rest/v1/account/user.get.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/account/user.get.responses.403.description" = "Forbidden"
"paths./api/rest/v1/account/user.get.responses.404.description" = "Not Found"
"paths./api/rest/v1/account/user.get.summary" = "search"
"paths./api/rest/v1/account/user.get.tags.length" = 1
"paths./api/rest/v1/account/user.get.tags[0]" = "account"
"paths./api/rest/v1/account/user.put.deprecated" = false
"paths./api/rest/v1/account/user.put.description" = "Creates a new sub-account in your team. The following fields are required <i>firstname, lastname, email address, contact number</i> and <i>password.</i>"
"paths./api/rest/v1/account/user.put.parameters.length" = 1
"paths./api/rest/v1/account/user.put.parameters[0].description" = "request"
"paths./api/rest/v1/account/user.put.parameters[0].in" = "body"
"paths./api/rest/v1/account/user.put.parameters[0].name" = "body"
"paths./api/rest/v1/account/user.put.parameters[0].required" = false
"paths./api/rest/v1/account/user.put.parameters[0].schema.$ref" = "#/definitions/WebServiceUser"
"paths./api/rest/v1/account/user.put.responses.200.description" = "Description was not specified"
"paths./api/rest/v1/account/user.put.responses.200.schema.$ref" = "#/definitions/WebServiceUser"
"paths./api/rest/v1/account/user.put.responses.201.description" = "Created"
"paths./api/rest/v1/account/user.put.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/account/user.put.responses.403.description" = "Forbidden"
"paths./api/rest/v1/account/user.put.responses.404.description" = "Not Found"
"paths./api/rest/v1/account/user.put.summary" = "create"
"paths./api/rest/v1/account/user.put.tags.length" = 1
"paths./api/rest/v1/account/user.put.tags[0]" = "account"
"paths./api/rest/v1/account/user/{userId}.get.deprecated" = false
"paths./api/rest/v1/account/user/{userId}.get.description" = "Gets a user from a given user id"
"paths./api/rest/v1/account/user/{userId}.get.operationId" = "getUser"
"paths./api/rest/v1/account/user/{userId}.get.parameters.length" = 1
"paths./api/rest/v1/account/user/{userId}.get.parameters[0].description" = "userId"
"paths./api/rest/v1/account/user/{userId}.get.parameters[0].format" = "int64"
"paths./api/rest/v1/account/user/{userId}.get.parameters[0].in" = "path"
"paths./api/rest/v1/account/user/{userId}.get.parameters[0].name" = "userId"
"paths./api/rest/v1/account/user/{userId}.get.parameters[0].required" = true
"paths./api/rest/v1/account/user/{userId}.get.parameters[0].type" = "integer"
"paths./api/rest/v1/account/user/{userId}.get.responses.200.description" = "OK"
"paths./api/rest/v1/account/user/{userId}.get.responses.200.schema.$ref" = "#/definitions/WebServiceUser"
"paths./api/rest/v1/account/user/{userId}.get.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/account/user/{userId}.get.responses.403.description" = "Forbidden"
"paths./api/rest/v1/account/user/{userId}.get.responses.404.description" = "Not Found"
"paths./api/rest/v1/account/user/{userId}.get.summary" = "getUser"
"paths./api/rest/v1/account/user/{userId}.get.tags.length" = 1
"paths./api/rest/v1/account/user/{userId}.get.tags[0]" = "account"
"paths./api/rest/v1/account/user/{userId}.post.deprecated" = false
"paths./api/rest/v1/account/user/{userId}.post.description" = "Updates a sub-account in your team. The following fields can be updated <i>firstname, lastname, contact number</i> and <i>password.</i>"
"paths./api/rest/v1/account/user/{userId}.post.parameters.length" = 2
"paths./api/rest/v1/account/user/{userId}.post.parameters[0].description" = "userId"
"paths./api/rest/v1/account/user/{userId}.post.parameters[0].format" = "int64"
"paths./api/rest/v1/account/user/{userId}.post.parameters[0].in" = "path"
"paths./api/rest/v1/account/user/{userId}.post.parameters[0].name" = "userId"
"paths./api/rest/v1/account/user/{userId}.post.parameters[0].required" = true
"paths./api/rest/v1/account/user/{userId}.post.parameters[0].type" = "integer"
"paths./api/rest/v1/account/user/{userId}.post.parameters[1].description" = "request"
"paths./api/rest/v1/account/user/{userId}.post.parameters[1].in" = "body"
"paths./api/rest/v1/account/user/{userId}.post.parameters[1].name" = "body"
"paths./api/rest/v1/account/user/{userId}.post.parameters[1].required" = false
"paths./api/rest/v1/account/user/{userId}.post.parameters[1].schema.$ref" = "#/definitions/WebServiceUser"
"paths./api/rest/v1/account/user/{userId}.post.responses.200.description" = "Description was not specified"
"paths./api/rest/v1/account/user/{userId}.post.responses.200.schema.$ref" = "#/definitions/WebServiceUser"
"paths./api/rest/v1/account/user/{userId}.post.responses.201.description" = "Created"
"paths./api/rest/v1/account/user/{userId}.post.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/account/user/{userId}.post.responses.403.description" = "Forbidden"
"paths./api/rest/v1/account/user/{userId}.post.responses.404.description" = "Not Found"
"paths./api/rest/v1/account/user/{userId}.post.summary" = "update"
"paths./api/rest/v1/account/user/{userId}.post.tags.length" = 1
"paths./api/rest/v1/account/user/{userId}.post.tags[0]" = "account"
"paths./api/rest/v1/contacts/all.get.deprecated" = false
"paths./api/rest/v1/contacts/all.get.description" = "Returns all contacts"
"paths./api/rest/v1/contacts/all.get.responses.200.description" = "OK"
"paths./api/rest/v1/contacts/all.get.responses.200.schema.$ref" = "#/definitions/WebServiceContacts"
"paths./api/rest/v1/contacts/all.get.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/contacts/all.get.responses.403.description" = "Forbidden"
"paths./api/rest/v1/contacts/all.get.responses.404.description" = "Not Found"
"paths./api/rest/v1/contacts/all.get.summary" = "all"
"paths./api/rest/v1/contacts/all.get.tags.length" = 1
"paths./api/rest/v1/contacts/all.get.tags[0]" = "contacts"
"paths./api/rest/v1/contacts/create.post.deprecated" = false
"paths./api/rest/v1/contacts/create.post.description" = "Creates a  contact"
"paths./api/rest/v1/contacts/create.post.parameters.length" = 1
"paths./api/rest/v1/contacts/create.post.parameters[0].description" = "webServiceContact"
"paths./api/rest/v1/contacts/create.post.parameters[0].in" = "body"
"paths./api/rest/v1/contacts/create.post.parameters[0].name" = "body"
"paths./api/rest/v1/contacts/create.post.parameters[0].required" = false
"paths./api/rest/v1/contacts/create.post.parameters[0].schema.$ref" = "#/definitions/WebServiceContact"
"paths./api/rest/v1/contacts/create.post.responses.200.description" = "No response was specified"
"paths./api/rest/v1/contacts/create.post.responses.200.schema.$ref" = "#/definitions/WebServiceContact"
"paths./api/rest/v1/contacts/create.post.responses.201.description" = "Created"
"paths./api/rest/v1/contacts/create.post.responses.201.schema.$ref" = "#/definitions/WebServiceContact"
"paths./api/rest/v1/contacts/create.post.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/contacts/create.post.responses.403.description" = "Forbidden"
"paths./api/rest/v1/contacts/create.post.responses.404.description" = "Not Found"
"paths./api/rest/v1/contacts/create.post.summary" = "create"
"paths./api/rest/v1/contacts/create.post.tags.length" = 1
"paths./api/rest/v1/contacts/create.post.tags[0]" = "contacts"
"paths./api/rest/v1/contacts/{contactId}.delete.deprecated" = false
"paths./api/rest/v1/contacts/{contactId}.delete.description" = "Deletes a  contact"
"paths./api/rest/v1/contacts/{contactId}.delete.parameters.length" = 1
"paths./api/rest/v1/contacts/{contactId}.delete.parameters[0].description" = "contactId"
"paths./api/rest/v1/contacts/{contactId}.delete.parameters[0].in" = "path"
"paths./api/rest/v1/contacts/{contactId}.delete.parameters[0].name" = "contactId"
"paths./api/rest/v1/contacts/{contactId}.delete.parameters[0].required" = true
"paths./api/rest/v1/contacts/{contactId}.delete.parameters[0].type" = "string"
"paths./api/rest/v1/contacts/{contactId}.delete.responses.200.description" = "Description was not specified"
"paths./api/rest/v1/contacts/{contactId}.delete.responses.204.description" = "No Content"
"paths./api/rest/v1/contacts/{contactId}.delete.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/contacts/{contactId}.delete.responses.403.description" = "Forbidden"
"paths./api/rest/v1/contacts/{contactId}.delete.summary" = "delete"
"paths./api/rest/v1/contacts/{contactId}.delete.tags.length" = 1
"paths./api/rest/v1/contacts/{contactId}.delete.tags[0]" = "contacts"
"paths./api/rest/v1/contacts/{contactId}.get.deprecated" = false
"paths./api/rest/v1/contacts/{contactId}.get.description" = "Returns details for a single contact"
"paths./api/rest/v1/contacts/{contactId}.get.parameters.length" = 1
"paths./api/rest/v1/contacts/{contactId}.get.parameters[0].description" = "contactId"
"paths./api/rest/v1/contacts/{contactId}.get.parameters[0].in" = "path"
"paths./api/rest/v1/contacts/{contactId}.get.parameters[0].name" = "contactId"
"paths./api/rest/v1/contacts/{contactId}.get.parameters[0].required" = true
"paths./api/rest/v1/contacts/{contactId}.get.parameters[0].type" = "string"
"paths./api/rest/v1/contacts/{contactId}.get.responses.200.description" = "OK"
"paths./api/rest/v1/contacts/{contactId}.get.responses.200.schema.$ref" = "#/definitions/WebServiceContact"
"paths./api/rest/v1/contacts/{contactId}.get.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/contacts/{contactId}.get.responses.403.description" = "Forbidden"
"paths./api/rest/v1/contacts/{contactId}.get.responses.404.description" = "Not Found"
"paths./api/rest/v1/contacts/{contactId}.get.summary" = "get"
"paths./api/rest/v1/contacts/{contactId}.get.tags.length" = 1
"paths./api/rest/v1/contacts/{contactId}.get.tags[0]" = "contacts"
"paths./api/rest/v1/contacts/{contactId}.post.deprecated" = false
"paths./api/rest/v1/contacts/{contactId}.post.description" = "Updates a  contact"
"paths./api/rest/v1/contacts/{contactId}.post.parameters.length" = 2
"paths./api/rest/v1/contacts/{contactId}.post.parameters[0].description" = "contactId"
"paths./api/rest/v1/contacts/{contactId}.post.parameters[0].in" = "path"
"paths./api/rest/v1/contacts/{contactId}.post.parameters[0].name" = "contactId"
"paths./api/rest/v1/contacts/{contactId}.post.parameters[0].required" = true
"paths./api/rest/v1/contacts/{contactId}.post.parameters[0].type" = "string"
"paths./api/rest/v1/contacts/{contactId}.post.parameters[1].description" = "webServiceContact"
"paths./api/rest/v1/contacts/{contactId}.post.parameters[1].in" = "body"
"paths./api/rest/v1/contacts/{contactId}.post.parameters[1].name" = "body"
"paths./api/rest/v1/contacts/{contactId}.post.parameters[1].required" = false
"paths./api/rest/v1/contacts/{contactId}.post.parameters[1].schema.$ref" = "#/definitions/WebServiceContact"
"paths./api/rest/v1/contacts/{contactId}.post.responses.200.description" = "Description was not specified"
"paths./api/rest/v1/contacts/{contactId}.post.responses.200.schema.$ref" = "#/definitions/WebServiceContact"
"paths./api/rest/v1/contacts/{contactId}.post.responses.201.description" = "Created"
"paths./api/rest/v1/contacts/{contactId}.post.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/contacts/{contactId}.post.responses.403.description" = "Forbidden"
"paths./api/rest/v1/contacts/{contactId}.post.responses.404.description" = "Not Found"
"paths./api/rest/v1/contacts/{contactId}.post.summary" = "update"
"paths./api/rest/v1/contacts/{contactId}.post.tags.length" = 1
"paths./api/rest/v1/contacts/{contactId}.post.tags[0]" = "contacts"
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.get.deprecated" = false
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.get.description" = "Remove a contact from a group"
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.get.parameters.length" = 2
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.get.parameters[0].description" = "contactId"
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.get.parameters[0].in" = "path"
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.get.parameters[0].name" = "contactId"
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.get.parameters[0].required" = true
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.get.parameters[0].type" = "string"
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.get.parameters[1].description" = "groupId"
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.get.parameters[1].in" = "path"
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.get.parameters[1].name" = "groupId"
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.get.parameters[1].required" = true
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.get.parameters[1].type" = "string"
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.get.responses.200.description" = "OK"
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.get.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.get.responses.403.description" = "Forbidden"
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.get.responses.404.description" = "Not Found"
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.get.summary" = "removeFromGroup"
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.get.tags.length" = 1
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.get.tags[0]" = "contacts"
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.post.deprecated" = false
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.post.description" = "Remove a contact from a group"
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.post.parameters.length" = 2
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.post.parameters[0].description" = "contactId"
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.post.parameters[0].in" = "path"
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.post.parameters[0].name" = "contactId"
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.post.parameters[0].required" = true
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.post.parameters[0].type" = "string"
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.post.parameters[1].description" = "groupId"
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.post.parameters[1].in" = "path"
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.post.parameters[1].name" = "groupId"
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.post.parameters[1].required" = true
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.post.parameters[1].type" = "string"
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.post.responses.200.description" = "Description was not specified"
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.post.responses.201.description" = "Created"
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.post.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.post.responses.403.description" = "Forbidden"
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.post.responses.404.description" = "Not Found"
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.post.summary" = "removeFromGroup"
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.post.tags.length" = 1
"paths./api/rest/v1/contacts/{contactId}/addFromGroup/{groupId}.post.tags[0]" = "contacts"
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.get.deprecated" = false
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.get.description" = "Add a contact to a group"
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.get.parameters.length" = 2
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.get.parameters[0].description" = "contactId"
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.get.parameters[0].in" = "path"
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.get.parameters[0].name" = "contactId"
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.get.parameters[0].required" = true
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.get.parameters[0].type" = "string"
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.get.parameters[1].description" = "groupId"
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.get.parameters[1].in" = "path"
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.get.parameters[1].name" = "groupId"
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.get.parameters[1].required" = true
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.get.parameters[1].type" = "string"
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.get.responses.200.description" = "OK"
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.get.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.get.responses.403.description" = "Forbidden"
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.get.responses.404.description" = "Not Found"
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.get.summary" = "addToGroup"
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.get.tags.length" = 1
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.get.tags[0]" = "contacts"
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.post.deprecated" = false
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.post.description" = "Add a contact to a group"
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.post.parameters.length" = 2
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.post.parameters[0].description" = "contactId"
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.post.parameters[0].in" = "path"
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.post.parameters[0].name" = "contactId"
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.post.parameters[0].required" = true
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.post.parameters[0].type" = "string"
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.post.parameters[1].description" = "groupId"
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.post.parameters[1].in" = "path"
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.post.parameters[1].name" = "groupId"
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.post.parameters[1].required" = true
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.post.parameters[1].type" = "string"
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.post.responses.200.description" = "Description was not specified"
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.post.responses.201.description" = "Created"
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.post.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.post.responses.403.description" = "Forbidden"
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.post.responses.404.description" = "Not Found"
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.post.summary" = "addToGroup"
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.post.tags.length" = 1
"paths./api/rest/v1/contacts/{contactId}/addToGroup/{groupId}.post.tags[0]" = "contacts"
"paths./api/rest/v1/context/lookup.get.deprecated" = false
"paths./api/rest/v1/context/lookup.get.description" = "Returns context information for a single provided"
"paths./api/rest/v1/context/lookup.get.parameters.length" = 1
"paths./api/rest/v1/context/lookup.get.parameters[0].description" = "number"
"paths./api/rest/v1/context/lookup.get.parameters[0].in" = "body"
"paths./api/rest/v1/context/lookup.get.parameters[0].name" = "body"
"paths./api/rest/v1/context/lookup.get.parameters[0].required" = false
"paths./api/rest/v1/context/lookup.get.parameters[0].schema.type" = "string"
"paths./api/rest/v1/context/lookup.get.responses.200.description" = "Success"
"paths./api/rest/v1/context/lookup.get.responses.200.schema.$ref" = "#/definitions/WebServiceNumberContextLookupResponse"
"paths./api/rest/v1/context/lookup.get.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/context/lookup.get.responses.403.description" = "Forbidden"
"paths./api/rest/v1/context/lookup.get.responses.404.description" = "Not Found"
"paths./api/rest/v1/context/lookup.get.summary" = "lookup"
"paths./api/rest/v1/context/lookup.get.tags.length" = 1
"paths./api/rest/v1/context/lookup.get.tags[0]" = "context"
"paths./api/rest/v1/context/lookup.post.deprecated" = false
"paths./api/rest/v1/context/lookup.post.description" = "Returns context information for a single provided"
"paths./api/rest/v1/context/lookup.post.parameters.length" = 1
"paths./api/rest/v1/context/lookup.post.parameters[0].description" = "number"
"paths./api/rest/v1/context/lookup.post.parameters[0].in" = "body"
"paths./api/rest/v1/context/lookup.post.parameters[0].name" = "body"
"paths./api/rest/v1/context/lookup.post.parameters[0].required" = false
"paths./api/rest/v1/context/lookup.post.parameters[0].schema.type" = "string"
"paths./api/rest/v1/context/lookup.post.responses.200.description" = "Success"
"paths./api/rest/v1/context/lookup.post.responses.200.schema.$ref" = "#/definitions/WebServiceNumberContextLookupResponse"
"paths./api/rest/v1/context/lookup.post.responses.201.description" = "Created"
"paths./api/rest/v1/context/lookup.post.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/context/lookup.post.responses.403.description" = "Forbidden"
"paths./api/rest/v1/context/lookup.post.responses.404.description" = "Not Found"
"paths./api/rest/v1/context/lookup.post.summary" = "lookup"
"paths./api/rest/v1/context/lookup.post.tags.length" = 1
"paths./api/rest/v1/context/lookup.post.tags[0]" = "context"
"paths./api/rest/v1/groups/all.get.deprecated" = false
"paths./api/rest/v1/groups/all.get.description" = "Returns all groups"
"paths./api/rest/v1/groups/all.get.responses.200.description" = "OK"
"paths./api/rest/v1/groups/all.get.responses.200.schema.$ref" = "#/definitions/WebServiceGroups"
"paths./api/rest/v1/groups/all.get.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/groups/all.get.responses.403.description" = "Forbidden"
"paths./api/rest/v1/groups/all.get.responses.404.description" = "Not Found"
"paths./api/rest/v1/groups/all.get.summary" = "all"
"paths./api/rest/v1/groups/all.get.tags.length" = 1
"paths./api/rest/v1/groups/all.get.tags[0]" = "groups"
"paths./api/rest/v1/groups/create.post.deprecated" = false
"paths./api/rest/v1/groups/create.post.description" = "Create a  group"
"paths./api/rest/v1/groups/create.post.parameters.length" = 1
"paths./api/rest/v1/groups/create.post.parameters[0].description" = "webServiceGroup"
"paths./api/rest/v1/groups/create.post.parameters[0].in" = "body"
"paths./api/rest/v1/groups/create.post.parameters[0].name" = "body"
"paths./api/rest/v1/groups/create.post.parameters[0].required" = false
"paths./api/rest/v1/groups/create.post.parameters[0].schema.$ref" = "#/definitions/WebServiceGroup"
"paths./api/rest/v1/groups/create.post.responses.200.description" = "No response was specified"
"paths./api/rest/v1/groups/create.post.responses.200.schema.$ref" = "#/definitions/WebServiceGroup"
"paths./api/rest/v1/groups/create.post.responses.201.description" = "Created"
"paths./api/rest/v1/groups/create.post.responses.201.schema.$ref" = "#/definitions/WebServiceGroup"
"paths./api/rest/v1/groups/create.post.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/groups/create.post.responses.403.description" = "Forbidden"
"paths./api/rest/v1/groups/create.post.responses.404.description" = "Not Found"
"paths./api/rest/v1/groups/create.post.summary" = "create"
"paths./api/rest/v1/groups/create.post.tags.length" = 1
"paths./api/rest/v1/groups/create.post.tags[0]" = "groups"
"paths./api/rest/v1/groups/{groupId}.delete.deprecated" = false
"paths./api/rest/v1/groups/{groupId}.delete.description" = "Deletes a  group"
"paths./api/rest/v1/groups/{groupId}.delete.parameters.length" = 1
"paths./api/rest/v1/groups/{groupId}.delete.parameters[0].description" = "groupId"
"paths./api/rest/v1/groups/{groupId}.delete.parameters[0].in" = "path"
"paths./api/rest/v1/groups/{groupId}.delete.parameters[0].name" = "groupId"
"paths./api/rest/v1/groups/{groupId}.delete.parameters[0].required" = true
"paths./api/rest/v1/groups/{groupId}.delete.parameters[0].type" = "string"
"paths./api/rest/v1/groups/{groupId}.delete.responses.200.description" = "Description was not specified"
"paths./api/rest/v1/groups/{groupId}.delete.responses.204.description" = "No Content"
"paths./api/rest/v1/groups/{groupId}.delete.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/groups/{groupId}.delete.responses.403.description" = "Forbidden"
"paths./api/rest/v1/groups/{groupId}.delete.summary" = "delete"
"paths./api/rest/v1/groups/{groupId}.delete.tags.length" = 1
"paths./api/rest/v1/groups/{groupId}.delete.tags[0]" = "groups"
"paths./api/rest/v1/groups/{groupId}.get.deprecated" = false
"paths./api/rest/v1/groups/{groupId}.get.description" = "Returns details for a single group"
"paths./api/rest/v1/groups/{groupId}.get.parameters.length" = 1
"paths./api/rest/v1/groups/{groupId}.get.parameters[0].description" = "groupId"
"paths./api/rest/v1/groups/{groupId}.get.parameters[0].in" = "path"
"paths./api/rest/v1/groups/{groupId}.get.parameters[0].name" = "groupId"
"paths./api/rest/v1/groups/{groupId}.get.parameters[0].required" = true
"paths./api/rest/v1/groups/{groupId}.get.parameters[0].type" = "string"
"paths./api/rest/v1/groups/{groupId}.get.responses.200.description" = "OK"
"paths./api/rest/v1/groups/{groupId}.get.responses.200.schema.$ref" = "#/definitions/WebServiceGroup"
"paths./api/rest/v1/groups/{groupId}.get.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/groups/{groupId}.get.responses.403.description" = "Forbidden"
"paths./api/rest/v1/groups/{groupId}.get.responses.404.description" = "Not Found"
"paths./api/rest/v1/groups/{groupId}.get.summary" = "get"
"paths./api/rest/v1/groups/{groupId}.get.tags.length" = 1
"paths./api/rest/v1/groups/{groupId}.get.tags[0]" = "groups"
"paths./api/rest/v1/groups/{groupId}.post.deprecated" = false
"paths./api/rest/v1/groups/{groupId}.post.description" = "Update a  group"
"paths./api/rest/v1/groups/{groupId}.post.parameters.length" = 2
"paths./api/rest/v1/groups/{groupId}.post.parameters[0].description" = "groupId"
"paths./api/rest/v1/groups/{groupId}.post.parameters[0].in" = "path"
"paths./api/rest/v1/groups/{groupId}.post.parameters[0].name" = "groupId"
"paths./api/rest/v1/groups/{groupId}.post.parameters[0].required" = true
"paths./api/rest/v1/groups/{groupId}.post.parameters[0].type" = "string"
"paths./api/rest/v1/groups/{groupId}.post.parameters[1].description" = "webServiceGroup"
"paths./api/rest/v1/groups/{groupId}.post.parameters[1].in" = "body"
"paths./api/rest/v1/groups/{groupId}.post.parameters[1].name" = "body"
"paths./api/rest/v1/groups/{groupId}.post.parameters[1].required" = false
"paths./api/rest/v1/groups/{groupId}.post.parameters[1].schema.$ref" = "#/definitions/WebServiceGroup"
"paths./api/rest/v1/groups/{groupId}.post.responses.200.description" = "Description was not specified"
"paths./api/rest/v1/groups/{groupId}.post.responses.200.schema.$ref" = "#/definitions/WebServiceGroup"
"paths./api/rest/v1/groups/{groupId}.post.responses.201.description" = "Created"
"paths./api/rest/v1/groups/{groupId}.post.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/groups/{groupId}.post.responses.403.description" = "Forbidden"
"paths./api/rest/v1/groups/{groupId}.post.responses.404.description" = "Not Found"
"paths./api/rest/v1/groups/{groupId}.post.summary" = "update"
"paths./api/rest/v1/groups/{groupId}.post.tags.length" = 1
"paths./api/rest/v1/groups/{groupId}.post.tags[0]" = "groups"
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.get.deprecated" = false
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.get.description" = "Add a contact to a group"
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.get.parameters.length" = 2
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.get.parameters[0].description" = "groupId"
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.get.parameters[0].in" = "path"
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.get.parameters[0].name" = "groupId"
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.get.parameters[0].required" = true
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.get.parameters[0].type" = "string"
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.get.parameters[1].description" = "contactId"
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.get.parameters[1].in" = "path"
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.get.parameters[1].name" = "contactId"
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.get.parameters[1].required" = true
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.get.parameters[1].type" = "string"
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.get.responses.200.description" = "OK"
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.get.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.get.responses.403.description" = "Forbidden"
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.get.responses.404.description" = "Not Found"
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.get.summary" = "addContact"
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.get.tags.length" = 1
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.get.tags[0]" = "groups"
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.post.deprecated" = false
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.post.description" = "Add a contact to a group"
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.post.parameters.length" = 2
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.post.parameters[0].description" = "groupId"
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.post.parameters[0].in" = "path"
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.post.parameters[0].name" = "groupId"
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.post.parameters[0].required" = true
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.post.parameters[0].type" = "string"
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.post.parameters[1].description" = "contactId"
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.post.parameters[1].in" = "path"
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.post.parameters[1].name" = "contactId"
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.post.parameters[1].required" = true
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.post.parameters[1].type" = "string"
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.post.responses.200.description" = "Description was not specified"
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.post.responses.201.description" = "Created"
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.post.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.post.responses.403.description" = "Forbidden"
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.post.responses.404.description" = "Not Found"
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.post.summary" = "addContact"
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.post.tags.length" = 1
"paths./api/rest/v1/groups/{groupId}/addContact/{contactId}.post.tags[0]" = "groups"
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.get.deprecated" = false
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.get.description" = "Remove a contact from a group"
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.get.parameters.length" = 2
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.get.parameters[0].description" = "groupId"
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.get.parameters[0].in" = "path"
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.get.parameters[0].name" = "groupId"
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.get.parameters[0].required" = true
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.get.parameters[0].type" = "string"
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.get.parameters[1].description" = "contactId"
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.get.parameters[1].in" = "path"
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.get.parameters[1].name" = "contactId"
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.get.parameters[1].required" = true
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.get.parameters[1].type" = "string"
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.get.responses.200.description" = "OK"
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.get.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.get.responses.403.description" = "Forbidden"
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.get.responses.404.description" = "Not Found"
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.get.summary" = "removeContact"
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.get.tags.length" = 1
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.get.tags[0]" = "groups"
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.post.deprecated" = false
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.post.description" = "Remove a contact from a group"
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.post.parameters.length" = 2
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.post.parameters[0].description" = "groupId"
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.post.parameters[0].in" = "path"
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.post.parameters[0].name" = "groupId"
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.post.parameters[0].required" = true
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.post.parameters[0].type" = "string"
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.post.parameters[1].description" = "contactId"
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.post.parameters[1].in" = "path"
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.post.parameters[1].name" = "contactId"
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.post.parameters[1].required" = true
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.post.parameters[1].type" = "string"
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.post.responses.200.description" = "Description was not specified"
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.post.responses.201.description" = "Created"
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.post.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.post.responses.403.description" = "Forbidden"
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.post.responses.404.description" = "Not Found"
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.post.summary" = "removeContact"
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.post.tags.length" = 1
"paths./api/rest/v1/groups/{groupId}/removeContact/{contactId}.post.tags[0]" = "groups"
"paths./api/rest/v1/messages/all.get.deprecated" = false
"paths./api/rest/v1/messages/all.get.description" = "Returns all messages"
"paths./api/rest/v1/messages/all.get.parameters.length" = 15
"paths./api/rest/v1/messages/all.get.parameters[0].default" = 100.0
"paths./api/rest/v1/messages/all.get.parameters[0].description" = "number of elements to return at a time"
"paths./api/rest/v1/messages/all.get.parameters[0].format" = "int32"
"paths./api/rest/v1/messages/all.get.parameters[0].in" = "query"
"paths./api/rest/v1/messages/all.get.parameters[0].name" = "pageSize"
"paths./api/rest/v1/messages/all.get.parameters[0].required" = false
"paths./api/rest/v1/messages/all.get.parameters[0].type" = "integer"
"paths./api/rest/v1/messages/all.get.parameters[10].description" = "search matching message text"
"paths./api/rest/v1/messages/all.get.parameters[10].in" = "query"
"paths./api/rest/v1/messages/all.get.parameters[10].name" = "message"
"paths./api/rest/v1/messages/all.get.parameters[10].required" = false
"paths./api/rest/v1/messages/all.get.parameters[10].type" = "string"
"paths./api/rest/v1/messages/all.get.parameters[11].description" = "search by campaign"
"paths./api/rest/v1/messages/all.get.parameters[11].in" = "query"
"paths./api/rest/v1/messages/all.get.parameters[11].name" = "campaign"
"paths./api/rest/v1/messages/all.get.parameters[11].required" = false
"paths./api/rest/v1/messages/all.get.parameters[11].type" = "string"
"paths./api/rest/v1/messages/all.get.parameters[12].description" = "search by data field"
"paths./api/rest/v1/messages/all.get.parameters[12].in" = "query"
"paths./api/rest/v1/messages/all.get.parameters[12].name" = "dataField"
"paths./api/rest/v1/messages/all.get.parameters[12].required" = false
"paths./api/rest/v1/messages/all.get.parameters[12].type" = "string"
"paths./api/rest/v1/messages/all.get.parameters[13].description" = "return only deleted / not deleted messages"
"paths./api/rest/v1/messages/all.get.parameters[13].in" = "query"
"paths./api/rest/v1/messages/all.get.parameters[13].name" = "deleted"
"paths./api/rest/v1/messages/all.get.parameters[13].required" = false
"paths./api/rest/v1/messages/all.get.parameters[13].type" = "boolean"
"paths./api/rest/v1/messages/all.get.parameters[14].description" = "return only read / unread messages (inbox messages only)"
"paths./api/rest/v1/messages/all.get.parameters[14].in" = "query"
"paths./api/rest/v1/messages/all.get.parameters[14].name" = "read"
"paths./api/rest/v1/messages/all.get.parameters[14].required" = false
"paths./api/rest/v1/messages/all.get.parameters[14].type" = "boolean"
"paths./api/rest/v1/messages/all.get.parameters[1].default" = 1.0
"paths./api/rest/v1/messages/all.get.parameters[1].description" = "page number"
"paths./api/rest/v1/messages/all.get.parameters[1].format" = "int32"
"paths./api/rest/v1/messages/all.get.parameters[1].in" = "query"
"paths./api/rest/v1/messages/all.get.parameters[1].name" = "page"
"paths./api/rest/v1/messages/all.get.parameters[1].required" = false
"paths./api/rest/v1/messages/all.get.parameters[1].type" = "integer"
"paths./api/rest/v1/messages/all.get.parameters[2].description" = "filter by message type"
"paths./api/rest/v1/messages/all.get.parameters[2].enum.length" = 2
"paths./api/rest/v1/messages/all.get.parameters[2].enum[0]" = "OUTBOUND"
"paths./api/rest/v1/messages/all.get.parameters[2].enum[1]" = "INBOUND"
"paths./api/rest/v1/messages/all.get.parameters[2].in" = "query"
"paths./api/rest/v1/messages/all.get.parameters[2].name" = "type"
"paths./api/rest/v1/messages/all.get.parameters[2].required" = false
"paths./api/rest/v1/messages/all.get.parameters[2].type" = "string"
"paths./api/rest/v1/messages/all.get.parameters[3].description" = "filter by message status"
"paths./api/rest/v1/messages/all.get.parameters[3].enum.length" = 8
"paths./api/rest/v1/messages/all.get.parameters[3].enum[0]" = "SCHEDULED"
"paths./api/rest/v1/messages/all.get.parameters[3].enum[1]" = "UNKNOWN"
"paths./api/rest/v1/messages/all.get.parameters[3].enum[2]" = "SENT"
"paths./api/rest/v1/messages/all.get.parameters[3].enum[3]" = "FAILED"
"paths./api/rest/v1/messages/all.get.parameters[3].enum[4]" = "FAILED_REFUNDED"
"paths./api/rest/v1/messages/all.get.parameters[3].enum[5]" = "FAILED_OPTOUT"
"paths./api/rest/v1/messages/all.get.parameters[3].enum[6]" = "DELIVERED"
"paths./api/rest/v1/messages/all.get.parameters[3].enum[7]" = "RECEIVED"
"paths./api/rest/v1/messages/all.get.parameters[3].in" = "query"
"paths./api/rest/v1/messages/all.get.parameters[3].name" = "status"
"paths./api/rest/v1/messages/all.get.parameters[3].required" = false
"paths./api/rest/v1/messages/all.get.parameters[3].type" = "string"
"paths./api/rest/v1/messages/all.get.parameters[4].description" = "date format: yyyyMMdd"
"paths./api/rest/v1/messages/all.get.parameters[4].format" = "date-time"
"paths./api/rest/v1/messages/all.get.parameters[4].in" = "query"
"paths./api/rest/v1/messages/all.get.parameters[4].name" = "fromDateTimeSent"
"paths./api/rest/v1/messages/all.get.parameters[4].required" = false
"paths./api/rest/v1/messages/all.get.parameters[4].type" = "string"
"paths./api/rest/v1/messages/all.get.parameters[5].description" = "date format: yyyyMMdd"
"paths./api/rest/v1/messages/all.get.parameters[5].format" = "date-time"
"paths./api/rest/v1/messages/all.get.parameters[5].in" = "query"
"paths./api/rest/v1/messages/all.get.parameters[5].name" = "toDateTimeSent"
"paths./api/rest/v1/messages/all.get.parameters[5].required" = false
"paths./api/rest/v1/messages/all.get.parameters[5].type" = "string"
"paths./api/rest/v1/messages/all.get.parameters[6].description" = "date format: yyyyMMdd"
"paths./api/rest/v1/messages/all.get.parameters[6].format" = "date-time"
"paths./api/rest/v1/messages/all.get.parameters[6].in" = "query"
"paths./api/rest/v1/messages/all.get.parameters[6].name" = "fromDateTimeReceived"
"paths./api/rest/v1/messages/all.get.parameters[6].required" = false
"paths./api/rest/v1/messages/all.get.parameters[6].type" = "string"
"paths./api/rest/v1/messages/all.get.parameters[7].description" = "date format: yyyyMMdd"
"paths./api/rest/v1/messages/all.get.parameters[7].format" = "date-time"
"paths./api/rest/v1/messages/all.get.parameters[7].in" = "query"
"paths./api/rest/v1/messages/all.get.parameters[7].name" = "toDateTimeReceived"
"paths./api/rest/v1/messages/all.get.parameters[7].required" = false
"paths./api/rest/v1/messages/all.get.parameters[7].type" = "string"
"paths./api/rest/v1/messages/all.get.parameters[8].description" = "phone number the message was sent from"
"paths./api/rest/v1/messages/all.get.parameters[8].in" = "query"
"paths./api/rest/v1/messages/all.get.parameters[8].name" = "fromNumber"
"paths./api/rest/v1/messages/all.get.parameters[8].required" = false
"paths./api/rest/v1/messages/all.get.parameters[8].type" = "string"
"paths./api/rest/v1/messages/all.get.parameters[9].description" = "phone number the message was sent to"
"paths./api/rest/v1/messages/all.get.parameters[9].in" = "query"
"paths./api/rest/v1/messages/all.get.parameters[9].name" = "toNumber"
"paths./api/rest/v1/messages/all.get.parameters[9].required" = false
"paths./api/rest/v1/messages/all.get.parameters[9].type" = "string"
"paths./api/rest/v1/messages/all.get.responses.200.description" = "OK"
"paths./api/rest/v1/messages/all.get.responses.200.schema.$ref" = "#/definitions/WebServiceMessages"
"paths./api/rest/v1/messages/all.get.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/messages/all.get.responses.403.description" = "Forbidden"
"paths./api/rest/v1/messages/all.get.responses.404.description" = "Not Found"
"paths./api/rest/v1/messages/all.get.summary" = "all"
"paths./api/rest/v1/messages/all.get.tags.length" = 1
"paths./api/rest/v1/messages/all.get.tags[0]" = "messages"
"paths./api/rest/v1/messages/{messageId}.delete.deprecated" = false
"paths./api/rest/v1/messages/{messageId}.delete.description" = "Deletes a  message"
"paths./api/rest/v1/messages/{messageId}.delete.parameters.length" = 1
"paths./api/rest/v1/messages/{messageId}.delete.parameters[0].description" = "messageId"
"paths./api/rest/v1/messages/{messageId}.delete.parameters[0].in" = "path"
"paths./api/rest/v1/messages/{messageId}.delete.parameters[0].name" = "messageId"
"paths./api/rest/v1/messages/{messageId}.delete.parameters[0].required" = true
"paths./api/rest/v1/messages/{messageId}.delete.parameters[0].type" = "string"
"paths./api/rest/v1/messages/{messageId}.delete.responses.200.description" = "Description was not specified"
"paths./api/rest/v1/messages/{messageId}.delete.responses.204.description" = "No Content"
"paths./api/rest/v1/messages/{messageId}.delete.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/messages/{messageId}.delete.responses.403.description" = "Forbidden"
"paths./api/rest/v1/messages/{messageId}.delete.summary" = "delete"
"paths./api/rest/v1/messages/{messageId}.delete.tags.length" = 1
"paths./api/rest/v1/messages/{messageId}.delete.tags[0]" = "messages"
"paths./api/rest/v1/messages/{messageId}.get.deprecated" = false
"paths./api/rest/v1/messages/{messageId}.get.description" = "Returns details for a single message"
"paths./api/rest/v1/messages/{messageId}.get.parameters.length" = 1
"paths./api/rest/v1/messages/{messageId}.get.parameters[0].description" = "messageId"
"paths./api/rest/v1/messages/{messageId}.get.parameters[0].in" = "path"
"paths./api/rest/v1/messages/{messageId}.get.parameters[0].name" = "messageId"
"paths./api/rest/v1/messages/{messageId}.get.parameters[0].required" = true
"paths./api/rest/v1/messages/{messageId}.get.parameters[0].type" = "string"
"paths./api/rest/v1/messages/{messageId}.get.responses.200.description" = "OK"
"paths./api/rest/v1/messages/{messageId}.get.responses.200.schema.$ref" = "#/definitions/WebServiceMessage"
"paths./api/rest/v1/messages/{messageId}.get.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/messages/{messageId}.get.responses.403.description" = "Forbidden"
"paths./api/rest/v1/messages/{messageId}.get.responses.404.description" = "Not Found"
"paths./api/rest/v1/messages/{messageId}.get.summary" = "get"
"paths./api/rest/v1/messages/{messageId}.get.tags.length" = 1
"paths./api/rest/v1/messages/{messageId}.get.tags[0]" = "messages"
"paths./api/rest/v1/messages/{messageId}/markRead.post.deprecated" = false
"paths./api/rest/v1/messages/{messageId}/markRead.post.description" = "Marks a  message as read"
"paths./api/rest/v1/messages/{messageId}/markRead.post.parameters.length" = 1
"paths./api/rest/v1/messages/{messageId}/markRead.post.parameters[0].description" = "messageId"
"paths./api/rest/v1/messages/{messageId}/markRead.post.parameters[0].in" = "path"
"paths./api/rest/v1/messages/{messageId}/markRead.post.parameters[0].name" = "messageId"
"paths./api/rest/v1/messages/{messageId}/markRead.post.parameters[0].required" = true
"paths./api/rest/v1/messages/{messageId}/markRead.post.parameters[0].type" = "string"
"paths./api/rest/v1/messages/{messageId}/markRead.post.responses.200.description" = "Description was not specified"
"paths./api/rest/v1/messages/{messageId}/markRead.post.responses.200.schema.$ref" = "#/definitions/WebServiceMessage"
"paths./api/rest/v1/messages/{messageId}/markRead.post.responses.201.description" = "Created"
"paths./api/rest/v1/messages/{messageId}/markRead.post.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/messages/{messageId}/markRead.post.responses.403.description" = "Forbidden"
"paths./api/rest/v1/messages/{messageId}/markRead.post.responses.404.description" = "Not Found"
"paths./api/rest/v1/messages/{messageId}/markRead.post.summary" = "markRead"
"paths./api/rest/v1/messages/{messageId}/markRead.post.tags.length" = 1
"paths./api/rest/v1/messages/{messageId}/markRead.post.tags[0]" = "messages"
"paths./api/rest/v1/messages/{messageId}/markRead.put.deprecated" = false
"paths./api/rest/v1/messages/{messageId}/markRead.put.description" = "Marks a  message as read"
"paths./api/rest/v1/messages/{messageId}/markRead.put.parameters.length" = 1
"paths./api/rest/v1/messages/{messageId}/markRead.put.parameters[0].description" = "messageId"
"paths./api/rest/v1/messages/{messageId}/markRead.put.parameters[0].in" = "path"
"paths./api/rest/v1/messages/{messageId}/markRead.put.parameters[0].name" = "messageId"
"paths./api/rest/v1/messages/{messageId}/markRead.put.parameters[0].required" = true
"paths./api/rest/v1/messages/{messageId}/markRead.put.parameters[0].type" = "string"
"paths./api/rest/v1/messages/{messageId}/markRead.put.responses.200.description" = "Description was not specified"
"paths./api/rest/v1/messages/{messageId}/markRead.put.responses.200.schema.$ref" = "#/definitions/WebServiceMessage"
"paths./api/rest/v1/messages/{messageId}/markRead.put.responses.201.description" = "Created"
"paths./api/rest/v1/messages/{messageId}/markRead.put.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/messages/{messageId}/markRead.put.responses.403.description" = "Forbidden"
"paths./api/rest/v1/messages/{messageId}/markRead.put.responses.404.description" = "Not Found"
"paths./api/rest/v1/messages/{messageId}/markRead.put.summary" = "markRead"
"paths./api/rest/v1/messages/{messageId}/markRead.put.tags.length" = 1
"paths./api/rest/v1/messages/{messageId}/markRead.put.tags[0]" = "messages"
"paths./api/rest/v1/messages/{messageId}/markUnread.post.deprecated" = false
"paths./api/rest/v1/messages/{messageId}/markUnread.post.description" = "Marks a  message as unread"
"paths./api/rest/v1/messages/{messageId}/markUnread.post.parameters.length" = 1
"paths./api/rest/v1/messages/{messageId}/markUnread.post.parameters[0].description" = "messageId"
"paths./api/rest/v1/messages/{messageId}/markUnread.post.parameters[0].in" = "path"
"paths./api/rest/v1/messages/{messageId}/markUnread.post.parameters[0].name" = "messageId"
"paths./api/rest/v1/messages/{messageId}/markUnread.post.parameters[0].required" = true
"paths./api/rest/v1/messages/{messageId}/markUnread.post.parameters[0].type" = "string"
"paths./api/rest/v1/messages/{messageId}/markUnread.post.responses.200.description" = "Description was not specified"
"paths./api/rest/v1/messages/{messageId}/markUnread.post.responses.200.schema.$ref" = "#/definitions/WebServiceMessage"
"paths./api/rest/v1/messages/{messageId}/markUnread.post.responses.201.description" = "Created"
"paths./api/rest/v1/messages/{messageId}/markUnread.post.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/messages/{messageId}/markUnread.post.responses.403.description" = "Forbidden"
"paths./api/rest/v1/messages/{messageId}/markUnread.post.responses.404.description" = "Not Found"
"paths./api/rest/v1/messages/{messageId}/markUnread.post.summary" = "markUnread"
"paths./api/rest/v1/messages/{messageId}/markUnread.post.tags.length" = 1
"paths./api/rest/v1/messages/{messageId}/markUnread.post.tags[0]" = "messages"
"paths./api/rest/v1/messages/{messageId}/markUnread.put.deprecated" = false
"paths./api/rest/v1/messages/{messageId}/markUnread.put.description" = "Marks a  message as unread"
"paths./api/rest/v1/messages/{messageId}/markUnread.put.parameters.length" = 1
"paths./api/rest/v1/messages/{messageId}/markUnread.put.parameters[0].description" = "messageId"
"paths./api/rest/v1/messages/{messageId}/markUnread.put.parameters[0].in" = "path"
"paths./api/rest/v1/messages/{messageId}/markUnread.put.parameters[0].name" = "messageId"
"paths./api/rest/v1/messages/{messageId}/markUnread.put.parameters[0].required" = true
"paths./api/rest/v1/messages/{messageId}/markUnread.put.parameters[0].type" = "string"
"paths./api/rest/v1/messages/{messageId}/markUnread.put.responses.200.description" = "Description was not specified"
"paths./api/rest/v1/messages/{messageId}/markUnread.put.responses.200.schema.$ref" = "#/definitions/WebServiceMessage"
"paths./api/rest/v1/messages/{messageId}/markUnread.put.responses.201.description" = "Created"
"paths./api/rest/v1/messages/{messageId}/markUnread.put.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/messages/{messageId}/markUnread.put.responses.403.description" = "Forbidden"
"paths./api/rest/v1/messages/{messageId}/markUnread.put.responses.404.description" = "Not Found"
"paths./api/rest/v1/messages/{messageId}/markUnread.put.summary" = "markUnread"
"paths./api/rest/v1/messages/{messageId}/markUnread.put.tags.length" = 1
"paths./api/rest/v1/messages/{messageId}/markUnread.put.tags[0]" = "messages"
"paths./api/rest/v1/sms/send-bulk.get.deprecated" = false
"paths./api/rest/v1/sms/send-bulk.get.description" = "Returns an example of the data to POST to send multiple messages in one transaction."
"paths./api/rest/v1/sms/send-bulk.get.responses.200.description" = "OK"
"paths./api/rest/v1/sms/send-bulk.get.responses.200.schema.$ref" = "#/definitions/WebServiceSendSmsRequests"
"paths./api/rest/v1/sms/send-bulk.get.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/sms/send-bulk.get.responses.403.description" = "Forbidden"
"paths./api/rest/v1/sms/send-bulk.get.responses.404.description" = "Not Found"
"paths./api/rest/v1/sms/send-bulk.get.summary" = "send-bulk"
"paths./api/rest/v1/sms/send-bulk.get.tags.length" = 1
"paths./api/rest/v1/sms/send-bulk.get.tags[0]" = "sms"
"paths./api/rest/v1/sms/send-bulk.post.deprecated" = false
"paths./api/rest/v1/sms/send-bulk.post.description" = "Send multiple messages in one transaction."
"paths./api/rest/v1/sms/send-bulk.post.parameters.length" = 1
"paths./api/rest/v1/sms/send-bulk.post.parameters[0].description" = "requests"
"paths./api/rest/v1/sms/send-bulk.post.parameters[0].in" = "body"
"paths./api/rest/v1/sms/send-bulk.post.parameters[0].name" = "body"
"paths./api/rest/v1/sms/send-bulk.post.parameters[0].required" = false
"paths./api/rest/v1/sms/send-bulk.post.parameters[0].schema.$ref" = "#/definitions/WebServiceSendSmsRequests"
"paths./api/rest/v1/sms/send-bulk.post.responses.200.description" = "Description was not specified"
"paths./api/rest/v1/sms/send-bulk.post.responses.200.schema.$ref" = "#/definitions/WebServiceSendSmsResponses"
"paths./api/rest/v1/sms/send-bulk.post.responses.201.description" = "Created"
"paths./api/rest/v1/sms/send-bulk.post.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/sms/send-bulk.post.responses.403.description" = "Forbidden"
"paths./api/rest/v1/sms/send-bulk.post.responses.404.description" = "Not Found"
"paths./api/rest/v1/sms/send-bulk.post.summary" = "send-bulk"
"paths./api/rest/v1/sms/send-bulk.post.tags.length" = 1
"paths./api/rest/v1/sms/send-bulk.post.tags[0]" = "sms"
"paths./api/rest/v1/sms/send-url-parameters.get.deprecated" = false
"paths./api/rest/v1/sms/send-url-parameters.get.description" = "Send a single message using URL parameters.The <i>recipientNumber</i> and <i>message</i> parameters are required. All other parameters are optional."
"paths./api/rest/v1/sms/send-url-parameters.get.parameters.length" = 5
"paths./api/rest/v1/sms/send-url-parameters.get.parameters[0].description" = "the phone number of the recipient to send to"
"paths./api/rest/v1/sms/send-url-parameters.get.parameters[0].in" = "query"
"paths./api/rest/v1/sms/send-url-parameters.get.parameters[0].name" = "recipientNumber"
"paths./api/rest/v1/sms/send-url-parameters.get.parameters[0].required" = true
"paths./api/rest/v1/sms/send-url-parameters.get.parameters[0].type" = "string"
"paths./api/rest/v1/sms/send-url-parameters.get.parameters[1].description" = "the message to send"
"paths./api/rest/v1/sms/send-url-parameters.get.parameters[1].in" = "query"
"paths./api/rest/v1/sms/send-url-parameters.get.parameters[1].name" = "message"
"paths./api/rest/v1/sms/send-url-parameters.get.parameters[1].required" = true
"paths./api/rest/v1/sms/send-url-parameters.get.parameters[1].type" = "string"
"paths./api/rest/v1/sms/send-url-parameters.get.parameters[2].description" = "date format: yyyyMMddHHmm"
"paths./api/rest/v1/sms/send-url-parameters.get.parameters[2].format" = "date-time"
"paths./api/rest/v1/sms/send-url-parameters.get.parameters[2].in" = "query"
"paths./api/rest/v1/sms/send-url-parameters.get.parameters[2].name" = "dateToSend"
"paths./api/rest/v1/sms/send-url-parameters.get.parameters[2].required" = false
"paths./api/rest/v1/sms/send-url-parameters.get.parameters[2].type" = "string"
"paths./api/rest/v1/sms/send-url-parameters.get.parameters[3].description" = "optional campaign name"
"paths./api/rest/v1/sms/send-url-parameters.get.parameters[3].in" = "query"
"paths./api/rest/v1/sms/send-url-parameters.get.parameters[3].name" = "campaign"
"paths./api/rest/v1/sms/send-url-parameters.get.parameters[3].required" = false
"paths./api/rest/v1/sms/send-url-parameters.get.parameters[3].type" = "string"
"paths./api/rest/v1/sms/send-url-parameters.get.parameters[4].description" = "optional extra data"
"paths./api/rest/v1/sms/send-url-parameters.get.parameters[4].in" = "query"
"paths./api/rest/v1/sms/send-url-parameters.get.parameters[4].name" = "dataField"
"paths./api/rest/v1/sms/send-url-parameters.get.parameters[4].required" = false
"paths./api/rest/v1/sms/send-url-parameters.get.parameters[4].type" = "string"
"paths./api/rest/v1/sms/send-url-parameters.get.responses.200.description" = "OK"
"paths./api/rest/v1/sms/send-url-parameters.get.responses.200.schema.type" = "string"
"paths./api/rest/v1/sms/send-url-parameters.get.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/sms/send-url-parameters.get.responses.403.description" = "Forbidden"
"paths./api/rest/v1/sms/send-url-parameters.get.responses.404.description" = "Not Found"
"paths./api/rest/v1/sms/send-url-parameters.get.summary" = "send-url-parameters"
"paths./api/rest/v1/sms/send-url-parameters.get.tags.length" = 1
"paths./api/rest/v1/sms/send-url-parameters.get.tags[0]" = "sms"
"paths./api/rest/v1/sms/send-url-parameters.post.deprecated" = false
"paths./api/rest/v1/sms/send-url-parameters.post.description" = "Send a single message using URL parameters.The <i>recipientNumber</i> and <i>message</i> parameters are required. All other parameters are optional."
"paths./api/rest/v1/sms/send-url-parameters.post.parameters.length" = 5
"paths./api/rest/v1/sms/send-url-parameters.post.parameters[0].description" = "the phone number of the recipient to send to"
"paths./api/rest/v1/sms/send-url-parameters.post.parameters[0].in" = "query"
"paths./api/rest/v1/sms/send-url-parameters.post.parameters[0].name" = "recipientNumber"
"paths./api/rest/v1/sms/send-url-parameters.post.parameters[0].required" = true
"paths./api/rest/v1/sms/send-url-parameters.post.parameters[0].type" = "string"
"paths./api/rest/v1/sms/send-url-parameters.post.parameters[1].description" = "the message to send"
"paths./api/rest/v1/sms/send-url-parameters.post.parameters[1].in" = "query"
"paths./api/rest/v1/sms/send-url-parameters.post.parameters[1].name" = "message"
"paths./api/rest/v1/sms/send-url-parameters.post.parameters[1].required" = true
"paths./api/rest/v1/sms/send-url-parameters.post.parameters[1].type" = "string"
"paths./api/rest/v1/sms/send-url-parameters.post.parameters[2].description" = "date format: yyyyMMddHHmm"
"paths./api/rest/v1/sms/send-url-parameters.post.parameters[2].format" = "date-time"
"paths./api/rest/v1/sms/send-url-parameters.post.parameters[2].in" = "query"
"paths./api/rest/v1/sms/send-url-parameters.post.parameters[2].name" = "dateToSend"
"paths./api/rest/v1/sms/send-url-parameters.post.parameters[2].required" = false
"paths./api/rest/v1/sms/send-url-parameters.post.parameters[2].type" = "string"
"paths./api/rest/v1/sms/send-url-parameters.post.parameters[3].description" = "optional campaign name"
"paths./api/rest/v1/sms/send-url-parameters.post.parameters[3].in" = "query"
"paths./api/rest/v1/sms/send-url-parameters.post.parameters[3].name" = "campaign"
"paths./api/rest/v1/sms/send-url-parameters.post.parameters[3].required" = false
"paths./api/rest/v1/sms/send-url-parameters.post.parameters[3].type" = "string"
"paths./api/rest/v1/sms/send-url-parameters.post.parameters[4].description" = "optional extra data"
"paths./api/rest/v1/sms/send-url-parameters.post.parameters[4].in" = "query"
"paths./api/rest/v1/sms/send-url-parameters.post.parameters[4].name" = "dataField"
"paths./api/rest/v1/sms/send-url-parameters.post.parameters[4].required" = false
"paths./api/rest/v1/sms/send-url-parameters.post.parameters[4].type" = "string"
"paths./api/rest/v1/sms/send-url-parameters.post.responses.200.description" = "Description was not specified"
"paths./api/rest/v1/sms/send-url-parameters.post.responses.200.schema.type" = "string"
"paths./api/rest/v1/sms/send-url-parameters.post.responses.201.description" = "Created"
"paths./api/rest/v1/sms/send-url-parameters.post.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/sms/send-url-parameters.post.responses.403.description" = "Forbidden"
"paths./api/rest/v1/sms/send-url-parameters.post.responses.404.description" = "Not Found"
"paths./api/rest/v1/sms/send-url-parameters.post.summary" = "send-url-parameters"
"paths./api/rest/v1/sms/send-url-parameters.post.tags.length" = 1
"paths./api/rest/v1/sms/send-url-parameters.post.tags[0]" = "sms"
"paths./api/rest/v1/sms/send-url/{token}.get.deprecated" = false
"paths./api/rest/v1/sms/send-url/{token}.get.description" = "Send a single message using your unique URL without having to authenticate using your email address or REST API token. The token required is the URL Sending token available on the developer setting page. The <i>recipientNumber</i> and <i>message</i> parameters are required. All other parameters are optional. Not that the token required here is "
"paths./api/rest/v1/sms/send-url/{token}.get.parameters.length" = 6
"paths./api/rest/v1/sms/send-url/{token}.get.parameters[0].description" = "token"
"paths./api/rest/v1/sms/send-url/{token}.get.parameters[0].in" = "path"
"paths./api/rest/v1/sms/send-url/{token}.get.parameters[0].name" = "token"
"paths./api/rest/v1/sms/send-url/{token}.get.parameters[0].required" = true
"paths./api/rest/v1/sms/send-url/{token}.get.parameters[0].type" = "string"
"paths./api/rest/v1/sms/send-url/{token}.get.parameters[1].description" = "the phone number of the recipient to send to"
"paths./api/rest/v1/sms/send-url/{token}.get.parameters[1].in" = "query"
"paths./api/rest/v1/sms/send-url/{token}.get.parameters[1].name" = "recipientNumber"
"paths./api/rest/v1/sms/send-url/{token}.get.parameters[1].required" = true
"paths./api/rest/v1/sms/send-url/{token}.get.parameters[1].type" = "string"
"paths./api/rest/v1/sms/send-url/{token}.get.parameters[2].description" = "the message to send"
"paths./api/rest/v1/sms/send-url/{token}.get.parameters[2].in" = "query"
"paths./api/rest/v1/sms/send-url/{token}.get.parameters[2].name" = "message"
"paths./api/rest/v1/sms/send-url/{token}.get.parameters[2].required" = true
"paths./api/rest/v1/sms/send-url/{token}.get.parameters[2].type" = "string"
"paths./api/rest/v1/sms/send-url/{token}.get.parameters[3].description" = "date format: yyyyMMddHHmm"
"paths./api/rest/v1/sms/send-url/{token}.get.parameters[3].format" = "date-time"
"paths./api/rest/v1/sms/send-url/{token}.get.parameters[3].in" = "query"
"paths./api/rest/v1/sms/send-url/{token}.get.parameters[3].name" = "dateToSend"
"paths./api/rest/v1/sms/send-url/{token}.get.parameters[3].required" = false
"paths./api/rest/v1/sms/send-url/{token}.get.parameters[3].type" = "string"
"paths./api/rest/v1/sms/send-url/{token}.get.parameters[4].description" = "optional campaign name"
"paths./api/rest/v1/sms/send-url/{token}.get.parameters[4].in" = "query"
"paths./api/rest/v1/sms/send-url/{token}.get.parameters[4].name" = "campaign"
"paths./api/rest/v1/sms/send-url/{token}.get.parameters[4].required" = false
"paths./api/rest/v1/sms/send-url/{token}.get.parameters[4].type" = "string"
"paths./api/rest/v1/sms/send-url/{token}.get.parameters[5].description" = "optional extra data"
"paths./api/rest/v1/sms/send-url/{token}.get.parameters[5].in" = "query"
"paths./api/rest/v1/sms/send-url/{token}.get.parameters[5].name" = "dataField"
"paths./api/rest/v1/sms/send-url/{token}.get.parameters[5].required" = false
"paths./api/rest/v1/sms/send-url/{token}.get.parameters[5].type" = "string"
"paths./api/rest/v1/sms/send-url/{token}.get.responses.200.description" = "OK"
"paths./api/rest/v1/sms/send-url/{token}.get.responses.200.schema.type" = "string"
"paths./api/rest/v1/sms/send-url/{token}.get.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/sms/send-url/{token}.get.responses.403.description" = "Forbidden"
"paths./api/rest/v1/sms/send-url/{token}.get.responses.404.description" = "Not Found"
"paths./api/rest/v1/sms/send-url/{token}.get.summary" = "send-url"
"paths./api/rest/v1/sms/send-url/{token}.get.tags.length" = 1
"paths./api/rest/v1/sms/send-url/{token}.get.tags[0]" = "sms"
"paths./api/rest/v1/sms/send-url/{token}.post.deprecated" = false
"paths./api/rest/v1/sms/send-url/{token}.post.description" = "Send a single message using your unique URL without having to authenticate using your email address or REST API token. The token required is the URL Sending token available on the developer setting page. The <i>recipientNumber</i> and <i>message</i> parameters are required. All other parameters are optional. Not that the token required here is "
"paths./api/rest/v1/sms/send-url/{token}.post.parameters.length" = 6
"paths./api/rest/v1/sms/send-url/{token}.post.parameters[0].description" = "token"
"paths./api/rest/v1/sms/send-url/{token}.post.parameters[0].in" = "path"
"paths./api/rest/v1/sms/send-url/{token}.post.parameters[0].name" = "token"
"paths./api/rest/v1/sms/send-url/{token}.post.parameters[0].required" = true
"paths./api/rest/v1/sms/send-url/{token}.post.parameters[0].type" = "string"
"paths./api/rest/v1/sms/send-url/{token}.post.parameters[1].description" = "the phone number of the recipient to send to"
"paths./api/rest/v1/sms/send-url/{token}.post.parameters[1].in" = "query"
"paths./api/rest/v1/sms/send-url/{token}.post.parameters[1].name" = "recipientNumber"
"paths./api/rest/v1/sms/send-url/{token}.post.parameters[1].required" = true
"paths./api/rest/v1/sms/send-url/{token}.post.parameters[1].type" = "string"
"paths./api/rest/v1/sms/send-url/{token}.post.parameters[2].description" = "the message to send"
"paths./api/rest/v1/sms/send-url/{token}.post.parameters[2].in" = "query"
"paths./api/rest/v1/sms/send-url/{token}.post.parameters[2].name" = "message"
"paths./api/rest/v1/sms/send-url/{token}.post.parameters[2].required" = true
"paths./api/rest/v1/sms/send-url/{token}.post.parameters[2].type" = "string"
"paths./api/rest/v1/sms/send-url/{token}.post.parameters[3].description" = "date format: yyyyMMddHHmm"
"paths./api/rest/v1/sms/send-url/{token}.post.parameters[3].format" = "date-time"
"paths./api/rest/v1/sms/send-url/{token}.post.parameters[3].in" = "query"
"paths./api/rest/v1/sms/send-url/{token}.post.parameters[3].name" = "dateToSend"
"paths./api/rest/v1/sms/send-url/{token}.post.parameters[3].required" = false
"paths./api/rest/v1/sms/send-url/{token}.post.parameters[3].type" = "string"
"paths./api/rest/v1/sms/send-url/{token}.post.parameters[4].description" = "optional campaign name"
"paths./api/rest/v1/sms/send-url/{token}.post.parameters[4].in" = "query"
"paths./api/rest/v1/sms/send-url/{token}.post.parameters[4].name" = "campaign"
"paths./api/rest/v1/sms/send-url/{token}.post.parameters[4].required" = false
"paths./api/rest/v1/sms/send-url/{token}.post.parameters[4].type" = "string"
"paths./api/rest/v1/sms/send-url/{token}.post.parameters[5].description" = "optional extra data"
"paths./api/rest/v1/sms/send-url/{token}.post.parameters[5].in" = "query"
"paths./api/rest/v1/sms/send-url/{token}.post.parameters[5].name" = "dataField"
"paths./api/rest/v1/sms/send-url/{token}.post.parameters[5].required" = false
"paths./api/rest/v1/sms/send-url/{token}.post.parameters[5].type" = "string"
"paths./api/rest/v1/sms/send-url/{token}.post.responses.200.description" = "Description was not specified"
"paths./api/rest/v1/sms/send-url/{token}.post.responses.200.schema.type" = "string"
"paths./api/rest/v1/sms/send-url/{token}.post.responses.201.description" = "Created"
"paths./api/rest/v1/sms/send-url/{token}.post.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/sms/send-url/{token}.post.responses.403.description" = "Forbidden"
"paths./api/rest/v1/sms/send-url/{token}.post.responses.404.description" = "Not Found"
"paths./api/rest/v1/sms/send-url/{token}.post.summary" = "send-url"
"paths./api/rest/v1/sms/send-url/{token}.post.tags.length" = 1
"paths./api/rest/v1/sms/send-url/{token}.post.tags[0]" = "sms"
"paths./api/rest/v1/sms/send.get.deprecated" = false
"paths./api/rest/v1/sms/send.get.description" = "Returns an example of the data to POST to send a single message."
"paths./api/rest/v1/sms/send.get.responses.200.description" = "OK"
"paths./api/rest/v1/sms/send.get.responses.200.schema.$ref" = "#/definitions/WebServiceSendSmsRequest"
"paths./api/rest/v1/sms/send.get.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/sms/send.get.responses.403.description" = "Forbidden"
"paths./api/rest/v1/sms/send.get.responses.404.description" = "Not Found"
"paths./api/rest/v1/sms/send.get.summary" = "send"
"paths./api/rest/v1/sms/send.get.tags.length" = 1
"paths./api/rest/v1/sms/send.get.tags[0]" = "sms"
"paths./api/rest/v1/sms/send.post.deprecated" = false
"paths./api/rest/v1/sms/send.post.description" = "Sends a single message. The <i>recipientNumber</i> and <i>message</i> fields are required. All other fields are optional."
"paths./api/rest/v1/sms/send.post.parameters.length" = 1
"paths./api/rest/v1/sms/send.post.parameters[0].description" = "request"
"paths./api/rest/v1/sms/send.post.parameters[0].in" = "body"
"paths./api/rest/v1/sms/send.post.parameters[0].name" = "body"
"paths./api/rest/v1/sms/send.post.parameters[0].required" = false
"paths./api/rest/v1/sms/send.post.parameters[0].schema.$ref" = "#/definitions/WebServiceSendSmsRequest"
"paths./api/rest/v1/sms/send.post.responses.200.description" = "Description was not specified"
"paths./api/rest/v1/sms/send.post.responses.200.schema.$ref" = "#/definitions/WebServiceSendSmsResponse"
"paths./api/rest/v1/sms/send.post.responses.201.description" = "Created"
"paths./api/rest/v1/sms/send.post.responses.400.description" = "Validation error</br></br>Code and message:<ul><li>2 - Invalid mobile number</li><li>3 - Message cannot be empty</li></ul>"
"paths./api/rest/v1/sms/send.post.responses.400.schema.$ref" = "#/definitions/RestErrorDTO"
"paths./api/rest/v1/sms/send.post.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/sms/send.post.responses.403.description" = "Forbidden"
"paths./api/rest/v1/sms/send.post.responses.404.description" = "Not Found"
"paths./api/rest/v1/sms/send.post.summary" = "send"
"paths./api/rest/v1/sms/send.post.tags.length" = 1
"paths./api/rest/v1/sms/send.post.tags[0]" = "sms"
"paths./api/rest/v1/templates/all.get.deprecated" = false
"paths./api/rest/v1/templates/all.get.description" = "Returns all templates"
"paths./api/rest/v1/templates/all.get.responses.200.description" = "OK"
"paths./api/rest/v1/templates/all.get.responses.200.schema.$ref" = "#/definitions/WebServiceTemplates"
"paths./api/rest/v1/templates/all.get.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/templates/all.get.responses.403.description" = "Forbidden"
"paths./api/rest/v1/templates/all.get.responses.404.description" = "Not Found"
"paths./api/rest/v1/templates/all.get.summary" = "all"
"paths./api/rest/v1/templates/all.get.tags.length" = 1
"paths./api/rest/v1/templates/all.get.tags[0]" = "templates"
"paths./api/rest/v1/templates/{templateId}.delete.deprecated" = false
"paths./api/rest/v1/templates/{templateId}.delete.description" = "Deletes a  template"
"paths./api/rest/v1/templates/{templateId}.delete.parameters.length" = 1
"paths./api/rest/v1/templates/{templateId}.delete.parameters[0].description" = "templateId"
"paths./api/rest/v1/templates/{templateId}.delete.parameters[0].format" = "int64"
"paths./api/rest/v1/templates/{templateId}.delete.parameters[0].in" = "path"
"paths./api/rest/v1/templates/{templateId}.delete.parameters[0].name" = "templateId"
"paths./api/rest/v1/templates/{templateId}.delete.parameters[0].required" = true
"paths./api/rest/v1/templates/{templateId}.delete.parameters[0].type" = "integer"
"paths./api/rest/v1/templates/{templateId}.delete.responses.200.description" = "Description was not specified"
"paths./api/rest/v1/templates/{templateId}.delete.responses.204.description" = "No Content"
"paths./api/rest/v1/templates/{templateId}.delete.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/templates/{templateId}.delete.responses.403.description" = "Forbidden"
"paths./api/rest/v1/templates/{templateId}.delete.summary" = "delete"
"paths./api/rest/v1/templates/{templateId}.delete.tags.length" = 1
"paths./api/rest/v1/templates/{templateId}.delete.tags[0]" = "templates"
"paths./api/rest/v1/templates/{templateId}.get.deprecated" = false
"paths./api/rest/v1/templates/{templateId}.get.description" = "Returns details for a single template"
"paths./api/rest/v1/templates/{templateId}.get.parameters.length" = 1
"paths./api/rest/v1/templates/{templateId}.get.parameters[0].description" = "templateId"
"paths./api/rest/v1/templates/{templateId}.get.parameters[0].format" = "int64"
"paths./api/rest/v1/templates/{templateId}.get.parameters[0].in" = "path"
"paths./api/rest/v1/templates/{templateId}.get.parameters[0].name" = "templateId"
"paths./api/rest/v1/templates/{templateId}.get.parameters[0].required" = true
"paths./api/rest/v1/templates/{templateId}.get.parameters[0].type" = "integer"
"paths./api/rest/v1/templates/{templateId}.get.responses.200.description" = "OK"
"paths./api/rest/v1/templates/{templateId}.get.responses.200.schema.$ref" = "#/definitions/WebServiceTemplate"
"paths./api/rest/v1/templates/{templateId}.get.responses.401.description" = "Unauthorized"
"paths./api/rest/v1/templates/{templateId}.get.responses.403.description" = "Forbidden"
"paths./api/rest/v1/templates/{templateId}.get.responses.404.description" = "Not Found"
"paths./api/rest/v1/templates/{templateId}.get.summary" = "get"
"paths./api/rest/v1/templates/{templateId}.get.tags.length" = 1
"paths./api/rest/v1/templates/{templateId}.get.tags[0]" = "templates"
"produces.length" = 2
"produces[0]" = "application/json"
"produces[1]" = "application/xml"
"schemes.length" = 1
"schemes[0]" = "https"
"securityDefinitions.email.in" = "header"
"securityDefinitions.email.name" = "email"
"securityDefinitions.email.type" = "apiKey"
"securityDefinitions.token.in" = "header"
"securityDefinitions.token.name" = "token"
"securityDefinitions.token.type" = "apiKey"
swagger = "2.0"
"tags.length" = 7
"tags[0].description" = "Core information related to your account"
"tags[0].name" = "account"
"tags[1].description" = "Manage contacts"
"tags[1].name" = "contacts"
"tags[2].description" = "Number context service"
"tags[2].name" = "context"
"tags[3].description" = "Manage groups"
"tags[3].name" = "groups"
"tags[4].description" = "Manage your messages"
"tags[4].name" = "messages"
"tags[5].description" = "Send and schedule messages"
"tags[5].name" = "sms"
"tags[6].description" = "Manage your templates"
"tags[6].name" = "templates"
