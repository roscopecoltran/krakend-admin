basePath: /api/rest_v1
definitions.cx_dict.properties.source.description: the original word to look up
definitions.cx_dict.properties.source.type: string
definitions.cx_dict.properties.translations.description: the translations found
definitions.cx_dict.properties.translations.items.properties.info.description: extra
  information about the phrase
definitions.cx_dict.properties.translations.items.properties.info.type: string
definitions.cx_dict.properties.translations.items.properties.phrase.description: the
  translated phrase
definitions.cx_dict.properties.translations.items.properties.phrase.type: string
definitions.cx_dict.properties.translations.items.properties.sources.description: the
  source dictionary used for the translation
definitions.cx_dict.properties.translations.items.properties.sources.type: string
definitions.cx_dict.properties.translations.items.type: object
definitions.cx_dict.properties.translations.type: array
definitions.cx_dict.type: object
definitions.cx_languagepairs.properties.source.description: the list of available
  source languages
definitions.cx_languagepairs.properties.source.items.description: one source language
definitions.cx_languagepairs.properties.source.items.type: string
definitions.cx_languagepairs.properties.source.type: array
definitions.cx_languagepairs.properties.target.description: the list of available
  destination languages
definitions.cx_languagepairs.properties.target.items.description: one destination
  language
definitions.cx_languagepairs.properties.target.items.type: string
definitions.cx_languagepairs.properties.target.type: array
definitions.cx_languagepairs.type: object
definitions.cx_list_pairs_for_tool.type: object
definitions.cx_list_tools.properties.tools.description: the list of tools available
  for the given language pair
definitions.cx_list_tools.properties.tools.items.description: the tool available
definitions.cx_list_tools.properties.tools.items.type: string
definitions.cx_list_tools.properties.tools.type: array
definitions.cx_list_tools.type: object
definitions.cx_mt.properties.contents.description: the translated content
definitions.cx_mt.properties.contents.type: string
definitions.cx_mt.type: object
definitions.listing.description: The result format for listings
definitions.listing.properties.items.items.type: string
definitions.listing.properties.items.type: array
definitions.listing.required.length: 1
definitions.listing.required[0]: items
definitions.originalimage.properties.height.description: Original image height
definitions.originalimage.properties.height.type: integer
definitions.originalimage.properties.source.description: Original image URI
definitions.originalimage.properties.source.type: string
definitions.originalimage.properties.width.description: Original image width
definitions.originalimage.properties.width.type: integer
definitions.originalimage.required.length: 3
definitions.originalimage.required[0]: source
definitions.originalimage.required[1]: width
definitions.originalimage.required[2]: height
definitions.originalimage.type: object
definitions.pagecounts-project.properties.items.items.properties.access-site.type: string
definitions.pagecounts-project.properties.items.items.properties.count.format: int64
definitions.pagecounts-project.properties.items.items.properties.count.type: integer
definitions.pagecounts-project.properties.items.items.properties.granularity.type: string
definitions.pagecounts-project.properties.items.items.properties.project.type: string
definitions.pagecounts-project.properties.items.items.properties.timestamp.type: string
definitions.pagecounts-project.properties.items.type: array
definitions.pageview-article.properties.items.items.properties.access.type: string
definitions.pageview-article.properties.items.items.properties.agent.type: string
definitions.pageview-article.properties.items.items.properties.article.type: string
definitions.pageview-article.properties.items.items.properties.granularity.type: string
definitions.pageview-article.properties.items.items.properties.project.type: string
definitions.pageview-article.properties.items.items.properties.timestamp.type: string
definitions.pageview-article.properties.items.items.properties.views.format: int64
definitions.pageview-article.properties.items.items.properties.views.type: integer
definitions.pageview-article.properties.items.type: array
definitions.pageview-project.properties.items.items.properties.access.type: string
definitions.pageview-project.properties.items.items.properties.agent.type: string
definitions.pageview-project.properties.items.items.properties.granularity.type: string
definitions.pageview-project.properties.items.items.properties.project.type: string
definitions.pageview-project.properties.items.items.properties.timestamp.type: string
definitions.pageview-project.properties.items.items.properties.views.format: int64
definitions.pageview-project.properties.items.items.properties.views.type: integer
definitions.pageview-project.properties.items.type: array
definitions.pageview-tops.properties.items.items.properties.access.type: string
definitions.pageview-tops.properties.items.items.properties.articles.type: string
definitions.pageview-tops.properties.items.items.properties.day.type: string
definitions.pageview-tops.properties.items.items.properties.month.type: string
definitions.pageview-tops.properties.items.items.properties.project.type: string
definitions.pageview-tops.properties.items.items.properties.year.type: string
definitions.pageview-tops.properties.items.type: array
definitions.problem.properties.detail.type: string
definitions.problem.properties.instance.type: string
definitions.problem.properties.title.type: string
definitions.problem.properties.type.type: string
definitions.problem.required.length: 1
definitions.problem.required[0]: type
definitions.summary.properties.coordinates.description: The coordinates of the item
definitions.summary.properties.coordinates.properties.lat.description: The latitude
definitions.summary.properties.coordinates.properties.lat.type: number
definitions.summary.properties.coordinates.properties.lon.description: The longitude
definitions.summary.properties.coordinates.properties.lon.type: number
definitions.summary.properties.coordinates.required.length: 2
definitions.summary.properties.coordinates.required[0]: lat
definitions.summary.properties.coordinates.required[1]: lon
definitions.summary.properties.coordinates.type: object
definitions.summary.properties.description.description: Wikidata description for the
  page
definitions.summary.properties.description.example: American poet
definitions.summary.properties.description.type: string
definitions.summary.properties.dir.description: The page language direction code
definitions.summary.properties.dir.example: ltr
definitions.summary.properties.dir.type: string
definitions.summary.properties.displaytitle.description: The page title how it should
  be shown to the user
definitions.summary.properties.displaytitle.type: string
definitions.summary.properties.extract.description: First several sentences of an
  article in plain text
definitions.summary.properties.extract.type: string
definitions.summary.properties.extract_html.description: First several sentences of
  an article in simple HTML format
definitions.summary.properties.extract_html.type: string
definitions.summary.properties.lang.description: The page language code
definitions.summary.properties.lang.example: en
definitions.summary.properties.lang.type: string
definitions.summary.properties.originalimage.$ref: '#/definitions/originalimage'
definitions.summary.properties.pageid.description: The page ID
definitions.summary.properties.pageid.type: integer
definitions.summary.properties.thumbnail.$ref: '#/definitions/thumbnail'
definitions.summary.properties.timestamp.description: The time when the page was last
  editted in the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format
definitions.summary.properties.timestamp.example: 1970-01-01T00:00:00.000Z
definitions.summary.properties.timestamp.type: string
definitions.summary.properties.title.description: The page title
definitions.summary.properties.title.type: string
definitions.summary.required.length: 4
definitions.summary.required[0]: title
definitions.summary.required[1]: extract
definitions.summary.required[2]: lang
definitions.summary.required[3]: dir
definitions.summary.type: object
definitions.thumbnail.properties.height.description: Thumnail height
definitions.thumbnail.properties.height.type: integer
definitions.thumbnail.properties.source.description: Thumbnail image URI
definitions.thumbnail.properties.source.type: string
definitions.thumbnail.properties.width.description: Thumbnail width
definitions.thumbnail.properties.width.type: integer
definitions.thumbnail.required.length: 3
definitions.thumbnail.required[0]: source
definitions.thumbnail.required[1]: width
definitions.thumbnail.required[2]: height
definitions.thumbnail.type: object
definitions.unique-devices.properties.items.items.properties.access-site.type: string
definitions.unique-devices.properties.items.items.properties.devices.format: int64
definitions.unique-devices.properties.items.items.properties.devices.type: integer
definitions.unique-devices.properties.items.items.properties.granularity.type: string
definitions.unique-devices.properties.items.items.properties.project.type: string
definitions.unique-devices.properties.items.items.properties.timestamp.type: string
definitions.unique-devices.properties.items.type: array
host: wikimedia.org
info.contact.name: the Wikimedia Services team
info.contact.url: http://mediawiki.org/wiki/REST_API
info.description: |
  This API provides cacheable and straightforward access to Wikimedia content and data, in machine-readable formats.
  ### Global Rules
  - Limit your clients to no more than 200 requests/s to this API.
    Each API endpoint's documentation may detail more specific usage limits.
  - Set a unique `User-Agent` or `Api-User-Agent` header that
    allows us to contact you quickly. Email addresses or URLs
    of contact pages work well.

  By using this API, you agree to Wikimedia's  [Terms of Use](https://wikimediafoundation.org/wiki/Terms_of_Use) and [Privacy Policy](https://wikimediafoundation.org/wiki/Privacy_policy). Unless otherwise specified in the endpoint documentation below, content accessed via this API is licensed under the [CC-BY-SA 3.0](https://creativecommons.org/licenses/by-sa/3.0/)  and [GFDL](https://www.gnu.org/copyleft/fdl.html) licenses, and you irrevocably agree to release modifications or additions made through this API under these licenses.  See https://www.mediawiki.org/wiki/REST_API for background and details.
  ### Endpoint documentation
  Please consult each endpoint's documentation for details on:
  - Licensing information for the specific type of content
    and data served via the endpoint.
  - Stability markers to inform you about development status and
    change policy, according to
    [our API version policy](https://www.mediawiki.org/wiki/API_versioning).
  - Endpoint specific usage limits.
info.license.name: Software available under the Apache 2 license
info.license.url: http://www.apache.org/licenses/LICENSE-2.0
info.termsOfService: https://wikimediafoundation.org/wiki/Terms_of_Use
info.title: Wikimedia
info.version: 1.0.0
info.x-apisguru-categories.length: 1
info.x-apisguru-categories[0]: media
info.x-logo.url: https://api.apis.guru/v2/cache/logo/https_upload.wikimedia.org_wikipedia_en_thumb_8_80_Wikipedia-logo-v2.svg_1122px-Wikipedia-logo-v2.svg.png
info.x-origin.length: 1
info.x-origin[0].format: swagger
info.x-origin[0].url: https://wikimedia.org/api/rest_v1/?spec
info.x-origin[0].version: "2.0"
info.x-preferred: true
info.x-providerName: wikimedia.org
paths./media/math/check/{type}.post.description: |
  Checks the supplied TeX formula for correctness and returns the
  normalised formula representation as well as information about
  identifiers. Available types are tex and inline-tex. The response
  contains the `x-resource-location` header which can be used to retrieve
  the render of the checked formula in one of the supported rendering
  formats. Just append the value of the header to `/media/math/{format}/`
  and perform a GET request against that URL.

  Stability: [stable](https://www.mediawiki.org/wiki/API_versioning#Stable).
paths./media/math/check/{type}.post.parameters.length: 2
paths./media/math/check/{type}.post.parameters[0].description: The input type of the
  given formula; can be tex or inline-tex
paths./media/math/check/{type}.post.parameters[0].enum.length: 3
paths./media/math/check/{type}.post.parameters[0].enum[0]: tex
paths./media/math/check/{type}.post.parameters[0].enum[1]: inline-tex
paths./media/math/check/{type}.post.parameters[0].enum[2]: chem
paths./media/math/check/{type}.post.parameters[0].in: path
paths./media/math/check/{type}.post.parameters[0].name: type
paths./media/math/check/{type}.post.parameters[0].required: true
paths./media/math/check/{type}.post.parameters[0].type: string
paths./media/math/check/{type}.post.parameters[1].description: The formula to check
paths./media/math/check/{type}.post.parameters[1].in: formData
paths./media/math/check/{type}.post.parameters[1].name: q
paths./media/math/check/{type}.post.parameters[1].required: true
paths./media/math/check/{type}.post.parameters[1].type: string
paths./media/math/check/{type}.post.produces.length: 1
paths./media/math/check/{type}.post.produces[0]: application/json
paths./media/math/check/{type}.post.responses.200.description: Information about the
  checked formula
paths./media/math/check/{type}.post.responses.400.description: Invalid type
paths./media/math/check/{type}.post.responses.400.schema.$ref: '#/definitions/problem'
paths./media/math/check/{type}.post.responses.default.description: Error
paths./media/math/check/{type}.post.responses.default.schema.$ref: '#/definitions/problem'
paths./media/math/check/{type}.post.summary: Check and normalize a TeX formula.
paths./media/math/check/{type}.post.tags.length: 1
paths./media/math/check/{type}.post.tags[0]: Math
paths./media/math/check/{type}.post.x-amples.length: 1
paths./media/math/check/{type}.post.x-amples[0].request.body.q: E=mc^{2}
paths./media/math/check/{type}.post.x-amples[0].request.params.domain: wikimedia.org
paths./media/math/check/{type}.post.x-amples[0].request.params.type: tex
paths./media/math/check/{type}.post.x-amples[0].response.body.checked: /.+/
paths./media/math/check/{type}.post.x-amples[0].response.body.success: true
paths./media/math/check/{type}.post.x-amples[0].response.headers.cache-control: no-cache
paths./media/math/check/{type}.post.x-amples[0].response.headers.content-type: /^application\/json/
paths./media/math/check/{type}.post.x-amples[0].response.headers.x-resource-location: /.+/
paths./media/math/check/{type}.post.x-amples[0].response.status: 200
paths./media/math/check/{type}.post.x-amples[0].title: Mathoid - check test formula
paths./media/math/check/{type}.post.x-monitor: true
paths./media/math/formula/{hash}.get.description: |
  Returns the previously-stored formula via `/media/math/check/{type}` for
  the given hash.

  Stability: [stable](https://www.mediawiki.org/wiki/API_versioning#Stable).
paths./media/math/formula/{hash}.get.parameters.length: 1
paths./media/math/formula/{hash}.get.parameters[0].description: The hash string of
  the previous POST data
paths./media/math/formula/{hash}.get.parameters[0].in: path
paths./media/math/formula/{hash}.get.parameters[0].minLength: 1
paths./media/math/formula/{hash}.get.parameters[0].name: hash
paths./media/math/formula/{hash}.get.parameters[0].required: true
paths./media/math/formula/{hash}.get.parameters[0].type: string
paths./media/math/formula/{hash}.get.produces.length: 1
paths./media/math/formula/{hash}.get.produces[0]: application/json
paths./media/math/formula/{hash}.get.responses.200.description: Information about
  the checked formula
paths./media/math/formula/{hash}.get.responses.404.description: Data for the given
  hash cannot be found
paths./media/math/formula/{hash}.get.responses.404.schema.$ref: '#/definitions/problem'
paths./media/math/formula/{hash}.get.responses.default.description: Error
paths./media/math/formula/{hash}.get.responses.default.schema.$ref: '#/definitions/problem'
paths./media/math/formula/{hash}.get.summary: Get a previously-stored formula
paths./media/math/formula/{hash}.get.tags.length: 1
paths./media/math/formula/{hash}.get.tags[0]: Math
paths./media/math/formula/{hash}.get.x-monitor: false
paths./media/math/render/{format}/{hash}.get.description: |
  Given a request hash, renders a TeX formula into its mathematic
  representation in the given format. When a request is issued to the
  `/media/math/check/{format}` POST endpoint, the response contains the
  `x-resource-location` header denoting the hash ID of the POST data. Once
  obtained, this endpoint has to be used to obtain the actual render.

  Stability: [stable](https://www.mediawiki.org/wiki/API_versioning#Stable).
paths./media/math/render/{format}/{hash}.get.parameters.length: 2
paths./media/math/render/{format}/{hash}.get.parameters[0].description: The output
  format; can be svg or mml
paths./media/math/render/{format}/{hash}.get.parameters[0].enum.length: 3
paths./media/math/render/{format}/{hash}.get.parameters[0].enum[0]: svg
paths./media/math/render/{format}/{hash}.get.parameters[0].enum[1]: mml
paths./media/math/render/{format}/{hash}.get.parameters[0].enum[2]: png
paths./media/math/render/{format}/{hash}.get.parameters[0].in: path
paths./media/math/render/{format}/{hash}.get.parameters[0].name: format
paths./media/math/render/{format}/{hash}.get.parameters[0].required: true
paths./media/math/render/{format}/{hash}.get.parameters[0].type: string
paths./media/math/render/{format}/{hash}.get.parameters[1].description: The hash string
  of the previous POST data
paths./media/math/render/{format}/{hash}.get.parameters[1].in: path
paths./media/math/render/{format}/{hash}.get.parameters[1].minLength: 1
paths./media/math/render/{format}/{hash}.get.parameters[1].name: hash
paths./media/math/render/{format}/{hash}.get.parameters[1].required: true
paths./media/math/render/{format}/{hash}.get.parameters[1].type: string
paths./media/math/render/{format}/{hash}.get.produces.length: 3
paths./media/math/render/{format}/{hash}.get.produces[0]: image/svg+xml
paths./media/math/render/{format}/{hash}.get.produces[1]: application/mathml+xml
paths./media/math/render/{format}/{hash}.get.produces[2]: image/png
paths./media/math/render/{format}/{hash}.get.responses.200.description: The rendered
  formula
paths./media/math/render/{format}/{hash}.get.responses.404.description: Unknown format
  or hash ID
paths./media/math/render/{format}/{hash}.get.responses.404.schema.$ref: '#/definitions/problem'
paths./media/math/render/{format}/{hash}.get.responses.default.description: Error
paths./media/math/render/{format}/{hash}.get.responses.default.schema.$ref: '#/definitions/problem'
paths./media/math/render/{format}/{hash}.get.summary: Get rendered formula in the
  given format.
paths./media/math/render/{format}/{hash}.get.tags.length: 1
paths./media/math/render/{format}/{hash}.get.tags[0]: Math
paths./media/math/render/{format}/{hash}.get.x-monitor: false
paths./metrics/legacy/.get.description: |
  This is the root of all legacy data endpoints. For the moment it only contains aggregated pagecounts.

  - Stability: [stable](https://www.mediawiki.org/wiki/API_versioning#Stable)
  - Rate limit: 100 req/s
  - License: Data accessible via this endpoint is available under the
    [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).
paths./metrics/legacy/.get.produces.length: 1
paths./metrics/legacy/.get.produces[0]: application/json
paths./metrics/legacy/.get.responses.200.description: The queriable sub-items
paths./metrics/legacy/.get.responses.200.schema.$ref: '#/definitions/listing'
paths./metrics/legacy/.get.responses.default.description: Error
paths./metrics/legacy/.get.responses.default.schema.$ref: '#/definitions/problem'
paths./metrics/legacy/.get.summary: List legacy metrics API entry points.
paths./metrics/legacy/.get.tags.length: 1
paths./metrics/legacy/.get.tags[0]: Legacy metrics
paths./metrics/legacy/.get.x-monitor: false
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.description: |
  Given a project and a date range, returns a timeseries of pagecounts. You can filter by access site (mobile or desktop) and you can choose between monthly, daily and hourly granularity as well.

  - Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)
  - Rate limit: 100 req/s
  - License: Data accessible via this endpoint is available under the
    [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters.length: 5
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[0].description: The
  name of any Wikimedia project formatted like {language code}.{project name}, for
  example en.wikipedia. You may pass en.wikipedia.org and the .org will be stripped
  off. For projects like commons without language codes, use commons.wikimedia.
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[0].in: path
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[0].name: project
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[0].required: true
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[0].type: string
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[1].description: If
  you want to filter by access site, use one of desktop-site or mobile-site. If you
  are interested in pagecounts regardless of access site use all-sites.
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[1].enum.length: 3
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[1].enum[0]: all-sites
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[1].enum[1]: desktop-site
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[1].enum[2]: mobile-site
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[1].in: path
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[1].name: access-site
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[1].required: true
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[1].type: string
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[2].description: The
  time unit for the response data. As of today, the supported granularities for this
  endpoint are hourly, daily and monthly.
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[2].enum.length: 3
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[2].enum[0]: hourly
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[2].enum[1]: daily
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[2].enum[2]: monthly
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[2].in: path
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[2].name: granularity
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[2].required: true
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[2].type: string
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[3].description: The
  timestamp of the first hour/day/month to include, in YYYYMMDDHH format.
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[3].in: path
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[3].name: start
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[3].required: true
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[3].type: string
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[4].description: The
  timestamp of the last hour/day/month to include, in YYYYMMDDHH format. In hourly
  and daily granularities this value is inclusive, in the monthly granularity this
  value is exclusive.
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[4].in: path
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[4].name: end
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[4].required: true
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[4].type: string
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.produces.length: 1
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.produces[0]: application/json
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.responses.200.description: The
  list of values
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.responses.200.schema.$ref: '#/definitions/pagecounts-project'
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.responses.default.description: Error
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.responses.default.schema.$ref: '#/definitions/problem'
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.tags.length: 1
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.tags[0]: Pagecounts
  data (legacy)
paths./metrics/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}.get.x-monitor: false
paths./metrics/pageviews/.get.description: |
  This is the root of all pageview data endpoints.  The list of paths that this returns includes ways to query by article, project, top articles, etc.  If browsing the interactive documentation, see the specifics for each endpoint below.

  - Stability: [stable](https://www.mediawiki.org/wiki/API_versioning#Stable)
  - Rate limit: 100 req/s
  - License: Data accessible via this endpoint is available under the
    [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).
paths./metrics/pageviews/.get.produces.length: 1
paths./metrics/pageviews/.get.produces[0]: application/json
paths./metrics/pageviews/.get.responses.200.description: The queriable sub-items
paths./metrics/pageviews/.get.responses.200.schema.$ref: '#/definitions/listing'
paths./metrics/pageviews/.get.responses.default.description: Error
paths./metrics/pageviews/.get.responses.default.schema.$ref: '#/definitions/problem'
paths./metrics/pageviews/.get.summary: List pageview-related API entry points.
paths./metrics/pageviews/.get.tags.length: 1
paths./metrics/pageviews/.get.tags[0]: Pageviews data
paths./metrics/pageviews/.get.x-monitor: false
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.description: |
  Given a date range, returns a timeseries of pageview counts. You can filter by project, access method and/or agent type. You can choose between daily and hourly granularity as well.

  - Stability: [stable](https://www.mediawiki.org/wiki/API_versioning#Stable)
  - Rate limit: 100 req/s
  - License: Data accessible via this endpoint is available under the
    [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters.length: 6
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[0].description: If
  you want to filter by project, use the domain of any Wikimedia project, for example
  'en.wikipedia.org', 'www.mediawiki.org' or 'commons.wikimedia.org'. If you are interested
  in all pageviews regardless of project, use all-projects.
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[0].in: path
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[0].name: project
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[0].required: true
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[0].type: string
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[1].description: If
  you want to filter by access method, use one of desktop, mobile-app or mobile-web.
  If you are interested in pageviews regardless of access method, use all-access
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[1].enum.length: 4
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[1].enum[0]: all-access
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[1].enum[1]: desktop
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[1].enum[2]: mobile-app
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[1].enum[3]: mobile-web
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[1].in: path
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[1].name: access
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[1].required: true
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[1].type: string
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[2].description: If
  you want to filter by agent type, use one of user or spider. If you are interested
  in pageviews regardless of agent type, use all-agents
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[2].enum.length: 3
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[2].enum[0]: all-agents
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[2].enum[1]: user
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[2].enum[2]: spider
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[2].in: path
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[2].name: agent
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[2].required: true
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[2].type: string
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[3].description: The
  time unit for the response data. As of today, the supported granularities for this
  endpoint are hourly, daily, and monthly
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[3].enum.length: 3
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[3].enum[0]: hourly
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[3].enum[1]: daily
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[3].enum[2]: monthly
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[3].in: path
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[3].name: granularity
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[3].required: true
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[3].type: string
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[4].description: The
  timestamp of the first hour/day/month to include, in YYYYMMDDHH format
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[4].in: path
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[4].name: start
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[4].required: true
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[4].type: string
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[5].description: The
  timestamp of the last hour/day/month to include, in YYYYMMDDHH format
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[5].in: path
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[5].name: end
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[5].required: true
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.parameters[5].type: string
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.produces.length: 1
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.produces[0]: application/json
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.responses.200.description: The
  list of values
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.responses.200.schema.$ref: '#/definitions/pageview-project'
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.responses.default.description: Error
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.responses.default.schema.$ref: '#/definitions/problem'
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.summary: Get
  pageview counts for a project.
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.tags.length: 1
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.tags[0]: Pageviews
  data
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.x-amples.length: 1
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.x-amples[0].request.params.access: all-access
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.x-amples[0].request.params.agent: all-agents
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.x-amples[0].request.params.domain: wikimedia.org
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.x-amples[0].request.params.end: 1.9700101e+09
? paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.x-amples[0].request.params.granularity
: hourly
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.x-amples[0].request.params.project: en.wikipedia
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.x-amples[0].request.params.start: 1.9700101e+09
? paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.x-amples[0].response.body.items.length
: 1
? paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.x-amples[0].response.body.items[0].access
: all-access
? paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.x-amples[0].response.body.items[0].agent
: all-agents
? paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.x-amples[0].response.body.items[0].granularity
: hourly
? paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.x-amples[0].response.body.items[0].project
: en.wikipedia
? paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.x-amples[0].response.body.items[0].timestamp
: 1.9700101e+09
? paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.x-amples[0].response.body.items[0].views
: 0
? paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.x-amples[0].response.headers.content-type
: application/json
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.x-amples[0].response.status: 200
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.x-amples[0].title: Get
  aggregate page views
paths./metrics/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}.get.x-monitor: true
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.description: |
  Given a Mediawiki article and a date range, returns a daily timeseries of its pageview counts. You can also filter by access method and/or agent type.

  - Stability: [stable](https://www.mediawiki.org/wiki/API_versioning#Stable)
  - Rate limit: 100 req/s
  - License: Data accessible via this endpoint is available under the
    [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters.length: 7
? paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[0].description
: If you want to filter by project, use the domain of any Wikimedia project, for example
  'en.wikipedia.org', 'www.mediawiki.org' or 'commons.wikimedia.org'.
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[0].in: path
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[0].name: project
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[0].required: true
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[0].type: string
? paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[1].description
: If you want to filter by access method, use one of desktop, mobile-app or mobile-web.
  If you are interested in pageviews regardless of access method, use all-access
? paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[1].enum.length
: 4
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[1].enum[0]: all-access
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[1].enum[1]: desktop
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[1].enum[2]: mobile-app
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[1].enum[3]: mobile-web
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[1].in: path
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[1].name: access
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[1].required: true
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[1].type: string
? paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[2].description
: If you want to filter by agent type, use one of user, bot or spider. If you are
  interested in pageviews regardless of agent type, use all-agents
? paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[2].enum.length
: 4
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[2].enum[0]: all-agents
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[2].enum[1]: user
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[2].enum[2]: spider
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[2].enum[3]: bot
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[2].in: path
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[2].name: agent
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[2].required: true
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[2].type: string
? paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[3].description
: 'The title of any article in the specified project. Any spaces should be replaced
  with underscores. It also should be URI-encoded, so that non-URI-safe characters
  like %, / or ? are accepted. Example: Are_You_the_One%3F'
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[3].in: path
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[3].name: article
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[3].required: true
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[3].type: string
? paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[4].description
: The time unit for the response data. As of today, the only supported granularity
  for this endpoint is daily and monthly.
? paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[4].enum.length
: 2
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[4].enum[0]: daily
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[4].enum[1]: monthly
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[4].in: path
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[4].name: granularity
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[4].required: true
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[4].type: string
? paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[5].description
: The date of the first day to include, in YYYYMMDD format
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[5].in: path
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[5].name: start
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[5].required: true
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[5].type: string
? paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[6].description
: The date of the last day to include, in YYYYMMDD format
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[6].in: path
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[6].name: end
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[6].required: true
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.parameters[6].type: string
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.produces.length: 1
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.produces[0]: application/json
? paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.responses.200.description
: The list of values
? paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.responses.200.schema.$ref
: '#/definitions/pageview-article'
? paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.responses.default.description
: Error
? paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.responses.default.schema.$ref
: '#/definitions/problem'
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.summary: Get
  pageview counts for a page.
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.tags.length: 1
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.tags[0]: Pageviews
  data
paths./metrics/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}.get.x-monitor: false
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.description: |
  Lists the 1000 most viewed articles for a given project and timespan (month or day). You can filter by access method.

  - Stability: [stable](https://www.mediawiki.org/wiki/API_versioning#Stable)
  - Rate limit: 100 req/s
  - License: Data accessible via this endpoint is available under the
    [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.parameters.length: 5
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.parameters[0].description: If
  you want to filter by project, use the domain of any Wikimedia project, for example
  'en.wikipedia.org', 'www.mediawiki.org' or 'commons.wikimedia.org'.
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.parameters[0].in: path
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.parameters[0].name: project
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.parameters[0].required: true
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.parameters[0].type: string
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.parameters[1].description: If
  you want to filter by access method, use one of desktop, mobile-app or mobile-web.
  If you are interested in pageviews regardless of access method, use all-access
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.parameters[1].enum.length: 4
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.parameters[1].enum[0]: all-access
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.parameters[1].enum[1]: desktop
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.parameters[1].enum[2]: mobile-app
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.parameters[1].enum[3]: mobile-web
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.parameters[1].in: path
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.parameters[1].name: access
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.parameters[1].required: true
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.parameters[1].type: string
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.parameters[2].description: The
  year of the date for which to retrieve top articles, in YYYY format.
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.parameters[2].in: path
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.parameters[2].name: year
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.parameters[2].required: true
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.parameters[2].type: string
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.parameters[3].description: The
  month of the date for which to retrieve top articles, in MM format. If you want
  to get the top articles of a whole month, the day parameter should be all-days.
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.parameters[3].in: path
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.parameters[3].name: month
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.parameters[3].required: true
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.parameters[3].type: string
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.parameters[4].description: The
  day of the date for which to retrieve top articles, in DD format.
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.parameters[4].in: path
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.parameters[4].name: day
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.parameters[4].required: true
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.parameters[4].type: string
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.produces.length: 1
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.produces[0]: application/json
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.responses.200.description: The
  list of top articles in the project
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.responses.200.schema.$ref: '#/definitions/pageview-tops'
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.responses.default.description: Error
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.responses.default.schema.$ref: '#/definitions/problem'
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.summary: Get
  the most viewed articles for a project.
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.tags.length: 1
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.tags[0]: Pageviews
  data
paths./metrics/pageviews/top/{project}/{access}/{year}/{month}/{day}.get.x-monitor: false
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.description: |
  Given a project and a date range, returns a timeseries of unique devices counts. You need to specify a project, and can filter by accessed site (mobile or desktop). You can choose between daily and hourly granularity as well.

  - Stability: [stable](https://www.mediawiki.org/wiki/API_versioning#Stable)
  - Rate limit: 100 req/s
  - License: Data accessible via this endpoint is available under the
    [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters.length: 5
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[0].description: If
  you want to filter by project, use the domain of any Wikimedia project, for example
  'en.wikipedia.org', 'www.mediawiki.org' or 'commons.wikimedia.org'.
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[0].in: path
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[0].name: project
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[0].required: true
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[0].type: string
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[1].description: If
  you want to filter by accessed site, use one of desktop-site or mobile-site. If
  you are interested in unique devices regardless of accessed site, use or all-sites
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[1].enum.length: 3
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[1].enum[0]: all-sites
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[1].enum[1]: desktop-site
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[1].enum[2]: mobile-site
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[1].in: path
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[1].name: access-site
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[1].required: true
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[1].type: string
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[2].description: The
  time unit for the response data. As of today, the supported granularities for this
  endpoint are daily and monthly
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[2].enum.length: 2
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[2].enum[0]: daily
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[2].enum[1]: monthly
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[2].in: path
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[2].name: granularity
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[2].required: true
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[2].type: string
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[3].description: The
  timestamp of the first day/month to include, in YYYYMMDD format
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[3].in: path
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[3].name: start
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[3].required: true
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[3].type: string
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[4].description: The
  timestamp of the last day/month to include, in YYYYMMDD format
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[4].in: path
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[4].name: end
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[4].required: true
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.parameters[4].type: string
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.produces.length: 1
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.produces[0]: application/json
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.responses.200.description: The
  list of values
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.responses.200.schema.$ref: '#/definitions/unique-devices'
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.responses.default.description: Error
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.responses.default.schema.$ref: '#/definitions/problem'
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.summary: Get
  unique devices count per project
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.tags.length: 1
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.tags[0]: Unique
  devices data
paths./metrics/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}.get.x-monitor: false
paths./transform/html/from/{from_lang}/to/{to_lang}.parameters.length: 0
paths./transform/html/from/{from_lang}/to/{to_lang}.post.consumes.length: 1
paths./transform/html/from/{from_lang}/to/{to_lang}.post.consumes[0]: application/x-www-form-urlencoded
paths./transform/html/from/{from_lang}/to/{to_lang}.post.description: |
  Fetches the machine translation for the posted content from the source
  to the destination language.

  Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)
paths./transform/html/from/{from_lang}/to/{to_lang}.post.parameters.length: 3
paths./transform/html/from/{from_lang}/to/{to_lang}.post.parameters[0].description: The
  source language code
paths./transform/html/from/{from_lang}/to/{to_lang}.post.parameters[0].in: path
paths./transform/html/from/{from_lang}/to/{to_lang}.post.parameters[0].name: from_lang
paths./transform/html/from/{from_lang}/to/{to_lang}.post.parameters[0].required: true
paths./transform/html/from/{from_lang}/to/{to_lang}.post.parameters[0].type: string
paths./transform/html/from/{from_lang}/to/{to_lang}.post.parameters[1].description: The
  target language code
paths./transform/html/from/{from_lang}/to/{to_lang}.post.parameters[1].in: path
paths./transform/html/from/{from_lang}/to/{to_lang}.post.parameters[1].name: to_lang
paths./transform/html/from/{from_lang}/to/{to_lang}.post.parameters[1].required: true
paths./transform/html/from/{from_lang}/to/{to_lang}.post.parameters[1].type: string
paths./transform/html/from/{from_lang}/to/{to_lang}.post.parameters[2].description: The
  HTML content to translate
paths./transform/html/from/{from_lang}/to/{to_lang}.post.parameters[2].in: formData
paths./transform/html/from/{from_lang}/to/{to_lang}.post.parameters[2].name: html
paths./transform/html/from/{from_lang}/to/{to_lang}.post.parameters[2].required: true
paths./transform/html/from/{from_lang}/to/{to_lang}.post.parameters[2].type: string
paths./transform/html/from/{from_lang}/to/{to_lang}.post.parameters[2].x-textarea: true
paths./transform/html/from/{from_lang}/to/{to_lang}.post.produces.length: 1
paths./transform/html/from/{from_lang}/to/{to_lang}.post.produces[0]: application/json
paths./transform/html/from/{from_lang}/to/{to_lang}.post.responses.200.description: The
  translated content
paths./transform/html/from/{from_lang}/to/{to_lang}.post.responses.200.schema.$ref: '#/definitions/cx_mt'
paths./transform/html/from/{from_lang}/to/{to_lang}.post.responses.default.description: Error
paths./transform/html/from/{from_lang}/to/{to_lang}.post.responses.default.schema.$ref: '#/definitions/problem'
paths./transform/html/from/{from_lang}/to/{to_lang}.post.summary: Machine-translate
  content
paths./transform/html/from/{from_lang}/to/{to_lang}.post.tags.length: 1
paths./transform/html/from/{from_lang}/to/{to_lang}.post.tags[0]: Transform
paths./transform/html/from/{from_lang}/to/{to_lang}.post.x-monitor: false
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.parameters.length: 0
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.consumes.length: 1
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.consumes[0]: application/x-www-form-urlencoded
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.description: |
  Fetches the machine translation for the posted content from the source
  to the destination language.

  Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.parameters.length: 4
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.parameters[0].description: The
  source language code
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.parameters[0].in: path
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.parameters[0].name: from_lang
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.parameters[0].required: true
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.parameters[0].type: string
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.parameters[1].description: The
  target language code
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.parameters[1].in: path
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.parameters[1].name: to_lang
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.parameters[1].required: true
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.parameters[1].type: string
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.parameters[2].description: The
  machine translation provider id
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.parameters[2].enum.length: 3
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.parameters[2].enum[0]: Apertium
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.parameters[2].enum[1]: Yandex
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.parameters[2].enum[2]: Youdao
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.parameters[2].in: path
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.parameters[2].name: provider
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.parameters[2].required: true
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.parameters[2].type: string
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.parameters[3].description: The
  HTML content to translate
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.parameters[3].in: formData
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.parameters[3].name: html
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.parameters[3].required: true
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.parameters[3].type: string
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.parameters[3].x-textarea: true
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.produces.length: 1
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.produces[0]: application/json
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.responses.200.description: The
  translated content
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.responses.200.schema.$ref: '#/definitions/cx_mt'
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.responses.default.description: Error
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.responses.default.schema.$ref: '#/definitions/problem'
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.summary: Machine-translate
  content
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.tags.length: 1
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.tags[0]: Transform
paths./transform/html/from/{from_lang}/to/{to_lang}/{provider}.post.x-monitor: false
paths./transform/list/languagepairs/.get.description: |
  Fetches the list of language pairs the back-end service can translate

  Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)
paths./transform/list/languagepairs/.get.produces.length: 1
paths./transform/list/languagepairs/.get.produces[0]: application/json
paths./transform/list/languagepairs/.get.responses.200.description: the list of source
  and target languages supported by the API
paths./transform/list/languagepairs/.get.responses.200.schema.$ref: '#/definitions/cx_languagepairs'
paths./transform/list/languagepairs/.get.summary: Lists the language pairs supported
  by the back-end
paths./transform/list/languagepairs/.get.tags.length: 1
paths./transform/list/languagepairs/.get.tags[0]: Transform
paths./transform/list/languagepairs/.get.x-monitor: false
paths./transform/list/pair/{from}/{to}/.get.description: |
  Fetches the list of tools that are available for the given pair of languages.

  Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)
paths./transform/list/pair/{from}/{to}/.get.parameters.length: 2
paths./transform/list/pair/{from}/{to}/.get.parameters[0].description: The source
  language code
paths./transform/list/pair/{from}/{to}/.get.parameters[0].in: path
paths./transform/list/pair/{from}/{to}/.get.parameters[0].name: from
paths./transform/list/pair/{from}/{to}/.get.parameters[0].required: true
paths./transform/list/pair/{from}/{to}/.get.parameters[0].type: string
paths./transform/list/pair/{from}/{to}/.get.parameters[1].description: The target
  language code
paths./transform/list/pair/{from}/{to}/.get.parameters[1].in: path
paths./transform/list/pair/{from}/{to}/.get.parameters[1].name: to
paths./transform/list/pair/{from}/{to}/.get.parameters[1].required: true
paths./transform/list/pair/{from}/{to}/.get.parameters[1].type: string
paths./transform/list/pair/{from}/{to}/.get.produces.length: 1
paths./transform/list/pair/{from}/{to}/.get.produces[0]: application/json
paths./transform/list/pair/{from}/{to}/.get.responses.200.description: the list of
  tools available for the language pair
paths./transform/list/pair/{from}/{to}/.get.responses.200.schema.$ref: '#/definitions/cx_list_tools'
paths./transform/list/pair/{from}/{to}/.get.responses.default.description: Error
paths./transform/list/pair/{from}/{to}/.get.responses.default.schema.$ref: '#/definitions/problem'
paths./transform/list/pair/{from}/{to}/.get.summary: Lists the tools available for
  a language pair
paths./transform/list/pair/{from}/{to}/.get.tags.length: 1
paths./transform/list/pair/{from}/{to}/.get.tags[0]: Transform
paths./transform/list/pair/{from}/{to}/.get.x-monitor: false
paths./transform/list/tool/{tool}/.get.description: |
  Fetches the list of tools and all of the language pairs it can translate

  Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)
paths./transform/list/tool/{tool}/.get.parameters.length: 1
paths./transform/list/tool/{tool}/.get.parameters[0].description: The tool category
  to list tools and language pairs for
paths./transform/list/tool/{tool}/.get.parameters[0].enum.length: 2
paths./transform/list/tool/{tool}/.get.parameters[0].enum[0]: mt
paths./transform/list/tool/{tool}/.get.parameters[0].enum[1]: dictionary
paths./transform/list/tool/{tool}/.get.parameters[0].in: path
paths./transform/list/tool/{tool}/.get.parameters[0].name: tool
paths./transform/list/tool/{tool}/.get.parameters[0].required: true
paths./transform/list/tool/{tool}/.get.parameters[0].type: string
paths./transform/list/tool/{tool}/.get.produces.length: 1
paths./transform/list/tool/{tool}/.get.produces[0]: application/json
paths./transform/list/tool/{tool}/.get.responses.200.description: the list of language
  pairs available for a given translation tool
paths./transform/list/tool/{tool}/.get.responses.200.schema.$ref: '#/definitions/cx_list_pairs_for_tool'
paths./transform/list/tool/{tool}/.get.responses.default.description: Error
paths./transform/list/tool/{tool}/.get.responses.default.schema.$ref: '#/definitions/problem'
paths./transform/list/tool/{tool}/.get.summary: Lists the tools and language pairs
  available for the given tool category
paths./transform/list/tool/{tool}/.get.tags.length: 1
paths./transform/list/tool/{tool}/.get.tags[0]: Transform
paths./transform/list/tool/{tool}/.get.x-monitor: false
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}.get.description: |
  Fetches the dictionary meaning of a word from a language and displays
  it in the target language.

  Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}.get.parameters.length: 3
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}.get.parameters[0].description: The
  source language code
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}.get.parameters[0].in: path
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}.get.parameters[0].name: from_lang
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}.get.parameters[0].required: true
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}.get.parameters[0].type: string
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}.get.parameters[1].description: The
  target language code
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}.get.parameters[1].in: path
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}.get.parameters[1].name: to_lang
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}.get.parameters[1].required: true
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}.get.parameters[1].type: string
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}.get.parameters[2].description: The
  word to lookup
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}.get.parameters[2].in: path
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}.get.parameters[2].name: word
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}.get.parameters[2].required: true
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}.get.parameters[2].type: string
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}.get.produces.length: 1
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}.get.produces[0]: application/json
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}.get.responses.200.description: the
  dictionary translation for the given word
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}.get.responses.200.schema.$ref: '#/definitions/cx_dict'
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}.get.responses.default.description: Error
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}.get.responses.default.schema.$ref: '#/definitions/problem'
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}.get.summary: Fetch the
  dictionary meaning of a word
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}.get.tags.length: 1
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}.get.tags[0]: Transform
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}.get.x-monitor: false
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}.parameters.length: 0
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.description: |
  Fetches the dictionary meaning of a word from a language and displays
  it in the target language.

  Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.parameters.length: 4
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.parameters[0].description: The
  source language code
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.parameters[0].in: path
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.parameters[0].name: from_lang
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.parameters[0].required: true
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.parameters[0].type: string
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.parameters[1].description: The
  target language code
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.parameters[1].in: path
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.parameters[1].name: to_lang
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.parameters[1].required: true
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.parameters[1].type: string
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.parameters[2].description: The
  word to lookup
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.parameters[2].in: path
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.parameters[2].name: word
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.parameters[2].required: true
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.parameters[2].type: string
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.parameters[3].description: The
  dictionary provider id
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.parameters[3].enum.length: 2
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.parameters[3].enum[0]: JsonDict
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.parameters[3].enum[1]: Dictd
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.parameters[3].in: path
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.parameters[3].name: provider
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.parameters[3].required: true
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.parameters[3].type: string
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.produces.length: 1
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.produces[0]: application/json
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.responses.200.description: the
  dictionary translation for the given word
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.responses.200.schema.$ref: '#/definitions/cx_dict'
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.responses.default.description: Error
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.responses.default.schema.$ref: '#/definitions/problem'
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.summary: Fetch
  the dictionary meaning of a word
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.tags.length: 1
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.tags[0]: Transform
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.get.x-monitor: false
paths./transform/word/from/{from_lang}/to/{to_lang}/{word}/{provider}.parameters.length: 0
schemes.length: 1
schemes[0]: https
securityDefinitions.mediawiki_auth.description: Checks permissions using MW api
securityDefinitions.mediawiki_auth.in: header
securityDefinitions.mediawiki_auth.name: cookie
securityDefinitions.mediawiki_auth.type: apiKey
securityDefinitions.mediawiki_auth.x-internal-request-whitelist.length: 1
securityDefinitions.mediawiki_auth.x-internal-request-whitelist[0]: /http:\/\/[a-zA-Z0-9\.]+\/w\/api\.php/
swagger: "2.0"
tags.length: 1
tags[0].description: formula rendering
tags[0].name: Math
x-host-basePath: /api/rest_v1
