basePath = "/api/transportation-incentives-laws"
"definitions.Category.description" = "A category that the law applies to"
"definitions.Category.properties.category_type.description" = "The type of category. (E.g. tech, incentive, regulation, user)"
"definitions.Category.properties.category_type.type" = "string"
"definitions.Category.properties.code.description" = "The code used to identify the category"
"definitions.Category.properties.code.type" = "string"
"definitions.Category.properties.title.description" = "The full name of the category"
"definitions.Category.properties.title.type" = "string"
"definitions.Category.required.length" = 3
"definitions.Category.required[0]" = "code"
"definitions.Category.required[1]" = "title"
"definitions.Category.required[2]" = "category_type"
"definitions.CategoryResults.properties.inputs.$ref" = "#/definitions/Inputs"
"definitions.CategoryResults.properties.inputs.description" = "The parameters that were passed to the api call"
"definitions.CategoryResults.properties.metadata.$ref" = "#/definitions/Metadata"
"definitions.CategoryResults.properties.metadata.description" = "The api version number, and the count of categories returned"
"definitions.CategoryResults.properties.result.description" = "The array of law categories returned"
"definitions.CategoryResults.properties.result.items.$ref" = "#/definitions/FullCategory"
"definitions.CategoryResults.properties.result.type" = "array"
"definitions.CategoryResults.required.length" = 3
"definitions.CategoryResults.required[0]" = "metadata"
"definitions.CategoryResults.required[1]" = "inputs"
"definitions.CategoryResults.required[2]" = "result"
"definitions.FullCategory.properties.category_type.description" = "The type of category. (E.g. tech, incentive, regulation, user)"
"definitions.FullCategory.properties.category_type.type" = "string"
"definitions.FullCategory.properties.code.description" = "The code used to identify the category"
"definitions.FullCategory.properties.code.type" = "string"
"definitions.FullCategory.properties.help_text.description" = "A short description of what the law category encompasses"
"definitions.FullCategory.properties.help_text.type" = "string"
"definitions.FullCategory.properties.sort_order.description" = "The sort order for the categories"
"definitions.FullCategory.properties.sort_order.type" = "string"
"definitions.FullCategory.properties.title.description" = "The full name of the category"
"definitions.FullCategory.properties.title.type" = "string"
"definitions.FullCategory.required.length" = 4
"definitions.FullCategory.required[0]" = "code"
"definitions.FullCategory.required[1]" = "title"
"definitions.FullCategory.required[2]" = "category_type"
"definitions.FullCategory.required[3]" = "sort_order"
"definitions.Inputs.description" = "The parameters that were passed to the API"
"definitions.Law.description" = "This is a Law"
"definitions.Law.properties.agency.description" = "The agency with primary responsibility for federal incentives/regulations."
"definitions.Law.properties.agency.type" = "string"
"definitions.Law.properties.amended_date.description" = "The date the incentive/law/regulation was updated through new legislation or rulemaking."
"definitions.Law.properties.amended_date.format" = "date-time"
"definitions.Law.properties.amended_date.type" = "string"
"definitions.Law.properties.archived_date.description" = "The date that an incentive/law/regulation is no longer relevant to the database. This may include longstanding Executive Orders or laws requiring legislative studies that have been completed."
"definitions.Law.properties.archived_date.format" = "date-time"
"definitions.Law.properties.archived_date.type" = "string"
"definitions.Law.properties.categories.description" = "The various law categories that apply to this law"
"definitions.Law.properties.categories.items.$ref" = "#/definitions/Category"
"definitions.Law.properties.categories.type" = "array"
"definitions.Law.properties.contacts.description" = "The contacts for the given law, returned only if the parameter poc is true"
"definitions.Law.properties.contacts.items.$ref" = "#/definitions/Poc"
"definitions.Law.properties.contacts.type" = "array"
"definitions.Law.properties.enacted_date.description" = "The date the enacting legislation (if applicable) was signed into law."
"definitions.Law.properties.enacted_date.format" = "date-time"
"definitions.Law.properties.enacted_date.type" = "string"
"definitions.Law.properties.expired_date.description" = "The date the incentive/law/regulation is set to end."
"definitions.Law.properties.expired_date.format" = "date-time"
"definitions.Law.properties.expired_date.type" = "string"
"definitions.Law.properties.id.description" = "A unique identifier for this specific incentive/law/regulation."
"definitions.Law.properties.id.type" = "integer"
"definitions.Law.properties.is_recent.description" = "The true or false value used to distinguish between recent federal executive actions (TRUE) and active incentives/laws/regulations (FALSE)."
"definitions.Law.properties.is_recent.type" = "boolean"
"definitions.Law.properties.plaintext.description" = "Description of the incentive/law/regulation, including applicable legislative references, in <a href=\"https://guides.github.com/features/mastering-markdown/\">markdown formatting</a>"
"definitions.Law.properties.plaintext.type" = "string"
"definitions.Law.properties.recent_update_or_new.description" = "An indicator if the last significant update was an update or the laws creation."
"definitions.Law.properties.recent_update_or_new.type" = "string"
"definitions.Law.properties.references.description" = "The URL associated with any bill or legislative reference included in the description."
"definitions.Law.properties.references.items.$ref" = "#/definitions/LawReference"
"definitions.Law.properties.references.type" = "array"
"definitions.Law.properties.repealed_date.description" = "The date legislation is enacted or a rulemaking is finalized to repeal the incentive/law/regulation."
"definitions.Law.properties.repealed_date.format" = "date-time"
"definitions.Law.properties.repealed_date.type" = "string"
"definitions.Law.properties.seq_num.description" = "The numerical value assigned to a description to show the order in which it is displayed online within a jurisdiction (state)."
"definitions.Law.properties.seq_num.type" = "integer"
"definitions.Law.properties.significant_update_date.description" = "When the last significant update to the law was made."
"definitions.Law.properties.significant_update_date.format" = "date-time"
"definitions.Law.properties.significant_update_date.type" = "string"
"definitions.Law.properties.state.description" = "The state in which the incentive/law/regulation was enacted and is active."
"definitions.Law.properties.state.type" = "string"
"definitions.Law.properties.text.description" = "Description of the incentive/law/regulation, including applicable legislative references, html formated."
"definitions.Law.properties.text.type" = "string"
"definitions.Law.properties.title.description" = "The brief title assigned to the incentive/law/regulation description."
"definitions.Law.properties.title.type" = "string"
"definitions.Law.properties.topics.description" = "For local incentive/regulation descriptions, the category that the incentive/regulation falls under, described below: Infrastructure Requirements, Vehicle Purchase and Infrastructure Development Incentives, Fuel Use Incentives, Parking Incentives, Technical Assistance, Vehicle Acquisition Requirements, Promotion Initiatives, Idle Reduction Requirements, Renewable Fuels Mandates and Standards"
"definitions.Law.properties.topics.items.$ref" = "#/definitions/LawTopics"
"definitions.Law.properties.topics.type" = "array"
"definitions.Law.properties.type.description" = "The category that the incentive/law/regulation falls under, described below: -State Incentives, -Laws and Regulations, -Utility/Private Incentives"
"definitions.Law.properties.type.type" = "string"
"definitions.Law.properties.types.description" = "The types that apply to this law"
"definitions.Law.properties.types.items.$ref" = "#/definitions/LawType"
"definitions.Law.properties.types.type" = "array"
"definitions.Law.required.length" = 10
"definitions.Law.required[0]" = "id"
"definitions.Law.required[1]" = "state"
"definitions.Law.required[2]" = "title"
"definitions.Law.required[3]" = "text"
"definitions.Law.required[4]" = "plaintext"
"definitions.Law.required[5]" = "type"
"definitions.Law.required[6]" = "categories"
"definitions.Law.required[7]" = "types"
"definitions.Law.required[8]" = "references"
"definitions.Law.required[9]" = "topics"
"definitions.LawReference.description" = "The URL associated with any bill or legislative reference included in the description."
"definitions.LawReference.properties.description.description" = "The context of the reference"
"definitions.LawReference.properties.description.type" = "string"
"definitions.LawReference.properties.url.description" = "The url linking to the reference."
"definitions.LawReference.properties.url.type" = "string"
"definitions.LawReference.required.length" = 2
"definitions.LawReference.required[0]" = "description"
"definitions.LawReference.required[1]" = "url"
"definitions.LawResult.properties.inputs.$ref" = "#/definitions/Inputs"
"definitions.LawResult.properties.inputs.description" = "The parameters that were passed to the api call"
"definitions.LawResult.properties.metadata.$ref" = "#/definitions/Metadata"
"definitions.LawResult.properties.metadata.description" = "The api version number"
"definitions.LawResult.properties.result.$ref" = "#/definitions/Law"
"definitions.LawResult.properties.result.description" = "The law requested"
"definitions.LawResult.required.length" = 3
"definitions.LawResult.required[0]" = "metadata"
"definitions.LawResult.required[1]" = "inputs"
"definitions.LawResult.required[2]" = "result"
"definitions.LawTopics.description" = "For local incentive/regulation descriptions, the category that the incentive/regulation falls under, described below: Infrastructure Requirements, Vehicle Purchase and Infrastructure Development Incentives, Fuel Use Incentives, Parking Incentives, Technical Assistance, Vehicle Acquisition Requirements, Promotion Initiatives, Idle Reduction Requirements, Renewable Fuels Mandates and Standards"
"definitions.LawTopics.properties.id.description" = "The database id of the law topic"
"definitions.LawTopics.properties.id.type" = "integer"
"definitions.LawTopics.properties.sort_order.description" = "The sort order of the law topic"
"definitions.LawTopics.properties.sort_order.type" = "integer"
"definitions.LawTopics.properties.title.description" = "The name of the law topic"
"definitions.LawTopics.properties.title.type" = "string"
"definitions.LawTopics.required.length" = 3
"definitions.LawTopics.required[0]" = "id"
"definitions.LawTopics.required[1]" = "title"
"definitions.LawTopics.required[2]" = "sort_order"
"definitions.LawType.description" = "The category that the incentive/law/regulation falls under, described below: -State Incentives, -Laws and Regulations, -Utility/Private Incentives"
"definitions.LawType.properties.code.description" = "The code used to identify the law type"
"definitions.LawType.properties.code.type" = "string"
"definitions.LawType.properties.id.description" = "The id of the law type"
"definitions.LawType.properties.id.type" = "integer"
"definitions.LawType.properties.title.description" = "The name of the law type"
"definitions.LawType.properties.title.type" = "string"
"definitions.LawType.required.length" = 3
"definitions.LawType.required[0]" = "id"
"definitions.LawType.required[1]" = "title"
"definitions.LawType.required[2]" = "code"
"definitions.LawsResponse.properties.inputs.$ref" = "#/definitions/Inputs"
"definitions.LawsResponse.properties.inputs.description" = "The parameters that were passed to the api call"
"definitions.LawsResponse.properties.metadata.$ref" = "#/definitions/Metadata"
"definitions.LawsResponse.properties.metadata.description" = "The api version number, and the count of laws returned"
"definitions.LawsResponse.properties.result.description" = "The array of laws returned"
"definitions.LawsResponse.properties.result.items.$ref" = "#/definitions/Law"
"definitions.LawsResponse.properties.result.type" = "array"
"definitions.LawsResponse.required.length" = 3
"definitions.LawsResponse.required[0]" = "metadata"
"definitions.LawsResponse.required[1]" = "inputs"
"definitions.LawsResponse.required[2]" = "result"
"definitions.Metadata.description" = "The identifying metadata."
"definitions.Metadata.properties.count.description" = "If the request returns an array of results, this is the number of results returned in the array"
"definitions.Metadata.properties.count.type" = "integer"
"definitions.Metadata.properties.version.description" = "This is the version of the api"
"definitions.Metadata.properties.version.type" = "string"
"definitions.Metadata.required.length" = 1
"definitions.Metadata.required[0]" = "version"
"definitions.Poc.properties.agency.description" = "The agency that the contact represents"
"definitions.Poc.properties.agency.type" = "string"
"definitions.Poc.properties.email.description" = "The contacts email address"
"definitions.Poc.properties.email.type" = "string"
"definitions.Poc.properties.fax.description" = "The contacts fax number"
"definitions.Poc.properties.fax.type" = "string"
"definitions.Poc.properties.name.description" = "The name of the contact"
"definitions.Poc.properties.name.type" = "string"
"definitions.Poc.properties.state.description" = "The state in which the contact is based ('US' for Federal laws and 'DC' for the District of Columbia)"
"definitions.Poc.properties.state.type" = "string"
"definitions.Poc.properties.telephone.description" = "The contacts phone number"
"definitions.Poc.properties.telephone.type" = "string"
"definitions.Poc.properties.title.description" = "The job title of the contact"
"definitions.Poc.properties.title.type" = "string"
"definitions.Poc.properties.web_page.description" = "The contacts webpage"
"definitions.Poc.properties.web_page.type" = "string"
"definitions.Poc.required.length" = 2
"definitions.Poc.required[0]" = "name"
"definitions.Poc.required[1]" = "state"
"definitions.PocResults.properties.inputs.$ref" = "#/definitions/Inputs"
"definitions.PocResults.properties.inputs.description" = "The parameters that were passed to the api call"
"definitions.PocResults.properties.metadata.$ref" = "#/definitions/Metadata"
"definitions.PocResults.properties.metadata.description" = "The api version number, and the count of contacts returned"
"definitions.PocResults.properties.result.description" = "The array of Points of Contacts for the state requested"
"definitions.PocResults.properties.result.items.$ref" = "#/definitions/Poc"
"definitions.PocResults.properties.result.type" = "array"
"definitions.PocResults.required.length" = 3
"definitions.PocResults.required[0]" = "metadata"
"definitions.PocResults.required[1]" = "inputs"
"definitions.PocResults.required[2]" = "result"
host = "developer.nrel.gov"
"info.description" = "Query our database of State and Federal Laws and Incentives for Alternative Fuels"
"info.title" = "Transportation Laws and Incentives"
"info.version" = "0.1.0"
"info.x-apisguru-categories.length" = 1
"info.x-apisguru-categories[0]" = "open_data"
"info.x-logo.backgroundColor" = "#0079C5"
"info.x-logo.url" = "https://api.apis.guru/v2/cache/logo/http_www.nrel.gov_client_img_nrel_logo.png"
"info.x-origin.length" = 1
"info.x-origin[0].converter.url" = "https://github.com/lucybot/api-spec-converter"
"info.x-origin[0].converter.version" = "2.0.1"
"info.x-origin[0].format" = "swagger"
"info.x-origin[0].url" = "http://developer.nrel.gov/docs/transportation/transportation-incentives-laws-v1/api-docs.json"
"info.x-origin[0].version" = "1.2"
"info.x-preferred" = true
"info.x-providerName" = "nrel.gov"
"info.x-serviceName" = "transportation-incentives-laws"
"paths./v1.{output_format}.get.parameters.length" = 13
"paths./v1.{output_format}.get.parameters[0].default" = "json"
"paths./v1.{output_format}.get.parameters[0].description" = "Response format"
"paths./v1.{output_format}.get.parameters[0].enum.length" = 3
"paths./v1.{output_format}.get.parameters[0].enum[0]" = "json"
"paths./v1.{output_format}.get.parameters[0].enum[1]" = "xml"
"paths./v1.{output_format}.get.parameters[0].enum[2]" = "csv"
"paths./v1.{output_format}.get.parameters[0].in" = "path"
"paths./v1.{output_format}.get.parameters[0].name" = "output_format"
"paths./v1.{output_format}.get.parameters[0].required" = true
"paths./v1.{output_format}.get.parameters[0].type" = "string"
"paths./v1.{output_format}.get.parameters[10].description" = "Search by the law type. A single type, or a comma-separate list of multiple types, may be given. Values are as follows: 'STATEINC' for State Incentives, 'UPINC ' for Utility/Private Incentives, 'LAWREG' for Laws and Regulations, 'INC' for Incentives, 'PROG' for Programs, 'LUP' for Last Updated, 'OVIEW' for Overview, and 'HILITE' for Highlights"
"paths./v1.{output_format}.get.parameters[10].in" = "query"
"paths./v1.{output_format}.get.parameters[10].name" = "law_type"
"paths./v1.{output_format}.get.parameters[10].type" = "string"
"paths./v1.{output_format}.get.parameters[11].description" = "Search laws by keyword in title or text."
"paths./v1.{output_format}.get.parameters[11].in" = "query"
"paths./v1.{output_format}.get.parameters[11].name" = "keyword"
"paths./v1.{output_format}.get.parameters[11].type" = "string"
"paths./v1.{output_format}.get.parameters[12].default" = false
"paths./v1.{output_format}.get.parameters[12].description" = "Show only local examples of laws and incentives."
"paths./v1.{output_format}.get.parameters[12].in" = "query"
"paths./v1.{output_format}.get.parameters[12].name" = "local"
"paths./v1.{output_format}.get.parameters[12].type" = "boolean"
"paths./v1.{output_format}.get.parameters[1].default" = 10.0
"paths./v1.{output_format}.get.parameters[1].description" = "Limit the number of laws returned"
"paths./v1.{output_format}.get.parameters[1].in" = "query"
"paths./v1.{output_format}.get.parameters[1].name" = "limit"
"paths./v1.{output_format}.get.parameters[1].type" = "integer"
"paths./v1.{output_format}.get.parameters[2].description" = "Return laws for the given Jurisdiction. Jurisdiction must be given as a two character state code (eg, 'CO' for Colorado). A single jurisdiction, or a comma-separate list of multiple jurisdiction, may be given.  Use the code 'US' for federal laws and the code 'DC' for Washington D.C."
"paths./v1.{output_format}.get.parameters[2].in" = "query"
"paths./v1.{output_format}.get.parameters[2].name" = "jurisdiction"
"paths./v1.{output_format}.get.parameters[2].type" = "string"
"paths./v1.{output_format}.get.parameters[3].description" = "Search by the technology type. A single type, or a comma-separate list of multiple types, may be given. Values and what they stand for are as follows: 'BIOD' for Biodiesel, 'ETH' for Ethanol, 'NG' for Natural Gas, 'LPG' for Propane (LPG), 'HY' for Hydrogen Fuel Cells, 'EFFEC' for Fuel Economy / Efficiency, 'IR' for Idle Reduction, 'ELEC' for EVs, 'HEV' for HEVs, 'PHEV' for PHEVs, 'OTHER' for Other, 'AFTMKTCONV' for Aftermarket Conversions, and 'NEVS' for NEVs"
"paths./v1.{output_format}.get.parameters[3].in" = "query"
"paths./v1.{output_format}.get.parameters[3].name" = "technology"
"paths./v1.{output_format}.get.parameters[3].type" = "string"
"paths./v1.{output_format}.get.parameters[4].description" = "Search by the incentive type. A single type, or a comma-separate list of multiple types, may be given. Values and what they stand for are as follows: 'GNT' for Grants, 'TAX' for Tax Incentives, 'LOANS' for Loans and Leases, 'RBATE' for Rebates, 'EXEM' for Exemptions, and 'OTHER' for Other."
"paths./v1.{output_format}.get.parameters[4].in" = "query"
"paths./v1.{output_format}.get.parameters[4].name" = "incentive_type"
"paths./v1.{output_format}.get.parameters[4].type" = "string"
"paths./v1.{output_format}.get.parameters[5].description" = "Search by the regulation type. A single type, or a comma-separate list of multiple types, may be given. Values and what they stand for are as follows: 'REGIS' for Registration / Licensing, 'STD' for Fuel Production / Quality, 'DREST' for Driving / Idling, 'REQ' for Acquisition / Fuel Use, 'FUEL' for Fuel Taxes, 'RFS' for Renewable Fuel Standard / Mandate, 'OTHER' for Other, 'AIRQEMISSIONS' for Air Quality / Emissions, and 'CCEINIT' for Climate Change / Energy Initiatives"
"paths./v1.{output_format}.get.parameters[5].in" = "query"
"paths./v1.{output_format}.get.parameters[5].name" = "regulation_type"
"paths./v1.{output_format}.get.parameters[5].type" = "string"
"paths./v1.{output_format}.get.parameters[6].description" = "Search by the user type. A single type, or a comma-separate list of multiple types, may be given. Values and what they stand for are as follows: 'IND' for Vehicle Owner/Driver, 'FLEET' for Fleet Purchaser/Manager, 'STATION' for Fueling / TSE Infrastructure Owner, 'AFP' for Alternative Fuel Producer, 'AFS' for Alternative Fuel Dealer, 'PURCH' for Alternative Fuel Purchaser, 'MAN' for AFV Manufacturer/Retrofitter, and 'OTHER' for Other"
"paths./v1.{output_format}.get.parameters[6].in" = "query"
"paths./v1.{output_format}.get.parameters[6].name" = "user_type"
"paths./v1.{output_format}.get.parameters[6].type" = "string"
"paths./v1.{output_format}.get.parameters[7].default" = false
"paths./v1.{output_format}.get.parameters[7].description" = "Include points of contacts in the return value."
"paths./v1.{output_format}.get.parameters[7].in" = "query"
"paths./v1.{output_format}.get.parameters[7].name" = "poc"
"paths./v1.{output_format}.get.parameters[7].type" = "boolean"
"paths./v1.{output_format}.get.parameters[8].default" = false
"paths./v1.{output_format}.get.parameters[8].description" = "Return only recently added or updated laws and incentives"
"paths./v1.{output_format}.get.parameters[8].in" = "query"
"paths./v1.{output_format}.get.parameters[8].name" = "recent"
"paths./v1.{output_format}.get.parameters[8].type" = "boolean"
"paths./v1.{output_format}.get.parameters[9].default" = false
"paths./v1.{output_format}.get.parameters[9].description" = "Show only expired, repealed or archived laws and incentives."
"paths./v1.{output_format}.get.parameters[9].in" = "query"
"paths./v1.{output_format}.get.parameters[9].name" = "expired"
"paths./v1.{output_format}.get.parameters[9].type" = "boolean"
"paths./v1.{output_format}.get.responses.200.description" = "No response was specified"
"paths./v1.{output_format}.get.responses.200.schema.$ref" = "#/definitions/LawsResponse"
"paths./v1.{output_format}.get.summary" = "Return a full list of laws and incentives that match your query."
"paths./v1.{output_format}.get.tags.length" = 1
"paths./v1.{output_format}.get.tags[0]" = "v1"
"paths./v1/category-list.{output_format}.get.parameters.length" = 2
"paths./v1/category-list.{output_format}.get.parameters[0].default" = "json"
"paths./v1/category-list.{output_format}.get.parameters[0].description" = "Response format"
"paths./v1/category-list.{output_format}.get.parameters[0].enum.length" = 2
"paths./v1/category-list.{output_format}.get.parameters[0].enum[0]" = "json"
"paths./v1/category-list.{output_format}.get.parameters[0].enum[1]" = "xml"
"paths./v1/category-list.{output_format}.get.parameters[0].in" = "path"
"paths./v1/category-list.{output_format}.get.parameters[0].name" = "output_format"
"paths./v1/category-list.{output_format}.get.parameters[0].required" = true
"paths./v1/category-list.{output_format}.get.parameters[0].type" = "string"
"paths./v1/category-list.{output_format}.get.parameters[1].description" = "Search by the category type."
"paths./v1/category-list.{output_format}.get.parameters[1].enum.length" = 4
"paths./v1/category-list.{output_format}.get.parameters[1].enum[0]" = "tech"
"paths./v1/category-list.{output_format}.get.parameters[1].enum[1]" = "user"
"paths./v1/category-list.{output_format}.get.parameters[1].enum[2]" = "regulation"
"paths./v1/category-list.{output_format}.get.parameters[1].enum[3]" = "incentive"
"paths./v1/category-list.{output_format}.get.parameters[1].in" = "query"
"paths./v1/category-list.{output_format}.get.parameters[1].name" = "type"
"paths./v1/category-list.{output_format}.get.parameters[1].type" = "string"
"paths./v1/category-list.{output_format}.get.responses.200.description" = "No response was specified"
"paths./v1/category-list.{output_format}.get.responses.200.schema.$ref" = "#/definitions/CategoryResults"
"paths./v1/category-list.{output_format}.get.summary" = "Return the law categories for a given category type."
"paths./v1/category-list.{output_format}.get.tags.length" = 1
"paths./v1/category-list.{output_format}.get.tags[0]" = "v1"
"paths./v1/pocs.{output_format}.get.parameters.length" = 2
"paths./v1/pocs.{output_format}.get.parameters[0].default" = "json"
"paths./v1/pocs.{output_format}.get.parameters[0].description" = "Response format"
"paths./v1/pocs.{output_format}.get.parameters[0].enum.length" = 2
"paths./v1/pocs.{output_format}.get.parameters[0].enum[0]" = "json"
"paths./v1/pocs.{output_format}.get.parameters[0].enum[1]" = "xml"
"paths./v1/pocs.{output_format}.get.parameters[0].in" = "path"
"paths./v1/pocs.{output_format}.get.parameters[0].name" = "output_format"
"paths./v1/pocs.{output_format}.get.parameters[0].required" = true
"paths./v1/pocs.{output_format}.get.parameters[0].type" = "string"
"paths./v1/pocs.{output_format}.get.parameters[1].description" = "Return the points of contact for the given Jurisdiction. Jurisdiction must be given as a two character state code (eg, 'CO' for Colorado). A single jurisdiction, or a comma-separate list of multiple jurisdiction, may be given.  Use the code 'US' for federal laws and the code 'DC' for Washington D.C."
"paths./v1/pocs.{output_format}.get.parameters[1].in" = "query"
"paths./v1/pocs.{output_format}.get.parameters[1].name" = "jurisdiction"
"paths./v1/pocs.{output_format}.get.parameters[1].required" = true
"paths./v1/pocs.{output_format}.get.parameters[1].type" = "string"
"paths./v1/pocs.{output_format}.get.responses.200.description" = "No response was specified"
"paths./v1/pocs.{output_format}.get.responses.200.schema.$ref" = "#/definitions/PocResults"
"paths./v1/pocs.{output_format}.get.summary" = "Get the points of contact for a given jurisdiction."
"paths./v1/pocs.{output_format}.get.tags.length" = 1
"paths./v1/pocs.{output_format}.get.tags[0]" = "v1"
"paths./v1/{id}.{output_format}.get.parameters.length" = 3
"paths./v1/{id}.{output_format}.get.parameters[0].default" = "json"
"paths./v1/{id}.{output_format}.get.parameters[0].description" = "Response format"
"paths./v1/{id}.{output_format}.get.parameters[0].enum.length" = 2
"paths./v1/{id}.{output_format}.get.parameters[0].enum[0]" = "json"
"paths./v1/{id}.{output_format}.get.parameters[0].enum[1]" = "xml"
"paths./v1/{id}.{output_format}.get.parameters[0].in" = "path"
"paths./v1/{id}.{output_format}.get.parameters[0].name" = "output_format"
"paths./v1/{id}.{output_format}.get.parameters[0].required" = true
"paths./v1/{id}.{output_format}.get.parameters[0].type" = "string"
"paths./v1/{id}.{output_format}.get.parameters[1].description" = "The id of the law that you are searching"
"paths./v1/{id}.{output_format}.get.parameters[1].in" = "path"
"paths./v1/{id}.{output_format}.get.parameters[1].name" = "id"
"paths./v1/{id}.{output_format}.get.parameters[1].required" = true
"paths./v1/{id}.{output_format}.get.parameters[1].type" = "integer"
"paths./v1/{id}.{output_format}.get.parameters[2].default" = false
"paths./v1/{id}.{output_format}.get.parameters[2].description" = "Include points of contacts in the return value."
"paths./v1/{id}.{output_format}.get.parameters[2].in" = "query"
"paths./v1/{id}.{output_format}.get.parameters[2].name" = "poc"
"paths./v1/{id}.{output_format}.get.parameters[2].type" = "boolean"
"paths./v1/{id}.{output_format}.get.responses.200.description" = "No response was specified"
"paths./v1/{id}.{output_format}.get.responses.200.schema.$ref" = "#/definitions/LawResult"
"paths./v1/{id}.{output_format}.get.summary" = "Fetch the details of a specific law given the law's ID."
"paths./v1/{id}.{output_format}.get.tags.length" = 1
"paths./v1/{id}.{output_format}.get.tags[0]" = "v1"
"schemes.length" = 1
"schemes[0]" = "https"
"security.length" = 1
"securityDefinitions.api_key.description" = "API Key"
"securityDefinitions.api_key.in" = "query"
"securityDefinitions.api_key.name" = "api_key"
"securityDefinitions.api_key.type" = "apiKey"
"security[0].api_key.length" = 0
swagger = "2.0"
"tags.length" = 1
"tags[0].description" = "Information about laws and incentives"
"tags[0].name" = "v1"
