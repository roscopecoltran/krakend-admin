syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package u.s.epaenforcementandcompliancehistoryonline(echo)-resourceconservationandrecoveryact;

message GetRcra_rest_servicesGet_downloadRequest {
    // Output Format Flag.  Enter one of the following keywords:
    // - CSV = Facility results formatted as comma delimited file download (default).
    // - GEOJSOND = Facility results formatted as GeoJSON feature collection download.
    string output = 1;
    number p_pretty_print = 2;
    string qcolumns = 3;
    string qid = 4;
}

message PostRcra_rest_servicesGet_downloadRequest {
    // Output Format Flag.  Enter one of the following keywords:
    // - CSV = Facility results formatted as comma delimited file download (default).
    // - GEOJSOND = Facility results formatted as GeoJSON feature collection download.
    string output = 1;
    number p_pretty_print = 2;
    string qcolumns = 3;
    string qid = 4;
}

message GetRcra_rest_servicesGet_facilitiesRequest {
    string callback = 1;
    maplist maplist = 2;
    // Output Format Flag.  Enter one of the following keywords:
    // - JSON = Data model formatted as Javascript Object Notation (default).
    // - JSONP = Data model formatted as Javascript Object Notation with Padding.  
    // - XML = Data model formatted as Extensible Markup Language.
    enum GetRcra_rest_servicesGet_facilitiesRequest_Output {
        GETRCRA_REST_SERVICESGET_FACILITIESREQUEST_OUTPUT_JSONP = 0;
        GETRCRA_REST_SERVICESGET_FACILITIESREQUEST_OUTPUT_JSON = 1;
        GETRCRA_REST_SERVICESGET_FACILITIESREQUEST_OUTPUT_XML = 2;
    }
    GetRcra_rest_servicesGet_facilitiesRequest_Output output = 3;
    p_act p_act = 4;
    p_agoo p_agoo = 5;
    number p_c1lat = 6;
    number p_c1lon = 7;
    number p_c2lat = 8;
    number p_c2lon = 9;
    p_cifdi p_cifdi = 10;
    string p_cmps = 11;
    string p_co = 12;
    string p_ct = 13;
    p_decouple p_decouple = 14;
    string p_des = 15;
    p_dwd p_dwd = 16;
    string p_ejscreen = 17;
    string p_ejscreen_over80cnt = 18;
    string p_fa = 19;
    p_fac_ico p_fac_ico = 20;
    string p_fac_icos = 21;
    string p_fcv = 22;
    p_fea p_fea = 23;
    p_feaa p_feaa = 24;
    number p_feay = 25;
    string p_fips = 26;
    string p_fn = 27;
    p_fntype p_fntype = 28;
    string p_frs = 29;
    string p_huc = 30;
    p_ico p_ico = 31;
    string p_icoo = 32;
    string p_idt1 = 33;
    string p_idt2 = 34;
    p_iea p_iea = 35;
    p_ieaa p_ieaa = 36;
    number p_ieay = 37;
    p_impw p_impw = 38;
    number p_lat = 39;
    p_limit_addr p_limit_addr = 40;
    number p_long = 41;
    p_med p_med = 42;
    string p_ncs = 43;
    string p_ncv = 44;
    p_oct p_oct = 45;
    string p_olr = 46;
    p_owop p_owop = 47;
    p_pd p_pd = 48;
    string p_pen = 49;
    string p_pfead1 = 50;
    string p_pfead2 = 51;
    string p_pfeat = 52;
    string p_pid = 53;
    p_pidall p_pidall = 54;
    string p_pityp = 55;
    p_pm p_pm = 56;
    p_psncq p_psncq = 57;
    p_qiv p_qiv = 58;
    string p_qs = 59;
    number p_radius = 60;
    p_reg p_reg = 61;
    string p_sa = 62;
    string p_sa1 = 63;
    string p_sfs = 64;
    string p_sic = 65;
    string p_sic2 = 66;
    string p_sic4 = 67;
    string p_st = 68;
    string p_stdist = 69;
    p_trep p_trep = 70;
    number p_tribedist = 71;
    number p_tribeid = 72;
    string p_tribename = 73;
    p_usmex p_usmex = 74;
    string p_violt = 75;
    number p_violy = 76;
    string p_wbd = 77;
    p_ysl p_ysl = 78;
    p_ysla p_ysla = 79;
    number p_ysly = 80;
    string p_zip = 81;
    string qcolumns = 82;
    number queryset = 83;
    number responseset = 84;
    summarylist summarylist = 85;
    tablelist tablelist = 86;
}

message GetRcra_rest_servicesGet_facilitiesResponse {
    rcr1_Results Results = 1;
}

message PostRcra_rest_servicesGet_facilitiesRequest {
    string callback = 1;
    maplist maplist = 2;
    // Output Format Flag.  Enter one of the following keywords:
    // - JSON = Data model formatted as Javascript Object Notation (default).
    // - JSONP = Data model formatted as Javascript Object Notation with Padding.  
    // - XML = Data model formatted as Extensible Markup Language.
    enum PostRcra_rest_servicesGet_facilitiesRequest_Output {
        POSTRCRA_REST_SERVICESGET_FACILITIESREQUEST_OUTPUT_JSONP = 0;
        POSTRCRA_REST_SERVICESGET_FACILITIESREQUEST_OUTPUT_JSON = 1;
        POSTRCRA_REST_SERVICESGET_FACILITIESREQUEST_OUTPUT_XML = 2;
    }
    PostRcra_rest_servicesGet_facilitiesRequest_Output output = 3;
    p_act p_act = 4;
    p_agoo p_agoo = 5;
    number p_c1lat = 6;
    number p_c1lon = 7;
    number p_c2lat = 8;
    number p_c2lon = 9;
    p_cifdi p_cifdi = 10;
    string p_cmps = 11;
    string p_co = 12;
    string p_ct = 13;
    p_decouple p_decouple = 14;
    string p_des = 15;
    p_dwd p_dwd = 16;
    string p_ejscreen = 17;
    string p_ejscreen_over80cnt = 18;
    string p_fa = 19;
    p_fac_ico p_fac_ico = 20;
    string p_fac_icos = 21;
    string p_fcv = 22;
    p_fea p_fea = 23;
    p_feaa p_feaa = 24;
    number p_feay = 25;
    string p_fips = 26;
    string p_fn = 27;
    p_fntype p_fntype = 28;
    string p_frs = 29;
    string p_huc = 30;
    p_ico p_ico = 31;
    string p_icoo = 32;
    string p_idt1 = 33;
    string p_idt2 = 34;
    p_iea p_iea = 35;
    p_ieaa p_ieaa = 36;
    number p_ieay = 37;
    p_impw p_impw = 38;
    number p_lat = 39;
    p_limit_addr p_limit_addr = 40;
    number p_long = 41;
    p_med p_med = 42;
    string p_ncs = 43;
    string p_ncv = 44;
    p_oct p_oct = 45;
    string p_olr = 46;
    p_owop p_owop = 47;
    p_pd p_pd = 48;
    string p_pen = 49;
    string p_pfead1 = 50;
    string p_pfead2 = 51;
    string p_pfeat = 52;
    string p_pid = 53;
    p_pidall p_pidall = 54;
    string p_pityp = 55;
    p_pm p_pm = 56;
    p_psncq p_psncq = 57;
    p_qiv p_qiv = 58;
    string p_qs = 59;
    number p_radius = 60;
    p_reg p_reg = 61;
    string p_sa = 62;
    string p_sa1 = 63;
    string p_sfs = 64;
    string p_sic = 65;
    string p_sic2 = 66;
    string p_sic4 = 67;
    string p_st = 68;
    string p_stdist = 69;
    p_trep p_trep = 70;
    number p_tribedist = 71;
    number p_tribeid = 72;
    string p_tribename = 73;
    p_usmex p_usmex = 74;
    string p_violt = 75;
    number p_violy = 76;
    string p_wbd = 77;
    p_ysl p_ysl = 78;
    p_ysla p_ysla = 79;
    number p_ysly = 80;
    string p_zip = 81;
    string qcolumns = 82;
    number queryset = 83;
    number responseset = 84;
    summarylist summarylist = 85;
    tablelist tablelist = 86;
}

message PostRcra_rest_servicesGet_facilitiesResponse {
    rcr1_Results Results = 1;
}

message GetRcra_rest_servicesGet_facility_infoRequest {
    string callback = 1;
    // Output Format Flag.  Enter one of the following keywords:
    // - JSON = Data model formatted as Javascript Object Notation (default).
    // - JSONP = Data model formatted as Javascript Object Notation with Padding.  
    // - XML = Data model formatted as Extensible Markup Language.
    // - CSV = Facility results formatted as comma delimited file download.
    // - GEOJSON = Facility results formatted as GeoJSON feature collection.
    // - GEOJSONP = Facility results formatted as GeoJSON feature collection with Padding.
    // - GEOJSOND = Facility results formatted as GeoJSON feature collection download.
    string output = 2;
    p_act p_act = 3;
    p_agoo p_agoo = 4;
    p_cifdi p_cifdi = 5;
    string p_cmps = 6;
    string p_co = 7;
    string p_ct = 8;
    p_decouple p_decouple = 9;
    string p_des = 10;
    p_dwd p_dwd = 11;
    string p_ejscreen = 12;
    string p_ejscreen_over80cnt = 13;
    string p_fa = 14;
    p_fac_ico p_fac_ico = 15;
    string p_fac_icos = 16;
    string p_fcv = 17;
    p_fea p_fea = 18;
    p_feaa p_feaa = 19;
    number p_feay = 20;
    string p_fips = 21;
    string p_fn = 22;
    p_fntype p_fntype = 23;
    string p_frs = 24;
    string p_huc = 25;
    p_ico p_ico = 26;
    string p_icoo = 27;
    string p_idt1 = 28;
    string p_idt2 = 29;
    p_iea p_iea = 30;
    p_ieaa p_ieaa = 31;
    number p_ieay = 32;
    p_impw p_impw = 33;
    number p_lat = 34;
    p_limit_addr p_limit_addr = 35;
    number p_long = 36;
    p_med p_med = 37;
    string p_ncs = 38;
    string p_ncv = 39;
    p_oct p_oct = 40;
    string p_olr = 41;
    p_owop p_owop = 42;
    p_pd p_pd = 43;
    string p_pen = 44;
    string p_pfead1 = 45;
    string p_pfead2 = 46;
    string p_pfeat = 47;
    string p_pid = 48;
    p_pidall p_pidall = 49;
    string p_pityp = 50;
    p_pm p_pm = 51;
    number p_pretty_print = 52;
    p_psncq p_psncq = 53;
    p_qiv p_qiv = 54;
    string p_qs = 55;
    number p_radius = 56;
    p_reg p_reg = 57;
    string p_sa = 58;
    string p_sa1 = 59;
    string p_sfs = 60;
    string p_sic = 61;
    string p_sic2 = 62;
    string p_sic4 = 63;
    string p_st = 64;
    string p_stdist = 65;
    p_trep p_trep = 66;
    number p_tribedist = 67;
    number p_tribeid = 68;
    string p_tribename = 69;
    p_usmex p_usmex = 70;
    string p_violt = 71;
    number p_violy = 72;
    string p_wbd = 73;
    p_ysl p_ysl = 74;
    p_ysla p_ysla = 75;
    number p_ysly = 76;
    string p_zip = 77;
    string qcolumns = 78;
    number queryset = 79;
    number responseset = 80;
    summarylist summarylist = 81;
    number xmax = 82;
    number xmin = 83;
    number ymax = 84;
    number ymin = 85;
}

message GetRcra_rest_servicesGet_facility_infoResponse {
    rcr2_Results Results = 1;
}

message PostRcra_rest_servicesGet_facility_infoRequest {
    string callback = 1;
    // Output Format Flag.  Enter one of the following keywords:
    // - JSON = Data model formatted as Javascript Object Notation (default).
    // - JSONP = Data model formatted as Javascript Object Notation with Padding.  
    // - XML = Data model formatted as Extensible Markup Language.
    // - CSV = Facility results formatted as comma delimited file download.
    // - GEOJSON = Facility results formatted as GeoJSON feature collection.
    // - GEOJSONP = Facility results formatted as GeoJSON feature collection with Padding.
    // - GEOJSOND = Facility results formatted as GeoJSON feature collection download.
    string output = 2;
    p_act p_act = 3;
    p_agoo p_agoo = 4;
    p_cifdi p_cifdi = 5;
    string p_cmps = 6;
    string p_co = 7;
    string p_ct = 8;
    p_decouple p_decouple = 9;
    string p_des = 10;
    p_dwd p_dwd = 11;
    string p_ejscreen = 12;
    string p_ejscreen_over80cnt = 13;
    string p_fa = 14;
    p_fac_ico p_fac_ico = 15;
    string p_fac_icos = 16;
    string p_fcv = 17;
    p_fea p_fea = 18;
    p_feaa p_feaa = 19;
    number p_feay = 20;
    string p_fips = 21;
    string p_fn = 22;
    p_fntype p_fntype = 23;
    string p_frs = 24;
    string p_huc = 25;
    p_ico p_ico = 26;
    string p_icoo = 27;
    string p_idt1 = 28;
    string p_idt2 = 29;
    p_iea p_iea = 30;
    p_ieaa p_ieaa = 31;
    number p_ieay = 32;
    p_impw p_impw = 33;
    number p_lat = 34;
    p_limit_addr p_limit_addr = 35;
    number p_long = 36;
    p_med p_med = 37;
    string p_ncs = 38;
    string p_ncv = 39;
    p_oct p_oct = 40;
    string p_olr = 41;
    p_owop p_owop = 42;
    p_pd p_pd = 43;
    string p_pen = 44;
    string p_pfead1 = 45;
    string p_pfead2 = 46;
    string p_pfeat = 47;
    string p_pid = 48;
    p_pidall p_pidall = 49;
    string p_pityp = 50;
    p_pm p_pm = 51;
    number p_pretty_print = 52;
    p_psncq p_psncq = 53;
    p_qiv p_qiv = 54;
    string p_qs = 55;
    number p_radius = 56;
    p_reg p_reg = 57;
    string p_sa = 58;
    string p_sa1 = 59;
    string p_sfs = 60;
    string p_sic = 61;
    string p_sic2 = 62;
    string p_sic4 = 63;
    string p_st = 64;
    string p_stdist = 65;
    p_trep p_trep = 66;
    number p_tribedist = 67;
    number p_tribeid = 68;
    string p_tribename = 69;
    p_usmex p_usmex = 70;
    string p_violt = 71;
    number p_violy = 72;
    string p_wbd = 73;
    p_ysl p_ysl = 74;
    p_ysla p_ysla = 75;
    number p_ysly = 76;
    string p_zip = 77;
    string qcolumns = 78;
    number queryset = 79;
    number responseset = 80;
    summarylist summarylist = 81;
    number xmax = 82;
    number xmin = 83;
    number ymax = 84;
    number ymin = 85;
}

message PostRcra_rest_servicesGet_facility_infoResponse {
    rcr2_Results Results = 1;
}

message GetRcra_rest_servicesGet_geojsonRequest {
    string callback = 1;
    descending descending = 2;
    number newsort = 3;
    // Output Format Flag.  Enter one of the following keywords:
    // - GEOJSON = Facility results formatted as GeoJSON feature collection (default).
    // - GEOJSONP = Facility results formatted as GeoJSON feature collection with Padding.
    // - GEOJSOND = Facility results formatted as GeoJSON feature collection download.
    string output = 4;
    number p_pretty_print = 5;
    string qcolumns = 6;
    string qid = 7;
}

message GetRcra_rest_servicesGet_geojsonResponse {
    // Array of GeoJSON feature objects.
    repeated rcr5_Feature features = 1;
    // Static marker indicating object is a GeoJSON Feature Collection.
    string type = 2;
}

message PostRcra_rest_servicesGet_geojsonRequest {
    string callback = 1;
    descending descending = 2;
    number newsort = 3;
    // Output Format Flag.  Enter one of the following keywords:
    // - GEOJSON = Facility results formatted as GeoJSON feature collection (default).
    // - GEOJSONP = Facility results formatted as GeoJSON feature collection with Padding.
    // - GEOJSOND = Facility results formatted as GeoJSON feature collection download.
    string output = 4;
    number p_pretty_print = 5;
    string qcolumns = 6;
    string qid = 7;
}

message PostRcra_rest_servicesGet_geojsonResponse {
    // Array of GeoJSON feature objects.
    repeated rcr5_Feature features = 1;
    // Static marker indicating object is a GeoJSON Feature Collection.
    string type = 2;
}

message GetRcra_rest_servicesGet_info_clustersRequest {
    // Output Format Flag.  Enter one of the following keywords:
    // - CSV = Facility results formatted as comma delimited file download (default).
    // - GEOJSOND = Facility results formatted as GeoJSON feature collection download.
    string output = 1;
    number p_pretty_print = 2;
    string p_qid = 3;
}

message PostRcra_rest_servicesGet_info_clustersRequest {
    // Output Format Flag.  Enter one of the following keywords:
    // - CSV = Facility results formatted as comma delimited file download (default).
    // - GEOJSOND = Facility results formatted as GeoJSON feature collection download.
    string output = 1;
    number p_pretty_print = 2;
    string p_qid = 3;
}

message GetRcra_rest_servicesGet_mapRequest {
    number c1_lat = 1;
    number c1_long = 2;
    number c2_lat = 3;
    number c2_long = 4;
    string callback = 5;
    // Output Format Flag.  Enter one of the following keywords:
    // - JSON = Data model formatted as Javascript Object Notation (default).
    // - JSONP = Data model formatted as Javascript Object Notation with Padding.  
    // - XML = Data model formatted as Extensible Markup Language.
    enum GetRcra_rest_servicesGet_mapRequest_Output {
        GETRCRA_REST_SERVICESGET_MAPREQUEST_OUTPUT_JSONP = 0;
        GETRCRA_REST_SERVICESGET_MAPREQUEST_OUTPUT_JSON = 1;
        GETRCRA_REST_SERVICESGET_MAPREQUEST_OUTPUT_XML = 2;
    }
    GetRcra_rest_servicesGet_mapRequest_Output output = 6;
    string p_id = 7;
    string qid = 8;
    tablelist tablelist = 9;
}

message GetRcra_rest_servicesGet_mapResponse {
    rcr3_MapOutput MapOutput = 1;
}

message PostRcra_rest_servicesGet_mapRequest {
    number c1_lat = 1;
    number c1_long = 2;
    number c2_lat = 3;
    number c2_long = 4;
    string callback = 5;
    // Output Format Flag.  Enter one of the following keywords:
    // - JSON = Data model formatted as Javascript Object Notation (default).
    // - JSONP = Data model formatted as Javascript Object Notation with Padding.  
    // - XML = Data model formatted as Extensible Markup Language.
    enum PostRcra_rest_servicesGet_mapRequest_Output {
        POSTRCRA_REST_SERVICESGET_MAPREQUEST_OUTPUT_JSONP = 0;
        POSTRCRA_REST_SERVICESGET_MAPREQUEST_OUTPUT_JSON = 1;
        POSTRCRA_REST_SERVICESGET_MAPREQUEST_OUTPUT_XML = 2;
    }
    PostRcra_rest_servicesGet_mapRequest_Output output = 6;
    string p_id = 7;
    string qid = 8;
    tablelist tablelist = 9;
}

message PostRcra_rest_servicesGet_mapResponse {
    rcr3_MapOutput MapOutput = 1;
}

message GetRcra_rest_servicesGet_qidRequest {
    string callback = 1;
    descending descending = 2;
    number newsort = 3;
    // Output Format Flag.  Enter one of the following keywords:
    // - JSON = Data model formatted as Javascript Object Notation (default).
    // - JSONP = Data model formatted as Javascript Object Notation with Padding.  
    // - XML = Data model formatted as Extensible Markup Language.
    enum GetRcra_rest_servicesGet_qidRequest_Output {
        GETRCRA_REST_SERVICESGET_QIDREQUEST_OUTPUT_JSONP = 0;
        GETRCRA_REST_SERVICESGET_QIDREQUEST_OUTPUT_JSON = 1;
        GETRCRA_REST_SERVICESGET_QIDREQUEST_OUTPUT_XML = 2;
    }
    GetRcra_rest_servicesGet_qidRequest_Output output = 4;
    number pageno = 5;
    string qcolumns = 6;
    string qid = 7;
}

message GetRcra_rest_servicesGet_qidResponse {
    rcr4_Results Results = 1;
}

message PostRcra_rest_servicesGet_qidRequest {
    string callback = 1;
    descending descending = 2;
    number newsort = 3;
    // Output Format Flag.  Enter one of the following keywords:
    // - JSON = Data model formatted as Javascript Object Notation (default).
    // - JSONP = Data model formatted as Javascript Object Notation with Padding.  
    // - XML = Data model formatted as Extensible Markup Language.
    enum PostRcra_rest_servicesGet_qidRequest_Output {
        POSTRCRA_REST_SERVICESGET_QIDREQUEST_OUTPUT_JSONP = 0;
        POSTRCRA_REST_SERVICESGET_QIDREQUEST_OUTPUT_JSON = 1;
        POSTRCRA_REST_SERVICESGET_QIDREQUEST_OUTPUT_XML = 2;
    }
    PostRcra_rest_servicesGet_qidRequest_Output output = 4;
    number pageno = 5;
    string qcolumns = 6;
    string qid = 7;
}

message PostRcra_rest_servicesGet_qidResponse {
    rcr4_Results Results = 1;
}

message GetRcra_rest_servicesMetadataRequest {
    string callback = 1;
    // Output Format Flag.  Enter one of the following keywords:
    // - JSON = Data model formatted as Javascript Object Notation (default).
    // - JSONP = Data model formatted as Javascript Object Notation with Padding.  
    // - XML = Data model formatted as Extensible Markup Language.
    enum GetRcra_rest_servicesMetadataRequest_Output {
        GETRCRA_REST_SERVICESMETADATAREQUEST_OUTPUT_JSONP = 0;
        GETRCRA_REST_SERVICESMETADATAREQUEST_OUTPUT_JSON = 1;
        GETRCRA_REST_SERVICESMETADATAREQUEST_OUTPUT_XML = 2;
    }
    GetRcra_rest_servicesMetadataRequest_Output output = 2;
}

message GetRcra_rest_servicesMetadataResponse {
    met_Results Results = 1;
}

message PostRcra_rest_servicesMetadataRequest {
    string callback = 1;
    // Output Format Flag.  Enter one of the following keywords:
    // - JSON = Data model formatted as Javascript Object Notation (default).
    // - JSONP = Data model formatted as Javascript Object Notation with Padding.  
    // - XML = Data model formatted as Extensible Markup Language.
    enum PostRcra_rest_servicesMetadataRequest_Output {
        POSTRCRA_REST_SERVICESMETADATAREQUEST_OUTPUT_JSONP = 0;
        POSTRCRA_REST_SERVICESMETADATAREQUEST_OUTPUT_JSON = 1;
        POSTRCRA_REST_SERVICESMETADATAREQUEST_OUTPUT_XML = 2;
    }
    PostRcra_rest_servicesMetadataRequest_Output output = 2;
}

message PostRcra_rest_servicesMetadataResponse {
    met_Results Results = 1;
}

message Geometry {
    // Array of coordinate values in longitude, latitude format.
    repeated int32 coordinates = 1;
    // Indicator of the geometry represented in the GeoJSON Feature, for Echo will always be "Point".
    string type = 2;
}

enum Descending {
    Y = 0;
    N = 1;
}

enum Maplist {
    Y = 0;
    N = 1;
}

message Met_Results {
    // Field to record messages (typically performance-related) about packet processing
    string Message = 1;
    repeated met_ResultsColumns ResultColumns = 2;
}

message Met_ResultsColumns {
    string ColumnID = 1;
    string ColumnName = 2;
    // Data length for EPA program database column.
    string DataLength = 3;
    // Data type for EPA program database column.
    string DataType = 4;
    // A description of the category of Supplemental Environment Project (SEP) for a settlement.
    string Description = 5;
    string ObjectName = 6;
}

enum P_act {
    Y = 0;
    N = 1;
    A = 2;
}

enum P_agoo {
    AND = 0;
    OR = 1;
}

enum P_cifdi {
    ANY = 0;
    YES = 1;
    NO = 2;
    UNDETERMINED = 3;
}

enum P_decouple {
    Y = 0;
    N = 1;
}

enum P_dwd {
    P_DWD_0 = 0;
    GT0 = 1;
    GT1000 = 2;
    GT5000 = 3;
    GT10000 = 4;
    GT20000 = 5;
    GT50000 = 6;
}

enum P_fac_ico {
    Y = 0;
    N = 1;
}

enum P_fea {
    W = 0;
    N = 1;
}

enum P_feaa {
    A = 0;
    E = 1;
    S = 2;
}

enum P_fntype {
    ALL = 0;
    CONTAINS = 1;
    EXACT = 2;
    BEGINS = 3;
}

enum P_ico {
    Y = 0;
    N = 1;
}

enum P_iea {
    W = 0;
    N = 1;
}

enum P_ieaa {
    E = 0;
    S = 1;
}

enum P_impw {
    Y = 0;
    N = 1;
}

enum P_limit_addr {
    Y = 0;
    N = 1;
}

enum P_med {
    A = 0;
    M = 1;
    R = 2;
    S = 3;
    W = 4;
    ALL = 5;
}

enum P_oct {
    Z = 0;
    GT0 = 1;
    GT1000 = 2;
    GT5000 = 3;
    GT10000 = 4;
    GT20000 = 5;
    GT50000 = 6;
}

enum P_owop {
    PRIVATE = 0;
    PUBLIC = 1;
    FEDERAL = 2;
}

enum P_pd {
    NONE = 0;
    GT100 = 1;
    GT500 = 2;
    GT1000 = 3;
    GT5000 = 4;
    GT10000 = 5;
    GT20000 = 6;
}

enum P_pidall {
    Y = 0;
    N = 1;
}

enum P_pm {
    NONE = 0;
    GT5 = 1;
    GT10 = 2;
    GT25 = 3;
    GT50 = 4;
    GT75 = 5;
}

enum P_psncq {
    GT1 = 0;
    GE1 = 1;
    GT2 = 2;
    GE2 = 3;
    GT4 = 4;
    GE4 = 5;
    GT8 = 6;
    GE8 = 7;
    GT12 = 8;
    GE12 = 9;
}

enum P_qiv {
    P_QIV_0 = 0;
    GT1 = 1;
    GT2 = 2;
    GT4 = 3;
    GT8 = 4;
    P_QIV_12 = 5;
}

enum P_reg {
    P_REG_01 = 0;
    P_REG_02 = 1;
    P_REG_03 = 2;
    P_REG_04 = 3;
    P_REG_05 = 4;
    P_REG_06 = 5;
    P_REG_07 = 6;
    P_REG_08 = 7;
    P_REG_09 = 8;
    P_REG_10 = 9;
}

enum P_trep {
    NONE = 0;
    CURR = 1;
    NOTCURR = 2;
}

enum P_usmex {
    Y = 0;
    N = 1;
}

enum P_ysl {
    W = 0;
    N = 1;
    NV = 2;
}

enum P_ysla {
    E = 0;
    S = 1;
    A = 2;
}

message Qp0_QueryParameters {
    // Query parameter
    string QP = 1;
    // Query value
    string QV = 2;
}

message Rcr1_Facilities {
    string ActiveLower48 = 1;
    string AirIDs = 2;
    string CWAIDs = 3;
    string CalculatedAccuracyMeters = 4;
    // A geographic unit used by the United States Census Bureau, generally defined to contain between 600 and 3,000 people.
    string CensusBlockGroup = 5;
    // Displays "Y" if the facility is located within the Chesapeake Bay watershed.
    string ChesapeakeBayFlag = 6;
    // ??
    string CollectionMethod = 7;
    // Indicates if the facility has a current significant violation. 1 = Yes
    string CurrSvFlag = 8;
    // Indicates if the facility has a current violation. 1 = Yes
    string CurrVioFlag = 9;
    string CurrentVioCnt = 10;
    string DateLastRecordReview = 11;
    // The EPA data system in which permit and facility records are kept. EPA's Facility Registry System (FRS) links all program database records (such as permit IDs and IDs facilities use in reporting to EPA) together. The following list describes the individual data systems that are linked to from the detailed facility report: 
    // 
    // - AFS: Air Facility System for Clean Air Act stationary source programs.
    // - ICP: Integrated Compliance Information System for Clean Water Act programs monitoring National Pollutant Discharge Elimination System (NPDES) permits.
    // - RCR: Resource Conservation and Recovery Act Information System (RCRAInfo) for tracking the Resource Conservation and Recovery Act (RCRA) programs.
    // - NCDB: National Compliance Database System for monitoring national performance of the Toxic Substance Control Act (TSCA); the Emergency Planning and Right-to-Know Act, Section 313 (EPCRA); the Asbestos Hazard Emergency Response (AHERA); and the Federal Insecticide, Fungicide, and Rodenticide Act (FIFRA).
    // - TRI: Toxics Release Inventory for Emergency Planning and Community Right-to-Know Act, Section 313 submissions.
    // - NEI: National Emissions Inventory database contains information on stationary and mobile sources that emit criteria air pollutants and their precursors, as well as hazardous air pollutants (HAPs). The database includes estimates of annual emissions, by source, of air pollutants in each area of the country, on an annual basis.
    // - TSCA: Toxic Substances Control Act addressing the production, importation, use, and disposal of specific chemicals.
    string EPASystem = 12;
    // Indicates if the facility has a formal enforcement action within the last 5 years. 1 = Yes
    string Ea5yrFlag = 13;
    string EjscreenFlag = 14;
    string EjscreenFlagUs = 15;
    // The 8-digit Hydrologic Unit Code (HUC) of the watershed in which the facility resides. A HUC number is assigned to every watershed in the nation and uniquely identifies the watershed.
    string FacDerivedHuc = 16;
    string FacDerivedTRIbes = 17;
    string FacDerivedWBD = 18;
    string FacDerivedWBDName = 19;
    // The 2-digit Federal Information Processing Standards (FIPS) code to identify the county that a facility is located in.
    string FacFIPSCode = 20;
    // Indicates the federal agency, as classified in FRS. Federal agencies are installations that are owned and operated by the U.S. government. The five-character code consists of a letter followed by four numbers. There are four possible letters that can occupy the first character position: C = Civilian Federal Agency; D = Department of Defense; E = Department of Energy; X = Unknown. The second and third characters represent the agency code, while the fourth and fifth characters represent the bureau code.
    string FacFederalAgencyCode = 21;
    string FacFederalAgencyName = 22;
    // Flag showing Y/N whether the facility is located in Indian Country.
    string FacIndianCntryFlg = 23;
    string FacIndianSpatialFlg = 24;
    // The latitude of the facility in decimal degrees expressed using the NAD83 horizontal datum. The coordinate comes from the FRS EPA Locational Reference Tables (LRT) file which represents the most accurate value for the facility based on the available spatial metadata.
    string FacLat = 25;
    // The longitude of the facility in decimal degrees expressed using the NAD83 horizontal datum. The coordinate comes from the FRS EPA Locational Reference Tables (LRT) file which represents the most accurate value for the facility based on the available spatial metadata.
    string FacLong = 26;
    // Graphical indicator denoting whether geographical data required to map a facility are available.
    string FacMapFlg = 27;
    // The default map icon image file calculated for the facility by the ECHO program.
    string FacMapIcon = 28;
    // Percent Minority is the percentage of the population of the given area that is considered minority. Statistics are shown for the area within a 3-mile radius of each facility.
    string FacPercentMinority = 29;
    string FacPopulationDensity = 30;
    string FacSicCodes = 31;
    string FacTRILandReleases = 32;
    string FacTRIOffSiteTransfers = 33;
    string FacTRIOnSiteReleases = 34;
    // Indicates whether facility reported to the Toxics Release Inventory (TRI) for the most recent reporting year.
    string FacTRIReporter = 35;
    // A Y/N flag indicating that the facility is within 100KM of the US-Mexico Border.
    string FacUsMexBorderFlg = 36;
    // Indicates if the facility has an informal enforcement action within the last 5 years. 1 = Yes.
    string Infea5yrFlag = 37;
    // Indicates if the facility has an inspection within the last 5 years. 1 = Yes
    string Insp5yrFlag = 38;
    string LastViolationDate = 39;
    // Flag showing Y/N whether location is within the contiguous (lower 48) United States.
    string Lower48 = 40;
    string Map = 41;
    // The maximum percentile from all individual EJSCREEN indicators.
    string MaxPctileUs = 42;
    // [Col. 121]
    string MaxScore = 43;
    string Over80CountUs = 44;
    // The national percentile of the census block group for the EJSCREEN NATA air toxics cancer risk indicator.
    string PctileCancerUs = 45;
    // The national percentile of the census block group for the EJSCREEN diesel particulate matter indicator.
    string PctileDpmUs = 46;
    // The national percentile of the census block group for the EJSCREEN ozone indicator.
    string PctileO3Us = 47;
    // The national percentile of the census block group for the EJSCREEN Lead paint indicator.
    string PctilePctpre1960Us = 48;
    // The national percentile of the census block group for the EJSCREEN particulate matter indicator.
    string PctilePmUs = 49;
    // The national percentile of the census block group for the EJSCREEN proximity to major direct water dischargers indicator.
    string PctileProximityNPDESUs = 50;
    // The national percentile of the census block group for the EJSCREEN proximity to National Priorities List (NPL) sites indicator.
    string PctileProximityNplUs = 51;
    // The national percentile of the census block group for the EJSCREEN proximity to Risk Management Plan (RMP) sites indicator.
    string PctileProximityRmpUs = 52;
    // The national percentile of the census block group for the EJSCREEN proximity to Treatment Storage and Disposal Facilities (TSDFs) indicator.
    string PctileProximityTsdfUs = 53;
    // The national percentile of the census block group for the EJSCREEN NATA respiratory hazard index indicator.
    string PctileRespUs = 54;
    // The national percentile of the census block group for the EJSCREEN Traffic proximity and volume indicator.
    string PctileTrafficScoreUs = 55;
    string RCRA3yrComplQtrsStatus = 56;
    string RCRACaseIDs = 57;
    string RCRACity = 58;
    string RCRACounty = 59;
    string RCRACurrComplStatus = 60;
    string RCRACurrSNC = 61;
    string RCRACurrViolationTypes = 62;
    string RCRADaysLastInspection = 63;
    string RCRAEPARegion = 64;
    string RCRAFIPSCode = 65;
    string RCRAFeaCnt = 66;
    // A unique 12-character ID assigned for each record/permit/site/facility within the RCRAInfo database.
    string RCRAIDs = 67;
    string RCRAIeaCnt = 68;
    string RCRAImpWaterFlg = 69;
    string RCRAIndianCntryFlg = 70;
    string RCRAInspCnt = 71;
    string RCRALandTypeCode = 72;
    string RCRALastFeaDate = 73;
    string RCRALastFeaDateEPA = 74;
    string RCRALastFeaDateState = 75;
    string RCRALastIeaDate = 76;
    string RCRALastIeaDateEPA = 77;
    string RCRALastIeaDateState = 78;
    string RCRALastInspDateEPA = 79;
    string RCRALastInspDateState = 80;
    string RCRALastInspectionDate = 81;
    string RCRALastPenaltyDate = 82;
    string RCRAMapIcon = 83;
    string RCRANaics = 84;
    string RCRAName = 85;
    string RCRAOldestOpenVioDate = 86;
    string RCRAPenalties = 87;
    string RCRAQtrsInNC = 88;
    string RCRAQtrsInSNC = 89;
    string RCRAState = 90;
    string RCRAStateDistrict = 91;
    string RCRAStatus = 92;
    string RCRAStreet = 93;
    string RCRATRIbalLandCode = 94;
    string RCRAUniverse = 95;
    string RCRAZip = 96;
    // ??
    string ReferencePoint = 97;
    // An internal 12-digit Facility Registry Service (FRS) tracking number used to tie all facility data together in EPA regulatory program databases.
    string RegistryID = 98;
    string RmpIDs = 99;
    // A unique 9-character ID assigned for each public water system within the Safe Drinking Water Information System (SDWIS).
    string SDWAIDs = 100;
    string Score = 101;
    // Unique Identifier assigned by EPA.
    string SourceID = 102;
    // The name of the statute associated with each of the permits and identifiers linked to the facility: 
    // - CAA = the Clean Air Act
    // - CWA = the Clean Water Act
    // - RCRA = the Resource Conservation and Recovery Act
    // - EP313 = the Emergency Planning and Community Right-to-Know Act, Section 313 (also known as the Toxics Release Inventory Program)
    // - TSCA = the Toxic Substances Control Act
    // - SDWA = the Safe Drinking Water Act
    string Statute = 103;
    // A unique 15-character ID assigned for each facility within the Toxics Release Inventory (TRI) program. The format is ZZZZZNNNNNSSSSS, where ZZZZZ = ZIP code, NNNNN = the first 5 consonants of the name, and SSSSS = the first 5 non-blank non-special characters in the street address.
    string TRIIDs = 104;
    string TRIbalFlag = 105;
    string Tsdf = 106;
    // Indicates if the facility had a violation within the last 3 years. 1 = Yes
    string ViolFlag = 107;
}

message Rcr1_MapData {
    // The number of formal enforcement actions that have been taken against the facility
    string FormalCount = 1;
    // Name of each individual icon file within the URL base
    string ICON = 2;
    // The number of informal enforcement actions that have been taken against the facility
    string InformalCount = 3;
    // The latitude of the facility in degrees, to four decimal places
    string LAT = 4;
    // The longitude of the facility in degrees, to four decimal places
    string LON = 5;
    // The unique identifier for the last inspection
    string LastInsp = 6;
    // For DFR, this is the Facility name. The name corresponds to the TYPE value
    string NAME = 7;
    // Pop up value. Combine with PopUpBaseURL to give the popup for the facility
    string PUV = 8;
    string RCRAstatus = 9;
    // For DFR, this is always facility
    string TYPE = 10;
}

message Rcr1_MapOutput {
    // URL where all the icons are located
    string IconBaseURL = 1;
    repeated rcr1_MapData MapData = 2;
    // Combine this URL with the PUC to get popup info
    string PopUpBaseURL = 3;
    // Sequential number assigned to entire search result
    string QueryID = 4;
}

message Rcr1_Results {
    // Summary count of the number of CWA facilities or SDWA public drinking water systems with current violations.
    string CVRows = 1;
    // Summary count of the number of facilities with a formal enforcement action in the past five years
    string FEARows = 2;
    repeated rcr1_Facilities Facilities = 3;
    // Number of facilities with insp_5yr_flag populated (CWP_DATE_LAST_INSPECTION)
    string INSPRows = 4;
    // Number of facilities with tribal_flag populated
    string IndianCountryRows = 5;
    // Number of facilities with infea_5yr_flag populated (INFORMAL_ENF_ACT_COUNT > 0)
    string InfFEARows = 6;
    rcr1_MapOutput MapOutput = 7;
    // Field to record messages (typically performance-related) about packet processing
    string Message = 8;
    // The number of pages of results returned
    string PageNo = 9;
    // Sequential number assigned to entire search result
    string QueryID = 10;
    // Number of query results returned
    string QueryRows = 11;
    // Number of facilities with curr_sv_flag populated (CWP_STATUS = "Significant Violation")
    string SVRows = 12;
    // The total dollar amount of either assessed or final penalties within the five year time period
    string TotalPenalties = 13;
    // Number of facilities having one or more quarters in non-compliance (QNC) in the last three years
    string V3Rows = 14;
}

message Rcr2_ClusterData {
    // Summary count of the number of CWA facilities or SDWA public drinking water systems with current violations.
    string CVRows = 1;
    string ClusterCount = 2;
    string ClusterIcon = 3;
    // The latitude in decimal degrees expressed using the NAD83 horizontal datum.
    string ClusterLatitude = 4;
    // The longitude in decimal degrees expressed using the NAD83 horizontal datum.
    string ClusterLongitude = 5;
    string ClusterName = 6;
    string ClusterType = 7;
    string ClusterValue = 8;
    // The EPA region where the facility is located. EPA has 10 regional offices that execute programs within several states and territories
    string EPARegionCode = 9;
    // Summary count of the number of facilities with a formal enforcement action in the past five years
    string FEARows = 10;
    // Number of facilities with insp_5yr_flag populated (CWP_DATE_LAST_INSPECTION)
    string INSPRows = 11;
    // Number of facilities with tribal_flag populated
    string IndianCountryRows = 12;
    // Number of facilities with infea_5yr_flag populated (INFORMAL_ENF_ACT_COUNT > 0)
    string InfFEARows = 13;
    // Sequential number assigned to each facility returned
    string ObjectId = 14;
    // Number of facilities with curr_sv_flag populated (CWP_STATUS = "Significant Violation")
    string SVRows = 15;
    // The total dollar amount of either assessed or final penalties within the five year time period
    string TotalPenalties = 16;
    // Number of facilities having one or more quarters in non-compliance (QNC) in the last three years
    string V3Rows = 17;
}

message Rcr2_ClusterOutput {
    repeated rcr2_ClusterData ClusterData = 1;
}

message Rcr2_Facilities {
    string ActiveLower48 = 1;
    string AirIDs = 2;
    string CWAIDs = 3;
    string CalculatedAccuracyMeters = 4;
    // A geographic unit used by the United States Census Bureau, generally defined to contain between 600 and 3,000 people.
    string CensusBlockGroup = 5;
    // Displays "Y" if the facility is located within the Chesapeake Bay watershed.
    string ChesapeakeBayFlag = 6;
    // ??
    string CollectionMethod = 7;
    // Indicates if the facility has a current significant violation. 1 = Yes
    string CurrSvFlag = 8;
    // Indicates if the facility has a current violation. 1 = Yes
    string CurrVioFlag = 9;
    string CurrentVioCnt = 10;
    string DateLastRecordReview = 11;
    // The EPA data system in which permit and facility records are kept. EPA's Facility Registry System (FRS) links all program database records (such as permit IDs and IDs facilities use in reporting to EPA) together. The following list describes the individual data systems that are linked to from the detailed facility report: 
    // 
    // - AFS: Air Facility System for Clean Air Act stationary source programs.
    // - ICP: Integrated Compliance Information System for Clean Water Act programs monitoring National Pollutant Discharge Elimination System (NPDES) permits.
    // - RCR: Resource Conservation and Recovery Act Information System (RCRAInfo) for tracking the Resource Conservation and Recovery Act (RCRA) programs.
    // - NCDB: National Compliance Database System for monitoring national performance of the Toxic Substance Control Act (TSCA); the Emergency Planning and Right-to-Know Act, Section 313 (EPCRA); the Asbestos Hazard Emergency Response (AHERA); and the Federal Insecticide, Fungicide, and Rodenticide Act (FIFRA).
    // - TRI: Toxics Release Inventory for Emergency Planning and Community Right-to-Know Act, Section 313 submissions.
    // - NEI: National Emissions Inventory database contains information on stationary and mobile sources that emit criteria air pollutants and their precursors, as well as hazardous air pollutants (HAPs). The database includes estimates of annual emissions, by source, of air pollutants in each area of the country, on an annual basis.
    // - TSCA: Toxic Substances Control Act addressing the production, importation, use, and disposal of specific chemicals.
    string EPASystem = 12;
    // Indicates if the facility has a formal enforcement action within the last 5 years. 1 = Yes
    string Ea5yrFlag = 13;
    string EjscreenFlag = 14;
    string EjscreenFlagUs = 15;
    // The 8-digit Hydrologic Unit Code (HUC) of the watershed in which the facility resides. A HUC number is assigned to every watershed in the nation and uniquely identifies the watershed.
    string FacDerivedHuc = 16;
    string FacDerivedTRIbes = 17;
    string FacDerivedWBD = 18;
    string FacDerivedWBDName = 19;
    // The 2-digit Federal Information Processing Standards (FIPS) code to identify the county that a facility is located in.
    string FacFIPSCode = 20;
    // Indicates the federal agency, as classified in FRS. Federal agencies are installations that are owned and operated by the U.S. government. The five-character code consists of a letter followed by four numbers. There are four possible letters that can occupy the first character position: C = Civilian Federal Agency; D = Department of Defense; E = Department of Energy; X = Unknown. The second and third characters represent the agency code, while the fourth and fifth characters represent the bureau code.
    string FacFederalAgencyCode = 21;
    string FacFederalAgencyName = 22;
    // Flag showing Y/N whether the facility is located in Indian Country.
    string FacIndianCntryFlg = 23;
    string FacIndianSpatialFlg = 24;
    // The latitude of the facility in decimal degrees expressed using the NAD83 horizontal datum. The coordinate comes from the FRS EPA Locational Reference Tables (LRT) file which represents the most accurate value for the facility based on the available spatial metadata.
    string FacLat = 25;
    // The longitude of the facility in decimal degrees expressed using the NAD83 horizontal datum. The coordinate comes from the FRS EPA Locational Reference Tables (LRT) file which represents the most accurate value for the facility based on the available spatial metadata.
    string FacLong = 26;
    // Graphical indicator denoting whether geographical data required to map a facility are available.
    string FacMapFlg = 27;
    // The default map icon image file calculated for the facility by the ECHO program.
    string FacMapIcon = 28;
    // Percent Minority is the percentage of the population of the given area that is considered minority. Statistics are shown for the area within a 3-mile radius of each facility.
    string FacPercentMinority = 29;
    string FacPopulationDensity = 30;
    string FacSicCodes = 31;
    string FacTRILandReleases = 32;
    string FacTRIOffSiteTransfers = 33;
    string FacTRIOnSiteReleases = 34;
    // Indicates whether facility reported to the Toxics Release Inventory (TRI) for the most recent reporting year.
    string FacTRIReporter = 35;
    // A Y/N flag indicating that the facility is within 100KM of the US-Mexico Border.
    string FacUsMexBorderFlg = 36;
    // Indicates if the facility has an informal enforcement action within the last 5 years. 1 = Yes.
    string Infea5yrFlag = 37;
    // Indicates if the facility has an inspection within the last 5 years. 1 = Yes
    string Insp5yrFlag = 38;
    string LastViolationDate = 39;
    // Flag showing Y/N whether location is within the contiguous (lower 48) United States.
    string Lower48 = 40;
    string Map = 41;
    // The maximum percentile from all individual EJSCREEN indicators.
    string MaxPctileUs = 42;
    // [Col. 121]
    string MaxScore = 43;
    // Sequential number assigned to each facility returned
    string ObjectId = 44;
    string Over80CountUs = 45;
    // The national percentile of the census block group for the EJSCREEN NATA air toxics cancer risk indicator.
    string PctileCancerUs = 46;
    // The national percentile of the census block group for the EJSCREEN diesel particulate matter indicator.
    string PctileDpmUs = 47;
    // The national percentile of the census block group for the EJSCREEN ozone indicator.
    string PctileO3Us = 48;
    // The national percentile of the census block group for the EJSCREEN Lead paint indicator.
    string PctilePctpre1960Us = 49;
    // The national percentile of the census block group for the EJSCREEN particulate matter indicator.
    string PctilePmUs = 50;
    // The national percentile of the census block group for the EJSCREEN proximity to major direct water dischargers indicator.
    string PctileProximityNPDESUs = 51;
    // The national percentile of the census block group for the EJSCREEN proximity to National Priorities List (NPL) sites indicator.
    string PctileProximityNplUs = 52;
    // The national percentile of the census block group for the EJSCREEN proximity to Risk Management Plan (RMP) sites indicator.
    string PctileProximityRmpUs = 53;
    // The national percentile of the census block group for the EJSCREEN proximity to Treatment Storage and Disposal Facilities (TSDFs) indicator.
    string PctileProximityTsdfUs = 54;
    // The national percentile of the census block group for the EJSCREEN NATA respiratory hazard index indicator.
    string PctileRespUs = 55;
    // The national percentile of the census block group for the EJSCREEN Traffic proximity and volume indicator.
    string PctileTrafficScoreUs = 56;
    string RCRA3yrComplQtrsStatus = 57;
    string RCRACaseIDs = 58;
    string RCRACity = 59;
    string RCRACounty = 60;
    string RCRACurrComplStatus = 61;
    string RCRACurrSNC = 62;
    string RCRACurrViolationTypes = 63;
    string RCRADaysLastInspection = 64;
    string RCRAEPARegion = 65;
    string RCRAFIPSCode = 66;
    string RCRAFeaCnt = 67;
    // A unique 12-character ID assigned for each record/permit/site/facility within the RCRAInfo database.
    string RCRAIDs = 68;
    string RCRAIeaCnt = 69;
    string RCRAImpWaterFlg = 70;
    string RCRAIndianCntryFlg = 71;
    string RCRAInspCnt = 72;
    string RCRALandTypeCode = 73;
    string RCRALastFeaDate = 74;
    string RCRALastFeaDateEPA = 75;
    string RCRALastFeaDateState = 76;
    string RCRALastIeaDate = 77;
    string RCRALastIeaDateEPA = 78;
    string RCRALastIeaDateState = 79;
    string RCRALastInspDateEPA = 80;
    string RCRALastInspDateState = 81;
    string RCRALastInspectionDate = 82;
    string RCRALastPenaltyDate = 83;
    string RCRAMapIcon = 84;
    string RCRANaics = 85;
    string RCRAName = 86;
    string RCRAOldestOpenVioDate = 87;
    string RCRAPenalties = 88;
    string RCRAQtrsInNC = 89;
    string RCRAQtrsInSNC = 90;
    string RCRAState = 91;
    string RCRAStateDistrict = 92;
    string RCRAStatus = 93;
    string RCRAStreet = 94;
    string RCRATRIbalLandCode = 95;
    string RCRAUniverse = 96;
    string RCRAZip = 97;
    // ??
    string ReferencePoint = 98;
    // An internal 12-digit Facility Registry Service (FRS) tracking number used to tie all facility data together in EPA regulatory program databases.
    string RegistryID = 99;
    string RmpIDs = 100;
    // A unique 9-character ID assigned for each public water system within the Safe Drinking Water Information System (SDWIS).
    string SDWAIDs = 101;
    string Score = 102;
    // Unique Identifier assigned by EPA.
    string SourceID = 103;
    // The name of the statute associated with each of the permits and identifiers linked to the facility: 
    // - CAA = the Clean Air Act
    // - CWA = the Clean Water Act
    // - RCRA = the Resource Conservation and Recovery Act
    // - EP313 = the Emergency Planning and Community Right-to-Know Act, Section 313 (also known as the Toxics Release Inventory Program)
    // - TSCA = the Toxic Substances Control Act
    // - SDWA = the Safe Drinking Water Act
    string Statute = 104;
    // A unique 15-character ID assigned for each facility within the Toxics Release Inventory (TRI) program. The format is ZZZZZNNNNNSSSSS, where ZZZZZ = ZIP code, NNNNN = the first 5 consonants of the name, and SSSSS = the first 5 non-blank non-special characters in the street address.
    string TRIIDs = 105;
    string TRIbalFlag = 106;
    string Tsdf = 107;
    // Indicates if the facility had a violation within the last 3 years. 1 = Yes
    string ViolFlag = 108;
}

message Rcr2_Results {
    // Summary count of the number of CWA facilities or SDWA public drinking water systems with current violations.
    string CVRows = 1;
    rcr2_ClusterOutput ClusterOutput = 2;
    // Number of clusters returned.
    string ClusterRecords = 3;
    // Summary count of the number of facilities with a formal enforcement action in the past five years
    string FEARows = 4;
    repeated rcr2_Facilities Facilities = 5;
    // Number of facilities with insp_5yr_flag populated (CWP_DATE_LAST_INSPECTION)
    string INSPRows = 6;
    // URL where all the icons are located
    string IconBaseURL = 7;
    // Number of facilities with tribal_flag populated
    string IndianCountryRows = 8;
    // Number of facilities with infea_5yr_flag populated (INFORMAL_ENF_ACT_COUNT > 0)
    string InfFEARows = 9;
    // Field to record messages (typically performance-related) about packet processing
    string Message = 10;
    // Combine this URL with the PUC to get popup info
    string PopUpBaseURL = 11;
    // Sequential number assigned to entire search result
    string QueryID = 12;
    // A list of submitted query parameters and their values.
    repeated qp0_QueryParameters QueryParameters = 13;
    // Number of query results returned
    string QueryRows = 14;
    // Number of facilities with curr_sv_flag populated (CWP_STATUS = "Significant Violation")
    string SVRows = 15;
    string ServiceBaseURL = 16;
    // The total dollar amount of either assessed or final penalties within the five year time period
    string TotalPenalties = 17;
    // Number of facilities having one or more quarters in non-compliance (QNC) in the last three years
    string V3Rows = 18;
}

message Rcr3_MapData {
    // The number of formal enforcement actions that have been taken against the facility
    string FormalCount = 1;
    // Name of each individual icon file within the URL base
    string ICON = 2;
    // The number of informal enforcement actions that have been taken against the facility
    string InformalCount = 3;
    // The latitude of the facility in degrees, to four decimal places
    string LAT = 4;
    // The longitude of the facility in degrees, to four decimal places
    string LON = 5;
    // The unique identifier for the last inspection
    string LastInsp = 6;
    // For DFR, this is the Facility name. The name corresponds to the TYPE value
    string NAME = 7;
    // Pop up value. Combine with PopUpBaseURL to give the popup for the facility
    string PUV = 8;
    string RCRAstatus = 9;
    // For DFR, this is always facility
    string TYPE = 10;
}

message Rcr3_MapOutput {
    // URL where all the icons are located
    string IconBaseURL = 1;
    repeated rcr3_MapData MapData = 2;
    // Combine this URL with the PUC to get popup info
    string PopUpBaseURL = 3;
    // Sequential number assigned to entire search result
    string QueryID = 4;
}

message Rcr4_Results {
    repeated rcr1_Facilities Facilities = 1;
    // Field to record messages (typically performance-related) about packet processing
    string Message = 2;
    // The number of pages of results returned
    string PageNo = 3;
    // Sequential number assigned to entire search result
    string QueryID = 4;
    // Number of query results returned
    string QueryRows = 5;
}

message Rcr5_Feature {
    Geometry geometry = 1;
    rcr5_properties properties = 2;
    // Static marker indicating object is a GeoJSON Feature.
    string type = 3;
}

message Rcr5_properties {
    // Air Facility System (AFS) ID.
    string AIRIDs = 1;
    string ActiveLower48 = 2;
    string CWAIDs = 3;
    int32 CalculatedAccuracyMeters = 4;
    // A geographic unit used by the United States Census Bureau, generally defined to contain between 600 and 3,000 people.
    string CensusBlockGroup = 5;
    // Displays "Y" if the facility is located within the Chesapeake Bay watershed.
    string ChesapeakeBayFlag = 6;
    // ??
    string CollectionMethod = 7;
    // Indicates if the facility has a current significant violation. 1 = Yes
    int32 CurrSvFlag = 8;
    // Indicates if the facility has a current violation. 1 = Yes
    int32 CurrVioFlag = 9;
    string CurrentVioCnt = 10;
    string DateLastRecordReview = 11;
    // The EPA data system in which permit and facility records are kept. EPA's Facility Registry System (FRS) links all program database records (such as permit IDs and IDs facilities use in reporting to EPA) together. The following list describes the individual data systems that are linked to from the detailed facility report: 
    // 
    // - AFS: Air Facility System for Clean Air Act stationary source programs.
    // - ICP: Integrated Compliance Information System for Clean Water Act programs monitoring National Pollutant Discharge Elimination System (NPDES) permits.
    // - RCR: Resource Conservation and Recovery Act Information System (RCRAInfo) for tracking the Resource Conservation and Recovery Act (RCRA) programs.
    // - NCDB: National Compliance Database System for monitoring national performance of the Toxic Substance Control Act (TSCA); the Emergency Planning and Right-to-Know Act, Section 313 (EPCRA); the Asbestos Hazard Emergency Response (AHERA); and the Federal Insecticide, Fungicide, and Rodenticide Act (FIFRA).
    // - TRI: Toxics Release Inventory for Emergency Planning and Community Right-to-Know Act, Section 313 submissions.
    // - NEI: National Emissions Inventory database contains information on stationary and mobile sources that emit criteria air pollutants and their precursors, as well as hazardous air pollutants (HAPs). The database includes estimates of annual emissions, by source, of air pollutants in each area of the country, on an annual basis.
    // - TSCA: Toxic Substances Control Act addressing the production, importation, use, and disposal of specific chemicals.
    string EPASystem = 12;
    // Indicates if the facility has a formal enforcement action within the last 5 years. 1 = Yes
    int32 Ea5yrFlag = 13;
    string EjscreenFlag = 14;
    string EjscreenFlagUs = 15;
    // The 8-digit Hydrologic Unit Code (HUC) of the watershed in which the facility resides. A HUC number is assigned to every watershed in the nation and uniquely identifies the watershed.
    string FacDerivedHuc = 16;
    string FacDerivedTRIbes = 17;
    string FacDerivedWBD = 18;
    string FacDerivedWBDName = 19;
    // The 2-digit Federal Information Processing Standards (FIPS) code to identify the county that a facility is located in.
    string FacFIPSCode = 20;
    // Indicates the federal agency, as classified in FRS. Federal agencies are installations that are owned and operated by the U.S. government. The five-character code consists of a letter followed by four numbers. There are four possible letters that can occupy the first character position: C = Civilian Federal Agency; D = Department of Defense; E = Department of Energy; X = Unknown. The second and third characters represent the agency code, while the fourth and fifth characters represent the bureau code.
    string FacFederalAgencyCode = 21;
    string FacFederalAgencyName = 22;
    // Flag showing Y/N whether the facility is located in Indian Country.
    string FacIndianCntryFlg = 23;
    string FacIndianSpatialFlg = 24;
    // Graphical indicator denoting whether geographical data required to map a facility are available.
    string FacMapFlg = 25;
    // The default map icon image file calculated for the facility by the ECHO program.
    string FacMapIcon = 26;
    // Percent Minority is the percentage of the population of the given area that is considered minority. Statistics are shown for the area within a 3-mile radius of each facility.
    int32 FacPercentMinority = 27;
    int32 FacPopulationDensity = 28;
    string FacSicCodes = 29;
    string FacTRILandReleases = 30;
    string FacTRIOffSiteTransfers = 31;
    string FacTRIOnSiteReleases = 32;
    // Indicates whether facility reported to the Toxics Release Inventory (TRI) for the most recent reporting year.
    string FacTRIReporter = 33;
    // A Y/N flag indicating that the facility is within 100KM of the US-Mexico Border.
    string FacUsMexBorderFlg = 34;
    // Indicates if the facility has an informal enforcement action within the last 5 years. 1 = Yes.
    int32 Infea5yrFlag = 35;
    // Indicates if the facility has an inspection within the last 5 years. 1 = Yes
    int32 Insp5yrFlag = 36;
    string LastViolationDate = 37;
    // Flag showing Y/N whether location is within the contiguous (lower 48) United States.
    string Lower48 = 38;
    string Map = 39;
    // The maximum percentile from all individual EJSCREEN indicators.
    int32 MaxPctileUs = 40;
    // [Col. 121]
    int32 MaxScore = 41;
    int32 Over80CountUs = 42;
    // The national percentile of the census block group for the EJSCREEN NATA air toxics cancer risk indicator.
    int32 PctileCancerUs = 43;
    // The national percentile of the census block group for the EJSCREEN diesel particulate matter indicator.
    int32 PctileDpmUs = 44;
    // The national percentile of the census block group for the EJSCREEN ozone indicator.
    int32 PctileO3Us = 45;
    // The national percentile of the census block group for the EJSCREEN Lead paint indicator.
    int32 PctilePctpre1960Us = 46;
    // The national percentile of the census block group for the EJSCREEN particulate matter indicator.
    int32 PctilePmUs = 47;
    // The national percentile of the census block group for the EJSCREEN proximity to major direct water dischargers indicator.
    int32 PctileProximityNPDESUs = 48;
    // The national percentile of the census block group for the EJSCREEN proximity to National Priorities List (NPL) sites indicator.
    int32 PctileProximityNplUs = 49;
    // The national percentile of the census block group for the EJSCREEN proximity to Risk Management Plan (RMP) sites indicator.
    int32 PctileProximityRmpUs = 50;
    // The national percentile of the census block group for the EJSCREEN proximity to Treatment Storage and Disposal Facilities (TSDFs) indicator.
    int32 PctileProximityTsdfUs = 51;
    // The national percentile of the census block group for the EJSCREEN NATA respiratory hazard index indicator.
    int32 PctileRespUs = 52;
    // The national percentile of the census block group for the EJSCREEN Traffic proximity and volume indicator.
    int32 PctileTrafficScoreUs = 53;
    string RCRA3yrComplQtrsStatus = 54;
    string RCRACaseIDs = 55;
    string RCRACity = 56;
    string RCRACounty = 57;
    string RCRACurrComplStatus = 58;
    string RCRACurrSNC = 59;
    string RCRACurrViolationTypes = 60;
    int32 RCRADaysLastInspection = 61;
    string RCRAEPARegion = 62;
    string RCRAFIPSCode = 63;
    int32 RCRAFeaCnt = 64;
    // A unique 12-character ID assigned for each record/permit/site/facility within the RCRAInfo database.
    string RCRAIDs = 65;
    int32 RCRAIeaCnt = 66;
    string RCRAImpWaterFlg = 67;
    string RCRAIndianCntryFlg = 68;
    int32 RCRAInspCnt = 69;
    string RCRALandTypeCode = 70;
    string RCRALastFeaDate = 71;
    string RCRALastFeaDateEPA = 72;
    string RCRALastFeaDateState = 73;
    string RCRALastIeaDate = 74;
    string RCRALastIeaDateEPA = 75;
    string RCRALastIeaDateState = 76;
    string RCRALastInspDateEPA = 77;
    string RCRALastInspDateState = 78;
    string RCRALastInspectionDate = 79;
    string RCRALastPenaltyDate = 80;
    string RCRAMapIcon = 81;
    string RCRANaics = 82;
    string RCRAName = 83;
    string RCRAOldestOpenVioDate = 84;
    int32 RCRAPenalties = 85;
    int32 RCRAQtrsInNC = 86;
    int32 RCRAQtrsInSNC = 87;
    string RCRAState = 88;
    string RCRAStateDistrict = 89;
    string RCRAStatus = 90;
    string RCRAStreet = 91;
    string RCRATRIbalLandCode = 92;
    string RCRAUniverse = 93;
    string RCRAZip = 94;
    // ??
    string ReferencePoint = 95;
    // An internal 12-digit Facility Registry Service (FRS) tracking number used to tie all facility data together in EPA regulatory program databases.
    string RegistryID = 96;
    string RmpIDs = 97;
    // A unique 9-character ID assigned for each public water system within the Safe Drinking Water Information System (SDWIS).
    string SDWAIDs = 98;
    int32 Score = 99;
    // Unique Identifier assigned by EPA.
    string SourceID = 100;
    // The name of the statute associated with each of the permits and identifiers linked to the facility: 
    // - CAA = the Clean Air Act
    // - CWA = the Clean Water Act
    // - RCRA = the Resource Conservation and Recovery Act
    // - EP313 = the Emergency Planning and Community Right-to-Know Act, Section 313 (also known as the Toxics Release Inventory Program)
    // - TSCA = the Toxic Substances Control Act
    // - SDWA = the Safe Drinking Water Act
    string Statute = 101;
    // A unique 15-character ID assigned for each facility within the Toxics Release Inventory (TRI) program. The format is ZZZZZNNNNNSSSSS, where ZZZZZ = ZIP code, NNNNN = the first 5 consonants of the name, and SSSSS = the first 5 non-blank non-special characters in the street address.
    string TRIIDs = 102;
    int32 TRIbalFlag = 103;
    string Tsdf = 104;
    // Indicates if the facility had a violation within the last 3 years. 1 = Yes
    int32 ViolFlag = 105;
}

enum Summarylist {
    Y = 0;
    N = 1;
}

enum Tablelist {
    Y = 0;
    N = 1;
}

service U.S.EPAEnforcementAndComplianceHistoryOnline(ECHO)-ResourceConservationAndRecoveryActService {
    // Resource Conservation and Recovery Act (RCRA) Download Data Service
    // 
    // Based on the QID obtained from a get_facilities or get_facility_info query, return a comma separated value (CSV) file of the facilities found.
    rpc GetRcra_rest_servicesGet_download(GetRcra_rest_servicesGet_downloadRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/echo/rcra_rest_services.get_download"
      };
    }
    // Resource Conservation and Recovery Act (RCRA) Download Data Service
    // 
    // Based on the QID obtained from a get_facilities or get_facility_info query, return a comma separated value (CSV) file of the facilities found.
    rpc PostRcra_rest_servicesGet_download(PostRcra_rest_servicesGet_downloadRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/echo/rcra_rest_services.get_download"
      };
    }
    // Resource Conservation and Recovery Act (RCRA) Facility Search Service
    // 
    // Validates query search parameters and returns query identifier.  Use the responseset parameter to set the page size
    rpc GetRcra_rest_servicesGet_facilities(GetRcra_rest_servicesGet_facilitiesRequest) returns (GetRcra_rest_servicesGet_facilitiesResponse) {
      option (google.api.http) = {
        get: "/echo/rcra_rest_services.get_facilities"
      };
    }
    // Resource Conservation and Recovery Act (RCRA) Facility Search Service
    // 
    // Validates query search parameters and returns query identifier.  Use the responseset parameter to set the page size
    rpc PostRcra_rest_servicesGet_facilities(PostRcra_rest_servicesGet_facilitiesRequest) returns (PostRcra_rest_servicesGet_facilitiesResponse) {
      option (google.api.http) = {
        post: "/echo/rcra_rest_services.get_facilities"
      };
    }
    // Resource Conservation and Recovery Act (RCRA) Facility Enhanced Search Service
    // 
    // Returns either an array of Facilities or an array of Clusters that meet the specified search criteria.
    rpc GetRcra_rest_servicesGet_facility_info(GetRcra_rest_servicesGet_facility_infoRequest) returns (GetRcra_rest_servicesGet_facility_infoResponse) {
      option (google.api.http) = {
        get: "/echo/rcra_rest_services.get_facility_info"
      };
    }
    // Resource Conservation and Recovery Act (RCRA) Facility Enhanced Search Service
    // 
    // Returns either an array of Facilities or an array of Clusters that meet the specified search criteria.
    rpc PostRcra_rest_servicesGet_facility_info(PostRcra_rest_servicesGet_facility_infoRequest) returns (PostRcra_rest_servicesGet_facility_infoResponse) {
      option (google.api.http) = {
        post: "/echo/rcra_rest_services.get_facility_info"
      };
    }
    // Resource Conservation and Recovery Act (RCRA) GeoJSON Service
    // 
    // Based on the QID obtained from a get_facilities or get_facility_info query, return GeoJSON of the facilities found.
    rpc GetRcra_rest_servicesGet_geojson(GetRcra_rest_servicesGet_geojsonRequest) returns (GetRcra_rest_servicesGet_geojsonResponse) {
      option (google.api.http) = {
        get: "/echo/rcra_rest_services.get_geojson"
      };
    }
    // Resource Conservation and Recovery Act (RCRA) GeoJSON Service
    // 
    // Based on the QID obtained from a get_facilities or get_facility_info query, return GeoJSON of the facilities found.
    rpc PostRcra_rest_servicesGet_geojson(PostRcra_rest_servicesGet_geojsonRequest) returns (PostRcra_rest_servicesGet_geojsonResponse) {
      option (google.api.http) = {
        post: "/echo/rcra_rest_services.get_geojson"
      };
    }
    // Resource Conservation and Recovery Act (RCRA) Info Clusters Service
    // 
    // Based on the QID obtained from a clustered get_facility_info query, download cluster facility information as either a CSV or GEOJSON file.
    rpc GetRcra_rest_servicesGet_info_clusters(GetRcra_rest_servicesGet_info_clustersRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/echo/rcra_rest_services.get_info_clusters"
      };
    }
    // Resource Conservation and Recovery Act (RCRA) Info Clusters Service
    // 
    // Based on the QID obtained from a clustered get_facility_info query, download cluster facility information as either a CSV or GEOJSON file.
    rpc PostRcra_rest_servicesGet_info_clusters(PostRcra_rest_servicesGet_info_clustersRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/echo/rcra_rest_services.get_info_clusters"
      };
    }
    // Resource Conservation and Recovery Act (RCRA) Map Service
    // 
    // The purpose of the GET_MAP service is to display facility coordinates and facility clusters related to a get_facilities facility query. Currently, the maximum number of coordinates returned is 500. GET_MAP performs automatic clustering at the state, county, and zip code levels to maximize the number of coordinates returned.
    rpc GetRcra_rest_servicesGet_map(GetRcra_rest_servicesGet_mapRequest) returns (GetRcra_rest_servicesGet_mapResponse) {
      option (google.api.http) = {
        get: "/echo/rcra_rest_services.get_map"
      };
    }
    // Resource Conservation and Recovery Act (RCRA) Map Service
    // 
    // The purpose of the GET_MAP service is to display facility coordinates and facility clusters related to a get_facilities facility query. Currently, the maximum number of coordinates returned is 500. GET_MAP performs automatic clustering at the state, county, and zip code levels to maximize the number of coordinates returned.
    rpc PostRcra_rest_servicesGet_map(PostRcra_rest_servicesGet_mapRequest) returns (PostRcra_rest_servicesGet_mapResponse) {
      option (google.api.http) = {
        post: "/echo/rcra_rest_services.get_map"
      };
    }
    // Resource Conservation and Recovery Act (RCRA) Paginated Results Service
    // 
    // GET_QID is passed with a query ID corresponding to a previously run get_facilities query. It then returns a Facility object containing all matching facilities. The main purpose of GET_QID is for large querysets that contain multiple pages (responsesets) of output. GET_QID allows for pagination and for the selection and sorting of columns.
    rpc GetRcra_rest_servicesGet_qid(GetRcra_rest_servicesGet_qidRequest) returns (GetRcra_rest_servicesGet_qidResponse) {
      option (google.api.http) = {
        get: "/echo/rcra_rest_services.get_qid"
      };
    }
    // Resource Conservation and Recovery Act (RCRA) Paginated Results Service
    // 
    // GET_QID is passed with a query ID corresponding to a previously run get_facilities query. It then returns a Facility object containing all matching facilities. The main purpose of GET_QID is for large querysets that contain multiple pages (responsesets) of output. GET_QID allows for pagination and for the selection and sorting of columns.
    rpc PostRcra_rest_servicesGet_qid(PostRcra_rest_servicesGet_qidRequest) returns (PostRcra_rest_servicesGet_qidResponse) {
      option (google.api.http) = {
        post: "/echo/rcra_rest_services.get_qid"
      };
    }
    // Resource Conservation and Recovery Act (RCRA) Metadata Service
    // 
    // Returns the JSON Object Name and ColumnId for usage with the qcolumns parameter for get_qid, get_facility_info and other service endpoints.
    rpc GetRcra_rest_servicesMetadata(GetRcra_rest_servicesMetadataRequest) returns (GetRcra_rest_servicesMetadataResponse) {
      option (google.api.http) = {
        get: "/echo/rcra_rest_services.metadata"
      };
    }
    // Resource Conservation and Recovery Act (RCRA) Metadata Service
    // 
    // Returns the JSON Object Name and ColumnId for usage with the qcolumns parameter for get_qid, get_facility_info and other service endpoints.
    rpc PostRcra_rest_servicesMetadata(PostRcra_rest_servicesMetadataRequest) returns (PostRcra_rest_servicesMetadataResponse) {
      option (google.api.http) = {
        post: "/echo/rcra_rest_services.metadata"
      };
    }
}
