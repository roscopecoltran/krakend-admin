syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package u.s.epaenforcementandcompliancehistoryonline(echo)-alldata;

message GetEcho_rest_servicesGet_downloadRequest {
    // Output Format Flag.  Enter one of the following keywords:
    // - CSV = Facility results formatted as comma delimited file download (default).
    // - GEOJSOND = Facility results formatted as GeoJSON feature collection download.
    string output = 1;
    number p_pretty_print = 2;
    // Used to cutomize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions.
    string qcolumns = 3;
    string qid = 4;
}

message PostEcho_rest_servicesGet_downloadRequest {
    // Output Format Flag.  Enter one of the following keywords:
    // - CSV = Facility results formatted as comma delimited file download (default).
    // - GEOJSOND = Facility results formatted as GeoJSON feature collection download.
    string output = 1;
    number p_pretty_print = 2;
    // Used to cutomize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions.
    string qcolumns = 3;
    string qid = 4;
}

message GetEcho_rest_servicesGet_facilitiesRequest {
    string callback = 1;
    maplist maplist = 2;
    // Output Format Flag.  Enter one of the following keywords:
    // - JSON = Data model formatted as Javascript Object Notation (default).
    // - JSONP = Data model formatted as Javascript Object Notation with Padding.  
    // - XML = Data model formatted as Extensible Markup Language.
    enum GetEcho_rest_servicesGet_facilitiesRequest_Output {
        GETECHO_REST_SERVICESGET_FACILITIESREQUEST_OUTPUT_JSONP = 0;
        GETECHO_REST_SERVICESGET_FACILITIESREQUEST_OUTPUT_JSON = 1;
        GETECHO_REST_SERVICESGET_FACILITIESREQUEST_OUTPUT_XML = 2;
    }
    GetEcho_rest_servicesGet_facilitiesRequest_Output output = 3;
    p_act p_act = 4;
    number p_c1lat = 5;
    number p_c1lon = 6;
    number p_c2lat = 7;
    number p_c2lon = 8;
    string p_co = 9;
    number p_cs = 10;
    string p_ct = 11;
    string p_ejscreen = 12;
    string p_ejscreen_over80cnt = 13;
    string p_fa = 14;
    string p_fac_icos = 15;
    p_fea p_fea = 16;
    p_feaa p_feaa = 17;
    string p_feac = 18;
    number p_feay = 19;
    p_ff p_ff = 20;
    string p_fips = 21;
    string p_fn = 22;
    p_fntype p_fntype = 23;
    string p_frs = 24;
    string p_huc = 25;
    p_ico p_ico = 26;
    string p_icoo = 27;
    p_iea p_iea = 28;
    p_ieaa p_ieaa = 29;
    number p_ieay = 30;
    p_impw p_impw = 31;
    number p_lat = 32;
    p_limit_addr p_limit_addr = 33;
    number p_long = 34;
    string p_mact = 35;
    p_maj p_maj = 36;
    p_med p_med = 37;
    string p_naa = 38;
    string p_ncs = 39;
    string p_ocr = 40;
    p_oct p_oct = 41;
    p_pd p_pd = 42;
    string p_pen = 43;
    string p_pid = 44;
    p_pm p_pm = 45;
    p_qiv p_qiv = 46;
    string p_qs = 47;
    number p_radius = 48;
    p_reg p_reg = 49;
    string p_sa = 50;
    string p_sa1 = 51;
    string p_sfs = 52;
    string p_sic = 53;
    string p_sic2 = 54;
    string p_sic4 = 55;
    string p_sid = 56;
    string p_st = 57;
    p_trep p_trep = 58;
    number p_tribedist = 59;
    number p_tribeid = 60;
    string p_tribename = 61;
    p_usmex p_usmex = 62;
    string p_wbd = 63;
    p_ysl p_ysl = 64;
    p_ysla p_ysla = 65;
    number p_ysly = 66;
    string p_zip = 67;
    // Used to cutomize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions.
    string qcolumns = 68;
    number queryset = 69;
    number responseset = 70;
    summarylist summarylist = 71;
    tablelist tablelist = 72;
}

message GetEcho_rest_servicesGet_facilitiesResponse {
    ers1_Results Results = 1;
}

message PostEcho_rest_servicesGet_facilitiesRequest {
    string callback = 1;
    maplist maplist = 2;
    // Output Format Flag.  Enter one of the following keywords:
    // - JSON = Data model formatted as Javascript Object Notation (default).
    // - JSONP = Data model formatted as Javascript Object Notation with Padding.  
    // - XML = Data model formatted as Extensible Markup Language.
    enum PostEcho_rest_servicesGet_facilitiesRequest_Output {
        POSTECHO_REST_SERVICESGET_FACILITIESREQUEST_OUTPUT_JSONP = 0;
        POSTECHO_REST_SERVICESGET_FACILITIESREQUEST_OUTPUT_JSON = 1;
        POSTECHO_REST_SERVICESGET_FACILITIESREQUEST_OUTPUT_XML = 2;
    }
    PostEcho_rest_servicesGet_facilitiesRequest_Output output = 3;
    p_act p_act = 4;
    number p_c1lat = 5;
    number p_c1lon = 6;
    number p_c2lat = 7;
    number p_c2lon = 8;
    string p_co = 9;
    number p_cs = 10;
    string p_ct = 11;
    string p_ejscreen = 12;
    string p_ejscreen_over80cnt = 13;
    string p_fa = 14;
    string p_fac_icos = 15;
    p_fea p_fea = 16;
    p_feaa p_feaa = 17;
    string p_feac = 18;
    number p_feay = 19;
    p_ff p_ff = 20;
    string p_fips = 21;
    string p_fn = 22;
    p_fntype p_fntype = 23;
    string p_frs = 24;
    string p_huc = 25;
    p_ico p_ico = 26;
    string p_icoo = 27;
    p_iea p_iea = 28;
    p_ieaa p_ieaa = 29;
    number p_ieay = 30;
    p_impw p_impw = 31;
    number p_lat = 32;
    p_limit_addr p_limit_addr = 33;
    number p_long = 34;
    string p_mact = 35;
    p_maj p_maj = 36;
    p_med p_med = 37;
    string p_naa = 38;
    string p_ncs = 39;
    string p_ocr = 40;
    p_oct p_oct = 41;
    p_pd p_pd = 42;
    string p_pen = 43;
    string p_pid = 44;
    p_pm p_pm = 45;
    p_qiv p_qiv = 46;
    string p_qs = 47;
    number p_radius = 48;
    p_reg p_reg = 49;
    string p_sa = 50;
    string p_sa1 = 51;
    string p_sfs = 52;
    string p_sic = 53;
    string p_sic2 = 54;
    string p_sic4 = 55;
    string p_sid = 56;
    string p_st = 57;
    p_trep p_trep = 58;
    number p_tribedist = 59;
    number p_tribeid = 60;
    string p_tribename = 61;
    p_usmex p_usmex = 62;
    string p_wbd = 63;
    p_ysl p_ysl = 64;
    p_ysla p_ysla = 65;
    number p_ysly = 66;
    string p_zip = 67;
    // Used to cutomize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions.
    string qcolumns = 68;
    number queryset = 69;
    number responseset = 70;
    summarylist summarylist = 71;
    tablelist tablelist = 72;
}

message PostEcho_rest_servicesGet_facilitiesResponse {
    ers1_Results Results = 1;
}

message GetEcho_rest_servicesGet_facility_infoRequest {
    string callback = 1;
    // Output Format Flag.  Enter one of the following keywords:
    // - JSON = Data model formatted as Javascript Object Notation (default).
    // - JSONP = Data model formatted as Javascript Object Notation with Padding.  
    // - XML = Data model formatted as Extensible Markup Language.
    // - CSV = Facility results formatted as comma delimited file download.
    // - GEOJSON = Facility results formatted as GeoJSON feature collection.
    // - GEOJSONP = Facility results formatted as GeoJSON feature collection with Padding.
    // - GEOJSOND = Facility results formatted as GeoJSON feature collection download.
    string output = 2;
    p_act p_act = 3;
    string p_co = 4;
    number p_cs = 5;
    string p_ct = 6;
    string p_ejscreen = 7;
    string p_ejscreen_over80cnt = 8;
    string p_fa = 9;
    string p_fac_icos = 10;
    p_fea p_fea = 11;
    p_feaa p_feaa = 12;
    string p_feac = 13;
    number p_feay = 14;
    p_ff p_ff = 15;
    string p_fips = 16;
    string p_fn = 17;
    p_fntype p_fntype = 18;
    string p_frs = 19;
    string p_huc = 20;
    p_ico p_ico = 21;
    string p_icoo = 22;
    p_iea p_iea = 23;
    p_ieaa p_ieaa = 24;
    number p_ieay = 25;
    p_impw p_impw = 26;
    number p_lat = 27;
    p_limit_addr p_limit_addr = 28;
    number p_long = 29;
    string p_mact = 30;
    p_maj p_maj = 31;
    p_med p_med = 32;
    string p_naa = 33;
    string p_ncs = 34;
    string p_ocr = 35;
    p_oct p_oct = 36;
    p_pd p_pd = 37;
    string p_pen = 38;
    string p_pid = 39;
    p_pm p_pm = 40;
    number p_pretty_print = 41;
    p_qiv p_qiv = 42;
    string p_qs = 43;
    number p_radius = 44;
    p_reg p_reg = 45;
    string p_sa = 46;
    string p_sa1 = 47;
    string p_sfs = 48;
    string p_sic = 49;
    string p_sic2 = 50;
    string p_sic4 = 51;
    string p_sid = 52;
    string p_st = 53;
    p_trep p_trep = 54;
    number p_tribedist = 55;
    number p_tribeid = 56;
    string p_tribename = 57;
    p_usmex p_usmex = 58;
    string p_wbd = 59;
    p_ysl p_ysl = 60;
    p_ysla p_ysla = 61;
    number p_ysly = 62;
    string p_zip = 63;
    // Used to cutomize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions.
    string qcolumns = 64;
    number responseset = 65;
    number xmax = 66;
    number xmin = 67;
    number ymax = 68;
    number ymin = 69;
}

message GetEcho_rest_servicesGet_facility_infoResponse {
    ers2_Results Results = 1;
}

message PostEcho_rest_servicesGet_facility_infoRequest {
    string callback = 1;
    // Output Format Flag.  Enter one of the following keywords:
    // - JSON = Data model formatted as Javascript Object Notation (default).
    // - JSONP = Data model formatted as Javascript Object Notation with Padding.  
    // - XML = Data model formatted as Extensible Markup Language.
    // - CSV = Facility results formatted as comma delimited file download.
    // - GEOJSON = Facility results formatted as GeoJSON feature collection.
    // - GEOJSONP = Facility results formatted as GeoJSON feature collection with Padding.
    // - GEOJSOND = Facility results formatted as GeoJSON feature collection download.
    string output = 2;
    p_act p_act = 3;
    string p_co = 4;
    number p_cs = 5;
    string p_ct = 6;
    string p_ejscreen = 7;
    string p_ejscreen_over80cnt = 8;
    string p_fa = 9;
    string p_fac_icos = 10;
    p_fea p_fea = 11;
    p_feaa p_feaa = 12;
    string p_feac = 13;
    number p_feay = 14;
    p_ff p_ff = 15;
    string p_fips = 16;
    string p_fn = 17;
    p_fntype p_fntype = 18;
    string p_frs = 19;
    string p_huc = 20;
    p_ico p_ico = 21;
    string p_icoo = 22;
    p_iea p_iea = 23;
    p_ieaa p_ieaa = 24;
    number p_ieay = 25;
    p_impw p_impw = 26;
    number p_lat = 27;
    p_limit_addr p_limit_addr = 28;
    number p_long = 29;
    string p_mact = 30;
    p_maj p_maj = 31;
    p_med p_med = 32;
    string p_naa = 33;
    string p_ncs = 34;
    string p_ocr = 35;
    p_oct p_oct = 36;
    p_pd p_pd = 37;
    string p_pen = 38;
    string p_pid = 39;
    p_pm p_pm = 40;
    number p_pretty_print = 41;
    p_qiv p_qiv = 42;
    string p_qs = 43;
    number p_radius = 44;
    p_reg p_reg = 45;
    string p_sa = 46;
    string p_sa1 = 47;
    string p_sfs = 48;
    string p_sic = 49;
    string p_sic2 = 50;
    string p_sic4 = 51;
    string p_sid = 52;
    string p_st = 53;
    p_trep p_trep = 54;
    number p_tribedist = 55;
    number p_tribeid = 56;
    string p_tribename = 57;
    p_usmex p_usmex = 58;
    string p_wbd = 59;
    p_ysl p_ysl = 60;
    p_ysla p_ysla = 61;
    number p_ysly = 62;
    string p_zip = 63;
    // Used to cutomize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions.
    string qcolumns = 64;
    number responseset = 65;
    number xmax = 66;
    number xmin = 67;
    number ymax = 68;
    number ymin = 69;
}

message PostEcho_rest_servicesGet_facility_infoResponse {
    ers2_Results Results = 1;
}

message GetEcho_rest_servicesGet_geojsonRequest {
    string callback = 1;
    descending descending = 2;
    number newsort = 3;
    // Output Format Flag.  Enter one of the following keywords:
    // - GEOJSON = Facility results formatted as GeoJSON feature collection (default).
    // - GEOJSONP = Facility results formatted as GeoJSON feature collection with Padding.
    // - GEOJSOND = Facility results formatted as GeoJSON feature collection download.
    string output = 4;
    number p_pretty_print = 5;
    // Used to cutomize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions.
    string qcolumns = 6;
    string qid = 7;
}

message GetEcho_rest_servicesGet_geojsonResponse {
    // Array of GeoJSON feature objects.
    repeated ers5_Feature features = 1;
    // Static marker indicating object is a GeoJSON Feature Collection.
    string type = 2;
}

message PostEcho_rest_servicesGet_geojsonRequest {
    string callback = 1;
    descending descending = 2;
    number newsort = 3;
    // Output Format Flag.  Enter one of the following keywords:
    // - GEOJSON = Facility results formatted as GeoJSON feature collection (default).
    // - GEOJSONP = Facility results formatted as GeoJSON feature collection with Padding.
    // - GEOJSOND = Facility results formatted as GeoJSON feature collection download.
    string output = 4;
    number p_pretty_print = 5;
    // Used to cutomize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions.
    string qcolumns = 6;
    string qid = 7;
}

message PostEcho_rest_servicesGet_geojsonResponse {
    // Array of GeoJSON feature objects.
    repeated ers5_Feature features = 1;
    // Static marker indicating object is a GeoJSON Feature Collection.
    string type = 2;
}

message GetEcho_rest_servicesGet_info_clustersRequest {
    // Output Format Flag.  Enter one of the following keywords:
    // - CSV = Facility results formatted as comma delimited file download (default).
    // - GEOJSOND = Facility results formatted as GeoJSON feature collection download.
    string output = 1;
    number p_pretty_print = 2;
    string p_qid = 3;
}

message PostEcho_rest_servicesGet_info_clustersRequest {
    // Output Format Flag.  Enter one of the following keywords:
    // - CSV = Facility results formatted as comma delimited file download (default).
    // - GEOJSOND = Facility results formatted as GeoJSON feature collection download.
    string output = 1;
    number p_pretty_print = 2;
    string p_qid = 3;
}

message GetEcho_rest_servicesGet_mapRequest {
    number c1_lat = 1;
    number c1_long = 2;
    number c2_lat = 3;
    number c2_long = 4;
    string callback = 5;
    // Output Format Flag.  Enter one of the following keywords:
    // - JSON = Data model formatted as Javascript Object Notation (default).
    // - JSONP = Data model formatted as Javascript Object Notation with Padding.  
    // - XML = Data model formatted as Extensible Markup Language.
    enum GetEcho_rest_servicesGet_mapRequest_Output {
        GETECHO_REST_SERVICESGET_MAPREQUEST_OUTPUT_JSONP = 0;
        GETECHO_REST_SERVICESGET_MAPREQUEST_OUTPUT_JSON = 1;
        GETECHO_REST_SERVICESGET_MAPREQUEST_OUTPUT_XML = 2;
    }
    GetEcho_rest_servicesGet_mapRequest_Output output = 6;
    string p_id = 7;
    string qid = 8;
    tablelist tablelist = 9;
}

message GetEcho_rest_servicesGet_mapResponse {
    ers0_MapOutput MapOutput = 1;
}

message PostEcho_rest_servicesGet_mapRequest {
    number c1_lat = 1;
    number c1_long = 2;
    number c2_lat = 3;
    number c2_long = 4;
    string callback = 5;
    // Output Format Flag.  Enter one of the following keywords:
    // - JSON = Data model formatted as Javascript Object Notation (default).
    // - JSONP = Data model formatted as Javascript Object Notation with Padding.  
    // - XML = Data model formatted as Extensible Markup Language.
    enum PostEcho_rest_servicesGet_mapRequest_Output {
        POSTECHO_REST_SERVICESGET_MAPREQUEST_OUTPUT_JSONP = 0;
        POSTECHO_REST_SERVICESGET_MAPREQUEST_OUTPUT_JSON = 1;
        POSTECHO_REST_SERVICESGET_MAPREQUEST_OUTPUT_XML = 2;
    }
    PostEcho_rest_servicesGet_mapRequest_Output output = 6;
    string p_id = 7;
    string qid = 8;
    tablelist tablelist = 9;
}

message PostEcho_rest_servicesGet_mapResponse {
    ers0_MapOutput MapOutput = 1;
}

message GetEcho_rest_servicesGet_qidRequest {
    string callback = 1;
    descending descending = 2;
    number newsort = 3;
    // Output Format Flag.  Enter one of the following keywords:
    // - JSON = Data model formatted as Javascript Object Notation (default).
    // - JSONP = Data model formatted as Javascript Object Notation with Padding.  
    // - XML = Data model formatted as Extensible Markup Language.
    enum GetEcho_rest_servicesGet_qidRequest_Output {
        GETECHO_REST_SERVICESGET_QIDREQUEST_OUTPUT_JSONP = 0;
        GETECHO_REST_SERVICESGET_QIDREQUEST_OUTPUT_JSON = 1;
        GETECHO_REST_SERVICESGET_QIDREQUEST_OUTPUT_XML = 2;
    }
    GetEcho_rest_servicesGet_qidRequest_Output output = 4;
    number pageno = 5;
    // Used to cutomize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions.
    string qcolumns = 6;
    string qid = 7;
}

message GetEcho_rest_servicesGet_qidResponse {
    ers4_Results Results = 1;
}

message PostEcho_rest_servicesGet_qidRequest {
    string callback = 1;
    descending descending = 2;
    number newsort = 3;
    // Output Format Flag.  Enter one of the following keywords:
    // - JSON = Data model formatted as Javascript Object Notation (default).
    // - JSONP = Data model formatted as Javascript Object Notation with Padding.  
    // - XML = Data model formatted as Extensible Markup Language.
    enum PostEcho_rest_servicesGet_qidRequest_Output {
        POSTECHO_REST_SERVICESGET_QIDREQUEST_OUTPUT_JSONP = 0;
        POSTECHO_REST_SERVICESGET_QIDREQUEST_OUTPUT_JSON = 1;
        POSTECHO_REST_SERVICESGET_QIDREQUEST_OUTPUT_XML = 2;
    }
    PostEcho_rest_servicesGet_qidRequest_Output output = 4;
    number pageno = 5;
    // Used to cutomize service output.  A list of comma-separated column IDs of output objects that will be returned in the service query object or download.  Use the metadata service endpoint for a complete list of Ids and definitions.
    string qcolumns = 6;
    string qid = 7;
}

message PostEcho_rest_servicesGet_qidResponse {
    ers4_Results Results = 1;
}

message GetEcho_rest_servicesMetadataRequest {
    string callback = 1;
    // Output Format Flag.  Enter one of the following keywords:
    // - JSON = Data model formatted as Javascript Object Notation (default).
    // - JSONP = Data model formatted as Javascript Object Notation with Padding.  
    // - XML = Data model formatted as Extensible Markup Language.
    enum GetEcho_rest_servicesMetadataRequest_Output {
        GETECHO_REST_SERVICESMETADATAREQUEST_OUTPUT_JSONP = 0;
        GETECHO_REST_SERVICESMETADATAREQUEST_OUTPUT_JSON = 1;
        GETECHO_REST_SERVICESMETADATAREQUEST_OUTPUT_XML = 2;
    }
    GetEcho_rest_servicesMetadataRequest_Output output = 2;
}

message GetEcho_rest_servicesMetadataResponse {
    met_Results Results = 1;
}

message PostEcho_rest_servicesMetadataRequest {
    string callback = 1;
    // Output Format Flag.  Enter one of the following keywords:
    // - JSON = Data model formatted as Javascript Object Notation (default).
    // - JSONP = Data model formatted as Javascript Object Notation with Padding.  
    // - XML = Data model formatted as Extensible Markup Language.
    enum PostEcho_rest_servicesMetadataRequest_Output {
        POSTECHO_REST_SERVICESMETADATAREQUEST_OUTPUT_JSONP = 0;
        POSTECHO_REST_SERVICESMETADATAREQUEST_OUTPUT_JSON = 1;
        POSTECHO_REST_SERVICESMETADATAREQUEST_OUTPUT_XML = 2;
    }
    PostEcho_rest_servicesMetadataRequest_Output output = 2;
}

message PostEcho_rest_servicesMetadataResponse {
    met_Results Results = 1;
}

message Geometry {
    // Array of coordinate values in longitude, latitude format.
    repeated int32 coordinates = 1;
    // Indicator of the geometry represented in the GeoJSON Feature, for Echo will always be "Point".
    string type = 2;
}

enum Descending {
    Y = 0;
    N = 1;
}

message Ers0_MapData {
    string CAAstatus = 1;
    // Quarterly compliance status for the most recent 13 quarters. Each letter indicates the compliance status for the corresponding quarter.
    string CWAstatus = 2;
    // The number of formal enforcement actions that have been taken against the facility
    string FormalCount = 3;
    // Name of each individual icon file within the URL base
    string ICON = 4;
    // The number of informal enforcement actions that have been taken against the facility
    string InformalCount = 5;
    // The latitude of the facility in degrees, to four decimal places
    string LAT = 6;
    // The longitude of the facility in degrees, to four decimal places
    string LON = 7;
    // The unique identifier for the last inspection
    string LastInsp = 8;
    // For DFR, this is the Facility name. The name corresponds to the TYPE value
    string NAME = 9;
    // Pop up value. Combine with PopUpBaseURL to give the popup for the facility
    string PUV = 10;
    string RCRAstatus = 11;
    string SDWAstatus = 12;
    // For DFR, this is always facility
    string TYPE = 13;
}

message Ers0_MapOutput {
    // URL where all the icons are located
    string IconBaseURL = 1;
    repeated ers0_MapData MapData = 2;
    // Combine this URL with the PUC to get popup info
    string PopUpBaseURL = 3;
    // Sequential number assigned to entire search result
    string QueryID = 4;
}

message Ers1_Facilities {
    string AIRFlag = 1;
    // Air Facility System (AFS) ID.
    string AIRIDs = 2;
    string ActiveLower48 = 3;
    string CAA3yrComplQtrsStatus = 4;
    // Current compliance status.
    string CAACurrComplianceStatus = 5;
    string CAACurrHpvFlag = 6;
    string CAADateLastFormalAction = 7;
    string CAADaysLastEvaluation = 8;
    // The number of inspections/compliance evaluations under the Clean Air Act, occurring at the facility within the last five years
    string CAAEvaluationCount = 9;
    // Indicates the number of enforcement actions taken against the facility within the last five years under the Clean Air Act.
    string CAAFormalActionCount = 10;
    // Indicates the number of informal enforcement actions/notices of violations (NOVs) taken against the facility within the last five years under the Clean Air Act.
    string CAAInformalCount = 11;
    string CAALastPenaltyAmt = 12;
    string CAALastPenaltyDate = 13;
    string CAANaics = 14;
    // The total dollar amount of assessed (or final) penalties taken against the facility within the last five years under the Clean Air Act.
    string CAAPenalties = 15;
    // ICIS AIR Permit Types associated with the FRS Facility:
    // - Major
    // - Federally Reportable Minor
    // - Other Minor
    // - Synthetic Minor
    // - NULL
    string CAAPermitTypes = 16;
    string CAAQtrsInNC = 17;
    string CAASics = 18;
    string CWA13qtrsComplStatus = 19;
    string CWA13qtrsEfflntExceedances = 20;
    string CWA3YrQncrCodes = 21;
    string CWAComplianceTracking = 22;
    // Current compliance status
    string CWACurrComplianceStatus = 23;
    string CWACurrSNCFlag = 24;
    string CWADateLastFormalAction = 25;
    string CWADaysLastInspection = 26;
    // Indicates the number of enforcement actions taken against the facility within the last five years under the Clean Water Act.
    string CWAFormalActionCount = 27;
    // Indicates the number of informal enforcement actions/notices of violations (NOVs) taken against the facility within the last five years under the Clean Water Act.
    string CWAInformalCount = 28;
    // The number of inspections/compliance evaluations under the Clean Water Act, occurring at the facility within the last five years.
    string CWAInspectionCount = 29;
    string CWALastPenaltyAmt = 30;
    string CWALastPenaltyDate = 31;
    string CWANaics = 32;
    // The total dollar amount of assessed (or final) penalties taken against the facility within the last five years under the Clean Water Act.
    string CWAPenalties = 33;
    // Indicates the facility's permit type or designation.
    // - Major
    // - Minor
    string CWAPermitTypes = 34;
    string CWAQtrsInNC = 35;
    string CWASics = 36;
    // Facility identifiers for the Clean Air Markets Division database.
    string CamdIDs = 37;
    // A geographic unit used by the United States Census Bureau, generally defined to contain between 600 and 3,000 people.
    string CensusBlockGroup = 38;
    // Indicates if the facility has a current significant violation. 1 = Yes
    string CurrSvFlag = 39;
    // Indicates if the facility has a current violation. 1 = Yes
    string CurrVioFlag = 40;
    string DfrUrl = 41;
    // Indicates if the facility has a formal enforcement action within the last 5 years. 1 = Yes
    string Ea5yrFlag = 42;
    string EisFlag = 43;
    string EisIDs = 44;
    string EjscreenFlag = 45;
    string EjscreenFlagUs = 46;
    string Fac3yrComplianceStatus = 47;
    string FacAccuracyMeters = 48;
    string FacActiveFlag = 49;
    string FacChesapeakeBayFlg = 50;
    // The city where the facility is located.
    string FacCity = 51;
    string FacCollectionMethod = 52;
    // The county where the facility is located.
    string FacCounty = 53;
    // Current compliance status: SNC/Serious Viol, In Violation, No Violation, Unknown, NULL. (Order corresponds to priority if multiple programs/permits exist)
    string FacCurrComplianceStatus = 54;
    // The current Significant Non-compliance (SNC), Serious Violation or High Priority Violator (HPV) status for the facility during the most current quarter reflects the time the records were extracted from the program data systems
    string FacCurrSNCFlg = 55;
    string FacDateLastFormalActEPA = 56;
    string FacDateLastFormalActSt = 57;
    // Indicates the effective date of the most recent listed enforcement action taken against the facility within the last five years.
    string FacDateLastFormalAction = 58;
    string FacDateLastInformalActEPA = 59;
    string FacDateLastInformalActSt = 60;
    // The date of the most recent informal action or NOV taken recorded in AFS, ICIS-NPDES, RCRA Info or SDWIS.
    string FacDateLastInformalAction = 61;
    // The date on which most recent inspection of the facility took place. For the Clean Air Act, the date on which a Full Inspection (FCE) was completed. This date may or may not correspond to an actual site visit. A series of partial on- or off-site inspections may have been conducted during the fiscal year as part of this FCE.
    string FacDateLastInspection = 62;
    string FacDateLastInspectionEPA = 63;
    string FacDateLastInspectionState = 64;
    // Indicates the date on which the most recent assessed (or final) penalty was taken against the facility within the last five years
    string FacDateLastPenalty = 65;
    // The number of days from the last ECHO refresh to the date on which the most recent inspection of the facility took place based on data recorded into AFS, ICIS-NPDES, or RCRA Info.
    string FacDaysLastInspection = 66;
    string FacDerivedCb2010 = 67;
    string FacDerivedCd113 = 68;
    // The 8-digit Hydrologic Unit Code (HUC) of the watershed in which the facility resides. A HUC number is assigned to every watershed in the nation and uniquely identifies the watershed.
    string FacDerivedHuc = 69;
    string FacDerivedRadWBDHu8 = 70;
    string FacDerivedRadWBDHu8Name = 71;
    string FacDerivedStctyFIPS = 72;
    string FacDerivedTRIbes = 73;
    string FacDerivedWBD = 74;
    string FacDerivedWBDHu8 = 75;
    string FacDerivedWBDHu8Name = 76;
    string FacDerivedZip = 77;
    // The EPA region where the facility is located. EPA has 10 regional offices that execute programs within several states and territories
    string FacEPARegion = 78;
    // The 2-digit Federal Information Processing Standards (FIPS) code to identify the county that a facility is located in.
    string FacFIPSCode = 79;
    string FacFederalAgency = 80;
    string FacFederalAgencyName = 81;
    string FacFederalFlg = 82;
    // Indicates the total number of enforcement actions taken against the facility within the last five years. NA indicates that this measure is not applicable for facilities with no associated CAA, CWA, or RCRA permits
    string FacFormalActionCount = 83;
    string FacImpWaterFlg = 84;
    // Flag showing Y/N whether the facility is located in Indian Country.
    string FacIndianCntryFlg = 85;
    string FacIndianSpatialFlg = 86;
    // Indicates the total number of informal enforcement actions/notices of violations (NOVs) taken against the facility within the last five years
    string FacInformalCount = 87;
    // The number of inspections/compliance evaluations that have occurred at the facility, under the AIR, CWA, and RCRA, within the last five years. The last 5 years will include data from the 20 most recently completed quarters, plus data from the current quarter up until the refresh date. This count only includes inspection types that are counted as inspections in official counts.
    string FacInspectionCount = 88;
    // Indicates the dollar amount of the most recent assessed (or final) penalty taken against the facility within the last five years
    string FacLastPenaltyAmt = 89;
    // The latitude of the facility in decimal degrees expressed using the NAD83 horizontal datum. The coordinate comes from the FRS EPA Locational Reference Tables (LRT) file which represents the most accurate value for the facility based on the available spatial metadata.
    string FacLat = 90;
    // The longitude of the facility in decimal degrees expressed using the NAD83 horizontal datum. The coordinate comes from the FRS EPA Locational Reference Tables (LRT) file which represents the most accurate value for the facility based on the available spatial metadata.
    string FacLong = 91;
    string FacMajorFlag = 92;
    // Graphical indicator denoting whether geographical data required to map a facility are available.
    string FacMapFlg = 93;
    // The default map icon image file calculated for the facility by the ECHO program.
    string FacMapIcon = 94;
    string FacMyrtkUniverse = 95;
    string FacNaaFlag = 96;
    string FacNaicsCodes = 97;
    // Name of facility
    string FacName = 98;
    // The total number of penalties assessed (or final) taken against the facility within the last five years
    string FacPenaltyCount = 99;
    // Percent Minority is the percentage of the population of the given area that is considered minority. Statistics are shown for the area within a 3-mile radius of each facility.
    string FacPercentMinority = 100;
    // The number of persons per square mile in the area being profiled. This field is the ratio of total persons (displayed in the Total Persons field) to total land area (displayed in the Land Area field).
    string FacPopDen = 101;
    // A count of the number of programs (AIR, CWA, SDWA, RCRA) related to the facility that have a current serious violation
    string FacProgramsInSNC = 102;
    // Count of the number of quarters, out of the last twelve quarters, in which the permit or site is considered either in Non-compliance (NC), Significant Non-compliance (SNC) or High Priority violation (HPV) status
    string FacQtrsInNC = 103;
    string FacReferencePoint = 104;
    string FacSicCodes = 105;
    // Facility state
    string FacState = 106;
    // Street address where facility is located, as maintained by each data system. Certain data systems also maintain mailing address information, which is not used in this report. The street address may differ across EPA databases due to differences in reported information (e.g., use of mailing address), change in ownership, use of parent or subsidiary address, etc.
    string FacStreet = 107;
    // The total dollar amount of either assessed (or final) penalties taken against the facility within the last five years
    string FacTotalPenalties = 108;
    // A Y/N flag indicating that the facility is within 100KM of the US-Mexico Border.
    string FacUsMexBorderFlg = 109;
    // Facility ZIP code
    string FacZip = 110;
    // All Case Numbers of Federal Enforcement Cases relating to the Facility from the ICIS System
    string FecCaseIDs = 111;
    string FecLastCaseDate = 112;
    string FecNumberOfCases = 113;
    string FecTotalPenalties = 114;
    // The sum of total release amounts of all linked Greenhouse Gas IDs reported as "metric tons of CO2 equivalents"
    string GHGCO2Releases = 115;
    string GHGFlag = 116;
    string GHGIDs = 117;
    // ???
    string HasPollRpt = 118;
    // Indicates if the facility has an informal enforcement action within the last 5 years. 1 = Yes.
    string Infea5yrFlag = 119;
    // Indicates if the facility has an inspection within the last 5 years. 1 = Yes
    string Insp5yrFlag = 120;
    // Flag showing Y/N whether location is within the contiguous (lower 48) United States.
    string Lower48 = 121;
    // The maximum percentile from all individual EJSCREEN indicators.
    string MaxPctileUs = 122;
    // [Col. 121]
    string MaxScore = 123;
    string NC = 124;
    string NPDESFlag = 125;
    // Clean Water Act ID from the ICIS-NPDES (Integrated Compliance Information System - National Pollutant Discharge Elimination System)
    string NPDESIDs = 126;
    string Over80CountUs = 127;
    // The national percentile of the census block group for the EJSCREEN NATA air toxics cancer risk indicator.
    string PctileCancerUs = 128;
    // The national percentile of the census block group for the EJSCREEN diesel particulate matter indicator.
    string PctileDpmUs = 129;
    // The national percentile of the census block group for the EJSCREEN ozone indicator.
    string PctileO3Us = 130;
    // The national percentile of the census block group for the EJSCREEN Lead paint indicator.
    string PctilePctpre1960Us = 131;
    // The national percentile of the census block group for the EJSCREEN particulate matter indicator.
    string PctilePmUs = 132;
    // The national percentile of the census block group for the EJSCREEN proximity to major direct water dischargers indicator.
    string PctileProximityNPDESUs = 133;
    // The national percentile of the census block group for the EJSCREEN proximity to National Priorities List (NPL) sites indicator.
    string PctileProximityNplUs = 134;
    // The national percentile of the census block group for the EJSCREEN proximity to Risk Management Plan (RMP) sites indicator.
    string PctileProximityRmpUs = 135;
    // The national percentile of the census block group for the EJSCREEN proximity to Treatment Storage and Disposal Facilities (TSDFs) indicator.
    string PctileProximityTsdfUs = 136;
    // The national percentile of the census block group for the EJSCREEN NATA respiratory hazard index indicator.
    string PctileRespUs = 137;
    // The national percentile of the census block group for the EJSCREEN Traffic proximity and volume indicator.
    string PctileTrafficScoreUs = 138;
    string RCRA3yrComplQtrsStatus = 139;
    // Current compliance status
    string RCRACurrComplianceStatus = 140;
    string RCRACurrSNCFlag = 141;
    string RCRADateLastFormalAction = 142;
    string RCRADaysLastEvaluation = 143;
    string RCRAFlag = 144;
    // Indicates the number of enforcement actions taken against the facility within the last five years under the Resource Conservation and Recovery Act.
    string RCRAFormalActionCount = 145;
    // A unique 12-character ID assigned for each record/permit/site/facility within the RCRAInfo database.
    string RCRAIDs = 146;
    // Indicates the number of informal enforcement actions/notices of violations (NOVs) taken against the facility within the last five years under the Resource Conservation and Recovery Act.
    string RCRAInformalCount = 147;
    // The number of inspections/compliance evaluations under the Resource Conservation and Recovery Act, occurring at the facility within the last five years
    string RCRAInspectionCount = 148;
    string RCRALastPenaltyAmt = 149;
    string RCRALastPenaltyDate = 150;
    string RCRANaics = 151;
    string RCRAPenalties = 152;
    // RCRA Facility Types include:
    // - TSDF = Treatment, Storage and Disposal facility
    // - LQG = Large Quantity Generator
    // - SQG = Small Quantity Generator
    // - CESQG = Conditionally-Exempt Small Quantity Generator
    // - Operating TSDF
    // - Transporters
    string RCRAPermitTypes = 153;
    string RCRAQtrsInNC = 154;
    // An internal 12-digit Facility Registry Service (FRS) tracking number used to tie all facility data together in EPA regulatory program databases.
    string RegistryID = 155;
    string RmpIDs = 156;
    string SDWA3yrComplQtrsStatus = 157;
    // Current compliance status
    string SDWACurrComplianceStatus = 158;
    string SDWACurrSNCFlag = 159;
    // Indicates the number of enforcement actions taken against the facility within the last five years under the Safe Drinking Water Act
    string SDWAFormalActionCount = 160;
    // A unique 9-character ID assigned for each public water system within the Safe Drinking Water Information System (SDWIS).
    string SDWAIDs = 161;
    // Indicates the number of informal enforcement actions/notices of violations (NOVs) taken against the facility within the last five years under the Safe Drinking Water Act
    string SDWAInformalCount = 162;
    // SDWIS System Types
    string SDWASystemTypes = 163;
    string Score = 164;
    string SdwisFlag = 165;
    // Unique Identifier assigned by EPA.
    string SourceID = 166;
    string TRIFlag = 167;
    // A unique 15-character ID assigned for each facility within the Toxics Release Inventory (TRI) program. The format is ZZZZZNNNNNSSSSS, where ZZZZZ = ZIP code, NNNNN = the first 5 consonants of the name, and SSSSS = the first 5 non-blank non-special characters in the street address.
    string TRIIDs = 168;
    string TRIOffSiteTransfers = 169;
    string TRIOnSiteReleases = 170;
    // Total chemical releases, in pounds, as reported to the Toxics Release Inventory (TRI) by the facility for the most recent reporting year
    string TRIReleasesTransfers = 171;
    string TRIReporter = 172;
    string TRIReporterInPast = 173;
    string TRIbalFlag = 174;
    // Flag indicating whether or not a facility has a TSCA ID
    string TscaFlag = 175;
    // Toxic Substances Control Act ID assigned to a facility
    string TscaIDs = 176;
    // Indicates if the facility had a violation within the last 3 years. 1 = Yes
    string ViolFlag = 177;
    // Contains flags that identify what web accessible documents are available for the facility.
    string WebDocs = 178;
}

message Ers1_Results {
    string CAARows = 1;
    // Summary count of the number of CWA facilities or SDWA public drinking water systems with current violations.
    string CVRows = 2;
    string CWARows = 3;
    // Summary count of the number of facilities with a formal enforcement action in the past five years
    string FEARows = 4;
    repeated ers1_Facilities Facilities = 5;
    // Number of facilities with insp_5yr_flag populated (CWP_DATE_LAST_INSPECTION)
    string INSPRows = 6;
    // Number of facilities with tribal_flag populated
    string IndianCountryRows = 7;
    // Number of facilities with infea_5yr_flag populated (INFORMAL_ENF_ACT_COUNT > 0)
    string InfFEARows = 8;
    ers0_MapOutput MapOutput = 9;
    // Field to record messages (typically performance-related) about packet processing
    string Message = 10;
    // The number of pages of results returned
    string PageNo = 11;
    // Sequential number assigned to entire search result
    string QueryID = 12;
    // Number of query results returned
    string QueryRows = 13;
    string RCRRows = 14;
    // Number of facilities with curr_sv_flag populated (CWP_STATUS = "Significant Violation")
    string SVRows = 15;
    string TRIRows = 16;
    // The total dollar amount of either assessed or final penalties within the five year time period
    string TotalPenalties = 17;
    // Number of facilities having one or more quarters in non-compliance (QNC) in the last three years
    string V3Rows = 18;
    // Version of the SDWA system service
    string Version = 19;
}

message Ers2_ClusterData {
    // Summary count of the number of CWA facilities or SDWA public drinking water systems with current violations.
    string CVRows = 1;
    string ClusterCount = 2;
    string ClusterIcon = 3;
    // The latitude in decimal degrees expressed using the NAD83 horizontal datum.
    string ClusterLatitude = 4;
    // The longitude in decimal degrees expressed using the NAD83 horizontal datum.
    string ClusterLongitude = 5;
    string ClusterName = 6;
    string ClusterType = 7;
    string ClusterValue = 8;
    // The EPA region where the facility is located. EPA has 10 regional offices that execute programs within several states and territories
    string EPARegionCode = 9;
    // Summary count of the number of facilities with a formal enforcement action in the past five years
    string FEARows = 10;
    // Number of facilities with insp_5yr_flag populated (CWP_DATE_LAST_INSPECTION)
    string INSPRows = 11;
    // Number of facilities with tribal_flag populated
    string IndianCountryRows = 12;
    // Number of facilities with infea_5yr_flag populated (INFORMAL_ENF_ACT_COUNT > 0)
    string InfFEARows = 13;
    // Sequential number assigned to each facility returned
    string ObjectId = 14;
    // Number of facilities with curr_sv_flag populated (CWP_STATUS = "Significant Violation")
    string SVRows = 15;
    // The total dollar amount of either assessed or final penalties within the five year time period
    string TotalPenalties = 16;
    // Number of facilities having one or more quarters in non-compliance (QNC) in the last three years
    string V3Rows = 17;
}

message Ers2_ClusterOutput {
    repeated ers2_ClusterData ClusterData = 1;
}

message Ers2_Facilities {
    string AIRFlag = 1;
    // Air Facility System (AFS) ID.
    string AIRIDs = 2;
    string ActiveLower48 = 3;
    string CAA3yrComplQtrsStatus = 4;
    // Current compliance status.
    string CAACurrComplianceStatus = 5;
    string CAACurrHpvFlag = 6;
    string CAADateLastFormalAction = 7;
    string CAADaysLastEvaluation = 8;
    // The number of inspections/compliance evaluations under the Clean Air Act, occurring at the facility within the last five years
    string CAAEvaluationCount = 9;
    // Indicates the number of enforcement actions taken against the facility within the last five years under the Clean Air Act.
    string CAAFormalActionCount = 10;
    // Indicates the number of informal enforcement actions/notices of violations (NOVs) taken against the facility within the last five years under the Clean Air Act.
    string CAAInformalCount = 11;
    string CAALastPenaltyAmt = 12;
    string CAALastPenaltyDate = 13;
    string CAANaics = 14;
    // The total dollar amount of assessed (or final) penalties taken against the facility within the last five years under the Clean Air Act.
    string CAAPenalties = 15;
    // ICIS AIR Permit Types associated with the FRS Facility:
    // - Major
    // - Federally Reportable Minor
    // - Other Minor
    // - Synthetic Minor
    // - NULL
    string CAAPermitTypes = 16;
    string CAAQtrsInNC = 17;
    string CAASics = 18;
    string CWA13qtrsComplStatus = 19;
    string CWA13qtrsEfflntExceedances = 20;
    string CWA3YrQncrCodes = 21;
    string CWAComplianceTracking = 22;
    // Current compliance status
    string CWACurrComplianceStatus = 23;
    string CWACurrSNCFlag = 24;
    string CWADateLastFormalAction = 25;
    string CWADaysLastInspection = 26;
    // Indicates the number of enforcement actions taken against the facility within the last five years under the Clean Water Act.
    string CWAFormalActionCount = 27;
    // Indicates the number of informal enforcement actions/notices of violations (NOVs) taken against the facility within the last five years under the Clean Water Act.
    string CWAInformalCount = 28;
    // The number of inspections/compliance evaluations under the Clean Water Act, occurring at the facility within the last five years.
    string CWAInspectionCount = 29;
    string CWALastPenaltyAmt = 30;
    string CWALastPenaltyDate = 31;
    string CWANaics = 32;
    // The total dollar amount of assessed (or final) penalties taken against the facility within the last five years under the Clean Water Act.
    string CWAPenalties = 33;
    // Indicates the facility's permit type or designation.
    // - Major
    // - Minor
    string CWAPermitTypes = 34;
    string CWAQtrsInNC = 35;
    string CWASics = 36;
    // Facility identifiers for the Clean Air Markets Division database.
    string CamdIDs = 37;
    // A geographic unit used by the United States Census Bureau, generally defined to contain between 600 and 3,000 people.
    string CensusBlockGroup = 38;
    // Indicates if the facility has a current significant violation. 1 = Yes
    string CurrSvFlag = 39;
    // Indicates if the facility has a current violation. 1 = Yes
    string CurrVioFlag = 40;
    string DfrUrl = 41;
    // Indicates if the facility has a formal enforcement action within the last 5 years. 1 = Yes
    string Ea5yrFlag = 42;
    string EisFlag = 43;
    string EisIDs = 44;
    string EjscreenFlag = 45;
    string EjscreenFlagUs = 46;
    string Fac3yrComplianceStatus = 47;
    string FacAccuracyMeters = 48;
    string FacActiveFlag = 49;
    string FacChesapeakeBayFlg = 50;
    // The city where the facility is located.
    string FacCity = 51;
    string FacCollectionMethod = 52;
    // The county where the facility is located.
    string FacCounty = 53;
    // Current compliance status: SNC/Serious Viol, In Violation, No Violation, Unknown, NULL. (Order corresponds to priority if multiple programs/permits exist)
    string FacCurrComplianceStatus = 54;
    // The current Significant Non-compliance (SNC), Serious Violation or High Priority Violator (HPV) status for the facility during the most current quarter reflects the time the records were extracted from the program data systems
    string FacCurrSNCFlg = 55;
    string FacDateLastFormalActEPA = 56;
    string FacDateLastFormalActSt = 57;
    // Indicates the effective date of the most recent listed enforcement action taken against the facility within the last five years.
    string FacDateLastFormalAction = 58;
    string FacDateLastInformalActEPA = 59;
    string FacDateLastInformalActSt = 60;
    // The date of the most recent informal action or NOV taken recorded in AFS, ICIS-NPDES, RCRA Info or SDWIS.
    string FacDateLastInformalAction = 61;
    // The date on which most recent inspection of the facility took place. For the Clean Air Act, the date on which a Full Inspection (FCE) was completed. This date may or may not correspond to an actual site visit. A series of partial on- or off-site inspections may have been conducted during the fiscal year as part of this FCE.
    string FacDateLastInspection = 62;
    string FacDateLastInspectionEPA = 63;
    string FacDateLastInspectionState = 64;
    // Indicates the date on which the most recent assessed (or final) penalty was taken against the facility within the last five years
    string FacDateLastPenalty = 65;
    // The number of days from the last ECHO refresh to the date on which the most recent inspection of the facility took place based on data recorded into AFS, ICIS-NPDES, or RCRA Info.
    string FacDaysLastInspection = 66;
    string FacDerivedCb2010 = 67;
    string FacDerivedCd113 = 68;
    // The 8-digit Hydrologic Unit Code (HUC) of the watershed in which the facility resides. A HUC number is assigned to every watershed in the nation and uniquely identifies the watershed.
    string FacDerivedHuc = 69;
    string FacDerivedRadWBDHu8 = 70;
    string FacDerivedRadWBDHu8Name = 71;
    string FacDerivedStctyFIPS = 72;
    string FacDerivedTRIbes = 73;
    string FacDerivedWBD = 74;
    string FacDerivedWBDHu8 = 75;
    string FacDerivedWBDHu8Name = 76;
    string FacDerivedZip = 77;
    // The EPA region where the facility is located. EPA has 10 regional offices that execute programs within several states and territories
    string FacEPARegion = 78;
    // The 2-digit Federal Information Processing Standards (FIPS) code to identify the county that a facility is located in.
    string FacFIPSCode = 79;
    string FacFederalAgency = 80;
    string FacFederalAgencyName = 81;
    string FacFederalFlg = 82;
    // Indicates the total number of enforcement actions taken against the facility within the last five years. NA indicates that this measure is not applicable for facilities with no associated CAA, CWA, or RCRA permits
    string FacFormalActionCount = 83;
    string FacImpWaterFlg = 84;
    // Flag showing Y/N whether the facility is located in Indian Country.
    string FacIndianCntryFlg = 85;
    string FacIndianSpatialFlg = 86;
    // Indicates the total number of informal enforcement actions/notices of violations (NOVs) taken against the facility within the last five years
    string FacInformalCount = 87;
    // The number of inspections/compliance evaluations that have occurred at the facility, under the AIR, CWA, and RCRA, within the last five years. The last 5 years will include data from the 20 most recently completed quarters, plus data from the current quarter up until the refresh date. This count only includes inspection types that are counted as inspections in official counts.
    string FacInspectionCount = 88;
    // Indicates the dollar amount of the most recent assessed (or final) penalty taken against the facility within the last five years
    string FacLastPenaltyAmt = 89;
    // The latitude of the facility in decimal degrees expressed using the NAD83 horizontal datum. The coordinate comes from the FRS EPA Locational Reference Tables (LRT) file which represents the most accurate value for the facility based on the available spatial metadata.
    string FacLat = 90;
    // The longitude of the facility in decimal degrees expressed using the NAD83 horizontal datum. The coordinate comes from the FRS EPA Locational Reference Tables (LRT) file which represents the most accurate value for the facility based on the available spatial metadata.
    string FacLong = 91;
    string FacMajorFlag = 92;
    // Graphical indicator denoting whether geographical data required to map a facility are available.
    string FacMapFlg = 93;
    // The default map icon image file calculated for the facility by the ECHO program.
    string FacMapIcon = 94;
    string FacMyrtkUniverse = 95;
    string FacNaaFlag = 96;
    string FacNaicsCodes = 97;
    // Name of facility
    string FacName = 98;
    // The total number of penalties assessed (or final) taken against the facility within the last five years
    string FacPenaltyCount = 99;
    // Percent Minority is the percentage of the population of the given area that is considered minority. Statistics are shown for the area within a 3-mile radius of each facility.
    string FacPercentMinority = 100;
    // The number of persons per square mile in the area being profiled. This field is the ratio of total persons (displayed in the Total Persons field) to total land area (displayed in the Land Area field).
    string FacPopDen = 101;
    // A count of the number of programs (AIR, CWA, SDWA, RCRA) related to the facility that have a current serious violation
    string FacProgramsInSNC = 102;
    // Count of the number of quarters, out of the last twelve quarters, in which the permit or site is considered either in Non-compliance (NC), Significant Non-compliance (SNC) or High Priority violation (HPV) status
    string FacQtrsInNC = 103;
    string FacReferencePoint = 104;
    string FacSicCodes = 105;
    // Facility state
    string FacState = 106;
    // Street address where facility is located, as maintained by each data system. Certain data systems also maintain mailing address information, which is not used in this report. The street address may differ across EPA databases due to differences in reported information (e.g., use of mailing address), change in ownership, use of parent or subsidiary address, etc.
    string FacStreet = 107;
    // The total dollar amount of either assessed (or final) penalties taken against the facility within the last five years
    string FacTotalPenalties = 108;
    // A Y/N flag indicating that the facility is within 100KM of the US-Mexico Border.
    string FacUsMexBorderFlg = 109;
    // Facility ZIP code
    string FacZip = 110;
    // All Case Numbers of Federal Enforcement Cases relating to the Facility from the ICIS System
    string FecCaseIDs = 111;
    string FecLastCaseDate = 112;
    string FecNumberOfCases = 113;
    string FecTotalPenalties = 114;
    // The sum of total release amounts of all linked Greenhouse Gas IDs reported as "metric tons of CO2 equivalents"
    string GHGCO2Releases = 115;
    string GHGFlag = 116;
    string GHGIDs = 117;
    // ???
    string HasPollRpt = 118;
    // Indicates if the facility has an informal enforcement action within the last 5 years. 1 = Yes.
    string Infea5yrFlag = 119;
    // Indicates if the facility has an inspection within the last 5 years. 1 = Yes
    string Insp5yrFlag = 120;
    // Flag showing Y/N whether location is within the contiguous (lower 48) United States.
    string Lower48 = 121;
    // The maximum percentile from all individual EJSCREEN indicators.
    string MaxPctileUs = 122;
    // [Col. 121]
    string MaxScore = 123;
    string NC = 124;
    string NPDESFlag = 125;
    // Clean Water Act ID from the ICIS-NPDES (Integrated Compliance Information System - National Pollutant Discharge Elimination System)
    string NPDESIDs = 126;
    // Sequential number assigned to each facility returned
    string ObjectId = 127;
    string Over80CountUs = 128;
    // The national percentile of the census block group for the EJSCREEN NATA air toxics cancer risk indicator.
    string PctileCancerUs = 129;
    // The national percentile of the census block group for the EJSCREEN diesel particulate matter indicator.
    string PctileDpmUs = 130;
    // The national percentile of the census block group for the EJSCREEN ozone indicator.
    string PctileO3Us = 131;
    // The national percentile of the census block group for the EJSCREEN Lead paint indicator.
    string PctilePctpre1960Us = 132;
    // The national percentile of the census block group for the EJSCREEN particulate matter indicator.
    string PctilePmUs = 133;
    // The national percentile of the census block group for the EJSCREEN proximity to major direct water dischargers indicator.
    string PctileProximityNPDESUs = 134;
    // The national percentile of the census block group for the EJSCREEN proximity to National Priorities List (NPL) sites indicator.
    string PctileProximityNplUs = 135;
    // The national percentile of the census block group for the EJSCREEN proximity to Risk Management Plan (RMP) sites indicator.
    string PctileProximityRmpUs = 136;
    // The national percentile of the census block group for the EJSCREEN proximity to Treatment Storage and Disposal Facilities (TSDFs) indicator.
    string PctileProximityTsdfUs = 137;
    // The national percentile of the census block group for the EJSCREEN NATA respiratory hazard index indicator.
    string PctileRespUs = 138;
    // The national percentile of the census block group for the EJSCREEN Traffic proximity and volume indicator.
    string PctileTrafficScoreUs = 139;
    string RCRA3yrComplQtrsStatus = 140;
    // Current compliance status
    string RCRACurrComplianceStatus = 141;
    string RCRACurrSNCFlag = 142;
    string RCRADateLastFormalAction = 143;
    string RCRADaysLastEvaluation = 144;
    string RCRAFlag = 145;
    // Indicates the number of enforcement actions taken against the facility within the last five years under the Resource Conservation and Recovery Act.
    string RCRAFormalActionCount = 146;
    // A unique 12-character ID assigned for each record/permit/site/facility within the RCRAInfo database.
    string RCRAIDs = 147;
    // Indicates the number of informal enforcement actions/notices of violations (NOVs) taken against the facility within the last five years under the Resource Conservation and Recovery Act.
    string RCRAInformalCount = 148;
    // The number of inspections/compliance evaluations under the Resource Conservation and Recovery Act, occurring at the facility within the last five years
    string RCRAInspectionCount = 149;
    string RCRALastPenaltyAmt = 150;
    string RCRALastPenaltyDate = 151;
    string RCRANaics = 152;
    string RCRAPenalties = 153;
    // RCRA Facility Types include:
    // - TSDF = Treatment, Storage and Disposal facility
    // - LQG = Large Quantity Generator
    // - SQG = Small Quantity Generator
    // - CESQG = Conditionally-Exempt Small Quantity Generator
    // - Operating TSDF
    // - Transporters
    string RCRAPermitTypes = 154;
    string RCRAQtrsInNC = 155;
    // An internal 12-digit Facility Registry Service (FRS) tracking number used to tie all facility data together in EPA regulatory program databases.
    string RegistryID = 156;
    string RmpIDs = 157;
    string SDWA3yrComplQtrsStatus = 158;
    // Current compliance status
    string SDWACurrComplianceStatus = 159;
    string SDWACurrSNCFlag = 160;
    // Indicates the number of enforcement actions taken against the facility within the last five years under the Safe Drinking Water Act
    string SDWAFormalActionCount = 161;
    // A unique 9-character ID assigned for each public water system within the Safe Drinking Water Information System (SDWIS).
    string SDWAIDs = 162;
    // Indicates the number of informal enforcement actions/notices of violations (NOVs) taken against the facility within the last five years under the Safe Drinking Water Act
    string SDWAInformalCount = 163;
    // SDWIS System Types
    string SDWASystemTypes = 164;
    string Score = 165;
    string SdwisFlag = 166;
    // Unique Identifier assigned by EPA.
    string SourceID = 167;
    string TRIFlag = 168;
    // A unique 15-character ID assigned for each facility within the Toxics Release Inventory (TRI) program. The format is ZZZZZNNNNNSSSSS, where ZZZZZ = ZIP code, NNNNN = the first 5 consonants of the name, and SSSSS = the first 5 non-blank non-special characters in the street address.
    string TRIIDs = 169;
    string TRIOffSiteTransfers = 170;
    string TRIOnSiteReleases = 171;
    // Total chemical releases, in pounds, as reported to the Toxics Release Inventory (TRI) by the facility for the most recent reporting year
    string TRIReleasesTransfers = 172;
    string TRIReporter = 173;
    string TRIReporterInPast = 174;
    string TRIbalFlag = 175;
    // Flag indicating whether or not a facility has a TSCA ID
    string TscaFlag = 176;
    // Toxic Substances Control Act ID assigned to a facility
    string TscaIDs = 177;
    // Indicates if the facility had a violation within the last 3 years. 1 = Yes
    string ViolFlag = 178;
    // Contains flags that identify what web accessible documents are available for the facility.
    string WebDocs = 179;
}

message Ers2_Results {
    string CAARows = 1;
    // Summary count of the number of CWA facilities or SDWA public drinking water systems with current violations.
    string CVRows = 2;
    string CWARows = 3;
    ers2_ClusterOutput ClusterOutput = 4;
    // Number of clusters returned.
    string ClusterRecords = 5;
    // Summary count of the number of facilities with a formal enforcement action in the past five years
    string FEARows = 6;
    repeated ers2_Facilities Facilities = 7;
    // Number of facilities with insp_5yr_flag populated (CWP_DATE_LAST_INSPECTION)
    string INSPRows = 8;
    // URL where all the icons are located
    string IconBaseURL = 9;
    // Number of facilities with tribal_flag populated
    string IndianCountryRows = 10;
    // Number of facilities with infea_5yr_flag populated (INFORMAL_ENF_ACT_COUNT > 0)
    string InfFEARows = 11;
    // Field to record messages (typically performance-related) about packet processing
    string Message = 12;
    // Combine this URL with the PUC to get popup info
    string PopUpBaseURL = 13;
    // Sequential number assigned to entire search result
    string QueryID = 14;
    // A list of submitted query parameters and their values.
    repeated qp0_QueryParameters QueryParameters = 15;
    // Number of query results returned
    string QueryRows = 16;
    string RCRRows = 17;
    // Number of facilities with curr_sv_flag populated (CWP_STATUS = "Significant Violation")
    string SVRows = 18;
    string ServiceBaseURL = 19;
    string TRIRows = 20;
    // The total dollar amount of either assessed or final penalties within the five year time period
    string TotalPenalties = 21;
    // Number of facilities having one or more quarters in non-compliance (QNC) in the last three years
    string V3Rows = 22;
}

message Ers4_Results {
    repeated ers1_Facilities Facilities = 1;
    // Field to record messages (typically performance-related) about packet processing
    string Message = 2;
    // The number of pages of results returned
    string PageNo = 3;
    // Sequential number assigned to entire search result
    string QueryID = 4;
    // Number of query results returned
    string QueryRows = 5;
}

message Ers5_Feature {
    Geometry geometry = 1;
    ers5_properties properties = 2;
    // Static marker indicating object is a GeoJSON Feature.
    string type = 3;
}

message Ers5_properties {
    string AIRFlag = 1;
    // Air Facility System (AFS) ID.
    string AIRIDs = 2;
    string ActiveLower48 = 3;
    string CAA3yrComplQtrsStatus = 4;
    // Current compliance status.
    string CAACurrComplianceStatus = 5;
    string CAACurrHpvFlag = 6;
    string CAADateLastFormalAction = 7;
    int32 CAADaysLastEvaluation = 8;
    // The number of inspections/compliance evaluations under the Clean Air Act, occurring at the facility within the last five years
    string CAAEvaluationCount = 9;
    // Indicates the number of enforcement actions taken against the facility within the last five years under the Clean Air Act.
    string CAAFormalActionCount = 10;
    // Indicates the number of informal enforcement actions/notices of violations (NOVs) taken against the facility within the last five years under the Clean Air Act.
    string CAAInformalCount = 11;
    int32 CAALastPenaltyAmt = 12;
    string CAALastPenaltyDate = 13;
    string CAANaics = 14;
    // The total dollar amount of assessed (or final) penalties taken against the facility within the last five years under the Clean Air Act.
    string CAAPenalties = 15;
    // ICIS AIR Permit Types associated with the FRS Facility:
    // - Major
    // - Federally Reportable Minor
    // - Other Minor
    // - Synthetic Minor
    // - NULL
    string CAAPermitTypes = 16;
    int32 CAAQtrsInNC = 17;
    string CAASics = 18;
    string CWA13qtrsComplStatus = 19;
    string CWA13qtrsEfflntExceedances = 20;
    string CWA3YrQncrCodes = 21;
    string CWAComplianceTracking = 22;
    // Current compliance status
    string CWACurrComplianceStatus = 23;
    string CWACurrSNCFlag = 24;
    string CWADateLastFormalAction = 25;
    int32 CWADaysLastInspection = 26;
    // Indicates the number of enforcement actions taken against the facility within the last five years under the Clean Water Act.
    string CWAFormalActionCount = 27;
    // Indicates the number of informal enforcement actions/notices of violations (NOVs) taken against the facility within the last five years under the Clean Water Act.
    int32 CWAInformalCount = 28;
    // The number of inspections/compliance evaluations under the Clean Water Act, occurring at the facility within the last five years.
    int32 CWAInspectionCount = 29;
    string CWALastPenaltyAmt = 30;
    string CWALastPenaltyDate = 31;
    string CWANaics = 32;
    // The total dollar amount of assessed (or final) penalties taken against the facility within the last five years under the Clean Water Act.
    string CWAPenalties = 33;
    // Indicates the facility's permit type or designation.
    // - Major
    // - Minor
    string CWAPermitTypes = 34;
    string CWAQtrsInNC = 35;
    string CWASics = 36;
    // Facility identifiers for the Clean Air Markets Division database.
    string CamdIDs = 37;
    // A geographic unit used by the United States Census Bureau, generally defined to contain between 600 and 3,000 people.
    string CensusBlockGroup = 38;
    // Indicates if the facility has a current significant violation. 1 = Yes
    int32 CurrSvFlag = 39;
    // Indicates if the facility has a current violation. 1 = Yes
    int32 CurrVioFlag = 40;
    string DfrUrl = 41;
    // Indicates if the facility has a formal enforcement action within the last 5 years. 1 = Yes
    int32 Ea5yrFlag = 42;
    string EisFlag = 43;
    string EisIDs = 44;
    string EjscreenFlag = 45;
    string EjscreenFlagUs = 46;
    string Fac3yrComplianceStatus = 47;
    int32 FacAccuracyMeters = 48;
    string FacActiveFlag = 49;
    string FacChesapeakeBayFlg = 50;
    // The city where the facility is located.
    string FacCity = 51;
    string FacCollectionMethod = 52;
    // The county where the facility is located.
    string FacCounty = 53;
    // Current compliance status: SNC/Serious Viol, In Violation, No Violation, Unknown, NULL. (Order corresponds to priority if multiple programs/permits exist)
    string FacCurrComplianceStatus = 54;
    // The current Significant Non-compliance (SNC), Serious Violation or High Priority Violator (HPV) status for the facility during the most current quarter reflects the time the records were extracted from the program data systems
    string FacCurrSNCFlg = 55;
    string FacDateLastFormalActEPA = 56;
    string FacDateLastFormalActSt = 57;
    // Indicates the effective date of the most recent listed enforcement action taken against the facility within the last five years.
    string FacDateLastFormalAction = 58;
    string FacDateLastInformalActEPA = 59;
    string FacDateLastInformalActSt = 60;
    // The date of the most recent informal action or NOV taken recorded in AFS, ICIS-NPDES, RCRA Info or SDWIS.
    string FacDateLastInformalAction = 61;
    // The date on which most recent inspection of the facility took place. For the Clean Air Act, the date on which a Full Inspection (FCE) was completed. This date may or may not correspond to an actual site visit. A series of partial on- or off-site inspections may have been conducted during the fiscal year as part of this FCE.
    string FacDateLastInspection = 62;
    string FacDateLastInspectionEPA = 63;
    string FacDateLastInspectionState = 64;
    // Indicates the date on which the most recent assessed (or final) penalty was taken against the facility within the last five years
    string FacDateLastPenalty = 65;
    // The number of days from the last ECHO refresh to the date on which the most recent inspection of the facility took place based on data recorded into AFS, ICIS-NPDES, or RCRA Info.
    int32 FacDaysLastInspection = 66;
    string FacDerivedCb2010 = 67;
    string FacDerivedCd113 = 68;
    // The 8-digit Hydrologic Unit Code (HUC) of the watershed in which the facility resides. A HUC number is assigned to every watershed in the nation and uniquely identifies the watershed.
    string FacDerivedHuc = 69;
    string FacDerivedRadWBDHu8 = 70;
    string FacDerivedRadWBDHu8Name = 71;
    string FacDerivedStctyFIPS = 72;
    string FacDerivedTRIbes = 73;
    string FacDerivedWBD = 74;
    string FacDerivedWBDHu8 = 75;
    string FacDerivedWBDHu8Name = 76;
    string FacDerivedZip = 77;
    // The EPA region where the facility is located. EPA has 10 regional offices that execute programs within several states and territories
    string FacEPARegion = 78;
    // The 2-digit Federal Information Processing Standards (FIPS) code to identify the county that a facility is located in.
    string FacFIPSCode = 79;
    string FacFederalAgency = 80;
    string FacFederalAgencyName = 81;
    string FacFederalFlg = 82;
    // Indicates the total number of enforcement actions taken against the facility within the last five years. NA indicates that this measure is not applicable for facilities with no associated CAA, CWA, or RCRA permits
    int32 FacFormalActionCount = 83;
    string FacImpWaterFlg = 84;
    // Flag showing Y/N whether the facility is located in Indian Country.
    string FacIndianCntryFlg = 85;
    string FacIndianSpatialFlg = 86;
    // Indicates the total number of informal enforcement actions/notices of violations (NOVs) taken against the facility within the last five years
    int32 FacInformalCount = 87;
    // The number of inspections/compliance evaluations that have occurred at the facility, under the AIR, CWA, and RCRA, within the last five years. The last 5 years will include data from the 20 most recently completed quarters, plus data from the current quarter up until the refresh date. This count only includes inspection types that are counted as inspections in official counts.
    int32 FacInspectionCount = 88;
    // Indicates the dollar amount of the most recent assessed (or final) penalty taken against the facility within the last five years
    int32 FacLastPenaltyAmt = 89;
    string FacMajorFlag = 90;
    // Graphical indicator denoting whether geographical data required to map a facility are available.
    string FacMapFlg = 91;
    // The default map icon image file calculated for the facility by the ECHO program.
    string FacMapIcon = 92;
    string FacMyrtkUniverse = 93;
    string FacNaaFlag = 94;
    string FacNaicsCodes = 95;
    // Name of facility
    string FacName = 96;
    // The total number of penalties assessed (or final) taken against the facility within the last five years
    int32 FacPenaltyCount = 97;
    // Percent Minority is the percentage of the population of the given area that is considered minority. Statistics are shown for the area within a 3-mile radius of each facility.
    int32 FacPercentMinority = 98;
    // The number of persons per square mile in the area being profiled. This field is the ratio of total persons (displayed in the Total Persons field) to total land area (displayed in the Land Area field).
    int32 FacPopDen = 99;
    // A count of the number of programs (AIR, CWA, SDWA, RCRA) related to the facility that have a current serious violation
    int32 FacProgramsInSNC = 100;
    // Count of the number of quarters, out of the last twelve quarters, in which the permit or site is considered either in Non-compliance (NC), Significant Non-compliance (SNC) or High Priority violation (HPV) status
    int32 FacQtrsInNC = 101;
    string FacReferencePoint = 102;
    string FacSicCodes = 103;
    // Facility state
    string FacState = 104;
    // Street address where facility is located, as maintained by each data system. Certain data systems also maintain mailing address information, which is not used in this report. The street address may differ across EPA databases due to differences in reported information (e.g., use of mailing address), change in ownership, use of parent or subsidiary address, etc.
    string FacStreet = 105;
    // The total dollar amount of either assessed (or final) penalties taken against the facility within the last five years
    int32 FacTotalPenalties = 106;
    // A Y/N flag indicating that the facility is within 100KM of the US-Mexico Border.
    string FacUsMexBorderFlg = 107;
    // Facility ZIP code
    string FacZip = 108;
    // All Case Numbers of Federal Enforcement Cases relating to the Facility from the ICIS System
    string FecCaseIDs = 109;
    string FecLastCaseDate = 110;
    int32 FecNumberOfCases = 111;
    int32 FecTotalPenalties = 112;
    // The sum of total release amounts of all linked Greenhouse Gas IDs reported as "metric tons of CO2 equivalents"
    string GHGCO2Releases = 113;
    string GHGFlag = 114;
    string GHGIDs = 115;
    // ???
    string HasPollRpt = 116;
    // Indicates if the facility has an informal enforcement action within the last 5 years. 1 = Yes.
    int32 Infea5yrFlag = 117;
    // Indicates if the facility has an inspection within the last 5 years. 1 = Yes
    int32 Insp5yrFlag = 118;
    // Flag showing Y/N whether location is within the contiguous (lower 48) United States.
    string Lower48 = 119;
    // The maximum percentile from all individual EJSCREEN indicators.
    int32 MaxPctileUs = 120;
    // [Col. 121]
    int32 MaxScore = 121;
    string NC = 122;
    string NPDESFlag = 123;
    // Clean Water Act ID from the ICIS-NPDES (Integrated Compliance Information System - National Pollutant Discharge Elimination System)
    string NPDESIDs = 124;
    int32 Over80CountUs = 125;
    // The national percentile of the census block group for the EJSCREEN NATA air toxics cancer risk indicator.
    int32 PctileCancerUs = 126;
    // The national percentile of the census block group for the EJSCREEN diesel particulate matter indicator.
    int32 PctileDpmUs = 127;
    // The national percentile of the census block group for the EJSCREEN ozone indicator.
    int32 PctileO3Us = 128;
    // The national percentile of the census block group for the EJSCREEN Lead paint indicator.
    int32 PctilePctpre1960Us = 129;
    // The national percentile of the census block group for the EJSCREEN particulate matter indicator.
    int32 PctilePmUs = 130;
    // The national percentile of the census block group for the EJSCREEN proximity to major direct water dischargers indicator.
    int32 PctileProximityNPDESUs = 131;
    // The national percentile of the census block group for the EJSCREEN proximity to National Priorities List (NPL) sites indicator.
    int32 PctileProximityNplUs = 132;
    // The national percentile of the census block group for the EJSCREEN proximity to Risk Management Plan (RMP) sites indicator.
    int32 PctileProximityRmpUs = 133;
    // The national percentile of the census block group for the EJSCREEN proximity to Treatment Storage and Disposal Facilities (TSDFs) indicator.
    int32 PctileProximityTsdfUs = 134;
    // The national percentile of the census block group for the EJSCREEN NATA respiratory hazard index indicator.
    int32 PctileRespUs = 135;
    // The national percentile of the census block group for the EJSCREEN Traffic proximity and volume indicator.
    int32 PctileTrafficScoreUs = 136;
    string RCRA3yrComplQtrsStatus = 137;
    // Current compliance status
    string RCRACurrComplianceStatus = 138;
    string RCRACurrSNCFlag = 139;
    string RCRADateLastFormalAction = 140;
    int32 RCRADaysLastEvaluation = 141;
    string RCRAFlag = 142;
    // Indicates the number of enforcement actions taken against the facility within the last five years under the Resource Conservation and Recovery Act.
    string RCRAFormalActionCount = 143;
    // A unique 12-character ID assigned for each record/permit/site/facility within the RCRAInfo database.
    string RCRAIDs = 144;
    // Indicates the number of informal enforcement actions/notices of violations (NOVs) taken against the facility within the last five years under the Resource Conservation and Recovery Act.
    string RCRAInformalCount = 145;
    // The number of inspections/compliance evaluations under the Resource Conservation and Recovery Act, occurring at the facility within the last five years
    int32 RCRAInspectionCount = 146;
    string RCRALastPenaltyAmt = 147;
    string RCRALastPenaltyDate = 148;
    string RCRANaics = 149;
    string RCRAPenalties = 150;
    // RCRA Facility Types include:
    // - TSDF = Treatment, Storage and Disposal facility
    // - LQG = Large Quantity Generator
    // - SQG = Small Quantity Generator
    // - CESQG = Conditionally-Exempt Small Quantity Generator
    // - Operating TSDF
    // - Transporters
    string RCRAPermitTypes = 151;
    int32 RCRAQtrsInNC = 152;
    // An internal 12-digit Facility Registry Service (FRS) tracking number used to tie all facility data together in EPA regulatory program databases.
    string RegistryID = 153;
    string RmpIDs = 154;
    string SDWA3yrComplQtrsStatus = 155;
    // Current compliance status
    string SDWACurrComplianceStatus = 156;
    string SDWACurrSNCFlag = 157;
    // Indicates the number of enforcement actions taken against the facility within the last five years under the Safe Drinking Water Act
    string SDWAFormalActionCount = 158;
    // A unique 9-character ID assigned for each public water system within the Safe Drinking Water Information System (SDWIS).
    string SDWAIDs = 159;
    // Indicates the number of informal enforcement actions/notices of violations (NOVs) taken against the facility within the last five years under the Safe Drinking Water Act
    string SDWAInformalCount = 160;
    // SDWIS System Types
    string SDWASystemTypes = 161;
    int32 Score = 162;
    string SdwisFlag = 163;
    // Unique Identifier assigned by EPA.
    string SourceID = 164;
    string TRIFlag = 165;
    // A unique 15-character ID assigned for each facility within the Toxics Release Inventory (TRI) program. The format is ZZZZZNNNNNSSSSS, where ZZZZZ = ZIP code, NNNNN = the first 5 consonants of the name, and SSSSS = the first 5 non-blank non-special characters in the street address.
    string TRIIDs = 166;
    int32 TRIOffSiteTransfers = 167;
    int32 TRIOnSiteReleases = 168;
    // Total chemical releases, in pounds, as reported to the Toxics Release Inventory (TRI) by the facility for the most recent reporting year
    int32 TRIReleasesTransfers = 169;
    string TRIReporter = 170;
    string TRIReporterInPast = 171;
    int32 TRIbalFlag = 172;
    // Flag indicating whether or not a facility has a TSCA ID
    string TscaFlag = 173;
    // Toxic Substances Control Act ID assigned to a facility
    string TscaIDs = 174;
    // Indicates if the facility had a violation within the last 3 years. 1 = Yes
    int32 ViolFlag = 175;
    // Contains flags that identify what web accessible documents are available for the facility.
    string WebDocs = 176;
}

enum Maplist {
    Y = 0;
    N = 1;
}

message Met_Results {
    // Field to record messages (typically performance-related) about packet processing
    string Message = 1;
    repeated met_ResultsColumns ResultColumns = 2;
}

message Met_ResultsColumns {
    string ColumnID = 1;
    string ColumnName = 2;
    // Data length for EPA program database column.
    string DataLength = 3;
    // Data type for EPA program database column.
    string DataType = 4;
    // A description of the category of Supplemental Environment Project (SEP) for a settlement.
    string Description = 5;
    string ObjectName = 6;
}

enum P_act {
    Y = 0;
    N = 1;
    A = 2;
}

enum P_fea {
    W = 0;
    N = 1;
}

enum P_feaa {
    A = 0;
    E = 1;
    S = 2;
}

enum P_ff {
    Y = 0;
}

enum P_fntype {
    ALL = 0;
    CONTAINS = 1;
    EXACT = 2;
    BEGINS = 3;
}

enum P_ico {
    Y = 0;
    N = 1;
}

enum P_iea {
    W = 0;
    N = 1;
}

enum P_ieaa {
    E = 0;
    S = 1;
}

enum P_impw {
    Y = 0;
    N = 1;
}

enum P_limit_addr {
    Y = 0;
    N = 1;
}

enum P_maj {
    Y = 0;
    N = 1;
}

enum P_med {
    A = 0;
    C = 1;
    E = 2;
    G = 3;
    M = 4;
    R = 5;
    S = 6;
    T = 7;
    TSCA = 8;
    W = 9;
    ALL = 10;
}

enum P_oct {
    Z = 0;
    GT0 = 1;
    GT1000 = 2;
    GT5000 = 3;
    GT10000 = 4;
    GT20000 = 5;
    GT50000 = 6;
}

enum P_pd {
    NONE = 0;
    GT100 = 1;
    GT500 = 2;
    GT1000 = 3;
    GT5000 = 4;
    GT10000 = 5;
    GT20000 = 6;
}

enum P_pm {
    NONE = 0;
    GT5 = 1;
    GT10 = 2;
    GT25 = 3;
    GT50 = 4;
    GT75 = 5;
}

enum P_qiv {
    P_QIV_0 = 0;
    GT1 = 1;
    GT2 = 2;
    GT4 = 3;
    GT8 = 4;
    P_QIV_12 = 5;
}

enum P_reg {
    P_REG_01 = 0;
    P_REG_02 = 1;
    P_REG_03 = 2;
    P_REG_04 = 3;
    P_REG_05 = 4;
    P_REG_06 = 5;
    P_REG_07 = 6;
    P_REG_08 = 7;
    P_REG_09 = 8;
    P_REG_10 = 9;
}

enum P_trep {
    NONE = 0;
    CURR = 1;
    NOTCURR = 2;
}

enum P_usmex {
    Y = 0;
    N = 1;
}

enum P_ysl {
    W = 0;
    N = 1;
    NV = 2;
}

enum P_ysla {
    E = 0;
    S = 1;
    A = 2;
}

message Qp0_QueryParameters {
    // Query parameter
    string QP = 1;
    // Query value
    string QV = 2;
}

enum Summarylist {
    Y = 0;
    N = 1;
}

enum Tablelist {
    Y = 0;
    N = 1;
}

service U.S.EPAEnforcementAndComplianceHistoryOnline(ECHO)-AllDataService {
    // Combined ECHO Download Data Service
    // 
    // Based on the QID obtained from a get_facilities or get_facility_info query, return a comma separated value (CSV) file of the facilities found.
    rpc GetEcho_rest_servicesGet_download(GetEcho_rest_servicesGet_downloadRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/echo/echo_rest_services.get_download"
      };
    }
    // Combined ECHO Download Data Service
    // 
    // Based on the QID obtained from a get_facilities or get_facility_info query, return a comma separated value (CSV) file of the facilities found.
    rpc PostEcho_rest_servicesGet_download(PostEcho_rest_servicesGet_downloadRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/echo/echo_rest_services.get_download"
      };
    }
    // Combined ECHO Facility Search Service
    // 
    // Validates query search parameters and returns query identifier.  Use the responseset parameter to set the page size
    rpc GetEcho_rest_servicesGet_facilities(GetEcho_rest_servicesGet_facilitiesRequest) returns (GetEcho_rest_servicesGet_facilitiesResponse) {
      option (google.api.http) = {
        get: "/echo/echo_rest_services.get_facilities"
      };
    }
    // Combined ECHO Facility Search Service
    // 
    // Validates query search parameters and returns query identifier.  Use the responseset parameter to set the page size
    rpc PostEcho_rest_servicesGet_facilities(PostEcho_rest_servicesGet_facilitiesRequest) returns (PostEcho_rest_servicesGet_facilitiesResponse) {
      option (google.api.http) = {
        post: "/echo/echo_rest_services.get_facilities"
      };
    }
    // Combined ECHO Facility Enhanced Search Service
    // 
    // Returns either an array of Facilities or an array of Clusters that meet the specified search criteria.
    rpc GetEcho_rest_servicesGet_facility_info(GetEcho_rest_servicesGet_facility_infoRequest) returns (GetEcho_rest_servicesGet_facility_infoResponse) {
      option (google.api.http) = {
        get: "/echo/echo_rest_services.get_facility_info"
      };
    }
    // Combined ECHO Facility Enhanced Search Service
    // 
    // Returns either an array of Facilities or an array of Clusters that meet the specified search criteria.
    rpc PostEcho_rest_servicesGet_facility_info(PostEcho_rest_servicesGet_facility_infoRequest) returns (PostEcho_rest_servicesGet_facility_infoResponse) {
      option (google.api.http) = {
        post: "/echo/echo_rest_services.get_facility_info"
      };
    }
    // Combined ECHO GeoJSON Service
    // 
    // Based on the QID obtained from a get_facilities or get_facility_info query, return GeoJSON of the facilities found.
    rpc GetEcho_rest_servicesGet_geojson(GetEcho_rest_servicesGet_geojsonRequest) returns (GetEcho_rest_servicesGet_geojsonResponse) {
      option (google.api.http) = {
        get: "/echo/echo_rest_services.get_geojson"
      };
    }
    // Combined ECHO GeoJSON Service
    // 
    // Based on the QID obtained from a get_facilities or get_facility_info query, return GeoJSON of the facilities found.
    rpc PostEcho_rest_servicesGet_geojson(PostEcho_rest_servicesGet_geojsonRequest) returns (PostEcho_rest_servicesGet_geojsonResponse) {
      option (google.api.http) = {
        post: "/echo/echo_rest_services.get_geojson"
      };
    }
    // Combined ECHO Info Clusters Service
    // 
    // Based on the QID obtained from a clustered get_facility_info query, download cluster facility information as either a CSV or GEOJSON file.
    rpc GetEcho_rest_servicesGet_info_clusters(GetEcho_rest_servicesGet_info_clustersRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/echo/echo_rest_services.get_info_clusters"
      };
    }
    // Combined ECHO Info Clusters Service
    // 
    // Based on the QID obtained from a clustered get_facility_info query, download cluster facility information as either a CSV or GEOJSON file.
    rpc PostEcho_rest_servicesGet_info_clusters(PostEcho_rest_servicesGet_info_clustersRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/echo/echo_rest_services.get_info_clusters"
      };
    }
    // Combined ECHO Map Service
    // 
    // The purpose of the GET_MAP service is to display facility coordinates and facility clusters related to a get_facilities facility query. Currently, the maximum number of coordinates returned is 500. GET_MAP performs automatic clustering at the state, county, and zip code levels to maximize the number of coordinates returned.
    rpc GetEcho_rest_servicesGet_map(GetEcho_rest_servicesGet_mapRequest) returns (GetEcho_rest_servicesGet_mapResponse) {
      option (google.api.http) = {
        get: "/echo/echo_rest_services.get_map"
      };
    }
    // Combined ECHO Map Service
    // 
    // The purpose of the GET_MAP service is to display facility coordinates and facility clusters related to a get_facilities facility query. Currently, the maximum number of coordinates returned is 500. GET_MAP performs automatic clustering at the state, county, and zip code levels to maximize the number of coordinates returned.
    rpc PostEcho_rest_servicesGet_map(PostEcho_rest_servicesGet_mapRequest) returns (PostEcho_rest_servicesGet_mapResponse) {
      option (google.api.http) = {
        post: "/echo/echo_rest_services.get_map"
      };
    }
    // Combined ECHO Paginated Results Service
    // 
    // GET_QID is passed with a query ID corresponding to a previously run get_facilities query. It then returns a Facility object containing all matching facilities. The main purpose of GET_QID is for large querysets that contain multiple pages (responsesets) of output. GET_QID allows for pagination and for the selection and sorting of columns.
    rpc GetEcho_rest_servicesGet_qid(GetEcho_rest_servicesGet_qidRequest) returns (GetEcho_rest_servicesGet_qidResponse) {
      option (google.api.http) = {
        get: "/echo/echo_rest_services.get_qid"
      };
    }
    // Combined ECHO Paginated Results Service
    // 
    // GET_QID is passed with a query ID corresponding to a previously run get_facilities query. It then returns a Facility object containing all matching facilities. The main purpose of GET_QID is for large querysets that contain multiple pages (responsesets) of output. GET_QID allows for pagination and for the selection and sorting of columns.
    rpc PostEcho_rest_servicesGet_qid(PostEcho_rest_servicesGet_qidRequest) returns (PostEcho_rest_servicesGet_qidResponse) {
      option (google.api.http) = {
        post: "/echo/echo_rest_services.get_qid"
      };
    }
    // Combined ECHO Metadata Service
    // 
    // Returns the JSON Object Name and ColumnId for usage with the qcolumns parameter for get_qid, get_facility_info and other service endpoints.
    rpc GetEcho_rest_servicesMetadata(GetEcho_rest_servicesMetadataRequest) returns (GetEcho_rest_servicesMetadataResponse) {
      option (google.api.http) = {
        get: "/echo/echo_rest_services.metadata"
      };
    }
    // Combined ECHO Metadata Service
    // 
    // Returns the JSON Object Name and ColumnId for usage with the qcolumns parameter for get_qid, get_facility_info and other service endpoints.
    rpc PostEcho_rest_servicesMetadata(PostEcho_rest_servicesMetadataRequest) returns (PostEcho_rest_servicesMetadataResponse) {
      option (google.api.http) = {
        post: "/echo/echo_rest_services.metadata"
      };
    }
}
