syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package u.s.epaenforcementandcompliancehistoryonline(echo)-effluentchartingandreporting;

message GetEff_rest_servicesDownload_effluent_chartRequest {
    string end_date = 1;
    string outfall = 2;
    string p_id = 3;
    string parameter_code = 4;
    string start_date = 5;
}

message PostEff_rest_servicesDownload_effluent_chartRequest {
    string end_date = 1;
    string outfall = 2;
    string p_id = 3;
    string parameter_code = 4;
    string start_date = 5;
}

message GetEff_rest_servicesGet_effluent_chartRequest {
    string callback = 1;
    string end_date = 2;
    string outfall = 3;
    output output = 4;
    string p_id = 5;
    string parameter_code = 6;
    string start_date = 7;
}

message GetEff_rest_servicesGet_effluent_chartResponse {
    eff1_Results Results = 1;
}

message PostEff_rest_servicesGet_effluent_chartRequest {
    string callback = 1;
    string end_date = 2;
    string outfall = 3;
    output output = 4;
    string p_id = 5;
    string parameter_code = 6;
    string start_date = 7;
}

message PostEff_rest_servicesGet_effluent_chartResponse {
    eff1_Results Results = 1;
}

message GetEff_rest_servicesGet_summary_chartRequest {
    string callback = 1;
    string end_date = 2;
    output output = 3;
    string p_id = 4;
    string start_date = 5;
}

message GetEff_rest_servicesGet_summary_chartResponse {
    eff2_Results Results = 1;
}

message PostEff_rest_servicesGet_summary_chartRequest {
    string callback = 1;
    string end_date = 2;
    output output = 3;
    string p_id = 4;
    string start_date = 5;
}

message PostEff_rest_servicesGet_summary_chartResponse {
    eff2_Results Results = 1;
}

message GetRest_lookupsCwa_parametersRequest {
    string callback = 1;
    output output = 2;
    string search_code = 3;
    string search_term = 4;
}

message GetRest_lookupsCwa_parametersResponse {
    rlk16_Results Results = 1;
}

message PostRest_lookupsCwa_parametersRequest {
    string callback = 1;
    output output = 2;
    string search_code = 3;
    string search_term = 4;
}

message PostRest_lookupsCwa_parametersResponse {
    rlk16_Results Results = 1;
}

message Eff1_DischargeMonitoringReports {
    // The sequence ID identifying the DMR Event.
    string DMREventId = 1;
    // The sequence ID identifying the DMR Form Value.
    string DMRFormValueId = 2;
    // The code representing the unit of measure applicable to quantity or concentration limits and measurements as entered into ICIS-NPDES
    string DMRUnitCode = 3;
    // The short description of the unit of measure applicable to limit or DMR values
    string DMRUnitDesc = 4;
    // The unique identifier for the DMR value generated in ICIS-NPDES
    string DMRValueId = 5;
    // The DMR value number reported on the DMR Form
    string DMRValueNmbr = 6;
    // The unique code identifying the DMR value operator (i.e., <, <=, >, >=, T, E, =). E indicates an estimated value. T indicates too numerous to count
    string DMRValueQualifierCode = 7;
    // The DMR value expressed in standard units, as calculated in ICIS-NPDES
    string DMRValueStdUnits = 8;
    // The number of days the DMR value is late, as generated in ICIS-NPDES
    string DaysLate = 9;
    // The percent by which the DMR value (or adjusted value) exceeded its limit (or stay) value, as generated in ICIS-NPDES
    string ExceedencePct = 10;
    // The date on which a limit becomes in effect for a particular parameter in a limit set
    string LimitBeginDate = 11;
    // The date on which a limit stops being in effect for a particular parameter in a limit set
    string LimitEndDate = 12;
    // The unique identifier for a limit parameter record
    string LimitId = 13;
    // The unique identifier for a limit set, generated in ICIS-NPDES
    string LimitSetId = 14;
    // The unique identifier of the Limit Set Schedule, generated in ICIS-NPDES
    string LimitSetScheduleId = 15;
    string LimitTypeCode = 16;
    // The code representing the unit of measure applicable to quantity or concentration limits and measurements as entered by the user
    string LimitUnitCode = 17;
    // The short description of the unit of measure applicable to limit or DMR values
    string LimitUnitDesc = 18;
    // The unique identifier in ICIS-NPDES for the Limit Value
    string LimitValueId = 19;
    // The numerical limit for a given parameter
    string LimitValueNmbr = 20;
    // The unique code identifying the limit value operator (i.e., <, <=, >, >=, T, E, =). E indicates an estimated value. T indicates too numerous to count
    string LimitValueQualifierCode = 21;
    // The limit value expressed in standard units, as calculated in ICIS-NPDES
    string LimitValueStdUnits = 22;
    // The code indicating the type of value the limit is given as (i.e., Q1, Q2, C1, C2, C3)
    string LimitValueTypeCode = 23;
    // The description indicating the type of value the limit is given as (e.g., Concentration, Quantity)
    string LimitValueTypeDesc = 24;
    // The date that the monitoring period for the values covered by the DMR Form ends
    string MonitoringPeriodEndDate = 25;
    string NODEDesc = 26;
    // The unique code indicating why no DMR Value was submitted by the permittee for a Monitoring Period End Date
    string NODICode = 27;
    repeated eff1_NPDESViolations NPDESViolations = 28;
    // The number of months of discharges represented on each DMR for the limit set (e.g., monthly = 1, bi-monthly = 2, quarterly = 3, triannual = 4, semi-annual = 6, annual = 12). This data element will be blank for Unscheduled Limit Sets
    string NmbrOfSubmission = 29;
    // The unique identifier in ICIS-NPDES of a permitted feature or outfall
    string PermFeatureId = 30;
    // The code representing the unit of measure applicable to the limit and DMR values entered by the user (e.g., 30-day average, daily maximum)
    string StatisticalBaseCode = 31;
    string StatisticalBaseDesc = 32;
    // The code indicating whether the statistical base code is a minimum, average, or maximum for purposes of calculating compliance against the limit value
    string StatisticalBaseTypeCode = 33;
    // A short description for indicating whether the statistical base code is a minimum, average, or maximum for purposes of calculating compliance against the limit value
    string StatisticalBaseTypeDesc = 34;
    // The numeric limit value imposed during the period of the stay for the limit; if entered, during the stay period, ICIS-NPDES will use this limit value for calculating compliance rather than the actual limit value
    string StayValueNmbr = 35;
    // The code representing the standard unit of measure applicable to quantity or concentration limits and measurements as entered by the user
    string StdUnitCode = 36;
    // The short description of the standard unit of measure applicable to limit or DMR values
    string StdUnitDesc = 37;
    // The date the DMR value was received by the regulatory authority
    string ValueReceivedDate = 38;
    // The indication of the limit value type (e.g., Quantity 1, Concentration 2)
    string ValueTypeCode = 39;
    // The type of value the measured number is given as (e.g., Concentration, Quantity)
    string ValueTypeDesc = 40;
    // The version of the permit when a modification or reissuance is applied to the permit. Version = 0 indicates the original permit issuance
    string VersionNmbr = 41;
}

message Eff1_NPDESViolations {
    // The unique identifier in ICIS-NPDES for the NPDES Violation
    string NPDESViolationId = 1;
    // The code indicating the reportable noncompliance (RNC) detected for a violation:
    // - A = Enforcement Order
    // - B = Manual 2A4 - Pass-Through
    // - C = Chronic Violation
    // - D = Manual Other
    // - E = Manual 2F - Permit Narrative
    // - F = Manual 2G - Violation of Concern
    // - G = Manual 2A1 - Effluent Violation
    // - H = Chronic Violation, Non-Monthly Average
    // - I = Manual 2A2 - Unauthorized Bypass
    // - J = Manual 2A3 - Unpermitted Discharge
    // - K = Non-receipt Violation, Non-Monthly Average
    // - N = Non-Receipt of DMR/Schedule Report
    // - P = Enforcement Order, Non-Monthly Average
    // - Q = Manual 2B - Pretreatment
    // - R = TRC Limitations Exceeded, Non-Monthly Average
    // - S = Schedule Violation
    // - T = TRC Limitations Exceeded
    // - U = Other Violation with TRC Non-Monthly Average
    // - V = Other Violation with TRC
    // - W = Manual 2E - Deficient Report
    // - X = Manual Other Violation with TRC
    // - Y = Manual TRC
    // - Z = Manual Chronic
    string RNCDetectionCode = 2;
    // The date that the exceedance was detected
    string RNCDetectionDate = 3;
    // A description of the reportable noncompliance (RNC) detected
    string RNCDetectionDesc = 4;
    // The code indicating the resolution of noncompliance (RNC) for a violation
    string RNCResolutionCode = 5;
    // The date RNC was marked to its current resolution status. It can be entered manually or automatically
    string RNCResolutionDate = 6;
    // - 1 = Unresolved RNC
    // - 2 = Back into Compliance
    // - 3 = Due to Formal Enforcement Action Final Order with Compliance Schedule
    // - 4 = In Compliance with Formal Enforcement Action Final Order Requirement
    // - 5 = Resolved RP by NPDES Closure of Enforcement Action Final Order with Compliance Schedule
    // - 6 = Manual Resolution by Enforcement Action
    // - 7 = Manual RP - In Compliance with Formal Enforcement Action Order Requirement
    // - 8 = Manual Due to Formal Enforcement Action Formal Order
    // - 9 = Manual by Back into Compliance
    // - A = Manual Unresolved RNC
    // - B = Manual by EPA/State/Tribal Action
    string RNCResolutionDesc = 7;
    // The code identifying which type of Violation has occurred (e.g., D80 = Required Monitoring DMR Value Non-Receipt, E90 = Effluent Violation, C20 = Schedule Event Achieved Late)
    string ViolationCode = 8;
    // A description of which type of violation has occurred
    string ViolationDesc = 9;
    // - 0 = no violation.
    // - 1 = monitoring or reporting violation
    // - 2 = effluent violation, i.e., discharge in excess of permitted limit
    // - 3 = reportable noncompliance
    // - 5 = significant noncompliance
    string ViolationSeverity = 10;
}

message Eff1_Parameters {
    // An array of Discharge Monitoring Report (DMR) data.
    repeated eff1_DischargeMonitoringReports DischargeMonitoringReports = 1;
    // The code that the monitoring location at which the monitoring requirement (and effluent limit if limited) applies. One parameter may have several monitoring location codes pertaining to the same permitted feature
    string MonitoringLocationCode = 2;
    // The name of the monitoring location at which the monitoring requirement (and effluent limit if limited) applies
    string MonitoringLocationDesc = 3;
    // The unique 5 digit numeric code identifying the parameter. If the code is less than 5 digits in the .CSV, append zeros to the beginning of the number (e.g., 100 is equivalent to 00100)
    string ParameterCode = 4;
    // The pollutant name and form (e.g., dissolved, suspended) associated with the parameter code
    string ParameterDesc = 5;
    // The unique identifier of the type of stay applied to a limit (e.g., X, Y, Z), which indicates whether the limits do not appear on the DMR at all, are treated as monitor only, or have a stay value in effect during the period of the stay
    string StayTypeCode = 6;
    // The name of the type of stay applied to a limit, which indicates whether the limits do not appear on the DMR at all (X), are treated as monitor only (Y), or have a stay value in effect during the period of the stay (Z)
    string StayTypeDesc = 7;
}

message Eff1_PermFeatures {
    // Array of Effuent Limit Parameters
    repeated eff1_Parameters Parameters = 1;
    // A three-character code in ICIS-NPDES that identifies the point of discharge (e.g., outfall) for a facility. A NPDES permit may have multiple points of discharge. If the code is less than three characters in the .CSV, append zeros to the beginning of the number (e.g., 1 is equivalent to 001)
    string PermFeatureNmbr = 2;
    // The code indicating the type of permitted feature (e.g., EXO)
    string PermFeatureTypeCode = 3;
    // The description indicating the type of permitted feature (e.g., External Outfall, Internal Outfall, Sum)
    string PermFeatureTypeDesc = 4;
}

message Eff1_Results {
    // City in which the facility is located.
    string CWPCity = 1;
    // The type of noncompliance when a major source is in significant violation or a minor source has a Category 1 violation.
    string CWPCurrentSNCStatus = 2;
    // Facilities marked "M" for major refers to CWA major permittees.
    // - M = Major
    // - N = Minor
    string CWPMajorMinorStatusFlag = 3;
    // Facility or permit holder name, as maintained in ICIS-NPDES.
    string CWPName = 4;
    // The current stage/status in the NPDES permit life cycle.
    string CWPPermitStatusDesc = 5;
    // NPDES facility permit classification:
    // - NPDES Individual Permit
    // - General Permit Covered Facility
    // - NPDES Master General Permit
    // - Associated Permit Record
    // - Individual Industrial User Permit
    // - Individual State Issued Permit
    // - State Issued Master General Permit
    // - Unpermitted Facility
    string CWPPermitTypeDesc = 6;
    // Facility location - two-digit state abbreviation.
    string CWPState = 7;
    // Facility street address
    string CWPStreet = 8;
    // Facility ZIP code
    string CWPZip = 9;
    // The EPA data system in which permit and facility records are kept. EPA's Facility Registry System (FRS) links all program database records (such as permit IDs and IDs facilities use in reporting to EPA) together. The following list describes the individual data systems that are linked to from the detailed facility report: 
    // 
    // - AFS: Air Facility System for Clean Air Act stationary source programs.
    // - ICP: Integrated Compliance Information System for Clean Water Act programs monitoring National Pollutant Discharge Elimination System (NPDES) permits.
    // - RCR: Resource Conservation and Recovery Act Information System (RCRAInfo) for tracking the Resource Conservation and Recovery Act (RCRA) programs.
    // - NCDB: National Compliance Database System for monitoring national performance of the Toxic Substance Control Act (TSCA); the Emergency Planning and Right-to-Know Act, Section 313 (EPCRA); the Asbestos Hazard Emergency Response (AHERA); and the Federal Insecticide, Fungicide, and Rodenticide Act (FIFRA).
    // - TRI: Toxics Release Inventory for Emergency Planning and Community Right-to-Know Act, Section 313 submissions.
    // - NEI: National Emissions Inventory database contains information on stationary and mobile sources that emit criteria air pollutants and their precursors, as well as hazardous air pollutants (HAPs). The database includes estimates of annual emissions, by source, of air pollutants in each area of the country, on an annual basis.
    // - TSCA: Toxic Substances Control Act addressing the production, importation, use, and disposal of specific chemicals.
    string EPASystem = 10;
    // End date for the date range of interest. Formatted as mm/dd/yyyy
    string EndDate = 11;
    // Field to record messages (typically performance-related) about packet processing
    string Message = 12;
    // Array of Permitted Features
    repeated eff1_PermFeatures PermFeatures = 13;
    // 12-digit Facility Registry Service (FRS) identification number.  FRS uniquely identifies a facility by assigning an identification number (FRS ID), and uses this FRS ID to link together all EPA regulatory program database records
    string RegistryId = 14;
    // Unique Identifier assigned by EPA.
    string SourceId = 15;
    // Starting date for the date range of interest. Formatted as mm/dd/yyyy
    string StartDate = 16;
    // The name of the statute associated with each of the permits and identifiers linked to the facility: 
    // - CAA = the Clean Air Act
    // - CWA = the Clean Water Act
    // - RCRA = the Resource Conservation and Recovery Act
    // - EP313 = the Emergency Planning and Community Right-to-Know Act, Section 313 (also known as the Toxics Release Inventory Program)
    // - TSCA = the Toxic Substances Control Act
    // - SDWA = the Safe Drinking Water Act
    string Statute = 17;
}

message Eff2_LinkedPermits {
    // City in which the facility is located.
    string CWPCity = 1;
    // The type of noncompliance when a major source is in significant violation or a minor source has a Category 1 violation.
    string CWPCurrentSNCStatus = 2;
    // Facilities marked "M" for major refers to CWA major permittees.
    // - M = Major
    // - N = Minor
    string CWPMajorMinorStatusFlag = 3;
    // Facility or permit holder name, as maintained in ICIS-NPDES.
    string CWPName = 4;
    // The current stage/status in the NPDES permit life cycle.
    string CWPPermitStatusDesc = 5;
    // NPDES facility permit classification:
    // - NPDES Individual Permit
    // - General Permit Covered Facility
    // - NPDES Master General Permit
    // - Associated Permit Record
    // - Individual Industrial User Permit
    // - Individual State Issued Permit
    // - State Issued Master General Permit
    // - Unpermitted Facility
    string CWPPermitTypeDesc = 6;
    // Facility location - two-digit state abbreviation.
    string CWPState = 7;
    // Facility street address
    string CWPStreet = 8;
    // Facility ZIP code
    string CWPZip = 9;
    // Unique Identifier assigned by EPA.
    string SourceId = 10;
}

message Eff2_Parameters {
    // The most severe compliance status for an outfall and parameter during the current monitoring period
    string CurrentVioStatus = 1;
    // The most severe compliance status for an outfall and parameter during the entire selected date range
    string MaxVioStatus = 2;
    // The unique 5 digit numeric code identifying the parameter. If the code is less than 5 digits in the .CSV, append zeros to the beginning of the number (e.g., 100 is equivalent to 00100)
    string ParameterCode = 3;
    // The pollutant name and form (e.g., dissolved, suspended) associated with the parameter code
    string ParameterDesc = 4;
}

message Eff2_PermFeatures {
    repeated eff2_Parameters Parameters = 1;
    // A three-character code in ICIS-NPDES that identifies the point of discharge (e.g., outfall) for a facility. A NPDES permit may have multiple points of discharge. If the code is less than three characters in the .CSV, append zeros to the beginning of the number (e.g., 1 is equivalent to 001)
    string PermFeatureNmbr = 2;
    // The code indicating the type of permitted feature (e.g., EXO)
    string PermFeatureTypeCode = 3;
    // The description indicating the type of permitted feature (e.g., External Outfall, Internal Outfall, Sum)
    string PermFeatureTypeDesc = 4;
}

message Eff2_Results {
    // City in which the facility is located.
    string CWPCity = 1;
    // The type of noncompliance when a major source is in significant violation or a minor source has a Category 1 violation.
    string CWPCurrentSNCStatus = 2;
    // Facilities marked "M" for major refers to CWA major permittees.
    // - M = Major
    // - N = Minor
    string CWPMajorMinorStatusFlag = 3;
    // Facility or permit holder name, as maintained in ICIS-NPDES.
    string CWPName = 4;
    // The current stage/status in the NPDES permit life cycle.
    string CWPPermitStatusDesc = 5;
    // NPDES facility permit classification:
    // - NPDES Individual Permit
    // - General Permit Covered Facility
    // - NPDES Master General Permit
    // - Associated Permit Record
    // - Individual Industrial User Permit
    // - Individual State Issued Permit
    // - State Issued Master General Permit
    // - Unpermitted Facility
    string CWPPermitTypeDesc = 6;
    // Facility location - two-digit state abbreviation.
    string CWPState = 7;
    // Facility street address
    string CWPStreet = 8;
    // Facility ZIP code
    string CWPZip = 9;
    // The EPA data system in which permit and facility records are kept. EPA's Facility Registry System (FRS) links all program database records (such as permit IDs and IDs facilities use in reporting to EPA) together. The following list describes the individual data systems that are linked to from the detailed facility report: 
    // 
    // - AFS: Air Facility System for Clean Air Act stationary source programs.
    // - ICP: Integrated Compliance Information System for Clean Water Act programs monitoring National Pollutant Discharge Elimination System (NPDES) permits.
    // - RCR: Resource Conservation and Recovery Act Information System (RCRAInfo) for tracking the Resource Conservation and Recovery Act (RCRA) programs.
    // - NCDB: National Compliance Database System for monitoring national performance of the Toxic Substance Control Act (TSCA); the Emergency Planning and Right-to-Know Act, Section 313 (EPCRA); the Asbestos Hazard Emergency Response (AHERA); and the Federal Insecticide, Fungicide, and Rodenticide Act (FIFRA).
    // - TRI: Toxics Release Inventory for Emergency Planning and Community Right-to-Know Act, Section 313 submissions.
    // - NEI: National Emissions Inventory database contains information on stationary and mobile sources that emit criteria air pollutants and their precursors, as well as hazardous air pollutants (HAPs). The database includes estimates of annual emissions, by source, of air pollutants in each area of the country, on an annual basis.
    // - TSCA: Toxic Substances Control Act addressing the production, importation, use, and disposal of specific chemicals.
    string EPASystem = 10;
    // End date for the date range of interest. Formatted as mm/dd/yyyy
    string EndDate = 11;
    repeated eff2_LinkedPermits LinkedPermits = 12;
    // Field to record messages (typically performance-related) about packet processing
    string Message = 13;
    repeated eff2_PermFeatures PermFeatures = 14;
    // 12-digit Facility Registry Service (FRS) identification number.  FRS uniquely identifies a facility by assigning an identification number (FRS ID), and uses this FRS ID to link together all EPA regulatory program database records
    string RegistryId = 15;
    // Unique Identifier assigned by EPA.
    string SourceId = 16;
    // Starting date for the date range of interest. Formatted as mm/dd/yyyy
    string StartDate = 17;
    // The name of the statute associated with each of the permits and identifiers linked to the facility: 
    // - CAA = the Clean Air Act
    // - CWA = the Clean Water Act
    // - RCRA = the Resource Conservation and Recovery Act
    // - EP313 = the Emergency Planning and Community Right-to-Know Act, Section 313 (also known as the Toxics Release Inventory Program)
    // - TSCA = the Toxic Substances Control Act
    // - SDWA = the Safe Drinking Water Act
    string Statute = 18;
}

enum Output {
    JSONP = 0;
    JSON = 1;
    XML = 2;
}

message Rlk00_LuValues {
    string ValueCode = 1;
    string ValueDescription = 2;
}

message Rlk16_Results {
    repeated rlk00_LuValues LuValues = 1;
    // Field to record messages (typically performance-related) about packet processing
    string Message = 2;
}

service U.S.EPAEnforcementAndComplianceHistoryOnline(ECHO)-EffluentChartingAndReportingService {
    // Effluent Charts Download Service
    // 
    // Downloads tabular Discharge Monitoring Report (DMR) and compliance data for one NPDES permit as a CSV.
    rpc GetEff_rest_servicesDownload_effluent_chart(GetEff_rest_servicesDownload_effluent_chartRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/echo/eff_rest_services.download_effluent_chart"
      };
    }
    // Effluent Charts Download Service
    // 
    // Downloads tabular Discharge Monitoring Report (DMR) and compliance data for one NPDES permit as a CSV.
    rpc PostEff_rest_servicesDownload_effluent_chart(PostEff_rest_servicesDownload_effluent_chartRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/echo/eff_rest_services.download_effluent_chart"
      };
    }
    // Detailed Effluent Chart Service
    // 
    // Discharge Monitoring Report (DMR) data supporting each effluent chart for one NPDES permit. Includes Discharge Monitoring Reports and NPDES Violations. 
    // 
    rpc GetEff_rest_servicesGet_effluent_chart(GetEff_rest_servicesGet_effluent_chartRequest) returns (GetEff_rest_servicesGet_effluent_chartResponse) {
      option (google.api.http) = {
        get: "/echo/eff_rest_services.get_effluent_chart"
      };
    }
    // Detailed Effluent Chart Service
    // 
    // Discharge Monitoring Report (DMR) data supporting each effluent chart for one NPDES permit. Includes Discharge Monitoring Reports and NPDES Violations. 
    // 
    rpc PostEff_rest_servicesGet_effluent_chart(PostEff_rest_servicesGet_effluent_chartRequest) returns (PostEff_rest_servicesGet_effluent_chartResponse) {
      option (google.api.http) = {
        post: "/echo/eff_rest_services.get_effluent_chart"
      };
    }
    // Summary Effluent Chart Service
    // 
    // Summary of compliance status each outfall and parameter for one NPDES permit. Provides the current compliance status and overall compliance status for the date range of interest. This service supports the Summary Matrix on the Effluent Charts.
    rpc GetEff_rest_servicesGet_summary_chart(GetEff_rest_servicesGet_summary_chartRequest) returns (GetEff_rest_servicesGet_summary_chartResponse) {
      option (google.api.http) = {
        get: "/echo/eff_rest_services.get_summary_chart"
      };
    }
    // Summary Effluent Chart Service
    // 
    // Summary of compliance status each outfall and parameter for one NPDES permit. Provides the current compliance status and overall compliance status for the date range of interest. This service supports the Summary Matrix on the Effluent Charts.
    rpc PostEff_rest_servicesGet_summary_chart(PostEff_rest_servicesGet_summary_chartRequest) returns (PostEff_rest_servicesGet_summary_chartResponse) {
      option (google.api.http) = {
        post: "/echo/eff_rest_services.get_summary_chart"
      };
    }
    // ECHO CWA Parameter Lookup Service
    // 
    // Look up Clean Water Act parameter codes and descriptions in the Integrated Compliance Information System - National Pollutant Discharge Elimination System (ICIS-NPDES) by code or term.
    rpc GetRest_lookupsCwa_parameters(GetRest_lookupsCwa_parametersRequest) returns (GetRest_lookupsCwa_parametersResponse) {
      option (google.api.http) = {
        get: "/echo/rest_lookups.cwa_parameters"
      };
    }
    // ECHO CWA Parameter Lookup Service
    // 
    // Look up Clean Water Act parameter codes and descriptions in the Integrated Compliance Information System - National Pollutant Discharge Elimination System (ICIS-NPDES) by code or term.
    rpc PostRest_lookupsCwa_parameters(PostRest_lookupsCwa_parametersRequest) returns (PostRest_lookupsCwa_parametersResponse) {
      option (google.api.http) = {
        post: "/echo/rest_lookups.cwa_parameters"
      };
    }
}
