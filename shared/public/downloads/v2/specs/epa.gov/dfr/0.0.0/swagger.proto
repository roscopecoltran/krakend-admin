syntax = "proto3";

import "google/api/annotations.proto";

package u.s.epaenforcementandcompliancehistoryonline(echo)-detailedfacilityreport(dfr);

message GetDfr_rest_servicesGet_air_complianceRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message GetDfr_rest_servicesGet_air_complianceResponse {
    dfrq_Results Results = 1;
}

message PostDfr_rest_servicesGet_air_complianceRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message PostDfr_rest_servicesGet_air_complianceResponse {
    dfrq_Results Results = 1;
}

message GetDfr_rest_servicesGet_air_qualityRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message GetDfr_rest_servicesGet_air_qualityResponse {
    dfr1_Results Results = 1;
}

message PostDfr_rest_servicesGet_air_qualityRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message PostDfr_rest_servicesGet_air_qualityResponse {
    dfr1_Results Results = 1;
}

message GetDfr_rest_servicesGet_compliance_historyRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message GetDfr_rest_servicesGet_compliance_historyResponse {
    dfr2_Results Results = 1;
}

message PostDfr_rest_servicesGet_compliance_historyRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message PostDfr_rest_servicesGet_compliance_historyResponse {
    dfr2_Results Results = 1;
}

message GetDfr_rest_servicesGet_compliance_summaryRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message GetDfr_rest_servicesGet_compliance_summaryResponse {
    dfr3_Results Results = 1;
}

message PostDfr_rest_servicesGet_compliance_summaryRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message PostDfr_rest_servicesGet_compliance_summaryResponse {
    dfr3_Results Results = 1;
}

message GetDfr_rest_servicesGet_cwa_3yr_complianceRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message GetDfr_rest_servicesGet_cwa_3yr_complianceResponse {
    dfrW_Results Results = 1;
}

message PostDfr_rest_servicesGet_cwa_3yr_complianceRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message PostDfr_rest_servicesGet_cwa_3yr_complianceResponse {
    dfrW_Results Results = 1;
}

message GetDfr_rest_servicesGet_cwa_cs_complianceRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message GetDfr_rest_servicesGet_cwa_cs_complianceResponse {
    dfrs_Results Results = 1;
}

message PostDfr_rest_servicesGet_cwa_cs_complianceRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message PostDfr_rest_servicesGet_cwa_cs_complianceResponse {
    dfrs_Results Results = 1;
}

message GetDfr_rest_servicesGet_cwa_eff_alrRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message GetDfr_rest_servicesGet_cwa_eff_alrResponse {
    dfrt_Results Results = 1;
}

message PostDfr_rest_servicesGet_cwa_eff_alrRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message PostDfr_rest_servicesGet_cwa_eff_alrResponse {
    dfrt_Results Results = 1;
}

message GetDfr_rest_servicesGet_cwa_eff_complianceRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message GetDfr_rest_servicesGet_cwa_eff_complianceResponse {
    dfru_Results Results = 1;
}

message PostDfr_rest_servicesGet_cwa_eff_complianceRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message PostDfr_rest_servicesGet_cwa_eff_complianceResponse {
    dfru_Results Results = 1;
}

message GetDfr_rest_servicesGet_cwa_ps_complianceRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message GetDfr_rest_servicesGet_cwa_ps_complianceResponse {
    dfrv_Results Results = 1;
}

message PostDfr_rest_servicesGet_cwa_ps_complianceRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message PostDfr_rest_servicesGet_cwa_ps_complianceResponse {
    dfrv_Results Results = 1;
}

message GetDfr_rest_servicesGet_cwa_rnc_complianceRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message GetDfr_rest_servicesGet_cwa_rnc_complianceResponse {
    dfrw_Results Results = 1;
}

message PostDfr_rest_servicesGet_cwa_rnc_complianceRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message PostDfr_rest_servicesGet_cwa_rnc_complianceResponse {
    dfrw_Results Results = 1;
}

message GetDfr_rest_servicesGet_cwa_se_complianceRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message GetDfr_rest_servicesGet_cwa_se_complianceResponse {
    dfrx_Results Results = 1;
}

message PostDfr_rest_servicesGet_cwa_se_complianceRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message PostDfr_rest_servicesGet_cwa_se_complianceResponse {
    dfrx_Results Results = 1;
}

message GetDfr_rest_servicesGet_demographicsRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
    string p_radius = 4;
}

message GetDfr_rest_servicesGet_demographicsResponse {
    dfrY_Results Results = 1;
}

message PostDfr_rest_servicesGet_demographicsRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
    string p_radius = 4;
}

message PostDfr_rest_servicesGet_demographicsResponse {
    dfrY_Results Results = 1;
}

message GetDfr_rest_servicesGet_dfrRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
    string p_system = 4;
}

message GetDfr_rest_servicesGet_dfrResponse {
    dfr4_Results Results = 1;
}

message PostDfr_rest_servicesGet_dfrRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
    string p_system = 4;
}

message PostDfr_rest_servicesGet_dfrResponse {
    dfr4_Results Results = 1;
}

message GetDfr_rest_servicesGet_enforcement_summaryRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message GetDfr_rest_servicesGet_enforcement_summaryResponse {
    dfrW1_Results Results = 1;
}

message PostDfr_rest_servicesGet_enforcement_summaryRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message PostDfr_rest_servicesGet_enforcement_summaryResponse {
    dfrW1_Results Results = 1;
}

message GetDfr_rest_servicesGet_formal_actionsRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message GetDfr_rest_servicesGet_formal_actionsResponse {
    dfrW2_Results Results = 1;
}

message PostDfr_rest_servicesGet_formal_actionsRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message PostDfr_rest_servicesGet_formal_actionsResponse {
    dfrW2_Results Results = 1;
}

message GetDfr_rest_servicesGet_icis_formal_actionsRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message GetDfr_rest_servicesGet_icis_formal_actionsResponse {
    dfra_Results Results = 1;
}

message PostDfr_rest_servicesGet_icis_formal_actionsRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message PostDfr_rest_servicesGet_icis_formal_actionsResponse {
    dfra_Results Results = 1;
}

message GetDfr_rest_servicesGet_inspectionsRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message GetDfr_rest_servicesGet_inspectionsResponse {
    dfra1_Results Results = 1;
}

message PostDfr_rest_servicesGet_inspectionsRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message PostDfr_rest_servicesGet_inspectionsResponse {
    dfra1_Results Results = 1;
}

message GetDfr_rest_servicesGet_mapRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message GetDfr_rest_servicesGet_mapResponse {
    dfrZ_Results Results = 1;
}

message PostDfr_rest_servicesGet_mapRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message PostDfr_rest_servicesGet_mapResponse {
    dfrZ_Results Results = 1;
}

message GetDfr_rest_servicesGet_naicsRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message GetDfr_rest_servicesGet_naicsResponse {
    dfra2_Results Results = 1;
}

message PostDfr_rest_servicesGet_naicsRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message PostDfr_rest_servicesGet_naicsResponse {
    dfra2_Results Results = 1;
}

message GetDfr_rest_servicesGet_noticesRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message GetDfr_rest_servicesGet_noticesResponse {
    dfrg_Results Results = 1;
}

message PostDfr_rest_servicesGet_noticesRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message PostDfr_rest_servicesGet_noticesResponse {
    dfrg_Results Results = 1;
}

message GetDfr_rest_servicesGet_permitsRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message GetDfr_rest_servicesGet_permitsResponse {
    dfrg1_Results Results = 1;
}

message PostDfr_rest_servicesGet_permitsRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message PostDfr_rest_servicesGet_permitsResponse {
    dfrg1_Results Results = 1;
}

message GetDfr_rest_servicesGet_rcra_complianceRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message GetDfr_rest_servicesGet_rcra_complianceResponse {
    dfrh_Results Results = 1;
}

message PostDfr_rest_servicesGet_rcra_complianceRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message PostDfr_rest_servicesGet_rcra_complianceResponse {
    dfrh_Results Results = 1;
}

message GetDfr_rest_servicesGet_sdwa_lead_and_copperRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message GetDfr_rest_servicesGet_sdwa_lead_and_copperResponse {
    dfrk_Results Results = 1;
}

message PostDfr_rest_servicesGet_sdwa_lead_and_copperRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message PostDfr_rest_servicesGet_sdwa_lead_and_copperResponse {
    dfrk_Results Results = 1;
}

message GetDfr_rest_servicesGet_sdwa_sanitary_surveysRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message GetDfr_rest_servicesGet_sdwa_sanitary_surveysResponse {
    dfrj_Results Results = 1;
}

message PostDfr_rest_servicesGet_sdwa_sanitary_surveysRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message PostDfr_rest_servicesGet_sdwa_sanitary_surveysResponse {
    dfrj_Results Results = 1;
}

message GetDfr_rest_servicesGet_sdwa_site_visitsRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message GetDfr_rest_servicesGet_sdwa_site_visitsResponse {
    dfri_Results Results = 1;
}

message PostDfr_rest_servicesGet_sdwa_site_visitsRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message PostDfr_rest_servicesGet_sdwa_site_visitsResponse {
    dfri_Results Results = 1;
}

message GetDfr_rest_servicesGet_sdwa_violationsRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message GetDfr_rest_servicesGet_sdwa_violationsResponse {
    dfrf_Results Results = 1;
}

message PostDfr_rest_servicesGet_sdwa_violationsRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message PostDfr_rest_servicesGet_sdwa_violationsResponse {
    dfrf_Results Results = 1;
}

message GetDfr_rest_servicesGet_sdwis_complianceRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message GetDfr_rest_servicesGet_sdwis_complianceResponse {
    dfrl_Results Results = 1;
}

message PostDfr_rest_servicesGet_sdwis_complianceRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message PostDfr_rest_servicesGet_sdwis_complianceResponse {
    dfrl_Results Results = 1;
}

message GetDfr_rest_servicesGet_sic_codesRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message GetDfr_rest_servicesGet_sic_codesResponse {
    dfrg2_Results Results = 1;
}

message PostDfr_rest_servicesGet_sic_codesRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message PostDfr_rest_servicesGet_sic_codesResponse {
    dfrg2_Results Results = 1;
}

message GetDfr_rest_servicesGet_spatial_metadataRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message GetDfr_rest_servicesGet_spatial_metadataResponse {
    dfrg3_Results Results = 1;
}

message PostDfr_rest_servicesGet_spatial_metadataRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message PostDfr_rest_servicesGet_spatial_metadataResponse {
    dfrg3_Results Results = 1;
}

message GetDfr_rest_servicesGet_tri_historyRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message GetDfr_rest_servicesGet_tri_historyResponse {
    dfrm_Results Results = 1;
}

message PostDfr_rest_servicesGet_tri_historyRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message PostDfr_rest_servicesGet_tri_historyResponse {
    dfrm_Results Results = 1;
}

message GetDfr_rest_servicesGet_tri_releasesRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message GetDfr_rest_servicesGet_tri_releasesResponse {
    dfrn_Results Results = 1;
}

message PostDfr_rest_servicesGet_tri_releasesRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message PostDfr_rest_servicesGet_tri_releasesResponse {
    dfrn_Results Results = 1;
}

message GetDfr_rest_servicesGet_tribesRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message GetDfr_rest_servicesGet_tribesResponse {
    dfro_Results Results = 1;
}

message PostDfr_rest_servicesGet_tribesRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
}

message PostDfr_rest_servicesGet_tribesResponse {
    dfro_Results Results = 1;
}

message GetDfr_rest_servicesGet_water_qualityRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
    string p_radius = 4;
}

message GetDfr_rest_servicesGet_water_qualityResponse {
    dfrp_Results Results = 1;
}

message PostDfr_rest_servicesGet_water_qualityRequest {
    string callback = 1;
    output output = 2;
    string p_id = 3;
    string p_radius = 4;
}

message PostDfr_rest_servicesGet_water_qualityResponse {
    dfrp_Results Results = 1;
}

message Dfr0_Qtr12Header {
    // Date indicating the end of Quarter 10.
    string Qtr10End = 1;
    // Date indicating the beginning of Quarter 10.
    string Qtr10Start = 2;
    // Date indicating the end of Quarter 11.
    string Qtr11End = 3;
    // Date indicating the beginning of Quarter 11.
    string Qtr11Start = 4;
    // Date indicating the end of Quarter 12.
    string Qtr12End = 5;
    // Date indicating the beginning of Quarter 12.
    string Qtr12Start = 6;
    // Date indicating the end of Quarter 1.
    string Qtr1End = 7;
    // Date indicating the beginning of Quarter 1.
    string Qtr1Start = 8;
    // Date indicating the end of Quarter 2.
    string Qtr2End = 9;
    // Date indicating the beginning of Quarter 2.
    string Qtr2Start = 10;
    // Date indicating the end of Quarter 3.
    string Qtr3End = 11;
    // Date indicating the beginning of Quarter 3.
    string Qtr3Start = 12;
    // Date indicating the end of Quarter 4.
    string Qtr4End = 13;
    // Date indicating the beginning of Quarter 4.
    string Qtr4Start = 14;
    // Date indicating the end of Quarter 5.
    string Qtr5End = 15;
    // Date indicating the beginning of Quarter 5.
    string Qtr5Start = 16;
    // Date indicating the end of Quarter 6.
    string Qtr6End = 17;
    // Date indicating the beginning of Quarter 6.
    string Qtr6Start = 18;
    // Date indicating the end of Quarter 7.
    string Qtr7End = 19;
    // Date indicating the beginning of Quarter 7.
    string Qtr7Start = 20;
    // Date indicating the end of Quarter 8.
    string Qtr8End = 21;
    // Date indicating the beginning of Quarter 8.
    string Qtr8Start = 22;
    // Date indicating the end of Quarter 9.
    string Qtr9End = 23;
    // Date indicating the beginning of Quarter 9.
    string Qtr9Start = 24;
}

message Dfr0_Qtr12Status {
    // The relevant status for the quarter.
    string Qtr10Status = 1;
    // The relevant status for the quarter.
    string Qtr11Status = 2;
    // The relevant status for the quarter.
    string Qtr12Status = 3;
    // The relevant status for the quarter.
    string Qtr1Status = 4;
    // The relevant status for the quarter.
    string Qtr2Status = 5;
    // The relevant status for the quarter.
    string Qtr3Status = 6;
    // The relevant status for the quarter.
    string Qtr4Status = 7;
    // The relevant status for the quarter.
    string Qtr5Status = 8;
    // The relevant status for the quarter.
    string Qtr6Status = 9;
    // The relevant status for the quarter.
    string Qtr7Status = 10;
    // The relevant status for the quarter.
    string Qtr8Status = 11;
    // The relevant status for the quarter.
    string Qtr9Status = 12;
    // Unique Identifier assigned by EPA.
    string SourceID = 13;
}

message Dfr0_Qtr13Header {
    // Date indicating the end of Quarter 10.
    string Qtr10End = 1;
    // Date indicating the beginning of Quarter 10.
    string Qtr10Start = 2;
    // Date indicating the end of Quarter 11.
    string Qtr11End = 3;
    // Date indicating the beginning of Quarter 11.
    string Qtr11Start = 4;
    // Date indicating the end of Quarter 12.
    string Qtr12End = 5;
    // Date indicating the beginning of Quarter 12.
    string Qtr12Start = 6;
    // Date indicating the end of Quarter 13.
    string Qtr13End = 7;
    // Date indicating the beginning of Quarter 13.
    string Qtr13Start = 8;
    // Date indicating the end of Quarter 1.
    string Qtr1End = 9;
    // Date indicating the beginning of Quarter 1.
    string Qtr1Start = 10;
    // Date indicating the end of Quarter 2.
    string Qtr2End = 11;
    // Date indicating the beginning of Quarter 2.
    string Qtr2Start = 12;
    // Date indicating the end of Quarter 3.
    string Qtr3End = 13;
    // Date indicating the beginning of Quarter 3.
    string Qtr3Start = 14;
    // Date indicating the end of Quarter 4.
    string Qtr4End = 15;
    // Date indicating the beginning of Quarter 4.
    string Qtr4Start = 16;
    // Date indicating the end of Quarter 5.
    string Qtr5End = 17;
    // Date indicating the beginning of Quarter 5.
    string Qtr5Start = 18;
    // Date indicating the end of Quarter 6.
    string Qtr6End = 19;
    // Date indicating the beginning of Quarter 6.
    string Qtr6Start = 20;
    // Date indicating the end of Quarter 7.
    string Qtr7End = 21;
    // Date indicating the beginning of Quarter 7.
    string Qtr7Start = 22;
    // Date indicating the end of Quarter 8.
    string Qtr8End = 23;
    // Date indicating the beginning of Quarter 8.
    string Qtr8Start = 24;
    // Date indicating the end of Quarter 9.
    string Qtr9End = 25;
    // Date indicating the beginning of Quarter 9.
    string Qtr9Start = 26;
}

message Dfr0_Qtr13Status {
    // The relevant status for the quarter.
    string Qtr10Status = 1;
    // The relevant status for the quarter.
    string Qtr11Status = 2;
    // The relevant status for the quarter.
    string Qtr12Status = 3;
    // The relevant status for the quarter.
    string Qtr13Status = 4;
    // The relevant status for the quarter.
    string Qtr1Status = 5;
    // The relevant status for the quarter.
    string Qtr2Status = 6;
    // The relevant status for the quarter.
    string Qtr3Status = 7;
    // The relevant status for the quarter.
    string Qtr4Status = 8;
    // The relevant status for the quarter.
    string Qtr5Status = 9;
    // The relevant status for the quarter.
    string Qtr6Status = 10;
    // The relevant status for the quarter.
    string Qtr7Status = 11;
    // The relevant status for the quarter.
    string Qtr8Status = 12;
    // The relevant status for the quarter.
    string Qtr9Status = 13;
    // Unique Identifier assigned by EPA.
    string SourceID = 14;
}

message Dfr10_CWACSCompliance {
    dfr0_Qtr13Header Header = 1;
    repeated dfr10_Violations Sources = 2;
}

message Dfr10_Violation {
    // The unique identifier in ICIS-NPDES for the NPDES Violation
    string NPDESViolationId = 1;
    // The relevant status for the quarter.
    string Qtr10Status = 2;
    string Qtr10Value = 3;
    // The relevant status for the quarter.
    string Qtr11Status = 4;
    string Qtr11Value = 5;
    // The relevant status for the quarter.
    string Qtr12Status = 6;
    string Qtr12Value = 7;
    // The relevant status for the quarter.
    string Qtr13Status = 8;
    string Qtr13Value = 9;
    // The relevant status for the quarter.
    string Qtr1Status = 10;
    string Qtr1Value = 11;
    // The relevant status for the quarter.
    string Qtr2Status = 12;
    string Qtr2Value = 13;
    // The relevant status for the quarter.
    string Qtr3Status = 14;
    string Qtr3Value = 15;
    // The relevant status for the quarter.
    string Qtr4Status = 16;
    string Qtr4Value = 17;
    // The relevant status for the quarter.
    string Qtr5Status = 18;
    string Qtr5Value = 19;
    // The relevant status for the quarter.
    string Qtr6Status = 20;
    string Qtr6Value = 21;
    // The relevant status for the quarter.
    string Qtr7Status = 22;
    string Qtr7Value = 23;
    // The relevant status for the quarter.
    string Qtr8Status = 24;
    string Qtr8Value = 25;
    // The relevant status for the quarter.
    string Qtr9Status = 26;
    string Qtr9Value = 27;
    // Unique Identifier assigned by EPA.
    string SourceID = 28;
    // A description of which type of violation has occurred
    string ViolationDesc = 29;
}

message Dfr10_Violations {
    repeated dfr10_Violation Violations = 1;
}

message Dfr1_Results {
    dfr6_AirQuality AirQuality = 1;
    // Field to record messages (typically performance-related) about packet processing
    string Message = 2;
}

message Dfr2_Results {
    dfrV_ComplianceHistory ComplianceHistory = 1;
    // Field to record messages (typically performance-related) about packet processing
    string Message = 2;
}

message Dfr3_Results {
    dfrD_ComplianceSummary ComplianceSummary = 1;
    // Field to record messages (typically performance-related) about packet processing
    string Message = 2;
}

message Dfr4_CAEDDocuments {
    string Dummy = 1;
}

message Dfr4_MapData {
    // Name of each individual icon file within the URL base
    string ICON = 1;
    // The latitude of the facility in degrees, to four decimal places
    string LAT = 2;
    // The longitude of the facility in degrees, to four decimal places
    string LON = 3;
    // For DFR, this is the Facility name. The name corresponds to the TYPE value
    string NAME = 4;
    // Pop up value. Combine with PopUpBaseURL to give the popup for the facility
    string PUV = 5;
    // For DFR, this is always facility
    string TYPE = 6;
}

message Dfr4_MultipleFRSFacilities {
    repeated dfr4_RegistryIDs RegistryIDs = 1;
}

message Dfr4_NAICS {
    repeated dfrz_NAICS Sources = 1;
}

message Dfr4_Permits {
    // ??
    string AccuracyScore = 1;
    // ??
    string AccuracyValue = 2;
    // Clean Air Act stationary source program subpart designation, Clean Water Act-NPDES permit component(s), and/or other Resource Conservation and Recovery Act designations, if any.
    string Areas = 3;
    // ??
    string CollectDesc = 4;
    // ??
    string DQURL = 5;
    // The EPA region in which the facility is located
    string EPARegion = 6;
    // The EPA data system in which permit and facility records are kept. EPA's Facility Registry System (FRS) links all program database records (such as permit IDs and IDs facilities use in reporting to EPA) together. The following list describes the individual data systems that are linked to from the detailed facility report: 
    // 
    // - AFS: Air Facility System for Clean Air Act stationary source programs.
    // - ICP: Integrated Compliance Information System for Clean Water Act programs monitoring National Pollutant Discharge Elimination System (NPDES) permits.
    // - RCR: Resource Conservation and Recovery Act Information System (RCRAInfo) for tracking the Resource Conservation and Recovery Act (RCRA) programs.
    // - NCDB: National Compliance Database System for monitoring national performance of the Toxic Substance Control Act (TSCA); the Emergency Planning and Right-to-Know Act, Section 313 (EPCRA); the Asbestos Hazard Emergency Response (AHERA); and the Federal Insecticide, Fungicide, and Rodenticide Act (FIFRA).
    // - TRI: Toxics Release Inventory for Emergency Planning and Community Right-to-Know Act, Section 313 submissions.
    // - NEI: National Emissions Inventory database contains information on stationary and mobile sources that emit criteria air pollutants and their precursors, as well as hazardous air pollutants (HAPs). The database includes estimates of annual emissions, by source, of air pollutants in each area of the country, on an annual basis.
    // - TSCA: Toxic Substances Control Act addressing the production, importation, use, and disposal of specific chemicals.
    string EPASystem = 7;
    // Date on which a given permit is scheduled to expire
    string ExpDate = 8;
    // The city in which the facility is located
    string FacilityCity = 9;
    // The name of the facility.
    string FacilityName = 10;
    // The state in which the facility is located
    string FacilityState = 11;
    // The Air Program Status is given for each source ID (Operating; Planned; Under construction; Temporarily closed;  Permanently closed; and Seasonal)
    // 
    // For CWA, the Permit Compliance System (PCS) designates a permitted facility as being Active or Inactive. Under the CWA, all facilities discharging pollutants from a point source (e.g., a pipe) to surface waters must have a NPDES permit. For CWA, ICISNPDES designates a permit as Effective, Administratively Continued, Expired, Not Needed, Pending, Retired, or Terminated. RCRA facilities (sites) are designated as Active or Inactive. The following provides RCRA site activity status definitions and explains site activity status designation.
    string FacilityStatus = 12;
    // The street address of the facility
    string FacilityStreet = 13;
    // The zip code of the area in which the facility is located
    string FacilityZip = 14;
    // ??
    string HasIcisSsoRpt = 15;
    // ??
    string HdatumDesc = 16;
    // Indicates whether the facility is located in Indian Country
    string IndianCountry = 17;
    // The latitude of the facility or permit holder as maintained in each data system.
    string Latitude = 18;
    // The longitude of the facility or permit holder as maintained in each data system
    string Longitude = 19;
    // The North American Industry Classification System codes
    string NAICS = 20;
    // ??
    string RefPointDesc = 21;
    // Standard Industrial Classification codes
    string SIC = 22;
    // ??
    string Scale = 23;
    // Unique Identifier assigned by EPA.
    string SourceID = 24;
    // The name of the statute associated with each of the permits and identifiers linked to the facility: 
    // - CAA = the Clean Air Act
    // - CWA = the Clean Water Act
    // - RCRA = the Resource Conservation and Recovery Act
    // - EP313 = the Emergency Planning and Community Right-to-Know Act, Section 313 (also known as the Toxics Release Inventory Program)
    // - TSCA = the Toxic Substances Control Act
    // - SDWA = the Safe Drinking Water Act
    string Statute = 25;
    // This field provides further description on type of permit or record for each data system as follows:
    // - For CAA  = The program office defines each CAA Source ID and the associated permits as being Federally Reportable or Non-Federally Reportable. Under the CAA, federally reportable sources include majors, synthetic minors, NESHAP Part 61 minors, minors with an unresolved High Priority Violation (HPV), with recent enforcement actions, or included on a Compliance Monitoring Strategy plan. The Clean Air Act requires that delegated agencies and EPA track all federally reportable sources in Air Facility System (AFS).
    // - For CWA  = Each CWA Source ID or National Pollutant Discharge Elimination System (NPDES) permit is defined by the program office as a Major or Minor discharger.
    // - For RCRA = RCRA Source ID or permits for Treatment, Storage and Disposal facilities are identified by TSD, Large Quantity Generators are identified by LQG. Other values include Permit Workload (PMT), Closure Workload (CLO), Small Quantity Generator Universe (SQG), Conditionally-Exempt Small Quantity Generator (CESQG), Post-Closure Workload (POST CL), and Transporters.
    string Universe = 26;
}

message Dfr4_ProgramDates {
    // End date for the date range of interest. Formatted as mm/dd/yyyy
    string EndDate = 1;
    // The source database for the EPA programs information.
    string Program = 2;
    // Starting date for the date range of interest. Formatted as mm/dd/yyyy
    string StartDate = 3;
}

message Dfr4_RegistryIDs {
    // The EPA data system in which permit and facility records are kept. EPA's Facility Registry System (FRS) links all program database records (such as permit IDs and IDs facilities use in reporting to EPA) together. The following list describes the individual data systems that are linked to from the detailed facility report: 
    // 
    // - AFS: Air Facility System for Clean Air Act stationary source programs.
    // - ICP: Integrated Compliance Information System for Clean Water Act programs monitoring National Pollutant Discharge Elimination System (NPDES) permits.
    // - RCR: Resource Conservation and Recovery Act Information System (RCRAInfo) for tracking the Resource Conservation and Recovery Act (RCRA) programs.
    // - NCDB: National Compliance Database System for monitoring national performance of the Toxic Substance Control Act (TSCA); the Emergency Planning and Right-to-Know Act, Section 313 (EPCRA); the Asbestos Hazard Emergency Response (AHERA); and the Federal Insecticide, Fungicide, and Rodenticide Act (FIFRA).
    // - TRI: Toxics Release Inventory for Emergency Planning and Community Right-to-Know Act, Section 313 submissions.
    // - NEI: National Emissions Inventory database contains information on stationary and mobile sources that emit criteria air pollutants and their precursors, as well as hazardous air pollutants (HAPs). The database includes estimates of annual emissions, by source, of air pollutants in each area of the country, on an annual basis.
    // - TSCA: Toxic Substances Control Act addressing the production, importation, use, and disposal of specific chemicals.
    string EPASystem = 1;
    // The city in which the facility is located
    string FacilityCity = 2;
    string FacilityCounty = 3;
    // The name of the facility.
    string FacilityName = 4;
    // The state in which the facility is located
    string FacilityState = 5;
    // The street address of the facility
    string FacilityStreet = 6;
    // The zip code of the area in which the facility is located
    string FacilityZip = 7;
    // 12-digit Facility Registry Service (FRS) identification number.  FRS uniquely identifies a facility by assigning an identification number (FRS ID), and uses this FRS ID to link together all EPA regulatory program database records
    string RegistryId = 8;
}

message Dfr4_Reports {
    // ???
    string HasPollRpt = 1;
}

message Dfr4_Results {
    dfr5_AirCompliance AirCompliance = 1;
    dfr6_AirQuality AirQuality = 2;
    repeated dfr4_CAEDDocuments CAEDDocuments = 3;
    dfr7_CWA3YrCompliance CWA3YrCompliance = 4;
    dfr10_CWACSCompliance CWACSCompliance = 5;
    dfr8_CWAEffluentALRExceedences CWAEffluentALRExceedences = 6;
    dfr9_CWAEffluentCompliance CWAEffluentCompliance = 7;
    dfrA_CWAPSCompliance CWAPSCompliance = 8;
    dfrB_CWARNCCompliance CWARNCCompliance = 9;
    dfrC_CWASECompliance CWASECompliance = 10;
    dfrV_ComplianceHistory ComplianceHistory = 11;
    dfrD_ComplianceSummary ComplianceSummary = 12;
    dfrE_Demographics Demographics = 13;
    dfrF_EnforcementComplianceSummaries EnforcementComplianceSummaries = 14;
    dfrG_FormalActions FormalActions = 15;
    dfrH_ICISFormalActions ICISFormalActions = 16;
    dfrI_InspectionEnforcementSummary InspectionEnforcementSummary = 17;
    dfrG_LeadAndCopperRule5Yr LeadAndCopperRule5Yr = 18;
    dfrJ_MapOutput MapOutput = 19;
    // Field to record messages (typically performance-related) about packet processing
    string Message = 20;
    dfr4_MultipleFRSFacilities MultipleFRSFacilities = 21;
    dfr4_NAICS NAICS = 22;
    dfrK_Notices Notices = 23;
    repeated dfr4_Permits Permits = 24;
    dfrL_RCRACompliance RCRACompliance = 25;
    dfr4_Reports Reports = 26;
    dfrM_SDWISCompliance SDWISCompliance = 27;
    dfr4_SIC SIC = 28;
    dfrN_SanitarySurveys SanitarySurveys = 29;
    dfrO_SiteVisits SiteVisits = 30;
    dfrP_SpatialMetadata SpatialMetadata = 31;
    dfrQ_TRIHistory TRIHistory = 32;
    dfrR_TRIReleases TRIReleases = 33;
    repeated dfrS_Tribes Tribes = 34;
    dfrT_ViolationsEnforcementActions ViolationsEnforcementActions = 35;
    dfrU_WaterQuality WaterQuality = 36;
    repeated dfr4_WebFireDocuments WebFireDocuments = 37;
}

message Dfr4_SIC {
    repeated dfr4_Sources Sources = 1;
}

message Dfr4_SICCodes {
    // The EPA data system in which permit and facility records are kept. EPA's Facility Registry System (FRS) links all program database records (such as permit IDs and IDs facilities use in reporting to EPA) together. The following list describes the individual data systems that are linked to from the detailed facility report: 
    // 
    // - AFS: Air Facility System for Clean Air Act stationary source programs.
    // - ICP: Integrated Compliance Information System for Clean Water Act programs monitoring National Pollutant Discharge Elimination System (NPDES) permits.
    // - RCR: Resource Conservation and Recovery Act Information System (RCRAInfo) for tracking the Resource Conservation and Recovery Act (RCRA) programs.
    // - NCDB: National Compliance Database System for monitoring national performance of the Toxic Substance Control Act (TSCA); the Emergency Planning and Right-to-Know Act, Section 313 (EPCRA); the Asbestos Hazard Emergency Response (AHERA); and the Federal Insecticide, Fungicide, and Rodenticide Act (FIFRA).
    // - TRI: Toxics Release Inventory for Emergency Planning and Community Right-to-Know Act, Section 313 submissions.
    // - NEI: National Emissions Inventory database contains information on stationary and mobile sources that emit criteria air pollutants and their precursors, as well as hazardous air pollutants (HAPs). The database includes estimates of annual emissions, by source, of air pollutants in each area of the country, on an annual basis.
    // - TSCA: Toxic Substances Control Act addressing the production, importation, use, and disposal of specific chemicals.
    string EPASystem = 1;
    // The Standard Industrial Classification codes applicable to the facility
    string SICCode = 2;
    // Industries associated to the SIC code.
    string SICDesc = 3;
    // Unique Identifier assigned by EPA.
    string SourceID = 4;
}

message Dfr4_Sources {
    repeated dfr4_SICCodes SICCodes = 1;
}

message Dfr4_Summaries {
    // The number of EPA enforcement cases that have been brought against the facility, under the corresponding statute, within the designated time period.
    string Cases = 1;
    // The current status for the facility during the most current quarter. (No violation, noncompliance)
    string CurrentStatus = 2;
    // The number of formal enforcement actions that have been taken against the facility, under the corresponding statute, within the five year time period
    string FormalActions = 3;
    // The number of informal enforcement actions that have been taken against the facility, under the corresponding statute, within the five year time period
    string InformalActions = 4;
    // The number of inspections/compliance evaluations that have occurred at the facility, under the corresponding statute, within the designated time period
    string Inspections = 5;
    // The date on which the most recent inspection of the facility took place
    string LastInspection = 6;
    // The number of quarters, out of the last twelve quarters, in which the permit or site is considered either with violations, in non-compliance (NC) status, or in Significant Noncompliance (SNC) or High Priority Violation (HPV) status
    string QtrsInNC = 7;
    // The number of formal enforcement actions that have been taken against the facility, under the corresponding statute, within the five year time period
    string QtrsInSNC = 8;
    // The name of the statute associated with each of the permits and identifiers linked to the facility: 
    // - CAA = the Clean Air Act
    // - CWA = the Clean Water Act
    // - RCRA = the Resource Conservation and Recovery Act
    // - EP313 = the Emergency Planning and Community Right-to-Know Act, Section 313 (also known as the Toxics Release Inventory Program)
    // - TSCA = the Toxic Substances Control Act
    // - SDWA = the Safe Drinking Water Act
    string Statute = 9;
    // ??
    string TotalCasePenalties = 10;
    // The total dollar amount of either assessed or final penalties within the five year time period
    string TotalPenalties = 11;
}

message Dfr4_WebFireDocuments {
    string Dummy = 1;
}

message Dfr5_AirCompliance {
    dfr0_Qtr12Header Header = 1;
    repeated dfrc_Source Sources = 2;
}

message Dfr6_AirQuality {
    // If null, the facility is not located in a designated non-attainment area. If populated, the value is the name of the non-attainment area; normally this is a city or county name
    string Lead2008Area = 1;
    // If null, the facility is not located in a designated non-attainment area. If populated, the value is the name of the non-attainment area; normally this is a city or county name
    string Ozone8hr1997Area = 2;
    // If null, the facility is not located in a designated non-attainment area. If populated, the value is the name of the non-attainment area; normally this is a city or county name
    string Ozone8hr2008Area = 3;
    // If null, the facility is not located in a designated non-attainment area. If populated, the value is the name of the non-attainment area; normally this is a city or county name
    string ParticulateMatter1997Area = 4;
    // If null, the facility is not located in a designated non-attainment area. If populated, the value is the name of the non-attainment area; normally this is a city or county name
    string ParticulateMatter2006Area = 5;
    // If null, the facility is not located in a designated non-attainment area. If populated, the value is the name of the non-attainment area; normally this is a city or county name
    string SulfurDioxide2010Area = 6;
}

message Dfr7_CWA3YrCompliance {
    dfr0_Qtr13Header Header = 1;
    repeated dfr7_Sources Sources = 2;
}

message Dfr7_Sources {
    repeated dfr0_Qtr13Status Status = 1;
}

message Dfr8_CWAEffluentALRExceedences {
    dfr0_Qtr13Header Header = 1;
    repeated dfr8_Sources Sources = 2;
}

message Dfr8_Parameters {
    string DischargePoint = 1;
    string MeasurementType = 2;
    // The unique 5 digit numeric code identifying the parameter. If the code is less than 5 digits in the .CSV, append zeros to the beginning of the number (e.g., 100 is equivalent to 00100)
    string ParameterCode = 3;
    // The pollutant name.
    string ParameterName = 4;
    string Qtr10Value = 5;
    string Qtr11Value = 6;
    string Qtr12Value = 7;
    string Qtr13Value = 8;
    string Qtr1Value = 9;
    string Qtr2Value = 10;
    string Qtr3Value = 11;
    string Qtr4Value = 12;
    string Qtr5Value = 13;
    string Qtr6Value = 14;
    string Qtr7Value = 15;
    string Qtr8Value = 16;
    string Qtr9Value = 17;
    // Unique Identifier assigned by EPA.
    string SourceID = 18;
}

message Dfr8_Sources {
    repeated dfr8_Parameters Parameters = 1;
}

message Dfr9_CWAEffluentCompliance {
    dfr0_Qtr13Header Header = 1;
    repeated dfr9_Parameters Sources = 2;
}

message Dfr9_Parameter {
    string DischargePoint = 1;
    string MeasurementType = 2;
    // The unique 5 digit numeric code identifying the parameter. If the code is less than 5 digits in the .CSV, append zeros to the beginning of the number (e.g., 100 is equivalent to 00100)
    string ParameterCode = 3;
    // The pollutant name.
    string ParameterName = 4;
    // The relevant status for the quarter.
    string Qtr10Status = 5;
    string Qtr10Value = 6;
    // The relevant status for the quarter.
    string Qtr11Status = 7;
    string Qtr11Value = 8;
    // The relevant status for the quarter.
    string Qtr12Status = 9;
    string Qtr12Value = 10;
    // The relevant status for the quarter.
    string Qtr13Status = 11;
    string Qtr13Value = 12;
    // The relevant status for the quarter.
    string Qtr1Status = 13;
    string Qtr1Value = 14;
    // The relevant status for the quarter.
    string Qtr2Status = 15;
    string Qtr2Value = 16;
    // The relevant status for the quarter.
    string Qtr3Status = 17;
    string Qtr3Value = 18;
    // The relevant status for the quarter.
    string Qtr4Status = 19;
    string Qtr4Value = 20;
    // The relevant status for the quarter.
    string Qtr5Status = 21;
    string Qtr5Value = 22;
    // The relevant status for the quarter.
    string Qtr6Status = 23;
    string Qtr6Value = 24;
    // The relevant status for the quarter.
    string Qtr7Status = 25;
    string Qtr7Value = 26;
    // The relevant status for the quarter.
    string Qtr8Status = 27;
    string Qtr8Value = 28;
    // The relevant status for the quarter.
    string Qtr9Status = 29;
    string Qtr9Value = 30;
    // Unique Identifier assigned by EPA.
    string SourceID = 31;
}

message Dfr9_Parameters {
    repeated dfr9_Parameter Parameters = 1;
}

message DfrA_CWAPSCompliance {
    dfr0_Qtr13Header Header = 1;
    repeated dfrA_Violations Sources = 2;
}

message DfrA_Violation {
    // The unique identifier in ICIS-NPDES for the NPDES Violation
    string NPDESViolationId = 1;
    // The relevant status for the quarter.
    string Qtr10Status = 2;
    string Qtr10Value = 3;
    // The relevant status for the quarter.
    string Qtr11Status = 4;
    string Qtr11Value = 5;
    // The relevant status for the quarter.
    string Qtr12Status = 6;
    string Qtr12Value = 7;
    // The relevant status for the quarter.
    string Qtr13Status = 8;
    string Qtr13Value = 9;
    // The relevant status for the quarter.
    string Qtr1Status = 10;
    string Qtr1Value = 11;
    // The relevant status for the quarter.
    string Qtr2Status = 12;
    string Qtr2Value = 13;
    // The relevant status for the quarter.
    string Qtr3Status = 14;
    string Qtr3Value = 15;
    // The relevant status for the quarter.
    string Qtr4Status = 16;
    string Qtr4Value = 17;
    // The relevant status for the quarter.
    string Qtr5Status = 18;
    string Qtr5Value = 19;
    // The relevant status for the quarter.
    string Qtr6Status = 20;
    string Qtr6Value = 21;
    // The relevant status for the quarter.
    string Qtr7Status = 22;
    string Qtr7Value = 23;
    // The relevant status for the quarter.
    string Qtr8Status = 24;
    string Qtr8Value = 25;
    // The relevant status for the quarter.
    string Qtr9Status = 26;
    string Qtr9Value = 27;
    // Unique Identifier assigned by EPA.
    string SourceID = 28;
    // A description of which type of violation has occurred
    string ViolationDesc = 29;
}

message DfrA_Violations {
    repeated dfrA_Violation Violations = 1;
}

message DfrB_CWARNCCompliance {
    dfr0_Qtr12Header Header = 1;
    repeated dfrB_Statuses Sources = 2;
}

message DfrB_Statuses {
    repeated dfr0_Qtr12Status Status = 1;
}

message DfrC_CWASECompliance {
    dfr0_Qtr13Header Header = 1;
    repeated dfrC_Violations Sources = 2;
}

message DfrC_Sources.Violation {
    // The unique identifier in ICIS-NPDES for the NPDES Violation
    string NPDESViolationId = 1;
    // The relevant status for the quarter.
    string Qtr10Status = 2;
    string Qtr10Value = 3;
    // The relevant status for the quarter.
    string Qtr11Status = 4;
    string Qtr11Value = 5;
    // The relevant status for the quarter.
    string Qtr12Status = 6;
    string Qtr12Value = 7;
    // The relevant status for the quarter.
    string Qtr13Status = 8;
    string Qtr13Value = 9;
    // The relevant status for the quarter.
    string Qtr1Status = 10;
    string Qtr1Value = 11;
    // The relevant status for the quarter.
    string Qtr2Status = 12;
    string Qtr2Value = 13;
    // The relevant status for the quarter.
    string Qtr3Status = 14;
    string Qtr3Value = 15;
    // The relevant status for the quarter.
    string Qtr4Status = 16;
    string Qtr4Value = 17;
    // The relevant status for the quarter.
    string Qtr5Status = 18;
    string Qtr5Value = 19;
    // The relevant status for the quarter.
    string Qtr6Status = 20;
    string Qtr6Value = 21;
    // The relevant status for the quarter.
    string Qtr7Status = 22;
    string Qtr7Value = 23;
    // The relevant status for the quarter.
    string Qtr8Status = 24;
    string Qtr8Value = 25;
    // The relevant status for the quarter.
    string Qtr9Status = 26;
    string Qtr9Value = 27;
    // Unique Identifier assigned by EPA.
    string SourceID = 28;
    // A description of which type of violation has occurred
    string ViolationDesc = 29;
}

message DfrC_Violations {
    repeated dfrC_Sources.Violation Violations = 1;
}

message DfrD_ComplianceSummary {
    repeated dfr4_ProgramDates ProgramDates = 1;
    repeated dfrD_Source Source = 2;
}

message DfrD_Source {
    // The most recent date or calendar year quarter of record maintained in the data system for which the Current SNC/HPV status applies. A quarter could be any of the following 3-month periods:
    // - January-March
    // - April-June
    // - July-September
    // - October-December
    string CurrentAsOf = 1;
    // The current Significant Noncompliance (SNC) or High Priority Violator (HPV) status for the facility during the most current quarter. SNC is used for RCRA and CWA, and HPV is used for CAA. Each program has its own specific criteria for making this determination. The value of Yes indicates the facility is in SNC or HPV for the permit or site in question and may pose a more severe level of environmental threat. The value of No indicates the permit or site is not considered in SNC or HPV. If the facility is Non-Federally Reportable within AFS or if it is classified as minor within PCS, the field reads N/A. The value of N/A in this field indicates Not Applicable because compliance data for these facilities are not required to be reported to the national program database
    string CurrentSNC = 2;
    // The text description for the event that results in the permit or site being in Significant Noncompliance (SNC) or in High Priority Violation (HPV)
    string Description = 3;
    // The number of quarters, out of the last twelve quarters, in which the permit or site is considered either with violations, in non-compliance (NC) status, or in Significant Noncompliance (SNC) or High Priority Violation (HPV) status
    string QtrsInNC = 4;
    // Unique Identifier assigned by EPA.
    string SourceID = 5;
    // The name of the statute associated with each of the permits and identifiers linked to the facility: 
    // - CAA = the Clean Air Act
    // - CWA = the Clean Water Act
    // - RCRA = the Resource Conservation and Recovery Act
    // - EP313 = the Emergency Planning and Community Right-to-Know Act, Section 313 (also known as the Toxics Release Inventory Program)
    // - TSCA = the Toxic Substances Control Act
    // - SDWA = the Safe Drinking Water Act
    string Statute = 6;
}

message DfrE_Demographics {
    // The number and percentage of persons living in the area who are between eighteen years old and sixty-five years old.
    string Adults = 1;
    // The number and percentage of persons living in the area who are African American.
    string AfricanAmerican = 2;
    // The number and percentage of persons living in the area who are of American Indian origin.
    string AmericanIndian = 3;
    // The number and percentage of persons living in the area who are of Asian Pacific Islander origin.
    string AsianPacificIslander = 4;
    // The number and percentage of persons living in the area who have a bachelor's degree or higher.
    string BSBA = 5;
    // The latitude of the facility in degrees, to four decimal places.
    string CenterLatitude = 6;
    // The longitude of the facility in degrees, to four decimal places.
    string CenterLongitude = 7;
    // The number and percentage of persons living in the area who are five years old or younger.
    string Child = 8;
    // The number and percentage of persons living in the area who have completed grades nine through twelve
    string Grades9to12 = 9;
    // The number and percentage of persons living in the area who have a high school diploma
    string HSDiploma = 10;
    // The number and percentage of persons living in the area who are of Hispanic origin
    string HispanicOrigin = 11;
    // The number of households in the area being profiled
    string Households = 12;
    // The number of households that are on any type of public assistance (including subsidized housing, welfare, aid to dependent children, etc.)
    string HouseholdsPublicAssistance = 13;
    // The number of housing units in the area being profiled
    string HousingUnits = 14;
    // The number and percentage of households who earn greater than or equal to $15,000 but less than $25,000 per year
    string Income15to25k = 15;
    // The number and percentage of households who earn greater than or equal to $25,000 but less than $50,000 per year
    string Income25to50k = 16;
    // The number and percentage of households who earn greater than or equal to $50,000 per year but less than $75,000 per year
    string Income50to75k = 17;
    // The number and percentage of households who earn greater than or equal to $75,000 per year
    string Income75kPlus = 18;
    // The number and percentage of households who earn less than $15,000 per year
    string IncomeLess15k = 19;
    // The percentage of the total area that is land (not water). This is calculated using the sum of the land areas of the Census Block Groups (CBG) within the selected radius
    string LandArea = 20;
    // The number and percentage of persons living in the area who have less than a ninth grade education
    string Less9thGrade = 21;
    // The number and percentage of persons living in the area that are seventeen years old or younger
    string Minors = 22;
    // The number and percentage of persons living in the area who are not included in the above classifications or are multiracial
    string OtherMultiracial = 23;
    // The percentage of the population of the given area that is minority. The field is calculated by subtracting the number of persons who are white (and not of Hispanic origin) from the total persons. This number is then divided by the total persons and multiplied by one hundred to determine the percentage.
    string PercentMinority = 24;
    // The number of people in the selected area that are below the poverty level
    string PersonsBelowPovertyLevel = 25;
    // The number of persons per square mile in the area being profiled. This field is the ratio of total persons (displayed in the Total Persons field) to total land area (displayed in the Land Area field)
    string PopulationDensity = 26;
    // The number of miles, in any direction, from the center point of the facility that is included in the demographic profile
    string Radius = 27;
    // The number and percentage of persons living in the area who are sixty-five years old or older
    string Seniors = 28;
    // The number and percentage of persons living in the area who have some college or a two year college degree
    string SomeCollege = 29;
    // The total number of persons that reside in the area being profiled. The total population within the selected radius of a facility is one indicator of the facility's surrounding environment and provides context for other facility indicators
    string TotalPersons = 30;
    // The percentage of the total area that is water (not land). This is calculated using the sum of the water areas of the Census Block Groups (CBG) within the selected radius
    string WaterArea = 31;
    // The number and percentage of persons living in the area who are white
    string White = 32;
}

message DfrF_EnforcementComplianceSummaries {
    repeated dfrF_ProgramDate ProgramDates = 1;
    repeated dfr4_Summaries Summaries = 2;
}

message DfrF_ProgramDate {
    // End date for the date range of interest. Formatted as mm/dd/yyyy
    string EndDate = 1;
    // The source database for the EPA programs information.
    string Program = 2;
    // ?? - mm/dd/yyyy
    string StartDate3Yr = 3;
    // ?? - mm/dd/yyyy
    string StartDate5Yr = 4;
}

message DfrG_Action {
    // Air Facility System (AFS) ID.
    string ActionDate = 1;
    // Text description of type of enforcement action. The type of action and description are designated differently in each system, but may be equivalent.
    string ActionType = 2;
    // The lead agency (e.g., EPA, State) conducting the inspection
    string LeadAgency = 3;
    // ??
    string PenaltyAmount = 4;
    // ??
    string PenaltyDesc = 5;
    // Unique Identifier assigned by EPA.
    string SourceID = 6;
    // The name of the statute associated with each of the permits and identifiers linked to the facility: 
    // - CAA = the Clean Air Act
    // - CWA = the Clean Water Act
    // - RCRA = the Resource Conservation and Recovery Act
    // - EP313 = the Emergency Planning and Community Right-to-Know Act, Section 313 (also known as the Toxics Release Inventory Program)
    // - TSCA = the Toxic Substances Control Act
    // - SDWA = the Safe Drinking Water Act
    string Statute = 7;
}

message DfrG_CopperSamples {
    string CU90 = 1;
    string CU90Dates = 2;
    string CU90Units = 3;
    string CU90Value = 4;
}

message DfrG_FormalActions {
    repeated dfrG_Action Action = 1;
    repeated dfr4_ProgramDates ProgramDates = 2;
}

message DfrG_LeadAndCopperRule5Yr {
    repeated dfrG_CopperSamples CopperSamples = 1;
    string CuALE = 2;
    string CuALEUnits = 3;
    string CuALEValue = 4;
    string CuSampleDates = 5;
    string CuViol = 6;
    string LeadAndCopperViol = 7;
    string LeadCopperRuleHealthBasedViol = 8;
    repeated dfrG_LeadSamples LeadSamples = 9;
    string PbALE = 10;
    string PbALEUnits = 11;
    string PbALEValue = 12;
    string PbSampleDates = 13;
    string PbViol = 14;
    string RuleCode350Viol = 15;
    // Unique Identifier assigned by EPA.
    string SourceID = 16;
    string iCU90 = 17;
    string iPB90 = 18;
}

message DfrG_LeadSamples {
    string PB90 = 1;
    string PB90Dates = 2;
    string PB90Units = 3;
    string PB90Value = 4;
}

message DfrH_Action {
    // The user-created name for an activity.
    string ActivityName = 1;
    // Air Facility System (AFS) ID.
    string CaseID = 2;
    // A unique number identifying the enforcement action. For EPA civil cases, these numbers begin with either the two digit EPA Region Code, "HQ" (headquarters initiated cases), and "EF" or "WF" (Eastern or Western Field Office CAA Mobile Source Program cases); followed by the fiscal year in which the action was initiated. After the fiscal year there is a sequence number. State NPDES civil cases start with the two character post abbreviation, followed by a sequence number.
    // For criminal cases, the ID was generated in ECHO based on the following format: CR [prosecution_summary_id]. The source of the Prosecution Summary ID is the Summary of Criminal Prosecutions database.
    string CaseName = 3;
    // The unique code that identifies a type of compliance event or enforcement action.
    string CaseType = 4;
    string CompActionCost = 5;
    // For civil judicial Enforcement Actions, this amount is the Federal penalty assessed against the defendant(s) as specified in the final entered Consent Decree or Court Order.  For administrative Enforcement Actions, it is the penalty assessed in the Consent/Final Order.  It does not include the amount of the penalty mitigated due to a SEP or the amount shared with the state or local entities.  Interest payments associated with a penalty paid over time are not to be included in this amount.  It is the total Federal amount for each Final Order.
    string FederalPenalty = 6;
    // For administrative cases, this field indicates the date that the complaint or Administrative Order (AO) was signed by the appropriate authority and issued to the respondent. For judicial cases, this field indicates the date that the complaint was filed with the Clerk of the Court.
    string IssueDate = 7;
    // The unique identifier for the Section(s) of law violated and cited in the activity.
    string LawSectionCode = 8;
    // The lead agency (e.g., EPA, State) conducting the inspection
    string LeadAgency = 9;
    string NumberSettlements = 10;
    // The total value of all SEPs for all settlements at the enforcement case.
    string SepCost = 11;
    // For federal judicial actions, this is the date the settlement document is signed by the presiding judge and entered by the Clerk of the Court. At that point, the settlement becomes a binding court order. For administrative actions, this is the date that the final order is signed and issued by the enforcement authority.
    string SettlementDate = 12;
    string StateLocalPenalty = 13;
    // Air Facility System (AFS) ID.
    string StatuteCode = 14;
    // The amount of the cost recovery ordered or agreed to be repaid by the responsible parties, cost recovery whole dollar amount awarded by the Court and due the the Superfund. For administrative cases, it is the cost recovery whole dollar amount of the Final Order.
    string TotalCostRecovery = 15;
}

message DfrH_ICISFormalActions {
    repeated dfrH_Action Action = 1;
    repeated dfr4_ProgramDates ProgramDates = 2;
}

message DfrI_InspectionEnforcementSummary {
    repeated dfr4_ProgramDates ProgramDates = 1;
    repeated dfrI_Source Source = 2;
}

message DfrI_Source {
    // The date on which the most recent inspection of the facility took place
    string DateLastInspection = 1;
    // The EPA data system in which permit and facility records are kept. EPA's Facility Registry System (FRS) links all program database records (such as permit IDs and IDs facilities use in reporting to EPA) together. The following list describes the individual data systems that are linked to from the detailed facility report: 
    // 
    // - AFS: Air Facility System for Clean Air Act stationary source programs.
    // - ICP: Integrated Compliance Information System for Clean Water Act programs monitoring National Pollutant Discharge Elimination System (NPDES) permits.
    // - RCR: Resource Conservation and Recovery Act Information System (RCRAInfo) for tracking the Resource Conservation and Recovery Act (RCRA) programs.
    // - NCDB: National Compliance Database System for monitoring national performance of the Toxic Substance Control Act (TSCA); the Emergency Planning and Right-to-Know Act, Section 313 (EPCRA); the Asbestos Hazard Emergency Response (AHERA); and the Federal Insecticide, Fungicide, and Rodenticide Act (FIFRA).
    // - TRI: Toxics Release Inventory for Emergency Planning and Community Right-to-Know Act, Section 313 submissions.
    // - NEI: National Emissions Inventory database contains information on stationary and mobile sources that emit criteria air pollutants and their precursors, as well as hazardous air pollutants (HAPs). The database includes estimates of annual emissions, by source, of air pollutants in each area of the country, on an annual basis.
    // - TSCA: Toxic Substances Control Act addressing the production, importation, use, and disposal of specific chemicals.
    string EPASystem = 2;
    // The number of formal enforcement actions that have been taken against the facility, under the corresponding statute, within the last five years.
    string FormalEnfActCount = 3;
    // The total number of inspections pertaining to compliance of the designated statute
    string InspectionCount = 4;
    // Unique Identifier assigned by EPA.
    string SourceID = 5;
    // The name of the statute associated with each of the permits and identifiers linked to the facility: 
    // - CAA = the Clean Air Act
    // - CWA = the Clean Water Act
    // - RCRA = the Resource Conservation and Recovery Act
    // - EP313 = the Emergency Planning and Community Right-to-Know Act, Section 313 (also known as the Toxics Release Inventory Program)
    // - TSCA = the Toxic Substances Control Act
    // - SDWA = the Safe Drinking Water Act
    string Statute = 6;
    // The total dollar amount of either assessed or final penalties within the five year time period
    string TotalPenalties = 7;
}

message DfrJ_MapOutput {
    // The latitude of the facility in degrees, to four decimal places.
    string CenterLatitude = 1;
    // The longitude of the facility in degrees, to four decimal places.
    string CenterLongitude = 2;
    // URL where all the icons are located
    string IconBaseURL = 3;
    repeated dfr4_MapData MapData = 4;
    // Combine this URL with the PUC to get popup info
    string PopUpBaseURL = 5;
}

message DfrK_Notice {
    // CAA Informal Enforcement Actions (AFS National Action Types):
    // - 5A = EPA pre-NOV letter sent 
    // - 6A = EPA NOV issued 
    // - 7C = State NOV issued 
    // - RCRA = Informal Enforcement Actions (RCRAInfo Action Series): Any code in the following series
    // - 120 = Written Informal 
    // - 190 = Combination Informal 
    // 
    // Note: The types of action noted above are nationally defined by EPA. Other types of action shown in the report are defined or maintained by EPA regions or state agencies.
    string ActionType = 1;
    // The EPA data system in which permit and facility records are kept. EPA's Facility Registry System (FRS) links all program database records (such as permit IDs and IDs facilities use in reporting to EPA) together. The following list describes the individual data systems that are linked to from the detailed facility report: 
    // 
    // - AFS: Air Facility System for Clean Air Act stationary source programs.
    // - ICP: Integrated Compliance Information System for Clean Water Act programs monitoring National Pollutant Discharge Elimination System (NPDES) permits.
    // - RCR: Resource Conservation and Recovery Act Information System (RCRAInfo) for tracking the Resource Conservation and Recovery Act (RCRA) programs.
    // - NCDB: National Compliance Database System for monitoring national performance of the Toxic Substance Control Act (TSCA); the Emergency Planning and Right-to-Know Act, Section 313 (EPCRA); the Asbestos Hazard Emergency Response (AHERA); and the Federal Insecticide, Fungicide, and Rodenticide Act (FIFRA).
    // - TRI: Toxics Release Inventory for Emergency Planning and Community Right-to-Know Act, Section 313 submissions.
    // - NEI: National Emissions Inventory database contains information on stationary and mobile sources that emit criteria air pollutants and their precursors, as well as hazardous air pollutants (HAPs). The database includes estimates of annual emissions, by source, of air pollutants in each area of the country, on an annual basis.
    // - TSCA: Toxic Substances Control Act addressing the production, importation, use, and disposal of specific chemicals.
    string EPASystem = 2;
    // The number of the Enforcement Action as referred to by the Court where the action was filed; the Enforcement Action Identifier.
    string EnfIdentifier = 3;
    // The lead agency (e.g., EPA, State) conducting the inspection
    string LeadAgency = 4;
    // The date of the the most recent informal enforcement action issued to the facility.
    string NoticeDate = 5;
    // Unique Identifier assigned by EPA.
    string SourceID = 6;
    // The name of the statute associated with each of the permits and identifiers linked to the facility: 
    // - CAA = the Clean Air Act
    // - CWA = the Clean Water Act
    // - RCRA = the Resource Conservation and Recovery Act
    // - EP313 = the Emergency Planning and Community Right-to-Know Act, Section 313 (also known as the Toxics Release Inventory Program)
    // - TSCA = the Toxic Substances Control Act
    // - SDWA = the Safe Drinking Water Act
    string Statute = 7;
}

message DfrK_Notices {
    repeated dfrK_Notice Notice = 1;
    repeated dfr4_ProgramDates ProgramDates = 2;
}

message DfrL_RCRACompliance {
    // Date indicating the end of Quarter 10.
    string Qtr10End = 1;
    // Date indicating the beginning of Quarter 10.
    string Qtr10Start = 2;
    // Date indicating the end of Quarter 11.
    string Qtr11End = 3;
    // Date indicating the beginning of Quarter 11.
    string Qtr11Start = 4;
    // Date indicating the end of Quarter 12.
    string Qtr12End = 5;
    // Date indicating the beginning of Quarter 12.
    string Qtr12Start = 6;
    // Date indicating the end of Quarter 1.
    string Qtr1End = 7;
    // Date indicating the beginning of Quarter 1.
    string Qtr1Start = 8;
    // Date indicating the end of Quarter 2.
    string Qtr2End = 9;
    // Date indicating the beginning of Quarter 2.
    string Qtr2Start = 10;
    // Date indicating the end of Quarter 3.
    string Qtr3End = 11;
    // Date indicating the beginning of Quarter 3.
    string Qtr3Start = 12;
    // Date indicating the end of Quarter 4.
    string Qtr4End = 13;
    // Date indicating the beginning of Quarter 4.
    string Qtr4Start = 14;
    // Date indicating the end of Quarter 5.
    string Qtr5End = 15;
    // Date indicating the beginning of Quarter 5.
    string Qtr5Start = 16;
    // Date indicating the end of Quarter 6.
    string Qtr6End = 17;
    // Date indicating the beginning of Quarter 6.
    string Qtr6Start = 18;
    // Date indicating the end of Quarter 7.
    string Qtr7End = 19;
    // Date indicating the beginning of Quarter 7.
    string Qtr7Start = 20;
    // Date indicating the end of Quarter 8.
    string Qtr8End = 21;
    // Date indicating the beginning of Quarter 8.
    string Qtr8Start = 22;
    // Date indicating the end of Quarter 9.
    string Qtr9End = 23;
    // Date indicating the beginning of Quarter 9.
    string Qtr9Start = 24;
    repeated dfrL_Source Sources = 25;
}

message DfrL_Source {
    dfr0_Qtr12Status Status = 1;
    repeated dfrL_Violations Violations = 2;
}

message DfrL_Violations {
    // Identifies the lead agency (e.g., EPA, State) conducting the inspection. 
    // Values: State abbreviation or "EPA"
    string Agency = 1;
    // The relevant status for the quarter.
    string Qtr10Status = 2;
    // The relevant status for the quarter.
    string Qtr11Status = 3;
    // The relevant status for the quarter.
    string Qtr12Status = 4;
    // The relevant status for the quarter.
    string Qtr1Status = 5;
    // The relevant status for the quarter.
    string Qtr2Status = 6;
    // The relevant status for the quarter.
    string Qtr3Status = 7;
    // The relevant status for the quarter.
    string Qtr4Status = 8;
    // The relevant status for the quarter.
    string Qtr5Status = 9;
    // The relevant status for the quarter.
    string Qtr6Status = 10;
    // The relevant status for the quarter.
    string Qtr7Status = 11;
    // The relevant status for the quarter.
    string Qtr8Status = 12;
    // The relevant status for the quarter.
    string Qtr9Status = 13;
    // Unique Identifier assigned by EPA.
    string SourceID = 14;
    // A designation of the type or nature of the violation.
    string Violation = 15;
    string ViolationType = 16;
}

message DfrM_RulesViolated {
    string DrinkingWaterRule = 1;
    // The relevant status for the quarter.
    string Qtr10Status = 2;
    // The relevant status for the quarter.
    string Qtr11Status = 3;
    // The relevant status for the quarter.
    string Qtr12Status = 4;
    // The relevant status for the quarter.
    string Qtr13Status = 5;
    // The relevant status for the quarter.
    string Qtr1Status = 6;
    // The relevant status for the quarter.
    string Qtr2Status = 7;
    // The relevant status for the quarter.
    string Qtr3Status = 8;
    // The relevant status for the quarter.
    string Qtr4Status = 9;
    // The relevant status for the quarter.
    string Qtr5Status = 10;
    // The relevant status for the quarter.
    string Qtr6Status = 11;
    // The relevant status for the quarter.
    string Qtr7Status = 12;
    // The relevant status for the quarter.
    string Qtr8Status = 13;
    // The relevant status for the quarter.
    string Qtr9Status = 14;
    // Unique Identifier assigned by EPA.
    string SourceID = 15;
}

message DfrM_SDWISCompliance {
    // Date indicating the end of Quarter 10.
    string Qtr10End = 1;
    // Date indicating the beginning of Quarter 10.
    string Qtr10Start = 2;
    // Date indicating the end of Quarter 11.
    string Qtr11End = 3;
    // Date indicating the beginning of Quarter 11.
    string Qtr11Start = 4;
    // Date indicating the end of Quarter 12.
    string Qtr12End = 5;
    // Date indicating the beginning of Quarter 12.
    string Qtr12Start = 6;
    // Date indicating the end of Quarter 13.
    string Qtr13End = 7;
    // Date indicating the beginning of Quarter 13.
    string Qtr13Start = 8;
    // Date indicating the end of Quarter 1.
    string Qtr1End = 9;
    // Date indicating the beginning of Quarter 1.
    string Qtr1Start = 10;
    // Date indicating the end of Quarter 2.
    string Qtr2End = 11;
    // Date indicating the beginning of Quarter 2.
    string Qtr2Start = 12;
    // Date indicating the end of Quarter 3.
    string Qtr3End = 13;
    // Date indicating the beginning of Quarter 3.
    string Qtr3Start = 14;
    // Date indicating the end of Quarter 4.
    string Qtr4End = 15;
    // Date indicating the beginning of Quarter 4.
    string Qtr4Start = 16;
    // Date indicating the end of Quarter 5.
    string Qtr5End = 17;
    // Date indicating the beginning of Quarter 5.
    string Qtr5Start = 18;
    // Date indicating the end of Quarter 6.
    string Qtr6End = 19;
    // Date indicating the beginning of Quarter 6.
    string Qtr6Start = 20;
    // Date indicating the end of Quarter 7.
    string Qtr7End = 21;
    // Date indicating the beginning of Quarter 7.
    string Qtr7Start = 22;
    // Date indicating the end of Quarter 8.
    string Qtr8End = 23;
    // Date indicating the beginning of Quarter 8.
    string Qtr8Start = 24;
    // Date indicating the end of Quarter 9.
    string Qtr9End = 25;
    // Date indicating the beginning of Quarter 9.
    string Qtr9Start = 26;
    repeated dfrM_Source Sources = 27;
}

message DfrM_Source {
    repeated dfrM_RulesViolated RulesViolated = 1;
    dfr0_Qtr13Status Status = 2;
}

message DfrN_SanitarySurvey {
    // Identifies the lead agency (e.g., EPA, State) conducting the inspection. 
    // Values: State abbreviation or "EPA"
    string Agency = 1;
    string DataVerification = 2;
    string Distribution = 3;
    string Financial = 4;
    string FinishedWaterStorage = 5;
    string ManagementOperation = 6;
    string OperatorCompliance = 7;
    string OtherEvaluation = 8;
    string Pumps = 9;
    string Security = 10;
    string Source = 11;
    // Unique Identifier assigned by EPA.
    string SourceID = 12;
    string Treatment = 13;
    // Date of the sanitary survey.
    string VisitDate = 14;
    string VisitType = 15;
}

message DfrN_SanitarySurveys {
    repeated dfrN_Source Sources = 1;
}

message DfrN_Source {
    repeated dfrN_SanitarySurvey SanitarySurvey = 1;
}

message DfrO_SiteVisit {
    // Identifies the lead agency (e.g., EPA, State) conducting the inspection. 
    // Values: State abbreviation or "EPA"
    string Agency = 1;
    string DataVerification = 2;
    string Distribution = 3;
    string Financial = 4;
    string FinishedWaterStorage = 5;
    string ManagementOperation = 6;
    string OperatorCompliance = 7;
    string OtherEvaluation = 8;
    string Pumps = 9;
    string Security = 10;
    string Source = 11;
    // Unique Identifier assigned by EPA.
    string SourceID = 12;
    string Treatment = 13;
    // Date of the sanitary survey.
    string VisitDate = 14;
    // Reason for the visit to the water system.
    string VisitReason = 15;
}

message DfrO_SiteVisits {
    repeated dfrO_Source Sources = 1;
}

message DfrO_Source {
    repeated dfrO_SiteVisit SiteVisit = 1;
}

message DfrP_SpatialMetadata {
    // ??
    string CalculatedAccuracy = 1;
    // ??
    string CollectionMethod = 2;
    // ??
    string CoordinateSourceSystem = 3;
    // ??
    string CoordinateSourceSystemId = 4;
    // The latitude of the facility or permit holder as maintained in each data system.
    string Latitude83 = 5;
    // The longitude of the facility or permit holder as maintained in each data system
    string Longitude83 = 6;
    // ??
    string ReferencePoint = 7;
    // An internal 12-digit Facility Registry Service (FRS) tracking number used to tie all facility data together in EPA regulatory program databases.
    string RegistryID = 8;
}

message DfrQ_TRIHistory {
    repeated dfre_Source Sources = 1;
}

message DfrR_Chemicals {
    // The TRI chemical to which the data in this row applies.
    string ChemicalName = 1;
    // The total pounds either released to air, discharged to surface water, injected underground, landfilled on-site, or transferred off-site for disposal or to a POTW.
    string Year1Pounds = 2;
    // The total pounds either released to air, discharged to surface water, injected underground, landfilled on-site, or transferred off-site for disposal or to a POTW.
    string Year2Pounds = 3;
    // The total pounds either released to air, discharged to surface water, injected underground, landfilled on-site, or transferred off-site for disposal or to a POTW.
    string Year3Pounds = 4;
    // The total pounds either released to air, discharged to surface water, injected underground, landfilled on-site, or transferred off-site for disposal or to a POTW.
    string Year4Pounds = 5;
    // The total pounds either released to air, discharged to surface water, injected underground, landfilled on-site, or transferred off-site for disposal or to a POTW.
    string Year5Pounds = 6;
    // The total pounds either released to air, discharged to surface water, injected underground, landfilled on-site, or transferred off-site for disposal or to a POTW.
    string Year6Pounds = 7;
    // The total pounds either released to air, discharged to surface water, injected underground, landfilled on-site, or transferred off-site for disposal or to a POTW.
    string Year7Pounds = 8;
    // The total pounds either released to air, discharged to surface water, injected underground, landfilled on-site, or transferred off-site for disposal or to a POTW.
    string Year8Pounds = 9;
    // The total pounds either released to air, discharged to surface water, injected underground, landfilled on-site, or transferred off-site for disposal or to a POTW.
    string Year9Pounds = 10;
}

message DfrR_Header {
    string Year1 = 1;
    string Year2 = 2;
    string Year3 = 3;
    string Year4 = 4;
    string Year5 = 5;
    string Year6 = 6;
    string Year7 = 7;
    string Year8 = 8;
    string Year9 = 9;
}

message DfrR_TRIReleases {
    repeated dfrR_Chemicals Chemicals = 1;
    repeated dfrR_Header Header = 2;
}

message DfrS_Tribes {
    // Displays Clean Air Act stationary source program subpart designation, Clean Water Act-NPDES permit component(s), and/or other Resource Conservation and Recovery Act designations, if any.
    string AreaName = 1;
    // Air Facility System (AFS) ID.
    string DistanceToArea = 2;
    // This is the EPA Identifier for substances.
    string EPAId = 3;
    // Air Facility System (AFS) ID.
    string TribeName = 4;
}

message DfrT_ViolationsEnforcementActions {
    repeated dfrd_Source Sources = 1;
}

message DfrU_Source {
    // Displays "Y" if the waterbody in which the facility resides is designated for aquatic life use. The data are from the ATTAINS database.
    string AttainsAquaticLifeUseFlg = 1;
    // The impairment class or category of the waterbody in which the facility is permitted to discharge directly. The data are from the ATTAINS database:
    // - 5  = Impaired: TMDL needed. Available information indicates that at least one designated use is not being supported and a TMDL is needed (also known as the 303(d) listed waters).
    // - 4  = Impaired: TMDL not needed. Available information indicates that at least one designated use is not being supported, but a TMDL is not needed (see subcategories).
    // - 4a = TMDL completed. A TMDL has been completed, but impairment still exists.
    // - 4b = TMDL alternative. Impairment is being addressed by a method other than a TMDL (e.g., stream bank improvements).
    // - 4c = Non-pollutant causes. Cause of impairment is not a pollutant (e.g., habitat destruction).
    string AttainsAuCategory = 2;
    // Lists all groups of pollutants or stressors that are causing impairment in the assessed waterbody. The data are from the ATTAINS database.
    string AttainsCauseGroups = 3;
    // Displays "Y" if the waterbody in which the facility resides is designated for exceptional use. The data are from the ATTAINS database.
    string AttainsExceptnlUseFlg = 4;
    // Displays "Y" if the waterbody in which the facility resides is designated for recreational use. The data are from the ATTAINS database.
    string AttainsRecreationUseFlg = 5;
    // Displays "Y" if the waterbody in which the facility resides is designated for shellfish use. The data are from the ATTAINS database.
    string AttainsShellfishUseFlg = 6;
    // Displays "Y" if the facility is located on or near a waterbody with a beach closure within the last two years.
    string BeachCloseLast2yrsFlg = 7;
    // Displays "Y" if the facility is located on or near a waterbody with a beach closure within the last year.
    string BeachCloseLastYearFlg = 8;
    string CSS = 9;
    // The number of discharge outfalls at points prior to the treatment plant.
    string CWPCsoOutfalls = 10;
    // The EPA data system in which permit and facility records are kept. EPA's Facility Registry System (FRS) links all program database records (such as permit IDs and IDs facilities use in reporting to EPA) together. The following list describes the individual data systems that are linked to from the detailed facility report: 
    // 
    // - AFS: Air Facility System for Clean Air Act stationary source programs.
    // - ICP: Integrated Compliance Information System for Clean Water Act programs monitoring National Pollutant Discharge Elimination System (NPDES) permits.
    // - RCR: Resource Conservation and Recovery Act Information System (RCRAInfo) for tracking the Resource Conservation and Recovery Act (RCRA) programs.
    // - NCDB: National Compliance Database System for monitoring national performance of the Toxic Substance Control Act (TSCA); the Emergency Planning and Right-to-Know Act, Section 313 (EPCRA); the Asbestos Hazard Emergency Response (AHERA); and the Federal Insecticide, Fungicide, and Rodenticide Act (FIFRA).
    // - TRI: Toxics Release Inventory for Emergency Planning and Community Right-to-Know Act, Section 313 submissions.
    // - NEI: National Emissions Inventory database contains information on stationary and mobile sources that emit criteria air pollutants and their precursors, as well as hazardous air pollutants (HAPs). The database includes estimates of annual emissions, by source, of air pollutants in each area of the country, on an annual basis.
    // - TSCA: Toxic Substances Control Act addressing the production, importation, use, and disposal of specific chemicals.
    string EPASystem = 11;
    string EsaAquaticSpeciesFlg = 12;
    string HUC8 = 13;
    string HUC8Name = 14;
    // Field indicates if the permit discharges directly into category 4 or 5 impaired waters.
    string ImpairedWaters = 15;
    // The name of the waterbody from the Geographic Names Information System (GNIS) database in which the facility is permitted to discharge directly.
    string RadGnisName = 16;
    // A nationally unique and permanent identifier for the waterbody, assigned by the US Geological Survey.
    string RadReachcode = 17;
    // The name of the river, lake, stream, or estuary that receives runoff from the facility.
    string ReceivingWaters = 18;
    // Unique Identifier assigned by EPA.
    string SourceID = 19;
    string WBD12 = 20;
    string WBD12Name = 21;
}

message DfrU_WaterQuality {
    repeated dfrU_Source Sources = 1;
}

message DfrV_ComplianceHistory {
    repeated dfrV_Inspection Inspection = 1;
    repeated dfr4_ProgramDates ProgramDates = 2;
}

message DfrV_Inspection {
    // Indicates whether a Corrective Measure Study has been recommended.
    string CMSFlag = 1;
    // The date of the listed inspection
    string Date = 2;
    // The EPA data system in which permit and facility records are kept. EPA's Facility Registry System (FRS) links all program database records (such as permit IDs and IDs facilities use in reporting to EPA) together. The following list describes the individual data systems that are linked to from the detailed facility report: 
    // 
    // - AFS: Air Facility System for Clean Air Act stationary source programs.
    // - ICP: Integrated Compliance Information System for Clean Water Act programs monitoring National Pollutant Discharge Elimination System (NPDES) permits.
    // - RCR: Resource Conservation and Recovery Act Information System (RCRAInfo) for tracking the Resource Conservation and Recovery Act (RCRA) programs.
    // - NCDB: National Compliance Database System for monitoring national performance of the Toxic Substance Control Act (TSCA); the Emergency Planning and Right-to-Know Act, Section 313 (EPCRA); the Asbestos Hazard Emergency Response (AHERA); and the Federal Insecticide, Fungicide, and Rodenticide Act (FIFRA).
    // - TRI: Toxics Release Inventory for Emergency Planning and Community Right-to-Know Act, Section 313 submissions.
    // - NEI: National Emissions Inventory database contains information on stationary and mobile sources that emit criteria air pollutants and their precursors, as well as hazardous air pollutants (HAPs). The database includes estimates of annual emissions, by source, of air pollutants in each area of the country, on an annual basis.
    // - TSCA: Toxic Substances Control Act addressing the production, importation, use, and disposal of specific chemicals.
    string EPASystem = 3;
    // For CAA, includes results of source or performance stack tests or Title V certification review results when applicable; for CWA and RCRA, includes whether violations or compliance issues were found during an inspection, if entered into an EPA system
    string Finding = 4;
    // A description of the type of inspection undertaken
    string InspectionType = 5;
    // The lead agency (e.g., EPA, State) conducting the inspection
    string LeadAgency = 6;
    // Unique Identifier assigned by EPA.
    string SourceID = 7;
    // The name of the statute associated with each of the permits and identifiers linked to the facility: 
    // - CAA = the Clean Air Act
    // - CWA = the Clean Water Act
    // - RCRA = the Resource Conservation and Recovery Act
    // - EP313 = the Emergency Planning and Community Right-to-Know Act, Section 313 (also known as the Toxics Release Inventory Program)
    // - TSCA = the Toxic Substances Control Act
    // - SDWA = the Safe Drinking Water Act
    string Statute = 8;
}

message DfrW1_Results {
    dfrF_EnforcementComplianceSummaries EnforcementComplianceSummaries = 1;
    // Field to record messages (typically performance-related) about packet processing
    string Message = 2;
}

message DfrW2_Results {
    dfrG_FormalActions FormalActions = 1;
    // Field to record messages (typically performance-related) about packet processing
    string Message = 2;
}

message DfrW_Results {
    dfr7_CWA3YrCompliance CWA3YrCompliance = 1;
    // Field to record messages (typically performance-related) about packet processing
    string Message = 2;
}

message DfrY_Results {
    dfrE_Demographics Demographics = 1;
    // Field to record messages (typically performance-related) about packet processing
    string Message = 2;
}

message DfrZ_Results {
    dfrJ_MapOutput MapOutput = 1;
    // Field to record messages (typically performance-related) about packet processing
    string Message = 2;
}

message Dfra1_Results {
    dfrI_InspectionEnforcementSummary InspectionEnforcementSummary = 1;
    // Field to record messages (typically performance-related) about packet processing
    string Message = 2;
}

message Dfra2_Results {
    // Field to record messages (typically performance-related) about packet processing
    string Message = 1;
    dfr4_NAICS NAICS = 2;
}

message Dfra_Results {
    dfrH_ICISFormalActions ICISFormalActions = 1;
    // Field to record messages (typically performance-related) about packet processing
    string Message = 2;
}

message Dfrc_AFSProgram {
    string AirPrograms = 1;
    // The relevant status for the quarter.
    string Qtr10Status = 2;
    // The relevant status for the quarter.
    string Qtr11Status = 3;
    // The relevant status for the quarter.
    string Qtr12Status = 4;
    // The relevant status for the quarter.
    string Qtr1Status = 5;
    // The relevant status for the quarter.
    string Qtr2Status = 6;
    // The relevant status for the quarter.
    string Qtr3Status = 7;
    // The relevant status for the quarter.
    string Qtr4Status = 8;
    // The relevant status for the quarter.
    string Qtr5Status = 9;
    // The relevant status for the quarter.
    string Qtr6Status = 10;
    // The relevant status for the quarter.
    string Qtr7Status = 11;
    // The relevant status for the quarter.
    string Qtr8Status = 12;
    // The relevant status for the quarter.
    string Qtr9Status = 13;
    // Unique Identifier assigned by EPA.
    string SourceID = 14;
}

message Dfrc_FRVProgramsPollutant {
    // Identifies the lead agency (e.g., EPA, State) conducting the inspection. 
    // Values: State abbreviation or "EPA"
    string Agency = 1;
    string AirPollutants = 2;
    string AirPrograms = 3;
    // Air Facility System (AFS) ID.
    string ERPType = 4;
    // The relevant status for the quarter.
    string Qtr10Status = 5;
    // The relevant status for the quarter.
    string Qtr11Status = 6;
    // The relevant status for the quarter.
    string Qtr12Status = 7;
    // The relevant status for the quarter.
    string Qtr1Status = 8;
    // The relevant status for the quarter.
    string Qtr2Status = 9;
    // The relevant status for the quarter.
    string Qtr3Status = 10;
    // The relevant status for the quarter.
    string Qtr4Status = 11;
    // The relevant status for the quarter.
    string Qtr5Status = 12;
    // The relevant status for the quarter.
    string Qtr6Status = 13;
    // The relevant status for the quarter.
    string Qtr7Status = 14;
    // The relevant status for the quarter.
    string Qtr8Status = 15;
    // The relevant status for the quarter.
    string Qtr9Status = 16;
    // Unique Identifier assigned by EPA.
    string SourceID = 17;
}

message Dfrc_HPVProgramsPollutant {
    // Identifies the lead agency (e.g., EPA, State) conducting the inspection. 
    // Values: State abbreviation or "EPA"
    string Agency = 1;
    string AirPollutants = 2;
    string AirPrograms = 3;
    // Air Facility System (AFS) ID.
    string ERPType = 4;
    // The relevant status for the quarter.
    string Qtr10Status = 5;
    // The relevant status for the quarter.
    string Qtr11Status = 6;
    // The relevant status for the quarter.
    string Qtr12Status = 7;
    // The relevant status for the quarter.
    string Qtr1Status = 8;
    // The relevant status for the quarter.
    string Qtr2Status = 9;
    // The relevant status for the quarter.
    string Qtr3Status = 10;
    // The relevant status for the quarter.
    string Qtr4Status = 11;
    // The relevant status for the quarter.
    string Qtr5Status = 12;
    // The relevant status for the quarter.
    string Qtr6Status = 13;
    // The relevant status for the quarter.
    string Qtr7Status = 14;
    // The relevant status for the quarter.
    string Qtr8Status = 15;
    // The relevant status for the quarter.
    string Qtr9Status = 16;
    // Unique Identifier assigned by EPA.
    string SourceID = 17;
}

message Dfrc_Source {
    repeated dfrc_AFSProgram AFSPrograms = 1;
    repeated dfrc_FRVProgramsPollutant FRVProgramsPollutants = 2;
    dfr0_Qtr12Status HPVHistory = 3;
    repeated dfrc_HPVProgramsPollutant HPVProgramsPollutants = 4;
    dfr0_Qtr12Status PermitHistory = 5;
}

message Dfrd_EnforcementActions {
    // Identifies the lead agency (e.g., EPA, State) conducting the inspection. 
    // Values: State abbreviation or "EPA"
    string Agency = 1;
    string EnforcementActionTypeDesc = 2;
    // Date of Enforcement.
    string EnforcementDate = 3;
    string EnforcementId = 4;
    // A text description of the Enforcement Action type.
    string EnforcementType = 5;
}

message Dfrd_Source {
    repeated dfrd_Violations Violations = 1;
}

message Dfrd_Violations {
    // The beginning date of the time period during which a violation took place. For some violations this period corresponds to a regular water quality monitoring period, such as a month or quarter; in other cases it may initially be open-ended, and remain that way until the violation is resolved, i.e. until EPA or the state files a resolving enforcement action to indicate that either the system has returned to compliance or no further action is necessary.
    string CompliancePeriodBeginDate = 1;
    // The end date of the time period during which a violation took place. For some violations this period corresponds to a regular water quality monitoring period, such as a month or quarter; in other cases it may initially be open-ended, and remain that way until the violation is resolved, i.e. until EPA or the state files a resolving enforcement action to indicate that either the system has returned to compliance or no further action is necessary.
    string CompliancePeriodEndDate = 2;
    // City
    string ContaminantName = 3;
    repeated dfrd_EnforcementActions EnforcementActions = 4;
    string FederalMCL = 5;
    // ???
    string FederalRule = 6;
    string ResolvedDate = 7;
    // Unique Identifier assigned by EPA.
    string SourceID = 8;
    // County
    string StateMCL = 9;
    string Status = 10;
    string ViolationCategoryCode = 11;
    string ViolationCategoryDesc = 12;
    // An identifer from SDWA that uniquely identifies the violation.
    string ViolationID = 13;
    string ViolationMeasure = 14;
}

message Dfre_ReleaseYear {
    string OffSiteTransfersPOTWS = 1;
    // Total releases to land on-site (includes landfills), in pounds per year.
    string ReleasesToLand = 2;
    // Unique Identifier assigned by EPA.
    string SourceID = 3;
    // The total direct discharges to receiving streams or water bodies, in pounds per year.
    string SurfaceWaterDischarges = 4;
    // The total fugitive (non-point air emissions) and stack or point air emissions, in pounds per year.
    string TotalAirEmissions = 5;
    // The total amount, in pounds per year, transferred off site to Publicly Owned Treatment Works (POTWs) and other off-site locations.
    string TotalOffSiteReleases = 6;
    // Total pounds per year released for Air Emissions, Surface Water Discharges, Underground Injections and Releases to Land.
    string TotalOnSiteReleases = 7;
    // Grand total for Air Emissions, Surface Water Discharges, Underground Injections, Releases to Land, On-Site Releases and Off-Site Transfers in pounds per year for all types of chemicals.
    string TotalReleasesTransfers = 8;
    // The total underground injections to wells on-site, in pounds per year.
    string UndergroundInjections = 9;
    // The calendar year of a time dimension (reporting table) record.
    string Year = 10;
}

message Dfre_Source {
    repeated dfre_ReleaseYear ReleaseYear = 1;
}

message Dfrf_Results {
    // Field to record messages (typically performance-related) about packet processing
    string Message = 1;
    dfrT_ViolationsEnforcementActions ViolationsEnforcementActions = 2;
}

message Dfrg1_Results {
    // Field to record messages (typically performance-related) about packet processing
    string Message = 1;
    repeated dfr4_Permits Permits = 2;
    dfr4_Reports Reports = 3;
}

message Dfrg2_Results {
    // Field to record messages (typically performance-related) about packet processing
    string Message = 1;
    dfr4_SIC SIC = 2;
}

message Dfrg3_Results {
    // Field to record messages (typically performance-related) about packet processing
    string Message = 1;
    dfrP_SpatialMetadata SpatialMetadata = 2;
}

message Dfrg_Results {
    // Field to record messages (typically performance-related) about packet processing
    string Message = 1;
    dfrK_Notices Notices = 2;
}

message Dfrh_Results {
    // Field to record messages (typically performance-related) about packet processing
    string Message = 1;
    dfrL_RCRACompliance RCRACompliance = 2;
}

message Dfri_Results {
    // Field to record messages (typically performance-related) about packet processing
    string Message = 1;
    dfrO_SiteVisits SiteVisits = 2;
}

message Dfrj_Results {
    // Field to record messages (typically performance-related) about packet processing
    string Message = 1;
    dfrN_SanitarySurveys SanitarySurveys = 2;
}

message Dfrk_Results {
    // Field to record messages (typically performance-related) about packet processing
    string Message = 1;
}

message Dfrl_Results {
    // Field to record messages (typically performance-related) about packet processing
    string Message = 1;
    dfrM_SDWISCompliance SDWISCompliance = 2;
}

message Dfrm_Results {
    // Field to record messages (typically performance-related) about packet processing
    string Message = 1;
    dfrQ_TRIHistory TRIHistory = 2;
}

message Dfrn_Results {
    // Field to record messages (typically performance-related) about packet processing
    string Message = 1;
    dfrR_TRIReleases TRIReleases = 2;
}

message Dfro_Results {
    // Field to record messages (typically performance-related) about packet processing
    string Message = 1;
    repeated dfrS_Tribes Tribes = 2;
}

message Dfrp_Results {
    // Field to record messages (typically performance-related) about packet processing
    string Message = 1;
    dfrU_WaterQuality WaterQuality = 2;
}

message Dfrq_Results {
    dfr5_AirCompliance AirCompliance = 1;
    // Field to record messages (typically performance-related) about packet processing
    string Message = 2;
}

message Dfrs_Results {
    dfr10_CWACSCompliance CWACSCompliance = 1;
    // Field to record messages (typically performance-related) about packet processing
    string Message = 2;
}

message Dfrt_Results {
    dfr8_CWAEffluentALRExceedences CWAEffluentALRExceedences = 1;
    // Field to record messages (typically performance-related) about packet processing
    string Message = 2;
}

message Dfru_Results {
    dfr9_CWAEffluentCompliance CWAEffluentCompliance = 1;
    // Field to record messages (typically performance-related) about packet processing
    string Message = 2;
}

message Dfrv_Results {
    dfrA_CWAPSCompliance CWAPSCompliance = 1;
    // Field to record messages (typically performance-related) about packet processing
    string Message = 2;
}

message Dfrw_Results {
    dfrB_CWARNCCompliance CWARNCCompliance = 1;
    // Field to record messages (typically performance-related) about packet processing
    string Message = 2;
}

message Dfrx_Results {
    dfrC_CWASECompliance CWASECompliance = 1;
    // Field to record messages (typically performance-related) about packet processing
    string Message = 2;
}

message Dfrz_NAICS {
    repeated dfrz_NAICSCodes NAICSCodes = 1;
}

message Dfrz_NAICSCodes {
    // The EPA data system in which permit and facility records are kept. EPA's Facility Registry System (FRS) links all program database records (such as permit IDs and IDs facilities use in reporting to EPA) together. The following list describes the individual data systems that are linked to from the detailed facility report: 
    // 
    // - AFS: Air Facility System for Clean Air Act stationary source programs.
    // - ICP: Integrated Compliance Information System for Clean Water Act programs monitoring National Pollutant Discharge Elimination System (NPDES) permits.
    // - RCR: Resource Conservation and Recovery Act Information System (RCRAInfo) for tracking the Resource Conservation and Recovery Act (RCRA) programs.
    // - NCDB: National Compliance Database System for monitoring national performance of the Toxic Substance Control Act (TSCA); the Emergency Planning and Right-to-Know Act, Section 313 (EPCRA); the Asbestos Hazard Emergency Response (AHERA); and the Federal Insecticide, Fungicide, and Rodenticide Act (FIFRA).
    // - TRI: Toxics Release Inventory for Emergency Planning and Community Right-to-Know Act, Section 313 submissions.
    // - NEI: National Emissions Inventory database contains information on stationary and mobile sources that emit criteria air pollutants and their precursors, as well as hazardous air pollutants (HAPs). The database includes estimates of annual emissions, by source, of air pollutants in each area of the country, on an annual basis.
    // - TSCA: Toxic Substances Control Act addressing the production, importation, use, and disposal of specific chemicals.
    string EPASystem = 1;
    // The North American Industry Classification System (NAICS) code
    string NAICSCode = 2;
    // The corresponding description of North American Industry Classification System (NAICS) code.
    string NAICSDesc = 3;
    // Unique Identifier assigned by EPA.
    string SourceID = 4;
}

enum Output {
    JSONP = 0;
    JSON = 1;
    XML = 2;
}

service U.S.EPAEnforcementAndComplianceHistoryOnline(ECHO)-DetailedFacilityReport(DFR)Service {
    // Detailed Facility Report Air Compliance Report Service
    // 
    // This procedure obtains data for Air Compliance in the Environmental Conditions Section of the DFR.
    rpc GetDfr_rest_servicesGet_air_compliance(GetDfr_rest_servicesGet_air_complianceRequest) returns (GetDfr_rest_servicesGet_air_complianceResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_air_compliance"
      };
    }
    // Detailed Facility Report Air Compliance Report Service
    // 
    // This procedure obtains data for Air Compliance in the Environmental Conditions Section of the DFR.
    rpc PostDfr_rest_servicesGet_air_compliance(PostDfr_rest_servicesGet_air_complianceRequest) returns (PostDfr_rest_servicesGet_air_complianceResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_air_compliance"
      };
    }
    // Detailed Facility Report Air Quality Report Service
    // 
    // This procedure obtains data for Air Quality in the Environmental Conditions Section of the DFR.
    rpc GetDfr_rest_servicesGet_air_quality(GetDfr_rest_servicesGet_air_qualityRequest) returns (GetDfr_rest_servicesGet_air_qualityResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_air_quality"
      };
    }
    // Detailed Facility Report Air Quality Report Service
    // 
    // This procedure obtains data for Air Quality in the Environmental Conditions Section of the DFR.
    rpc PostDfr_rest_servicesGet_air_quality(PostDfr_rest_servicesGet_air_qualityRequest) returns (PostDfr_rest_servicesGet_air_qualityResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_air_quality"
      };
    }
    // Detailed Facility Report 5 Year Compliance Monitoring History Service
    // 
    // This procedure obtains data for the Compliance Monitoring History (5 years) in the Enforcement and Compliance Section of the Detailed Facility report.
    rpc GetDfr_rest_servicesGet_compliance_history(GetDfr_rest_servicesGet_compliance_historyRequest) returns (GetDfr_rest_servicesGet_compliance_historyResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_compliance_history"
      };
    }
    // Detailed Facility Report 5 Year Compliance Monitoring History Service
    // 
    // This procedure obtains data for the Compliance Monitoring History (5 years) in the Enforcement and Compliance Section of the Detailed Facility report.
    rpc PostDfr_rest_servicesGet_compliance_history(PostDfr_rest_servicesGet_compliance_historyRequest) returns (PostDfr_rest_servicesGet_compliance_historyResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_compliance_history"
      };
    }
    // Detailed Facility Report Compliance Summary Service
    // 
    // This procedure obtains data for Compliance Summary Data in the Enforcement and Compliance Section of the Detailed Facility report.
    rpc GetDfr_rest_servicesGet_compliance_summary(GetDfr_rest_servicesGet_compliance_summaryRequest) returns (GetDfr_rest_servicesGet_compliance_summaryResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_compliance_summary"
      };
    }
    // Detailed Facility Report Compliance Summary Service
    // 
    // This procedure obtains data for Compliance Summary Data in the Enforcement and Compliance Section of the Detailed Facility report.
    rpc PostDfr_rest_servicesGet_compliance_summary(PostDfr_rest_servicesGet_compliance_summaryRequest) returns (PostDfr_rest_servicesGet_compliance_summaryResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_compliance_summary"
      };
    }
    // Detailed Facility Report 3 Year CWA Facility-Level Status Service
    // 
    // This procedure obtains data for the CWA Facility-Level Status section located in the Three Year Compliance Status by Quarter portion of the DFR. Valid Compliance Statuses are as follows:
    // > "In Viol" = Facility is in violation
    // > "No Viol" = No violation found
    // > "Unk" = Unknown status
    // > "SNC/Cat 1" = SNC/Category I violation found
    rpc GetDfr_rest_servicesGet_cwa_3yr_compliance(GetDfr_rest_servicesGet_cwa_3yr_complianceRequest) returns (GetDfr_rest_servicesGet_cwa_3yr_complianceResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_cwa_3yr_compliance"
      };
    }
    // Detailed Facility Report 3 Year CWA Facility-Level Status Service
    // 
    // This procedure obtains data for the CWA Facility-Level Status section located in the Three Year Compliance Status by Quarter portion of the DFR. Valid Compliance Statuses are as follows:
    // > "In Viol" = Facility is in violation
    // > "No Viol" = No violation found
    // > "Unk" = Unknown status
    // > "SNC/Cat 1" = SNC/Category I violation found
    rpc PostDfr_rest_servicesGet_cwa_3yr_compliance(PostDfr_rest_servicesGet_cwa_3yr_complianceRequest) returns (PostDfr_rest_servicesGet_cwa_3yr_complianceResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_cwa_3yr_compliance"
      };
    }
    // Detailed Facility Report CWA CSV Compliance Service
    // 
    // This procedure obtains data for the CWA Compliance Schedule Violations section of the DFR.
    rpc GetDfr_rest_servicesGet_cwa_cs_compliance(GetDfr_rest_servicesGet_cwa_cs_complianceRequest) returns (GetDfr_rest_servicesGet_cwa_cs_complianceResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_cwa_cs_compliance"
      };
    }
    // Detailed Facility Report CWA CSV Compliance Service
    // 
    // This procedure obtains data for the CWA Compliance Schedule Violations section of the DFR.
    rpc PostDfr_rest_servicesGet_cwa_cs_compliance(PostDfr_rest_servicesGet_cwa_cs_complianceRequest) returns (PostDfr_rest_servicesGet_cwa_cs_complianceResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_cwa_cs_compliance"
      };
    }
    // Detailed Facility Report CWA Effluent ALR Service
    // 
    // This procedure obtains data for the CWA Pollutant Discharge section located in the Three Year Compliance Status by Quarter portion of the DFR.
    rpc GetDfr_rest_servicesGet_cwa_eff_alr(GetDfr_rest_servicesGet_cwa_eff_alrRequest) returns (GetDfr_rest_servicesGet_cwa_eff_alrResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_cwa_eff_alr"
      };
    }
    // Detailed Facility Report CWA Effluent ALR Service
    // 
    // This procedure obtains data for the CWA Pollutant Discharge section located in the Three Year Compliance Status by Quarter portion of the DFR.
    rpc PostDfr_rest_servicesGet_cwa_eff_alr(PostDfr_rest_servicesGet_cwa_eff_alrRequest) returns (PostDfr_rest_servicesGet_cwa_eff_alrResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_cwa_eff_alr"
      };
    }
    // Detailed Facility Report CWA Effluent Compliance Service
    // 
    // This procedure obtains data for the CWA Effluent Compliance section on the DFR.
    rpc GetDfr_rest_servicesGet_cwa_eff_compliance(GetDfr_rest_servicesGet_cwa_eff_complianceRequest) returns (GetDfr_rest_servicesGet_cwa_eff_complianceResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_cwa_eff_compliance"
      };
    }
    // Detailed Facility Report CWA Effluent Compliance Service
    // 
    // This procedure obtains data for the CWA Effluent Compliance section on the DFR.
    rpc PostDfr_rest_servicesGet_cwa_eff_compliance(PostDfr_rest_servicesGet_cwa_eff_complianceRequest) returns (PostDfr_rest_servicesGet_cwa_eff_complianceResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_cwa_eff_compliance"
      };
    }
    // Detailed Facility Report CWA PSV Compliance Service
    // 
    // This procedure obtains data for the CWA Permit Schedule Violations section of the DFR.
    rpc GetDfr_rest_servicesGet_cwa_ps_compliance(GetDfr_rest_servicesGet_cwa_ps_complianceRequest) returns (GetDfr_rest_servicesGet_cwa_ps_complianceResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_cwa_ps_compliance"
      };
    }
    // Detailed Facility Report CWA PSV Compliance Service
    // 
    // This procedure obtains data for the CWA Permit Schedule Violations section of the DFR.
    rpc PostDfr_rest_servicesGet_cwa_ps_compliance(PostDfr_rest_servicesGet_cwa_ps_complianceRequest) returns (PostDfr_rest_servicesGet_cwa_ps_complianceResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_cwa_ps_compliance"
      };
    }
    // Detailed Facility Report CWA RNC Compliance Service
    // 
    // This procedure obtains data for the CWA SNC/RNC History section located in the Three Year ompliance Status by Quarter portion of the DFR. Valid Compliance Statuses are as follows.
    // > S = SNC/Category I - an enforcement action has been issued, and the facility is not meeting its compliance schedule
    // > E = SNC/Category I - effluent violations of monthly average limits (Technical Review Criteria and chronic)
    // > X = SNC/Category I - effluent violations of non-monthly average limits (Technical Review Criteria and chronic)
    // > T = SNC/Category I - compliance schedule reporting violation
    // > D = SNC/Category I - reporting violation - nonreceipt of DMR
    // > N = RNC/Category II - reportable non-compliance
    // > P = Resolved Pending - an enforcement action has been issued, and facility compliance with the action is pending final completion
    // > R = Resolved - the facility has returned to compliance with its permit conditions, either with or without issuance of an enforcement action
    // > C = Not considered in RNC/SNC based on manual review of data by state or EPA region. This manual override status is also indicated by a superscripted "m".
    // > Blank = Not considered in RNC/SNC
    // > N/A = EPA's data system is not able to determine the facility-level compliance status based upon the information available. This information may be available from a state database.
    rpc GetDfr_rest_servicesGet_cwa_rnc_compliance(GetDfr_rest_servicesGet_cwa_rnc_complianceRequest) returns (GetDfr_rest_servicesGet_cwa_rnc_complianceResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_cwa_rnc_compliance"
      };
    }
    // Detailed Facility Report CWA RNC Compliance Service
    // 
    // This procedure obtains data for the CWA SNC/RNC History section located in the Three Year ompliance Status by Quarter portion of the DFR. Valid Compliance Statuses are as follows.
    // > S = SNC/Category I - an enforcement action has been issued, and the facility is not meeting its compliance schedule
    // > E = SNC/Category I - effluent violations of monthly average limits (Technical Review Criteria and chronic)
    // > X = SNC/Category I - effluent violations of non-monthly average limits (Technical Review Criteria and chronic)
    // > T = SNC/Category I - compliance schedule reporting violation
    // > D = SNC/Category I - reporting violation - nonreceipt of DMR
    // > N = RNC/Category II - reportable non-compliance
    // > P = Resolved Pending - an enforcement action has been issued, and facility compliance with the action is pending final completion
    // > R = Resolved - the facility has returned to compliance with its permit conditions, either with or without issuance of an enforcement action
    // > C = Not considered in RNC/SNC based on manual review of data by state or EPA region. This manual override status is also indicated by a superscripted "m".
    // > Blank = Not considered in RNC/SNC
    // > N/A = EPA's data system is not able to determine the facility-level compliance status based upon the information available. This information may be available from a state database.
    rpc PostDfr_rest_servicesGet_cwa_rnc_compliance(PostDfr_rest_servicesGet_cwa_rnc_complianceRequest) returns (PostDfr_rest_servicesGet_cwa_rnc_complianceResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_cwa_rnc_compliance"
      };
    }
    // Detailed Facility Report CWA SEV Compliance Service
    // 
    // This procedure obtains data for the CWA Single Event Violations section of the DFR.
    rpc GetDfr_rest_servicesGet_cwa_se_compliance(GetDfr_rest_servicesGet_cwa_se_complianceRequest) returns (GetDfr_rest_servicesGet_cwa_se_complianceResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_cwa_se_compliance"
      };
    }
    // Detailed Facility Report CWA SEV Compliance Service
    // 
    // This procedure obtains data for the CWA Single Event Violations section of the DFR.
    rpc PostDfr_rest_servicesGet_cwa_se_compliance(PostDfr_rest_servicesGet_cwa_se_complianceRequest) returns (PostDfr_rest_servicesGet_cwa_se_complianceResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_cwa_se_compliance"
      };
    }
    // Detailed Facility Report Demographics Report Service
    // 
    // Returns a complex object with Demographics from the 2010 Census and 2010 American Community Survey based on a 3 mile radius around the facility spatial coordinates.
    rpc GetDfr_rest_servicesGet_demographics(GetDfr_rest_servicesGet_demographicsRequest) returns (GetDfr_rest_servicesGet_demographicsResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_demographics"
      };
    }
    // Detailed Facility Report Demographics Report Service
    // 
    // Returns a complex object with Demographics from the 2010 Census and 2010 American Community Survey based on a 3 mile radius around the facility spatial coordinates.
    rpc PostDfr_rest_servicesGet_demographics(PostDfr_rest_servicesGet_demographicsRequest) returns (PostDfr_rest_servicesGet_demographicsResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_demographics"
      };
    }
    // Detailed Facility Report Service
    // 
    // This procedure is the overall service for the Detailed Facility Report. It returns all of the data displayed in the DFR web report by invoking individual procedures that each return a targeted portion of the DFR.
    rpc GetDfr_rest_servicesGet_dfr(GetDfr_rest_servicesGet_dfrRequest) returns (GetDfr_rest_servicesGet_dfrResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_dfr"
      };
    }
    // Detailed Facility Report Service
    // 
    // This procedure is the overall service for the Detailed Facility Report. It returns all of the data displayed in the DFR web report by invoking individual procedures that each return a targeted portion of the DFR.
    rpc PostDfr_rest_servicesGet_dfr(PostDfr_rest_servicesGet_dfrRequest) returns (PostDfr_rest_servicesGet_dfrResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_dfr"
      };
    }
    // Detailed Facility Report Enforcement Summary Service
    // 
    // This procedure obtains data for the Enforcement and Compliance Summary in the Facility Summary section of the Detailed Facility Report.
    rpc GetDfr_rest_servicesGet_enforcement_summary(GetDfr_rest_servicesGet_enforcement_summaryRequest) returns (GetDfr_rest_servicesGet_enforcement_summaryResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_enforcement_summary"
      };
    }
    // Detailed Facility Report Enforcement Summary Service
    // 
    // This procedure obtains data for the Enforcement and Compliance Summary in the Facility Summary section of the Detailed Facility Report.
    rpc PostDfr_rest_servicesGet_enforcement_summary(PostDfr_rest_servicesGet_enforcement_summaryRequest) returns (PostDfr_rest_servicesGet_enforcement_summaryResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_enforcement_summary"
      };
    }
    // Detailed Facility Report Formal Actions Service
    // 
    // This procedure obtains data for the Formal Enforcement Actions section of the DFR.
    rpc GetDfr_rest_servicesGet_formal_actions(GetDfr_rest_servicesGet_formal_actionsRequest) returns (GetDfr_rest_servicesGet_formal_actionsResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_formal_actions"
      };
    }
    // Detailed Facility Report Formal Actions Service
    // 
    // This procedure obtains data for the Formal Enforcement Actions section of the DFR.
    rpc PostDfr_rest_servicesGet_formal_actions(PostDfr_rest_servicesGet_formal_actionsRequest) returns (PostDfr_rest_servicesGet_formal_actionsResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_formal_actions"
      };
    }
    // Detailed Facility Report ICIS Formal Actions Service
    // 
    // This procedure obtains data for the Integrated Compliance Information System, Formal Enforcement Actions section of the DFR.
    rpc GetDfr_rest_servicesGet_icis_formal_actions(GetDfr_rest_servicesGet_icis_formal_actionsRequest) returns (GetDfr_rest_servicesGet_icis_formal_actionsResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_icis_formal_actions"
      };
    }
    // Detailed Facility Report ICIS Formal Actions Service
    // 
    // This procedure obtains data for the Integrated Compliance Information System, Formal Enforcement Actions section of the DFR.
    rpc PostDfr_rest_servicesGet_icis_formal_actions(PostDfr_rest_servicesGet_icis_formal_actionsRequest) returns (PostDfr_rest_servicesGet_icis_formal_actionsResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_icis_formal_actions"
      };
    }
    // Detailed Facility Report Inspections Summary Service
    // 
    // This procedure obtains data for Enforcement and Compliance Summary Section of the Detailed Facility report.
    rpc GetDfr_rest_servicesGet_inspections(GetDfr_rest_servicesGet_inspectionsRequest) returns (GetDfr_rest_servicesGet_inspectionsResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_inspections"
      };
    }
    // Detailed Facility Report Inspections Summary Service
    // 
    // This procedure obtains data for Enforcement and Compliance Summary Section of the Detailed Facility report.
    rpc PostDfr_rest_servicesGet_inspections(PostDfr_rest_servicesGet_inspectionsRequest) returns (PostDfr_rest_servicesGet_inspectionsResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_inspections"
      };
    }
    // Detailed Facility Report Map Service
    // 
    // Returns an object with the facility's latitude and longitude coordinates.
    rpc GetDfr_rest_servicesGet_map(GetDfr_rest_servicesGet_mapRequest) returns (GetDfr_rest_servicesGet_mapResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_map"
      };
    }
    // Detailed Facility Report Map Service
    // 
    // Returns an object with the facility's latitude and longitude coordinates.
    rpc PostDfr_rest_servicesGet_map(PostDfr_rest_servicesGet_mapRequest) returns (PostDfr_rest_servicesGet_mapResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_map"
      };
    }
    // Detailed Facility Report NAICS Code Service
    // 
    // This procedure obtains data for the Facility NAICS Codes section in Facility/System Characteristics of the Detailed Facility Report.
    rpc GetDfr_rest_servicesGet_naics(GetDfr_rest_servicesGet_naicsRequest) returns (GetDfr_rest_servicesGet_naicsResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_naics"
      };
    }
    // Detailed Facility Report NAICS Code Service
    // 
    // This procedure obtains data for the Facility NAICS Codes section in Facility/System Characteristics of the Detailed Facility Report.
    rpc PostDfr_rest_servicesGet_naics(PostDfr_rest_servicesGet_naicsRequest) returns (PostDfr_rest_servicesGet_naicsResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_naics"
      };
    }
    // Detailed Facility Report Notices Service
    // 
    // This procedure obtains data for the Notices/Informal Actions section of the DFR.
    rpc GetDfr_rest_servicesGet_notices(GetDfr_rest_servicesGet_noticesRequest) returns (GetDfr_rest_servicesGet_noticesResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_notices"
      };
    }
    // Detailed Facility Report Notices Service
    // 
    // This procedure obtains data for the Notices/Informal Actions section of the DFR.
    rpc PostDfr_rest_servicesGet_notices(PostDfr_rest_servicesGet_noticesRequest) returns (PostDfr_rest_servicesGet_noticesResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_notices"
      };
    }
    // Detailed Facility Report Permits Service
    // 
    // This procedure obtains data for the following sections of the Detailed Facility Report.
    // > Facility Information (FRS) in the Facility Summary.
    // > Regulatory Interests in the Facility Summary.
    // > Also Reports in the Facility Summary.
    // > Facility/System Characteristics in Facility/System Characteristics.
    // > Facility Contact Information in Facility/System Characteristics.
    // > Facility SIC Codes in Facility/System Characteristics section.
    // > Facility NAICS Codes in Facility/System Characteristics section.
    rpc GetDfr_rest_servicesGet_permits(GetDfr_rest_servicesGet_permitsRequest) returns (GetDfr_rest_servicesGet_permitsResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_permits"
      };
    }
    // Detailed Facility Report Permits Service
    // 
    // This procedure obtains data for the following sections of the Detailed Facility Report.
    // > Facility Information (FRS) in the Facility Summary.
    // > Regulatory Interests in the Facility Summary.
    // > Also Reports in the Facility Summary.
    // > Facility/System Characteristics in Facility/System Characteristics.
    // > Facility Contact Information in Facility/System Characteristics.
    // > Facility SIC Codes in Facility/System Characteristics section.
    // > Facility NAICS Codes in Facility/System Characteristics section.
    rpc PostDfr_rest_servicesGet_permits(PostDfr_rest_servicesGet_permitsRequest) returns (PostDfr_rest_servicesGet_permitsResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_permits"
      };
    }
    // Detailed Facility Report RCRA Compliance Service
    // 
    // This procedure obtains data for the RCRA Compliance section of the DFR.
    rpc GetDfr_rest_servicesGet_rcra_compliance(GetDfr_rest_servicesGet_rcra_complianceRequest) returns (GetDfr_rest_servicesGet_rcra_complianceResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_rcra_compliance"
      };
    }
    // Detailed Facility Report RCRA Compliance Service
    // 
    // This procedure obtains data for the RCRA Compliance section of the DFR.
    rpc PostDfr_rest_servicesGet_rcra_compliance(PostDfr_rest_servicesGet_rcra_complianceRequest) returns (PostDfr_rest_servicesGet_rcra_complianceResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_rcra_compliance"
      };
    }
    // Detailed Facility Report SDWA Lead and Copper Service
    // 
    // This procedure obtains data for the SDWA, Lead and Copper Rule section of the DFR.
    rpc GetDfr_rest_servicesGet_sdwa_lead_and_copper(GetDfr_rest_servicesGet_sdwa_lead_and_copperRequest) returns (GetDfr_rest_servicesGet_sdwa_lead_and_copperResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_sdwa_lead_and_copper"
      };
    }
    // Detailed Facility Report SDWA Lead and Copper Service
    // 
    // This procedure obtains data for the SDWA, Lead and Copper Rule section of the DFR.
    rpc PostDfr_rest_servicesGet_sdwa_lead_and_copper(PostDfr_rest_servicesGet_sdwa_lead_and_copperRequest) returns (PostDfr_rest_servicesGet_sdwa_lead_and_copperResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_sdwa_lead_and_copper"
      };
    }
    // Detailed Facility Report SDWA Sanitary Surveys Service
    // 
    // This procedure obtains data for the SDWA, Sanitary Surveys section of the DFR.
    rpc GetDfr_rest_servicesGet_sdwa_sanitary_surveys(GetDfr_rest_servicesGet_sdwa_sanitary_surveysRequest) returns (GetDfr_rest_servicesGet_sdwa_sanitary_surveysResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_sdwa_sanitary_surveys"
      };
    }
    // Detailed Facility Report SDWA Sanitary Surveys Service
    // 
    // This procedure obtains data for the SDWA, Sanitary Surveys section of the DFR.
    rpc PostDfr_rest_servicesGet_sdwa_sanitary_surveys(PostDfr_rest_servicesGet_sdwa_sanitary_surveysRequest) returns (PostDfr_rest_servicesGet_sdwa_sanitary_surveysResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_sdwa_sanitary_surveys"
      };
    }
    // Detailed Facility Report SDWA Sanitary Site Visits Service
    // 
    // This procedure obtains data for the SDWA, Sanitary Site Visits section of the DFR.
    rpc GetDfr_rest_servicesGet_sdwa_site_visits(GetDfr_rest_servicesGet_sdwa_site_visitsRequest) returns (GetDfr_rest_servicesGet_sdwa_site_visitsResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_sdwa_site_visits"
      };
    }
    // Detailed Facility Report SDWA Sanitary Site Visits Service
    // 
    // This procedure obtains data for the SDWA, Sanitary Site Visits section of the DFR.
    rpc PostDfr_rest_servicesGet_sdwa_site_visits(PostDfr_rest_servicesGet_sdwa_site_visitsRequest) returns (PostDfr_rest_servicesGet_sdwa_site_visitsResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_sdwa_site_visits"
      };
    }
    // Detailed Facility Report SDWA Violations Service
    // 
    // This procedure obtains data for the SDWA Violations section of the DFR.
    rpc GetDfr_rest_servicesGet_sdwa_violations(GetDfr_rest_servicesGet_sdwa_violationsRequest) returns (GetDfr_rest_servicesGet_sdwa_violationsResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_sdwa_violations"
      };
    }
    // Detailed Facility Report SDWA Violations Service
    // 
    // This procedure obtains data for the SDWA Violations section of the DFR.
    rpc PostDfr_rest_servicesGet_sdwa_violations(PostDfr_rest_servicesGet_sdwa_violationsRequest) returns (PostDfr_rest_servicesGet_sdwa_violationsResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_sdwa_violations"
      };
    }
    // Detailed Facility Report SDWIS Compliance Service
    // 
    // This procedure obtains data for the SDWA Compliance section of the DFR.
    rpc GetDfr_rest_servicesGet_sdwis_compliance(GetDfr_rest_servicesGet_sdwis_complianceRequest) returns (GetDfr_rest_servicesGet_sdwis_complianceResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_sdwis_compliance"
      };
    }
    // Detailed Facility Report SDWIS Compliance Service
    // 
    // This procedure obtains data for the SDWA Compliance section of the DFR.
    rpc PostDfr_rest_servicesGet_sdwis_compliance(PostDfr_rest_servicesGet_sdwis_complianceRequest) returns (PostDfr_rest_servicesGet_sdwis_complianceResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_sdwis_compliance"
      };
    }
    // Detailed Facility Report SIC Code Service
    // 
    // This procedure obtains data for the Facility SIC Codes section in Facility/System Characteristics of the Detailed Facility Report.
    rpc GetDfr_rest_servicesGet_sic_codes(GetDfr_rest_servicesGet_sic_codesRequest) returns (GetDfr_rest_servicesGet_sic_codesResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_sic_codes"
      };
    }
    // Detailed Facility Report SIC Code Service
    // 
    // This procedure obtains data for the Facility SIC Codes section in Facility/System Characteristics of the Detailed Facility Report.
    rpc PostDfr_rest_servicesGet_sic_codes(PostDfr_rest_servicesGet_sic_codesRequest) returns (PostDfr_rest_servicesGet_sic_codesResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_sic_codes"
      };
    }
    // Detailed Facility Report Spatial Metadata Service
    // 
    // Returns an object with the facility coordinate spatial metadata.
    rpc GetDfr_rest_servicesGet_spatial_metadata(GetDfr_rest_servicesGet_spatial_metadataRequest) returns (GetDfr_rest_servicesGet_spatial_metadataResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_spatial_metadata"
      };
    }
    // Detailed Facility Report Spatial Metadata Service
    // 
    // Returns an object with the facility coordinate spatial metadata.
    rpc PostDfr_rest_servicesGet_spatial_metadata(PostDfr_rest_servicesGet_spatial_metadataRequest) returns (PostDfr_rest_servicesGet_spatial_metadataResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_spatial_metadata"
      };
    }
    // Detailed Facility Report TRI History Service
    // 
    // This procedure obtains data for the TRI History section of the DFR.
    rpc GetDfr_rest_servicesGet_tri_history(GetDfr_rest_servicesGet_tri_historyRequest) returns (GetDfr_rest_servicesGet_tri_historyResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_tri_history"
      };
    }
    // Detailed Facility Report TRI History Service
    // 
    // This procedure obtains data for the TRI History section of the DFR.
    rpc PostDfr_rest_servicesGet_tri_history(PostDfr_rest_servicesGet_tri_historyRequest) returns (PostDfr_rest_servicesGet_tri_historyResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_tri_history"
      };
    }
    // Detailed Facility Report TRI Releases Service
    // 
    // This procedrue obtains data for the TRI Releases section of the DFR.
    rpc GetDfr_rest_servicesGet_tri_releases(GetDfr_rest_servicesGet_tri_releasesRequest) returns (GetDfr_rest_servicesGet_tri_releasesResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_tri_releases"
      };
    }
    // Detailed Facility Report TRI Releases Service
    // 
    // This procedrue obtains data for the TRI Releases section of the DFR.
    rpc PostDfr_rest_servicesGet_tri_releases(PostDfr_rest_servicesGet_tri_releasesRequest) returns (PostDfr_rest_servicesGet_tri_releasesResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_tri_releases"
      };
    }
    // Detailed Facility Report Tribes Service
    // 
    // This procedure obtains data for the Tribes and Reservations section of the DFR.
    rpc GetDfr_rest_servicesGet_tribes(GetDfr_rest_servicesGet_tribesRequest) returns (GetDfr_rest_servicesGet_tribesResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_tribes"
      };
    }
    // Detailed Facility Report Tribes Service
    // 
    // This procedure obtains data for the Tribes and Reservations section of the DFR.
    rpc PostDfr_rest_servicesGet_tribes(PostDfr_rest_servicesGet_tribesRequest) returns (PostDfr_rest_servicesGet_tribesResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_tribes"
      };
    }
    // Detailed Facility Report Water Quality Service
    // 
    // This procedure obtains data for the Water Quality section of the DFR.
    rpc GetDfr_rest_servicesGet_water_quality(GetDfr_rest_servicesGet_water_qualityRequest) returns (GetDfr_rest_servicesGet_water_qualityResponse) {
      option (google.api.http) = {
        get: "/echo/dfr_rest_services.get_water_quality"
      };
    }
    // Detailed Facility Report Water Quality Service
    // 
    // This procedure obtains data for the Water Quality section of the DFR.
    rpc PostDfr_rest_servicesGet_water_quality(PostDfr_rest_servicesGet_water_qualityRequest) returns (PostDfr_rest_servicesGet_water_qualityResponse) {
      option (google.api.http) = {
        post: "/echo/dfr_rest_services.get_water_quality"
      };
    }
}
