swagger: '2.0'
schemes:
  - https
host: www.docusign.net
basePath: /restapi
info:
  contact:
    name: DocuSign Dev Center
    url: 'https://www.docusign.com/developer-center'
  description: 'The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.'
  termsOfService: 'https://www.docusign.com/company/terms-and-conditions/web'
  title: DocuSign
  version: v2
  x-apisguru-categories:
    - ecommerce
  x-logo:
    url: 'https://api.apis.guru/v2/cache/logo/https_pbs.twimg.com_profile_images_841785437698068484_vxQaqzi-_400x400.jpg'
  x-origin:
    - format: swagger
      url: 'https://raw.githubusercontent.com/docusign/eSign-OpenAPI-Specification/master/esignature.rest.swagger.json'
      version: '2.0'
  x-preferred: true
  x-providerName: docusign.net
externalDocs:
  description: See the DocuSign REST API Guide for more information.
  url: 'https://docs.docusign.com/esign'
consumes:
  - application/json
  - application/xml
produces:
  - application/json
securityDefinitions: {}
parameters: {}
responses: {}
tags:
  - description: |-
      The AcccountBrands resource provides methods that allow you to create and delete the account brand associated with an account.

      Branding allows you to add the look and feel of your organization's
      brand to the sending, signing, and email process making it easier for users to identify envelopes coming from your organization.

      The DocuSign Account Custom Branding feature lets you set the colors, logo, and text for your account. You can create any number of brand profiles with different settings to reflect each of your corporate brands or different internal divisions or departments.

      When you create or change a branding profile, it applies to everyone using that profile and affects all envelopes sent with that profile.
    name: AccountBrands
  - description: The AccountConsumerDisclosures resource provides methods that allow you to retrieve the consumer disclosures associated with the account.
    name: AccountConsumerDisclosures
  - description: |-
      The CustomFields resource provides a method that enables you to retrieve the custom fields associated with an account.

      These fields can be used with your account's envelopes to record information about the envelopes. The fields can be searched to find matching envelopes and track information. 

      The envelope custom fields are shown in the DocuSign member console's Envelope Settings section when a user creates an envelope. The envelope custom fields are not seen by envelope recipients.

      There are two types of envelope custom fields, text and list. A text custom field lets the sender enter the value for the field. The list custom field lets the sender select the value of the field from a pre-determined list.
    name: AccountCustomFields
  - description: |-
      The EnvelopeBulkRecipients resource provide methods that allow you manage the bulk recipient file for an envelope.

      The bulk recipient CSV (Comma Separated Value) file contains the list of recipient names and email addresses that you can add to an envelope to send the same document to a large number of recipients.
       
      The required and optional information that can be included the file is described in the [ML: BulkEnvelope: updateRecipients] method
    name: EnvelopeBulkRecipients
  - description: |-
      The EnvelopeCustomFields resource provides methods that allow you manage custom fields in an envelope. 

      Custom fields can be used in the envelopes for your account to record information about the envelope, help search for envelopes and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.

      There are two types of envelope custom fields, text and list. A text custom field lets the sender enter the value for the field. With a list custom field, the sender selects the value of the field from a pre-made list.
    name: EnvelopeCustomFields
  - description: |-
      The EnvelopeDocumentFields resource provides methods that allow you to manage custom fields on a document.

      You can create custom versions of standard fields that combine of field properties, such as font type or size, or a validation setting. 

      Note: Some advanced features and options are supported only in certain DocuSign plans. Your account plan might not support some options discussed in this help topic. For more information about which options are available for your account, check your account plan or contact your Account Manager.
    name: EnvelopeDocumentFields
  - description: |-
      The EnvelopeLocks resource provides methods that allow you to manage locks on an envelope.

      You can lock the envelope, and set the time until the lock expires, to prevent users or recipients from accessing and changing the envelope.

      Users must have envelope locking capability enabled to use these functions.
    name: EnvelopeLocks
  - description: |+
      <!-- resources aren't rendered the same way
           as other pages. This is a little hack to
           make the headings work better -->
      <style>
      h1, h2, h3 {
        margin-top: 1em;
      }
      </style>

      The EnvelopeRecipients resource allows you manage the recipients of an
      envelope. There are seven recipient types. All types share
      a [core set of parameters](#core-recipient-parameters).
      Some recipient types have additional parameters.

      <br>

      | Recipient type | Description |
      | :--- | :--- |
      | [Agents](#agents-recipient) | An agent recipient can add name and email information for recipients that appear after the agent in routing order. |
      | [Carbon Copies](#carbon-copies-recipient) | Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date or add information to any of the documents. This type of recipient can be used in any routing order. Carbon copy recipients receive their copy of the envelope when the envelope reaches the recipient's order in the process flow and when the envelope is completed. |
      | [Certified Deliveries](#certified-deliveries-recipient) | Certified delivery recipients must receive the completed documents for the envelope to be completed. However, they don't need to sign, initial, date or add information to any of the documents. |
      | [Editors](#editors-recipient) | Editors have the same management and access rights for the envelope as the sender. They can make changes to the envelope as if they were using the Advanced Correct feature. This recipient can add name and email information, add or change the routing order and set authentication options for the remaining recipients. Additionally, this recipient can edit signature/initial tabs and data fields for the remaining recipients. The recipient must have a DocuSign account to be an editor. |
      | [In-Person Signers](#in-person-signers-recipient) | An in-person recipient is a DocuSign user, acting as a Signing Host, who is in the same physical location as the signer. |
      | [Intermediaries](#intermediaries-recipient) | An intermediary is a recipient who can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order, unless subsequent agents, editors or intermediaries are added. |
      | [Signers](#signers-recipient) | A signer is a recipient who must sign, initial, date, or add data to form fields on the documents in the envelope. |

      <br>

      Not all recipients are are available to all account types.
      Review your account plan to determine
      which recipient types are available to you.
      All recipient types are available in the Demo environment.


      ## Core Recipient Parameters

      All recipients, regardless of type, have the same common parameters.
      The following table contains the descriptions
      for the core properties for all recipient types.

      <br>

      | Name | Required | Schema Type | Description |
      | :--- | :--- | :--- | :--- |
      | email | Yes | Email | Email of the recipient. Notification will be sent to this email id.<br/>Maximum Length: 100 characters. |
      | name | Yes | String | Full legal name of the recipient.<br/>Maximum Length: 100 characters. |
      | accessCode | No | String | This optional element specifies the access code a recipient has to enter to validate the identity.<br/>Maximum Length: 50 characters. |
      | addAccessCodeToEmail | No | Boolean | This optional attribute indicates that the access code is added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient. |
      | clientUserId | No | String | This specifies whether the recipient is embedded or remote.<br/><br/>If the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending. |
      | embeddedRecipientStartURL | No | String | This is a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would, but when the document link in the email is clicked the recipient is redirected, through DocuSign, to this URL to complete their actions. When routing to the URL, it is up to the sender's system (the server responding to the URL) to then request a recipient token to launch a signing session.<br/><br/>If the value `SIGN_AT_DOCUSIGN` is used for this node, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that would be launched by any partner.<br/><br/>It is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application and DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets  the `EmbeddedRecipientStartURL` property to `SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) be used to verify the identity of the recipient.<br/><br>If the `clientUserId` property is NOT set and the `embeddedRecipientStartURL` property is set, DocuSign ignores the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the `embeddedRecipientStartURL` property using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The customFields must be part of the recipient or envelope. The merge fields are enclosed in double brackets.<br/><br/>_Example_:<br/>`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` |
      | customFields | No | customField |An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. String `customField` properties have a maximum length of 100 characters. |
      | emailNotification | No | emailNotification | An optional complex type that has information for setting the language for the recipient's email information. It is composed of three elements:<br/><br/>*emailBody*: a string with the email message sent to the recipient.<br/>Maximum Length: 10000 characters.<br/><br/>*emailSubject*: a string with the subject of the email sent to the recipient.<br/>Maximum Length: 100 characters.<br/><br/>*supportedLanguage*: The simple type enumeration of the language used. The supported languages, with the language value shown in parenthesis, are: Arabic (ar), Bahasa Indonesia (id), Bahasa Melayu (ms) Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro),Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk) and Vietnamese (vi).<br/><br/>**IMPORTANT**: If this is enabled for one recipient, it overrides the Envelope Subject and `EmailBlurb` property settings. Also, you must set the  `emailNotification` property for all recipients. |
      | excludedDocuments | No | Array of Strings | Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the enforceSignerVisibility property must be set to true for the envelope to use this.<br/><br/>When the enforceSignerVisibility property is set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent. |
      | idCheckConfigurationName | No | String |Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient). This overrides any default authentication setting.<br/><br/>_Example_:<br/> Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the `idCheckConfigurationName` property must be  set to `ID Check $`. To use SMS, it must be set to `SMS Auth $` and you must add phone number information to the `smsAuthentication` node.|
      | iDCheckInformationInput | No | IdCheckInformationInput | This complex element contains input information related to a recipient ID check. It can include the following information.<br/><br/>*addressInformationInput*: Used to set recipient address information and consists of:<br/><br/>*addressInformation*: consists of six elements, with street2 and zipPlus4 being optional. The elements are: street1, street2, city, state, zip, zipPlus4\. The maximum number of characters in each element are: street1/street2 = 150 characters, city = 50 characters, state = 2 characters, and zip/zipPlus4 = 20 characters.<br/><br/>displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.<br/><br/>*receiveInResponse*: A Boolean element that specifies if the information needs to be returned in the response.<br/><br/>*dobInformationInput*: Used to set recipient date of birth information and consists of:<br/><br/>*dateOfBirth*: Specifies the recipient's date, month and year of birth.<br/><br/>*displayLevelCode*: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.<br/><br/>*receiveInResponse*: A Boolean element that specifies if the information needs to be returned in the response.<br/><br/>*ssn4InformationInput*: Used to set the last four digits of the recipient's SSN information and consists of:<br/><br/>*ssn4*: Specifies the last four digits of the recipient's SSN.<br/><br/>*displayLevelCode*: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.<br/><br/>*receiveInResponse*: A Boolean element that specifies if the information needs to be returned in the response.<br/><br/>*ssn9InformationInput*: Used to set the recipient's SSN information. Note that the ssn9 information can never be returned in the response. The ssn9 input consists of:<br/><br/><br/><br/>*ssn9*: Specifies the recipient's SSN.<br/><br/>*displayLevelCode*: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay. |
      | inheritEmailNotificationConfiguration | No | Boolean | Optional element. If true and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. |
      | note | No | String | A note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.<br/>Maximum Length: 1000 characters. |
      | phoneAuthentication | No | RecipientPhoneAuthentication | Optional element. Contains the elements: <br/><br/> *recipMayProvideNumber*:Boolean. When set to **true** thenrecipient can use whatever phone number they choose to.<br/><br/> *senderProvidedNumbers*: ArrayOfString. A list of phone numbers the recipient can use. <br/><br/>*recordVoicePrint* - Reserved for DocuSign. <br/><br/>*validateRecipProvidedNumber* - Reserved for DocuSign. | |
      | recipientAttachment | No | Attachment | Reserved for DocuSign. |
      | recipientId | No | String | Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document. |
      | requireIdLookup | No | Boolean | When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. |
      | roleName | No* | String | Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients. |
      | routingOrder | Yes | String | This element specifies the routing order of the recipient in the envelope. |
      | samlAuthentication | No | samlAssertionAttributes | Optional element, account must be set up to use SSO to use this. Contains the name/value pair information for the SAML assertion attributes:<br/><br/>*name*: The name of the SAML assertion attribute.<br/><br/>*value*: The value associated with the named SAML assertion attribute. |
      | smsAuthentication | No | senderProvidedNumbers | Optional element. Contains the element:<br/><br/>*senderProvidedNumbers*: Array that contains a list of phone numbers the recipient can use for SMS text authentication. |
      | socialAuthentications | No | Boolean | Lists the social ID type that can be used for recipient authentication. |
      | templateAccessCodeRequired | No | Boolean | Optional element. Used only when working with template recipients. When set to **true** and the `TemplateLocked` parameter is set to **true**, the sender must enter an access code. |
      | templateLocked | No | Boolean | Optional element. Used only when working with template recipients. When set to **true**, the sender cannot change any attributes of the recipient. |
      | templateRequired | No | Boolean | Optional element. Used only when working with template recipients. When set to **true**,  the sender may not remove the recipient. |

      <br>

      **JSON layout**

      ```
      "email": "email.name@company.com",
        "name": "recipient name",
        "accessCode": "",
        "addAccessCodeToEmail": false,
        "clientUserIs": null,
        "embeddedRecipientStartURL": "string",
        "customFields": {
          "sample string 1",
          "sample string 2"
        },
        "emailNotification"{
          "emailBody":"email text",
          "emailSubject":"Subject text",
          "supportedLanguage":"en",
        },
        "excludedDocuments": ["2", "4"],
        "idCheckConfigurationName": null,
        "idCheckInformationInput": {
          "addressInformationInput": {
            "addressInformation": {
              "street1": "sample string 1",
              "street2": "sample string 2",
              "city": "sample string 3",
              "state": "sample string 4",
              "zip": "sample string 5",
              "zipPlus4": "sample string 6"
            },
            "displayLevelCode": "sample string 1",
            "receiveInResponse": "sample string 2"
          },
          "dobInformationInput": {
            "dateOfBirth": "sample string 1",
            "displayLevelCode": "sample string 2",
            "receiveInResponse": "sample string 3"
          },
          "ssn4InformationInput": {
            "ssn4": "sample string 1",
            "displayLevelCode": "sample string 2",
            "receiveInResponse": "sample string 3"
          },
          "ssn9InformationInput": {
            "ssn9": "sample string 1",
            "displayLevelCode": "sample string 2"
          }
        },
        "inheritEmailNotificationConfiguration": false,
        "note": "",
        "phoneAuthentication": {
          "recipMayProvideNumber": "sample string 1",
          "validateRecipProvidedNumber": "sample string 2",
          "recordVoicePrint": "sample string 3",
          "senderProvidedNumbers": [
            "sample string 1",
            "sample string 2"
          ]
        },
        "recipientAttachment": null,
        "recipientCaptiveInfo": null,
        "recipientId": "1",
        "requireIdLookup": false,
        "roleName": "",
        "routingOrder": 1,
        "samlAuthentication": {
          "samlAssertionAttributes": [
            {
              "name": "string",
              "value": "string"
            },
            {
              "name": "string",
              "value": "string"
            }
          ]
        },
        "smsAuthentication": {
          "senderProvidedNumbers":[
            "sample string 1",
            "sample string 2"
          ]
        },
        "socialAuthentications": null,
        "templateAccessCodeRequired": false,
        "templateLocked": false,
        "templateRequired": false,
      ...
      ```


      ## Agents Recipient

      An agent recipient can add name and email information for recipients that appear after the agent in routing order.

      In addition to the [core parameters](#core-recipient-parameters),
      this type adds the following parameters.

      <br>

      | Name | Required | Schema Type | Description |
      | :--- | :--- | :--- | :--- |
      | canEditRecipientEmails | No | Boolean | Optional element. When set to **true**, the Agents Recipient associated with this Recipient can change the Recipient's pre-populated Email address. This element is only active if enabled for the account. |
      | canEditRecipientNames | No | Boolean | Optional element. When set to **true**, the Agents Recipient associated with this recipient can change the recipient's pre-populated name (`UserName`). This element is only active if enabled for the account. |

      <br>

      **JSON layout**

      ```
      "agents": [{
       <core parameters>
        "canEditRecipientEmails": false,
        "canEditRecipientNames": false
      }],
      ```


      ## Carbon Copies Recipient

      Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date or add information to any of the documents. This type of recipient can be used in any routing order. Carbon copy recipients receive their copy of the envelope when the envelope reaches the recipient's order in the process flow and when the envelope is completed.

      This recipient type uses only the [core parameters](#core-recipient-parameters).

      **JSON layout**

      ```
      "carbonCopies": [{
       <core parameters>
      ```


      ## Certified Deliveries Recipient

      Certified delivery recipients must receive the completed documents for the envelope to be completed. However, they don't need to sign, initial, date or add information to any of the documents.

      This recipient type uses only the [core parameters](#core-recipient-parameters).

      **JSON layout**

      ```
      "certifiedDeliveries": [{
      <core parameters>
      }],
      ```

      ## Editors Recipient

      Editors have the same management and access rights for the envelope as the sender. They can make changes to the envelope as if they were using the Advanced Correct feature. This recipient can add name and email information, add or change the routing order and set authentication options for the remaining recipients. Additionally, this recipient can edit signature/initial tabs and data fields for the remaining recipients. The recipient must have a DocuSign account to be an editor.

      In addition to the [core parameters](#core-recipient-parameters),
      this type adds the following parameters.

      <br>

      | Name | Required | Schema Type | Description |
      | :--- | :--- | :--- | :--- |
      | canEditRecipientEmails | No | Boolean | Optional element. When set to **true**, the Editors Recipient associated with this Recipient can change the Recipient's pre-populated Email address. This element is only active if enabled for the account. |
      | canEditRecipientNames | No | Boolean | Optional element. When set to **true**, the Editors Recipient associated with this recipient can change the recipient's pre-populated name (`UserName`). This element is only active if enabled for the account. |

      <br>


      **JSON layout**

      ```
      "editors": [{
       <core parameters>
        "canEditRecipientEmails": false,
        "canEditRecipientNames": false
      }],
      ```


      ## In-Person Signers Recipient

      An in-person recipient is a DocuSign user,
      acting as a Signing Host,
      who is in the same physical location as the signer.

      In addition to the [core parameters](#core-recipient-parameters),
      this type adds the following parameters.

      The following restrictions apply
      to using electronic notary when sending documents:

      * Authentication methods are allowed for the signer but not the notary.
      * The Sign On Paper, Document Markup, Field Markup and Change Signer options cannot be used for the documents.
      * Tabs may be assigned to the signer, but cannot be assigned to the notary.

      Refer to [eNotary Resources][enotary-resources]
      in the DocuSign Support Center for more information
      about how the eNotary feature works.

      <br>

      | Name                | Required                                                          | Schema Type | Description                                                                                                                                                                                                                                                                                                                            |
      | :------------------ | :---------------------------------------------------------------- | :---------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
      | inPersonSigningType | No                                                                | String      | Specifies whether the envelope uses the eNotary feature. The accepted values are:<ul markdown=1><li>`inPersonSigner` The envelope uses the normal in-person signing flow.</li><li>`notary`: The envelope uses the eNotary signing flow.</li></ul>                                                                                      |
      | notaryHost          | Yes, when `inPersonSigningType` is `notary`                       | NotaryHost  | Sets the information for the notary host for the notary in person signing flow. The following information is required: <ul markdown=1> <li>`recipientId`: A unique ID number for the notary signing host. </li> <li>`name`: Specifies the notary's full legal name.</li> <li>`email`: Specifies the notary's email address. </li> </ul>|
      | autoNavigation      | No                                                                | Boolean     | Specifies whether auto navigation is set for the recipient.                                                                                                                                                                                                                                                                            |
      | defaultRecipient    | No                                                                | Boolean     | When set to **true**, this is the default recipient for the envelope. This option is used when creating an envelope from a template.                                                                                                                                                                                                   |
      | hostName            | Yes, when `inPersonSigningType` is `inPersonSigner`               | String      | The name of the signing host. This is the DocuSign user that is hosting the in-person signing session.                                                                                                                                                                                                                                 |
      | hostEmail           | Yes, when `inPersonSigningType` is `inPersonSigner`               | String      | The email address of the signing host. This is the DocuSign user that is hosting the in-person signing session.                                                                                                                                                                                                                        |
      | signerName          | Yes, when `inPersonSigningType` is `inPersonSigner`               | String      | The in-person signer's full legal name.                                                                                                                                                                                                                                                                                                |
      | signerEmail         | No, but valid only when `inPersonSigningType` is `inPersonSigner` | String      | The in-person signer's email address.                                                                                                                                                                                                                                                                                                  |
      | name                | Yes, when `inPersonSigningType` is `notary`                       | String      | The full legal name of the signer in an eNotary flow.                                                                                                                                                                                                                                                                                  |
      | email               | Yes, when `inPersonSigningType` is `notary`                       | String      | The signer's email address in an eNotary flow.                                                                                                                                                                                                                                                                                         |
      | signatureInfo       | No                                                                | String      | Optional element only used with recipient types In Person Signers and Signers.<br/><br/>Allows the sender to pre-specify the signature name, signature initials, and signature font used in the signature stamp for the recipient.                                                                                                     |
      | signInEachLocation  | No                                                                | Boolean     | When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once).                                                                     |
      | tabs                | No                                                                | Tab         | Optional element only used with recipient types In Person Signers and Signers.<br/><br/>Specifies the Tabs associated with the recipient. See the [EnvelopeRecipientTabs resource][envelopeRecipientTabsResource] for more information about tabs.                                                                                     |

      <br>

      **JSON layout**

      ```
      "inPersonSigners": [{
        "hostEmail": "signing.host@company.com",
        "hostName": "Mike Host",
       <core parameters>
        "autoNavigation": false,
        "defaultRecipient": false,
        "signInEachLocation": false,
        "signatureInfo": null,
        "signerEmail": "inperson.signer@company.com",
        "signerName": "Isaac Inperson",
        "email": "notary.signer@example.com",
        "name": "Notary Signer"
        "tabs": {
          "approveTabs": null,
          "checkboxTabs": null,
          "companyTabs": null,
          "dateSignedTabs": null,
          "dateTabs": null,
          "declineTabs": null,
          "emailTabs": null,
          "envelopeIdTabs": null,
          "fullNameTabs": null,
          "initialHereTabs": null,
          "listTabs": null,
          "noteTabs": null,
          "numberTabs": null,
          "radioGroupTabs": null,
          "signHereTabs": [{
          "signerAttachmentTabs": null,
          "ssnTabs": null,
          "textTabs": null,
          "titleTabs": null,
          "zipTabs": null
        }
        "inPersonSigningType": "notary",
        "notaryHost": {
          "email": "notary@example.com",
          "name": "Natalie Notary",
          "recipientId": "string"
        }
      }],
      ```


      ## Intermediaries Recipient

      An intermediary is a recipient who can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order, unless subsequent agents, editors or intermediaries are added.

      In addition to the [core parameters](#core-recipient-parameters),
      this type adds the following parameters.

      <br>

      | Name | Required | Schema Type | Description |
      | :--- | :--- | :--- | :--- |
      | canEditRecipientEmails | No | Boolean | Optional element. When set to **true**, the Agents Recipient associated with this Recipient can change the Recipient's pre-populated Email address. This element is only active if enabled for the account. |
      | canEditRecipientNames | No | Boolean | Optional element. When set to **true**, the Agents Recipient associated with this recipient can change the recipient's pre-populated name (`UserName`). This element is only active if enabled for the account. |

      <br>

      **JSON layout**

      ```
      "intermediaries": [{
      <core parameters>
        "canEditRecipientEmails": false,
        "canEditRecipientNames": false
      }],
      ```



      ## Signers Recipient

      A signer is a recipient who must sign, initial, date, or add data to form fields on the documents in the envelope.

      In addition to the [core parameters](#core-recipient-parameters),
      this type adds the following parameters.

      <br>


      | Name | Required | Schema Type | Description |
      | :--- | :--- | :--- | :--- |
      | autoNavigation | No | Boolean | Specifies whether auto navigation is set for the recipient.|
      | defaultRecipient | No | Boolean | When set to **true**, this is the default recipient for the envelope. This option is used with the CreateEnvelopeFromTemplatesAndForms method. |
      | signInEachLocation | No | Boolean | When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once). |
      | signatureInfo | No | String | Optional element only used with recipient types In Person Signers and Signers.<br/><br/>Allows the sender to pre-specify the signature name, signature initials, and signature font used in the signature stamp for the recipient. |
      | signerEmail | No | String | Optional element. The email address for an InPersonSigner recipient Type.<br/>Maximum Length: 100 characters. |
      | signerName | Yes | String | Required element with recipient type In Person Signers.<br/>Maximum Length: 100 characters.<br/><br/>The full legal name of a signer for the envelope. |
      | tabs | No | Tab | Optional element only used with recipient types In Person Signers and Signers.<br/><br/>Specifies the Tabs associated with the recipient. See the the [EnvelopeTabs resource][envelopeTabsResource]  for more information about tabs. |
      | deliveryMethod | No | String | Reserved for DocuSign.|
      | deliveredDateTime | No | DateTime | Reserved for DocuSign. |
      | signedDateTime | No | DateTime | Reserved for DocuSign. |
      | offlineAttributes | No | &nbsp; | Reserved for DocuSign.|

      <br>

      **JSON layout**

      ```
      "Signers": [{
      <core paramters>
        "autoNavigation": false,
        "defaultRecipient": false,
        "signInEachLocation": false,
        "signatureInfo": null,
        "tabs": {
          "approveTabs": null,
          "checkboxTabs": null,
          "companyTabs": null,
          "dateSignedTabs": null,
          "dateTabs": null,
          "declineTabs": null,
          "emailTabs": null,
          "envelopeIdTabs": null,
          "fullNameTabs": null,
          "initialHereTabs": null,
          "listTabs": null,
          "noteTabs": null,
          "numberTabs": null,
          "radioGroupTabs": null,
          "signHereTabs": [{
          "signerAttachmentTabs": null,
          "ssnTabs": null,
          "textTabs": null,
          "titleTabs": null,
          "zipTabs": null
        }
        "deliveryMethod":"",
        "deliveredDateTime":"String Content",
        "signedDateTime":"String Content",
        "offlineAttributes":{
          "deviceName":"String Content",
          "deviceModel":"String Content",
          "gpsLatitude":"String Content",
          "gpsLongitude":"String Content",
          "accountEsignId":"String Content"
        }
      }],
      ```

      [envelopeRecipientTabsResource]:  /esign/restapi/Envelopes/EnvelopeRecipientTabs/
      [enotary-resources]:              https://support.docusign.com/en/guides/ndse-user-guide-enotary-resources

    name: EnvelopeRecipients
  - description: |
      <!-- resources aren't rendered the same way
           as other pages. This is a little hack to
           make the headings work better -->
      <style>
      h1, h2, h3 {
        margin-top: 1em;
      }
      </style>

      The EnvelopeRecipientTabs resource provides methods that let you
      add,
      update,
      and delete tabs
      from an envelope.
      Tabs are associated with a specific recipient
      in an envelope
      and are only used by the recipient types
      In Person Signers and Signers. 

      <!-- START doctoc generated TOC please keep comment here to allow auto update -->
      <!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->
      **On this page**

      - [Tab Types](#tab-types)
      - [View Tab](#view-tab)
      - [Requesting Payments](#requesting-payments)
      - [Using Custom Tabs in Envelopes and Templates](#using-custom-tabs-in-envelopes-and-templates)
      - [Anchoring Tabs](#anchoring-tabs)
      - [Automatically Populating Tabs](#automatically-populating-tabs)

      <!-- END doctoc generated TOC please keep comment here to allow auto update -->


      ## Tab Types

      This table lists the available tab types.

      <br>


      | Tab Type              | Description |
      | :-------              | :---------- |
      | Approve Tab           | Place this tab on the document if you want the recipient to approve documents in an envelope without placing a signature or initials on the document. If the recipient clicks the Approve tab during the signing process, the recipient is considered to have signed the document. No information is shown on the document for the approval, but it is recorded as a signature in the envelope history. |
      | Checkbox Tab          | Place this tab on the document in a location where the recipient can select a yes/no (on/off) type option. |
      | Company Tab           | Place this tab on the document where you want the recipient's company name to appear. |
      | Date Signed Tab       | Place this tab on the document where you want the date the recipient signed the document to appear. |
      | Date Tab              | Place this tab on the document where you want the recipient to enter a date. Date tabs are single-line fields that allow date information to be entered in any format. The tooltip for this tab recommends entering the date as MM/DD/YYYY, but this is not enforced. The format entered by the signer is retained. If you need a particular date format enforced, DocuSign recommends using a Text tab with a Validation Pattern and Validation Message to enforce the format. |
      | Decline Tab           | Place this tab on the document where you want to give the recipient the option of declining an envelope. If the recipient clicks the Decline tab during the signing process, the envelope is voided. |
      | Email Address Tab     | Place this tab on a document where you want the recipient's email, as entered in the recipient information, to appear. |
      | Email Tab             | This is a single-line field that accepts any characters. |
      | Envelope ID Tab       | Place this tab on the document where you want the envelope ID for to appear. Recipients cannot enter or change the information in this tab. It is for informational purposes only. |
      | First Name Tab        | Place this tab on a document where you want the recipient's first name to appear. This tab takes the recipient's name, as entered in the recipient information, splits it into sections based on spaces and uses the first section as the first name. |
      | Formula Tab           | The value of a formula tab is calculated from the values of other number or date tabs in the document. When the recipient completes the underlying fields, the formula tab calculates and displays the result. <br><br>The `formula` property of the tab contains the references to the underlying tabs. See [Calculated Fields][calculatedfields] in the DocuSign Support Center to learn more about formulas. <br><br>If a formula tab contains a `paymentDetails` property, the tab is considered a payment item. See [Requesting Payments Along with Signatures][paymentguide] in the DocuSign Support Center to learn more about payments.|
      | Full Name Tab         | Place this tab on the document where you want the recipient's full name to appear. |
      | Initial Here Tab      | Place this tab where the recipient must initial the document. This tab can be set to be optional.  |
      | Last Name Tab         | Place this tab on a document where you want the recipient's last name to appear. This tab takes the recipient's name, as entered in the recipient information, splits it into sections based on spaces and uses the last section as the last name. |
      | List Tab              | This tab has a list of options that a recipient can select. The `listItems` parameter is used to set the options that can be selected.  |
      | Note Tab              | Place this tab on the document where you want to add a note for the recipient on a document. |
      | Number Tab            | This tab is a field where the recipient can enter numbers and decimal (.) points.  |
      | Radio Group Tab       | This group tab is used to place radio buttons on a document. The `radios` parameter is used to add and place the radio buttons associated with the group. Only one radio button can be selected in a group.  |
      | Sign Here Tab         | Place this tab where the recipient must sign the document. This tab can be set to be optional.  |
      | Signer Attachment Tab | The signer attachment is where the recipient initiates the process of adding supporting documents to an envelope. |
      | SSN Tab               | This tab is a single-line field where the recipient can enter numbers. A Social Security Number can be typed with or without dashes. |
      | Text Tab              | This tab is a field where the recipient can enter any type of characters.  |
      | Title Tab             | Place this tab on the document where you want the recipient's title to appear. |
      | View Tab              | The View tab is used with the Approve tab to handle [supplemental documents][supdocs]. |
      | Zip Tab               | This tab is a single-line field where the recipient can enter numbers. |


      [supdocs]:          /esign/guide/appendix/glossary.html#supplemental-documents
      [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields
      [paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures

      ## View Tab

      The View tab is used on supplemental documents.
      To learn more about using the View tab with
      supplemental documents, see
      [Using Supplemental Documents][usingsupdocs]
      in the [Sending Documents][sendenvelopes] section of
      the [Envelope: create][envelopecreate] method.

      [sendenvelopes]:  /esign/restapi/Envelopes/Envelopes/create/#sending-envelopes
      [usingsupdocs]:   /esign/restapi/Envelopes/Envelopes/create/#using-supplemental-documents
      [envelopecreate]: /esign/restapi/Envelopes/Envelopes/create/

      <br>

      | Name              | Required  | Type    | Description |
      | :----             | :----     | :----   | :----       |
      | documentId        | Yes       | String  | The document ID number that the tab is placed on. This must refer to an existing Document's ID attribute. |
      | pageNumber        | Yes       | String  | Must be set to 1. |
      | recipientId       | Yes       | String  | The recipient associated with the tab. Must refer to an existing recipient's ID attribute. |
      | required          | No        | Boolean | If **true**, the recipient is required to select the supplemental document View button during signing. |
      | tabLabel          | No        | String  | The label used for the tab.  If an empty string is provided for this, an empty sting is used. If no value is provided, the tab type is used as the value. Maximum of 500 characters. |
      | templateLocked    | No        | Boolean | Optional. Used only when working with template tabs. If **true**, the attributes of the tab cannot be changed by the sender. |
      | templateRequired  | No        | Boolean | Optional. Used only when working with template tabs. If **true**, the tab cannot be removed by the sender. |
      | xPosition         | Yes       | String  | Required, but can be 0.  |
      | yPosition         | Yes       | String  | Required, but can be 0. |


      ## Requesting Payments

      The Payments feature of the DocuSign eSignature REST API
      lets you collect payments
      along with signatures and other information.

      To send a request for payment
      and collect payments,
      you need a payment gateway account,
      which is the destination for the payments.
      Create a payment account
      with a supported payment gateway,
      and then connect the payment gateway account
      to your DocuSign account.
      To learn how to connect a payment gateway account
      to your DocuSign account
      see [Managing Payment Gateways][paymentgateways]
      in the DocuSign Support Center.
      You must connect and manage payment gateway accounts manually
      through the DocuSign Admin console
      and through your chosen payment gateway.
      There is no public API
      for connecting payment gateway accounts
      to DocuSign accounts
      or for managing payment gateway accounts.

      Currently
      [Stripe][stripe]
      is the only supported payment gateway.

      ### How Payments Work

      To make a request for payment,
      use a [`formulaTab`][formulatab]
      that has a
      [`paymentDetails`][paymentdetails] object.
      This object includes
      a list of [`paymentLineItem`][paymentlineitem] objects.
      Each line item refers to a [`number`][numbertab] tab
      that contains the value of the each item.
      The purpose of the line items
      is to transmit them to the payment gateway
      as metadata, so that you can use the information
      in the payment processor.

      This is an example request for two books.
      Each book is specified in the `number` tabs
      labeled "Hamlet" and "Tempest".
      The books are referenced as line items
      by their tab labels
      within the `paymentDetails` object
      of a `formula` tab.
      The formula of the `formula` tab
      add the values of the same two `number` tabs.

      ```json
      {
        "documents": [
          {
            "documentBase64": "<base64-encoded PDF document>",
            "documentId": "1",
            "fileExtension": "pdf",
            "name": "payment.pdf"
          }
        ],
        "emailSubject": "Order Some Books",
        "recipients": {
          "signers": [
            {
              "email": "vreader@example.com",
              "name": "Voracious Reader",
              "recipientId": "1",
              "routingOrder": "1",
              "tabs": {
                . . .
                "numberTabs": [
                  {
                    "value": "10.00",
                    "width": 78,
                    "required": "true",
                    "locked": "true",
                    "tabLabel": "Hamlet",
                    "documentId": "1",
                    "pageNumber": "1",
                    "xPosition": "323",
                    "yPosition": "134"
                  },
                  {
                    "value": "10.00",
                    "width": 78,
                    "required": "true",
                    "locked": "true",
                    "tabLabel": "Tempest",
                    "documentId": "1",
                    "pageNumber": "1",
                    "xPosition": "323",
                    "yPosition": "154"
                  }
                ],
                "formulaTabs": [
                  {
                    "required": "true",
                    "formula": "([Hamlet] + [Tempest]) * 100",
                    "roundDecimalPlaces": "2",
                    "paymentDetails": {
                      "currencyCode": "USD",
                      "lineItems": [
                        {
                          "name": "Hamlet",
                          "description": "The Danish Play",
                          "itemCode": "SHAK1",
                          "amountReference": "Hamlet"
                        },
                        {
                          "name": "Othello",
                          "description": "The one with Caliban in it",
                          "itemCode": "SHAK2",
                          "amountReference": "Tempest"
                        }
                      ],
                      "gatewayAccountId": "e76668b4-53a9-4413-b551-a208d659e490"
                    },
                    "tabLabel": "Payment1",
                    "documentId": "1",
                    "pageNumber": "1",
                    "xPosition": 300,
                    "yPosition": 200
                  }
                ]
              }
            }
          ]
        },
        "status": "sent"
      }
      ```

      Use the
      [EnvelopeRecipients: list][enveloperecipientslist] method
      to check the status of a payment.
      When the payment is successful,
      the `status` property of
      the [`paymentDetails`][paymentdetails] object
      is `payment_complete`.

      ```json
      {
        "signers": [
          {
            "tabs": {
              . . .
              "numberTabs": [
                {
                  "value": "10.00",
                  "tabLabel": "Hamlet",
                  "documentId": "1",
                  "recipientId": "1",
                  "pageNumber": "1",
                  "xPosition": "323",
                  "yPosition": "134",
                },
                {
                  "value": "10.00",
                  "tabLabel": "Tempest",
                  "documentId": "1",
                  "recipientId": "1",
                  "pageNumber": "1",
                }
              ],
              "formulaTabs": [
                {
                  "formula": "([Hamlet] + [Tempest]) * 100",
                  "roundDecimalPlaces": "2",
                  "paymentDetails": {
                    "status": "payment_complete",
                    "currencyCode": "USD",
                    "lineItems": [
                      {
                        "name": "Hamlet",
                        "description": "The Danish Play",
                        "itemCode": "SHAK1",
                        "amountReference": "Hamlet"
                      },
                      {
                        "name": "Tempest",
                        "description": "The one with Caliban in it",
                        "itemCode": "SHAK2",
                        "amountReference": "Tempest"
                      }
                    ],
                    "gatewayAccountId": "e76668b4-53a9-4413-b551-a208d659e490"
                  },
                  "value": "20",
                  "required": "true",
                  "locked": "false",
                  "tabLabel": "Payment1",
                  "documentId": "1",
                  "recipientId": "1",
                  "pageNumber": "1",
                }
              ]
            },
            "creationReason": "sender",
            "email": "vreader@example.com",
            "name": "Voracious Reader",
            "recipientId": "1",
            "requireIdLookup": "false",
            "status": "completed",
          }
        ],
        . . .
      }
      ```

      ### Some Things to Keep in Mind About Payments

      * An envelope is not completed until all payments are completed.

      * If a DocuSign account Administrator
        deletes a payment gateway account connection
        DocuSign cancels all in-process envelopes
        that reference the deleted payment gateway account.

      * If the sender voids an envelope,
        all payment authorizations are canceled.

      * If a required recipient refuses to sign,
        all authorized payments are canceled.

      * If a required recipient's payment fails authorization,
        DocuSign attempts to recover
        by sending the recipient
        notification about the failed payment authorization.
        The recipient has the opportunity
        to correct the payment method information.

      * Each recipient's payment is authorized separately.
        Accounts are charged and payment made
        after all required tabs are completed,
        and all payments in an envelope for all recipients are authorized.

      * Refunds are not supported.
        Conduct refunds or payment changes
        with the payment gateway separately from DocuSign.

      * At this time, DocuSign does not charge a per-transaction fee.


      [enveloperecipientslist]: /esign/restapi/Envelopes/EnvelopeRecipients/list/
      [formulatab]:             /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/formulaTab
      [ISO4217]:                https://en.wikipedia.org/wiki/ISO_4217
      [numbertab]:              /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/number
      [paymentgateways]:        https://support.docusign.com/en/guides/managing-payment-gateways
      [paymentguide]:           https://support.docusign.com/en/guides/requesting-payments-along-with-signatures
      [paymentlineitem]:        /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/paymentLineItem
      [paymentdetails]:         /esign/restapi/Envelopes/EnvelopeRecipientTabs/create/#/definitions/paymentDetails
      [stripe]:                 https://stripe.com/


      ## Using Custom Tabs in Envelopes and Templates 

      Custom Tabs can be added to envelopes and templates
      by setting the `customTabId` property
      when creating an envelope or template recipient
      or when adding a new tab for an existing recipient.
      The custom tab must be added as the correct tab type.
      For example if the custom tab type is text, it cannot be used as a number tab.

      When the `customTabId` property is set,
      the new tab inherits all the custom tab properties.
      Required information that is not included in the custom tab,
      such as document ID and page ID, must be included when adding the tab.
      If the custom tab does not have anchor settings, the X and Y positions must be included.

      After the tab is created,
      it is treated as any other tab for updating or deleting. 

      ## Anchoring Tabs

      The tab anchoring option
      allows you to send documents for signature
      that do not have a fixed layout or format.
      In these documents you might not know
      the absolute location of the tabs
      when you design your API client application because the tabs must move with text.
      As an alternative to sending X and Y coordinates for tabs,
      the DocuSign Service can derive an anchor location for the tab
      by correlating anchor information to data within the document.

      When the DocuSign Service receives a request that contains tabs
      with anchor information,
      it searches the document for instances of the `anchorString` property.
      When found,
      it places a tab of the specified type for the designated recipient.
      Tab positions are established by setting offsets for the tab.

      When you apply tabs to the document,
      DocuSign does not remove or replace the text in the `anchorString` property. You can hide codified anchors by using the same font color as the background of the document. So the anchor can be used by DocuSign processes and it will not be visible on the document.

      To use an anchoring option:

      1. Identify the location in the document by text string. You can use a pre-existing text string or add a new one.
      For best performance DocuSign recommends using single word anchor strings when possible, especially when there are a large number of pages in the envelope. 
      For example, you might want to add a Sign Here tab to the "Borrower's Signature" lines in a document, but that phrase might occur in places in the document where you don't want to tab to appear. In this case, you could add the text "BorrowerSignHere" in white font color (so that isn't visible in the document) to all the places you want Sign Here tabs to appear and use "BorrowerSignHere" as the anchor string. 
      1. Reference the anchor through the `anchorString` property of the tab.
      1. Determine the offset from the anchor string location to where the tab should be placed. 

      Setting a positive value in the `anchorXOffset` property moves the tab right on the page and positive values in the  `anchorYoffset` prove moves the tab down the page. The `anchorUnits` property specifies the units used for the offsets.
      For Sign Here and Initial Here tabs the bottom-left of the anchor string is equivalent to position (0,0), and the bottom-left of the tab graphic is placed relative to that.
      For all other tabs the bottom-left of the anchor string is equivalent to position (0,0), and the top-left of the tab graphic is placed relative to that.
      DocuSign does not currently provide tools to derive the offset values. Determination of the proper offset will likely require some trial-and-error.

      ### Rules for working with anchor tags

      When anchor tabs are used, all documents in the envelope are searched for the `anchorString` property.

      * You set the text of the anchor string in the `anchorString` property. DocuSign tabs are created for each instance of the `anchorString` property within the document, so special care must be taken to establish unique anchor strings that do not result in unintentional tabs.
      * You cannot use the same anchored tab for different recipients for the same document.
      * The DocuSign system cannot search for text that is embedded in an image when checking for anchor strings.
      * X or Y offsets supplied for a tab apply to all instances of the tab in the document. To use different offsets at different locations in the document for the same recipient, create multiple, unique anchor tabs.
      * If the Y offset value of an anchor string would force a tab outside of the page boundaries, the tag is placed at the page boundary. If the X offset value places a tab outside of the page boundaries, the error message `Invalid_User_Offset` is sent. The error message includes the X offset that resulted in the error.
      * The system does not support an anchor string embedded in the form of a PDF X-object in the document.
      * The system does not re-flow the text that surrounds the anchor tabs. It is the responsibility of the document author to provide sufficient white space to contain the potential width of the ultimate tab value.

      ### Tips and Tricks

      The following are tips for effective use of anchor tags:
      * In order to avoid unintentional conflicts between text contained in an `anchorString` property and the text that naturally exists in documents, establish a codified syntax for the anchor string text that is unlikely to appear elsewhere in a document.
      * Develop an extensible and consistent syntax that can be used across multiple document types.
      * Especially for documents that have variable numbers of tabs or signers, author the source document to include hidden anchor tabs for all potential signers/permutations. Then, control the tabs that are actually placed by including/excluding the anchor tabs in the request. This approach allows a single document to be used for all use cases instead of maintaining separate documents for each scenario.

      ## Automatically Populating Tabs

      If you want similar tab types
      to automatically populate with the same data,
      you must follow these guidelines:

      * Each `tabLabel` entry must have the characters
        `\\*` in front of the label.
        If you omit the `\\*` prefix,
        only the first occurrence of the tab is populated.

        When automatically populating tabs,
        the `tabLabel` must not contain any spaces.
        In the JSON example below,
        the Text tabs  properties `StudentLastName` and `StudentFirstName`
        will be auto-populated as specified ("Doe" and "John")
        each place they appear throughout the envelope.

        ```
        "tabs": {
          "textTabs": [
          {
            "tabLabel": "\\*StudentLastName",
            "value": "Doe"
          },
          {
            "tabLabel": "\\*StudentFirstName",
            "value": "John"
          }]
        }
        ```

      * Each occurrence of the tab must have identical properties.

        For example, suppose there are two Text tabs in a document,
        each with `tabLabel` set to `Name`.
        If one tab has the `bold` property set to **true**,
        and the other has the `bold` property set to **false**,
        only the first one will be populated.
        In order to automatically populate both occurrences
        of the `Name` Text tabs,
        the `bold` property must be set to the same value for both tabs.
    name: EnvelopeRecipientTabs
  - description: ''
    name: EnvelopeDocumentTabs
  - description: ''
    name: TemplateDocumentTabs
  - description: |-
      The EnvelopeViews provides methods that return URLs that you can embed into your application to provide access to the DocuSign UI.

      The following views are available:

      * Console View - The authentication view of the DocuSign UI.
      * Correct View - The correction view of the DocuSign UI.
      * Edit View - The editing view of the DocuSign UI. Note that this provides same functionality as the sender view.
      * Recipient View The correction view of the DocuSign UI.
      * Sender View - The sending view of the DocuSign UI.
    name: EnvelopeViews
  - description: 'The Accounts resource provides methods that allow you to create, delete, and manage your accounts.'
    name: Accounts
  - description: This resource provides information on the Standards Based Signature providers that have been provisioned for this account.
    name: AccountSignatureProviders
  - description: |
      The Authentication resource provides access to methods that allow you to authenticate user credentials and change a user's password.

      The methods in this resource are suitable
      only for [service integrations][serviceintegrationdef]
      that use [Legacy Header Authentication][legacyauth].
      For authentication methods for
      [user applications][userappdef]
      and to learn more about
      DocuSign authentication
      see [Authentication Overview][authoverview].

      When accessing the API resources, the GET [Authentication:login method][login] is the first request you make. It allows you to determine whether a user is authenticated and provides the information you will need to make subsequent API requests.



      [authoverview]: ../../../guide/authentication/auth_overview.html
      [legacyauth]: ../../../guide/authentication/legacy_auth.html
      [login]: ./login/
      [serviceintegrationdef]: ../../../guide/appendix/glossary.html#serviceintegration
      [userappdef]: ../../../guide/appendix/glossary.html#userapplication
    name: Authentication
  - description: 'The UserSocialAccountLogins resource provides methods that allow you to manage the social login accounts for a user.  '
    name: UserSocialAccountLogins
  - description: 'The Billing resource provides methods that allow you to manage the billing plans,associated with an account.'
    name: BillingPlans
  - description: The Invoices resource provides methods that allow you to manage the invoices for an account.
    name: Invoices
  - description: |-
      The Payments resource provides methods that allow you to manage payments for an account.

      These calls can only be used by users with account administrator privileges.
    name: Payments
  - description: |-
      The BulkEnvelope resource provides methods that allow you to send the same document to a large number of recipients and get the status of the envelope. 

      General steps to use Bulk Send:

      * Create the bulk recipient CSV (Comma Separated Value) file that contains the list of recipient names and email addresses.
      The required and optional information that can be included the file is described in the [ML: BulkEnvelope: updateRecipients] method.
      * Create draft envelope by calling the Envelopes: createEnvelope method and add a bulk recipient signer. The envelope can be created from a template that has a bulk recipient.
      A bulk recipient signer is a Signer recipient type where `isBulkRecipient` property is set to true. There can only be one bulk recipient signer per envelope.
      Templates and draft envelopes can be saved with a bulk recipient signer, but a bulk recipient file must be uploaded before an envelope with a bulk recipient signer can be sent.
      * Add the bulk recipient file to the envelope by calling the BulkEnvelope: updateRecipients method.
      * Send the draft envelope by setting the `status` property on the envelope to `sent` and call the Envelopes:update method.
      Transitioning an envelope with a bulk recipient signer from `created` to `sent` triggers the sending of an envelope for each recipient in the associated bulk recipient file. The original (draft) envelope is discarded. The response returned from sending the envelope includes the following properties:
         * bulkRecipientsBatchId: Contains the batch identifier used to query the status of the entire bulk send operation.
         * bulkRecipientTransactions: Contains an array with identifying information about each envelope sent. The information included in this response:
            * transactionId: The ID used to reference the queued envelope transaction.
            * name: The name of the recipient assigned to this envelope transaction.
            * email: The email address of the recipient assigned to this envelope transaction.

      Once you send an envelope with a bulk recipient file, DocuSign creates a separate envelope for each recipient in the bulk recipient file - eliminating the need to separately create and send an envelope for each signer. You can get the status of the bulk send by calling BulkEnvelopes: get or BulkEnvelopes: list methods.

      You can customize authentication (access code, ID check, phone authentication, or social network IDs), add notes and other custom information for each recipient in the list by adding the information to the file.

      Bulk Send Limitations:

      * Bulk send must be enabled for your account (`accountSettings enableBulkRecipient` is set to **true**) and for the user sending the envelopes (the `allowBulkRecipients` property in `userSettings`  is set to **true**.)
      * Bulk send can only be used with Signer recipient types and there can only be one bulk recipient in an envelope or template. An envelope or template can have other Signers and recipient types that are added to the envelope or template normally. When a bulk recipient file is added to an envelope, the single bulk recipient Signer is replaced with all recipients in the bulk recipient file. There can only be one bulk recipient file associated with an envelope when it is sent.
      * When an envelope with bulk recipients is sent, the envelopes are added to a bulk recipient queue and sent in a metered fashion. There is a limit of 2,000 envelopes in the bulk recipient queue and an error message is shown to the sender if this limit is reached. If you receive this error, you should wait and resend the envelope at a later time.

      If you frequently run into queue limits, you can contact your account manage to discuss modifying the queue limits for your account.
    name: BulkEnvelopes
  - description: The CloudStorage resource provides methods that allow you to list files stored on your cloud storage provider.
    name: CloudStorage
  - description: |-
      The CloudStorageProviders resource provides methods that allow you to manage the cloud storage providers associate with an account.

      The following providers are supported:

      * Google Drive
      * Dropbox
      * Box
      * Evernote
      * OneDrive

      To use cloud storage files, you must first give DocuSign access to your cloud storage provider. You can disconnect authorized a cloud storage provider at any time.
    name: CloudStorageProviders
  - description: The ConnectConfigurations resource methods enable you to configure the DocuSign Connect service associated with an account.
    name: ConnectConfigurations
  - description: 'The ConnectEvents resource provides methods that allow you to read, delete, and republish the connect logs associated with an envelope.'
    name: ConnectEvents
  - description: |-
      The CustomTabs resource provides methods that allow you create and manage custom tabs based on the existing DocuSign tabs.

      You can create a tab with pre-defined properties, such as a text tab with a certain font type and validation pattern. Users can access the custom tabs when sending documents through the DocuSign web application.

      Custom tabs can be created based on the  approve, checkbox, company, date, date signed, decline, email, email address, envelope ID, first name, formula, full name, initial here, last name, list, note, number, radio, sign here, signer attachment, SSN, text, title, and zip tabs.
    name: CustomTabs
  - description: |-
      The RequestLogs resource provide methods that allow you to retrieve and delete the API request log files.

      The log files contain the API requests associated with your integration. They can aid you in troubleshooting specific issues within an integration, or if DocuSign Support requests an API trace log. 
    name: RequestLogs
  - description: The Resources resource provides a method which retrieves the base resources that are available.
    name: Resources
  - description: The Services resource provides a method that allow you to retrieve the available service versions.
    name: Services
  - description: The EnvelopeConsumerDisclosures resource provides a method that allows you to retrieve the consumer disclosure for an envelope.
    name: EnvelopeConsumerDisclosures
  - description: |+
      <!-- resources aren't rendered the same way
           as other pages. This is a little hack to
           make the headings work better -->
      <style>
      h1, h2, h3 {
        margin-top: 1em;
      }
      </style>

      The EnvelopeDocuments resource provides methods
      that manage documents in an envelope.
      You can:
      * add one or more documents to the envelope
      * retrieve one or more documents from the envelope
      * delete documents from the envelope

      All of the methods in this resource
      operate on on an existing envelope.
      Before you can add documents
      to an envelope,
      you must first create it
      with the [Envelopes: create][envelopescreate] method. 


      [envelopescreate]: /esign/restapi/Envelopes/Envelopes/create/

    name: EnvelopeDocuments
  - description: |-
      The EnvelopeEmailSettings provide methods that allow you to manage the email override settings for an envelope.

      Email override settings change the reply to email address, name, or the BCC for email archive information, for the envelope. Note that changing email settings will only affect email communications that occur after the addition was made.

      The BCC Email address feature is designed to provide a copy of all email communications for external archiving purposes. DocuSign recommends that envelopes sent using the BCC for Email Archive feature, including the BCC Email Override option, include additional signer authentication options. To send a copy of the envelope to a recipient who does not need to sign, use a Carbon Copies or Certified Deliveries Recipient Type.
    name: EnvelopeEmailSettings
  - description: |-
      The Envelope resource provides methods that allow you to manipulate and monitor envelopes. 

      Once you have authenticated the user you can use the Envelopes: createEnvelope method to create an envelope. You can call the EnvelopeDocuments: update or EnvelopeDocuments: updateList method to add additional documents.

      Setting the `status` property on the envelope to `sent` allows you to send it or `created` to save it as a draft.

      You can receive envelope event notifications by setting the `eventNotification` properties. When the envelope or recipient status changes to one of the specified status codes, a notification is sent to a URL that you specify.

      If you have an envelope that you have previously saved, you can modify the subject and message, send it, void it, or place it in the purge queue using the Envelope: update method.

      In addition to receiving notifications you can monitor the status of the envelopes using the following methods:
      * Envelope: getEnvelope - To get the status of a envelope. 
      * Envelope: listStatus - To get the envelope status for a set of envelopes.
      * Envelope: listStatusChanges - To get status changes information for one or more envelopes. 

      If you need to delete a page from a document in an envelope, use the Envelope: deleteDocumentPage method.

      The resource also includes a number of methods that allow you to retrieve and set the initials and signature for certain types of recipients on the document.
    name: Envelopes
  - description: The EnvelopeTemplates resource provides methods that allow you to add and delete templates on envelopes and documents.
    name: EnvelopeTemplates
  - description: The Folders resource provides methods that allow you to view contents of folders on the account and move envelopes between folders.
    name: Folders
  - description: 'The GroupBrands resource provides methods that allow you to manage '
    name: GroupBrands
  - description: |-
      The Groups resource provides methods that allow you to manage groups for the account.

      Groups can be used to help manage users by associating users with a group. A group can be associated with a Permission Profile, which sets the user permissions for users in that group without having to set the `userSettings` property for each user. You are not required to set Permission Profiles for a group, but this makes it easier to manage user permissions for a large number of users. Groups can also be used with template sharing to limit user access to templates.
    name: Groups
  - description: The GroupUsers resource provides methods that allow you to manage the users in a group.
    name: GroupUsers
  - description: |-
      The SigningGroups resource provides methods that allow you manage signing groups.

      Signing Groups allow you to create a group of people to which an envelope is sent. Any member of that group can open an envelope and sign the documents in the envelope with their own signature, even though a signature field was not directly assigned to them. When the Signing Group option is used, group members that open and sign the envelope are tracked in the envelope history and certificate.

      When one group member opens the envelope, it is temporarily locked and if other members try to open the envelope they will see a message saying the envelope is currently opened. If the group member exits the envelope without finishing the lock expires, allowing other group members to open and complete the envelope.

      When the envelope is complete, all members of the group will receive a completed notification and can access the completed envelope. 
      The envelope history and Certificate of Completion will show that the envelope was sent to a signing group and record which members viewed and signed the envelope.

      An account can have a maximum of 50 signing groups. Each signing group can have a maximum of 50 group members.

      The Signing Groups feature is only supported in certain DocuSign Enterprise and System Automated Premium plans. Your account might not support this option. To access this functionality, contact your Account Manager or DocuSign Support (support@docusign.com) for assistance.
    name: SigningGroups
  - description: The SigningGroupUsers resource provides methods that allow you to manage users in Signing Groups.
    name: SigningGroupUsers
  - description: |-
      The TemplateRecipients resource allows you manage the recipients of an template.

      The exact parameters associated with a recipient depend on the recipient type. There are seven recipient types: Agents, Carbon Copies, Certified Deliveries, Editors, In Person Signers, Intermediaries, and Signers. 

      Not all recipients are are available to all account types, review you account plan to determine which recipient types are available to you. If you are working in the Demo environment, all recipient types are available.

      Each recipient type is described below:

      [Agents](#agents): This recipient can add name and email information for recipients that appear after the recipient in routing order.

      [Carbon Copies](#carboncopies): Use this action if the recipient should get a copy of the template, but the recipient does not need to sign, initial, date or add information to any of the documents. This type of recipient can be placed in any order in the recipient list. The recipient receives a copy of the template when the template reaches the recipient's order in the process flow and when the template is completed.

      [Certified Deliveries](#certifiedDeliveries): Use this action if the recipient must receive the completed documents for the template to be completed, but the recipient does not need to sign, initial, date or add information to any of the documents.

      [Editors](#editors): This recipient has the same management and access rights for the template as the sender and can make changes to the template as if they were using the Advanced Correct feature. This recipient can add name and email information, add or change the routing order and set authentication options for the remaining recipients. Additionally, this recipient can edit signature/initial tabs and data fields for the remaining recipients. The recipient must have a DocuSign account to be an editor.

      [In Person Signers](#inPerson): Use this action if the signer is in the same physical location as a DocuSign user who will act as a Signing Host for the transaction. The recipient added is the Signing Host and new separate Signer Name field appears after Sign in person is selected.

      [Intermediaries](#intermediaries): This recipient can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order (until subsequent Agents, Editors or Intermediaries recipient types are added).

      [Signers](#signers): Use this action if your recipient must sign, initial, date or add data to form fields on the documents in the template.

      ### Core JSON Layout

      The following shows the core JSON layout for a recipient.

      ```
      "email": "email.name@company.com",
        "name": "recipient name",
        "accessCode": "",
        "addAccessCodeToEmail": false,
        "clientUserIs": null,
        "embeddedRecipientStartURL": "string",
        "customFields": {
          "sample string 1",
          "sample string 2"
        },
        "emailNotification"{
          "emailBody":"email text",
          "emailSubject":"Subject text",
          "supportedLanguage":"en",
        },
        "excludedDocuments": ["2", "4"],
        "idCheckConfigurationName": null,
        "idCheckInformationInput": {
          "addressInformationInput": {
            "addressInformation": {
              "street1": "sample string 1",
              "street2": "sample string 2",
              "city": "sample string 3",
              "state": "sample string 4",
              "zip": "sample string 5",
              "zipPlus4": "sample string 6"
            },
            "displayLevelCode": "sample string 1",
            "receiveInResponse": "sample string 2"
          },
          "dobInformationInput": {
            "dateOfBirth": "sample string 1",
            "displayLevelCode": "sample string 2",
            "receiveInResponse": "sample string 3"
          },
          "ssn4InformationInput": {
            "ssn4": "sample string 1",
            "displayLevelCode": "sample string 2",
            "receiveInResponse": "sample string 3"
          },
          "ssn9InformationInput": {
            "ssn9": "sample string 1",
            "displayLevelCode": "sample string 2"
          }
        },
        "inheritEmailNotificationConfiguration": false,
        "note": "",
        "phoneAuthentication": {
          "recipMayProvideNumber": "sample string 1",
          "validateRecipProvidedNumber": "sample string 2",
          "recordVoicePrint": "sample string 3",
          "senderProvidedNumbers": [
            "sample string 1",
            "sample string 2"
          ]
        },
        "recipientAttachment": null,
        "recipientCaptiveInfo": null,
        "recipientId": "1",
        "requireIdLookup": false,
        "roleName": "",
        "routingOrder": 1,
        "samlAuthentication": {
          "samlAssertionAttributes": [
            {
              "name": "string",
              "value": "string"
            },
            {
              "name": "string",
              "value": "string"
            }
          ]
        },
        "smsAuthentication": {
          "senderProvidedNumbers":[
            "sample string 1",
            "sample string 2"
          ]
        },
        "socialAuthentications": null,
        "templateAccessCodeRequired": false,
        "templateLocked": false,
        "templateRequired": false,
      ...
      ```

      ### Core Recipient Parameters

      The following table contains the descriptions for the core properties for a recipient.

      | Name | Required? | Schema Type | Description |
      | --- | --- | --- | --- |
      | email | Yes | Email | Email of the recipient. Notification will be sent to this email id.<br/>Maximum Length: 100 characters. |
      | name | Yes | String | Full legal name of the recipient.<br/>Maximum Length: 100 characters. |
      | accessCode | No | String | This optional element specifies the access code a recipient has to enter to validate the identity.<br/>Maximum Length: 50 characters. |
      | addAccessCodeToEmail | No | Boolean | This optional attribute indicates that the access code is added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient. |
      | clientUserId | No | String | This specifies whether the recipient is embedded or remote.<br/><br/>If the `clientUserId` property is not null then the recipient is embedded. Note that if the `ClientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending. |
      | embeddedRecipientStartURL | No | String | This is a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would, but when the document link in the email is clicked the recipient is redirected, through DocuSign, to this URL to complete their actions. When routing to the URL, it is up to the sender's system (the server responding to the URL) to then request a recipient token to launch a signing session.<br/><br/>If the value `SIGN_AT_DOCUSIGN` is used for this node, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that would be launched by any partner.<br/><br/>It is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application and DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets  the `EmbeddedRecipientStartURL` property to `SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) be used to verify the identity of the recipient.<br/><br>If the `clientUserId` property is NOT set and the `embeddedRecipientStartURL` property is set, DocuSign ignores the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the `embeddedRecipientStartURL` property using merge fields. The available merge fields items are: templateId, recipientId, recipientName, recipientEmail, and customFields. The customFields must be part of the recipient or template. The merge fields are enclosed in double brackets.<br/><br/>_Example_:<br/>`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` |
      | customFields | No | customField |An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the template status but otherwise not used by DocuSign. String `customField` properties have a maximum length of 100 characters. |
      | emailNotification | No | emailNotification | An optional complex type that has information for setting the language for the recipient's email information. It is composed of three elements:<br/><br/>*emailBody*: a string with the email message sent to the recipient.<br/>Maximum Length: 10000 characters.<br/><br/>*emailSubject*: a string with the subject of the email sent to the recipient.<br/>Maximum Length: 100 characters.<br/><br/>*supportedLanguage*: The simple type enumeration of the language used. The supported languages, with the language value shown in parenthesis, are: Arabic (ar), Bahasa Indonesia (id), Bahasa Melayu (ms) Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro),Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk) and Vietnamese (vi).<br/><br/>**IMPORTANT**: If this is enabled for one recipient, it overrides the Template Subject and `EmailBlurb` property settings. Also, you must set the  `emailNotification` property for all recipients. |
      | excludedDocuments | No | Array of Strings | Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the enforceSignerVisibility property must be set to true for the template to use this.<br/><br/>When the enforceSignerVisibility property is set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an template, unless they are specifically excluded using this setting when an template is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an template is sent. |
      | idCheckConfigurationName | No | String |Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient). This overrides any default authentication setting.<br/><br/>_Example_:<br/> Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an template, the `idCheckConfigurationName` property must be  set to `ID Check $`. To use SMS, it must be set to `SMS Auth $` and you must add phone number information to the `smsAuthentication` node.|
      | iDCheckInformationInput | No | IdCheckInformationInput | This complex element contains input information related to a recipient ID check. It can include the following information.<br/><br/>*addressInformationInput*: Used to set recipient address information and consists of:<br/><br/>*addressInformation*: consists of six elements, with street2 and zipPlus4 being optional. The elements are: street1, street2, city, state, zip, zipPlus4\. The maximum number of characters in each element are: street1/street2 = 150 characters, city = 50 characters, state = 2 characters, and zip/zipPlus4 = 20 characters.<br/><br/>displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.<br/><br/>*receiveInResponse*: A Boolean element that specifies if the information needs to be returned in the response.<br/><br/>*dobInformationInput*: Used to set recipient date of birth information and consists of:<br/><br/>*dateOfBirth*: Specifies the recipient's date, month and year of birth.<br/><br/>*displayLevelCode*: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.<br/><br/>*receiveInResponse*: A Boolean element that specifies if the information needs to be returned in the response.<br/><br/>*ssn4InformationInput*: Used to set the last four digits of the recipient's SSN information and consists of:<br/><br/>*ssn4*: Specifies the last four digits of the recipient's SSN.<br/><br/>*displayLevelCode*: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.<br/><br/>*receiveInResponse*: A Boolean element that specifies if the information needs to be returned in the response.<br/><br/>*ssn9InformationInput*: Used to set the recipient's SSN information. Note that the ssn9 information can never be returned in the response. The ssn9 input consists of:<br/><br/><br/><br/>*ssn9*: Specifies the recipient's SSN.<br/><br/>*displayLevelCode*: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay. |
      | inheritEmailNotificationConfiguration | No | Boolean | Optional element. If true and the template recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. |
      | note | No | String | A note that is unique to this recipient. This note is sent to the recipient via the signing email. The note displays in the signing UI near the upper left corner of the document on the signing screen.<br/>Maximum Length: 1000 characters. |
      | phoneAuthentication | No | RecipientPhoneAuthentication | Optional element. Contains the elements: <br/><br/> *recipMayProvideNumber*:Boolean. When set to **true** thenrecipient can use whatever phone number they choose to.<br/><br/> *senderProvidedNumbers*: ArrayOfString. A list of phone numbers the recipient can use. <br/><br/>*recordVoicePrint* - Reserved <br/><br/>*validateRecipProvidedNumber* - Reserved| |
      | recipientAttachment | No | Attachment | Reserved |
      | recipientId | No | String | Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document. |
      | requireIdLookup | No | Boolean | When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. |
      | roleName | No* | String | Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients. |
      | routingOrder | Yes | String | This element specifies the routing order of the recipient in the template. |
      | samlAuthentication | No | samlAssertionAttributes | Optional element, account must be set up to use SSO to use this. Contains the name/value pair information for the SAML assertion attributes:<br/><br/>*name*: The name of the SAML assertion attribute.<br/><br/>*value*: The value associated with the named SAML assertion attribute. |
      | smsAuthentication | No | senderProvidedNumbers | Optional element. Contains the element:<br/><br/>*senderProvidedNumbers*: Array that contains a list of phone numbers the recipient can use for SMS text authentication. |
      | socialAuthentications | No | Boolean | Lists the social ID type that can be used for recipient authentication. |
      | templateAccessCodeRequired | No | Boolean | Optional element. Used only when working with template recipients. When set to **true** and the `TemplateLocked` parameter is set to **true**, the sender must enter an access code. |
      | templateLocked | No | Boolean | Optional element. Used only when working with template recipients. When set to **true**, the sender cannot change any attributes of the recipient. |
      | templateRequired | No | Boolean | Optional element. Used only when working with template recipients. When set to **true**,  the sender may not remove the recipient. |

      ## <a name="agents"></a> Agents Recipient

      This recipient can add name and email information for recipients that appear after the recipient in routing order.

      #### Example Agents layout

      ```
      "agents": [{
       <core parameters>
        "canEditRecipientEmails": false,
        "canEditRecipientNames": false
      }],
      ```

      The additional parameters for Agents recipient are shown below:

      | Name | Required? | Schema Type | Description |
      | --- | --- | --- | --- |
      | canEditRecipientEmails | No | Boolean | Optional element. When set to **true**, the Agents Recipient associated with this Recipient can change the Recipient's pre-populated Email address. This element is only active if enabled for the account. |
      | canEditRecipientNames | No | Boolean | Optional element. When set to **true**, the Agents Recipient associated with this recipient can change the recipient's pre-populated name (`UserName`). This element is only active if enabled for the account. |

      ## <a name="carbonCopies"></a>Carbon Copies Recipient

      Use this type if the recipient should get a copy of the template, but the recipient does not need to sign, initial, date, or add information to any of the documents. This type of recipient can be placed in any order in the recipient list. The recipient receives a copy of the template when the template reaches the recipient's order in the process flow and when the template is completed.

      #### Example Carbon Copies layout

      ```
      "carbonCopies": [{
       <core parameters>
      ```

      The Carbon Copies recipient uses only the core parameters.

      ## <a name="certifiedDeliveries"></a>Certified Deliveries Recipient

      Use this action if the recipient must receive the completed documents for the template to be completed, but the recipient does not need to sign, initial, date, or add information to any of the documents.

      #### Example Certified Deliveries layout

      ```
      "certifiedDeliveries": [{
      <core parameters>
      }],
      ```
      The Certified Deliveries recipient uses only the core parameters.

      ## <a name="editors"></a>Editors Recipient

      This recipient has the same management and access rights for the template as the sender and can make changes to the template as if they were using the Advanced Correct feature. This recipient can add name and email information, add or change the routing order and set authentication options for the remaining recipients. Additionally, this recipient can edit signature/initial tabs and data fields for the remaining recipients. The recipient must have a DocuSign account to be an editor.

      #### Example Editors layout

      ```
      "editors": [{
       <core parameters>
        "canEditRecipientEmails": false,
        "canEditRecipientNames": false
      }],
      ```

      The additional parameters for Editors recipient are shown below:

      | Name | Required? | Schema Type | Description |
      | --- | --- | --- | --- |
      | canEditRecipientEmails | No | Boolean | Optional element. When set to **true**, the Editors Recipient associated with this Recipient can change the Recipient's pre-populated Email address. This element is only active if enabled for the account. |
      | canEditRecipientNames | No | Boolean | Optional element. When set to **true**, the Editors Recipient associated with this recipient can change the recipient's pre-populated name (`UserName`). This element is only active if enabled for the account. |

      ## <a name="inPerson"></a>In Person Signers Recipient

      Use this type if the signer is in the same physical location as a DocuSign user who will act as a Signing Host for the transaction. The recipient added is the Signing Host and new separate Signer Name field appears after Sign in person is selected.

      #### Example In Person Signers layout

      ```
      "inPersonSigners": [{
        "hostEmail": "signing.host@company.com",
        "hostName": "Mike Host",
       <core parameters>
        "autoNavigation": false,
        "defaultRecipient": false,
        "signInEachLocation": false,
        "signatureInfo": null,
        "signerEmail": "signer.name@company.com",
        "signerName": "MC Clap Your Hands",
        "tabs": {
          "approveTabs": null,
          "checkboxTabs": null,
          "companyTabs": null,
          "dateSignedTabs": null,
          "dateTabs": null,
          "declineTabs": null,
          "emailTabs": null,
          "templateIdTabs": null,
          "fullNameTabs": null,
          "initialHereTabs": null,
          "listTabs": null,
          "noteTabs": null,
          "numberTabs": null,
          "radioGroupTabs": null,
          "signHereTabs": [{
          "signerAttachmentTabs": null,
          "ssnTabs": null,
          "textTabs": null,
          "titleTabs": null,
          "zipTabs": null
        }
      }],
      ```

      The additional and changed parameters for In Person Signers recipient are shown below:

      | Name | Required? | Schema Type | Description |
      | --- | --- | --- | --- |
      | hostEmail | Yes | Email | Required element for In Person Signers recipient Type.<br/>Maximum Length: 100 characters.<br/><br/>Specifies the email for the signing host. |
      | hostName | Yes | String | Required element for In Person Signers recipient Type.<br/>Maximum Length: 100 characters.<br/><br/>Specifies the email for the signing host.|
      | autoNavigation | No | Boolean | Specifies whether auto navigation is set for the recipient.|
      | defaultRecipient | No | Boolean | When set to **true**, this is the default recipient for the template. This option is used with the CreateTemplateFromTemplatesAndForms method. |
      | signInEachLocation | No | Boolean | When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once). |
      | signatureInfo | No | String | Optional element only used with recipient types In Person Signers and Signers.<br/><br/>Allows the sender to pre-specify the signature name, signature initials, and signature font used in the signature stamp for the recipient. |
      | signerEmail | No | String | Optional element. The email address for an InPersonSigner recipient Type.<br/>Maximum Length: 100 characters. |
      | signerName | Yes | String | Required element with recipient type In Person Signers.<br/>Maximum Length: 100 characters.<br/><br/>The full legal name of a signer for the template. |
      | tabs | No | Tab | Optional element only used with recipient types In Person Signers and Signers.<br/><br/>Specifies the Tabs associated with the recipient. See the [ML:Tab Parameters] section for more information about tabs. |

      ## <a name="intermediaries"></a>Intermediaries Recipient

      This recipient can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order (until subsequent Agents, Editors or Intermediaries recipient types are added).

      #### Example Intermediaries layout

      ```
      "intermediaries": [{
      <core parameters>
        "canEditRecipientEmails": false,
        "canEditRecipientNames": false
      }],
      ```

      The parameters for Intermediaries recipient are shown below:

      | Name | Required? | Schema Type | Description |
      | --- | --- | --- | --- |
      | canEditRecipientEmails | No | Boolean | Optional element. When set to **true**, the Agents Recipient associated with this Recipient can change the Recipient's pre-populated Email address. This element is only active if enabled for the account. |
      | canEditRecipientNames | No | Boolean | Optional element. When set to **true**, the Agents Recipient associated with this recipient can change the recipient's pre-populated name (`UserName`). This element is only active if enabled for the account. |

      ## <a name="signers"></a>Signers Recipient

      Use this action if your recipient must sign, initial, date, or add data to form fields on the documents in the template.

      #### Example Signers layout

      ```
      "Signers": [{
      <core paramters>
        "autoNavigation": false,
        "defaultRecipient": false,
        "signInEachLocation": false,
        "signatureInfo": null,
        "tabs": {
          "approveTabs": null,
          "checkboxTabs": null,
          "companyTabs": null,
          "dateSignedTabs": null,
          "dateTabs": null,
          "declineTabs": null,
          "emailTabs": null,
          "templateIdTabs": null,
          "fullNameTabs": null,
          "initialHereTabs": null,
          "listTabs": null,
          "noteTabs": null,
          "numberTabs": null,
          "radioGroupTabs": null,
          "signHereTabs": [{
          "signerAttachmentTabs": null,
          "ssnTabs": null,
          "textTabs": null,
          "titleTabs": null,
          "zipTabs": null
        }
        "deliveryMethod":"",
        "deliveredDateTime":"String Content",
        "signedDateTime":"String Content",
        "offlineAttributes":{
          "deviceName":"String Content",
          "deviceModel":"String Content",
          "gpsLatitude":"String Content",
          "gpsLongitude":"String Content",
          "accountEsignId":"String Content"
        }
      }],
      ```

      The additional parameters for Signers recipient are shown below:

      | Name | Required? | Schema Type | Description |
      | --- | --- | --- | --- |
      | autoNavigation | No | Boolean | Specifies whether auto navigation is set for the recipient.|
      | defaultRecipient | No | Boolean | When set to **true**, this is the default recipient for the template. This option is used with the CreateTemplateFromTemplatesAndForms method. |
      | signInEachLocation | No | Boolean | When set to **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once). |
      | signatureInfo | No | String | Optional element only used with recipient types In Person Signers and Signers.<br/><br/>Allows the sender to pre-specify the signature name, signature initials, and signature font used in the signature stamp for the recipient. |
      | signerEmail | No | String | Optional element. The email address for an InPersonSigner recipient Type.<br/>Maximum Length: 100 characters. |
      | signerName | Yes | String | Required element with recipient type In Person Signers.<br/>Maximum Length: 100 characters.<br/><br/>The full legal name of a signer for the template. |
      | tabs | No | Tab | Optional element only used with recipient types In Person Signers and Signers.<br/><br/>Specifies the Tabs associated with the recipient. See the [ML:Tab Parameters] section for more information about tabs. |
      | deliveryMethod | No | String | Reserved: For DocuSign use only.|
      | deliveredDateTime | No | DateTime | Reserved: For DocuSign use only. |
      | signedDateTime | No | DateTime | Reserved: For DocuSign use only. |
      | offlineAttributes | No | &nbsp; | Reserved: For DocuSign use only.|
    name: TemplateRecipients
  - description: |-
      The TemplateBulkRecipients resource provide methods that allow you manage the bulk recipient file for an template.

      The bulk recipient CSV (Comma Separated Value) file contains the list of recipient names and email addresses that you can add to an template to send the same document to a large number of recipients.
       
      The required and optional information that can be included the file is described in the BulkEnvelope: updateRecipients method
    name: TemplateBulkRecipients
  - description: |-
      The TemplateCustomFields resource provides methods that allow you manage custom fields in an template. 

      Custom fields can be used in the templates for your account to record information about the template, help search for templates and track information. The template custom fields are shown in the Template Settings section when a user is creating an template in the DocuSign member console. The template custom fields are not seen by the template recipients.

      There are two types of template custom fields, text and list. A text custom field lets the sender enter the value for the field. With a list custom field, the sender selects the value of the field from a pre-made list.
    name: TemplateCustomFields
  - description: |-
      The TemplateDocumentFields resource provides methods that allow you to manage custom fields on a document.

      You can create custom versions of standard fields that combine of field properties, such as font type or size, or a validation setting. 

      Note: Some advanced features and options are supported only in certain DocuSign plans. Your account plan might not support some options discussed in this help topic. For more information about which options are available for your account, check your account plan or contact your Account Manager.
    name: TemplateDocumentFields
  - description: |
      <!-- resources aren't rendered the same way
           as other pages. This is a little hack to
           make the headings work better -->
      <style>
      h1, h2, h3 {
        margin-top: 1em;
      }
      </style>

      The TemplateDocuments resource provides methods
      that manage documents in a template.
      You can:
      * add one or more documents to the template
      * retrieve one or more documents from the template
      * delete documents from the template

      All of the methods in this resource
      operate on on an existing template.
      Before you can add documents
      to a template,
      you must first create it
      with the [Templates: create][templatescreate] method. 

      [templatescreate]: /esign/restapi/Templates/Templates/create/
    name: TemplateDocuments
  - description: |-
      The TemplateLocks resource provides methods that allow you to manage locks on an template.

      You can lock the template, and set the time until the lock expires, to prevent users from accessing and changing the template.

      Users must have envelope locking capability enabled to use these functions.
    name: TemplateLocks
  - description: |-
      The Template resource provides methods that allow you to manipulate and monitor templates. 

      Once you have authenticated the user you can use the Templates: createTemplate method to create an template. You can call the TemplateDocuments: update or TemplateDocuments: updateList method to add additional documents.

      If you have an template that you have previously saved, you can modify the subject and message, send it, void it, or purge it from the DocuSign system using the Template: update.

      In addition to receiving notifications you can monitor the status of the templates using the following methods:
      * Template: getTemplate - To get the status of a template. 
      * Template: listStatus - To get the template status for a set of templates.
      * Template: listStatusChanges - To get status changes information for one or more templates. 

      If you need to delete a page from a document in an template, use the Template: deleteDocumentPage method.

      The resource also includes a number of methods that allow you to retrieve and set the initials and signature for certain types of recipients on the document.
    name: Templates
  - description: |
      <!-- resources aren't rendered the same way
           as other pages. This is a little hack to
           make the headings work better -->
      <style>
      h1, h2, h3 {
        margin-top: 1em;
      }
      </style>

      The TemplateRecipientTabs resource provides methods that let you
      add,
      update,
      and delete tabs
      from an envelope.
      Tabs are associated with a specific recipient
      in an envelope
      and are only used by the recipient types
      In Person Signers and Signers. 


      ## Tab Types

      This table lists the available tab types.

      <br>


      | Tab Type              | Description |
      | :-------              | :---------- |
      | Approve Tab           | Place this tab on the document if you want the recipient to approve documents in an envelope without placing a signature or initials on the document. If the recipient clicks the Approve tab during the signing process, the recipient is considered to have signed the document. No information is shown on the document for the approval, but it is recorded as a signature in the envelope history. |
      | Checkbox Tab          | Place this tab on the document in a location where the recipient can select a yes/no (on/off) type option. |
      | Company Tab           | Place this tab on the document where you want the recipient's company name to appear. |
      | Date Signed Tab       | Place this tab on the document where you want the date the recipient signed the document to appear. |
      | Date Tab              | Place this tab on the document where you want the recipient to enter a date. Date tabs are single-line fields that allow date information to be entered in any format. The tooltip for this tab recommends entering the date as MM/DD/YYYY, but this is not enforced. The format entered by the signer is retained. If you need a particular date format enforced, DocuSign recommends using a Text tab with a Validation Pattern and Validation Message to enforce the format. |
      | Decline Tab           | Place this tab on the document where you want to give the recipient the option of declining an envelope. If the recipient clicks the Decline tab during the signing process, the envelope is voided. |
      | Email Address Tab     | Place this tab on a document where you want the recipient's email, as entered in the recipient information, to appear. |
      | Email Tab             | This is a single-line field that accepts any characters. |
      | Envelope ID Tab       | Place this tab on the document where you want the envelope ID for to appear. Recipients cannot enter or change the information in this tab. It is for informational purposes only. |
      | First Name Tab        | Place this tab on a document where you want the recipient's first name to appear. This tab takes the recipient's name, as entered in the recipient information, splits it into sections based on spaces and uses the first section as the first name. |
      | Formula Tab           | This tab is used to add a calculated field to a document. Envelope recipients cannot directly enter information into the tab. The formula tab calculates and displays a new value when changes are made to the reference tab values. The reference tab information and calculation operations are entered in the "formula" element. See the Using the Calculated Fields Feature quick start guide or DocuSign Service User Guide for more information about formulas.  |
      | Full Name Tab         | Place this tab on the document where you want the recipient's full name to appear. |
      | Initial Here Tab      | Place this tab where the recipient must initial the document. This tab can be set to be optional.  |
      | Last Name Tab         | Place this tab on a document where you want the recipient's last name to appear. This tab takes the recipient's name, as entered in the recipient information, splits it into sections based on spaces and uses the last section as the last name. |
      | List Tab              | This tab has a list of options that a recipient can select. The `listItems` parameter is used to set the options that can be selected.  |
      | Note Tab              | Place this tab on the document where you want to add a note for the recipient on a document. |
      | Number Tab            | This tab is a field where the recipient can enter numbers and decimal (.) points.  |
      | Radio Group Tab       | This group tab is used to place radio buttons on a document. The `radios` parameter is used to add and place the radio buttons associated with the group. Only one radio button can be selected in a group.  |
      | Sign Here Tab         | Place this tab where the recipient must sign the document. This tab can be set to be optional.  |
      | Signer Attachment Tab | The signer attachment is where the recipient initiates the process of adding supporting documents to an envelope. |
      | SSN Tab               | This tab is a single-line field where the recipient can enter numbers. A Social Security Number can be typed with or without dashes. |
      | Text Tab              | This tab is a field where the recipient can enter any type of characters.  |
      | Title Tab             | Place this tab on the document where you want the recipient's title to appear. |
      | Zip Tab               | This tab is a single-line field where the recipient can enter numbers. |


      ## Using Custom Tabs in Envelopes and Templates 

      Custom Tabs can be added to envelopes and templates
      by setting the `customTabId` property
      when creating an envelope or template recipient
      or when adding a new tab for an existing recipient.
      The custom tab must be added as the correct tab type.
      For example if the custom tab type is text, it cannot be used as a number tab.

      When the `customTabId` property is set,
      the new tab inherits all the custom tab properties.
      Required information that is not included in the custom tab,
      such as document ID and page ID, must be included when adding the tab.
      If the custom tab does not have anchor settings, the X and Y positions must be included.

      After the tab is created,
      it is treated as any other tab for updating or deleting. 

      ## Anchoring Tabs

      The tab anchoring option
      allows you to send documents for signature
      that do not have a fixed layout or format.
      In these documents you might not know
      the absolute location of the tabs
      when you design your API client application because the tabs must move with text.
      As an alternative to sending X and Y coordinates for tabs,
      the DocuSign Service can derive an anchor location for the tab
      by correlating anchor information to data within the document.

      When the DocuSign Service receives a request that contains tabs
      with anchor information,
      it searches the document for instances of the `anchorString` property.
      When found,
      it places a tab of the specified type for the designated recipient.
      Tab positions are established by setting offsets for the tab.

      When you apply tabs to the document,
      DocuSign does not remove or replace the text in the `anchorString` property. You can hide codified anchors by using the same font color as the background of the document. So the anchor can be used by DocuSign processes and it will not be visible on the document.

      To use an anchoring option:

      1. Identify the location in the document by text string. You can use a pre-existing text string or add a new one.
      For best performance DocuSign recommends using single word anchor strings when possible, especially when there are a large number of pages in the envelope. 
      For example, you might want to add a Sign Here tab to the "Borrower's Signature" lines in a document, but that phrase might occur in places in the document where you don't want to tab to appear. In this case, you could add the text "BorrowerSignHere" in white font color (so that isn't visible in the document) to all the places you want Sign Here tabs to appear and use "BorrowerSignHere" as the anchor string. 
      1. Reference the anchor through the `anchorString` property of the tab.
      1. Determine the offset from the anchor string location to where the tab should be placed. 

      Setting a positive value in the `anchorXOffset` property moves the tab right on the page and positive values in the  `anchorYoffset` prove moves the tab down the page. The `anchorUnits` property specifies the units used for the offsets.
      For Sign Here and Initial Here tabs the bottom-left of the anchor string is equivalent to position (0,0), and the bottom-left of the tab graphic is placed relative to that.
      For all other tabs the bottom-left of the anchor string is equivalent to position (0,0), and the top-left of the tab graphic is placed relative to that.
      DocuSign does not currently provide tools to derive the offset values. Determination of the proper offset will likely require some trial-and-error.

      ### Rules for working with anchor tags

      When anchor tabs are used, all documents in the envelope are searched for the `anchorString` property.

      * You set the text of the anchor string in the `anchorString` property. DocuSign tabs are created for each instance of the `anchorString` property within the document, so special care must be taken to establish unique anchor strings that do not result in unintentional tabs.
      * You cannot use the same anchored tab for different recipients for the same document.
      * The DocuSign system cannot search for text that is embedded in an image when checking for anchor strings.
      * X or Y offsets supplied for a tab apply to all instances of the tab in the document. To use different offsets at different locations in the document for the same recipient, create multiple, unique anchor tabs.
      * If the Y offset value of an anchor string would force a tab outside of the page boundaries, the tag is placed at the page boundary. If the X offset value places a tab outside of the page boundaries, the error message `Invalid_User_Offset` is sent. The error message includes the X offset that resulted in the error.
      * The system does not support an anchor string embedded in the form of a PDF X-object in the document.
      * The system does not re-flow the text that surrounds the anchor tabs. It is the responsibility of the document author to provide sufficient white space to contain the potential width of the ultimate tab value.

      ### Tips and Tricks

      The following are tips for effective use of anchor tags:
      * In order to avoid unintentional conflicts between text contained in an `anchorString` property and the text that naturally exists in documents, establish a codified syntax for the anchor string text that is unlikely to appear elsewhere in a document.
      * Develop an extensible and consistent syntax that can be used across multiple document types.
      * Especially for documents that have variable numbers of tabs or signers, author the source document to include hidden anchor tabs for all potential signers/permutations. Then, control the tabs that are actually placed by including/excluding the anchor tabs in the request. This approach allows a single document to be used for all use cases instead of maintaining separate documents for each scenario.

      ## Automatically Populating Tabs

      If you want similar tab types
      to automatically populate with the same data,
      you must follow these guidelines:

      * Each `tabLabel` entry must have the characters
        `\\*` in front of the label.
        If you omit the `\\*` prefix,
        only the first occurrence of the tab is populated.

        When automatically populating tabs,
        the `tabLabel` must not contain any spaces.
        In the JSON example below,
        the Text tabs  properties `StudentLastName` and `StudentFirstName`
        will be auto-populated as specified ("Doe" and "John")
        each place they appear throughout the envelope.

        ```
        "tabs": {
          "textTabs": [
          {
            "tabLabel": "\\*StudentLastName",
            "value": "Doe"
          },
          {
            "tabLabel": "\\*StudentFirstName",
            "value": "John"
          }]
        }
        ```

      * Each occurrence of the tab must have identical properties.

        For example, suppose there are two Text tabs in a document,
        each with `tabLabel` set to `Name`.
        If one tab has the `bold` property set to **true**,
        and the other has the `bold` property set to **false**,
        only the first one will be populated.
        In order to automatically populate both occurrences
        of the `Name` Text tabs,
        the `bold` property must be set to the same value for both tabs.
    name: TemplateRecipientTabs
  - description: |
      The TemplateViews resource
      provides a method returns a URL
      that you can embed into your application
      to provide access to the DocuSign UI.

      One template view is available:

      * Edit View - the DocuSign UI for editing a template.

      This resource is related to the [EnvelopeViews][envelopeviews] resource.
      Both enable you to embed the DocuSign UI into your application.


      [envelopeviews]: /esign/restapi/Envelopes/EnvelopeViews/
    name: TemplateViews
  - description: |-
      The UserCustomSettings resource provides methods that allow you to manage the custom settings for a user.

      Custom settings are a flexible way to store and retrieve custom user information that can be used in your own system.

      There is a limit on the size for all the custom user settings for a single user. All the custom user settings for a single user is limited to 4,000 characters, which includes the xml and json structure for the settings.
    name: UserCustomSettings
  - description: The UserProfiles resource provides methods that allow you to manage a user's profile.
    name: UserProfiles
  - description: The Users resource provides methods that allow you to manage users for an account.
    name: Users
  - description: The UserSignatures resource provides methods that allow you manage the  intials and signature images for a user.
    name: UserSignatures
  - description: |
      The Contacts resource provides methods that allow you to manage contacts.
    name: Contacts
  - description: |
      The EnvelopeAttachments resource provides methods that allow you to manage attachments.
    name: EnvelopeAttachments
  - description: |
      The AccountPermissionProfiles resource provides methods that allow you to manage permission profiles.
    name: AccountPermissionProfiles
  - description: |
      The PowerForms resource provides methods that allow you to manage power forms.
    name: PowerForms
  - description: |
      The PowerFormData resource provides a method to access power form data.
    name: PowerFormData
  - description: |
      The AccountTabSettings resource provides methods that allow you to manage
      tab settings for an account.
    name: AccountTabSettings
  - description: |
      The ENoteConfigurations resource provides methods that allow you to manage
      information for the eNote eOriginal integration.
    name: ENoteConfigurations
  - description: |-
      The EMortgageTransactions resource provides a method that allow you
      to create an eMortgage transaction.
    name: EMortgageTransactions
  - description: |
      The WorkspaceItems resource provides methods that allow you to manage
      workspace items.
    name: WorkspaceItems
  - description: |
      The Workspaces resource provides methods that allow you to manage workspaces.
    name: Workspaces
  - description: ''
    name: ChunkedUploads
  - description: ''
    name: EnvelopeFormData
  - description: ''
    name: EnvelopeDocumentVisibility
  - description: ''
    name: TemplateDocumentVisibility
  - description: ''
    name: AccountPasswordRules
  - description: ''
    name: AccountWatermarks
  - description: ''
    name: PaymentGatewayAccounts
paths:
  /service_information:
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves the available REST API versions.

        DocuSign Production system: https://www.docusign.net/restapi/service_information
        DocuSign Demo system: https://demo.docusign.net/restapi/service_information

        You do not need an integrator key to view the REST API versions and resources.
      operationId: ServiceInformation_GetServiceInformation
      parameters: []
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/Services'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Retrieves the available REST API versions.
      tags:
        - Services
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getService
      x-ds-service: Diagnostics
    parameters: []
  /v2:
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves the base resources available for the DocuSign REST APIs.

        You do not need an integrator key to view the REST API versions and resources.

        Example: https://demo.docusign.net/restapi/v2 lists all of the base resources available in version 2 of the REST API on the DocuSign Demo system.

        To view descriptions and samples of the service operations for all versions, remove the version number and add /help to the URL.

        Example: https://demo.docusign.net/restapi/help lists the REST API operations on the DocuSign Demo system with XML and JSON request and response samples.
      operationId: ServiceInformation_GetResourceInformation
      parameters: []
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/Resources'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Lists resources for REST version specified
      tags:
        - Resources
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getResources
      x-ds-service: Diagnostics
    parameters: []
  /v2/accounts:
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: |
        Creates new DocuSign accounts.
        You can use this method to create
        a single account
        or up to 100 accounts at a time.

        When creating a single account,
        the body of the request is a
        [`newAccountDefinition`][newAccountDefinition]
        object.

        If the request succeeds.
        it returns a
        201 (Created) code.
        The response returns the new account ID, password and the default user
        information for each newly created account.


        When creating multiple accounts,
        the body of the request is a
        `newAccountRequests`
        object,
        which contains one or more 
        [`newAccountDefinition`][newAccountDefinition]
        objects.
        You can create up to 100 new accounts
        at a time this way.

        The body for a multi-account
        creation request
        looks like this in JSON:

        ```
        {
          "newAccountRequests": [
            {
              "accountName": "accountone",
              . . .
            },
            {
              "accountName": "accounttwo",
              . . .
            }
          ]
        }
        ```

        A multi-account request
        looks like this in XML:

        ```
        <newAccountsDefinition xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.docusign.com/restapi">
          <newAccountRequests>
            <newAccountDefinition>
              . . .
            </newAccountDefinition>
            <newAccountDefinition>
              . . .
            </newAccountDefinition>
          </newAccountRequests>
        </newAccountsDefinition>
        ```

        A multi-account creation request
        may succeed (report a 201 code)
        even if some accounts could not be created.
        In this case, the `errorDetails` property
        in the response contains specific information
        about the failure.


        ### Account Settings

        The `accountSettings` property
        is a [name/value][nameValue]
        list that can contain the following settings:

        | Name                                               | Type    | Authorization Required                                      | Description|  
        | :------------------------------------------------- | :------ | :---------------------------------------------------------- ||  
        | adoptSigConfig                                     | Boolean | Admin                                                       | When **true**, the Signature Adoption Configuration page is available to account administrators|  
        | allowAccessCodeFormat                              | Boolean | Admin                                                       | When **true**, the Access Code Format page is available to account administrators|  
        | allowAccountManagementGranular                     | Boolean | Admin                                                       | When **true**, the Delegated Administration functionality is available to account|  
        | allowBulkSend                                      | Boolean | Admin                                                       | When **true**, the account can set if the bulk send feature can be used|  
        | allowCDWithdraw                                    | Boolean | Admin                                                       | When **true**, signers can withdraw their consent to use electronic signatures|  
        | allowConnectSendFinishLater                        | Boolean | Reserved                                                    | Reserved for DocuSign|  
        | allowDataDownload                                  | Boolean | Admin                                                       | When **true**, the account can download envelope data|  
        | allowEnvelopeCorrect                               | Boolean | Admin                                                       | When **true**, the account allows in process envelopes to be corrected|  
        | allowEnvelopePublishReporting                      | Boolean | Admin                                                       | When **true**, the account can access the Envelope Publish section in Classic DocuSign Experience Account Administration|  
        | allowExpressSignerCertificate                      | Boolean | Admin                                                       | When **true**, senders are allowed to use the DocuSign Express digital signatures|  
        | allowExternalSignaturePad                          | Boolean | Admin                                                       | When **true**, an external signature pad can be used for signing. The signature pad type is set by the externalSignaturePadType property|  
        | allowInPerson                                      | Boolean | SysAdmin                                                    | When **true**, the account allows In Person Signing|  
        | allowMarkup                                        | Boolean | Admin                                                       | When **true**, the document markup feature is enabled for the account|  
        | allowMemberTimezone                                | Boolean | Admin                                                       | When **true**, account users can set their own time zones.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   |  
        | allowMergeFields                                   | Boolean | Admin                                                       | When **true**, the account can use merge fields in conjunction with DocuSign for Salesforce|  
        | allowMultipleSignerAttachments                     | Boolean | Admin                                                       | When **true**, multiple signer attachments are allowed for an envelope|  
        | allowOfflineSigning                                | Boolean | Admin                                                       | When **true**, the account can use Offline Signing and envelopes signed using offline signing on mobile devices are synchronized with this account. This option and the inSessionEnabled option must both be enabled (**true**) for a caller to use offline signing.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         |  
        | allowOpenTrustSignerCertificate                    | Boolean | Admin                                                       | When **true**, senders are allowed to use the OpenTrust digital signatures|  
        | allowPaymentProcessing                             | Boolean | Admin                                                       | When **true**, the account can access the Payment Processing set up page|  
        | allowPersonalSignerCertificate                     | Boolean | Admin                                                       | When **true**, the account can specify that signers must use personal signer certificates during signing|  
        | allowPrivateSigningGroups                          | Boolean | SysAdmin Read Only                                          | Reserved for DocuSign. This currently returns false in a response. This setting is only shown in the response when listing account settings|  
        | allowReminders                                     | Boolean | Admin                                                       | When **true**, the reminder and expiration functionality is available when sending envelops|  
        | allowSafeBioPharmaSignerCertificate                | Boolean | Admin                                                       | When **true**, senders are allowed to use the SAFE BioPharma digital signatures|  
        | allowSharedTabs                                    | Boolean | Admin                                                       | When **true**, the account allows users to share custom tabs (fields). <br>   This setting is only shown when getting account settings. It cannot be modified|  
        | allowSignDocumentFromHomePage                      | Boolean | Admin                                                       | When **true**, the Sign a Document Now button is available on the Home tab|  
        | allowSignatureStamps                               | Boolean | Reserved                                                    | Reserved for DocuSign|  
        | allowSignerReassign                                | Boolean | Admin                                                       | When **true**, the account allows signers to reassign an envelope|  
        | allowSignerReassignOverride                        | Boolean | Admin                                                       | When **true**, the sender has the option override the default account setting for reassigning recipients|  
        | allowSigningGroups                                 | Boolean | SysAdmin Read Only                                          | When **true**, the account can use signing groups. This setting is only shown in the response when listing account settings|  
        | allowTabOrder                                      | Boolean | Admin                                                       | When **true**, the Tab Order field is available for use when creating tabs|  
        | allowWorkspaceComments                             | Boolean | Reserved                                                    | Reserved for DocuSign.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       |  
        | allowWorkspaceCreate                               | Boolean | Admin                                                       | When **true**, account users can create DocuSign Rooms|  
        | attachCompletedEnvelope                            | Boolean | SysAdmin                                                    | When **true**, envelope documents are included as a PDF file attachment for signing completed emails.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |  
        | authenticationCheck                                | String  | Admin                                                       | Sets when authentication checks are applied for recipient envelope access. This setting only applies to the following ID checks: <ul> <li>Phone Authentication</li> <li>SMS Authentication</li> <li>Knowledge-Based ID</li> </ul> This setting takes one of the following options: <ul> <li><p><code>initial_access</code>: The authentication check always applies the first time a recipient accesses the documents. Recipients are not asked to authenticate again when they access the documents from the same browser on the same device. If the recipient attempts to access the documents from a different browser or a different device, the recipient must pass authentication again. Once authenticated, that recipient is not challenged again on the new device or browser. The ability for a recipient to skip authentication for documents is limited to documents sent from the same sending account.</p></li> <li><p><code>each_access</code>: Authentication checks apply every time a recipient attempts to access the envelope. However, you can configure the Authentication Expiration setting to allow recipients to skip authentication when they have recently passed authentication by setting a variable timeframe.</p></li> </ul> |  
        | autoNavRule                                        | String  | Admin                                                       | The auto-navigation rule for the account. Enumeration values are: <ul> <li><code>off</li></code> <li><code>required_fields</li></code> <li><code>required_and_blank_fields</li></code> <li><code>all_fields</li></code> <li><code>page_then_required_fields</li></code> <li><code>page_then_required_and_blank_fields</li></code> <li><code>page_then_all_fields</li></code> </ul|  
        | bulkSend                                           | Boolean | Admin                                                       | When **true**, the account allows bulk sending of envelopes|  
        | canSelfBrandSend                                   | Boolean | SysAdmin                                                    | When **true**, account administrators can self-brand their sending console through the DocuSign Console|  
        | canSelfBrandSign                                   | Boolean | SysAdmin                                                    | When **true**, account administrators can self-brand their signing console through the DocuSign Console|  
        | conditionalFieldsEnabled                           | Boolean | Admin                                                       | When **true**, conditional fields can be used by the account|  
        | consumerDisclosureFrequency                        | enum    | Admin                                                       | Possible values are: <ul> <li> <code>once</code>: Per account, the supplemental document is displayed once only per userId. </li> <li> <code>always</code>: Per envelope, the supplemental document is displayed once only per userId. </li> <li> <code>each_access</code>: - Per envelope, the supplemental document is displayed once only per recipientId. </li> </ul|  
        | dataFieldRegexEnabled                              | Boolean | Admin                                                       | When **true**, the Regex field is available for tabs with that property|  
        | dataFieldSizeEnabled                               | Boolean | Admin                                                       | When **true**, the maximum number of characters field is available for tabs with that property|  
        | dataPopulationScope                                | String  | Admin                                                       | Specifies how data is shared for tabs with the same tabLabel. There are two possible values: <ul> <li> <code>document</code>: Tabs in a document with the same label populate with the same data. </li> <li> <code>envelope</code>: Tabs in all documents in the envelope with the same label populate with the same data. </li> </ul> This setting applies to the following tab types: <ul> <li> Check box </li> <li> Company </li> <li> Data Field </li> <li> Dropdown List </li> <li> Full Name </li> <li> Formula </li> <li> Note </li> <li> Title </li> </ul> Changing this setting affects envelopes that have been sent but not completed|  
        | disableMobilePushNotifications                     | Boolean | Admin                                                       | When **true**, mobile push notifications are disabled on the account|  
        | disableMobileSending                               | Boolean | Admin                                                       | When **true**, sending from mobile applications is disabled|  
        | disableMultipleSessions                            | Boolean | Admin                                                       | When **true**, account users cannot be logged into multiple sessions at once|  
        | disableUploadSignature                             | Boolean | Admin                                                       | When **true**, signers cannot use the upload signature/initials image option when signing a document|  
        | documentConversionRestrictions                     | String  | Admin                                                       | Sets the account document upload restriction for non-account administrators. There are three possible values: <ul> <li> <code>no_restrictions</code> : there are no restrictions on the type of documents that can be uploaded. </li> <li> <code>allow_pdf_only</code> : only: non-administrators can only upload PDF files. </li> <li> <code>no_upload</code> : Non-administrators cannot upload files. </li> </ul|  
        | enableAutoNav                                      | Boolean | SysAdmin  or EnableAutoNavByDSAdmin is set                  | When **true**, the auto-navigation is enabled for the account|  
        | enableCalculatedFields                             | Boolean | Admin & AllowExpression is set                              | When **true**, this account can use the Calculated Fields feature|  
        | enableDSPro                                        | Boolean | SysAdmin                                                    | When **true**, this account can send and manage envelopes from the DocuSign Desktop Client|  
        | enableEnvelopeStampingByAccountAdmin               | Boolean | SysAdmin or account has EnableEnvelopeStampingByDSAdmin set | When **true**, senders for this account can choose to have the envelope ID stamped in the document margins|  
        | enablePaymentProcessing                            | Boolean | Admin & AllowPaymentProcessing is set.                      | When **true**, Payment Processing is enabled for the account|  
        | enablePowerForm                                    | Boolean | SysAdmin                                                    | When **true**, PowerForm access is enabled for the account|  
        | enablePowerFormDirect                              | Boolean | Admin                                                       | When **true**, direct PowerForms are enabled for the account|  
        | enableRecipientDomainValidation                    | Boolean | Admin                                                       | When **true**, validation on recipient email domains for DocuSign Access feature is enabled|  
        | enableRequireSignOnPaper                           | Boolean | Admin                                                       | When **true**, the account can use the requireSignOnPaper option.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            |  
        | enableReservedDomain                               | Boolean | SysAdmin                                                    | When **true**, an account administrator can reserve web domain and users|  
        | enableSMSAuthentication                            | Boolean | Admin                                                       | When **true**, the account can use SMS authentication|  
        | enableSendToAgent                                  | Boolean | SysAdmin                                                    | When **true**, this account can use the Agent Recipient Type|  
        | enableSendToIntermediary                           | Boolean | Admin & AllowSendToIntermediary is set                      | When **true**, this account can use the Intermediary Recipient Type|  
        | enableSendToManage                                 | Boolean | Admin                                                       | When **true**, this account can use the Editor Recipient Type|  
        | enableSequentialSigningAPI                         | Boolean | SysAdmin                                                    | When **true**, the account can define the routing order of recipients for envelopes sent using the DocuSign|  
        | enableSequentialSigningUI                          | Boolean | SysAdmin                                                    | When **true**, the account can define the routing order of recipients for envelopes sent using the DocuSign console|  
        | enableSignOnPaper                                  | Boolean | Admin                                                       | When **true**, a user can allow signers to use the sign on paper option|  
        | enableSignOnPaperOverride                          | Boolean | Admin                                                       | When **true**, a user can override the default account setting for the sign on paper option|  
        | enableSignerAttachments                            | Boolean | Admin                                                       | When **true**, a user can request attachments from a signer|  
        | enableTransactionPoint                             | Boolean | SysAdmin                                                    | When **true**, Transaction Point is enabled for this account.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                |  
        | enableVaulting                                     | Boolean | SysAdmin                                                    | When **true**, this account can use electronic vaulting for documents|  
        | enableWorkspaces                                   | Boolean | Admin                                                       | When **true**, DocuSign Rooms is enabled for the account|  
        | envelopeIntegrationAllowed                         | String  | SysAdmin                                                    | Shows the envelope integration rule for the account. <br> Enumeration values are: NotAllowed, Full, IntegrationSendOnly|  
        | envelopeIntegrationEnabled                         | Boolean | Admin & EnvelopeIntegrationAllowed is set                   | When **true**, envelope integration is enabled for the account|  
        | envelopeStamplingDefaultValue                      | Boolean | (GET only)                                                  | When **true**, envelopes sent by this account automatically have the envelope ID stamped in the margins, unless the sender selects not to have them stamped|  
        | externalSignaturePadType                           | String  | Admin                                                       | Sets the type of signature pad that can be used. Possible values are: <ul> <li> <code>none</code> </li> <li> <code>topaz</code> </li> <li> <code>e_padv9</code> </li> <li> <code>e_pad_integrisign</code> </li> </ul|  
        | faxOutEnabled                                      | Boolean | Admin                                                       | When **true**, the account can use the fax out feature|  
        | idCheckExpire                                      | String  | Admin                                                       | Indicates when a user's authentication expires. Possible values are: <ul> <li> <code>always</code> </li> <li> <code>never</code> </li> <li> <code>variable</code>: Use the value in <code>idCheckExpireDays</code> </li> </ul|  
        | idCheckExpireDays                                  | Integer | Admin                                                       | The number of days before a user's authentication expires.  Valid only if the `IDCheckExpire` value is Variable|  
        | idCheckRequired                                    | String  | Admin                                                       | Indicates if authentication is required by envelope signers. Possible values are: <ul> <li> <code>always</code> </li> <li> <code>never</code> </li> <li> <code>optional</code>: Authentication is determined by the sender. </li> </ul|  
        | inPersonIDCheckQuestion                            | String  | Admin                                                       | The default question used by the In Person signing host for an In Person signing session|  
        | inSessionEnabled                                   | Boolean | Admin                                                       | When **true**, the account can use In Session (embedded) and offline signing. This option and the allowOfflineSigning option must both be enabled (**true**) for a caller to use offline signing.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            |  
        | inSessionSuppressEmails                            | Boolean | Admin                                                       | When **true**, emails are not sent to the embedded recipients on an envelope for the account|  
        | maximumSigningGroups                               | String  | SysAdmin Read Only                                          | The maximum number of signing groups an account can have. The default value for this is 50. This setting is only shown in the response when listing account settings|  
        | maximumUsersPerSigningGroup                        | String  | SysAdmin Read Only                                          | The maximum number of members in a signing group. The default value for this is 50. This setting is only shown in the response when listing account settings|  
        | mobileSessionTimeout                               | String  | Admin                                                       | Sets the amount of idle activity time, in minutes, before a mobile user is automatically logged off of the system. If the setting is 0, then DocuSign mobile application users are never automatically logged off the system. The minimum setting is 1 minute and the maximum setting is 120 minutes. <br> This setting only applies to the DocuSign for iOS v2.8.2 or later mobile app|  
        | phoneAuthRecipientMayProvidePhoneNumber            | Boolean | Admin                                                       | When **true**, senders can select to allow the recipient to provide a phone number for the Phone Authentication process.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     |  
        | pkiSignDownloadedPDFDocs                           | String  | Admin                                                       | The policy for adding a digital certificate to downloaded, printed and emailed documents. Possible values are: <ul> <li> <code>no_sign</code> </li> <li> <code>no_sign_allow_user_override</code> </li> <li> <code>yes_sign</code> </li> </ul|  
        | recipientsCanSignOffline                           | Boolean | Admin                                                       | When **true**, envelopes signed using offline signing on mobile devices are synchronized with this account|  
        | requireDeclineReason                               | Boolean | Admin                                                       | When **true**, recipients that decline to sign an envelope must provide a reason|  
        | requireSignerCertificateType                       | String  | Admin                                                       | Sets which Digital Signature certificate is required when sending envelopes. There are three possible values: <ul> <li> <code>none</code>: a Digital Signature certificate is not required. </li> <li> <code>docusign_express</code>: signers must use a DocuSign Express certificate. </li> <li> <code>docusign_personal</code>: signers must use a DocuSign personal certificate. </li> <li> <code>open_trust</code>: signers must use an OpenTrust certificate. </li> </ul|  
        | rsaVeridAccountName                                | String  | Admin                                                       | The RSA account name.<br> Modifying this value might inadvertently disrupt your ID Check capability. Ensure you have the correct value before changing this|  
        | rsaVeridPassword                                   | String  | Admin                                                       | The password used with the RSA account.<br>Modifying this value might inadvertently disrupt your ID Check capability. Ensure you have the correct value before changing this|  
        | rsaVeridRuleset                                    | String  | Admin                                                       | The RSA rule set used with the account. <br>Modifying this value might inadvertently disrupt your ID Check capability. Ensure you have the correct value before changing this.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               |  
        | rsaVeridUserId                                     | String  | Admin                                                       | The user ID for the RSA account. <br>Modifying this value might inadvertently disrupt your ID Check capability. Ensure you have the correct value before changing this|  
        | savingCustomTabsEnabled                            | Boolean | Admin                                                       | When **true**, account users can save custom tabs|  
        | selfSignedRecipientEmailDocument                   | String  | Admin                                                       | Sets how self-signed documents are presented to the email recipients. Possible values are: <ul> <li><code>include_pdf</code>: A PDF of the completed document is attached to the email</li> <li><code>include_link</code>: A secure link to the self-signed documents is included in the email.</li> </ul|  
        | selfSignedRecipientEmailDocumentRights             | Boolean | Admin                                                       | When **true**, account administrators can set the selfSignedRecipientEmailDocument option.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   |  
        | selfSignedRecipientEmailDocumentUserOverride       | Boolean | Admin                                                       | When **true** the selfSignedRecipientEmailDocument userSetting can be set for an individual user.  The userSetting will override the account setting|  
        | selfSignedRecipientEmailDocumentUserOverrideRights | Boolean | Admin                                                       | When **true**, account administrators can set the selfSignedRecipientEmailDocumentOverride option|  
        | sendToCertifiedDeliveryEnabled                     | Boolean | Admin                                                       | When **true**, the Certified Deliveries Recipient type can be used by the account|  
        | senderMustAuthenticateSigning                      | Boolean | Admin                                                       | When **true**, a sender that is also a recipient of an envelope must follow the authentication requirements for the envelope|  
        | sessionTimeout                                     | Integer | Admin                                                       | The amount of idle activity time, in minutes, before a user is automatically logged out of the system. The minimum setting is 20 minutes and the maximum setting is 120 minutes|  
        | setRecipEmailLang                                  | Boolean | Admin                                                       | When **true**, senders can set the email languages for each recipient|  
        | setRecipSignLang                                   | Boolean | Admin                                                       | When **true**, senders can set the signing language used for each recipient|  
        | sharedCustomTabsEnabled                            | Boolean | Admin                                                       | When **true**, saved custom tabs can be shared with account users|  
        | signDateFormat                                     | String  | Admin                                                       | The date/time format applied to Date Signed fields for the account|  
        | signTimeShowAmPm                                   | Boolean | Admin                                                       | When **true**, AM or PM is shown as part of the time for signDateFormat|  
        | signerAttachCertificateToEnvelopePDF               | Boolean | AccountAdmin & account is selected in AccountSigningSettings| When **true**, the Certificate of Completion is included in the envelope documents PDF when it is downloaded|  
        | signerAttachConcat                                 | Boolean | Admin                                                       | When **true**, signer attachments are added to the parent document that the attachment tab is located on, instead of the default behavior that creates a new document in the envelope for every signer attachment|  
        | signerCanCreateAccount                             | Boolean | AccountAdmin & account is selected in AccountSigningSettings| When **true**, the signer without a DocuSign account can create a DocuSign account after signing|  
        | signerCanSignOnMobile                              | Boolean | AccountAdmin & account is selected in AccountSigningSettings| When **true**, signers can use the DocuSign mobile signing user interface|  
        | signerInSessionUseEnvelopeCompleteEmail            | Boolean | Admin                                                       | When **true**, an envelope complete email is sent to an In Session (embedded) or offline signer after DocuSign processes the envelope|  
        | signerLoginRequirements                            | String  | Admin                                                       | Sets the Login requirements for the signer. There are four options: <ul> <li> <code>login_not_required</code>: The signer is not required to log on to the system. </li> <li> <code>login_required_if_account_holder</code>: If the signer has a DocuSign account, they must log on to sign the document. </li> <li> <code>login_required_per_session</code>: The sender cannot send an envelope to anyone who does not have a DocuSign account. </li> <li> <code>login_required_per_envelope</code>: The sender cannot send an envelope to anyone who does not have a DocuSign account and the signer must log on the system for each envelope they will sign. </li> </ul> If you use Direct PowerForms or captive/embedded signers, the "Account required" settings are bypassed for those signers. If your workflow requires that the signer have an account, you should not use those methods.                                                                                                                                                                                                                                                                                                                                                           |  
        | signerMustHaveAccount                              | Boolean | AccountAdmin & account is selected in AccountSigningSettings| When **true**, senders can only send an envelope to a recipient that has a DocuSign account|  
        | signerMustLoginToSign                              | Boolean | AccountAdmin & account is selected in AccountSigningSettings| When **true**, an envelope signer must log in to the DocuSign console to sign an envelope|  
        | signerShowSecureFieldInitialValues                 | Boolean | AccountAdmin & account is selected in AccountSigningSettings| When **true**, the initial value of all SecureFields is written to the document when sent|  
        | tabDataLabelEnabled                                | Boolean | Admin                                                       | When **true**, senders can change the default tabLabel for tabs|  
        | tabLockingEnabled                                  | Boolean | Admin                                                       | When **true**, the locked option is available for tabs with that property|  
        | tabTextFormattingEnabled                           | Boolean | Admin                                                       | When **true**, the formatting options (font type, font size, font color, bold, italic, and underline) are available for tabs with those properties|  
        | universalSignatureOptIn                            | Boolean | Reserved                                                    | Reserved for DocuSign|  
        | universalSignatureOptOut                           | Boolean | Reserved                                                    | Reserved for DocuSign|  
        | useAccountLevelEmail                               | Boolean | AccountAdmin & account is selected in AccountSigningSettings| When **true**, the content of notification emails is determined at the account level|  
        | useConsumerDisclosure                              | Boolean | Admin                                                       | When **true**, the account  can use supplemental documents.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  |  
        | usesAPI                                            | Boolean | SysAdmin                                                    | When **true**, the account can use the DocuSign|  





        [newAccountDefinition]: #/definitions/newAccountDefinition
        [nameValue]: #/definitions/nameValue
      operationId: Accounts_PostAccounts
      parameters:
        - description: 'When set to **true**, creates the account using a preview billing plan.'
          in: query
          name: preview_billing_plan
          required: false
          type: string
        - description: ''
          in: body
          name: newAccountDefinition
          required: false
          schema:
            $ref: '#/definitions/newAccountDefinition'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/newAccountSummary'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Creates new accounts.
      tags:
        - Accounts
      x-ds-in-sdk: true
      x-ds-method: create
      x-ds-methodname: create
      x-ds-service: Accounts
  /v2/accounts/provisioning:
    get:
      consumes: []
      deprecated: false
      description: Retrieves the account provisioning information for the account.
      operationId: Accounts_GetProvisioning
      parameters: []
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/provisioningInformation'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Retrieves the account provisioning information for the account.
      tags:
        - Accounts
      x-ds-in-sdk: true
      x-ds-method: getProvisioning
      x-ds-methodname: getProvisioning
      x-ds-service: Accounts
    parameters: []
  '/v2/accounts/{accountId}':
    delete:
      consumes: []
      deprecated: false
      description: 'This closes the specified account. You must be an account admin to close your account. Once closed, an account must be reopened by DocuSign.'
      operationId: Accounts_DeleteAccount
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes the specified account.
      tags:
        - Accounts
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: delete
      x-ds-service: Accounts
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves the account information for the specified account.

        **Response**
        The `canUpgrade` property contains is a Boolean that indicates whether the account can be upgraded through the API. 
      operationId: Accounts_GetAccount
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'When set to **true**, includes the account settings for the account in the response.'
          in: query
          name: include_account_settings
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/Accounts'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Retrieves the account information for the specified account.
      tags:
        - Accounts
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getAccountInformation
      x-ds-service: Accounts
    parameters: []
  '/v2/accounts/{accountId}/billing_charges':
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves the list of recurring and usage charges for the account. This can be used to determine the charge structure and usage of charge plan items. 

        Privileges required: account administrator 
      operationId: BillingCharges_GetAccountBillingCharges
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: |
            Specifies which billing charges to return.
            Valid values are:

            * envelopes
            * seats
          in: query
          name: include_charges
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/billingChargeResponse'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets list of recurring and usage charges for the account.
      tags:
        - Accounts
      x-ds-in-sdk: true
      x-ds-method: getBillingCharges
      x-ds-methodname: getBillingCharges
      x-ds-service: Accounts
    parameters: []
  '/v2/accounts/{accountId}/billing_invoices':
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves a list of invoices for the account. If the from date or to date queries are not specified, the response returns invoices for the last 365 days.

        Privileges required: account administrator 
      operationId: BillingInvoices_GetBillingInvoices
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: Specifies the date/time of the earliest invoice in the account to retrieve.
          in: query
          name: from_date
          required: false
          type: string
        - description: Specifies the date/time of the latest invoice in the account to retrieve.
          in: query
          name: to_date
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/billingInvoicesResponse'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Get a List of Billing Invoices
      tags:
        - Invoices
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: listInvoices
      x-ds-service: Billing
    parameters: []
  '/v2/accounts/{accountId}/billing_invoices/{invoiceId}':
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves the specified invoice. 

        ###### Note: If the `pdfAvailable` property in the response is set to *true*, you can download a PDF version of the invoice. To download the PDF, make the call again and change the value of the `Accept` property in the header to `Accept: application/pdf`.

        Privileges required: account administrator

        The response returns a list of charges and information about the charges. Quantities are usually shown as 'unlimited' or an integer. Amounts are shown in the currency set for the account.

        **Response**
        The following table provides a description of the different `chargeName` property values. The information will grow as more chargeable items are added to the system.

        | chargeName | Description |
        | --- | --- |
        | id_check | ID Check Charge |
        | in_person_signing | In Person Signing charge |
        | envelopes Included | Sent Envelopes for the account |
        | age_verify | Age verification check |
        | ofac | OFAC Check |
        | id_confirm | ID confirmation check |
        | student_authentication | STAN PIN authentication check |
        | wet_sign_fax | Pages for returning signed documents by fax |
        | attachment_fax | Pages for returning attachments by fax |
        | phone_authentication | Phone authentication charge |
        | powerforms | PowerForm envelopes sent |
        | signer_payments | Payment processing charge |
        | outbound_fax | Send by fax charge |
        | bulk_recipient_envelopes | Bulk Recipient Envelopes sent |
        | sms_authentications | SMS authentication charge |
        | saml_authentications | SAML authentication charge |
        | express_signer_certificate | DocuSign Express Certificate charge |
        | personal_signer_certificate | Personal Signer Certificate charge |
        | safe_certificate | SAFE BioPharma Signer Certificate charge |
        | seats | Included active seats charge |
        | open_trust_certificate | OpenTrust Signer Certificate charge | 
      operationId: BillingInvoices_GetBillingInvoice
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: path
          name: invoiceId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/Invoices'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Retrieves a billing invoice.
      tags:
        - Invoices
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getInvoice
      x-ds-service: Billing
    parameters: []
  '/v2/accounts/{accountId}/billing_invoices_past_due':
    get:
      consumes: []
      deprecated: false
      description: |-
        Returns a list past due invoices for the account and notes if payment can be made through the REST API. 

        Privileges Required: account administrator
      operationId: BillingInvoices_GetBillingInvoicesPastDue
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/billingInvoicesSummary'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Get a list of past due invoices.
      tags:
        - Invoices
      x-ds-in-sdk: true
      x-ds-method: listPastDue
      x-ds-methodname: listInvoicesPastDue
      x-ds-service: Billing
    parameters: []
  '/v2/accounts/{accountId}/billing_payments':
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves a list containing information about one or more payments. If the from date or to date queries are not used, the response returns payment information for the last 365 days. 

        Privileges required: account administrator 
      operationId: BillingPayments_GetPaymentList
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: Specifies the date/time of the earliest payment in the account to retrieve.
          in: query
          name: from_date
          required: false
          type: string
        - description: Specifies the date/time of the latest payment in the account to retrieve.
          in: query
          name: to_date
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/billingPaymentsResponse'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets payment information for one or more payments.
      tags:
        - Payments
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: listPayments
      x-ds-service: Billing
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: |-
        Posts a payment to a past due invoice. 

        ###### Note: This can only be used if the `paymentAllowed` value for a past due invoice is true. This can be determined calling [ML:GetBillingInvoicesPastDue].

        The response returns information for a single payment, if a payment ID was used in the endpoint, or a list of payments. If the from date or to date queries or payment ID are not used, the response returns payment information for the last 365 days. If the request was for a single payment ID, the `nextUri` and `previousUri` properties are not returned.

        Privileges required: account administrator
      operationId: BillingPayments_PostPayment
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: billingPaymentRequest
          required: false
          schema:
            $ref: '#/definitions/billingPaymentRequest'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/billingPaymentResponse'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Posts a payment to a past due invoice.
      tags:
        - Payments
      x-ds-in-sdk: true
      x-ds-method: create
      x-ds-methodname: makePayment
      x-ds-service: Billing
  '/v2/accounts/{accountId}/billing_payments/{paymentId}':
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves the information for a specified payment. 

        Privileges required: account administrator 
      operationId: BillingPayments_GetPayment
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: path
          name: paymentId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/Payments'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets billing payment information for a specific payment.
      tags:
        - Payments
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getPayment
      x-ds-service: Billing
    parameters: []
  '/v2/accounts/{accountId}/billing_plan':
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves the billing plan information for the specified account, including the current billing plan, successor plans, billing address, and billing credit card.

        By default the successor plan and credit card information is included in the response. This information can be excluded from the response by adding the appropriate optional query string with the `setting` set to **false**. 

        Response

        The response returns the billing plan information, including the currency code, for the plan. The `billingPlan` and `succesorPlans` property values are the same as those shown in the [ML:Get Billing Plan Details] reference. the `billingAddress` and `creditCardInformation` property values are the same as those shown in the [ML:Update Billing Plan] reference.

        ###### Note: When credit card number information is shown, a mask is applied to the response so that only the last 4 digits of the card number are visible. 
      operationId: BillingPlan_GetBillingPlan
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'When set to **true**, excludes credit card information from the response.'
          in: query
          name: include_credit_card_information
          required: false
          type: string
        - description: 'When set to **true**, the `canUpgrade` and `renewalStatus` properities are included the response and an array of `supportedCountries` property is added to the `billingAddress` information. '
          in: query
          name: include_metadata
          required: false
          type: string
        - description: 'When set to **true**, excludes successor information from the response.'
          in: query
          name: include_successor_plans
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/BillingPlans'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Get Account Billing Plan
      tags:
        - BillingPlans
      x-ds-in-sdk: true
      x-ds-method: getAccountPlan
      x-ds-methodname: getPlan
      x-ds-service: Billing
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: 'Updates the billing plan information, billing address, and credit card information for the specified account.'
      operationId: BillingPlan_PutBillingPlan
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'When set to **true**, updates the account using a preview billing plan.'
          in: query
          name: preview_billing_plan
          required: false
          type: string
        - description: ''
          in: body
          name: billingPlanInformation
          required: false
          schema:
            $ref: '#/definitions/billingPlanInformation'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/billingPlanUpdateResponse'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates the account billing plan.
      tags:
        - BillingPlans
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updatePlan
      x-ds-service: Billing
  '/v2/accounts/{accountId}/billing_plan/credit_card':
    get:
      consumes: []
      deprecated: false
      description: ''
      operationId: BillingPlan_GetCreditCardInfo
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/creditCardInformation'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Get metadata for a given credit card.
      tags:
        - BillingPlans
      x-ds-in-sdk: true
      x-ds-method: getCreditCard
      x-ds-methodname: getCreditCardInfo
      x-ds-service: Billing
    parameters: []
  '/v2/accounts/{accountId}/billing_plan/purchased_envelopes':
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: 'Reserved: At this time, this endpoint is limited to DocuSign internal use only. Completes the purchase of envelopes for your account. The actual purchase is done as part of an internal workflow interaction with an envelope vendor.'
      operationId: PurchasedEnvelopes_PutPurchasedEnvelopes
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: purchasedEnvelopesInformation
          required: false
          schema:
            $ref: '#/definitions/purchasedEnvelopesInformation'
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: 'Reserverd: Purchase additional envelopes.'
      tags:
        - BillingPlans
      x-ds-in-sdk: true
      x-ds-method: purchaseEnvelopes
      x-ds-methodname: purchaseEnvelopes
      x-ds-service: Billing
  '/v2/accounts/{accountId}/brands':
    delete:
      consumes: []
      deprecated: false
      description: Deletes one or more brand profiles from an account. The Account Branding feature (accountSettings properties `canSelfBrandSend` and `canSelfBrandSend`) must be set to **true** to use this call.
      operationId: Brands_DeleteBrands
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: brandsRequest
          required: false
          schema:
            $ref: '#/definitions/brandsRequest'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/AccountBrands'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes one or more brand profiles.
      tags:
        - AccountBrands
      x-ds-in-sdk: true
      x-ds-method: deleteList
      x-ds-methodname: deleteBrands
      x-ds-service: Accounts
    get:
      consumes: []
      deprecated: false
      description: Retrieves the list of brand profiles associated with the account and the default brand profiles. The Account Branding feature (accountSettings properties `canSelfBrandSend` and `canSelfBrandSend`)  must be set to **true** for the account to use this call.
      operationId: Brands_GetBrands
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'When set to **true**, excludes distributor brand information from the response set.'
          in: query
          name: exclude_distributor_brand
          required: false
          type: string
        - description: 'When set to **true**, returns the logos associated with the brand.'
          in: query
          name: include_logos
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/AccountBrands'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets a list of brand profiles.
      tags:
        - AccountBrands
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: listBrands
      x-ds-service: Accounts
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: |-
        Creates one or more brand profile files for the account. The Account Branding feature (accountSettings properties `canSelfBrandSend` and `canSelfBrandSig`) must be set to **true** for the account to use this call.

        An error is returned if `brandId` property for a brand profile is already set for the account. To upload a new version of an existing brand profile, you must delete the profile and then upload the newer version.

        When brand profile files are being uploaded, they must be combined into one zip file and the `Content-Type` must be `application/zip`.
      operationId: Brands_PostBrands
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: brand
          required: false
          schema:
            $ref: '#/definitions/brand'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/AccountBrands'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Creates one or more brand profile files for the account.
      tags:
        - AccountBrands
      x-ds-in-sdk: true
      x-ds-method: create
      x-ds-methodname: createBrand
      x-ds-service: Accounts
  '/v2/accounts/{accountId}/brands/{brandId}':
    delete:
      consumes: []
      deprecated: false
      description: ''
      operationId: Brand_DeleteBrand
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The unique identifier of a brand.
          in: path
          name: brandId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Removes a brand.
      tags:
        - AccountBrands
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteBrand
      x-ds-service: Accounts
    get:
      consumes: []
      deprecated: false
      description: ''
      operationId: Brand_GetBrand
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The unique identifier of a brand.
          in: path
          name: brandId
          required: true
          type: string
        - description: ''
          in: query
          name: include_external_references
          required: false
          type: string
        - description: ''
          in: query
          name: include_logos
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/brand'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Get information for a specific brand.
      tags:
        - AccountBrands
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getBrand
      x-ds-service: Accounts
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: ''
      operationId: Brand_PutBrand
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The unique identifier of a brand.
          in: path
          name: brandId
          required: true
          type: string
        - description: ''
          in: body
          name: brand
          required: false
          schema:
            $ref: '#/definitions/brand'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/brand'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates an existing brand.
      tags:
        - AccountBrands
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateBrand
      x-ds-service: Accounts
  '/v2/accounts/{accountId}/brands/{brandId}/file':
    get:
      consumes: []
      deprecated: false
      description: ''
      operationId: BrandExport_GetBrandExportFile
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The unique identifier of a brand.
          in: path
          name: brandId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Export a specific brand.
      tags:
        - AccountBrands
      x-ds-in-sdk: true
      x-ds-method: getExportFile
      x-ds-methodname: getBrandExportFile
      x-ds-service: Accounts
    parameters: []
  '/v2/accounts/{accountId}/brands/{brandId}/logos/{logoType}':
    delete:
      consumes: []
      deprecated: false
      description: ''
      operationId: BrandLogo_DeleteBrandLogo
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The unique identifier of a brand.
          in: path
          name: brandId
          required: true
          type: string
        - description: 'One of **Primary**, **Secondary** or **Email**.'
          in: path
          name: logoType
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Delete one branding logo.
      tags:
        - AccountBrands
      x-ds-in-sdk: true
      x-ds-method: deleteLogo
      x-ds-methodname: deleteBrandLogoByType
      x-ds-service: Accounts
    get:
      consumes: []
      deprecated: false
      description: ''
      operationId: BrandLogo_GetBrandLogo
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The unique identifier of a brand.
          in: path
          name: brandId
          required: true
          type: string
        - description: 'One of **Primary**, **Secondary** or **Email**.'
          in: path
          name: logoType
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Obtains the specified image for a brand.
      tags:
        - AccountBrands
      x-ds-in-sdk: true
      x-ds-method: getLogo
      x-ds-methodname: getBrandLogoByType
      x-ds-service: Accounts
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: ''
      operationId: BrandLogo_PutBrandLogo
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The unique identifier of a brand.
          in: path
          name: brandId
          required: true
          type: string
        - description: 'One of **Primary**, **Secondary** or **Email**.'
          in: path
          name: logoType
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Put one branding logo.
      tags:
        - AccountBrands
      x-ds-in-sdk: true
      x-ds-method: updateLogo
      x-ds-methodname: updateBrandLogoByType
      x-ds-service: Accounts
  '/v2/accounts/{accountId}/brands/{brandId}/resources':
    get:
      consumes: []
      deprecated: false
      description: ''
      operationId: BrandResources_GetBrandResourcesList
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The unique identifier of a brand.
          in: path
          name: brandId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/brandResourcesList'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Returns the specified account's list of branding resources (metadata).
      tags:
        - AccountBrands
      x-ds-in-sdk: true
      x-ds-method: listResources
      x-ds-methodname: getBrandResources
      x-ds-service: Accounts
    parameters: []
  '/v2/accounts/{accountId}/brands/{brandId}/resources/{resourceContentType}':
    get:
      consumes: []
      deprecated: false
      description: ''
      operationId: BrandResources_GetBrandResources
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The unique identifier of a brand.
          in: path
          name: brandId
          required: true
          type: string
        - description: ''
          in: path
          name: resourceContentType
          required: true
          type: string
        - description: ''
          in: query
          name: langcode
          required: false
          type: string
        - description: ''
          in: query
          name: return_master
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Returns the specified branding resource file.
      tags:
        - AccountBrands
      x-ds-in-sdk: true
      x-ds-method: getResource
      x-ds-methodname: getBrandResourcesByContentType
      x-ds-service: Accounts
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: ''
      operationId: BrandResources_PutBrandResources
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The unique identifier of a brand.
          in: path
          name: brandId
          required: true
          type: string
        - description: ''
          in: path
          name: resourceContentType
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/brandResources'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Uploads a branding resource file.
      tags:
        - AccountBrands
      x-ds-in-sdk: true
      x-ds-method: updateResource
      x-ds-methodname: updateBrandResourcesByContentType
      x-ds-service: Accounts
  '/v2/accounts/{accountId}/bulk_envelopes':
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves status information about all the bulk recipient batches. A bulk recipient batch is the set of envelopes sent from a single bulk recipient file. The response includes general information about each bulk recipient batch. 

        The response returns information about the envelopes sent with bulk recipient batches, including the `batchId` property, which can be used to retrieve a more detailed status of individual bulk recipient batches.
      operationId: BulkEnvelopes_GetEnvelopesBulk
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The number of results to return. This can be 1 to 20.
          in: query
          name: count
          required: false
          type: string
        - description: |
            Specifies which entries are included in the response. Multiple entries can be included by using commas in the query string (example: ?include="failed,queued") 

            Valid values: 
            * all - Returns all entries. If present, overrides all other query settings. This is the default if no query string is provided.
            * failed - Entries with a failed status.
            * processing - Entries with a processing status.
            * queued - Entries with a queued status.
            * sent - Entries with a sent status. 
          in: query
          name: include
          required: false
          type: string
        - description: 'The position of the bulk envelope items in the response. This is used for repeated calls, when the number of bulk envelopes returned is too large for one return. The default value is 0.'
          in: query
          name: start_position
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/BulkEnvelopes'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets status information about bulk recipient batches.
      tags:
        - BulkEnvelopes
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: list
      x-ds-service: BulkEnvelopes
    parameters: []
  '/v2/accounts/{accountId}/bulk_envelopes/{batchId}':
    get:
      consumes: []
      deprecated: false
      description: 'Retrieves the status information of a single bulk recipient batch. A bulk recipient batch is the set of envelopes sent from a single bulk recipient file. '
      operationId: BulkEnvelopes_GetBulkEnvelopesBatchId
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: path
          name: batchId
          required: true
          type: string
        - description: Specifies the number of entries to return.
          in: query
          name: count
          required: false
          type: string
        - description: |
            Specifies which entries are included in the response. Multiple entries can be included by using commas in the query string (example: ?include="failed,queued") 

            Valid values: 
            * all - Returns all entries. If present, overrides all other query settings. This is the default if no query string is provided.
            * failed - Entries with a failed status.
            * processing - Entries with a processing status.
            * queued - Entries with a queued status.
            * sent - Entries with a sent status. 
          in: query
          name: include
          required: false
          type: string
        - description: Specifies the location in the list of envelopes from which to start.
          in: query
          name: start_position
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/bulkEnvelopeStatus'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets the status of a specified bulk send operation.
      tags:
        - BulkEnvelopes
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: get
      x-ds-service: BulkEnvelopes
    parameters: []
  '/v2/accounts/{accountId}/captive_recipients/{recipientPart}':
    delete:
      consumes: []
      deprecated: false
      description: Deletes the signature for one or more captive recipient records; it is primarily used for testing. This provides a way to reset the signature associated with a client user ID so that a new signature can be created the next time the client user ID is used.
      operationId: CaptiveRecipients_DeleteCaptiveRecipientsPart
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: path
          name: recipientPart
          required: true
          type: string
        - description: ''
          in: body
          name: captiveRecipientInformation
          required: false
          schema:
            $ref: '#/definitions/captiveRecipientInformation'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/captiveRecipientInformation'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes the signature for one or more captive recipient records.
      tags:
        - Accounts
      x-ds-in-sdk: true
      x-ds-method: deleteCaptiveRecipient
      x-ds-methodname: deleteCaptiveRecipient
      x-ds-service: Accounts
    parameters: []
  '/v2/accounts/{accountId}/chunked_uploads':
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: ''
      operationId: ChunkedUploads_PostChunkedUploads
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: chunkedUploadRequest
          required: false
          schema:
            $ref: '#/definitions/chunkedUploadRequest'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/ChunkedUploads'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Initiate a new ChunkedUpload.
      tags:
        - ChunkedUploads
      x-ds-api-status: beta
      x-ds-in-sdk: true
      x-ds-method: create
      x-ds-methodname: createChunkedUpload
      x-ds-service: Envelopes
  '/v2/accounts/{accountId}/chunked_uploads/{chunkedUploadId}':
    delete:
      consumes: []
      deprecated: false
      description: ''
      operationId: ChunkedUploads_DeleteChunkedUpload
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: path
          name: chunkedUploadId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/ChunkedUploads'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Delete an existing ChunkedUpload.
      tags:
        - ChunkedUploads
      x-ds-api-status: beta
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteChunkedUpload
      x-ds-service: Envelopes
    get:
      consumes: []
      deprecated: false
      description: ''
      operationId: ChunkedUploads_GetChunkedUpload
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: path
          name: chunkedUploadId
          required: true
          type: string
        - description: 'A comma-separated list of additional template attributes to include in the response. Valid values are: recipients, folders, documents, custom_fields, and notifications.'
          in: query
          name: include
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/ChunkedUploads'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Retrieves the current metadata of a ChunkedUpload.
      tags:
        - ChunkedUploads
      x-ds-api-status: beta
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getChunkedUpload
      x-ds-service: Envelopes
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: ''
      operationId: ChunkedUploads_PutChunkedUploads
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: path
          name: chunkedUploadId
          required: true
          type: string
        - description: ''
          in: query
          name: action
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/ChunkedUploads'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: 'Integrity-Check and Commit a ChunkedUpload, readying it for use elsewhere.'
      tags:
        - ChunkedUploads
      x-ds-api-status: beta
      x-ds-in-sdk: true
      x-ds-method: commit
      x-ds-methodname: updateChunkedUpload
      x-ds-service: Envelopes
  '/v2/accounts/{accountId}/chunked_uploads/{chunkedUploadId}/{chunkedUploadPartSeq}':
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: ''
      operationId: ChunkedUploads_PutChunkedUploadPart
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: path
          name: chunkedUploadId
          required: true
          type: string
        - description: ''
          in: path
          name: chunkedUploadPartSeq
          required: true
          type: string
        - description: ''
          in: body
          name: chunkedUploadRequest
          required: false
          schema:
            $ref: '#/definitions/chunkedUploadRequest'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/ChunkedUploads'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: 'Add a chunk, a chunk ''part'', to an existing ChunkedUpload.'
      tags:
        - ChunkedUploads
      x-ds-api-status: beta
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateChunkedUploadPart
      x-ds-service: Envelopes
  '/v2/accounts/{accountId}/connect':
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves all the DocuSign Custom Connect definitions for the specified account.

        ###### Note: Connect must be enabled for your account to use this function. This does not retrieve information for Connect configurations for Box, eOriginal, or Salesforce.
      operationId: Connect_GetConnectConfigs
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/connectConfigResults'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Get Connect Configuration Information
      tags:
        - ConnectConfigurations
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: listConfigurations
      x-ds-service: Connect
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: |-
        Creates a DocuSign Custom Connect definition for your account. DocuSign Connect enables the sending of real-time data updates to external applications. These updates are generated by user transactions as the envelope progresses through actions to completion. The Connect Service provides updated information about the status of these transactions and returns updates that include the actual content of document form fields. Be aware that, these updates might or might not include the document itself. For more information about Connect, see the [ML:DocuSign Connect Service Guide].

        ###### Note: Connect must be enabled for your account to use this function. This cannot be used to set up Connect configurations for Salesforce or eOriginal.
      operationId: Connect_PostConnectConfiguration
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: ConnectConfigurations
          required: false
          schema:
            $ref: '#/definitions/ConnectConfigurations'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/ConnectConfigurations'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Creates a connect configuration for the specified account.
      tags:
        - ConnectConfigurations
      x-ds-in-sdk: true
      x-ds-method: create
      x-ds-methodname: createConfiguration
      x-ds-service: Connect
    put:
      consumes: []
      deprecated: false
      description: |-
        Updates the specified DocuSign Connect configuration in your account.

        ###### Note: Connect must be enabled for your account to use this function. This cannot be used to update Connect configurations for Box, eOriginal, or Salesforce.
      operationId: Connect_PutConnectConfiguration
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: ConnectConfigurations
          required: false
          schema:
            $ref: '#/definitions/ConnectConfigurations'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/ConnectConfigurations'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates a specified Connect configuration.
      tags:
        - ConnectConfigurations
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateConfiguration
      x-ds-service: Connect
  '/v2/accounts/{accountId}/connect/envelopes/retry_queue':
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: 'Republishes Connect information for the  specified set of envelopes. The primary use is to republish Connect post failures by including envelope IDs for the envelopes that failed to post in the request. The list of envelope IDs that failed to post correctly can be retrieved by calling to [ML:GetConnectLog] retrieve the failure log.'
      operationId: ConnectPublish_PutConnectRetry
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: connectFailureFilter
          required: false
          schema:
            $ref: '#/definitions/connectFailureFilter'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/connectFailureResults'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Republishes Connect information for multiple envelopes.
      tags:
        - ConnectEvents
      x-ds-in-sdk: true
      x-ds-method: retryForEnvelopes
      x-ds-methodname: retryEventForEnvelopes
      x-ds-service: Connect
  '/v2/accounts/{accountId}/connect/envelopes/{envelopeId}/retry_queue':
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: Republishes Connect information for the specified envelope.
      operationId: ConnectPublish_PutConnectRetryByEnvelope
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/connectFailureResults'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Republishes Connect information for the specified envelope.
      tags:
        - ConnectEvents
      x-ds-in-sdk: true
      x-ds-method: retryForEnvelope
      x-ds-methodname: retryEventForEnvelope
      x-ds-service: Connect
  '/v2/accounts/{accountId}/connect/failures':
    get:
      consumes: []
      deprecated: false
      description: 'Retrieves the Connect Failure Log information. It can be used to determine which envelopes failed to post, so a republish request can be created.'
      operationId: ConnectFailures_GetConnectLogs
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'Start of the search date range. Only returns templates created on or after this date/time. If no value is specified, there is no limit on the earliest date created.'
          in: query
          name: from_date
          required: false
          type: string
        - description: 'End of the search date range. Only returns templates created up to this date/time. If no value is provided, this defaults to the current date.'
          in: query
          name: to_date
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/ConnectEvents'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets the Connect failure log information.
      tags:
        - ConnectEvents
      x-ds-in-sdk: true
      x-ds-method: listFailures
      x-ds-methodname: listEventFailureLogs
      x-ds-service: Connect
    parameters: []
  '/v2/accounts/{accountId}/connect/failures/{failureId}':
    delete:
      consumes: []
      deprecated: false
      description: Deletes the Connect failure log information for the specified entry.
      operationId: ConnectFailures_DeleteConnectFailureLog
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the failed connect log entry.
          in: path
          name: failureId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes a Connect failure log entry.
      tags:
        - ConnectEvents
      x-ds-in-sdk: true
      x-ds-method: deleteFailure
      x-ds-methodname: deleteEventFailureLog
      x-ds-service: Connect
    parameters: []
  '/v2/accounts/{accountId}/connect/logs':
    delete:
      consumes: []
      deprecated: false
      description: |-
        Retrieves a list of connect log entries for your account.

        ###### Note: The `enableLog` property in the Connect configuration must be set to **true** to enable logging. If logging is not enabled, then no log entries are recorded.
      operationId: ConnectLog_DeleteConnectLogs
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets a list of Connect log entries.
      tags:
        - ConnectEvents
      x-ds-in-sdk: true
      x-ds-method: deleteList
      x-ds-methodname: deleteEventLogs
      x-ds-service: Connect
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves a list of connect log entries for your account.

        ###### Note: The `enableLog` setting in the Connect configuration must be set to true to enable logging. If logging is not enabled, then no log entries are recorded. 
      operationId: ConnectLog_GetConnectLogs
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'Start of the search date range. Only returns templates created on or after this date/time. If no value is specified, there is no limit on the earliest date created.'
          in: query
          name: from_date
          required: false
          type: string
        - description: 'End of the search date range. Only returns templates created up to this date/time. If no value is provided, this defaults to the current date.'
          in: query
          name: to_date
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/ConnectEvents'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets the Connect log.
      tags:
        - ConnectEvents
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: listEventLogs
      x-ds-service: Connect
    parameters: []
  '/v2/accounts/{accountId}/connect/logs/{logId}':
    delete:
      consumes: []
      deprecated: false
      description: |
        Deletes a specified entry from the Connect Log.
      operationId: ConnectLog_DeleteConnectLog
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the connect log entry
          in: path
          name: logId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes a specified Connect log entry.
      tags:
        - ConnectEvents
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteEventLog
      x-ds-service: Connect
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves the specified Connect log entry for your account.

        ###### Note: The `enableLog` setting in the Connect configuration must be set to true to enable logging. If logging is not enabled, then no log entries are recorded. 
      operationId: ConnectLog_GetConnectLog
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the connect log entry
          in: path
          name: logId
          required: true
          type: string
        - description: 'When true, the connectDebugLog information is included in the response.'
          in: query
          name: additional_info
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/connectLog'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Get the specified Connect log entry.
      tags:
        - ConnectEvents
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getEventLog
      x-ds-service: Connect
    parameters: []
  '/v2/accounts/{accountId}/connect/{connectId}':
    delete:
      consumes: []
      deprecated: false
      description: |
        Deletes the specified DocuSign Connect configuration.

        ###### Note: Connect must be enabled for your account to use this function.

         
      operationId: Connect_DeleteConnectConfig
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the custom Connect configuration being accessed.
          in: path
          name: connectId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes the specified connect configuration.
      tags:
        - ConnectConfigurations
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteConfiguration
      x-ds-service: Connect
    get:
      consumes: []
      deprecated: false
      description: |
        Retrieves the information for the specified DocuSign Connect configuration.

        ###### Note: Connect must be enabled for your account to use this function.
      operationId: Connect_GetConnectConfig
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the custom Connect configuration being accessed.
          in: path
          name: connectId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/connectConfigResults'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Get information on a Connect Configuration
      tags:
        - ConnectConfigurations
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getConfiguration
      x-ds-service: Connect
    parameters: []
  '/v2/accounts/{accountId}/connect/{connectId}/users':
    get:
      consumes: []
      deprecated: false
      description: Returns users from the configured Connect service.
      operationId: Connect_GetConnectUsers
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the custom Connect configuration being accessed.
          in: path
          name: connectId
          required: true
          type: string
        - description: |
            Optional. Number of items to return.
          in: query
          name: count
          required: false
          type: string
        - description: Filters the returned user records by the email address or a sub-string of email address.
          in: query
          name: email_substring
          required: false
          type: string
        - description: ''
          in: query
          name: list_included_users
          required: false
          type: string
        - description: The position within the total result set from which to start returning values. The value **thumbnail** may be used to return the page image.
          in: query
          name: start_position
          required: false
          type: string
        - description: |
            Filters the results by user status.
            You can specify a comma-separated
            list of the following statuses:

            * ActivationRequired 
            * ActivationSent 
            * Active
            * Closed 
            * Disabled
          in: query
          name: status
          required: false
          type: string
        - description: Filters the user records returned by the user name or a sub-string of user name.
          in: query
          name: user_name_substring
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/integratedUserInfoList'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Returns users from the configured Connect service.
      tags:
        - ConnectConfigurations
      x-ds-in-sdk: true
      x-ds-method: listUsers
      x-ds-methodname: listUsers
      x-ds-service: Connect
    parameters: []
  '/v2/accounts/{accountId}/consumer_disclosure':
    get:
      consumes: []
      deprecated: false
      description: 'Retrieves the Electronic Record and Signature Disclosure, with HTML formatting, associated with the account. You can use an optional query string to set the language for the disclosure.'
      operationId: ConsumerDisclosure_GetConsumerDisclosure
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: |
            Specifies the language used in the response. The supported languages, with the language value shown in parenthesis, are: Arabic (ar), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk), and Vietnamese (vi).

            Additionally, the value can be set to `browser` to automatically detect the browser language being used by the viewer and display the disclosure in that language. 
          in: query
          name: langCode
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/AccountConsumerDisclosures'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets the Electronic Record and Signature Disclosure for the account.
      tags:
        - AccountConsumerDisclosures
      x-ds-in-sdk: true
      x-ds-method: getDefault
      x-ds-methodname: getConsumerDisclosureDefault
      x-ds-service: Accounts
    parameters: []
  '/v2/accounts/{accountId}/consumer_disclosure/{langCode}':
    get:
      consumes: []
      deprecated: false
      description: 'Retrieves the Electronic Record and Signature Disclosure, with HTML formatting, for the requested envelope recipient. This might be different than the current account disclosure depending on account settings, such as branding, and when the account disclosure was last updated. An optional query string can be included to return the language for the disclosure.  '
      operationId: ConsumerDisclosure_GetConsumerDisclosureLangCode
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The simple type enumeration the language used in the response. The supported languages, with the language value shown in parenthesis, are:Arabic (ar), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk) and Vietnamese (vi). Additionally, the value can be set to "browser" to automatically detect the browser language being used by the viewer and display the disclosure in that language.'
          in: path
          name: langCode
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/AccountConsumerDisclosures'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets the Electronic Record and Signature Disclosure.
      tags:
        - AccountConsumerDisclosures
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getConsumerDisclosure
      x-ds-service: Accounts
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: ''
      operationId: ConsumerDisclosure_PutConsumerDisclosure
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The simple type enumeration the language used in the response. The supported languages, with the language value shown in parenthesis, are:Arabic (ar), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk) and Vietnamese (vi). Additionally, the value can be set to "browser" to automatically detect the browser language being used by the viewer and display the disclosure in that language.'
          in: path
          name: langCode
          required: true
          type: string
        - description: |
            Reserved for DocuSign.
          in: query
          name: include_metadata
          required: false
          type: string
        - description: ''
          in: body
          name: EnvelopeConsumerDisclosures
          required: false
          schema:
            $ref: '#/definitions/EnvelopeConsumerDisclosures'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeConsumerDisclosures'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Update Consumer Disclosure.
      tags:
        - AccountConsumerDisclosures
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateConsumerDisclosure
      x-ds-service: Accounts
  '/v2/accounts/{accountId}/contacts':
    delete:
      consumes: []
      deprecated: false
      description: ''
      operationId: Contacts_DeleteContacts
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: contactModRequest
          required: false
          schema:
            $ref: '#/definitions/contactModRequest'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/contactUpdateResponse'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Delete contacts associated with an account for the DocuSign service.
      tags:
        - Contacts
      x-ds-in-sdk: true
      x-ds-method: deleteList
      x-ds-methodname: deleteContacts
      x-ds-service: Users
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: ''
      operationId: Contacts_PostContacts
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: contactModRequest
          required: false
          schema:
            $ref: '#/definitions/contactModRequest'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/contactUpdateResponse'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: 'Imports multiple new contacts into the contacts collection from CSV, JSON, or XML (based on content type).'
      tags:
        - Contacts
      x-ds-in-sdk: true
      x-ds-method: create
      x-ds-methodname: postContacts
      x-ds-service: Users
    put:
      consumes: []
      deprecated: false
      description: ''
      operationId: Contacts_PutContacts
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: contactModRequest
          required: false
          schema:
            $ref: '#/definitions/contactModRequest'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/contactUpdateResponse'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Replaces contacts associated with an account for the DocuSign service.
      tags:
        - Contacts
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: putContacts
      x-ds-service: Users
  '/v2/accounts/{accountId}/contacts/{contactId}':
    delete:
      consumes: []
      deprecated: false
      description: ''
      operationId: Contacts_DeleteContactWithId
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The unique identifier of a person in the contacts address book.
          in: path
          name: contactId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/contactUpdateResponse'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Replaces a particular contact associated with an account for the DocuSign service.
      tags:
        - Contacts
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteContactWithId
      x-ds-service: Users
    get:
      consumes: []
      deprecated: false
      description: ''
      operationId: Contacts_GetContactById
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The unique identifier of a person in the contacts address book.
          in: path
          name: contactId
          required: true
          type: string
        - description: ''
          in: query
          name: cloud_provider
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/contactGetResponse'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets a particular contact associated with the user's account.
      tags:
        - Contacts
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getContactById
      x-ds-service: Users
    parameters: []
  '/v2/accounts/{accountId}/custom_fields':
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves a list of envelope custom fields associated with the account. You can use these fields in the envelopes for your account to record information about the envelope, help search for envelopes and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.

        There are two types of envelope custom fields, text, and list. A text custom field lets the sender enter the value for the field. The list custom field lets the sender select the value of the field from a list you provide.
      operationId: AccountCustomFields_GetAccountCustomFields
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/AccountCustomFields'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets a list of custom fields associated with the account.
      tags:
        - AccountCustomFields
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: listCustomFields
      x-ds-service: Accounts
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: ''
      operationId: AccountCustomFields_PostAccountCustomFields
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: query
          name: apply_to_templates
          required: false
          type: string
        - description: ''
          in: body
          name: customField
          required: false
          schema:
            $ref: '#/definitions/customField'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/AccountCustomFields'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Creates an acount custom field.
      tags:
        - AccountCustomFields
      x-ds-in-sdk: true
      x-ds-method: create
      x-ds-methodname: createCustomField
      x-ds-service: Accounts
  '/v2/accounts/{accountId}/custom_fields/{customFieldId}':
    delete:
      consumes: []
      deprecated: false
      description: ''
      operationId: AccountCustomFields_DeleteAccountCustomFields
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: path
          name: customFieldId
          required: true
          type: string
        - description: ''
          in: query
          name: apply_to_templates
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Delete an existing account custom field.
      tags:
        - AccountCustomFields
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteCustomField
      x-ds-service: Accounts
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: ''
      operationId: AccountCustomFields_PutAccountCustomFields
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: path
          name: customFieldId
          required: true
          type: string
        - description: ''
          in: query
          name: apply_to_templates
          required: false
          type: string
        - description: ''
          in: body
          name: customField
          required: false
          schema:
            $ref: '#/definitions/customField'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/AccountCustomFields'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates an existing account custom field.
      tags:
        - AccountCustomFields
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateCustomField
      x-ds-service: Accounts
  '/v2/accounts/{accountId}/eMortgage/transactions':
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: ''
      operationId: EMortgage_PostTransactions
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: EMortgageTransactions
          required: false
          schema:
            $ref: '#/definitions/EMortgageTransactions'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/postTransactionsResponse'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Starts a new eMortgage Transaction
      tags:
        - EMortgageTransactions
      x-ds-api-status: beta
      x-ds-in-sdk: true
      x-ds-method: create
      x-ds-methodname: createEMortgageTransaction
      x-ds-service: Accounts
  '/v2/accounts/{accountId}/envelopes':
    get:
      consumes: []
      deprecated: false
      description: |
        Retrieves a list of envelopes that match your request. 
        A large set of optional filters let you filter
        by date,
        by envelope ID,
        or by status codes.

        Your request must include one or more of the following parameters:

        * `from_date`
        * `envelope_ids`
        * `transaction_ids`


        Getting envelope status using `transaction_ids` is useful
        for offline signing situations where it can be used
        determine if an envelope was created or not. It can be used
        for the cases where a network connection was lost, before
        the envelope status could be returned.

        To avoid unnecessary database queries, the DocuSign
        signature platform first checks requests to ensure that the
        filter set supplied does not result in a zero-size response
        before querying the database. 

        For example, for a request with a `from_to_status` of
        `delivered` and a current `status` of `created,sent`,
        DocuSign will always return an empty list. 
        This is because the request translates to: find the
        envelopes that were delivered between the `from_date` and
        `to_date` dates that have a current status of `created` or
        `sent`. Since an envelope that has been delivered can
        never have a status of `created` or `sent`, a zero-size
        response would be generated. 
        In this case, DocuSign does not query the database
        and returns an empty list immediately.


        The following table shows the valid current envelope
        statuses (`status` parameter) for the different status
        qualifiers (`from_to_status` parameter) in the request. If
        the status and status qualifiers in the API request do not
        contain any of the values shown in the Valid Current
        Statuses column, then an empty list is returned.

        Client applications should check that the statuses (`status`
        parameter) they are requesting make sense for a given
        `from_to_status` parameter value.

        | Status Qualifier<br>(`from_to_status`) | Effective Status Qualifier | Valid Current Statuses                                                      |  
        | :------------------------------------- | :------------------------- | :-------------------------------------------------------------------------- |  
        | any (changed)                          | StatusChanged              | any, created, sent, delivered, signed, completed, declined, voided, deleted |  
        | created                                | Created                    | any, created, sent, delivered, signed, completed, declined, voided, deleted |  
        | sent                                   | Sent                       | any, sent, delivered, signed, completed, declined, voided, deleted          |  
        | delivered                              | StatusChanged              | any, delivered, signed, completed, declined, voided, deleted                |  
        | signed                                 | StatusChanged              | any, signed, completed, declined, voided, deleted                           |  
        | completed                              | Completed                  | any, completed, declined, voided, deleted                                   |  
        | declined                               | StatusChanged              | any, declined, voided, deleted                                              |  
        | timedout<br>always return zero results | StatusChanged              | any, voided, deleted                                                        |  
        | voided                                 | Voided                     | any, voided, deleted                                                        |  
        | deleted                                | StatusChanged              | any, deleted                                                                |  

        ## Extraneous results

        In some cases, a request for a specific envelope status will
        include envelopes with additional statuses. For example, in
        a request with a `from_date` of 2017-01-01, a `to_date` of
        2017-01-07 and the status qualifier (`from_to_status`) set
        to `delivered`, the response set might contain envelopes
        that were created during that time period, but not delivered
        during the time period. As a workaround, check the envelope
        status values in the result set as needed. 
      operationId: Envelopes_GetEnvelopes
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'Specifies the Authoritative Copy Status for the envelopes. The possible values are: Unknown, Original, Transferred, AuthoritativeCopy, AuthoritativeCopyExportPending, AuthoritativeCopyExported, DepositPending, Deposited, DepositedEO, or DepositFailed.'
          in: query
          name: ac_status
          required: false
          type: string
        - description: |
            Reserved for DocuSign.
          in: query
          name: block
          required: false
          type: string
        - description: |
            Optional. Number of items to return.
          in: query
          name: count
          required: false
          type: string
        - description: |
            Optional. Specifies a envelope custom field name and value searched for in the envelopes. Format: `custom_envelope_field_name=desired_value`

            The value portion of the query can use partial strings by adding '%' (percent sign) around the custom field query value. 

            Example 1: If you have an envelope custom field named "Region" and you want to search for all envelopes where the value is "West" you would use set this parameter to `Region=West`. 

            Example 2: To search for envelopes where the `ApplicationID` custom field has the value or partial value of "DocuSign" in the field, set this parameter to `ApplicationId=%DocuSign%` This would match envelopes where the custom field's value is "DocuSign for Salesforce" or "DocuSign envelope". 
          in: query
          name: custom_field
          required: false
          type: string
        - description: |
            Limit results to envelopes
            sent by the account user
            with this email address.

            `user_name` must be given as well,
            and both `email` and `user_name`
            must refer to an existing account user.
          in: query
          name: email
          required: false
          type: string
        - description: Comma separated list of `envelopeId` values.
          in: query
          name: envelope_ids
          required: false
          type: string
        - description: |
            Reserved for DocuSign.
          in: query
          name: exclude
          required: false
          type: string
        - description: |
            Reserved for DocuSign.
          in: query
          name: folder_ids
          required: false
          type: string
        - description: |
            Reserved for DocuSign.
          in: query
          name: folder_types
          required: false
          type: string
        - description: |-
            Specifies the date and time
            to start looking for status changes.
            This parameter is required
            unless `envelopeIds` or `transactionIds`
            are set.


            Although you can use any date format
            supported by the .NET system library's
            [`DateTime.Parse()`][msoft] function,
            DocuSign recommends
            using [ISO 8601][] format dates
            with an explicit time zone offset
            If you do not provide
            a time zone offset,
            the method uses the server's time zone.

            For example, the following dates and times refer to the same instant:

            * `2017-05-02T01:44Z`
            * `2017-05-01T21:44-04:00`
            * `2017-05-01T18:44-07:00`


            [msoft]: https://msdn.microsoft.com/en-us/library/system.datetime.parse(v=vs.110).aspx#StringToParse
            [ISO 8601]: https://en.wikipedia.org/wiki/ISO_8601
          in: query
          name: from_date
          required: false
          type: string
        - description: |-
            The status value checked for in the `from_date` to `to_date` time period. 

            Possible values are: Voided, Changed, Created, Deleted, Sent, Delivered, Signed, Completed, Declined, TimedOut and Processing.

            If `Changed` is specified, then envelopes that changed status during the period will be returned. 

            For example, if `Created` is specified, then envelopes created during the period are found. 

            The default is `Changed`. 
          in: query
          name: from_to_status
          required: false
          type: string
        - description: |
            Reserved for DocuSign.
          in: query
          name: include
          required: false
          type: string
        - description: ''
          in: query
          name: include_purge_information
          required: false
          type: string
        - description: |
            Reserved for DocuSign.
          in: query
          name: intersecting_folder_ids
          required: false
          type: string
        - description: |
            Reserved for DocuSign.
          in: query
          name: order
          required: false
          type: string
        - description: |
            Reserved for DocuSign.
          in: query
          name: order_by
          required: false
          type: string
        - description: |
            Reserved for DocuSign.
          in: query
          name: powerformids
          required: false
          type: string
        - description: |
            Reserved for DocuSign.
          in: query
          name: search_text
          required: false
          type: string
        - description: |
            Reserved for DocuSign.
          in: query
          name: start_position
          required: false
          type: string
        - description: |+
            A comma-separated list of current envelope statuses to included in the response. Possible values are:

            * completed
            * created
            * declined
            * deleted
            * delivered
            * processing
            * sent
            * signed
            * timedout
            * voided

            The `any` value is equivalent to any status.

          in: query
          name: status
          required: false
          type: string
        - description: |
            Specifies the date and time
            to stop looking for status changes.
            The default is the current date and time.

            Although you can use any date format
            supported by the .NET system library's
            [`DateTime.Parse()`][msoft] function,
            DocuSign recommends
            using [ISO 8601][] format dates
            with an explicit time zone offset
            If you do not provide
            a time zone offset,
            the method uses the server's time zone.

            For example, the following dates and times refer to the same instant:

            * `2017-05-02T01:44Z`
            * `2017-05-01T21:44-04:00`
            * `2017-05-01T18:44-07:00`


            [msoft]: https://msdn.microsoft.com/en-us/library/system.datetime.parse(v=vs.110).aspx#StringToParse
            [ISO 8601]: https://en.wikipedia.org/wiki/ISO_8601
          in: query
          name: to_date
          required: false
          type: string
        - description: |
            A comma-separated list of envelope transaction IDs.
            Transaction IDs are only valid for seven days.
          in: query
          name: transaction_ids
          required: false
          type: string
        - description: |
            Reserved for DocuSign.
          in: query
          name: user_filter
          required: false
          type: string
        - description: |
            Reserved for DocuSign.
          in: query
          name: user_id
          required: false
          type: string
        - description: |
            Limit results to envelopes
            sent by the account user
            with this user name.

            `email` must be given as well,
            and both `email` and `user_name`
            must refer to an existing account user.
          in: query
          name: user_name
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/envelopesInformation'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets status changes for one or more envelopes.
      tags:
        - Envelopes
      x-ds-examples:
        - description: |
            This example shows a how to get information about
            envelopes created since January 1, 2016.

            The request for this endpoint has no payload.

            ### Request
            ```
            GET /restapi/v2/accounts/1703061/envelopes?from_date=2016-01-01
            ```
          direction: response
          format: json
          response:
            endPosition: '1'
            envelopes:
              - certificateUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0/documents/certificate
                customFieldsUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0/custom_fields
                documentsCombinedUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0/documents/combined
                documentsUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0/documents
                envelopeId: 379497bb-cc85-4654-bab9-a8e397f538d0
                envelopeUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0
                notificationUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0/notification
                recipientsUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0/recipients
                status: completed
                statusChangedDateTime: '2016-10-04T15:26:28.2830000Z'
                templatesUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0/templates
              - certificateUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/documents/certificate
                customFieldsUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/custom_fields
                documentsCombinedUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/documents/combined
                documentsUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/documents
                envelopeId: 4b728be4-4417-45c6-b7e8-d63e23f822b6
                envelopeUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6
                notificationUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/notification
                recipientsUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/recipients
                status: sent
                statusChangedDateTime: '2016-10-05T01:04:58.7770000Z'
                templatesUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/templates
            nextUri: ''
            previousUri: ''
            resultSetSize: '2'
            startPosition: '0'
            totalSetSize: '2'
          style: custom
          title: Get Status About Envelopes Since a Specified Date
      x-ds-in-sdk: true
      x-ds-method: listStatusChanges
      x-ds-methodname: listStatusChanges
      x-ds-service: Envelopes
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: |
        Creates and sends an envelope or creates a draft envelope.
        Envelopes are fundamental resources in the DocuSign platform
        and are used in a variety of ways.

        With this method you can:

        * Create and send an envelope
          with documents, recipients, and tabs.
        * Create and send an envelope from a template.
        * Create and send an envelope from
          a combination of documents and templates.
        * Create a draft envelope.

        There are many ways to use envelopes.
        You can create and send an envelope
        with a single API request,
        or you can use several API requests
        to create, populate, and send envelopes.

        When you use this method
        to create and send an envelope
        in a single request,
        the following parameters are required:

        | Parameter      | Description |
        | :--------      | :---------- |
        | `status`       | Set to `sent` to send the envelope to recipients.<br>Set to `created` (or don't set at all) to save the envelope as a draft. |
        | `emailSubject` | The subject of the email used to send the envelope. |
        | `documents`    | The documents to be signed. |
        | `recipients`   | The email addresses of the envelope recipients. |

        If you are creating an envelope
        to be sent later,
        save it as a draft
        by either setting `status`
        to `created` or leaving it unset.
        For instance, you can create a draft envelope
        with documents only.
        Using additional API requests,
        you can add the recipients
        and send the envelope
        in subsequent API requests.



        ## Feature Availability

        Not all DocuSign features are available to all accounts.
        Use DocuSign Admin to check and enable feature availability.
        You can also check feature availability via the web application.
        For example, if the web application allows you to send an envelope with SMS authentication,
        then you can use the same feature through the API.

        ## Sending Envelopes

        Documents can be included
        with the Envelopes:create method,
        or a template can include documents.
        Documents can be added by using
        a multipart/form request
        or by using the `documentBase64` property of the [`document` object][documentDef].

        ### Adding Documents to Requests

        There are two ways to add documents to your envelopes:

        1. Use the `documents` property of the envelope definition.
        2. Send this request as a multipart/form-data `POST`
           with documents added through additional request parts.

        Using the `documents` property is the simpler option,
        but the request may be quite large
        due to the base64 encoding.
        This example shows how to add a document
        using this method.

        ```json
        {
          "status": "sent",
          "emailSubject": "Example of one recipient, type signer",
          "documents": [{
            "documentId": "1",
            "name": "contract.pdf",
            "documentBase64": "base64 document bytes...",
          }],
          "recipients": {
            "signers": [{
              "name": "Lisa Simpson",
              "email": "lisa@email.com",
              "recipientId": "1",
              "routingOrder": "1",
              "tabs": {
                "signHereTabs": [{
                  "xPosition": "150",
                  "yPosition": "200",
                  "documentId": "1",
                  "pageNumber": "1"
                }],
              }
            }]
          }
        }
        ```

        If you are using a multipart/form-data `POST` request,
        you do not have to base64 encode your documents.
        You place the envelope definition in one part
        and the document bytes in another:

        ```
        --AAA
        Content-Type: application/json
        Content-Disposition: form-data

        <ENVELOPE DEFINITION GOES HERE>
        --AAA
        Content-Type:application/pdf
        Content-Disposition: file; filename="contract.pdf"; documentid=1

        <DOCUMENT BYTES GO HERE>
        --AAA--
        ```

        ### Using Supplemental Documents

        Supplemental documents are supporting materials
        such as disclosures and other informational documents
        that need to accompany a document sent for signature.
        These supplemental documents are available to the signer
        to view and acknowledge,
        without making the envelope too large or confusing for signers.

        Supplemental documents use the following properties in the
        [`document` object][documentDef].

        | Name                  | Type    | Description|
        | :-------------------- | :------ ||
        | includeInDownload     | Boolean | When set to **true**, the document is included in the combined document download. The default value is **true|
        | display               | String  | This string sets the display and behavior properties of the document during signing. The possible values are:<br>`<ul><li><p><code>modal</code><br>The document is shown as a supplement action strip and can be viewed, downloaded, or printed in a modal window. This is the recommended value for supplemental documents.</p></li><li><p><code>download</code><br>The document is shown as a supplement action strip and can be viewed, downloaded, or printed in a new browser window.</p></li><li><p><code>inline</code><br>This value is not used with supplemental documents, but is the default value for all other documents. The document is shown in the normal signing window.</li></ul> |
        | signerMustAcknowledge | String  | Sets how the signer interacts with the supplemental document. The possible values are:<br><ul><li><p><code>no_interaction</code><br>No recipient action is required.</p></li><li><p><code>view</code><br>The recipient is required to view the document.</p></li><li><p><code>accept</code><br>The recipient is required to accept the document by selecting accept during signing, but is not required to view the document.</p></li><li><p><code>view_accept</code><br>The recipient is required to view and accept the document.</p></li></ul>                                                                                                                                                    |


        [viewtab]: /esign/restapi/Envelopes/EnvelopeRecipientTabs/#view-tab

        The [View][viewtab] and Approve tabs
        are used to set the interactions
        for individual recipients.
        The View tab includes a `required` property
        that requires the recipient to view the supplemental document.
        If the View tab `required` property is not set,
        the recipient can, but is not required to,
        view the supplemental document.

        To use the View and Approve tabs for
        supplemental documents,
        the document `display` property
        must be set to `modal` or `download`.

        The actions that the recipient must take
        depend on the value
        of the `signerMustAcknowledge` document property
        and
        whether the signer is assigned
        View or Approve tabs
        on the document.

        To set the interactions for individual recipients,
        set the `signerMustAcknowledge` property
        to `no_interaction`,
        then add View and Approve tabs
        on the appropriate document for the recipient.


        The action that a signer must take
        depends on the value of the
        `signerMustAcknowledge` document property,
        whether the signer has an Approve tab,
        and the value of the
        `required` property of the View tab.
        The following table
        shows the actions a recipient must take
        for different combinations
        of these tabs and properties.



        | Document `signerMustAcknowledge`property  | Approve Tab | View Tab `required` property  | Recipient is required to ...  |
        | :----                                     | :----       | :----                         | :----                         |
        | no_interaction                            | No          |  --                           |  Take no action               |
        | no_interaction                            | No          |  false                        |  Take no action               |
        | no_interaction                            | No          |  true                         |  View                         |
        | no_interaction                            | Yes         |  false                        |  Accept                       |
        | no_interaction                            | Yes         |  true                         |  View and Accept              |
        | view                                      | No          |  --                           |  View                         |
        | view                                      | Yes         |  --                           |  View and Accept              |
        | accept                                    | --          |  false                        |  Accept                       |
        | accept                                    | --          |  true                         |  View and Accept              |
        | view_accept                               | --          |  --                           |  View and Accept              |




        ### Recipient Types

        An [`envelopeDefinition` object][envelopeDef] is used as the method's body.
        Envelope recipients can be defined in the envelope or in templates.
        The `envelopeDefinition` object's `recipients` property
        is an [`EnvelopeRecipients` resource object][envelopeRecipientsDef].
        It includes arrays of the seven types of recipients defined by DocuSign:

        | Recipient type                      | Description                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         |
        | :---------------------------------- | :-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
        | [Agents][agentDef]                  | An agent recipient can add name and email information for recipients that appear after the agent in routing order.                                                                                                                                                                                                                                                                                                                                                                                  |
        | [Carbon Copies][ccDef]              | Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date or add information to any of the documents. This type of recipient can be used in any routing order. Carbon copy recipients receive their copy of the envelope when the envelope reaches the recipient's order in the process flow and when the envelope is completed.                                                                                                                                      |
        | [Certified Deliveries][certfiedDef] | Certified delivery recipients must receive the completed documents for the envelope to be completed. However, they don't need to sign, initial, date or add information to any of the documents.                                                                                                                                                                                                                                                                                                    |
        | [Editors][editorDef]                | Editors have the same management and access rights for the envelope as the sender. They can make changes to the envelope as if they were using the Advanced Correct feature. This recipient can add name and email information, add or change the routing order and set authentication options for the remaining recipients. Additionally, this recipient can edit signature/initial tabs and data fields for the remaining recipients. The recipient must have a DocuSign account to be an editor. |
        | [In-Person Signers][inPersonDef]    | An in-person recipient is a DocuSign user, acting as a Signing Host, who is in the same physical location as the signer.                                                                                                                                                                                                                                                                                                                                                                            |
        | [Intermediaries][intermediaryDef]   | An intermediary is a recipient who can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order, unless subsequent agents, editors or intermediaries are added.                                                                                                                                                                                                                                                                  |
        | [Signers][signerDef]                | A signer is a recipient who must sign, initial, date, or add data to form fields on the documents in the envelope.                                                                                                                                                                                                                                                                                                                                                                                  |


        Additional information about the different types of recipients
        is available from the [`EnvelopeRecipients` resource page][envelopeRecipientsRes]
        and from the Developer Center [Recipients][devecenterrecipients] topic.



        ### Tabs

        Tabs (also referred to as tags and fields in the web application),
        can be defined in the `envelopeDefinition`,
        in templates, by transforming PDF Form Fields,
        or by using Composite Templates (see below).

        The `inPersonSigner`, and `signer` recipient objects
        include a `tabs` property.
        It is an [`EnvelopeRecipientTabs` resource object][envRecipientTabsDef]
        that includes arrays of the different tab types available.
        See the [`EnvelopeRecipientTabs` resource][envRecipientTabsRes] for more information.


        ## Using Templates

        Envelopes use specific people or groups as recipients.
        Templates can specify a role, eg `account_manager.`
        When a template is used in an envelope,
        the roles must be replaced with specific people or groups.

        When you create an envelope using a `templateId`,
        the different recipient type objects
        within the [`EnvelopeRecipients` property][envelopeRecipientsDef]
        are used to assign recipients to the template's roles via the `roleName` property.
        The recipient objects can also override settings
        that were specified in the template,
        and set values for tab fields that were defined in the template.

        ### Message Lock

        When a template is added or applied to an envelope,
        and the template has a locked email subject and message,
        that subject and message are used for the envelope
        and cannot be changed
        even if another locked template
        is subsequently added or applied to the envelope.
        The `messageLock` property is used to lock the email subject and message.

        If an email subject or message is entered
        before adding or applying a template with `messageLock` set to **true**,
        the email subject and message is overwritten
        with the locked email subject and message from the template.

        ## Envelope Status

        The status of sent envelopes
        can be determined through the DocuSign webhook system
        or by polling.
        Webhooks are highly recommended:
        they provide your application with the quickest updates when an envelope's
        status changes.
        DocuSign limits polling to once every 15 minutes or less
        frequently.
        See [API Rules and Limits][apirules] for more information and examples.


        When a webhook is used,
        DocuSign calls your application via the URL you provide, with a notification XML message.

        See the
        [Webhook recipe](https://www.docusign.com/developer-center/recipes/webhook-status)
        for examples and live demos of using webhooks.

        ## Webhook Options

        The two webhook options,
        `eventNotification` and Connect,
        use the same notification mechanism and message formats.
        Use `eventNotification` to create a webhook
        for a specific envelope sent via the API.
        Connect webhooks can be used
        for any envelope sent from an account,
        from any user, from any client.
        The [Connect guide][connectGuide] discusses the webhook notification message format.

        ### eventNotification Webhooks

        The Envelopes:create method
        includes an optional [`eventNotification` object][eventNotificationDef] property
        that adds a webhook to the envelope.
        `eventNotification` webhooks are available for all DocuSign accounts with API access.

        ### Connect Webhooks

        Connect can be used to create a webhook
        for all envelopes sent by all users in an account,
        either through the API or through other DocuSign clients (web, mobile, etc).
        Connect configurations are independent of specific envelopes.
        A Connect configuration includes a filter
        that may be used to limit the webhook to specific users, envelope statuses, etc.

        You can create and manage Connect configurations with
        the [ConnectConfigurations resource][connectConfigurationsRes].
        Configurations can also be created and managed from DocuSign Admin
        accessed by selecting **Go to Admin** from the menu
        next to your picture on the DocuSign web app.
        See the **Connect** topic in the **Integrations** section of DocuSign Admin.
        For repeatability, and to minimize support questions,
        creating Connect configurations via the API is recommended, especially for ISVs.

        Connect is available for some DocuSign account types.
        Please contact DocuSign Sales for more information.

        ## Composite Templates

        The Composite Templates feature,
        like [compositing in film production](https://en.wikipedia.org/wiki/Compositing),
        enables you to overlay
        document,
        recipient,
        and tab definitions
        from multiple sources,
        including PDF Form Field definitions,
        templates defined on the server,
        and more.

        Each Composite Template consists of optional elements: server templates,
        inline templates, PDF Metadata templates, and documents.

        * The Composite Template ID is an optional element used to identify the
          composite template. It is used as a reference when adding document
          object information via a multipart HTTP message. If used, the document
          content-disposition must include the `compositeTemplateId` to which the
          document should be added. If `compositeTemplateId` is not specified in
          the content-disposition, the document is applied based on the
          `documentId` only. If no document object is specified, the composite
          template inherits the first document.

        * Server Templates are server-side templates stored on the DocuSign
          platform. If supplied, they are overlaid into the envelope in the order
          of their Sequence value.

        * Inline Templates provide a container to add documents, recipients,
          tabs, and custom fields. If inline templates are supplied, they are
          overlaid into the envelope in the order of their Sequence value.

        * Document objects are optional structures that provide a container to
          pass in a document or form. If this object is not included, the
          composite template inherits the *first* document it finds from a server
          template or inline template, starting with the lowest sequence value.

        PDF Form objects are only transformed from the document object. DocuSign
        does not derive PDF form properties from server templates or inline
        templates. To instruct DocuSign to transform fields from the PDF form,
        set `transformPdfFields` to **true** for the document.

        See [PDF Form Field Transformation](#pdf-form-field-transformation)
        for more information about process.

        * PDF Metadata Templates provide a container to embed design-time
          template information into a PDF document. DocuSign uses this information
          when processing the Envelope. This convention allows the document to
          carry the signing instructions with it, so that less information needs
          to be provided at run-time through an inline template or synchronized
          with an external structure like a server template. PDF Metadata
          templates are stored in the Metadata layer of a PDF in accordance with
          Acrobat's XMP specification. DocuSign will only find PDF Metadata
          templates inside documents passed in the Document object (see below). If
          supplied, the PDF metadata template will be overlaid into the envelope
          in the order of its Sequence value.

        ### Compositing the Definitions

        Each Composite Template adds a new document and templates overlay into
        the envelope. For each Composite Template these rules are applied:

        * Templates are overlaid in the order of their Sequence value.
        * If Document is not passed into the Composite Template's `document`
          field, the *first* template's document (based on the template's Sequence
          value) is used.
        * Last in wins in all cases except for the document (i.e. envelope
          information, recipient information, secure field information). There is
          no special casing.

        For example, if you want higher security on a tab,
        then that needs to be specified in a later template (by sequence number)
        than where the tab is included.
        If you want higher security on a role recipient,
        then it needs to be in a later template
        than where that role recipient is specified.

        * Recipient matching is based on Recipient Role and Routing Order. If
          there are matches, the recipient information is merged together. A final
          pass is done on all Composite Templates, after all template overlays
          have been applied, to collapse recipients with the same email, username
          and routing order. This prevents having the same recipients at the same
          routing order.

        * If you specify in a template that a recipient is locked, once that
          recipient is overlaid the recipient attributes can no longer be changed.
          The only items that can be changed for the recipient in this case are
          the email, username, access code and IDCheckInformationInput.

        * Tab matching is based on Tab Labels, Tab Types and Documents. If a Tab
          Label matches but the Document is not supplied, the Tab is overlaid for
          all the Documents.

        For example, if you have a simple inline template with only one tab in
        it with a label and a value, the Signature, Initial, Company, Envelope
        ID, User Name tabs will only be matched and collapsed if they fall in
        the exact same X and Y locations.

        * `roleName` and `tabLabel` matching is case sensitive.

        * The `defaultRecipient` property enables you to specify which recipient
          the tabs generated from a PDF form are mapped to. You can also set PDF
          form generated tabs to a recipient other than the default recipient by
          specifying the mapping of the tab label that is created to one of the
          template recipients.

        * You can use `tabLabel` wild carding to map a series of tabs from the PDF
          form. To use this you must end a tab label with "\*" and then the system
          matches tabs that start with the label.

        * If no `defaultRecipient` is specified, tabs must be explicitly mapped
          to recipients in order to be generated from the form. Unmapped form
          objects will not be generated into their DocuSign equivalents. (In the
          case of Signature/Initials, the tabs will be disregarded entirely; in
          the case of pdf text fields, the field data will be flattened on the
          Envelope document, but there will not be a corresponding DocuSign data
          tab.)

        ### Including the Document Content for Composite Templates

        Document content can be supplied inline, using the `documentBase64` or
        can be included in a multipart HTTP message. If a multipart message is
        used and there are multiple Composite Templates, the document
        content-disposition can include the `compositeTemplateId` to which the
        document should be added. Using the `compositeTemplateId` sets which
        documents are associated with particular composite templates. An example
        of this usage is:

        ```
        --5cd3320a-5aac-4453-b3a4-cbb52a4cba5d
        Content-Type: application/pdf
        Content-Disposition: file; filename="eula.pdf"; documentId=1; compositeTemplateId="1"
        Content-Transfer-Encoding: base64
        ```

        ### PDF Form Field Transformation

        Only the following PDF Form FieldTypes are transformed to DocuSign
        tabs:

        * CheckBox
        * DateTime
        * ListBox
        * Numeric
        * Password
        * Radio
        * Signature,
        * Text

        Field Properties that are transformed:

        * Read Only
        * Required
        * Max Length
        * Positions
        * Initial Data

        When transforming a PDF Form Digital Signature Field, the following rules apply.
        Any other PDF Form Digital Signature Field will be transformed to a DocuSign Signature tab


        | If the PDF Field Name contains                              | Then the DocuSign tab will be |
        | :---------------------------------------------------------- | :---------------------------- |
        | DocuSignSignHere or<br> eSignSignHere                       | Signature                     |
        | DocuSignSignHereOptional or<br> eSignSignHereOptional       | Optional Signature            |
        | DocuSignInitialHere or<br> eSignInitialHere                 | Initials                      |
        | DocuSignInitialHereOptional or<br> eSignInitialHereOptional | Optional Initials             |


        When transforming PDF Form Text Fields, the following rules apply.
        Any other PDF Form Text Field will be transformed to a DocuSign data (text) tab.


        | If the PDF Field Name contains                                        | Then the DocuSign tab will be |
        | :-------------------------------------------------------------------- | :---------------------------- |
        | DocuSignSignHere or<br> eSignSignHere                                 | Signature                     |
        | DocuSignSignHereOptional or<br> eSignSignHereOptional                 | Optional Signature            |
        | DocuSignInitialHere or<br> eSignInitialHere                           | Initials                      |
        | DocuSignInitialHereOptional or<br> eSignInitialHereOptional           | Optional Initials             |
        | DocuSignEnvelopeID or<br> eSignEnvelopeID                             | EnvelopeID                    |
        | DocuSignCompany or<br> eSignCompany                                   | Company                       |
        | DocuSignDateSigned or<br> eSignDateSigned                             | Date Signed                   |
        | DocuSignTitle or<br> eSignTitle                                       | Title                         |
        | DocuSignFullName or<br> eSignFullName                                 | Full Name                     |
        | DocuSignSignerAttachmentOptional or<br> eSignSignerAttachmentOptional | Optional Signer Attachment    |


        PDF Form Field Names that include `DocuSignIgnoreTransform`
        or `eSignIgnoreTransform` will not be transformed.

        PDF Form Date fields that include `DocuSignDateSigned` or `eSignDateSigned`
        will be transformed
        to Date Signed fields.

        ## Template Email Subject Merge Fields

        This feature enables you to insert recipient name and email address
        merge fields into the email subject line when creating or sending from a
        template.

        The merge fields, based on the recipient's `roleName`, are added to the
        `emailSubject` when the template is created or when the template is used
        to create an envelope. After a template sender adds the name and email
        information for the recipient and sends the envelope, the recipient
        information is automatically merged into the appropriate fields in the
        email subject line.

        Both the sender and the recipients will see the information in the email
        subject line for any emails associated with the template. This provides
        an easy way for senders to organize their envelope emails without having
        to open an envelope to check the recipient.

        If merging the recipient information into the subject line causes the
        subject line to exceed 100 characters, then any characters over the 100
        character limit are not included in the subject line. For cases where
        the recipient name or email is expected to be long, you should consider
        placing the merge field at the start of the email subject.

        * To add a recipient's name in the subject line add the following text
          in the `emailSubject` when creating the template or when sending an
          envelope from a template:

           `[[<roleName>_UserName]]`

           Example:

           `"emailSubject":"[[Signer 1_UserName]], Please sign this NDA"`

        * To add a recipient's email address in the subject line add the
          following text in the emailSubject when creating the template or when
          sending an envelope from a template:

           `[[<roleName>_Email]]`

           Example:

           `"emailSubject":"[[Signer 1_Email]], Please sign this NDA"`

        In both cases `<roleName>` is the recipient's `roleName` in the template.

        For cases where another recipient (such as an Agent, Editor, or
        Intermediary recipient) is entering the name and email information for
        the recipient included in the email subject, then
        `[[<roleName>_UserName]]` or `[[<roleName>_Email]]` is shown in the
        email subject.

        ## Branding an Envelope

        The following rules are used to determine the `brandId` used in an envelope:

        * If a `brandId` is specified in the envelope or template
          and that `brandId` is available to the account,
          that brand is used in the envelope.
        * If more than one template is used in an envelope,
          and more than one `brandId` is specified,
          the first `brandId` specified is used throughout the envelope.
        * In cases where no brand is specified,
          and the sender belongs to a group:
          - If there is only one brand associated with the group,
            then that brand is used in the envelope.
          - Otherwise, the account's default signing brand is used.
        * For envelopes that do not meet any of the previous criteria,
          the account's default signing brand is used for the envelope.


        ## BCC Email Address Feature

        The BCC Email address feature
        is designed to provide a copy
        of all email communications for external archiving purposes.
        DocuSign recommends that envelopes sent using the BCC for Email Archive feature,
        including the BCC Email Override option,
        include additional signer authentication options.

        Do **not** use this feature
        to send a copy of the envelope
        to a recipient who does not need to sign.
        Use a Carbon Copy or Certified Delivery Recipient type instead.

        ## Merge Recipient Roles for Draft Envelopes

        When an envelope with multiple templates is sent,
        the recipients from the templates are merged according to the template roles,
        and empty recipients are removed.
        When creating an envelope with multiple templates,
        but not sending it (keeping it in a created state),
        duplicate recipients are not merged,
        which could leave duplicate recipients in the envelope.

        To prevent this,
        the query parameter `merge_roles_on_draft`
        should be added when posting a draft envelope (`status` is `created`)
        with multiple templates.
        Doing this will merge template roles and remove empty recipients.


        DocuSign recommends that the `merge_roles_on_draft` query
        parameter be used any time you are creating an envelope with
        multiple templates and keeping it in draft (`status` is `created`) status.


        [agentDef]:                 #/definitions/agent
        [apirules]:                 /esign/guide/appendix/resource_limits.html#api-rules-and-limits
        [ccDef]:                     #/definitions/carbonCopy
        [certfiedDef]:               #/definitions/certifiedDelivery
        [connectConfigurationsRes]: /esign/restapi/Connect/ConnectConfigurations/
        [connectGuide]:             https://www.docusign.com/supportdocs/pdf/connect-guide.pdf
        [devecenterrecipients]:     https://www.docusign.com/developer-center/explore/features/recipients
        [documentDef]:               #/definitions/document
        [editorDef]:                 #/definitions/editor
        [envelopeDef]:               #/definitions/envelopeDefinition
        [envelopeRecipientsDef]:     #/definitions/EnvelopeRecipients
        [envelopeRecipientsRes]:    /esign/restapi/Envelopes/EnvelopeRecipients/
        [envRecipientTabsDef]:       #/definitions/EnvelopeRecipientTabs
        [envRecipientTabsRes]:      /esign/restapi/Envelopes/EnvelopeRecipientTabs/
        [eventNotificationDef]:      #/definitions/eventNotification
        [inPersonDef]:               #/definitions/inPersonSigner
        [intermediaryDef]:           #/definitions/intermediary
        [signerDef]:                 #/definitions/signer
      operationId: Envelopes_PostEnvelopes
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: |
            Reserved for DocuSign.
          in: query
          name: cdse_mode
          required: false
          type: string
        - description: |
            Reserved for DocuSign.
          in: query
          name: completed_documents_only
          required: false
          type: string
        - description: |-
            When set to **true**, template roles will be merged, and empty recipients will be removed. This parameter applies when you create a draft envelope with multiple templates. (To create a draft envelope, the `status` field is set to `created`.)

            ###### Note: DocuSign recommends that this parameter should be set to **true** whenever you create a draft envelope with multiple templates.
          in: query
          name: merge_roles_on_draft
          required: false
          type: string
        - description: ''
          in: body
          name: envelopeDefinition
          required: false
          schema:
            $ref: '#/definitions/envelopeDefinition'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/envelopeSummary'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Creates an envelope.
      tags:
        - Envelopes
      x-ds-examples:
        - description: |
            This example shows a request/response that includes:

            * A single PDF document to be signed
            * One tab positioned using anchor text
            * One recipient

            See [Requesting a Signature via Email](/esign/guide/usage/request_a_signature.html)
            for a full walkthrough of this example.
          direction: both
          format: json
          request:
            documents:
              - documentBase64: '[Document content (PDF File)]'
                documentId: '1'
                fileExtension: pdf
                name: NDA.pdf
            emailSubject: Please sign the NDA
            recipients:
              signers:
                - email: the_nda_signer@example.com
                  name: Darlene Petersen
                  recipientId: '1'
                  routingOrder: '1'
                  tabs:
                    dateSignedTabs:
                      - anchorString: signer1date
                        anchorYOffset: '-6'
                        fontSize: Size12
                        name: Date Signed
                        recipientId: '1'
                        tabLabel: date_signed
                    fullNameTabs:
                      - anchorString: signer1name
                        anchorYOffset: '-6'
                        fontSize: Size12
                        name: Full Name
                        recipientId: '1'
                        tabLabel: Full Name
                    signHereTabs:
                      - anchorString: signer1sig
                        anchorUnits: mms
                        anchorXOffset: '0'
                        anchorYOffset: '0'
                        name: Please sign here
                        optional: 'false'
                        recipientId: '1'
                        scaleValue: 1
                        tabLabel: signer1sig
            status: sent
          response:
            envelopeId: 63e05468-6432-41d2-b01c-8b48f7dbeb80
            status: sent
            statusDateTime: '2016-05-29T17:11:56.1800000Z'
            uri: /envelopes/63e05468-6432-41d2-b01c-8b48f7dbeb80
          style: custom
          title: Request Signature on Single Document by Email
        - description: |
            This example shows a request/response that includes:

            * Multiple documents, both pdf and Word docx files.
            * Multiple tabs including signing, fullName, dateSigned, and text tabs.
            * Tabs positioned using anchor text.
            * Two recipients, a signer and a cc recipient.

            For more information, and to try this request live, see the [API Recipe](https://www.docusign.com/developer-center/recipes/send-multiple-docs)
          direction: both
          format: json
          request:
            documents:
              - documentBase64: '[Document 1 content (PDF File)]'
                documentId: '1'
                fileExtension: pdf
                name: NDA.pdf
              - documentBase64: '[Document 2 content (PDF File)]'
                documentId: '2'
                fileExtension: pdf
                name: House.pdf
              - documentBase64: '[Document 3 content (Word file)]'
                documentId: '3'
                fileExtension: docx
                name: contractor_agreement.docx
            emailSubject: Please sign the house documentation package
            recipients:
              carbonCopies:
                - email: cody_vigil@worldwidecorp.example.com
                  name: Cody Vigil
                  recipientId: '2'
                  routingOrder: '2'
              signers:
                - email: darlene_petersen@newco.example.com
                  name: Darlene Petersen
                  recipientId: '1'
                  routingOrder: '1'
                  tabs:
                    dateSignedTabs:
                      - anchorString: signer1date
                        anchorYOffset: '-6'
                        fontSize: Size12
                        name: Date Signed
                        recipientId: '1'
                        tabLabel: date_signed
                      - documentId: '2'
                        fontSize: Size12
                        name: Date Signed
                        pageNumber: '1'
                        recipientId: '1'
                        tabLabel: doc3_date_signed
                        xPosition: '89'
                        yPosition: '100'
                    fullNameTabs:
                      - anchorString: signer1name
                        anchorYOffset: '-6'
                        fontSize: Size12
                        name: Full Name
                        recipientId: '1'
                        tabLabel: Full Name
                    signHereTabs:
                      - anchorString: signer1sig
                        anchorUnits: mms
                        anchorXOffset: '0'
                        anchorYOffset: '0'
                        name: Please sign here
                        optional: 'false'
                        recipientId: '1'
                        scaleValue: 1
                        tabLabel: signer1sig
                      - documentId: '2'
                        name: Please sign here
                        optional: 'false'
                        pageNumber: '1'
                        recipientId: '2'
                        scaleValue: 1
                        tabLabel: signer1_doc2
                        xPosition: '89'
                        yPosition: '40'
                      - anchorString: Client Signature
                        anchorUnits: mms
                        anchorXOffset: '0'
                        anchorYOffset: '-4'
                        name: Please sign here
                        optional: 'false'
                        recipientId: '1'
                        scaleValue: 1
                        tabLabel: doc3_client_sig
                    textTabs:
                      - anchorString: signer1company
                        anchorYOffset: '-8'
                        fontSize: Size12
                        name: Company
                        recipientId: '1'
                        required: 'true'
                        tabLabel: Company
                      - anchorString: Client Name
                        anchorYOffset: '-38'
                        fontSize: Size12
                        name: Company
                        recipientId: '1'
                        required: 'true'
                        tabLabel: Company
                      - documentId: '3'
                        fontSize: Size10
                        name: Company
                        pageNumber: '1'
                        recipientId: '1'
                        required: 'true'
                        tabLabel: Company
                        xPosition: '145'
                        yPosition: '195'
            status: sent
          response:
            envelopeId: 63e05468-6432-41d2-b01c-8b48f7dbeb80
            status: sent
            statusDateTime: '2016-05-29T17:11:56.1800000Z'
            uri: /envelopes/63e05468-6432-41d2-b01c-8b48f7dbeb80
          style: custom
          title: 'Multiple Documents and Tabs, Signer and CC Recipients'
        - description: |-
            For some documents, one or more signatures must be witnessed by an appointed [notary public](https://en.wikipedia.org/wiki/Notary_public).

            DocuSign supports eNotary services for many jurisdictions. This example demonstrates how to send an envelope to be signed by Susan Signer with her signature witnessed by Nancy Notary. You must know the name and email address of the signer and the notary public for a signature to be notarized.

            Note that the full legal name of the signer must be used. It will be checked against the signer's government-issued proof of identity by the notary public.

            Please see the [DocuSign eNotary resource page](https://support.docusign.com/en/guides/ndse-user-guide-enotary-resources) for further information. It lists the jurisdictions participating in the DocuSign eNotary program and additional reference information.

            Note that eNotary services are not included with all account types and are **not** included by default with demo/developer sandbox accounts. To enable eNotary service for your sandbox account, contact your DocuSign technical support person or DocuSign customer service.

            The example includes event notification via the Connect service.
          direction: both
          format: json
          request:
            documents:
              - documentBase64: '[Contents elided]'
                documentId: '1'
                fileExtension: docx
                name: important document.docx
            emailSubject: Important agreement for notarized signature
            eventNotification:
              envelopeEvents:
                - envelopeEventStatusCode: Completed
                - envelopeEventStatusCode: Declined
                - envelopeEventStatusCode: Voided
              includeDocumentFields: 'false'
              includeDocuments: 'false'
              includeSenderAccountAsCustomField: 'true'
              loggingEnabled: 'true'
              requireAcknowledgment: 'true'
              signMessageWithX509Cert: 'true'
              url: 'https://listener.example.com/docusign_notifications'
            recipients:
              inPersonSigners:
                - email: susan_signer@gmail.com
                  inPersonSigningType: notary
                  name: Susan Anne Signer
                  notaryHost:
                    email: nancy@notary-svc.com
                    name: Nancy Notary
                    recipientId: 2
                  recipientId: 1
                  routingOrder: 1
                  tabs:
                    signHereTabs:
                      - documentId: '1'
                        name: Please sign here
                        optional: 'false'
                        pageNumber: '1'
                        recipientId: '1'
                        tabLabel: signer1sig
                        xPosition: '100'
                        yPosition: '100'
            status: sent
          response:
            envelopeId: aaaaaaaa-41c4-4d21-b6e4-52a86fb94be8
            status: sent
            statusDateTime: '2017-06-15T11:02:39.3996430Z'
            uri: /envelopes/aaaaaaaa-41c4-4d21-b6e4-52a86fb94be8
          style: custom
          title: Create a Notarized Signing Recipient
        - description: |
            DocuSign enables document signers use
            [electronic](https://www.docusign.com/products/electronic-signature) or
            [digital](https://www.docusign.com/how-it-works/electronic-signature/digital-signature) signatures.

            DocuSign has tightly integrated standard digital signatures into the DocuSign Signature platform. This enables a single envelope to include:

            * electronic signatures,
            * AES digital signatures using certificates from DocuSign or from your organization,
            * QES digital signatures from government certified Trust Service Providers (TSPs).

            This example enables the signer to create an eIDAS compliant AES signature with embedded signing. InPerson signers can also use SBS digital signatures.

            [More information on creating SBS digital signature requests.](../../../../guide/appendix/standards_based_signatures.html)

            The `clientId` in the example tells DocuSign that the Signing Ceremony will be embedded.
            The example also includes an `eventNotification` object for receiving envelope status updates from DocuSign.

            ## Embedding the signing ceremony
            1. Send the `Envelopes: create` call as shown below in the Request/Response section.
            2. The response will include the `envelopeId`
            3. Use the [EnvelopeViews: createRecipient](../../EnvelopeViews/createRecipient) request to obtain the redirectURL as follows:

            `POST /v2/accounts/{accountId}/envelopes/{envelopeId}/views/recipient`

            ````
            {
                "clientUserId": "1000",
                "email": "Sam@spade.com",
                "userName": "Sam Spade",
                "returnUrl": "https://your_app.example.com",
                "AuthenticationMethod": "Password"
            }
            ````
            The response will include the `url`. Redirect the user's browser to the url to start the signing ceremony.

            ###### Note: You must **immediately** redirect the user to the url you receive from DocuSign. The url is only valid for 5 minutes. Don't request a recipient view url until you are ready to redirect the user's browser.
          direction: both
          format: json
          request:
            documents:
              - documentBase64: '[Contents elided]'
                documentId: '1'
                fileExtension: html
                name: ' Agreement'
            emailSubject: NewCo agreement for signature
            eventNotification:
              envelopeEvents:
                - envelopeEventStatusCode: Completed
                - envelopeEventStatusCode: Declined
                - envelopeEventStatusCode: Voided
              includeDocumentFields: 'false'
              includeDocuments: 'false'
              includeSenderAccountAsCustomField: 'true'
              loggingEnabled: 'true'
              requireAcknowledgment: 'true'
              signMessageWithX509Cert: 'true'
              url: 'https://your_app.example.com/listener'
            recipients:
              signers:
                - clientUserId: '1000'
                  email: Sam@spade.com
                  name: Sam Spade
                  recipientId: '1'
                  recipientSignatureProviders:
                    - signatureProviderName: UniversalSignaturePen_OpenTrust_Hash_TSP
                      signatureProviderOptions:
                        SMS: '+33134567899'
                  routingOrder: '1'
                  tabs:
                    signHereTabs:
                      - anchorString: signer1sig
                        documentId: '1'
                        name: Please sign here
                        optional: 'false'
                        recipientId: '1'
                        tabLabel: signer1sig
            status: sent
          response:
            envelopeId: caaaaaaa-144e-45ce-8e8e-c171528e99c8
            status: sent
            statusDateTime: '2017-06-22T06:44:49.1642220Z'
            uri: /envelopes/caaaaaaa-144e-45ce-8e8e-c171528e99c8
          style: custom
          title: 'Request an SBS digital signature, with an embedded signing ceremony'
      x-ds-in-sdk: true
      x-ds-method: create
      x-ds-methodname: createEnvelope
      x-ds-service: Envelopes
  '/v2/accounts/{accountId}/envelopes/status':
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: Retrieves the envelope status for the specified envelopes.
      operationId: Envelopes_PutStatus
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: |
            Reserved for DocuSign.
          in: query
          name: email
          required: false
          type: string
        - description: |-
            The date/time setting that specifies when the request begins checking for status changes for envelopes in the account.

            This is required unless parameters `envelopeIds` and/or `transactionIds` are set.
          in: query
          name: from_date
          required: false
          type: string
        - description: |
            Reserved for DocuSign.
          in: query
          name: start_position
          required: false
          type: string
        - description: |
            Optional date/time setting
            that specifies the last date/time 
            or envelope status changes in the result set. 

            Default: "now", the time that you call the method. 
          in: query
          name: to_date
          required: false
          type: string
        - description: ''
          in: body
          name: envelopeIdsRequest
          required: false
          schema:
            $ref: '#/definitions/envelopeIdsRequest'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/envelopesInformation'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets the envelope status for the specified envelopes.
      tags:
        - Envelopes
      x-ds-in-sdk: true
      x-ds-method: listStatus
      x-ds-methodname: listStatus
      x-ds-service: Envelopes
  '/v2/accounts/{accountId}/envelopes/{envelopeId}':
    get:
      consumes: []
      deprecated: false
      description: Retrieves the overall status for the specified envelope.
      operationId: Envelopes_GetEnvelope
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: 'When true, envelope information can be added or modified.'
          in: query
          name: advanced_update
          required: false
          type: string
        - description: |
            Reserved for DocuSign.
          in: query
          name: include
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/Envelopes'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets the status of a envelope.
      tags:
        - Envelopes
      x-ds-examples:
        - description: |
            This example shows a how to get information about
            an envelope with a given envelope id.

            The request for this endpoint has no payload.

            ### Request
            ```
            GET /restapi/v2/accounts/1703061/envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6
            ```
          direction: response
          format: json
          response:
            allowMarkup: 'false'
            autoNavigation: 'true'
            brandId: 56502fe1-3245-4cf5-8d74-97cb5c43176a
            certificateUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/documents/certificate
            createdDateTime: '2016-10-05T01:04:58.1830000Z'
            customFieldsUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/custom_fields
            documentsCombinedUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/documents/combined
            documentsUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/documents
            emailSubject: Please sign the NDA
            enableWetSign: 'true'
            envelopeId: 4b728be4-4417-45c6-b7e8-d63e23f822b6
            envelopeIdStamping: 'true'
            envelopeUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6
            initialSentDateTime: '2016-10-05T01:04:58.7770000Z'
            is21CFRPart11: 'false'
            isSignatureProviderEnvelope: 'false'
            lastModifiedDateTime: '2016-10-05T01:04:58.1830000Z'
            notificationUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/notification
            purgeState: unpurged
            recipientsUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/recipients
            sentDateTime: '2016-10-05T01:04:58.7770000Z'
            status: sent
            statusChangedDateTime: '2016-10-05T01:04:58.7770000Z'
            templatesUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/templates
          style: custom
          title: Get Status About a Specific Envelope
        - description: |
            This example shows a how to get information about
            envelopes created since January 1, 2016.

            The request for this endpoint has no payload.

            ### Request
            ```
            GET /restapi/v2/accounts/1703061/envelopes?from_date=2016-01-01
            ```
          direction: response
          format: json
          response:
            endPosition: '1'
            envelopes:
              - certificateUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0/documents/certificate
                customFieldsUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0/custom_fields
                documentsCombinedUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0/documents/combined
                documentsUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0/documents
                envelopeId: 379497bb-cc85-4654-bab9-a8e397f538d0
                envelopeUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0
                notificationUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0/notification
                recipientsUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0/recipients
                status: completed
                statusChangedDateTime: '2016-10-04T15:26:28.2830000Z'
                templatesUri: /envelopes/379497bb-cc85-4654-bab9-a8e397f538d0/templates
              - certificateUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/documents/certificate
                customFieldsUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/custom_fields
                documentsCombinedUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/documents/combined
                documentsUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/documents
                envelopeId: 4b728be4-4417-45c6-b7e8-d63e23f822b6
                envelopeUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6
                notificationUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/notification
                recipientsUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/recipients
                status: sent
                statusChangedDateTime: '2016-10-05T01:04:58.7770000Z'
                templatesUri: /envelopes/4b728be4-4417-45c6-b7e8-d63e23f822b6/templates
            nextUri: ''
            previousUri: ''
            resultSetSize: '2'
            startPosition: '0'
            totalSetSize: '2'
          style: custom
          title: Get Status About Envelopes Since a Specified Date
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getEnvelope
      x-ds-service: Envelopes
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: |-
        The Put Envelopes endpoint provides the following functionality:

        * Sends the specified single draft envelope.
        Add {"status":"sent"} to the request body to send the envelope.

        * Voids the specified in-process envelope.
        Add {"status":"voided", "voidedReason":"The reason for voiding the envelope"} to the request body to void the envelope.

        * Replaces the current email subject and message for a draft envelope.
        Add {"emailSubject":"subject",  "emailBlurb":"message"}  to the request body to modify the subject and message.

        * Place the envelope documents and envelope metadata in a purge queue so that this information is removed from the DocuSign system.
        Add {"purgeState":"purge type"} to the request body.

        *Additional information on purging documents*

        The purge request can only be used for completed envelopes that are not marked as the authoritative copy. The requesting user must have permission to purge documents and must be the sender (the requesting user can act as the sender using Send On Behalf Of).

        ###### Note: If you have set the Document Retention policy on your account, envelope documents are automatically placed in the purge queue and the warning emails are sent at the end of the retention period. 
        ###### Note: You can set the Document Retention policy in the Classic DocuSign Experience by specifying the number of days to retain documents. 
        ###### Note: Setting a Document Retention policy is the same as setting a schedule for purging documents.

        When the purge request is initiated the envelope documents, or documents and envelope metadata, are placed in a purge queue for deletion in 14 days. A warning email notification is sent to the sender and recipients associated with the envelope, notifying them that the envelope documents will be deleted in 14 days and providing a link to the documents. A second email is sent 7 days later with the same message. At the end of the 14-day period, the envelope documents are deleted from the system.

        If `purgeState="documents_queued"` is used in the request, then only the documents are deleted and any corresponding attachments and tabs remain in the DocuSign system. If `purgeState= "documents_and_metadata_queued"` is used in the request, then the documents, attachments, and tabs are deleted.
      operationId: Envelopes_PutEnvelope
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: 'When set to **true**, allows the caller to update recipients, tabs, custom fields, notification, email settings and other envelope attributes.'
          in: query
          name: advanced_update
          required: false
          type: string
        - description: 'When set to **true**, sends the specified envelope again.'
          in: query
          name: resend_envelope
          required: false
          type: string
        - description: ''
          in: body
          name: Envelopes
          required: false
          schema:
            $ref: '#/definitions/Envelopes'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/envelopeUpdateSummary'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Send Draft Envelope/Void Envelope/Move/Purge Envelope/Modify draft
      tags:
        - Envelopes
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: update
      x-ds-service: Envelopes
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/attachments':
    delete:
      consumes: []
      deprecated: false
      description: ''
      operationId: Attachments_DeleteAttachments
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: ''
          in: body
          name: envelopeAttachmentsRequest
          required: false
          schema:
            $ref: '#/definitions/envelopeAttachmentsRequest'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/envelopeAttachmentsResult'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Delete one or more attachments from a DRAFT envelope.
      tags:
        - EnvelopeAttachments
      x-ds-api-status: beta
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteAttachments
      x-ds-service: Envelopes
    get:
      consumes: []
      deprecated: false
      description: ''
      operationId: Attachments_GetAttachments
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/envelopeAttachmentsResult'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Returns a list of attachments associated with the specified envelope
      tags:
        - EnvelopeAttachments
      x-ds-api-status: beta
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: getAttachments
      x-ds-service: Envelopes
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: ''
      operationId: Attachments_PutAttachments
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: ''
          in: body
          name: envelopeAttachmentsRequest
          required: false
          schema:
            $ref: '#/definitions/envelopeAttachmentsRequest'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/envelopeAttachmentsResult'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Add one or more attachments to a DRAFT or IN-PROCESS envelope.
      tags:
        - EnvelopeAttachments
      x-ds-api-status: beta
      x-ds-in-sdk: true
      x-ds-method: create
      x-ds-methodname: putAttachments
      x-ds-service: Envelopes
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/attachments/{attachmentId}':
    get:
      consumes: []
      deprecated: false
      description: ''
      operationId: Attachments_GetAttachment
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: path
          name: attachmentId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Retrieves an attachment from the envelope.
      tags:
        - EnvelopeAttachments
      x-ds-api-status: beta
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getAttachment
      x-ds-service: Envelopes
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: ''
      operationId: Attachments_PutAttachment
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: path
          name: attachmentId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: ''
          in: body
          name: attachment
          required: false
          schema:
            $ref: '#/definitions/attachment'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/envelopeAttachmentsResult'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Add an attachment to a DRAFT or IN-PROCESS envelope.
      tags:
        - EnvelopeAttachments
      x-ds-api-status: beta
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: putAttachment
      x-ds-service: Envelopes
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/audit_events':
    get:
      consumes: []
      deprecated: false
      description: Gets the envelope audit events for the specified envelope.
      operationId: AuditEvents_GetAuditEvents
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/envelopeAuditEventResponse'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets the envelope audit events for an envelope.
      tags:
        - Envelopes
      x-ds-in-sdk: true
      x-ds-method: listAuditEvents
      x-ds-methodname: listAuditEvents
      x-ds-service: Envelopes
    parameters: []
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/custom_fields':
    delete:
      consumes: []
      deprecated: false
      description: Deletes envelope custom fields for draft and in-process envelopes.
      operationId: CustomFields_DeleteCustomFields
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: ''
          in: body
          name: EnvelopeCustomFields
          required: false
          schema:
            $ref: '#/definitions/EnvelopeCustomFields'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeCustomFields'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes envelope custom fields for draft and in-process envelopes.
      tags:
        - EnvelopeCustomFields
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteCustomFields
      x-ds-service: Envelopes
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves the custom field information for the specified envelope. You can use these fields in the envelopes for your account to record information about the envelope, help search for envelopes, and track information. The envelope custom fields are shown in the Envelope Settings section when a user is creating an envelope in the DocuSign member console. The envelope custom fields are not seen by the envelope recipients.

        There are two types of envelope custom fields, text, and list. A text custom field lets the sender enter the value for the field. With a list custom field, the sender selects the value of the field from a pre-made list.
      operationId: CustomFields_GetCustomFields
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/customFieldsEnvelope'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets the custom field information for the specified envelope.
      tags:
        - EnvelopeCustomFields
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: listCustomFields
      x-ds-service: Envelopes
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: |-
        Updates the envelope custom fields for draft and in-process envelopes.

        Each custom field used in an envelope must have a unique name.
      operationId: CustomFields_PostCustomFields
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: ''
          in: body
          name: EnvelopeCustomFields
          required: false
          schema:
            $ref: '#/definitions/EnvelopeCustomFields'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeCustomFields'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates envelope custom fields for an envelope.
      tags:
        - EnvelopeCustomFields
      x-ds-in-sdk: true
      x-ds-method: create
      x-ds-methodname: createCustomFields
      x-ds-service: Envelopes
    put:
      consumes: []
      deprecated: false
      description: |
        Updates the envelope custom fields in draft and in-process envelopes.

        Each custom field used in an envelope must have a unique name.
      operationId: CustomFields_PutCustomFields
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: ''
          in: body
          name: EnvelopeCustomFields
          required: false
          schema:
            $ref: '#/definitions/EnvelopeCustomFields'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeCustomFields'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates envelope custom fields in an envelope.
      tags:
        - EnvelopeCustomFields
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateCustomFields
      x-ds-service: Envelopes
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/documents':
    delete:
      consumes: []
      deprecated: false
      description: Deletes one or more documents from an existing draft envelope.
      operationId: Documents_DeleteDocuments
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: ''
          in: body
          name: envelopeDefinition
          required: false
          schema:
            $ref: '#/definitions/envelopeDefinition'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeDocuments'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes documents from a draft envelope.
      tags:
        - EnvelopeDocuments
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteDocuments
      x-ds-service: Envelopes
    get:
      consumes: []
      deprecated: false
      description: Retrieves a list of documents associated with the specified envelope.
      operationId: Documents_GetDocuments
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: |
            Reserved for DocuSign.
          in: query
          name: include_metadata
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeDocuments'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets a list of envelope documents.
      tags:
        - EnvelopeDocuments
      x-ds-examples:
        - description: |
            This example shows how
            to get a list
            of all the documents in an envelope.

            The request for this endpoint has no payload.

            ### Request

            ```
            GET /restapi/v2/accounts/1703061/envelopes/44efc9e6-915e-4b1d-9b54-801410d6922d/documents
            ```
          direction: response
          format: json
          response:
            envelopeDocuments:
              - availableDocumentTypes:
                  - isDefault: 'true'
                    type: electronic
                display: inline
                documentId: '1'
                includeInDownload: 'true'
                name: NDA.pdf
                order: '1'
                pages: '3'
                signerMustAcknowledge: no_interaction
                type: content
                uri: /envelopes/44efc9e6-915e-4b1d-9b54-801410d6922d/documents/1
              - availableDocumentTypes:
                  - isDefault: 'true'
                    type: electronic
                display: inline
                documentId: '2'
                includeInDownload: 'true'
                name: House.pdf
                order: '2'
                pages: '1'
                signerMustAcknowledge: no_interaction
                type: content
                uri: /envelopes/44efc9e6-915e-4b1d-9b54-801410d6922d/documents/2
              - availableDocumentTypes:
                  - isDefault: 'true'
                    type: electronic
                display: inline
                documentId: '3'
                includeInDownload: 'true'
                name: contractor_agreement.docx
                order: '3'
                pages: '2'
                signerMustAcknowledge: no_interaction
                type: content
                uri: /envelopes/44efc9e6-915e-4b1d-9b54-801410d6922d/documents/3
              - availableDocumentTypes:
                  - isDefault: 'true'
                    type: electronic
                display: inline
                documentId: certificate
                includeInDownload: 'true'
                name: Summary
                order: '999'
                pages: '4'
                signerMustAcknowledge: no_interaction
                type: summary
                uri: /envelopes/44efc9e6-915e-4b1d-9b54-801410d6922d/documents/certificate
            envelopeId: 44efc9e6-915e-4b1d-9b54-801410d6922d
          style: custom
          title: List All Documents in an Envelope
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: listDocuments
      x-ds-service: Envelopes
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: Adds one or more documents to an existing envelope document.
      operationId: Documents_PutDocuments
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: |
            When **true**, document fields
            can be added or modified
            while adding or modifying envelope documents.
          in: query
          name: apply_document_fields
          required: false
          type: string
        - description: ''
          in: body
          name: envelopeDefinition
          required: false
          schema:
            $ref: '#/definitions/envelopeDefinition'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeDocuments'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Adds one or more documents to an existing envelope document.
      tags:
        - EnvelopeDocuments
      x-ds-in-sdk: true
      x-ds-method: updateList
      x-ds-methodname: updateDocuments
      x-ds-service: Envelopes
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}':
    get:
      consumes: []
      deprecated: false
      description: |
        Retrieves the specified document from the envelope. If the account has the Highlight Data Changes feature enabled, there is an option to request that any changes in the envelope be highlighted.

        The `{documentID}` parameter takes two special values:

        | Value      | Description |
        | :---       | :--- |
        | `combined` | Retrieve a PDF that contains the combined content of all documents and the certificate. |
        | `archive`  | Retrieve a ZIP archive that contains all of the PDF documents, the certificate, and any .WAV files used for voice authentication. |
      operationId: Documents_GetDocument
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the document being accessed.
          in: path
          name: documentId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: 'When set to **false**, the envelope signing certificate is removed from the download.'
          in: query
          name: certificate
          required: false
          type: string
        - description: ''
          in: query
          name: encoding
          required: false
          type: string
        - description: 'When set to **true**, the PDF bytes returned in the response are encrypted for all the key managers configured on your DocuSign account. The documents can be decrypted with the KeyManager Decrypt Document API.'
          in: query
          name: encrypt
          required: false
          type: string
        - description: 'Specifies the language for the Certificate of Completion in the response. The supported languages, with the language value shown in parenthesis, are: Chinese Simplified (zh_CN), , Chinese Traditional (zh_TW), Dutch (nl), English US (en), French (fr), German (de), Italian (it), Japanese (ja), Korean (ko), Portuguese (pt), Portuguese (Brazil) (pt_BR), Russian (ru), Spanish (es). '
          in: query
          name: language
          required: false
          type: string
        - description: ''
          in: query
          name: recipient_id
          required: false
          type: string
        - description: 'When set to **true**, any changed fields for the returned PDF are highlighted in yellow and optional signatures or initials outlined in red. '
          in: query
          name: show_changes
          required: false
          type: string
        - description: 'When set to **true**, the account has the watermark feature enabled, and the envelope is not complete, the watermark for the account is added to the PDF documents. This option can remove the watermark. '
          in: query
          name: watermark
          required: false
          type: string
      produces:
        - application/pdf
      responses:
        '200':
          description: Successful response.
          schema:
            type: file
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets a document from an envelope.
      tags:
        - EnvelopeDocuments
      x-ds-examples:
        - description: |+
            This example shows how to retrieve
            a single document from an envelope
            as a PDF file.


            The request for this endpoint has no payload.

            ### Request

            ```
            GET /restapi/v2/accounts/1703061/envelopes/44efc9e6-915e-4b1d-9b54-801410d6922d/documents/3
            ```

          direction: response
          format: json
          response: PDF File
          style: custom
          title: Get a Single Document as a PDF File
        - description: |+
            If you use `combined` instead of a document id
            the response is a PDF file that contains
            all of the documents in the specified envelope.

            The request for this endpoint has no payload.

            ### Request

            ```
            GET /restapi/v2/accounts/1703061/envelopes/44efc9e6-915e-4b1d-9b54-801410d6922d/documents/combined
            ```

          direction: response
          format: json
          response: PDF File
          style: custom
          title: Get All Documents as a Single PDF File
        - description: |
            This example shows how
            to get a list
            of all the documents in an envelope.

            The request for this endpoint has no payload.

            ### Request

            ```
            GET /restapi/v2/accounts/1703061/envelopes/44efc9e6-915e-4b1d-9b54-801410d6922d/documents
            ```
          direction: response
          format: json
          response:
            envelopeDocuments:
              - availableDocumentTypes:
                  - isDefault: 'true'
                    type: electronic
                display: inline
                documentId: '1'
                includeInDownload: 'true'
                name: NDA.pdf
                order: '1'
                pages: '3'
                signerMustAcknowledge: no_interaction
                type: content
                uri: /envelopes/44efc9e6-915e-4b1d-9b54-801410d6922d/documents/1
              - availableDocumentTypes:
                  - isDefault: 'true'
                    type: electronic
                display: inline
                documentId: '2'
                includeInDownload: 'true'
                name: House.pdf
                order: '2'
                pages: '1'
                signerMustAcknowledge: no_interaction
                type: content
                uri: /envelopes/44efc9e6-915e-4b1d-9b54-801410d6922d/documents/2
              - availableDocumentTypes:
                  - isDefault: 'true'
                    type: electronic
                display: inline
                documentId: '3'
                includeInDownload: 'true'
                name: contractor_agreement.docx
                order: '3'
                pages: '2'
                signerMustAcknowledge: no_interaction
                type: content
                uri: /envelopes/44efc9e6-915e-4b1d-9b54-801410d6922d/documents/3
              - availableDocumentTypes:
                  - isDefault: 'true'
                    type: electronic
                display: inline
                documentId: certificate
                includeInDownload: 'true'
                name: Summary
                order: '999'
                pages: '4'
                signerMustAcknowledge: no_interaction
                type: summary
                uri: /envelopes/44efc9e6-915e-4b1d-9b54-801410d6922d/documents/certificate
            envelopeId: 44efc9e6-915e-4b1d-9b54-801410d6922d
          style: custom
          title: List All Documents in an Envelope
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getDocument
      x-ds-service: Envelopes
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: Adds a document to an existing draft envelope.
      operationId: Documents_PutDocument
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the document being accessed.
          in: path
          name: documentId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: |
            When **true**, document fields
            can be added or modified
            while adding or modifying envelope documents.
          in: query
          name: apply_document_fields
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Adds a document to an existing draft envelope.
      tags:
        - EnvelopeDocuments
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateDocument
      x-ds-service: Envelopes
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/fields':
    delete:
      consumes: []
      deprecated: false
      description: Deletes custom document fields from an existing envelope document.
      operationId: DocumentFields_DeleteDocumentFields
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the document being accessed.
          in: path
          name: documentId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: ''
          in: body
          name: EnvelopeDocumentFields
          required: false
          schema:
            $ref: '#/definitions/EnvelopeDocumentFields'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeDocumentFields'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes custom document fields from an existing envelope document.
      tags:
        - EnvelopeDocumentFields
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteDocumentFields
      x-ds-service: Envelopes
    get:
      consumes: []
      deprecated: false
      description: Retrieves the custom document field information from an existing envelope document.
      operationId: DocumentFields_GetDocumentFields
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the document being accessed.
          in: path
          name: documentId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeDocumentFields'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets the custom document fields from an  existing envelope document.
      tags:
        - EnvelopeDocumentFields
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: listDocumentFields
      x-ds-service: Envelopes
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: Creates custom document fields in an existing envelope document.
      operationId: DocumentFields_PostDocumentFields
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the document being accessed.
          in: path
          name: documentId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: ''
          in: body
          name: EnvelopeDocumentFields
          required: false
          schema:
            $ref: '#/definitions/EnvelopeDocumentFields'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeDocumentFields'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Creates custom document fields in an existing envelope document.
      tags:
        - EnvelopeDocumentFields
      x-ds-in-sdk: true
      x-ds-method: create
      x-ds-methodname: createDocumentFields
      x-ds-service: Envelopes
    put:
      consumes: []
      deprecated: false
      description: Updates existing custom document fields in an existing envelope document.
      operationId: DocumentFields_PutDocumentFields
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the document being accessed.
          in: path
          name: documentId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: ''
          in: body
          name: EnvelopeDocumentFields
          required: false
          schema:
            $ref: '#/definitions/EnvelopeDocumentFields'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeDocumentFields'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates existing custom document fields in an existing envelope document.
      tags:
        - EnvelopeDocumentFields
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateDocumentFields
      x-ds-service: Envelopes
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/pages':
    get:
      consumes: []
      deprecated: false
      description: ''
      operationId: Pages_GetPageImages
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the document being accessed.
          in: path
          name: documentId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: The maximum number of results to be returned by this request.
          in: query
          name: count
          required: false
          type: string
        - description: Number of dots per inch for the resulting image. The default if not used is 94. The range is 1-310.
          in: query
          name: dpi
          required: false
          type: string
        - description: Sets the maximum height (in pixels) of the returned image.
          in: query
          name: max_height
          required: false
          type: string
        - description: Sets the maximum width (in pixels) of the returned image.
          in: query
          name: max_width
          required: false
          type: string
        - description: ''
          in: query
          name: nocache
          required: false
          type: string
        - description: ''
          in: query
          name: show_changes
          required: false
          type: string
        - description: The position within the total result set from which to start returning values. The value **thumbnail** may be used to return the page image.
          in: query
          name: start_position
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/pageImages'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Returns document page image(s) based on input.
      tags:
        - Envelopes
      x-ds-in-sdk: true
      x-ds-method: getPageImages
      x-ds-methodname: getPages
      x-ds-service: Envelopes
    parameters: []
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/pages/{pageNumber}':
    delete:
      consumes: []
      deprecated: false
      description: Deletes a page from a document in an envelope based on the page number.
      operationId: Pages_DeletePage
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the document being accessed.
          in: path
          name: documentId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: The page number being accessed.
          in: path
          name: pageNumber
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes a page from a document in an envelope.
      tags:
        - Envelopes
      x-ds-in-sdk: true
      x-ds-method: deleteDocumentPage
      x-ds-methodname: deleteDocumentPage
      x-ds-service: Envelopes
    parameters: []
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/pages/{pageNumber}/page_image':
    get:
      consumes: []
      deprecated: false
      description: Retrieves a page image for display from the specified envelope.
      operationId: Pages_GetPageImage
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the document being accessed.
          in: path
          name: documentId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: The page number being accessed.
          in: path
          name: pageNumber
          required: true
          type: string
        - description: Sets the dpi for the image.
          in: query
          name: dpi
          required: false
          type: string
        - description: Sets the maximum height for the page image in pixels. The dpi is recalculated based on this setting.
          in: query
          name: max_height
          required: false
          type: string
        - description: Sets the maximum width for the page image in pixels. The dpi is recalculated based on this setting.
          in: query
          name: max_width
          required: false
          type: string
        - description: ''
          in: query
          name: show_changes
          required: false
          type: string
      produces:
        - image/png
      responses:
        '200':
          description: Successful response.
          schema:
            type: file
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets a page image from an envelope for display.
      tags:
        - Envelopes
      x-ds-in-sdk: true
      x-ds-method: getPageImage
      x-ds-methodname: getDocumentPageImage
      x-ds-service: Envelopes
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: Rotates page image from an envelope for display. The page image can be rotated to the left or right.
      operationId: Pages_PutPageImage
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the document being accessed.
          in: path
          name: documentId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: The page number being accessed.
          in: path
          name: pageNumber
          required: true
          type: string
        - description: ''
          in: body
          name: pageRequest
          required: false
          schema:
            $ref: '#/definitions/pageRequest'
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Rotates page image from an envelope for display.
      tags:
        - Envelopes
      x-ds-in-sdk: true
      x-ds-method: rotateDocumentPage
      x-ds-methodname: rotateDocumentPage
      x-ds-service: Envelopes
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/pages/{pageNumber}/tabs':
    get:
      consumes: []
      deprecated: false
      description: ''
      operationId: Tabs_GetPageTabs
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the document being accessed.
          in: path
          name: documentId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: The page number being accessed.
          in: path
          name: pageNumber
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeDocumentTabs'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Returns tabs on the specified page.
      tags:
        - EnvelopeDocumentTabs
      x-ds-in-sdk: true
      x-ds-method: getByPage
      x-ds-methodname: getPageTabs
      x-ds-service: Envelopes
    parameters: []
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/tabs':
    get:
      consumes: []
      deprecated: false
      description: ''
      operationId: Tabs_GetDocumentTabs
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the document being accessed.
          in: path
          name: documentId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: ''
          in: query
          name: page_numbers
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeDocumentTabs'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Returns tabs on the document.
      tags:
        - EnvelopeDocumentTabs
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getDocumentTabs
      x-ds-service: Envelopes
    parameters: []
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/templates':
    get:
      consumes: []
      deprecated: false
      description: Retrieves the templates associated with a document in the specified envelope.
      operationId: Templates_GetDocumentTemplates
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the document being accessed.
          in: path
          name: documentId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: |
            A comma-separated list
            that limits the results.
            Valid values:

            * applied
            * matched
          in: query
          name: include
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeTemplates'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets the templates associated with a document in an existing envelope.
      tags:
        - EnvelopeTemplates
      x-ds-in-sdk: true
      x-ds-method: listByDocument
      x-ds-methodname: listTemplatesForDocument
      x-ds-service: Envelopes
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: Adds templates to a document in the specified envelope.
      operationId: Templates_PostDocumentTemplates
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the document being accessed.
          in: path
          name: documentId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: ''
          in: body
          name: documentTemplateList
          required: false
          schema:
            $ref: '#/definitions/documentTemplateList'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/documentTemplateList'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Adds templates to a document in an  envelope.
      tags:
        - EnvelopeTemplates
      x-ds-in-sdk: true
      x-ds-method: applyToDocument
      x-ds-methodname: applyTemplateToDocument
      x-ds-service: Envelopes
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/documents/{documentId}/templates/{templateId}':
    delete:
      consumes: []
      deprecated: false
      description: Deletes the specified template from a document in an existing envelope.
      operationId: Templates_DeleteDocumentTemplates
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the document being accessed.
          in: path
          name: documentId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes a template from a document in an existing envelope.
      tags:
        - EnvelopeTemplates
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteTemplatesFromDocument
      x-ds-service: Envelopes
    parameters: []
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/email_settings':
    delete:
      consumes: []
      deprecated: false
      description: 'Deletes all existing email override settings for the envelope. If you want to delete an individual email override setting, use the PUT and set the value to an empty string. Note that deleting email settings will only affect email communications that occur after the deletion and the normal account email settings are used for future email communications.'
      operationId: EmailSettings_DeleteEmailSettings
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeEmailSettings'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes the email setting overrides for an envelope.
      tags:
        - EnvelopeEmailSettings
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteEmailSettings
      x-ds-service: Envelopes
    get:
      consumes: []
      deprecated: false
      description: Retrieves the email override settings for the specified envelope.
      operationId: EmailSettings_GetEmailSettings
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeEmailSettings'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets the email setting overrides for an envelope.
      tags:
        - EnvelopeEmailSettings
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getEmailSettings
      x-ds-service: Envelopes
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: |-
        Adds email override settings, changing the email address to reply to an email address, name, or the BCC for email archive information, for the envelope. Note that adding email settings will only affect email communications that occur after the addition was made.

        ### Important: The BCC Email address feature is designed to provide a copy of all email communications for external archiving purposes. DocuSign recommends that envelopes sent using the BCC for Email Archive feature, including the BCC Email Override option, include additional signer authentication options. To send a copy of the envelope to a recipient who does not need to sign, use a Carbon Copies or Certified Deliveries Recipient Type.
      operationId: EmailSettings_PostEmailSettings
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: ''
          in: body
          name: EnvelopeEmailSettings
          required: false
          schema:
            $ref: '#/definitions/EnvelopeEmailSettings'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeEmailSettings'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Adds email setting overrides to an envelope.
      tags:
        - EnvelopeEmailSettings
      x-ds-in-sdk: true
      x-ds-method: create
      x-ds-methodname: createEmailSettings
      x-ds-service: Envelopes
    put:
      consumes: []
      deprecated: false
      description: |-
        Updates the existing email override settings for the specified envelope. Note that modifying email settings will only affect email communications that occur after the modification was made.

        This can also be used to delete an individual email override setting by using an empty string for the value to be deleted.
      operationId: EmailSettings_PutEmailSettings
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: ''
          in: body
          name: EnvelopeEmailSettings
          required: false
          schema:
            $ref: '#/definitions/EnvelopeEmailSettings'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeEmailSettings'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates the email setting overrides for an envelope.
      tags:
        - EnvelopeEmailSettings
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateEmailSettings
      x-ds-service: Envelopes
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/form_data':
    get:
      consumes: []
      deprecated: false
      description: ''
      operationId: FormData_GetFormData
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeFormData'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Returns envelope form data for an existing envelope.
      tags:
        - EnvelopeFormData
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getFormData
      x-ds-service: Envelopes
    parameters: []
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/lock':
    delete:
      consumes: []
      deprecated: false
      description: Deletes the lock from the specified envelope. The `X-DocuSign-Edit` header must be included in the request.
      operationId: Lock_DeleteEnvelopeLock
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeLocks'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes an envelope lock.
      tags:
        - EnvelopeLocks
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteLock
      x-ds-service: Envelopes
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves general information about the envelope lock.

        If the call is made by the locked by user and the request has the same integrator key as original, then the `X-DocuSign-Edit` header and additional lock information is included in the response. This allows users to recover a lost editing session token and the `X-DocuSign-Edit` header.
      operationId: Lock_GetEnvelopeLock
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeLocks'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets envelope lock information.
      tags:
        - EnvelopeLocks
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getLock
      x-ds-service: Envelopes
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: |-
        Locks the specified envelope, and sets the time until the lock expires, to prevent other users or recipients from accessing and changing the envelope.

        ###### Note: Users must have envelope locking capability enabled to use this function (userSetting `canLockEnvelopes` must be  set to true for the user).
      operationId: Lock_PostEnvelopeLock
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: ''
          in: body
          name: lockRequest
          required: false
          schema:
            $ref: '#/definitions/lockRequest'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeLocks'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Lock an envelope.
      tags:
        - EnvelopeLocks
      x-ds-in-sdk: true
      x-ds-method: create
      x-ds-methodname: createLock
      x-ds-service: Envelopes
    put:
      consumes: []
      deprecated: false
      description: Updates the lock duration time or update the `lockedByApp` property information for the specified envelope. The user and integrator key must match the user specified by the `lockByUser` property and integrator key information and the `X-DocuSign-Edit` header must be included or an error will be generated.
      operationId: Lock_PutEnvelopeLock
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: ''
          in: body
          name: lockRequest
          required: false
          schema:
            $ref: '#/definitions/lockRequest'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeLocks'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates an envelope lock.
      tags:
        - EnvelopeLocks
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateLock
      x-ds-service: Envelopes
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/notification':
    get:
      consumes: []
      deprecated: false
      description: 'Retrieves the envelope notification, reminders and expirations, information for an existing envelope.'
      operationId: Notification_GetEnvelopesEnvelopeIdNotification
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/notification'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets envelope notification information.
      tags:
        - Envelopes
      x-ds-in-sdk: true
      x-ds-method: getNotificationSettings
      x-ds-methodname: getNotificationSettings
      x-ds-service: Envelopes
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: ''
      operationId: Notification_PutEnvelopesEnvelopeIdNotification
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: ''
          in: body
          name: envelopeNotificationRequest
          required: false
          schema:
            $ref: '#/definitions/envelopeNotificationRequest'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/notification'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Sets envelope notification (Reminders/Expirations) structure for an existing envelope.
      tags:
        - Envelopes
      x-ds-in-sdk: true
      x-ds-method: updateNotificationSettings
      x-ds-methodname: updateNotificationSettings
      x-ds-service: Envelopes
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/recipients':
    delete:
      consumes: []
      deprecated: false
      description: |-
        Deletes one or more recipients from a draft or sent envelope. Recipients to be deleted are listed in the request, with the `recipientId` being used as the key for deleting recipients.

        If the envelope is `In Process`, meaning that it has been sent and has not  been completed or voided, recipients that have completed their actions cannot be deleted.
      operationId: Recipients_DeleteRecipients
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: ''
          in: body
          name: EnvelopeRecipients
          required: false
          schema:
            $ref: '#/definitions/EnvelopeRecipients'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeRecipients'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes recipients from an envelope.
      tags:
        - EnvelopeRecipients
      x-ds-in-sdk: true
      x-ds-method: deleteList
      x-ds-methodname: deleteRecipients
      x-ds-service: Envelopes
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves the status of all recipients in a single envelope and identifies the current recipient in the routing list. 

        The `currentRoutingOrder` property of the response contains the `routingOrder` value of the current recipient indicating that the envelope has been sent to the recipient, but the recipient has not completed their actions.
      operationId: Recipients_GetRecipients
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: ' When set to **true** and `include_tabs` is set to **true**, all tabs with anchor tab properties are included in the response. '
          in: query
          name: include_anchor_tab_locations
          required: false
          type: string
        - description: ' When set to **true**, the extended properties are included in the response. '
          in: query
          name: include_extended
          required: false
          type: string
        - description: |
            Reserved for DocuSign.
          in: query
          name: include_metadata
          required: false
          type: string
        - description: 'When set to **true**, the tab information associated with the recipient is included in the response.'
          in: query
          name: include_tabs
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeRecipients'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets the status of recipients for an envelope.
      tags:
        - EnvelopeRecipients
      x-ds-examples:
        - description: |+
            This example shows the result of an envelope
            with one signer and a CC'ed recipient.


            ### Request
            The request for this endpoint has no payload.

            ```
            GET /restapi/v2/accounts/1703061/envelopes/44efc9e6-915e-4b1d-9b54-801410d6922d/recipients
            ```


          direction: response
          format: json
          response:
            agents: []
            carbonCopies:
              - email: aoneil@example.com
                name: Ariana O'Neill
                recipientId: '2'
                recipientIdGuid: 72edf9b6-4a4e-4c24-b982-86bc5d598bb8
                requireIdLookup: 'false'
                routingOrder: '2'
                status: completed
                userId: b72bd827-096b-4c40-b33d-64ab32f0a0eb
            certifiedDeliveries: []
            currentRoutingOrder: '1'
            editors: []
            inPersonSigners: []
            intermediaries: []
            recipientCount: '2'
            signers:
              - deliveredDateTime: '2016-10-05T21:18:12.3330000Z'
                email: jallard@example.com
                isBulkRecipient: 'false'
                name: Jennie Allard
                recipientId: '1'
                recipientIdGuid: 4575d5e9-7654-467b-b2f5-6c59ca7c43f8
                requireIdLookup: 'false'
                routingOrder: '1'
                signedDateTime: '2016-10-05T21:18:41.6930000Z'
                status: completed
                userId: ca45284a-a94e-4ee2-90af-76035bd795b2
          style: custom
          title: List Recipients and CC'ed Recipients
        - description: |
            This example shows the method's response after the envelope was signed.

            The signer recipient successfully authenticated using:
            * An access code (a pre-shared secret between the sender and the signer)
            * Authentication via Facebook. The Facebook email address is recorded in the Certificate of Completion
          direction: response
          format: json
          response:
            agents: []
            carbonCopies: []
            certifiedDeliveries: []
            currentRoutingOrder: '1'
            editors: []
            inPersonSigners: []
            intermediaries: []
            recipientCount: '1'
            signers:
              - accessCode: '1234'
                deliveredDateTime: '2016-07-11T06:19:36.4200000Z'
                email: larry@example.com
                idCheckConfigurationName: Facebook
                isBulkRecipient: 'false'
                name: Larry Smithers
                recipientAuthenticationStatus:
                  accessCodeResult:
                    eventTimestamp: '2016-07-11T06:18:55.7170000Z'
                    status: Passed
                  facebookResult:
                    eventTimestamp: '2016-07-11T06:19:28.3170000Z'
                    status: Passed
                recipientId: '1'
                recipientIdGuid: 9670e679-adbd-4d1b-913d-02b43027cb0a
                requireIdLookup: 'true'
                routingOrder: '1'
                signInEachLocation: 'false'
                signedDateTime: '2016-07-11T06:19:44.7470000Z'
                status: completed
                userId: 57a7b68f-0113-4870-9385-381042d14ca5
          style: custom
          title: List Recipients Who Used Facebook and Access Code Authentication
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: listRecipients
      x-ds-service: Envelopes
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: |-
        Adds one or more recipients to an envelope.

        For an in process envelope, one that has been sent and has not been completed or voided, an email is sent to a new recipient when they are reached in the routing order. If the new recipient's routing order is before or the same as the envelope's next recipient, an email is only sent if the optional `resend_envelope` query string is set to **true**.
      operationId: Recipients_PostRecipients
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: 'When set to **true**, resends the   envelope if the new recipient''s routing order is before or the same as the envelope''s next recipient.'
          in: query
          name: resend_envelope
          required: false
          type: string
        - description: ''
          in: body
          name: EnvelopeRecipients
          required: false
          schema:
            $ref: '#/definitions/EnvelopeRecipients'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeRecipients'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Adds one or more recipients to an envelope.
      tags:
        - EnvelopeRecipients
      x-ds-in-sdk: true
      x-ds-method: create
      x-ds-methodname: createRecipient
      x-ds-service: Envelopes
    put:
      consumes: []
      deprecated: false
      description: |-
        Updates recipients in a draft envelope or corrects recipient information for an in process envelope. 

        For draft envelopes, you can edit the following properties: `email`, `userName`, `routingOrder`, `faxNumber`, `deliveryMethod`, `accessCode`, and `requireIdLookup`.

        Once an envelope has been sent, you can only edit: `email`, `userName`, `signerName`, `routingOrder`, `faxNumber`, and `deliveryMethod`. You can also select to resend an envelope by using the `resend_envelope` option.

        If you send information for a recipient that does not already exist in a draft envelope, the recipient is added to the envelope (similar to the POST).
      operationId: Recipients_PutRecipients
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: 'When set to **true**, resends the   envelope if the new recipient''s routing order is before or the same as the envelope''s next recipient.'
          in: query
          name: resend_envelope
          required: false
          type: string
        - description: ''
          in: body
          name: EnvelopeRecipients
          required: false
          schema:
            $ref: '#/definitions/EnvelopeRecipients'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/recipientsUpdateSummary'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates recipients in a draft envelope or corrects recipient information for an in process envelope.
      tags:
        - EnvelopeRecipients
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateRecipients
      x-ds-service: Envelopes
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/document_visibility':
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: ''
      operationId: Recipients_PutRecipientsDocumentVisibility
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: ''
          in: body
          name: EnvelopeDocumentVisibility
          required: false
          schema:
            $ref: '#/definitions/EnvelopeDocumentVisibility'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeDocumentVisibility'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates document visibility for the recipients
      tags:
        - EnvelopeDocumentVisibility
      x-ds-in-sdk: true
      x-ds-method: updateList
      x-ds-methodname: updateRecipientsDocumentVisibility
      x-ds-service: Envelopes
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}':
    delete:
      consumes: []
      deprecated: false
      description: |-
        Deletes a recipient from a `draft` or `sent` envelope.

        If the envelope is "In Process" (has been sent and is not completed or voided), recipients that have completed their actions cannot be deleted.
      operationId: Recipients_DeleteRecipient
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: The `recipientId` used when the envelope or template was created.
          in: path
          name: recipientId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeRecipients'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes a recipient from an envelope.
      tags:
        - EnvelopeRecipients
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteRecipient
      x-ds-service: Envelopes
    parameters: []
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/bulk_recipients':
    delete:
      consumes: []
      deprecated: false
      description: |-
        Deletes the bulk recipient file from an envelope. This cannot be used if the envelope has been sent.

        After using this, the `bulkRecipientsUri` property is not returned in subsequent GET calls for the envelope, but the recipient will remain as a bulk recipient.
      operationId: Recipients_DeleteBulkRecipientsFile
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: The `recipientId` used when the envelope or template was created.
          in: path
          name: recipientId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/bulkRecipientsUpdateResponse'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes the bulk recipient file from an envelope.
      tags:
        - EnvelopeBulkRecipients
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteRecipients
      x-ds-service: BulkEnvelopes
    get:
      consumes: []
      deprecated: false
      description: Retrieves the bulk recipient file information from an envelope that has a bulk recipient.
      operationId: Recipients_GetBulkRecipients
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: The `recipientId` used when the envelope or template was created.
          in: path
          name: recipientId
          required: true
          type: string
        - description: |
            If **true**
            include the tabs in the the result.
          in: query
          name: include_tabs
          required: false
          type: string
        - description: |
            Reserved for DocuSign.
          in: query
          name: start_position
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeBulkRecipients'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets the bulk recipient file from an envelope.
      tags:
        - EnvelopeBulkRecipients
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: getRecipients
      x-ds-service: BulkEnvelopes
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: |-
        Updates the bulk recipients in a draft envelope using a file upload. The Content-Type supported for uploading a bulk recipient file is CSV (text/csv).

        The REST API does not support modifying individual rows or values in the bulk recipients file. It only allows the entire file to be added or replaced with a new file.
      operationId: Recipients_PutBulkRecipients
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: The `recipientId` used when the envelope or template was created.
          in: path
          name: recipientId
          required: true
          type: string
        - description: ''
          in: body
          name: bulkRecipientsRequest
          required: false
          schema:
            $ref: '#/definitions/bulkRecipientsRequest'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/bulkRecipientsSummaryResponse'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Adds or replaces envelope bulk recipients.
      tags:
        - EnvelopeBulkRecipients
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateRecipients
      x-ds-service: BulkEnvelopes
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/consumer_disclosure':
    get:
      consumes: []
      deprecated: false
      description: 'Retrieves the Electronic Record and Signature Disclosure, with html formatting, associated with the account. You can use an optional query string to set the language for the disclosure.'
      operationId: ConsumerDisclosure_GetConsumerDisclosureEnvelopeIdRecipientId
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: The `recipientId` used when the envelope or template was created.
          in: path
          name: recipientId
          required: true
          type: string
        - description: ''
          in: query
          name: langCode
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeConsumerDisclosures'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets the Electronic Record and Signature Disclosure associated with the account.
      tags:
        - EnvelopeConsumerDisclosures
      x-ds-in-sdk: true
      x-ds-method: getDefault
      x-ds-methodname: getConsumerDisclosureDefault
      x-ds-service: Envelopes
    parameters: []
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/consumer_disclosure/{langCode}':
    get:
      consumes: []
      deprecated: false
      description: 'Reserved: Retrieves the Electronic Record and Signature Disclosure, with HTML formatting, associated with the account.'
      operationId: ConsumerDisclosure_GetConsumerDisclosureEnvelopeIdRecipientIdLangCode
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: 'The simple type enumeration the language used in the response. The supported languages, with the language value shown in parenthesis, are:Arabic (ar), Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Bahasa Indonesia (id), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Bahasa Melayu (ms), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro), Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk) and Vietnamese (vi). Additionally, the value can be set to "browser" to automatically detect the browser language being used by the viewer and display the disclosure in that language.'
          in: path
          name: langCode
          required: true
          type: string
        - description: The `recipientId` used when the envelope or template was created.
          in: path
          name: recipientId
          required: true
          type: string
        - description: ''
          in: query
          name: langCode
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeConsumerDisclosures'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: 'Reserved: Gets the Electronic Record and Signature Disclosure associated with the account.'
      tags:
        - EnvelopeConsumerDisclosures
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getConsumerDisclosure
      x-ds-service: Envelopes
    parameters: []
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/document_visibility':
    get:
      consumes: []
      deprecated: false
      description: ''
      operationId: Recipients_GetRecipientDocumentVisibility
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: The `recipientId` used when the envelope or template was created.
          in: path
          name: recipientId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeDocumentVisibility'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Returns document visibility for the recipients
      tags:
        - EnvelopeDocumentVisibility
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getRecipientDocumentVisibility
      x-ds-service: Envelopes
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: ''
      operationId: Recipients_PutRecipientDocumentVisibility
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: The `recipientId` used when the envelope or template was created.
          in: path
          name: recipientId
          required: true
          type: string
        - description: ''
          in: body
          name: EnvelopeDocumentVisibility
          required: false
          schema:
            $ref: '#/definitions/EnvelopeDocumentVisibility'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeDocumentVisibility'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates document visibility for the recipients
      tags:
        - EnvelopeDocumentVisibility
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateRecipientDocumentVisibility
      x-ds-service: Envelopes
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/initials_image':
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves the initials image for the specified user. The image is returned in the same format as it was uploaded. In the request you can specify if the chrome (the added line and identifier around the initial image) is returned with the image.

        The userId specified in the endpoint must match the authenticated user's user id and the user must be a member of the account.

        The `signatureIdOrName` paramter accepts signature ID or signature name. DocuSign recommends you use signature ID (`signatureId`), since some names contain characters that do not properly URL encode. If you use the user name, it is likely that the name includes spaces and you might need to URL encode the name before using it in the endpoint. 

        For example: "Bob Smith" to "Bob%20Smith"

        Older envelopes might only contain chromed images. If getting the non-chromed image fails, try getting the chromed image.
      operationId: Recipients_GetRecipientInitialsImage
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: The `recipientId` used when the envelope or template was created.
          in: path
          name: recipientId
          required: true
          type: string
        - description: 'The added line and identifier around the initial image. Note: Older envelopes might only have chromed images. If getting the non-chromed image fails, try getting the chromed image.'
          in: query
          name: include_chrome
          required: false
          type: string
      produces:
        - image/gif
      responses:
        '200':
          description: Successful response.
          schema:
            type: file
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets the initials image for a user.
      tags:
        - Envelopes
      x-ds-in-sdk: true
      x-ds-method: getRecipientInitialsImage
      x-ds-methodname: getRecipientInitialsImage
      x-ds-service: Envelopes
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: |-
        Updates the initials image for a signer that does not have a DocuSign account. The supported image formats for this file are: gif, png, jpeg, and bmp. The file size must be less than 200K.

        For the Authentication/Authorization for this call, the credentials must match the sender of the envelope, the recipient must be an accountless signer or in person signer. The account must have the `CanSendEnvelope` property set to **true** and the `ExpressSendOnly` property in `SendingUser` structure must be set to **false**.
      operationId: Recipients_PutRecipientInitialsImage
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: The `recipientId` used when the envelope or template was created.
          in: path
          name: recipientId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Sets the initials image for an accountless signer.
      tags:
        - Envelopes
      x-ds-in-sdk: true
      x-ds-method: updateRecipientInitialsImage
      x-ds-methodname: updateRecipientInitialsImage
      x-ds-service: Envelopes
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/signature':
    get:
      consumes: []
      deprecated: false
      description: Retrieves signature information for a signer or sign-in-person recipient.
      operationId: Recipients_GetRecipientSignature
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: The `recipientId` used when the envelope or template was created.
          in: path
          name: recipientId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/UserSignatures'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets signature information for a signer or sign-in-person recipient.
      tags:
        - Envelopes
      x-ds-in-sdk: true
      x-ds-method: getRecipientSignature
      x-ds-methodname: getRecipientSignature
      x-ds-service: Envelopes
    parameters: []
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/signature_image':
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves the specified user signature image. The image is returned in the same format as uploaded. In the request you can specify if the chrome (the added line and identifier around the initial image) is returned with the image.

        The userId specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.

        The `signatureIdOrName` parameter accepts signature ID or signature name. DocuSign recommends you use signature ID (`signatureId`), since some names contain characters that don't properly URL encode. If you use the user name, it is likely that the name includes spaces and you might need to URL encode the name before using it in the endpoint. 

        For example: "Bob Smith" to "Bob%20Smith"

        Older envelopes might only have chromed images. If getting the non-chromed image fails, try getting the chromed image.
      operationId: Recipients_GetRecipientSignatureImage
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: The `recipientId` used when the envelope or template was created.
          in: path
          name: recipientId
          required: true
          type: string
        - description: 'When set to **true**, indicates the chromed version of the signature image should be retrieved.'
          in: query
          name: include_chrome
          required: false
          type: string
      produces:
        - image/gif
      responses:
        '200':
          description: Successful response.
          schema:
            type: file
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Retrieve signature image information for a signer/sign-in-person recipient.
      tags:
        - Envelopes
      x-ds-in-sdk: true
      x-ds-method: getRecipientSignatureImage
      x-ds-methodname: getRecipientSignatureImage
      x-ds-service: Envelopes
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: |-
        Updates the signature image for an accountless signer. The supported image formats for this file are: gif, png, jpeg, and bmp. The file size must be less than 200K.

        For the Authentication/Authorization for this call, the credentials must match the sender of the envelope, the recipient must be an accountless signer or in person signer. The account must have the `CanSendEnvelope` property set to **true** and the `ExpressSendOnly` property in `SendingUser` structure must be set to **false**.
      operationId: Recipients_PutRecipientSignatureImage
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: The `recipientId` used when the envelope or template was created.
          in: path
          name: recipientId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Sets the signature image for an accountless signer.
      tags:
        - Envelopes
      x-ds-in-sdk: true
      x-ds-method: updateRecipientSignatureImage
      x-ds-methodname: updateRecipientSignatureImage
      x-ds-service: Envelopes
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/recipients/{recipientId}/tabs':
    delete:
      consumes: []
      deprecated: false
      description: Deletes one or more tabs associated with a recipient in a draft envelope.
      operationId: Recipients_DeleteRecipientTabs
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: The `recipientId` used when the envelope or template was created.
          in: path
          name: recipientId
          required: true
          type: string
        - description: ''
          in: body
          name: EnvelopeRecipientTabs
          required: false
          schema:
            $ref: '#/definitions/EnvelopeRecipientTabs'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeRecipientTabs'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes the tabs associated with a recipient.
      tags:
        - EnvelopeRecipientTabs
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteTabs
      x-ds-service: Envelopes
    get:
      consumes: []
      deprecated: false
      description: Retrieves information about the tabs associated with a recipient in a draft envelope.
      operationId: Recipients_GetRecipientTabs
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: The `recipientId` used when the envelope or template was created.
          in: path
          name: recipientId
          required: true
          type: string
        - description: 'When set to **true**, all tabs with anchor tab properties are included in the response. '
          in: query
          name: include_anchor_tab_locations
          required: false
          type: string
        - description: |
            Reserved for DocuSign.
          in: query
          name: include_metadata
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeRecipientTabs'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets the tabs information for a signer or sign-in-person recipient in an envelope.
      tags:
        - EnvelopeRecipientTabs
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: listTabs
      x-ds-service: Envelopes
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: Adds one or more tabs for a recipient.
      operationId: Recipients_PostRecipientTabs
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: The `recipientId` used when the envelope or template was created.
          in: path
          name: recipientId
          required: true
          type: string
        - description: ''
          in: body
          name: EnvelopeRecipientTabs
          required: false
          schema:
            $ref: '#/definitions/EnvelopeRecipientTabs'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeRecipientTabs'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Adds tabs for a recipient.
      tags:
        - EnvelopeRecipientTabs
      x-ds-in-sdk: true
      x-ds-method: create
      x-ds-methodname: createTabs
      x-ds-service: Envelopes
    put:
      consumes: []
      deprecated: false
      description: Updates one or more tabs for a recipient in a draft envelope.
      operationId: Recipients_PutRecipientTabs
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: The `recipientId` used when the envelope or template was created.
          in: path
          name: recipientId
          required: true
          type: string
        - description: ''
          in: body
          name: EnvelopeRecipientTabs
          required: false
          schema:
            $ref: '#/definitions/EnvelopeRecipientTabs'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeRecipientTabs'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: |+
        Updates the tabs for a recipient.

      tags:
        - EnvelopeRecipientTabs
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateTabs
      x-ds-service: Envelopes
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/templates':
    get:
      consumes: []
      deprecated: false
      description: |
        This returns a list of the server-side templates, their name and ID, used in an envelope.
      operationId: Templates_GetEnvelopeTemplates
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: 'The possible values are:  matching_applied - This returns template matching information for the template.'
          in: query
          name: include
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeTemplates'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Get List of Templates used in an Envelope
      tags:
        - EnvelopeTemplates
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: listTemplates
      x-ds-service: Envelopes
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: Adds templates to the specified envelope.
      operationId: Templates_PostEnvelopeTemplates
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: ''
          in: body
          name: documentTemplateList
          required: false
          schema:
            $ref: '#/definitions/documentTemplateList'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/documentTemplateList'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Adds templates to an envelope.
      tags:
        - EnvelopeTemplates
      x-ds-in-sdk: true
      x-ds-method: apply
      x-ds-methodname: applyTemplate
      x-ds-service: Envelopes
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/views/correct':
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: |-
        Returns a URL that allows you to embed the envelope correction view of the DocuSign UI in your applications.

        Important: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView. 
      operationId: Views_PostEnvelopeCorrectView
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: ''
          in: body
          name: correctViewRequest
          required: false
          schema:
            $ref: '#/definitions/correctViewRequest'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeViews'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Returns a URL to the envelope correction UI.
      tags:
        - EnvelopeViews
      x-ds-in-sdk: true
      x-ds-method: createCorrect
      x-ds-methodname: createCorrectView
      x-ds-service: Envelopes
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/views/edit':
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: |-
        Returns a URL that allows you to embed the edit view of the DocuSign UI in your applications. This is a one-time use login token that allows the user to be placed into the DocuSign editing view. 

        Upon sending completion, the user is returned to the return URL provided by the API application.

        Important: iFrames should not be used for embedded operations on mobile devices due to screen space issues. For iOS devices DocuSign recommends using a WebView. 
      operationId: Views_PostEnvelopeEditView
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: ''
          in: body
          name: returnUrlRequest
          required: false
          schema:
            $ref: '#/definitions/returnUrlRequest'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeViews'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Returns a URL to the edit view UI.
      tags:
        - EnvelopeViews
      x-ds-examples:
        - description: |+
            The response contains the URL
            of the embeddable edit view
            for a specified envelope.

            The request body contains
            a `returnUrl`.
            This is the URL
            that the DocuSign platform
            will redirect the user to
            when the view is closed.

          direction: both
          format: json
          request:
            returnUrl: 'https://dsapp.example.com/return/from/edit/view'
          response:
            url: 'https://demo.docusign.net/Member/StartInSession.aspx?StartConsole=1&t=c8dc7c1e-77fb-4ec8-a336-405ba1f7d38b&DocuEnvelope=4b728be4-4417-45c6-b7e8-d63e23f822b6&send=1'
          style: custom
          title: Getting an Edit View URL and Setting a Return URL
      x-ds-in-sdk: true
      x-ds-method: createEdit
      x-ds-methodname: createEditView
      x-ds-service: Envelopes
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/views/recipient':
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: |-
        Returns a URL that enables you to embed the recipient view of the DocuSign UI in your applications. If the recipient is a signer, then the view will provide the signing ceremony.

        ###### Note: Please redirect the client to the URL. iFrames should not be used, especially if the recipient may be using a mobile or tablet. 

        This method is only used with envelopes in the `sent` status.

        Your application is responsible for authenticating the identity of the recipient or signer when you use this method. Use the parameters `assertionId`, `authenticationInstant`, `authenticationMethod`, `clientUserId`, and `securityDomain` to record information on how the recipient was authenticated. At a minimum, `authenticationMethod` and `clientUserId` are required. The information that you provide is included in the envelope's certificate of completion.

        ## The event status parameter
        After the signer completes or ends the signing ceremony, DocuSign will redirect the user's browser back to your app via the `returnUrl` that you supply. DocuSIgn appends an `event` query parameter to the URL with the outcome of the signing ceremony. Your app should use the event parameter to determine the next step for the envelope. Don't fetch the envelope's status via Envelopes: get or a similar method; that could break the DocuSign rule against polling.

        ## The URL is time-limited
        The URL returned by this method is valid for one use. It must be used/displayed within a couple of minutes after being generated. Once the recipient is redirected to the recipient view, they must interact with the DocuSign system periodically or their session will time out.

        Because the URL is time-limited, it should not be stored or sent via email. Immediately redirect the user's browser to the URL after you receive it.

        If you want to invite someone to an embedded signing session via email, the email invitation's URL must be to your application. When invoked, your app should request a recipientView URL from DocuSign and then redirect the signer to that URL.

        ## Maintaining State
        After the recipient completes the recipient view (or signing ceremony), they are redirected to your application. Your application can recover state information about the transaction by storing information in a cookie, or by including query parameters in the `returnUrl` field. Eg, `https://myapp.eg.com/docusign_return?myState=12345` When the user is redirected to your app, the `event` query parameter will be appended. In this example, prevent spoofing by not using a guessable value as the state value.
      operationId: Views_PostEnvelopeRecipientView
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: ''
          in: body
          name: recipientViewRequest
          required: false
          schema:
            $ref: '#/definitions/recipientViewRequest'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeViews'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Returns a URL to the recipient view UI.
      tags:
        - EnvelopeViews
      x-ds-in-sdk: true
      x-ds-method: createRecipient
      x-ds-methodname: createRecipientView
      x-ds-service: Envelopes
  '/v2/accounts/{accountId}/envelopes/{envelopeId}/views/sender':
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: |-
        Returns a URL that enables you to embed the sender view of the DocuSign UI in your applications. 

        The returned URL can only be redirected to immediately after it is generated. It can only be used once.
        Therefore, request the URL immediately before you redirect your user to it.

        For the best user experience, don't use an iFrame. For iOS devices DocuSign recommends using a WebView.

        Multiple solutions are available for maintaining your
        client state. See the "Maintaining State" section of the [Embedded Signing introduction.](../../../../guide/usage/embedded_signing.html#maintaining-state)

        After the user has completed the sending view, their browser is redirected to the `returnUrl` you supplied.

        By default, if the envelope already contains one or more documents, DocuSign will initially show the document tagging view when you redirect to the URL. 

        To start with the envelope's recipients and documents view instead, examine the URL in the method's response. 
        Then change the query parameter from `send=1` to `send=0` to start with the recipients/documents view.
      operationId: Views_PostEnvelopeSenderView
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The envelope''s GUID. Eg 93be49ab-afa0-4adf-933c-f752070d71ec '
          in: path
          name: envelopeId
          required: true
          type: string
        - description: ''
          in: body
          name: returnUrlRequest
          required: false
          schema:
            $ref: '#/definitions/returnUrlRequest'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeViews'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Returns a URL to the sender view UI.
      tags:
        - EnvelopeViews
      x-ds-in-sdk: true
      x-ds-method: createSender
      x-ds-methodname: createSenderView
      x-ds-service: Envelopes
  '/v2/accounts/{accountId}/folders':
    get:
      consumes: []
      deprecated: false
      description: 'Retrieves a list of the folders for the account, including the folder hierarchy. You can specify whether to return just the template folder or template folder and normal folders by setting the `template` query string parameter.'
      operationId: Folders_GetFolders
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: |
            Reserved for DocuSign.
          in: query
          name: include
          required: false
          type: string
        - description: ''
          in: query
          name: include_items
          required: false
          type: string
        - description: |
            Reserved for DocuSign.
          in: query
          name: start_position
          required: false
          type: string
        - description: |-
            Specifies the items that are returned. Valid values are: 

            * include - The folder list will return normal folders plus template folders. 
            * only - Only the list of template folders are returned.
          in: query
          name: template
          required: false
          type: string
        - description: |
            Reserved for DocuSign.
          in: query
          name: user_filter
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/Folders'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets a list of the folders for the account.
      tags:
        - Folders
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: list
      x-ds-service: Folders
    parameters: []
  '/v2/accounts/{accountId}/folders/{folderId}':
    get:
      consumes: []
      deprecated: false
      description: Retrieves a list of the envelopes in the specified folder. You can narrow the query by specifying search criteria in the query string parameters.
      operationId: Folders_GetFolderItems
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the folder being accessed.
          in: path
          name: folderId
          required: true
          type: string
        - description: ' Only return items on or after this date. If no value is provided, the default search is the previous 30 days. '
          in: query
          name: from_date
          required: false
          type: string
        - description: ''
          in: query
          name: include_items
          required: false
          type: string
        - description: ' The email of the folder owner. '
          in: query
          name: owner_email
          required: false
          type: string
        - description: ' The name of the folder owner. '
          in: query
          name: owner_name
          required: false
          type: string
        - description: ' The search text used to search the items of the envelope. The search looks at recipient names and emails, envelope custom fields, sender name, and subject. '
          in: query
          name: search_text
          required: false
          type: string
        - description: 'The position of the folder items to return. This is used for repeated calls, when the number of envelopes returned is too much for one return (calls return 100 envelopes at a time). The default value is 0.'
          in: query
          name: start_position
          required: false
          type: string
        - description: 'The current status of the envelope. If no value is provided, the default search is all/any status.'
          in: query
          name: status
          required: false
          type: string
        - description: 'Only return items up to this date. If no value is provided, the default search is to the current date.'
          in: query
          name: to_date
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/folderItemsResponse'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets a list of the envelopes in the specified folder.
      tags:
        - Folders
      x-ds-in-sdk: true
      x-ds-method: listItems
      x-ds-methodname: listItems
      x-ds-service: Folders
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: |-
        Moves an envelope from its current folder to the specified folder.

        ###### Note: You can use this endpoint to delete envelopes by specifying `recyclebin` in the `folderId` parameter of the endpoint. Placing an in process envelope (envelope status of `sent` or `delivered`) in the recycle bin voids the envelope. You can also use this endpoint to delete templates by specifying a template ID instead of an envelope ID in the 'envelopeIds' property and specifying `recyclebin` in the `folderId` parameter. 
      operationId: Folders_PutFolderById
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the folder being accessed.
          in: path
          name: folderId
          required: true
          type: string
        - description: ''
          in: body
          name: foldersRequest
          required: false
          schema:
            $ref: '#/definitions/foldersRequest'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/Folders'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Moves an envelope from its current folder to the specified folder.
      tags:
        - Folders
      x-ds-in-sdk: true
      x-ds-method: moveEnvelopes
      x-ds-methodname: moveEnvelopes
      x-ds-service: Folders
  '/v2/accounts/{accountId}/groups':
    delete:
      consumes: []
      deprecated: false
      description: Deletes an existing user group.
      operationId: Groups_DeleteGroups
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: Groups
          required: false
          schema:
            $ref: '#/definitions/Groups'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/Groups'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes an existing user group.
      tags:
        - Groups
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteGroups
      x-ds-service: Groups
    get:
      consumes: []
      deprecated: false
      description: Retrieves information about groups associated with the account.
      operationId: Groups_GetGroups
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: Number of records to return. The number must be greater than 1 and less than or equal to 100.
          in: query
          name: count
          required: false
          type: string
        - description: Filters the groups returned by the group name or a sub-string of group name.
          in: query
          name: group_name
          required: false
          type: string
        - description: ''
          in: query
          name: group_type
          required: false
          type: string
        - description: ''
          in: query
          name: search_text
          required: false
          type: string
        - description: Starting value for the list.
          in: query
          name: start_position
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/Groups'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets information about groups associated with the account.
      tags:
        - Groups
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: listGroups
      x-ds-service: Groups
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: |-
        Creates one or more groups for the account.

        Groups can be used to help manage users by associating users with a group. You can associate a group with a Permission Profile, which sets the user permissions for users in that group without having to set the `userSettings` property for each user. You are not required to set Permission Profiles for a group, but it makes it easier to manage user permissions for a large number of users. You can also use groups with template sharing to limit user access to templates.
      operationId: Groups_PostGroups
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: Groups
          required: false
          schema:
            $ref: '#/definitions/Groups'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/Groups'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Creates one or more groups for the account.
      tags:
        - Groups
      x-ds-in-sdk: true
      x-ds-method: create
      x-ds-methodname: createGroups
      x-ds-service: Groups
    put:
      consumes: []
      deprecated: false
      description: 'Updates the group name and modifies, or sets, the permission profile for the group.'
      operationId: Groups_PutGroups
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: Groups
          required: false
          schema:
            $ref: '#/definitions/Groups'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/Groups'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates the group information for a group.
      tags:
        - Groups
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateGroups
      x-ds-service: Groups
  '/v2/accounts/{accountId}/groups/{groupId}/brands':
    delete:
      consumes: []
      deprecated: false
      description: Deletes brand information from the requested group.
      operationId: Brands_DeleteGroupBrands
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the group being accessed.
          in: path
          name: groupId
          required: true
          type: string
        - description: ''
          in: body
          name: brandsRequest
          required: false
          schema:
            $ref: '#/definitions/brandsRequest'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/GroupBrands'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes brand information from the requested group.
      tags:
        - GroupBrands
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteBrands
      x-ds-service: Groups
    get:
      consumes: []
      deprecated: false
      description: Retrieves information about the brands associated with the requested group.
      operationId: Brands_GetGroupBrands
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the group being accessed.
          in: path
          name: groupId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/GroupBrands'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: |
        Gets group brand ID Information.
      tags:
        - GroupBrands
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getBrands
      x-ds-service: Groups
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: Adds group brand ID information to a group.
      operationId: Brands_PutGroupBrands
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the group being accessed.
          in: path
          name: groupId
          required: true
          type: string
        - description: ''
          in: body
          name: brandsRequest
          required: false
          schema:
            $ref: '#/definitions/brandsRequest'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/GroupBrands'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Adds group brand ID information to a group.
      tags:
        - GroupBrands
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateBrands
      x-ds-service: Groups
  '/v2/accounts/{accountId}/groups/{groupId}/users':
    delete:
      consumes: []
      deprecated: false
      description: |
        Deletes one or more users from a group.
      operationId: Groups_DeleteGroupUsers
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the group being accessed.
          in: path
          name: groupId
          required: true
          type: string
        - description: ''
          in: body
          name: userInfoList
          required: false
          schema:
            $ref: '#/definitions/userInfoList'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/GroupUsers'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes one or more users from a gro
      tags:
        - GroupUsers
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteGroupUsers
      x-ds-service: Groups
    get:
      consumes: []
      deprecated: false
      description: Retrieves a list of users in a group.
      operationId: Groups_GetGroupUsers
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the group being accessed.
          in: path
          name: groupId
          required: true
          type: string
        - description: 'Number of records to return. The number must be greater than 1 and less than or equal to 100. '
          in: query
          name: count
          required: false
          type: string
        - description: Starting value for the list.
          in: query
          name: start_position
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/GroupUsers'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets a list of users in a group.
      tags:
        - GroupUsers
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: listGroupUsers
      x-ds-service: Groups
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: Adds one or more users to an existing group.
      operationId: Groups_PutGroupUsers
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the group being accessed.
          in: path
          name: groupId
          required: true
          type: string
        - description: ''
          in: body
          name: userInfoList
          required: false
          schema:
            $ref: '#/definitions/userInfoList'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/GroupUsers'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Adds one or more users to an existing group.
      tags:
        - GroupUsers
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateGroupUsers
      x-ds-service: Groups
  '/v2/accounts/{accountId}/payment_gateway_accounts':
    get:
      consumes: []
      deprecated: false
      description: List payment gateway account information
      operationId: PaymentGatewayAccounts_GetAllPaymentGatewayAccounts
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/paymentGatewayAccountsInfo'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: List payment gateway account information
      tags:
        - PaymentGatewayAccounts
      x-ds-api-status: beta
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: getAllPaymentGatewayAccounts
      x-ds-service: Accounts
    parameters: []
  '/v2/accounts/{accountId}/permission_profiles':
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves a list of Permission Profiles. Permission Profiles are a standard set of user permissions that you can apply to individual users or users in a Group. This makes it easier to manage user permissions for a large number of users, without having to change permissions on a user-by-user basis.

        Currently, Permission Profiles can only be created and modified in the DocuSign console.
      operationId: PermissionProfiles_GetPermissionProfiles
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: |
            Reserved for DocuSign.
          in: query
          name: include
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/permissionProfileInformation'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets a list of permission profiles.
      tags:
        - AccountPermissionProfiles
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: listPermissions
      x-ds-service: Accounts
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: ''
      operationId: PermissionProfiles_PostPermissionProfiles
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'A comma-separated list of additional template attributes to include in the response. Valid values are: recipients, folders, documents, custom_fields, and notifications.'
          in: query
          name: include
          required: false
          type: string
        - description: ''
          in: body
          name: AccountPermissionProfiles
          required: false
          schema:
            $ref: '#/definitions/AccountPermissionProfiles'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/AccountPermissionProfiles'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Creates a new permission profile in the specified account.
      tags:
        - AccountPermissionProfiles
      x-ds-in-sdk: true
      x-ds-method: create
      x-ds-methodname: createPermissionProfile
      x-ds-service: Accounts
  '/v2/accounts/{accountId}/permission_profiles/{permissionProfileId}':
    delete:
      consumes: []
      deprecated: false
      description: ''
      operationId: PermissionProfiles_DeletePermissionProfiles
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: path
          name: permissionProfileId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes a permissions profile within the specified account.
      tags:
        - AccountPermissionProfiles
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deletePermissionProfile
      x-ds-service: Accounts
    get:
      consumes: []
      deprecated: false
      description: ''
      operationId: PermissionProfiles_GetPermissionProfile
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: path
          name: permissionProfileId
          required: true
          type: string
        - description: 'A comma-separated list of additional template attributes to include in the response. Valid values are: recipients, folders, documents, custom_fields, and notifications.'
          in: query
          name: include
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/AccountPermissionProfiles'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Returns a permissions profile in the specified account.
      tags:
        - AccountPermissionProfiles
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getPermissionProfile
      x-ds-service: Accounts
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: ''
      operationId: PermissionProfiles_PutPermissionProfiles
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: path
          name: permissionProfileId
          required: true
          type: string
        - description: 'A comma-separated list of additional template attributes to include in the response. Valid values are: recipients, folders, documents, custom_fields, and notifications.'
          in: query
          name: include
          required: false
          type: string
        - description: ''
          in: body
          name: AccountPermissionProfiles
          required: false
          schema:
            $ref: '#/definitions/AccountPermissionProfiles'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/AccountPermissionProfiles'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates a permission profile within the specified account.
      tags:
        - AccountPermissionProfiles
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updatePermissionProfile
      x-ds-service: Accounts
  '/v2/accounts/{accountId}/powerforms':
    delete:
      consumes: []
      deprecated: false
      description: ''
      operationId: PowerForms_DeletePowerFormsList
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: powerFormsRequest
          required: false
          schema:
            $ref: '#/definitions/powerFormsRequest'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/powerFormsResponse'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes one or more PowerForms
      tags:
        - PowerForms
      x-ds-in-sdk: true
      x-ds-method: deleteList
      x-ds-methodname: deletePowerForms
      x-ds-service: PowerForms
    get:
      consumes: []
      deprecated: false
      description: ''
      operationId: PowerForms_GetPowerFormsList
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'Start of the search date range. Only returns templates created on or after this date/time. If no value is specified, there is no limit on the earliest date created.'
          in: query
          name: from_date
          required: false
          type: string
        - description: |-
            An optional value that sets the direction order used to sort the item list. 

            Valid values are: 

            * asc = ascending sort order
            * desc = descending sort order 
          in: query
          name: order
          required: false
          type: string
        - description: |-
            An optional value that sets the file attribute used to sort the item list. 

            Valid values are: 

            * modified
            * name  
          in: query
          name: order_by
          required: false
          type: string
        - description: 'End of the search date range. Only returns templates created up to this date/time. If no value is provided, this defaults to the current date.'
          in: query
          name: to_date
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/powerFormsResponse'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Returns the list of PowerForms available to the user.
      tags:
        - PowerForms
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: listPowerForms
      x-ds-service: PowerForms
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: ''
      operationId: PowerForms_PostPowerForm
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: PowerForms
          required: false
          schema:
            $ref: '#/definitions/PowerForms'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/PowerForms'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Creates a new PowerForm.
      tags:
        - PowerForms
      x-ds-in-sdk: true
      x-ds-method: create
      x-ds-methodname: createPowerForm
      x-ds-service: PowerForms
  '/v2/accounts/{accountId}/powerforms/senders':
    get:
      consumes: []
      deprecated: false
      description: ''
      operationId: PowerForms_GetPowerFormsSenders
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The position within the total result set from which to start returning values. The value **thumbnail** may be used to return the page image.
          in: query
          name: start_position
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/powerFormSendersResponse'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Returns the list of PowerForms available to the user.
      tags:
        - PowerForms
      x-ds-in-sdk: true
      x-ds-method: listSenders
      x-ds-methodname: listPowerFormSenders
      x-ds-service: PowerForms
    parameters: []
  '/v2/accounts/{accountId}/powerforms/{powerFormId}':
    delete:
      consumes: []
      deprecated: false
      description: ''
      operationId: PowerForms_DeletePowerForm
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: path
          name: powerFormId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Delete a PowerForm.
      tags:
        - PowerForms
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deletePowerForm
      x-ds-service: PowerForms
    get:
      consumes: []
      deprecated: false
      description: ''
      operationId: PowerForms_GetPowerForm
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: path
          name: powerFormId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/PowerForms'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Returns a single PowerForm.
      tags:
        - PowerForms
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getPowerForm
      x-ds-service: PowerForms
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: ''
      operationId: PowerForms_PutPowerForm
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: path
          name: powerFormId
          required: true
          type: string
        - description: ''
          in: body
          name: PowerForms
          required: false
          schema:
            $ref: '#/definitions/PowerForms'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/PowerForms'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Creates a new PowerForm.
      tags:
        - PowerForms
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updatePowerForm
      x-ds-service: PowerForms
  '/v2/accounts/{accountId}/powerforms/{powerFormId}/form_data':
    get:
      consumes: []
      deprecated: false
      description: ''
      operationId: PowerForms_GetPowerFormFormData
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: path
          name: powerFormId
          required: true
          type: string
        - description: 'Start of the search date range. Only returns templates created on or after this date/time. If no value is specified, there is no limit on the earliest date created.'
          in: query
          name: from_date
          required: false
          type: string
        - description: 'End of the search date range. Only returns templates created up to this date/time. If no value is provided, this defaults to the current date.'
          in: query
          name: to_date
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/powerFormsFormDataResponse'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Returns the form data associated with the usage of a PowerForm.
      tags:
        - PowerFormData
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: getPowerFormData
      x-ds-service: PowerForms
    parameters: []
  '/v2/accounts/{accountId}/recipient_names':
    get:
      consumes: []
      deprecated: false
      description: Retrieves a list of recipients in the specified account that are associated with a email address supplied in the query string.
      operationId: RecipientNames_GetRecipientNames
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The email address for the user
          in: query
          name: email
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/recipientNamesResponse'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets recipient names associated with an email address.
      tags:
        - Accounts
      x-ds-in-sdk: true
      x-ds-method: listRecipientNamesByEmail
      x-ds-methodname: listRecipientNamesByEmail
      x-ds-service: Accounts
    parameters: []
  '/v2/accounts/{accountId}/search_folders/{searchFolderId}':
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves a list of envelopes that match the criteria specified in the query.

        If the user ID of the user making the call is the same as the user ID for any returned recipient, then the userId property is added to the returned information for those recipients.
      operationId: SearchFolders_GetSearchFolderContents
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'Specifies the envelope group that is searched by the request. These are logical groupings, not actual folder names. Valid values are: drafts, awaiting_my_signature, completed, out_for_signature.'
          in: path
          name: searchFolderId
          required: true
          type: string
        - description: Specifies that all envelopes that match the criteria are returned.
          in: query
          name: all
          required: false
          type: string
        - description: Specifies the number of records returned in the cache. The number must be greater than 0 and less than or equal to 100.
          in: query
          name: count
          required: false
          type: string
        - description: 'Specifies the start of the date range to return. If no value is provided, the default search is the previous 30 days.'
          in: query
          name: from_date
          required: false
          type: string
        - description: 'When set to **true**, the recipient information is returned in the response.'
          in: query
          name: include_recipients
          required: false
          type: string
        - description: 'Specifies the order in which the list is returned. Valid values are: `asc` for ascending order, and `desc` for descending order.'
          in: query
          name: order
          required: false
          type: string
        - description: 'Specifies the property used to sort the list. Valid values are: `action_required`, `created`, `completed`, `sent`, `signer_list`, `status`, or `subject`.'
          in: query
          name: order_by
          required: false
          type: string
        - description: Specifies the the starting location in the result set of the items that are returned.
          in: query
          name: start_position
          required: false
          type: string
        - description: Specifies the end of the date range to return.
          in: query
          name: to_date
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/folderItemResponse'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets a list of envelopes in folders matching the specified criteria.
      tags:
        - Folders
      x-ds-in-sdk: true
      x-ds-method: search
      x-ds-methodname: search
      x-ds-service: Folders
    parameters: []
  '/v2/accounts/{accountId}/settings':
    get:
      consumes: []
      deprecated: false
      description: Retrieves the account settings information for the specified account.
      operationId: Settings_GetSettings
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/accountSettingsInformation'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets account settings information.
      tags:
        - Accounts
      x-ds-in-sdk: true
      x-ds-method: listSettings
      x-ds-methodname: listSettings
      x-ds-service: Accounts
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: Updates the account settings for the specified account.
      operationId: Settings_PutSettings
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: accountSettingsInformation
          required: false
          schema:
            $ref: '#/definitions/accountSettingsInformation'
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates the account settings for an account.
      tags:
        - Accounts
      x-ds-in-sdk: true
      x-ds-method: updateSettings
      x-ds-methodname: updateSettings
      x-ds-service: Accounts
  '/v2/accounts/{accountId}/settings/enote_configuration':
    delete:
      consumes: []
      deprecated: false
      description: ''
      operationId: ENoteConfiguration_DeleteENoteConfiguration
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes configuration information for the eNote eOriginal integration.
      tags:
        - ENoteConfigurations
      x-ds-api-status: beta
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteENoteConfiguration
      x-ds-service: Accounts
    get:
      consumes: []
      deprecated: false
      description: ''
      operationId: ENoteConfiguration_GetENoteConfiguration
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/ENoteConfigurations'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Returns the configuration information for the eNote eOriginal integration.
      tags:
        - ENoteConfigurations
      x-ds-api-status: beta
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getENoteConfiguration
      x-ds-service: Accounts
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: ''
      operationId: ENoteConfiguration_PutENoteConfiguration
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: ENoteConfigurations
          required: false
          schema:
            $ref: '#/definitions/ENoteConfigurations'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/ENoteConfigurations'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates configuration information for the eNote eOriginal integration.
      tags:
        - ENoteConfigurations
      x-ds-api-status: beta
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateENoteConfiguration
      x-ds-service: Accounts
  '/v2/accounts/{accountId}/settings/password_rules':
    get:
      consumes: []
      deprecated: false
      description: ''
      operationId: AccountPasswordRules_GetAccountPasswordRules
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/AccountPasswordRules'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Get the password rules
      tags:
        - AccountPasswordRules
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getPasswordRules
      x-ds-service: Accounts
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: ''
      operationId: AccountPasswordRules_PutAccountPasswordRules
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: AccountPasswordRules
          required: false
          schema:
            $ref: '#/definitions/AccountPasswordRules'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/AccountPasswordRules'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Update the password rules
      tags:
        - AccountPasswordRules
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updatePasswordRules
      x-ds-service: Accounts
  '/v2/accounts/{accountId}/settings/tabs':
    get:
      consumes: []
      deprecated: false
      description: ''
      operationId: TabSettings_GetTabSettings
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/AccountTabSettings'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Returns tab settings list for specified account
      tags:
        - AccountTabSettings
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getAccountTabSettings
      x-ds-service: Accounts
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: ''
      operationId: TabSettings_PutSettings
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: AccountTabSettings
          required: false
          schema:
            $ref: '#/definitions/AccountTabSettings'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/AccountTabSettings'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Modifies tab settings for specified account
      tags:
        - AccountTabSettings
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateAccountTabSettings
      x-ds-service: Accounts
  '/v2/accounts/{accountId}/shared_access':
    get:
      consumes: []
      deprecated: false
      description: |-
        Reserved: Retrieves shared item status for one or more users and types of items.

        Users with account administration privileges can retrieve shared access information for all account users. Users without account administrator privileges can only retrieve shared access information for themselves and the returned information is limited to the retrieving the status of all members of the account that are sharing their folders to the user. This is equivalent to setting the shared=shared_from.
      operationId: SharedAccess_GetSharedAccess
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'Specifies maximum number of results included in the response. If no value is specified, this defaults to 1000.'
          in: query
          name: count
          required: false
          type: string
        - description: ''
          in: query
          name: envelopes_not_shared_user_status
          required: false
          type: string
        - description: A comma separated list of folder ID GUIDs.
          in: query
          name: folder_ids
          required: false
          type: string
        - description: 'Reserved:'
          in: query
          name: item_type
          required: false
          type: string
        - description: This can be used to filter user names in the response. The wild-card '*' (asterisk) can be used around the string.
          in: query
          name: search_text
          required: false
          type: string
        - description: 'Reserved:'
          in: query
          name: shared
          required: false
          type: string
        - description: 'Reserved:'
          in: query
          name: start_position
          required: false
          type: string
        - description: 'Reserved:'
          in: query
          name: user_ids
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/accountSharedAccess'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: 'Reserved: Gets the shared item status for one or more users.'
      tags:
        - Accounts
      x-ds-in-sdk: true
      x-ds-method: listSharedAccess
      x-ds-methodname: listSharedAccess
      x-ds-service: Accounts
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: 'Reserved: Sets the shared access information for one or more users.'
      operationId: SharedAccess_PutSharedAccess
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: query
          name: item_type
          required: false
          type: string
        - description: ''
          in: query
          name: user_ids
          required: false
          type: string
        - description: ''
          in: body
          name: accountSharedAccess
          required: false
          schema:
            $ref: '#/definitions/accountSharedAccess'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/accountSharedAccess'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: 'Reserved: Sets the shared access information for users.'
      tags:
        - Accounts
      x-ds-in-sdk: true
      x-ds-method: updateSharedAccess
      x-ds-methodname: updateSharedAccess
      x-ds-service: Accounts
  '/v2/accounts/{accountId}/signatureProviders':
    get:
      consumes: []
      deprecated: false
      description: ''
      operationId: AccountSignatureProviders_GetSignatureProviders
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/AccountSignatureProviders'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Returns Account available signature providers for specified account.
      tags:
        - AccountSignatureProviders
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: listSignatureProviders
      x-ds-service: Accounts
    parameters: []
  '/v2/accounts/{accountId}/signing_groups':
    delete:
      consumes: []
      deprecated: false
      description: Deletes one or more signing groups in the specified account.
      operationId: SigningGroups_DeleteSigningGroups
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: signingGroupInformation
          required: false
          schema:
            $ref: '#/definitions/signingGroupInformation'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/signingGroupInformation'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes one or more signing groups.
      tags:
        - SigningGroups
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteList
      x-ds-service: SigningGroups
    get:
      consumes: []
      deprecated: false
      description: Retrieves a list of all signing groups in the specified account.
      operationId: SigningGroups_GetSigningGroups
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: query
          name: group_type
          required: false
          type: string
        - description: 'When set to **true**, the response includes the signing group members. '
          in: query
          name: include_users
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/signingGroupInformation'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets a list of the Signing Groups in an account.
      tags:
        - SigningGroups
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: list
      x-ds-service: SigningGroups
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: |-
        Creates one or more signing groups. 

        Multiple signing groups can be created in one call. Only users with account administrator privileges can create signing groups. 

        An account can have a maximum of 50 signing groups. Each signing group can have a maximum of 50 group members.
         
        Signing groups can be used by any account user.
      operationId: SigningGroups_PostSigningGroups
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: signingGroupInformation
          required: false
          schema:
            $ref: '#/definitions/signingGroupInformation'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/signingGroupInformation'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: 'Creates a signing group. '
      tags:
        - SigningGroups
      x-ds-in-sdk: true
      x-ds-method: create
      x-ds-methodname: createList
      x-ds-service: SigningGroups
    put:
      consumes: []
      deprecated: false
      description: 'Updates the name of one or more existing signing groups. '
      operationId: SigningGroups_PutSigningGroups
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: signingGroupInformation
          required: false
          schema:
            $ref: '#/definitions/signingGroupInformation'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/signingGroupInformation'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates signing group names.
      tags:
        - SigningGroups
      x-ds-in-sdk: true
      x-ds-method: updateList
      x-ds-methodname: updateList
      x-ds-service: SigningGroups
  '/v2/accounts/{accountId}/signing_groups/{signingGroupId}':
    get:
      consumes: []
      deprecated: false
      description: 'Retrieves information, including group member information, for the specified signing group. '
      operationId: SigningGroups_GetSigningGroup
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: path
          name: signingGroupId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/SigningGroups'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: 'Gets information about a signing group. '
      tags:
        - SigningGroups
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: get
      x-ds-service: SigningGroups
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: 'Updates signing group name and member information. You can also add new members to the signing group. A signing group can have a maximum of 50 members. '
      operationId: SigningGroups_PutSigningGroup
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: path
          name: signingGroupId
          required: true
          type: string
        - description: ''
          in: body
          name: SigningGroups
          required: false
          schema:
            $ref: '#/definitions/SigningGroups'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/SigningGroups'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: 'Updates a signing group. '
      tags:
        - SigningGroups
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: update
      x-ds-service: SigningGroups
  '/v2/accounts/{accountId}/signing_groups/{signingGroupId}/users':
    delete:
      consumes: []
      deprecated: false
      description: 'Deletes  one or more members from the specified signing group. '
      operationId: SigningGroups_DeleteSigningGroupUsers
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: path
          name: signingGroupId
          required: true
          type: string
        - description: ''
          in: body
          name: SigningGroupUsers
          required: false
          schema:
            $ref: '#/definitions/SigningGroupUsers'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/SigningGroupUsers'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes  one or more members from a signing group.
      tags:
        - SigningGroupUsers
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteUsers
      x-ds-service: SigningGroups
    get:
      consumes: []
      deprecated: false
      description: Retrieves the list of members in the specified Signing Group.
      operationId: SigningGroups_GetSigningGroupUsers
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: path
          name: signingGroupId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/SigningGroupUsers'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets a list of members in a Signing Group.
      tags:
        - SigningGroupUsers
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: listUsers
      x-ds-service: SigningGroups
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: 'Adds one or more new members to a signing group. A signing group can have a maximum of 50 members. '
      operationId: SigningGroups_PutSigningGroupUsers
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: path
          name: signingGroupId
          required: true
          type: string
        - description: ''
          in: body
          name: SigningGroupUsers
          required: false
          schema:
            $ref: '#/definitions/SigningGroupUsers'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/SigningGroupUsers'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: 'Adds members to a signing group. '
      tags:
        - SigningGroupUsers
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateUsers
      x-ds-service: SigningGroups
  '/v2/accounts/{accountId}/supported_languages':
    get:
      consumes: []
      deprecated: false
      description: List supported languages for the recipient language setting
      operationId: SupportedLanguages_GetSupportedLanguages
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/supportedLanguages'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: List supported languages for the recipient language setting
      tags:
        - Accounts
      x-ds-in-sdk: true
      x-ds-method: listSupportedLanguages
      x-ds-methodname: getSupportedLanguages
      x-ds-service: Accounts
    parameters: []
  '/v2/accounts/{accountId}/tab_definitions':
    get:
      consumes: []
      deprecated: false
      description: Retrieves a list of all tabs associated with the account.
      operationId: Tabs_GetTabDefinitions
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'When set to **true**, only custom tabs are returned in the response. '
          in: query
          name: custom_tab_only
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/tabMetadataList'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets a list of all account tabs.
      tags:
        - CustomTabs
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: list
      x-ds-service: CustomTabs
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: |-
        Creates a tab with pre-defined properties, such as a text tab with a certain font type and validation pattern. Users can access the custom tabs when sending documents through the DocuSign web application.

        Custom tabs can be created for approve, checkbox, company, date, date signed, decline, email, email address, envelope ID, first name, formula, full name, initial here, last name, list, note, number, radio, sign here, signer attachment, SSN, text, title, and zip tabs.
      operationId: Tabs_PostTabDefinitions
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: CustomTabs
          required: false
          schema:
            $ref: '#/definitions/CustomTabs'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/CustomTabs'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Creates a custom tab.
      tags:
        - CustomTabs
      x-ds-in-sdk: true
      x-ds-method: create
      x-ds-methodname: create
      x-ds-service: CustomTabs
  '/v2/accounts/{accountId}/tab_definitions/{customTabId}':
    delete:
      consumes: []
      deprecated: false
      description: Deletes the custom from the specified account.
      operationId: Tab_DeleteCustomTab
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: path
          name: customTabId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes custom tab information.
      tags:
        - CustomTabs
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: delete
      x-ds-service: CustomTabs
    get:
      consumes: []
      deprecated: false
      description: Retrieves information about the requested custom tab on the specified account.
      operationId: Tab_GetCustomTab
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: path
          name: customTabId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/CustomTabs'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets custom tab information.
      tags:
        - CustomTabs
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: get
      x-ds-service: CustomTabs
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: Updates the information in a custom tab for the specified account.
      operationId: Tab_PutCustomTab
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: path
          name: customTabId
          required: true
          type: string
        - description: ''
          in: body
          name: CustomTabs
          required: false
          schema:
            $ref: '#/definitions/CustomTabs'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/CustomTabs'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: |+
        Updates custom tab information.

      tags:
        - CustomTabs
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: update
      x-ds-service: CustomTabs
  '/v2/accounts/{accountId}/templates':
    get:
      consumes: []
      deprecated: false
      description: Retrieves the list of templates for the specified account. The request can be limited to a specific folder.
      operationId: Templates_GetTemplates
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: Number of records to return in the cache.
          in: query
          name: count
          required: false
          type: string
        - description: The query value can be a folder name or folder ID. The response will only return templates in the specified folder.
          in: query
          name: folder
          required: false
          type: string
        - description: A comma separated list of folder ID GUIDs.
          in: query
          name: folder_ids
          required: false
          type: string
        - description: ''
          in: query
          name: folder_types
          required: false
          type: string
        - description: 'Start of the search date range. Only returns templates created on or after this date/time. If no value is specified, there is no limit on the earliest date created.'
          in: query
          name: from_date
          required: false
          type: string
        - description: |
            A comma-separated list
            of additional template attributes
            to include in the response.
            Valid values are:

            * custom_fields
            * documents
            * folders
            * notifications
            * recipients
          in: query
          name: include
          required: false
          type: string
        - description: 'Sets the direction order used to sort the list. Valid values are: -asc = ascending sort order (a to z)  -desc = descending sort order (z to a)'
          in: query
          name: order
          required: false
          type: string
        - description: 'Sets the file attribute used to sort the list. Valid values are:  -name: template name  -modified: date/time template was last modified.  -used: date/time the template was last used.'
          in: query
          name: order_by
          required: false
          type: string
        - description: The search text used to search the names of templates.
          in: query
          name: search_text
          required: false
          type: string
        - description: ''
          in: query
          name: shared
          required: false
          type: string
        - description: 'If true, the response only includes templates shared by the user. If false, the response only returns template not shared by the user. If not specified, the response is not affected.'
          in: query
          name: shared_by_me
          required: false
          type: string
        - description: The starting index for the first template shown in the response. This must be greater than or equal to 0 (zero).
          in: query
          name: start_position
          required: false
          type: string
        - description: 'End of the search date range. Only returns templates created up to this date/time. If no value is provided, this defaults to the current date.'
          in: query
          name: to_date
          required: false
          type: string
        - description: 'Start of the search date range. Only returns templates used or edited on or after this date/time. If no value is specified, there is no limit on the earliest date used.'
          in: query
          name: used_from_date
          required: false
          type: string
        - description: 'End of the search date range. Only returns templates used or edited up to this date/time. If no value is provided, this defaults to the current date.'
          in: query
          name: used_to_date
          required: false
          type: string
        - description: 'Sets if the templates shown in the response Valid values are:  -owned_by_me: only shows templates the user owns.  -shared_with_me: only shows templates that are shared with the user.  -all: shows all templates owned or shared with the user.'
          in: query
          name: user_filter
          required: false
          type: string
        - description: ''
          in: query
          name: user_id
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/envelopeTemplateResults'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets the definition of a template.
      tags:
        - Templates
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: ListTemplates
      x-ds-service: Templates
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: |-
        Creates a template definition using a multipart request.

        ### Template Email Subject Merge Fields

        Call this endpoint to insert a recipient name and email address merge fields into the email subject line when creating or sending from a template.

        The merge fields, based on the recipient's role name, are added to the `emailSubject` property when the template is created or when the template is used to create an envelope. After a template sender adds the name and email information for the recipient and sends the envelope, the recipient information is automatically merged into the appropriate fields in the email subject line.

        Both the sender and the recipients will see the information in the email subject line for any emails associated with the template. This provides an easy way for senders to organize their envelope emails without having to open an envelope to check the recipient.
        ###### Note: If merging the recipient information into the subject line causes the subject line to exceed 100 characters, then any characters over the 100 character limit are not included in the subject line. For cases where the recipient name or email is expected to be long, you should consider placing the merge field at the start of the email subject.

        To add a recipient's name in the subject line add the following text in the `emailSubject` property when creating the template or when sending an envelope from a template:

        `[[<roleName>_UserName]]`

        Example:

        `"emailSubject":"[[Signer 1_UserName]], Please sign this NDA",`

        To add a recipient's email address in the subject line add the following text in the `emailSubject` property when creating the template or when sending an envelope from a template:

        `[[<roleName>_Email]]`

        Example:

        `"emailSubject":"[[Signer 1_Email]], Please sign this NDA",`


        In both cases the <roleName> is the recipient's contents of the `roleName` property in the template.

        For cases where another recipient (such as an Agent, Editor, or Intermediary recipient) is entering the name and email information for the recipient included in the email subject, then `[[<roleName>_UserName]]` or `[[<roleName>_Email]]` is shown in the email subject.
      operationId: Templates_PostTemplates
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: Templates
          required: false
          schema:
            $ref: '#/definitions/Templates'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/templateSummary'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Creates an envelope from a template.
      tags:
        - Templates
      x-ds-in-sdk: true
      x-ds-method: create
      x-ds-methodname: createTemplate
      x-ds-service: Templates
  '/v2/accounts/{accountId}/templates/{templateId}':
    get:
      consumes: []
      deprecated: false
      description: Retrieves the definition of the specified template.
      operationId: Templates_GetTemplate
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: 'A comma-separated list of additional template attributes to include in the response. Valid values are: recipients, folders, documents, custom_fields, and notifications.'
          in: query
          name: include
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/Templates'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets a list of templates for a specified account.
      tags:
        - Templates
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: get
      x-ds-service: Templates
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: Updates an existing template.
      operationId: Templates_PutTemplate
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: ''
          in: body
          name: Templates
          required: false
          schema:
            $ref: '#/definitions/Templates'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/templateUpdateSummary'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates an existing template.
      tags:
        - Templates
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: update
      x-ds-service: Templates
  '/v2/accounts/{accountId}/templates/{templateId}/custom_fields':
    delete:
      consumes: []
      deprecated: false
      description: Deletes envelope custom fields in a template.
      operationId: CustomFields_DeleteTemplateCustomFields
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: ''
          in: body
          name: templateCustomFields
          required: false
          schema:
            $ref: '#/definitions/templateCustomFields'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/TemplateCustomFields'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes envelope custom fields in a template.
      tags:
        - TemplateCustomFields
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteCustomFields
      x-ds-service: Templates
    get:
      consumes: []
      deprecated: false
      description: Retrieves the custom document field information from an existing template.
      operationId: CustomFields_GetTemplateCustomFields
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/TemplateCustomFields'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets the custom document fields from a template.
      tags:
        - TemplateCustomFields
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: listCustomFields
      x-ds-service: Templates
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: Creates custom document fields in an existing template document.
      operationId: CustomFields_PostTemplateCustomFields
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: ''
          in: body
          name: templateCustomFields
          required: false
          schema:
            $ref: '#/definitions/templateCustomFields'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/TemplateCustomFields'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Creates custom document fields in an existing template document.
      tags:
        - TemplateCustomFields
      x-ds-in-sdk: true
      x-ds-method: create
      x-ds-methodname: createCustomFields
      x-ds-service: Templates
    put:
      consumes: []
      deprecated: false
      description: |-
        Updates the custom fields in a template.

        Each custom field used in a template must have a unique name.
      operationId: CustomFields_PutTemplateCustomFields
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: ''
          in: body
          name: templateCustomFields
          required: false
          schema:
            $ref: '#/definitions/templateCustomFields'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/TemplateCustomFields'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates envelope custom fields in a template.
      tags:
        - TemplateCustomFields
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateCustomFields
      x-ds-service: Templates
  '/v2/accounts/{accountId}/templates/{templateId}/documents':
    delete:
      consumes: []
      deprecated: false
      description: Deletes one or more documents from an existing template.
      operationId: Documents_DeleteTemplateDocuments
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: ''
          in: body
          name: envelopeDefinition
          required: false
          schema:
            $ref: '#/definitions/envelopeDefinition'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/TemplateDocuments'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes documents from a template.
      tags:
        - TemplateDocuments
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteDocuments
      x-ds-service: Templates
    get:
      consumes: []
      deprecated: false
      description: Retrieves a list of documents associated with the specified template.
      operationId: Documents_GetTemplateDocuments
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/TemplateDocuments'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets a list of documents associated with a template.
      tags:
        - TemplateDocuments
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: listDocuments
      x-ds-service: Templates
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: Adds one or more documents to an existing template document.
      operationId: Documents_PutTemplateDocuments
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: |
            When **true**, document fields
            can be added or modified
            while adding or modifying envelope documents.
          in: query
          name: apply_document_fields
          required: false
          type: string
        - description: ''
          in: body
          name: envelopeDefinition
          required: false
          schema:
            $ref: '#/definitions/envelopeDefinition'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/TemplateDocuments'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Adds documents to a template document.
      tags:
        - TemplateDocuments
      x-ds-in-sdk: true
      x-ds-method: updateList
      x-ds-methodname: updateDocuments
      x-ds-service: Templates
  '/v2/accounts/{accountId}/templates/{templateId}/documents/{documentId}':
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves one or more PDF documents from the specified template.

        You can specify the ID of the document to retrieve or can specify `combined` to retrieve all documents in the template as one pdf.
      operationId: Documents_GetTemplateDocument
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the document being accessed.
          in: path
          name: documentId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: ''
          in: query
          name: encrypt
          required: false
          type: string
        - description: ''
          in: query
          name: show_changes
          required: false
          type: string
      produces:
        - application/pdf
      responses:
        '200':
          description: Successful response.
          schema:
            type: file
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets PDF documents from a template.
      tags:
        - TemplateDocuments
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getDocument
      x-ds-service: Templates
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: Adds the specified document to an existing template document.
      operationId: Documents_PutTemplateDocument
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the document being accessed.
          in: path
          name: documentId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: |
            When **true**, document fields
            can be added or modified
            while adding or modifying envelope documents.
          in: query
          name: apply_document_fields
          required: false
          type: string
        - description: ''
          in: query
          name: is_envelope_definition
          required: false
          type: string
        - description: ''
          in: body
          name: envelopeDefinition
          required: false
          schema:
            $ref: '#/definitions/envelopeDefinition'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/envelopeDocument'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Adds a document to a template document.
      tags:
        - TemplateDocuments
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateDocument
      x-ds-service: Templates
  '/v2/accounts/{accountId}/templates/{templateId}/documents/{documentId}/fields':
    delete:
      consumes: []
      deprecated: false
      description: Deletes custom document fields from an existing template document.
      operationId: DocumentFields_DeleteTemplateDocumentFields
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the document being accessed.
          in: path
          name: documentId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: ''
          in: body
          name: TemplateDocumentFields
          required: false
          schema:
            $ref: '#/definitions/TemplateDocumentFields'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/TemplateDocumentFields'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes custom document fields from an existing template document.
      tags:
        - TemplateDocumentFields
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteDocumentFields
      x-ds-service: Templates
    get:
      consumes: []
      deprecated: false
      description: Retrieves the custom document fields for an existing template document.
      operationId: DocumentFields_GetTemplateDocumentFields
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the document being accessed.
          in: path
          name: documentId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/TemplateDocumentFields'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets the custom document fields for a an existing template document.
      tags:
        - TemplateDocumentFields
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: listDocumentFields
      x-ds-service: Templates
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: Creates custom document fields in an existing template document.
      operationId: DocumentFields_PostTemplateDocumentFields
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the document being accessed.
          in: path
          name: documentId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: ''
          in: body
          name: TemplateDocumentFields
          required: false
          schema:
            $ref: '#/definitions/TemplateDocumentFields'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/TemplateDocumentFields'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Creates custom document fields in an existing template document.
      tags:
        - TemplateDocumentFields
      x-ds-in-sdk: true
      x-ds-method: create
      x-ds-methodname: createDocumentFields
      x-ds-service: Templates
    put:
      consumes: []
      deprecated: false
      description: Updates existing custom document fields in an existing template document.
      operationId: DocumentFields_PutTemplateDocumentFields
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the document being accessed.
          in: path
          name: documentId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: ''
          in: body
          name: TemplateDocumentFields
          required: false
          schema:
            $ref: '#/definitions/TemplateDocumentFields'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/TemplateDocumentFields'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates existing custom document fields in an existing template document.
      tags:
        - TemplateDocumentFields
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateDocumentFields
      x-ds-service: Templates
  '/v2/accounts/{accountId}/templates/{templateId}/documents/{documentId}/pages':
    get:
      consumes: []
      deprecated: false
      description: ''
      operationId: Pages_GetTemplatePageImages
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the document being accessed.
          in: path
          name: documentId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: The maximum number of results to be returned by this request.
          in: query
          name: count
          required: false
          type: string
        - description: Number of dots per inch for the resulting image. The default if not used is 94. The range is 1-310.
          in: query
          name: dpi
          required: false
          type: string
        - description: Sets the maximum height (in pixels) of the returned image.
          in: query
          name: max_height
          required: false
          type: string
        - description: Sets the maximum width (in pixels) of the returned image.
          in: query
          name: max_width
          required: false
          type: string
        - description: ''
          in: query
          name: nocache
          required: false
          type: string
        - description: ''
          in: query
          name: show_changes
          required: false
          type: string
        - description: The position within the total result set from which to start returning values. The value **thumbnail** may be used to return the page image.
          in: query
          name: start_position
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/pageImages'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Returns document page image(s) based on input.
      tags:
        - Templates
      x-ds-in-sdk: true
      x-ds-method: getPageImages
      x-ds-methodname: getPages
      x-ds-service: Templates
    parameters: []
  '/v2/accounts/{accountId}/templates/{templateId}/documents/{documentId}/pages/{pageNumber}':
    delete:
      consumes: []
      deprecated: false
      description: Deletes a page from a document in a template based on the page number.
      operationId: Pages_DeleteTemplatePage
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the document being accessed.
          in: path
          name: documentId
          required: true
          type: string
        - description: The page number being accessed.
          in: path
          name: pageNumber
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: ''
          in: body
          name: pageRequest
          required: false
          schema:
            $ref: '#/definitions/pageRequest'
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes a page from a document in an template.
      tags:
        - Templates
      x-ds-in-sdk: true
      x-ds-method: deleteDocumentPage
      x-ds-methodname: deleteDocumentPage
      x-ds-service: Templates
    parameters: []
  '/v2/accounts/{accountId}/templates/{templateId}/documents/{documentId}/pages/{pageNumber}/page_image':
    get:
      consumes: []
      deprecated: false
      description: Retrieves a page image for display from the specified template.
      operationId: Pages_GetTemplatePageImage
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the document being accessed.
          in: path
          name: documentId
          required: true
          type: string
        - description: The page number being accessed.
          in: path
          name: pageNumber
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: Number of dots per inch for the resulting image. The default if not used is 94. The range is 1-310.
          in: query
          name: dpi
          required: false
          type: string
        - description: Sets the maximum height (in pixels) of the returned image.
          in: query
          name: max_height
          required: false
          type: string
        - description: Sets the maximum width (in pixels) of the returned image.
          in: query
          name: max_width
          required: false
          type: string
        - description: ''
          in: query
          name: show_changes
          required: false
          type: string
      produces:
        - image/png
      responses:
        '200':
          description: Successful response.
          schema:
            type: file
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets a page image from a template for display.
      tags:
        - Templates
      x-ds-in-sdk: true
      x-ds-method: getDocumentPageImage
      x-ds-methodname: getDocumentPageImage
      x-ds-service: Templates
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: Rotates page image from a template for display. The page image can be rotated to the left or right.
      operationId: Pages_PutTemplatePageImage
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the document being accessed.
          in: path
          name: documentId
          required: true
          type: string
        - description: The page number being accessed.
          in: path
          name: pageNumber
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: ''
          in: body
          name: pageRequest
          required: false
          schema:
            $ref: '#/definitions/pageRequest'
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Rotates page image from a template for display.
      tags:
        - Templates
      x-ds-in-sdk: true
      x-ds-method: rotateDocumentPage
      x-ds-methodname: rotateDocumentPage
      x-ds-service: Templates
  '/v2/accounts/{accountId}/templates/{templateId}/documents/{documentId}/pages/{pageNumber}/tabs':
    get:
      consumes: []
      deprecated: false
      description: ''
      operationId: Tabs_GetTemplatePageTabs
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the document being accessed.
          in: path
          name: documentId
          required: true
          type: string
        - description: The page number being accessed.
          in: path
          name: pageNumber
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/TemplateDocumentTabs'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Returns tabs on the specified page.
      tags:
        - TemplateDocumentTabs
      x-ds-in-sdk: true
      x-ds-method: getByPage
      x-ds-methodname: getPageTabs
      x-ds-service: Templates
    parameters: []
  '/v2/accounts/{accountId}/templates/{templateId}/documents/{documentId}/tabs':
    get:
      consumes: []
      deprecated: false
      description: ''
      operationId: Tabs_GetTemplateDocumentTabs
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the document being accessed.
          in: path
          name: documentId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: ''
          in: query
          name: page_numbers
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/TemplateDocumentTabs'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Returns tabs on the document.
      tags:
        - TemplateDocumentTabs
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getDocumentTabs
      x-ds-service: Templates
    parameters: []
  '/v2/accounts/{accountId}/templates/{templateId}/lock':
    delete:
      consumes: []
      deprecated: false
      description: Deletes the lock from the specified template. The `X-DocuSign-Edit` header must be included in the request.
      operationId: Lock_DeleteTemplateLock
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: ''
          in: body
          name: lockRequest
          required: false
          schema:
            $ref: '#/definitions/lockRequest'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/TemplateLocks'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes a template lock.
      tags:
        - TemplateLocks
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteLock
      x-ds-service: Templates
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves general information about the template lock.

        If the call is made by the user who has the lock and the request has the same integrator key as original, then the `X-DocuSign-Edit` header  field and additional lock information is included in the response. This allows users to recover a lost editing session token and the `X-DocuSign-Edit` header.
      operationId: Lock_GetTemplateLock
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/TemplateLocks'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets template lock information.
      tags:
        - TemplateLocks
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getLock
      x-ds-service: Templates
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: |-
        Locks the specified template, and sets the time until the lock expires, to prevent other users or recipients from accessing and changing the template.

        ###### Note: Users must have envelope locking capability enabled to use this function (the userSetting property `canLockEnvelopes` must be set to **true** for the user).
      operationId: Lock_PostTemplateLock
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: ''
          in: body
          name: lockRequest
          required: false
          schema:
            $ref: '#/definitions/lockRequest'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/TemplateLocks'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Lock a template.
      tags:
        - TemplateLocks
      x-ds-in-sdk: true
      x-ds-method: create
      x-ds-methodname: createLock
      x-ds-service: Templates
    put:
      consumes: []
      deprecated: false
      description: Updates the lock duration time or update the `lockedByApp` property information for the specified template. The user and integrator key must match the user specified by the `lockByUser` property and integrator key information and the `X-DocuSign-Edit` header must be included or an error will be generated.
      operationId: Lock_PutTemplateLock
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: ''
          in: body
          name: lockRequest
          required: false
          schema:
            $ref: '#/definitions/lockRequest'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/TemplateLocks'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates a template lock.
      tags:
        - TemplateLocks
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateLock
      x-ds-service: Templates
  '/v2/accounts/{accountId}/templates/{templateId}/notification':
    get:
      consumes: []
      deprecated: false
      description: 'Retrieves the envelope notification, reminders and expirations, information for an existing template.'
      operationId: Notification_GetTemplatesTemplateIdNotification
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/notification'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets template notification information.
      tags:
        - Templates
      x-ds-in-sdk: true
      x-ds-method: getNotificationSettings
      x-ds-methodname: getNotificationSettings
      x-ds-service: Templates
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: Updates the notification structure for an existing template. Use this endpoint to set reminder and expiration notifications.
      operationId: Notification_PutTemplatesTemplateIdNotification
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: ''
          in: body
          name: templateNotificationRequest
          required: false
          schema:
            $ref: '#/definitions/templateNotificationRequest'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/notification'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates the notification  structure for an existing template.
      tags:
        - Templates
      x-ds-in-sdk: true
      x-ds-method: updateNotificationSettings
      x-ds-methodname: updateNotificationSettings
      x-ds-service: Templates
  '/v2/accounts/{accountId}/templates/{templateId}/recipients':
    delete:
      consumes: []
      deprecated: false
      description: 'Deletes one or more recipients from a template. Recipients to be deleted are listed in the request, with the `recipientId` being used as the key for deleting recipients.'
      operationId: Recipients_DeleteTemplateRecipients
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: ''
          in: body
          name: templateRecipients
          required: false
          schema:
            $ref: '#/definitions/templateRecipients'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/TemplateRecipients'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes recipients from a template.
      tags:
        - TemplateRecipients
      x-ds-in-sdk: true
      x-ds-method: deleteList
      x-ds-methodname: deleteRecipients
      x-ds-service: Templates
    get:
      consumes: []
      deprecated: false
      description: Retrieves the information for all recipients in the specified template.
      operationId: Recipients_GetTemplateRecipients
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: ' When set to **true** and `include_tabs` is set to **true**, all tabs with anchor tab properties are included in the response. '
          in: query
          name: include_anchor_tab_locations
          required: false
          type: string
        - description: ' When set to **true**, the extended properties are included in the response. '
          in: query
          name: include_extended
          required: false
          type: string
        - description: 'When set to **true**, the tab information associated with the recipient is included in the response.'
          in: query
          name: include_tabs
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/TemplateRecipients'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets recipient information from a template.
      tags:
        - TemplateRecipients
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: listRecipients
      x-ds-service: Templates
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: Adds one or more recipients to a template.
      operationId: Recipients_PostTemplateRecipients
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: 'When set to **true**, resends the   envelope if the new recipient''s routing order is before or the same as the envelope''s next recipient.'
          in: query
          name: resend_envelope
          required: false
          type: string
        - description: ''
          in: body
          name: templateRecipients
          required: false
          schema:
            $ref: '#/definitions/templateRecipients'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/TemplateRecipients'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Adds tabs for a recipient.
      tags:
        - TemplateRecipients
      x-ds-in-sdk: true
      x-ds-method: create
      x-ds-methodname: createRecipients
      x-ds-service: Templates
    put:
      consumes: []
      deprecated: false
      description: |-
        Updates recipients in a template. 

        You can edit the following properties: `email`, `userName`, `routingOrder`, `faxNumber`, `deliveryMethod`, `accessCode`, and `requireIdLookup`.
      operationId: Recipients_PutTemplateRecipients
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: 'When set to **true**, resends the   envelope if the new recipient''s routing order is before or the same as the envelope''s next recipient.'
          in: query
          name: resend_envelope
          required: false
          type: string
        - description: ''
          in: body
          name: templateRecipients
          required: false
          schema:
            $ref: '#/definitions/templateRecipients'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/recipientsUpdateSummary'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates recipients in a template.
      tags:
        - TemplateRecipients
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateRecipients
      x-ds-service: Templates
  '/v2/accounts/{accountId}/templates/{templateId}/recipients/document_visibility':
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: ''
      operationId: Recipients_PutTemplateRecipientsDocumentVisibility
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: ''
          in: body
          name: TemplateDocumentVisibility
          required: false
          schema:
            $ref: '#/definitions/TemplateDocumentVisibility'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/TemplateDocumentVisibility'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates document visibility for the recipients
      tags:
        - TemplateDocumentVisibility
      x-ds-in-sdk: true
      x-ds-method: updateList
      x-ds-methodname: updateTemplateRecipientsDocumentVisibility
      x-ds-service: Envelopes
  '/v2/accounts/{accountId}/templates/{templateId}/recipients/{recipientId}':
    delete:
      consumes: []
      deprecated: false
      description: Deletes the specified recipient file from the specified template.
      operationId: Recipients_DeleteTemplateRecipient
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The `recipientId` used when the envelope or template was created.
          in: path
          name: recipientId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: ''
          in: body
          name: templateRecipients
          required: false
          schema:
            $ref: '#/definitions/templateRecipients'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/TemplateRecipients'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes the specified recipient file from a template.
      tags:
        - TemplateRecipients
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteRecipient
      x-ds-service: Templates
    parameters: []
  '/v2/accounts/{accountId}/templates/{templateId}/recipients/{recipientId}/bulk_recipients':
    delete:
      consumes: []
      deprecated: false
      description: Deletes the bulk recipient list on a template.
      operationId: Recipients_DeleteTemplateBulkRecipientsFile
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The `recipientId` used when the envelope or template was created.
          in: path
          name: recipientId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/bulkRecipientsUpdateResponse'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes the bulk recipient list on a template.
      tags:
        - TemplateBulkRecipients
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteBulkRecipients
      x-ds-service: Templates
    get:
      consumes: []
      deprecated: false
      description: Retrieves the bulk recipient file information from a template that has a bulk recipient.
      operationId: Recipients_GetTemplateBulkRecipients
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The `recipientId` used when the envelope or template was created.
          in: path
          name: recipientId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: 'When set to **true**, the tab information associated with the recipient is included in the response.'
          in: query
          name: include_tabs
          required: false
          type: string
        - description: |
            Reserved for DocuSign.
          in: query
          name: start_position
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/TemplateBulkRecipients'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets the bulk recipient file from a template.
      tags:
        - TemplateBulkRecipients
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: listBulkRecipients
      x-ds-service: Templates
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: |-
        Updates the bulk recipients in a template using a file upload. The Content-Type supported for uploading a bulk recipient file is CSV (text/csv).

        The REST API does not support modifying individual rows or values in the bulk recipients file. It only allows the entire file to be added or replaced with a new file.
      operationId: Recipients_PutTemplateBulkRecipients
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The `recipientId` used when the envelope or template was created.
          in: path
          name: recipientId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: ''
          in: body
          name: bulkRecipientsRequest
          required: false
          schema:
            $ref: '#/definitions/bulkRecipientsRequest'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/bulkRecipientsSummaryResponse'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Adds or replaces the bulk recipients list in a template.
      tags:
        - TemplateBulkRecipients
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateBulkRecipients
      x-ds-service: Templates
  '/v2/accounts/{accountId}/templates/{templateId}/recipients/{recipientId}/document_visibility':
    get:
      consumes: []
      deprecated: false
      description: ''
      operationId: Recipients_GetTemplateRecipientDocumentVisibility
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The `recipientId` used when the envelope or template was created.
          in: path
          name: recipientId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeDocumentVisibility'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Returns document visibility for the recipients
      tags:
        - TemplateDocumentVisibility
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getTemplateRecipientDocumentVisibility
      x-ds-service: Envelopes
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: ''
      operationId: Recipients_PutTemplateRecipientDocumentVisibility
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The `recipientId` used when the envelope or template was created.
          in: path
          name: recipientId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: ''
          in: body
          name: TemplateDocumentVisibility
          required: false
          schema:
            $ref: '#/definitions/TemplateDocumentVisibility'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/TemplateDocumentVisibility'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates document visibility for the recipients
      tags:
        - TemplateDocumentVisibility
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateTemplateRecipientDocumentVisibility
      x-ds-service: Envelopes
  '/v2/accounts/{accountId}/templates/{templateId}/recipients/{recipientId}/tabs':
    delete:
      consumes: []
      deprecated: false
      description: Deletes one or more tabs associated with a recipient in a template.
      operationId: Recipients_DeleteTemplateRecipientTabs
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The `recipientId` used when the envelope or template was created.
          in: path
          name: recipientId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: ''
          in: body
          name: templateTabs
          required: false
          schema:
            $ref: '#/definitions/templateTabs'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/TemplateRecipientTabs'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes the tabs associated with a recipient in a template.
      tags:
        - TemplateRecipientTabs
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteTabs
      x-ds-service: Templates
    get:
      consumes: []
      deprecated: false
      description: Gets the tabs information for a signer or sign-in-person recipient in a template.
      operationId: Recipients_GetTemplateRecipientTabs
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The `recipientId` used when the envelope or template was created.
          in: path
          name: recipientId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: 'When set to **true**, all tabs with anchor tab properties are included in the response. '
          in: query
          name: include_anchor_tab_locations
          required: false
          type: string
        - description: |
            Reserved for DocuSign.
          in: query
          name: include_metadata
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/TemplateRecipientTabs'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets the tabs information for a signer or sign-in-person recipient in a template.
      tags:
        - TemplateRecipientTabs
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: listTabs
      x-ds-service: Templates
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: Adds one or more tabs for a recipient.
      operationId: Recipients_PostTemplateRecipientTabs
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The `recipientId` used when the envelope or template was created.
          in: path
          name: recipientId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: ''
          in: body
          name: templateTabs
          required: false
          schema:
            $ref: '#/definitions/templateTabs'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/TemplateRecipientTabs'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Adds tabs for a recipient.
      tags:
        - TemplateRecipientTabs
      x-ds-in-sdk: true
      x-ds-method: create
      x-ds-methodname: createTabs
      x-ds-service: Templates
    put:
      consumes: []
      deprecated: false
      description: Updates one or more tabs for a recipient in a template.
      operationId: Recipients_PutTemplateRecipientTabs
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The `recipientId` used when the envelope or template was created.
          in: path
          name: recipientId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: ''
          in: body
          name: templateTabs
          required: false
          schema:
            $ref: '#/definitions/templateTabs'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/TemplateRecipientTabs'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates the tabs for a recipient.
      tags:
        - TemplateRecipientTabs
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateTabs
      x-ds-service: Templates
  '/v2/accounts/{accountId}/templates/{templateId}/views/edit':
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: ''
      operationId: Views_PostTemplateEditView
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: ''
          in: body
          name: returnUrlRequest
          required: false
          schema:
            $ref: '#/definitions/returnUrlRequest'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/TemplateViews'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Provides a URL to start an edit view of the Template UI
      tags:
        - TemplateViews
      x-ds-in-sdk: true
      x-ds-method: createEdit
      x-ds-methodname: createEditView
      x-ds-service: Templates
  '/v2/accounts/{accountId}/templates/{templateId}/{templatePart}':
    delete:
      consumes: []
      deprecated: false
      description: Removes a member group's sharing permissions for a specified template.
      operationId: Templates_DeleteTemplatePart
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: 'Currently, the only defined part is **groups**.'
          in: path
          name: templatePart
          required: true
          type: string
        - description: ''
          in: body
          name: Groups
          required: false
          schema:
            $ref: '#/definitions/Groups'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/Groups'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Removes a member group's sharing permissions for a template.
      tags:
        - Templates
      x-ds-in-sdk: true
      x-ds-method: deleteGroupShare
      x-ds-methodname: deleteGroupShare
      x-ds-service: Templates
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: Shares a template with the specified members group.
      operationId: Templates_PutTemplatePart
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the template being accessed.
          in: path
          name: templateId
          required: true
          type: string
        - description: 'Currently, the only defined part is **groups**.'
          in: path
          name: templatePart
          required: true
          type: string
        - description: ''
          in: body
          name: Groups
          required: false
          schema:
            $ref: '#/definitions/Groups'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/Groups'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Shares a template with a group
      tags:
        - Templates
      x-ds-in-sdk: true
      x-ds-method: updateGroupShare
      x-ds-methodname: updateGroupShare
      x-ds-service: Templates
  '/v2/accounts/{accountId}/unsupported_file_types':
    get:
      consumes: []
      deprecated: false
      description: Retrieves a list of file types (mime-types and file-extensions) that are not supported for upload through the DocuSign system.
      operationId: UnsupportedFileTypes_GetUnsupportedFileTypes
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/fileTypeList'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets a list of unsupported file types.
      tags:
        - Accounts
      x-ds-in-sdk: true
      x-ds-method: listUnsupportedFileTypes
      x-ds-methodname: listUnsupportedFileTypes
      x-ds-service: Accounts
    parameters: []
  '/v2/accounts/{accountId}/users':
    delete:
      consumes: []
      deprecated: false
      description: |-
        This closes one or more user records in the account. Users are never deleted from an account, but closing a user prevents them from using account functions.

        The response returns whether the API execution was successful (200 - OK) or  if it failed. The response contains a user structure similar to the request and includes the user changes. If an error occurred during the DELETE operation for any of the users, the response for that user contains an `errorDetails` node with `errorCode` and `message` properties.
      operationId: Users_DeleteUsers
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: userInfoList
          required: false
          schema:
            $ref: '#/definitions/userInfoList'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/GroupUsers'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Removes users account privileges.
      tags:
        - Users
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: delete
      x-ds-service: Users
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves the list of users for the specified account.

        The response returns the list of users for the account along with the information about the result set. If the `additional_info` query was added to the endpoint and set to **true**, the full user information is returned for each user
      operationId: Users_GetUsers
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'When set to **true**, the full list of user information is returned for each user in the account.'
          in: query
          name: additional_info
          required: false
          type: string
        - description: 'Number of records to return. The number must be greater than 0 and less than or equal to 100. '
          in: query
          name: count
          required: false
          type: string
        - description: ''
          in: query
          name: email
          required: false
          type: string
        - description: Filters the returned user records by the email address or a sub-string of email address.
          in: query
          name: email_substring
          required: false
          type: string
        - description: Filters user records returned by one or more group Id's.
          in: query
          name: group_id
          required: false
          type: string
        - description: ''
          in: query
          name: include_usersettings_for_csv
          required: false
          type: string
        - description: ''
          in: query
          name: login_status
          required: false
          type: string
        - description: ''
          in: query
          name: not_group_id
          required: false
          type: string
        - description: 'Starting value for the list. '
          in: query
          name: start_position
          required: false
          type: string
        - description: |
            Filters the results by user status.
            You can specify a comma-separated
            list of the following statuses:

            * ActivationRequired 
            * ActivationSent 
            * Active
            * Closed 
            * Disabled
          in: query
          name: status
          required: false
          type: string
        - description: Filters the user records returned by the user name or a sub-string of user name.
          in: query
          name: user_name_substring
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/userInformationList'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Retrieves the list of users for the specified account.
      tags:
        - Users
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: list
      x-ds-service: Users
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: Adds new users to your account. Set the `userSettings` property in the request to specify the actions the users can perform on the account.
      operationId: Users_PostUsers
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: newUsersDefinition
          required: false
          schema:
            $ref: '#/definitions/newUsersDefinition'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/newUsersSummary'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Adds news user to the specified account.
      tags:
        - Users
      x-ds-in-sdk: true
      x-ds-method: create
      x-ds-methodname: create
      x-ds-service: Users
    put:
      consumes: []
      deprecated: false
      description: ''
      operationId: Users_PutUsers
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: userInformationList
          required: false
          schema:
            $ref: '#/definitions/userInformationList'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/userInformationList'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Change one or more user in the specified account.
      tags:
        - Users
      x-ds-in-sdk: true
      x-ds-method: updateList
      x-ds-methodname: updateUsers
      x-ds-service: Users
  '/v2/accounts/{accountId}/users/{userId}':
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves the user information for the specified user. 

        To return additional user information that details the last login date, login status, and the user's password expiration date, set the optional `additional_info` query string parameter to **true**.
      operationId: User_GetUser
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
          in: path
          name: userId
          required: true
          type: string
        - description: 'When set to **true**, the full list of user information is returned for each user in the account.'
          in: query
          name: additional_info
          required: false
          type: string
        - description: ''
          in: query
          name: email
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/Users'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets the user information for a specified user.
      tags:
        - Users
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getInformation
      x-ds-service: Users
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: ''
      operationId: User_PutUser
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
          in: path
          name: userId
          required: true
          type: string
        - description: ''
          in: body
          name: Users
          required: false
          schema:
            $ref: '#/definitions/Users'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/Users'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates the specified user information.
      tags:
        - Users
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateUser
      x-ds-service: Users
  '/v2/accounts/{accountId}/users/{userId}/cloud_storage':
    delete:
      consumes: []
      deprecated: false
      description: 'Deletes the user authentication information for one or more cloud storage providers. The next time the user tries to access the cloud storage provider, they must pass normal authentication.'
      operationId: CloudStorage_DeleteCloudStorageProviders
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
          in: path
          name: userId
          required: true
          type: string
        - description: ''
          in: body
          name: CloudStorageProviders
          required: false
          schema:
            $ref: '#/definitions/CloudStorageProviders'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/CloudStorageProviders'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes the user authentication information for one or more cloud storage providers.
      tags:
        - CloudStorageProviders
      x-ds-in-sdk: true
      x-ds-method: deleteList
      x-ds-methodname: deleteProviders
      x-ds-service: CloudStorage
    get:
      consumes: []
      deprecated: false
      description: |
        Retrieves the list of cloud storage providers enabled for the account and the configuration information for the user.
      operationId: CloudStorage_GetCloudStorageProviders
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
          in: path
          name: userId
          required: true
          type: string
        - description: |2-
             The URL the user is redirected to after the cloud storage provider authenticates the user. Using this will append the redirectUrl to the authenticationUrl.

            The redirectUrl is restricted to URLs in the docusign.com or docusign.net domains.
             
          in: query
          name: redirectUrl
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/CloudStorageProviders'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Get the Cloud Storage Provider configuration for the specified user.
      tags:
        - CloudStorageProviders
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: listProviders
      x-ds-service: CloudStorage
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: Configures the redirect URL information  for one or more cloud storage providers for the specified user. The redirect URL is added to the authentication URL to complete the return route.
      operationId: CloudStorage_PostCloudStorage
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
          in: path
          name: userId
          required: true
          type: string
        - description: ''
          in: body
          name: CloudStorageProviders
          required: false
          schema:
            $ref: '#/definitions/CloudStorageProviders'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/CloudStorageProviders'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Configures the redirect URL information  for one or more cloud storage providers for the specified user.
      tags:
        - CloudStorageProviders
      x-ds-in-sdk: true
      x-ds-method: create
      x-ds-methodname: createProvider
      x-ds-service: CloudStorage
  '/v2/accounts/{accountId}/users/{userId}/cloud_storage/{serviceId}':
    delete:
      consumes: []
      deprecated: false
      description: 'Deletes the user authentication information for the specified cloud storage provider. The next time the user tries to access the cloud storage provider, they must pass normal authentication for this cloud storage provider.'
      operationId: CloudStorage_DeleteCloudStorage
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: |-
            The ID of the service to access. 

            Valid values are the service name ("Box") or the numerical serviceId ("4136").
          in: path
          name: serviceId
          required: true
          type: string
        - description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
          in: path
          name: userId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/CloudStorageProviders'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes the user authentication information for the specified cloud storage provider.
      tags:
        - CloudStorageProviders
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteProvider
      x-ds-service: CloudStorage
    get:
      consumes: []
      deprecated: false
      description: Retrieves the list of cloud storage providers enabled for the account and the configuration information for the user.
      operationId: CloudStorage_GetCloudStorage
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: |-
            The ID of the service to access. 

            Valid values are the service name ("Box") or the numerical serviceId ("4136").
          in: path
          name: serviceId
          required: true
          type: string
        - description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
          in: path
          name: userId
          required: true
          type: string
        - description: |2-
             The URL the user is redirected to after the cloud storage provider authenticates the user. Using this will append the redirectUrl to the authenticationUrl.

            The redirectUrl is restricted to URLs in the docusign.com or docusign.net domains.
             
          in: query
          name: redirectUrl
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/CloudStorageProviders'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets the specified Cloud Storage Provider configuration for the User.
      tags:
        - CloudStorageProviders
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getProvider
      x-ds-service: CloudStorage
    parameters: []
  '/v2/accounts/{accountId}/users/{userId}/cloud_storage/{serviceId}/folders':
    get:
      consumes: []
      deprecated: false
      description: 'Retrieves a list of all the items in a specified folder from the specified cloud storage provider. '
      operationId: CloudStorageFolder_GetCloudStorageFolderAll
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: |-
            The ID of the service to access. 

            Valid values are the service name ("Box") or the numerical serviceId ("4136").
          in: path
          name: serviceId
          required: true
          type: string
        - description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
          in: path
          name: userId
          required: true
          type: string
        - description: 'A comma separated list of folder IDs included in the request. '
          in: query
          name: cloud_storage_folder_path
          required: false
          type: string
        - description: |-
            An optional value that sets how many items are included in the response. 

            The default setting for this is 25. 
          in: query
          name: count
          required: false
          type: string
        - description: |-
            An optional value that sets the direction order used to sort the item list. 

            Valid values are: 

            * asc = ascending sort order
            * desc = descending sort order 
          in: query
          name: order
          required: false
          type: string
        - description: |-
            An optional value that sets the file attribute used to sort the item list. 

            Valid values are: 

            * modified
            * name  
          in: query
          name: order_by
          required: false
          type: string
        - description: ''
          in: query
          name: search_text
          required: false
          type: string
        - description: 'Indicates the starting point of the first item included in the response set. It uses a 0-based index. The default setting for this is 0.  '
          in: query
          name: start_position
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/CloudStorage'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Retrieves a list of all the items in a specified folder from the specified cloud storage provider.
      tags:
        - CloudStorage
      x-ds-in-sdk: true
      x-ds-method: listFolders
      x-ds-methodname: listFolders
      x-ds-service: CloudStorage
    parameters: []
  '/v2/accounts/{accountId}/users/{userId}/cloud_storage/{serviceId}/folders/{folderId}':
    get:
      consumes: []
      deprecated: false
      description: Retrieves a list of all the items in all  the folders associated with the user from the specified cloud storage provider. You can limit the scope of the returned items by providing a comma separated list of folder IDs in the request.
      operationId: CloudStorageFolder_GetCloudStorageFolder
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the folder being accessed.
          in: path
          name: folderId
          required: true
          type: string
        - description: |-
            The ID of the service to access. 

            Valid values are the service name ("Box") or the numerical serviceId ("4136").
          in: path
          name: serviceId
          required: true
          type: string
        - description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
          in: path
          name: userId
          required: true
          type: string
        - description: ''
          in: query
          name: cloud_storage_folder_path
          required: false
          type: string
        - description: |-
            An optional value that sets how many items are included in the response. 

            The default setting for this is 25. 
          in: query
          name: count
          required: false
          type: string
        - description: |-
            An optional value that sets the direction order used to sort the item list. 

            Valid values are: 

            * asc = ascending sort order
            * desc = descending sort order 
          in: query
          name: order
          required: false
          type: string
        - description: |-
            An optional value that sets the file attribute used to sort the item list. 

            Valid values are: 

            * modified
            * name  
          in: query
          name: order_by
          required: false
          type: string
        - description: ''
          in: query
          name: search_text
          required: false
          type: string
        - description: 'Indicates the starting point of the first item included in the response set. It uses a 0-based index. The default setting for this is 0.  '
          in: query
          name: start_position
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/CloudStorage'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets a list of all the items from the specified cloud storage provider.
      tags:
        - CloudStorage
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: list
      x-ds-service: CloudStorage
    parameters: []
  '/v2/accounts/{accountId}/users/{userId}/custom_settings':
    delete:
      consumes: []
      deprecated: false
      description: |-
        Deletes the specified custom user settings for a single user.

        ###Deleting Grouped Custom User Settings###

        If the custom user settings you want to delete are grouped, you must include the following information in the header, after Content-Type, in the request:

        `X-DocuSign-User-Settings-Key:group_name`

        Where the `group_name` is your designated name for the group of customer user settings.

        If the extra header information is not included, only the custom user settings that were added without a group are deleted.
      operationId: UserCustomSettings_DeleteCustomSettings
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
          in: path
          name: userId
          required: true
          type: string
        - description: ''
          in: body
          name: UserCustomSettings
          required: false
          schema:
            $ref: '#/definitions/UserCustomSettings'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/UserCustomSettings'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes custom user settings for a specified user.
      tags:
        - UserCustomSettings
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteCustomSettings
      x-ds-service: Users
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves a list of custom user settings for a single user.

        Custom settings provide a flexible way to store and retrieve custom user information that can be used in your own system.

        ###### Note: Custom user settings are not the same as user account settings.

        ###Getting Grouped Custom User Settings###

        If the custom user settings you want to retrieve are grouped, you must include the following information in the header, after Content-Type, in the request:

        `X-DocuSign-User-Settings-Key:group_name`

        Where the `group_name` is your designated name for the group of customer user settings.

        If the extra header information is not included, only the custom user settings that were added without a group are retrieved.
      operationId: UserCustomSettings_GetCustomSettings
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
          in: path
          name: userId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/UserCustomSettings'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Retrieves the custom user settings for a specified user.
      tags:
        - UserCustomSettings
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: listCustomSettings
      x-ds-service: Users
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: |-
        Adds or updates custom user settings for the specified user.

        ###### Note: Custom user settings are not the same as user account settings.

        Custom settings provide a flexible way to store and retrieve custom user information that you can use in your own system.

        **Important**: There is a limit on the size for all the custom user settings for a single user. The limit is 4,000 characters, which includes the XML and JSON structure for the settings.

        ### Grouping Custom User Settings ###

        You can group custom user settings when adding them. Grouping allows you to retrieve settings that are in a specific group, instead of retrieving all the user custom settings.

        To group custom user settings, add the following information in the header, after Content-Type:

        `X-DocuSign-User-Settings-Key:group_name`

        Where the `group_name` is your designated name for the group of customer user settings. Grouping is shown in the Example Request Body below.

        When getting or deleting grouped custom user settings, you must include the extra header information.

        Grouping custom user settings is not required and if the extra header information is not included, the custom user settings are added normally and can be retrieved or deleted without including the additional header.
      operationId: UserCustomSettings_PutCustomSettings
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
          in: path
          name: userId
          required: true
          type: string
        - description: ''
          in: body
          name: UserCustomSettings
          required: false
          schema:
            $ref: '#/definitions/UserCustomSettings'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/UserCustomSettings'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Adds or updates custom user settings for the specified user.
      tags:
        - UserCustomSettings
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateCustomSettings
      x-ds-service: Users
  '/v2/accounts/{accountId}/users/{userId}/profile':
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves the user profile information, the privacy settings and personal information (address, phone number, etc.) for the specified user.

        The userId parameter specified in the endpoint must match the authenticated user's user ID and the user must be a member of the specified account.
      operationId: UserProfile_GetProfile
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
          in: path
          name: userId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/UserProfiles'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Retrieves the user profile for a specified user.
      tags:
        - UserProfiles
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getProfile
      x-ds-service: Users
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: |-
        Updates the user's detail information, profile information, privacy settings, and personal information in the user ID card.

        You can also change a user's name by changing the information in the `userDetails` property. When changing a user's name, you can either change the information in the `userName` property OR change the information in `firstName`, `middleName`, `lastName, suffixName`, and `title` properties. Changes to `firstName`, `middleName`, `lastName`, `suffixName`, and `title` properties take precedence over changes to the `userName` property.
      operationId: UserProfile_PutProfile
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
          in: path
          name: userId
          required: true
          type: string
        - description: ''
          in: body
          name: UserProfiles
          required: false
          schema:
            $ref: '#/definitions/UserProfiles'
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates the user profile information for the specified user.
      tags:
        - UserProfiles
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateProfile
      x-ds-service: Users
  '/v2/accounts/{accountId}/users/{userId}/profile/image':
    delete:
      consumes: []
      deprecated: false
      description: |-
        Deletes the user profile image from the  specified user's profile.

        The userId parameter specified in the endpoint must match the authenticated user's user ID and the user must be a member of the specified account.
      operationId: UserProfileImage_DeleteUserProfileImage
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
          in: path
          name: userId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes the user profile image for the specified user.
      tags:
        - Users
      x-ds-in-sdk: true
      x-ds-method: deleteProfileImage
      x-ds-methodname: deleteProfileImage
      x-ds-service: Users
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves the user profile picture for the specified user. The image is returned in the same format as uploaded.

        The userId parameter specified in the endpoint must match the authenticated user's user ID and the user must be a member of the specified account.

        If successful, the response returns a 200 - OK and the user profile image.
      operationId: UserProfileImage_GetUserProfileImage
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
          in: path
          name: userId
          required: true
          type: string
        - description: ''
          in: query
          name: encoding
          required: false
          type: string
      produces:
        - image/gif
      responses:
        '200':
          description: Successful response.
          schema:
            type: file
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Retrieves the user profile image for the specified user.
      tags:
        - Users
      x-ds-in-sdk: true
      x-ds-method: getProfileImage
      x-ds-methodname: getProfileImage
      x-ds-service: Users
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: |-
        Updates the user profile image by uploading an image to the user profile.

        The supported image formats are: gif, png, jpeg, and bmp. The file must be less than 200K. For best viewing results, DocuSign recommends that the image is no more than 79 pixels wide and high.
      operationId: UserProfileImage_PutUserProfileImage
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
          in: path
          name: userId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates the user profile image for a specified user.
      tags:
        - Users
      x-ds-in-sdk: true
      x-ds-method: updateProfileImage
      x-ds-methodname: updateProfileImage
      x-ds-service: Users
  '/v2/accounts/{accountId}/users/{userId}/settings':
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves a list of the account settings and email notification information for the specified user.

        The response returns the account setting name/value information and the email notification settings for the specified user. For more information about the different user settings, see the [ML:userSettings list].
      operationId: UserSettings_GetUserSettings
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
          in: path
          name: userId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/userSettingsInformation'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets the user account settings for a specified user.
      tags:
        - Users
      x-ds-in-sdk: true
      x-ds-method: getSettings
      x-ds-methodname: getSettings
      x-ds-service: Users
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: Updates the account settings list and email notification types for the specified user.
      operationId: UserSettings_PutUserSettings
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
          in: path
          name: userId
          required: true
          type: string
        - description: ''
          in: body
          name: userSettingsInformation
          required: false
          schema:
            $ref: '#/definitions/userSettingsInformation'
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates the user account settings for a specified user.
      tags:
        - Users
      x-ds-in-sdk: true
      x-ds-method: updateSettings
      x-ds-methodname: updateSettings
      x-ds-service: Users
  '/v2/accounts/{accountId}/users/{userId}/signatures':
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves the signature definitions for the specified user.

        The userId parameter specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.

        The `signatureId` parameter accepts a signature ID or a signature name. DocuSign recommends you use signature ID (`signatureId`), since some names contain characters that do not properly encode into a URL. If you use the user name, it is likely that the name includes spaces. In that case, URL encode the name before using it in the endpoint. 

        For example encode "Bob Smith" as "Bob%20Smith".
      operationId: UserSignatures_GetUserSignatures
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
          in: path
          name: userId
          required: true
          type: string
        - description: ''
          in: query
          name: stamp_type
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/userSignaturesInformation'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Retrieves a list of user signature definitions for a specified user.
      tags:
        - UserSignatures
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: listSignatures
      x-ds-service: Users
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: |-
        Adds a user signature image and/or user initials image to the specified user. 

        The userId property specified in the endpoint must match the authenticated user's userId and the user must be a member of the account.

        The rules and processes associated with this are:

        * If Content-Type is set to application/json, then the default behavior for creating a default signature image, based on the name and a DocuSign font, is used.
        * If Content-Type is set to multipart/form-data, then the request must contain a first part with the user signature information, followed by parts that contain the images.

        For each Image part, the Content-Disposition header has a "filename" value that is used to map to the `signatureName` and/or `signatureInitials` properties in the JSON to the image. 

        For example: 
        `Content-Disposition: file; filename="Ron Test20121127083900"`

        If no matching image (by filename value) is found, then the image is not set. One, both, or neither of the signature and initials images can be set with this call.

        The Content-Transfer-Encoding: base64 header, set in the header for the part containing the image, can be set to indicate that the images are formatted as base64 instead of as binary.

        If successful, 200-OK is returned, and a JSON structure containing the signature information is provided, note that the signatureId can change with each API POST, PUT, or DELETE since the changes to the signature structure cause the current signature to be closed, and a new signature record to be created.
      operationId: UserSignatures_PostUserSignatures
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
          in: path
          name: userId
          required: true
          type: string
        - description: ''
          in: body
          name: userSignaturesInformation
          required: false
          schema:
            $ref: '#/definitions/userSignaturesInformation'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/userSignaturesInformation'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Adds user Signature and initials images to a Signature.
      tags:
        - UserSignatures
      x-ds-in-sdk: true
      x-ds-method: create
      x-ds-methodname: createSignatures
      x-ds-service: Users
    put:
      consumes: []
      deprecated: false
      description: ''
      operationId: UserSignatures_PutUserSignature
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
          in: path
          name: userId
          required: true
          type: string
        - description: ''
          in: body
          name: userSignaturesInformation
          required: false
          schema:
            $ref: '#/definitions/userSignaturesInformation'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/userSignaturesInformation'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Adds/updates a user signature.
      tags:
        - UserSignatures
      x-ds-in-sdk: true
      x-ds-method: updateList
      x-ds-methodname: updateSignatures
      x-ds-service: Users
  '/v2/accounts/{accountId}/users/{userId}/signatures/{signatureId}':
    delete:
      consumes: []
      deprecated: false
      description: |-
        Removes the signature information for the user.

        The userId parameter specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.

        The `signatureId` accepts a signature ID or a signature name. DocuSign recommends you use signature ID (`signatureId`), since some names contain characters that do not properly encode into a URL. If you use the user name, it is likely that the name includes spaces. In that case, URL encode the name before using it in the endpoint. 

        For example encode "Bob Smith" as "Bob%20Smith".
      operationId: UserSignatures_DeleteUserSignature
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the signature being accessed.
          in: path
          name: signatureId
          required: true
          type: string
        - description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
          in: path
          name: userId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Removes removes signature information for the specified user.
      tags:
        - UserSignatures
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteSignature
      x-ds-service: Users
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves the structure of a single signature with a known signature name.

        The userId specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.

        The `signatureId` parameter accepts a signature ID or a signature name. DocuSign recommends you use signature ID (`signatureId`), since some names contain characters that do not properly encode into a URL. If you use the user name, it is likely that the name includes spaces. In that case, URL encode the name before using it in the endpoint. 

        For example encode "Bob Smith" as "Bob%20Smith".
      operationId: UserSignatures_GetUserSignature
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the signature being accessed.
          in: path
          name: signatureId
          required: true
          type: string
        - description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
          in: path
          name: userId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/UserSignatures'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets the user signature information for the specified user.
      tags:
        - UserSignatures
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getSignature
      x-ds-service: Users
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: |-
        Creates, or updates, the signature font and initials for the specified user. When creating a signature, you use this resource to create the signature name and then add the signature and initials images into the signature.

        ###### Note: This will also create a default signature for the user when one does not exist.

        The userId property specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.

        The `signatureId` parameter accepts a signature ID or a signature name. DocuSign recommends you use signature ID (`signatureId`), since some names contain characters that do not properly encode into a URL. If you use the user name, it is likely that the name includes spaces. In that case, URL encode the name before using it in the endpoint. 

        For example encode "Bob Smith" as "Bob%20Smith".
      operationId: UserSignatures_PutUserSignatureById
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the signature being accessed.
          in: path
          name: signatureId
          required: true
          type: string
        - description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
          in: path
          name: userId
          required: true
          type: string
        - description: 'When set to **true**, closes the current signature.'
          in: query
          name: close_existing_signature
          required: false
          type: string
        - description: ''
          in: body
          name: userSignatureDefinition
          required: false
          schema:
            $ref: '#/definitions/userSignatureDefinition'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/UserSignatures'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates the user signature for a specified user.
      tags:
        - UserSignatures
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateSignature
      x-ds-service: Users
  '/v2/accounts/{accountId}/users/{userId}/signatures/{signatureId}/{imageType}':
    delete:
      consumes: []
      deprecated: false
      description: |-
        Deletes the specified initials image or signature image for the specified user.

        The function deletes one or the other of the image types, to delete both the initials image and signature image you must call the endpoint twice.

        The userId parameter specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.

        The `signatureId` parameter accepts a signature ID or a signature name. DocuSign recommends you use signature ID (`signatureId`), since some names contain characters that do not properly encode into a URL. If you use the user name, it is likely that the name includes spaces. In that case, URL encode the name before using it in the endpoint. 

        For example encode "Bob Smith" as "Bob%20Smith".
      operationId: UserSignatures_DeleteUserSignatureImage
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: One of **signature_image** or **initials_image**.
          in: path
          name: imageType
          required: true
          type: string
        - description: The ID of the signature being accessed.
          in: path
          name: signatureId
          required: true
          type: string
        - description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
          in: path
          name: userId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/UserSignatures'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes the user initials image or the  user signature image for the specified user.
      tags:
        - UserSignatures
      x-ds-in-sdk: true
      x-ds-method: deleteImage
      x-ds-methodname: deleteSignatureImage
      x-ds-service: Users
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves the specified initials image or signature image for the specified user. The image is returned in the same format as uploaded. In the request you can specify if the chrome (the added line and identifier around the initial image) is returned with the image.

        The userId property specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.

        The `signatureId` parameter accepts a signature ID or a signature name. DocuSign recommends you use signature ID (`signatureId`), since some names contain characters that do not properly encode into a URL. If you use the user name, it is likely that the name includes spaces. In that case, URL encode the name before using it in the endpoint. 

        For example encode "Bob Smith" as "Bob%20Smith".

        ###### Note: Older envelopes might only have chromed images. If getting the non-chromed image fails, try getting the chromed image.
      operationId: UserSignatures_GetUserSignatureImage
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: One of **signature_image** or **initials_image**.
          in: path
          name: imageType
          required: true
          type: string
        - description: The ID of the signature being accessed.
          in: path
          name: signatureId
          required: true
          type: string
        - description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
          in: path
          name: userId
          required: true
          type: string
        - description: ''
          in: query
          name: include_chrome
          required: false
          type: string
      produces:
        - image/gif
      responses:
        '200':
          description: Successful response.
          schema:
            type: file
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Retrieves the user initials image or the  user signature image for the specified user.
      tags:
        - UserSignatures
      x-ds-in-sdk: true
      x-ds-method: getImage
      x-ds-methodname: getSignatureImage
      x-ds-service: Users
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: |
        Updates the user signature image or user initials image for the specified user. The supported image formats for this file are: gif, png, jpeg, and bmp. The file must be less than 200K.

        The userId property specified in the endpoint must match the authenticated user's user ID and the user must be a member of the account.

        The `signatureId` parameter accepts a signature ID or a signature name. DocuSign recommends you use signature ID (`signatureId`), since some names contain characters that do not properly encode into a URL. If you use the user name, it is likely that the name includes spaces. In that case, URL encode the name before using it in the endpoint. 

        For example encode "Bob Smith" as "Bob%20Smith".
      operationId: UserSignatures_PutUserSignatureImage
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: One of **signature_image** or **initials_image**.
          in: path
          name: imageType
          required: true
          type: string
        - description: The ID of the signature being accessed.
          in: path
          name: signatureId
          required: true
          type: string
        - description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
          in: path
          name: userId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/UserSignatures'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates the user signature image or user initials image for the specified user.
      tags:
        - UserSignatures
      x-ds-in-sdk: true
      x-ds-method: updateImage
      x-ds-methodname: updateSignatureImage
      x-ds-service: Users
  '/v2/accounts/{accountId}/users/{userId}/social':
    delete:
      consumes: []
      deprecated: false
      description: Deletes a social account from a use's account.
      operationId: UserSocialLogin_DeleteUserSocialLogin
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
          in: path
          name: userId
          required: true
          type: string
        - description: ''
          in: body
          name: UserSocialAccountLogins
          required: false
          schema:
            $ref: '#/definitions/UserSocialAccountLogins'
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes user's social account.
      tags:
        - UserSocialAccountLogins
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteSocialLogin
      x-ds-service: Authentication
    get:
      consumes: []
      deprecated: false
      description: Retrieves a list of social accounts linked to a user's account.
      operationId: UserSocialLogin_GetUserSocialLogin
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
          in: path
          name: userId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/userSocialIdResult'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets a list of a user's social accounts.
      tags:
        - UserSocialAccountLogins
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: listSocialLogins
      x-ds-service: Authentication
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: Adds a new social account to a user's account.
      operationId: UserSocialLogin_PutUserSocialLogin
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
          in: path
          name: userId
          required: true
          type: string
        - description: ''
          in: body
          name: UserSocialAccountLogins
          required: false
          schema:
            $ref: '#/definitions/UserSocialAccountLogins'
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Adds social account for a user.
      tags:
        - UserSocialAccountLogins
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateSocialLogin
      x-ds-service: Authentication
  '/v2/accounts/{accountId}/views/console':
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: Returns a URL that allows you to embed the authentication view of the DocuSign UI in your applications.
      operationId: Views_PostAccountConsoleView
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: consoleViewRequest
          required: false
          schema:
            $ref: '#/definitions/consoleViewRequest'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/EnvelopeViews'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Returns a URL to the authentication view UI.
      tags:
        - EnvelopeViews
      x-ds-examples:
        - description: |+
            The response contains the URL
            of the the account's cosole.

            The request body contains
            a `returnUrl`.
            This is the URL
            that the DocuSign platform
            will redirect the user to
            when the view is closed.

          direction: both
          format: json
          request:
            returnUrl: 'https://dsapp.example.com/return/from/console/view'
          response:
            url: 'https://demo.docusign.net/Member/StartInSession.aspx?StartConsole=1&t=644ea697-2541-46ea-a8a5-d95a5c23340b&accountid=624e3e00-36cb-4bcf-a4af-43918c520dab'
          style: custom
          title: Getting a Console View URL and Setting a Return URL
      x-ds-in-sdk: true
      x-ds-method: createConsole
      x-ds-methodname: createConsoleView
      x-ds-service: Envelopes
  '/v2/accounts/{accountId}/watermark':
    get:
      consumes: []
      deprecated: false
      description: ''
      operationId: Watermark_GetWatermark
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/AccountWatermarks'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Get watermark information.
      tags:
        - AccountWatermarks
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getWatermark
      x-ds-service: Accounts
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: ''
      operationId: Watermark_PutWatermark
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: AccountWatermarks
          required: false
          schema:
            $ref: '#/definitions/AccountWatermarks'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/AccountWatermarks'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Update watermark information.
      tags:
        - AccountWatermarks
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateWatermark
      x-ds-service: Accounts
  '/v2/accounts/{accountId}/watermark/preview':
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: ''
      operationId: WatermarkPreview_PutWatermarkPreview
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: AccountWatermarks
          required: false
          schema:
            $ref: '#/definitions/AccountWatermarks'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/AccountWatermarks'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Get watermark preview.
      tags:
        - AccountWatermarks
      x-ds-in-sdk: true
      x-ds-method: preview
      x-ds-methodname: getWatermarkPreview
      x-ds-service: Accounts
  '/v2/accounts/{accountId}/workspaces':
    get:
      consumes: []
      deprecated: false
      description: Gets information about the Workspaces that have been created.
      operationId: Workspace_GetWorkspaces
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/workspaceList'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: List Workspaces
      tags:
        - Workspaces
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: listWorkspaces
      x-ds-service: Workspaces
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: Creates a new workspace.
      operationId: Workspace_PostWorkspace
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: ''
          in: body
          name: Workspaces
          required: false
          schema:
            $ref: '#/definitions/Workspaces'
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/Workspaces'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Create a Workspace
      tags:
        - Workspaces
      x-ds-in-sdk: true
      x-ds-method: create
      x-ds-methodname: createWorkspace
      x-ds-service: Workspaces
  '/v2/accounts/{accountId}/workspaces/{workspaceId}':
    delete:
      consumes: []
      deprecated: false
      description: Deletes an existing workspace (logically).
      operationId: Workspace_DeleteWorkspace
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: Specifies the workspace ID GUID.
          in: path
          name: workspaceId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/Workspaces'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Delete Workspace
      tags:
        - Workspaces
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteWorkspace
      x-ds-service: Workspaces
    get:
      consumes: []
      deprecated: false
      description: 'Retrives properties about a workspace given a unique workspaceId. '
      operationId: Workspace_GetWorkspace
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: Specifies the workspace ID GUID.
          in: path
          name: workspaceId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/Workspaces'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Get Workspace
      tags:
        - Workspaces
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getWorkspace
      x-ds-service: Workspaces
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: Updates information about a specific workspace.
      operationId: Workspace_PutWorkspace
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: Specifies the workspace ID GUID.
          in: path
          name: workspaceId
          required: true
          type: string
        - description: ''
          in: body
          name: Workspaces
          required: false
          schema:
            $ref: '#/definitions/Workspaces'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/Workspaces'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Update Workspace
      tags:
        - Workspaces
      x-ds-in-sdk: true
      x-ds-method: update
      x-ds-methodname: updateWorkspace
      x-ds-service: Workspaces
  '/v2/accounts/{accountId}/workspaces/{workspaceId}/folders/{folderId}':
    delete:
      consumes: []
      deprecated: false
      description: ''
      operationId: WorkspaceFolder_DeleteWorkspaceItems
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the folder being accessed.
          in: path
          name: folderId
          required: true
          type: string
        - description: Specifies the workspace ID GUID.
          in: path
          name: workspaceId
          required: true
          type: string
        - description: ''
          in: body
          name: workspaceItemList
          required: false
          schema:
            $ref: '#/definitions/workspaceItemList'
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes workspace one or more specific files/folders from the given folder or root.
      tags:
        - WorkspaceItems
      x-ds-in-sdk: true
      x-ds-method: deleteFolderItems
      x-ds-methodname: deleteWorkspaceFolderItems
      x-ds-service: Workspaces
    get:
      consumes: []
      deprecated: false
      description: 'Retrieves workspace folder contents, which can include sub folders and files.'
      operationId: WorkspaceFolder_GetWorkspaceFolder
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the folder being accessed.
          in: path
          name: folderId
          required: true
          type: string
        - description: Specifies the workspace ID GUID.
          in: path
          name: workspaceId
          required: true
          type: string
        - description: The maximum number of results to be returned by this request.
          in: query
          name: count
          required: false
          type: string
        - description: 'When set to **true**, file information is returned in the response along with folder information. The default is **false**.'
          in: query
          name: include_files
          required: false
          type: string
        - description: 'When set to **true**, information about the sub-folders of the current folder is returned. The default is **false**.'
          in: query
          name: include_sub_folders
          required: false
          type: string
        - description: 'When set to **true**, thumbnails are returned as part of the response.  The default is **false**.'
          in: query
          name: include_thumbnails
          required: false
          type: string
        - description: Set to **true** to return extended details about the user. The default is **false**.
          in: query
          name: include_user_detail
          required: false
          type: string
        - description: The position within the total result set from which to start returning values.
          in: query
          name: start_position
          required: false
          type: string
        - description: 'If set, then the results are filtered to those associated with the specified userId.'
          in: query
          name: workspace_user_id
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/workspaceFolderContents'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: List Workspace Folder Contents
      tags:
        - WorkspaceItems
      x-ds-in-sdk: true
      x-ds-method: listFolderItems
      x-ds-methodname: listWorkspaceFolderItems
      x-ds-service: Workspaces
    parameters: []
  '/v2/accounts/{accountId}/workspaces/{workspaceId}/folders/{folderId}/files':
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: ''
      operationId: WorkspaceFile_PostWorkspaceFiles
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: The ID of the folder being accessed.
          in: path
          name: folderId
          required: true
          type: string
        - description: Specifies the workspace ID GUID.
          in: path
          name: workspaceId
          required: true
          type: string
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/WorkspaceItems'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Creates a workspace file.
      tags:
        - WorkspaceItems
      x-ds-in-sdk: true
      x-ds-method: createFIle
      x-ds-methodname: createWorkspaceFile
      x-ds-service: Workspaces
  '/v2/accounts/{accountId}/workspaces/{workspaceId}/folders/{folderId}/files/{fileId}':
    get:
      consumes: []
      deprecated: false
      description: Retrieves a workspace file (the binary).
      operationId: WorkspaceFile_GetWorkspaceFile
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: Specifies the room file ID GUID.
          in: path
          name: fileId
          required: true
          type: string
        - description: The ID of the folder being accessed.
          in: path
          name: folderId
          required: true
          type: string
        - description: Specifies the workspace ID GUID.
          in: path
          name: workspaceId
          required: true
          type: string
        - description: 'When set to **true**, the Content-Disposition header is set in the response. The value of the header provides the filename of the file. Default is **false**.'
          in: query
          name: is_download
          required: false
          type: string
        - description: When set to **true** the file returned as a PDF.
          in: query
          name: pdf_version
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Get Workspace File
      tags:
        - WorkspaceItems
      x-ds-in-sdk: true
      x-ds-method: getFile
      x-ds-methodname: getWorkspaceFile
      x-ds-service: Workspaces
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: Updates workspace item metadata for one or more specific files/folders.
      operationId: WorkspaceFile_PutWorkspaceFile
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: Specifies the room file ID GUID.
          in: path
          name: fileId
          required: true
          type: string
        - description: The ID of the folder being accessed.
          in: path
          name: folderId
          required: true
          type: string
        - description: Specifies the workspace ID GUID.
          in: path
          name: workspaceId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/WorkspaceItems'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Update Workspace File Metadata
      tags:
        - WorkspaceItems
      x-ds-in-sdk: true
      x-ds-method: updateFile
      x-ds-methodname: updateWorkspaceFile
      x-ds-service: Workspaces
  '/v2/accounts/{accountId}/workspaces/{workspaceId}/folders/{folderId}/files/{fileId}/pages':
    get:
      consumes: []
      deprecated: false
      description: Retrieves a workspace file as rasterized pages.
      operationId: WorkspaceFilePages_GetWorkspaceFilePages
      parameters:
        - description: The external account number (int) or account ID Guid.
          in: path
          name: accountId
          required: true
          type: string
        - description: Specifies the room file ID GUID.
          in: path
          name: fileId
          required: true
          type: string
        - description: The ID of the folder being accessed.
          in: path
          name: folderId
          required: true
          type: string
        - description: Specifies the workspace ID GUID.
          in: path
          name: workspaceId
          required: true
          type: string
        - description: The maximum number of results to be returned by this request.
          in: query
          name: count
          required: false
          type: string
        - description: Number of dots per inch for the resulting image. The default if not used is 94. The range is 1-310.
          in: query
          name: dpi
          required: false
          type: string
        - description: Sets the maximum height (in pixels) of the returned image.
          in: query
          name: max_height
          required: false
          type: string
        - description: Sets the maximum width (in pixels) of the returned image.
          in: query
          name: max_width
          required: false
          type: string
        - description: The position within the total result set from which to start returning values. The value **thumbnail** may be used to return the page image.
          in: query
          name: start_position
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/pageImages'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: List File Pages
      tags:
        - WorkspaceItems
      x-ds-in-sdk: true
      x-ds-method: listFilePages
      x-ds-methodname: listWorkspaceFilePages
      x-ds-service: Workspaces
    parameters: []
  /v2/billing_plans:
    get:
      consumes: []
      deprecated: false
      description: Retrieves a list of the billing plans associated with a distributor.
      operationId: BillingPlans_GetBillingPlans
      parameters: []
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/billingPlansResponse'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets the list of available billing plans.
      tags:
        - BillingPlans
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: listBillingPlans
      x-ds-service: Billing
    parameters: []
  '/v2/billing_plans/{billingPlanId}':
    get:
      consumes: []
      deprecated: false
      description: Retrieves the billing plan details for the specified billing plan ID.
      operationId: BillingPlans_GetBillingPlan
      parameters:
        - description: The ID of the billing plan being accessed.
          in: path
          name: billingPlanId
          required: true
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/billingPlanResponse'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Get the billing plan details.
      tags:
        - BillingPlans
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getBillingPlan
      x-ds-service: Billing
    parameters: []
  /v2/current_user/password_rules:
    get:
      consumes: []
      deprecated: false
      description: ''
      operationId: PasswordRules_GetPasswordRules
      parameters: []
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/userPasswordRules'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Get membership account password rules
      tags:
        - AccountPasswordRules
      x-ds-in-sdk: true
      x-ds-method: getForUser
      x-ds-methodname: getPasswordRules
      x-ds-service: Accounts
    parameters: []
  /v2/diagnostics/request_logs:
    delete:
      consumes: []
      deprecated: false
      description: Deletes the request log files.
      operationId: APIRequestLog_DeleteRequestLogs
      parameters: []
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Deletes the request log files.
      tags:
        - RequestLogs
      x-ds-in-sdk: true
      x-ds-method: delete
      x-ds-methodname: deleteRequestLogs
      x-ds-service: Diagnostics
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves a list of log entries as a JSON or xml object or as a zip file containing the entries.

        If the Accept header is set to application/zip, the response is a zip file containing individual text files, each representing an API request.

        If the Accept header is set to `application/json` or `application/xml`, the response returns list of log entries in either JSON or XML. An example JSON response body is shown below. 
      operationId: APIRequestLog_GetRequestLogs
      parameters:
        - description: ''
          in: query
          name: encoding
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/apiRequestLogsResult'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets the API request logging log files.
      tags:
        - RequestLogs
      x-ds-in-sdk: true
      x-ds-method: list
      x-ds-methodname: listRequestLogs
      x-ds-service: Diagnostics
    parameters: []
  '/v2/diagnostics/request_logs/{requestLogId}':
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves information for a single log entry.

        **Request**
        The `requestLogfId` property can be retrieved by getting the list of log entries. The Content-Transfer-Encoding header can be set to base64 to retrieve the API request/response as base 64 string. Otherwise the bytes of the request/response are returned.

        **Response**
        If the Content-Transfer-Encoding header was set to base64, the log is returned as a base64 string.
      operationId: APIRequestLog_GetRequestLog
      parameters:
        - description: ''
          in: path
          name: requestLogId
          required: true
          type: string
      produces:
        - text/plain
      responses:
        '200':
          description: Successful response.
          schema:
            type: file
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets a request logging log file.
      tags:
        - RequestLogs
      x-ds-in-sdk: true
      x-ds-method: get
      x-ds-methodname: getRequestLog
      x-ds-service: Diagnostics
    parameters: []
  /v2/diagnostics/settings:
    get:
      consumes: []
      deprecated: false
      description: |-
        Retrieves the current API request logging setting for the user and remaining log entries.

        **Response**
        The response includes the current API request logging setting for the user, along with the maximum log entries and remaining log entries.
      operationId: APIRequestLog_GetRequestLogSettings
      parameters: []
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/RequestLogs'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets the API request logging settings.
      tags:
        - RequestLogs
      x-ds-in-sdk: true
      x-ds-method: getSettings
      x-ds-methodname: getRequestLogSettings
      x-ds-service: Diagnostics
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: |
        Enables or disables API request logging for troubleshooting.

        When enabled (`apiRequestLogging` is set to true), REST API requests and responses for the user are added to a log. A log can have up to 50 requests/responses and the current number of log entries can be determined by getting the settings. Logging is automatically disabled when the log limit of 50 is reached.

        You can call [ML:GetRequestLog] or [ML:GetRequestLogs] to download the log files (individually or as a zip file). Call [ML:DeleteRequestLogs] to clear the log by deleting current entries.

        Private information, such as passwords and integrator key information, which is normally located in the call header is omitted from the request/response log.

        ###### Note: API request logging only captures requests from the authenticated user. Any call that does not authenticate the user and resolve a userId isn't logged. Meaning that login_information, NewAccounts, or other distributor-credential calls are not logged.
      operationId: APIRequestLog_PutRequestLogSettings
      parameters:
        - description: ''
          in: body
          name: RequestLogs
          required: false
          schema:
            $ref: '#/definitions/RequestLogs'
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/RequestLogs'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Enables or disables API request logging for troubleshooting.
      tags:
        - RequestLogs
      x-ds-in-sdk: true
      x-ds-method: updateSettings
      x-ds-methodname: updateRequestLogSettings
      x-ds-service: Diagnostics
  /v2/login_information:
    get:
      consumes: []
      deprecated: false
      description: |
        Retrieves account information for the authenticated user. Since the API is sessionless, this method does not actually log you in. 
        Instead, the method returns information about the account or accounts that the authenticated user has access to.

        ###### Important: This method must only be used for the [Legacy Header Authentication][legacyheader] flow. Use the [`AccountServer: userInfo` method](../../../../guide/authentication/userinfo.html) for the OAuth2 Authentiction Code and Implicit Grant flows.

        Each account has a `baseUrl` property, returned in the response.
        Use this `baseUrl` in all future API calls as the base of the request URL.

        For each account, the `baseUrl` property includes the DocuSign server, the API version, and the `accountId` property.

        It is not uncommon for an authenticated user to have access to more than one account (and more than one `baseUrl`). Depending on your integration's use case, your integration may choose to:

        * Use the account whose `isDefault` field is `true`.
        * List the available accounts and ask the user to choose one.
        * Enable the system administrator to set the account that should be used by your integration.

        If this method returns successfully, then you also know that the user has successfully authenticated with the DocuSign Signature platform.


        [legacyheader]: ../../../../guide/authentication/legacy_auth.html
        [userinfo]: ../../../../guide/authentication/userinfo.html
        [authcode]: ../../../../guide/authentication/oa2_auth_code.md
        [implicit]: ../../../../guide/authentication/oa2_implicit.md
      operationId: LoginInformation_GetLoginInformation
      parameters:
        - description: |
            Reserved for DocuSign.
          in: query
          name: api_password
          required: false
          type: string
        - description: ''
          in: query
          name: embed_account_id_guid
          required: false
          type: string
        - description: 'When set to **true**, shows the account ID GUID in the response.'
          in: query
          name: include_account_id_guid
          required: false
          type: string
        - description: |-
            Determines whether login settings are returned in the response.

            Valid Values:

            * all -  All the login settings are returned. 
            * none - no login settings are returned.
          in: query
          name: login_settings
          required: false
          type: string
      responses:
        '200':
          description: Successful response.
          schema:
            $ref: '#/definitions/Authentication'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Gets login information for a specified user.
      tags:
        - Authentication
      x-ds-examples:
        - description: |
            This example shows a typical response to calling
            this method with the default parameters.
            Note that the `name` of the account
            may be different than the `userName`.
          direction: response
          format: json
          response:
            loginAccounts:
              - accountId: '1703061'
                baseUrl: 'https://demo.docusign.net/restapi/v2/accounts/1703061'
                email: nirving@example.com
                isDefault: 'true'
                name: LoanCo
                siteDescription: ''
                userId: 1470ff66-f92e-4e8e-ab81-8c46f140da37
                userName: Nat Irving
          style: custom
          title: Authentication Success Response Example
        - description: |
            This example shows a typical response when the integrator key is invalid.
          direction: response
          format: json
          response:
            errorCode: PARTNER_AUTHENTICATION_FAILED
            message: The specified Integrator Key was not found or is disabled. An Integrator key was not specified.
          style: custom
          title: Authentication Failure Response Example
      x-ds-in-sdk: true
      x-ds-method: login
      x-ds-methodname: login
      x-ds-service: Authentication
    parameters: []
  '/v2/login_information/{loginPart}':
    parameters: []
    put:
      consumes: []
      deprecated: false
      description: Updates the password for a specified user.
      operationId: LoginInformation_PutLoginInformation
      parameters:
        - description: 'Currently, only the value **password** is supported.'
          in: path
          name: loginPart
          required: true
          type: string
        - description: ''
          in: body
          name: userPasswordInformation
          required: false
          schema:
            $ref: '#/definitions/userPasswordInformation'
      responses:
        '200':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: Updates the password for a specified user.
      tags:
        - Authentication
      x-ds-in-sdk: true
      x-ds-method: updatePassword
      x-ds-methodname: updatePassword
      x-ds-service: Authentication
  /v2/oauth2/revoke:
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: |
        **Deprecated**

        Revokes an OAuth2 authorization server token. After the revocation is complete, a caller must re-authenticate to restore access.
      operationId: OAuth2_PostRevoke
      parameters: []
      responses:
        '201':
          description: Successful response.
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: |
        **Deprecated** Revokes an authorization token.
      tags:
        - Authentication
      x-ds-in-sdk: true
      x-ds-method: revokeOAuthToken
      x-ds-methodname: revokeOAuthToken
      x-ds-service: Authentication
  /v2/oauth2/token:
    parameters: []
    post:
      consumes: []
      deprecated: false
      description: |
        **Deprecated**

        Creates an OAuth2 authorization server token endpoint.
      operationId: OAuth2_PostToken
      parameters: []
      responses:
        '201':
          description: Successful response.
          schema:
            $ref: '#/definitions/oauthAccess'
        '400':
          description: Error encountered.
          schema:
            $ref: '#/definitions/errorDetails'
      summary: |
        **Deprecated** Creates an authorization token.
      tags:
        - Authentication
      x-ds-in-sdk: true
      x-ds-method: getOAuthToken
      x-ds-methodname: getOAuthToken
      x-ds-service: Authentication
definitions:
  AccountBrands:
    description: Brand management for accounts
    properties:
      brands:
        description: The list of brands.
        items:
          $ref: '#/definitions/brand'
        type: array
      recipientBrandIdDefault:
        description: The brand seen by envelope recipients when a brand is not explicitly set.
        type: string
      senderBrandIdDefault:
        description: The brand seen by envelope senders when a brand is not explicitly set.
        type: string
    type: object
    x-ds-category: Accounts
    x-ds-definition-name: brandsResponse
    x-ds-order: '10'
    x-ms-summary: Brand management for accounts
  AccountConsumerDisclosures:
    description: Account consumer disclosures
    properties:
      accountEsignId:
        description: A GUID identifying the account associated with the consumer disclosure
        type: string
      allowCDWithdraw:
        description: Indicates whether the customer can withdraw their acceptance of the consumer disclosure.
        type: string
      allowCDWithdrawMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      changeEmail:
        description: ''
        type: string
      changeEmailOther:
        description: ''
        type: string
      companyName:
        description: The name of the company associated with the consumer disclosure.
        type: string
      companyPhone:
        description: The phone number of the company associated with the consumer disclosure.
        type: string
      copyCostPerPage:
        description: ''
        type: string
      copyFeeCollectionMethod:
        description: |-
          Specifies the fee collection method for cases in which the customer requires paper copies of the document.

          Maximum Length: 255 characters
        type: string
      copyRequestEmail:
        description: ''
        type: string
      custom:
        description: ''
        type: string
      enableEsign:
        description: ''
        type: string
      esignAgreement:
        description: The Electronic Record and Signature Disclosure text. The disclosure text includes the html formatting.
        type: string
      esignText:
        description: ''
        type: string
      languageCode:
        description: ''
        type: string
      mustAgreeToEsign:
        description: ''
        type: string
      pdfId:
        description: ''
        type: string
      useBrand:
        description: ''
        type: string
      useConsumerDisclosureWithinAccount:
        description: ''
        type: string
      useConsumerDisclosureWithinAccountMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      withdrawAddressLine1:
        description: |-
          Contains the first address line of the postal address to which a customer can send a consent withdrawal notification.

          Maximum length: 100 characters. 
        type: string
      withdrawAddressLine2:
        description: |-
          Contains the second address line of the postal address to which a customer can send a consent withdrawal notification.

          Maximum length: 100 characters. 
        type: string
      withdrawByEmail:
        description: Indicates whether the customer can withdraw consent by email.
        type: string
      withdrawByMail:
        description: Indicates whether the customer can withdraw consent by postal mail.
        type: string
      withdrawByPhone:
        description: Indicates whether the customer can withdraw consent by phone.
        type: string
      withdrawCity:
        description: |-
          Contains the city of the postal address to which a customer can send a consent withdrawal notification.

          Maximum length: 50 characters. 
        type: string
      withdrawConsequences:
        description: Indicates the consequences of withdrawing consent.
        type: string
      withdrawEmail:
        description: |-
          Contains the email address to which a customer can send a consent withdrawal notification.

          Maximum length: 100 characters. 
        type: string
      withdrawOther:
        description: |-
          Indicates other information need to withdraw consent.

          Maximum length: 255 characters.
        type: string
      withdrawPhone:
        description: |-
          Contains the phone number which a customer can call to register consent withdrawal notification.

          Maximum length: 20 characters. 
        type: string
      withdrawPostalCode:
        description: |-
          Contains the postal code of the postal address to which a customer can send a consent withdrawal notification.

          Maximum length: 20 characters. 
        type: string
      withdrawState:
        description: Contains the state of the postal address to which a customer can send a consent withdrawal notification.
        type: string
    type: object
    x-ds-category: Accounts
    x-ds-definition-name: consumerDisclosure
    x-ds-order: '20'
    x-ms-summary: Account consumer disclosures
  AccountCustomFields:
    description: Custom Fields
    properties:
      listCustomFields:
        description: An array of list custom fields.
        items:
          $ref: '#/definitions/listCustomField'
        type: array
      textCustomFields:
        description: An array of text custom fields.
        items:
          $ref: '#/definitions/textCustomField'
        type: array
    type: object
    x-ds-category: Accounts
    x-ds-definition-name: customFields
    x-ds-order: '30'
    x-ms-summary: Custom Fields
  AccountPasswordRules:
    description: ''
    properties:
      expirePassword:
        description: ''
        type: string
      expirePasswordDays:
        description: ''
        type: string
      expirePasswordDaysMetadata:
        $ref: '#/definitions/accountPasswordExpirePasswordDays'
        description: ''
      lockoutDurationMinutes:
        description: ''
        type: string
      lockoutDurationMinutesMetadata:
        $ref: '#/definitions/accountPasswordLockoutDurationMinutes'
        description: ''
      lockoutDurationType:
        description: ''
        type: string
      lockoutDurationTypeMetadata:
        $ref: '#/definitions/accountPasswordLockoutDurationType'
        description: ''
      minimumPasswordAgeDays:
        description: ''
        type: string
      minimumPasswordAgeDaysMetadata:
        $ref: '#/definitions/accountPasswordMinimumPasswordAgeDays'
        description: ''
      minimumPasswordLength:
        description: ''
        type: string
      minimumPasswordLengthMetadata:
        $ref: '#/definitions/accountMinimumPasswordLength'
        description: ''
      passwordIncludeDigit:
        description: ''
        type: string
      passwordIncludeDigitOrSpecialCharacter:
        description: ''
        type: string
      passwordIncludeLowerCase:
        description: ''
        type: string
      passwordIncludeSpecialCharacter:
        description: ''
        type: string
      passwordIncludeUpperCase:
        description: ''
        type: string
      passwordStrengthType:
        description: ''
        type: string
      passwordStrengthTypeMetadata:
        $ref: '#/definitions/accountPasswordStrengthType'
        description: ''
      questionsRequired:
        description: ''
        type: string
      questionsRequiredMetadata:
        $ref: '#/definitions/accountPasswordQuestionsRequired'
        description: ''
    type: object
    x-ds-category: Accounts
    x-ds-definition-name: accountPasswordRules
    x-ds-order: '190'
    x-ms-summary: ''
  AccountPermissionProfiles:
    description: ''
    properties:
      modifiedByUsername:
        description: ''
        type: string
      modifiedDateTime:
        description: ''
        type: string
      permissionProfileId:
        description: ''
        type: string
      permissionProfileName:
        description: ''
        type: string
      settings:
        $ref: '#/definitions/accountRoleSettings'
        description: ''
      userCount:
        description: ''
        type: string
      users:
        description: ''
        items:
          $ref: '#/definitions/Users'
        type: array
    type: object
    x-ds-category: Accounts
    x-ds-definition-name: permissionProfile
    x-ds-order: '70'
    x-ms-summary: ''
  AccountSignatureProviders:
    description: Account SBS Signature Providers
    properties:
      signatureProviders:
        description: ''
        items:
          $ref: '#/definitions/accountSignatureProvider'
        type: array
    type: object
    x-ds-category: Accounts
    x-ds-definition-name: accountSignatureProviders
    x-ds-order: '30'
    x-ms-summary: Account SBS Signature Providers
  AccountTabSettings:
    description: ''
    properties:
      allowTabOrder:
        description: ''
        type: string
      allowTabOrderMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      approveDeclineTabsEnabled:
        description: ''
        type: string
      approveDeclineTabsMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      calculatedFieldsEnabled:
        description: ''
        type: string
      calculatedFieldsMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      checkboxTabsEnabled:
        description: ''
        type: string
      checkboxTabsMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      dataFieldRegexEnabled:
        description: ''
        type: string
      dataFieldRegexMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      dataFieldSizeEnabled:
        description: ''
        type: string
      dataFieldSizeMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      firstLastEmailTabsEnabled:
        description: ''
        type: string
      firstLastEmailTabsMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      listTabsEnabled:
        description: ''
        type: string
      listTabsMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      noteTabsEnabled:
        description: ''
        type: string
      noteTabsMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      radioTabsEnabled:
        description: ''
        type: string
      radioTabsMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      savingCustomTabsEnabled:
        description: ''
        type: string
      savingCustomTabsMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      senderToChangeTabAssignmentsEnabled:
        description: ''
        type: string
      senderToChangeTabAssignmentsMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      sharedCustomTabsEnabled:
        description: ''
        type: string
      sharedCustomTabsMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      tabDataLabelEnabled:
        description: ''
        type: string
      tabDataLabelMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      tabLocationEnabled:
        description: ''
        type: string
      tabLocationMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      tabLockingEnabled:
        description: ''
        type: string
      tabLockingMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      tabScaleEnabled:
        description: ''
        type: string
      tabScaleMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      tabTextFormattingEnabled:
        description: ''
        type: string
      tabTextFormattingMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      textTabsEnabled:
        description: ''
        type: string
      textTabsMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
    type: object
    x-ds-category: Accounts
    x-ds-definition-name: tabAccountSettings
    x-ds-order: '100'
    x-ms-summary: ''
  AccountWatermarks:
    description: ''
    properties:
      displayAngle:
        description: ''
        type: string
      enabled:
        description: ''
        type: string
      font:
        description: 'The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.'
        type: string
      fontColor:
        description: |-
          The font color used for the information in the tab.

          Possible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
        type: string
      fontSize:
        description: |-
          The font size used for the information in the tab.

          Possible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
        type: string
      id:
        description: ''
        type: string
      imageBase64:
        description: ''
        type: string
      transparency:
        description: ''
        type: string
      watermarkText:
        description: ''
        type: string
    type: object
    x-ds-category: Accounts
    x-ds-definition-name: watermark
    x-ds-order: '200'
    x-ms-summary: ''
  Accounts:
    description: Account management
    properties:
      accountIdGuid:
        description: The GUID associated with the account ID.
        type: string
      accountName:
        description: The name of the current account.
        type: string
      allowTransactionRooms:
        description: 'When set to **true**, the transaction rooms feature exposed through the Workspaces API is enabled.'
        type: string
      billingPeriodDaysRemaining:
        description: 'Reserved: TBD'
        type: string
      billingPeriodEndDate:
        description: 'Reserved: TBD'
        type: string
      billingPeriodEnvelopesAllowed:
        description: 'Reserved: TBD'
        type: string
      billingPeriodEnvelopesSent:
        description: 'Reserved: TBD'
        type: string
      billingPeriodStartDate:
        description: 'Reserved: TBD'
        type: string
      billingProfile:
        description: 'Reserved: TBD'
        type: string
      canCancelRenewal:
        description: 'Reserved: TBD'
        type: string
      canUpgrade:
        description: 'When set to **true**, specifies that you can upgrade the account through the API.'
        type: string
      connectPermission:
        description: ''
        type: string
      createdDate:
        description: ''
        type: string
      currencyCode:
        description: Specifies the ISO currency code for the account.
        type: string
      currentPlanId:
        description: Identifies the plan that was used create this account.
        type: string
      distributorCode:
        description: The code that identifies the billing plan groups and plans for the new account.
        type: string
      docuSignLandingUrl:
        description: ''
        type: string
      envelopeSendingBlocked:
        description: ''
        type: string
      envelopeUnitPrice:
        description: ''
        type: string
      forgottenPasswordQuestionsCount:
        description: ' A complex element that contains up to four Question/Answer pairs for forgotten password information for a user.'
        type: string
      isDowngrade:
        description: ''
        type: string
      paymentMethod:
        description: ''
        type: string
      planClassification:
        description: 'Identifies the type of plan. Examples include Business, Corporate, Enterprise, Free.'
        type: string
      planEndDate:
        description: The date that the current plan will end.
        type: string
      planName:
        description: The name of the Billing Plan.
        type: string
      planStartDate:
        description: The date that the Account started using the current plan.
        type: string
      seatsAllowed:
        description: ''
        type: string
      seatsInUse:
        description: ''
        type: string
      status21CFRPart11:
        description: ''
        type: string
      suspensionDate:
        description: ''
        type: string
      suspensionStatus:
        description: ''
        type: string
    type: object
    x-ds-category: Accounts
    x-ds-definition-name: accountInformation
    x-ds-order: '1'
    x-ms-summary: Account management
  Authentication:
    description: Authentication and login
    properties:
      apiPassword:
        description: Contains a token that can be used for authentication in API calls instead of using the user name and password. Only returned if the `api_password=true` query string is added to the URL.
        type: string
      loginAccounts:
        description: The list of accounts that authenticating user is a member of.
        items:
          $ref: '#/definitions/loginAccount'
        type: array
    type: object
    x-ds-category: Authentication
    x-ds-definition-name: loginInformation
    x-ds-order: '10'
    x-ms-summary: Authentication and login
  BillingPlans:
    description: Billing plans
    properties:
      billingAddress:
        $ref: '#/definitions/accountAddress'
        description: The Billing address for the account.
      billingAddressIsCreditCardAddress:
        description: 'When set to **true**, the credit card address information is the same as that returned as the billing address. If false, then the billing address is considered a billing contact address, and the credit card address can be different.'
        type: string
      billingPlan:
        $ref: '#/definitions/accountBillingPlan'
        description: ''
      creditCardInformation:
        $ref: '#/definitions/creditCardInformation'
        description: A complex type that has information about the credit card used to pay for this account.
      paymentProcessorInformation:
        $ref: '#/definitions/paymentProcessorInformation'
        description: ''
      referralInformation:
        $ref: '#/definitions/referralInformation'
        description: Contains information describing discounts and promotions.
      successorPlans:
        description: ''
        items:
          $ref: '#/definitions/billingPlan'
        type: array
    type: object
    x-ds-category: Billing
    x-ds-definition-name: accountBillingPlanResponse
    x-ds-order: '10'
    x-ms-summary: Billing plans
  BulkEnvelopes:
    description: Bulk envelopes
    properties:
      bulkEnvelopeStatuses:
        description: 'Reserved: TBD'
        items:
          $ref: '#/definitions/bulkEnvelopeStatus'
        type: array
      endPosition:
        description: 'The last position in the result set. '
        type: string
      nextUri:
        description: 'The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. '
        type: string
      previousUri:
        description: 'The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. '
        type: string
      resultSetSize:
        description: 'The number of results returned in this response. '
        type: string
      startPosition:
        description: Starting position of the current result set.
        type: string
      totalSetSize:
        description: The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.
        type: string
    type: object
    x-ds-category: BulkEnvelopes
    x-ds-definition-name: bulkEnvelopesResponse
    x-ds-order: '10'
    x-ms-summary: Bulk envelopes
  ChunkedUploads:
    description: ''
    properties:
      checksum:
        description: ''
        type: string
      chunkedUploadId:
        description: ''
        type: string
      chunkedUploadParts:
        description: ''
        items:
          $ref: '#/definitions/chunkedUploadPart'
        type: array
      chunkedUploadUri:
        description: ''
        type: string
      committed:
        description: ''
        type: string
      expirationDateTime:
        description: ''
        type: string
      maxChunkedUploadParts:
        description: ''
        type: string
      maxTotalSize:
        description: ''
        type: string
      totalSize:
        description: ''
        type: string
    type: object
    x-ds-category: Envelopes
    x-ds-definition-name: chunkedUploadResponse
    x-ds-order: '150'
    x-ms-summary: ''
  CloudStorage:
    description: Cloud storage
    properties:
      endPosition:
        description: 'The last position in the result set. '
        type: string
      errorDetails:
        $ref: '#/definitions/externalDocServiceErrorDetails'
        description: ''
      id:
        description: ''
        type: string
      items:
        description: ''
        items:
          $ref: '#/definitions/externalFile'
        type: array
      name:
        description: ''
        type: string
      nextUri:
        description: 'The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. '
        type: string
      previousUri:
        description: 'The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. '
        type: string
      resultSetSize:
        description: 'The number of results returned in this response. '
        type: string
      startPosition:
        description: Starting position of the current result set.
        type: string
      totalSetSize:
        description: The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.
        type: string
    type: object
    x-ds-category: CloudStorage
    x-ds-definition-name: externalFolder
    x-ds-order: '10'
    x-ms-summary: Cloud storage
  CloudStorageProviders:
    description: Cloud storage providers
    properties:
      storageProviders:
        description: An Array containing the storage providers associated with the user.
        items:
          $ref: '#/definitions/cloudStorageProvider'
        type: array
    type: object
    x-ds-category: CloudStorage
    x-ds-definition-name: cloudStorageProviders
    x-ds-order: '20'
    x-ms-summary: Cloud storage providers
  ConnectConfigurations:
    description: Connect configurations
    properties:
      allUsers:
        description: 'When set to **true**, the tracked envelope and recipient events for all users, including users that are added a later time, are sent through Connect.'
        type: string
      allowEnvelopePublish:
        description: 'When set to **true**, data is sent to the urlToPublishTo web address. This option can be set to false to stop sending data while maintaining the Connect configuration information.'
        type: string
      configurationType:
        description: 'If merge field''s are being used, specifies the type of the merge field. The only  supported value is **salesforce**.'
        type: string
      connectId:
        description: ' Specifies the DocuSign generated ID for the Connect configuration.  '
        type: string
      enableLog:
        description: 'This turns Connect logging on or off. When set to **true**, logging is turned on.'
        type: string
      envelopeEvents:
        description: 'A comma separated list of Envelope related events that are tracked through Connect. The possible event values are: Sent, Delivered, Completed, Declined, and Voided.'
        type: string
      includeCertSoapHeader:
        description: ''
        type: string
      includeCertificateOfCompletion:
        description: 'When set to **true**, the Connect Service includes the Certificate of Completion with completed envelopes. '
        type: string
      includeDocumentFields:
        description: 'When set to **true**, the Document Fields associated with the envelope''s documents are included in the notification messages. Document Fields are optional custom name-value pairs added to documents using the API. '
        type: string
      includeDocuments:
        description: 'When set to **true**, Connect will send the PDF document along with the update XML.'
        type: string
      includeEnvelopeVoidReason:
        description: 'When set to **true**, Connect will include the voidedReason for voided envelopes.'
        type: string
      includeSenderAccountasCustomField:
        description: 'When set to **true**, Connect will include the sender account as Custom Field in the data.'
        type: string
      includeTimeZoneInformation:
        description: 'When set to **true**, Connect will include the envelope time zone information.'
        type: string
      name:
        description: The name of the Connect configuration. The name helps identify the configuration in the list.
        type: string
      recipientEvents:
        description: 'A comma separated list of *Recipient* related events that will trigger a notification to your webhook Connect listener. The possible event values are: Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded.'
        type: string
      requiresAcknowledgement:
        description: 'When set to **true**, and a publication message fails to be acknowledged, the message goes back into the queue and the system will retry delivery after a successful acknowledgement is received. If the delivery fails a second time, the message is not returned to the queue for sending until Connect receives a successful acknowledgement and it has been at least 24 hours since the previous retry. There is a maximum of ten retries Alternately, you can use Republish Connect Information to manually republish the envelope information.'
        type: string
      signMessageWithX509Certificate:
        description: 'When set to **true**, Mutual TLS will be enabled for notifications. Mutual TLS must be initiated by the listener (the customer''s web server) during the TLS handshake protocol. '
        type: string
      soapNamespace:
        description: |-
          The namespace of the SOAP interface.

          The namespace value must be set if useSoapInterface is set to true.
        type: string
      urlToPublishTo:
        description: 'This is the web address and name of your listener or Retrieving Service endpoint. You need to include HTTPS:// in the web address.'
        type: string
      useSoapInterface:
        description: 'When set to **true**, indicates that the `urlToPublishTo` property contains a SOAP endpoint.'
        type: string
      userIds:
        description: |-
          A comma separated list of userIds. This sets the users associated with the tracked envelope and recipient events. When a tracked event occurs for a set user, the a notification message is sent to your Connect listener. 

          ###### Note: If allUsers is set to `false` then you must provide a list of user ids.
        type: string
    type: object
    x-ds-category: Connect
    x-ds-definition-name: connectCustomConfiguration
    x-ds-order: '10'
    x-ms-summary: Connect configurations
  ConnectEvents:
    description: Connect event logging
    properties:
      failures:
        description: An array of containing failure information from the Connect failure log.
        items:
          $ref: '#/definitions/connectLog'
        type: array
      logs:
        description: 'A complex type containing Connect log information. It is divided into two sections, one for regular logs and one for Connect failures. '
        items:
          $ref: '#/definitions/connectLog'
        type: array
      totalRecords:
        description: Record count.
        type: string
      type:
        description: 'Type of the user. Valid values: type_owner, type_participant.'
        type: string
    type: object
    x-ds-category: Connect
    x-ds-definition-name: connectLogs
    x-ds-order: '20'
    x-ms-summary: Connect event logging
  Contacts:
    description: ''
    properties:
      contactId:
        description: The unique identifier of a person in the contacts address book.
        type: string
      contactPhoneNumbers:
        description: ''
        items:
          $ref: '#/definitions/contactPhoneNumber'
        type: array
      contactUri:
        description: ''
        type: string
      emails:
        description: ''
        items:
          type: string
        type: array
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      name:
        description: ''
        type: string
      organization:
        description: ''
        type: string
      shared:
        description: 'When set to **true**, this custom tab is shared.'
        type: string
      signingGroup:
        description: ''
        type: string
      signingGroupName:
        description: |-
          The display name for the signing group. 

          Maximum Length: 100 characters. 
        type: string
    type: object
    x-ds-category: Users
    x-ds-definition-name: contact
    x-ds-order: '50'
    x-ms-summary: ''
  CustomTabs:
    description: Custom tabs
    properties:
      anchor:
        description: An optional string that is used to auto-match tabs to strings located in the documents of an envelope.
        type: string
      anchorCaseSensitive:
        description: |-
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
          -->
        type: string
      anchorHorizontalAlignment:
        description: |
          Reserved for DocuSign.
          <!--
          Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
          -->
        type: string
      anchorIgnoreIfNotPresent:
        description: 'When set to **true**, this tab is ignored if anchorString is not found in the document.'
        type: string
      anchorMatchWholeWord:
        description: |
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
          -->
        type: string
      anchorUnits:
        description: 'Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.'
        type: string
      anchorXOffset:
        description: 'Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      anchorYOffset:
        description: 'Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      bold:
        description: 'When set to **true**, the information in the tab is bold.'
        type: string
      concealValueOnDocument:
        description: |-
          When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

          When an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.

          This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        type: string
      createdByDisplayName:
        description: The user name of the DocuSign user who created this object.
        type: string
      createdByUserId:
        description: The userId of the DocuSign user who created this object.
        type: string
      customTabId:
        description: 'The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.'
        type: string
      disableAutoSize:
        description: 'When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.'
        type: string
      editable:
        description: 'When set to **true**, the custom tab is editable. Otherwise the custom tab cannot be modified.'
        type: string
      font:
        description: 'The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.'
        type: string
      fontColor:
        description: |-
          The font color used for the information in the tab.

          Possible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
        type: string
      fontSize:
        description: |-
          The font size used for the information in the tab.

          Possible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
        type: string
      height:
        description: Height of the tab in pixels.
        type: string
      includedInEmail:
        description: 'When set to **true**, the tab is included in e-mails related to the envelope on which it exists. This applies to only specific tabs.'
        type: string
      initialValue:
        description: The original value of the tab.
        type: string
      italic:
        description: 'When set to **true**, the information in the tab is italic.'
        type: string
      items:
        description: 'If the tab is a list, this represents the values that are possible for the tab.'
        items:
          type: string
        type: array
      lastModified:
        description: The UTC DateTime this object was last modified. This is in ISO8601 format.
        type: string
      lastModifiedByDisplayName:
        description: The User Name of the DocuSign user who last modified this object.
        type: string
      lastModifiedByUserId:
        description: The userId of the DocuSign user who last modified this object.
        type: string
      locked:
        description: 'When set to **true**, the signer cannot change the data of the custom tab.'
        type: string
      maximumLength:
        description: The maximum number of entry characters supported by the custom tab.
        type: string
      mergeField:
        $ref: '#/definitions/mergeField'
        description: ''
      name:
        description: ''
        type: string
      required:
        description: 'When set to **true**, the signer is required to fill out this tab'
        type: string
      scaleValue:
        description: ''
        type: string
      shared:
        description: 'When set to **true**, this custom tab is shared.'
        type: string
      stampType:
        description: ''
        type: string
      stampTypeMetadata:
        $ref: '#/definitions/propertyMetadata'
        description: ''
      tabLabel:
        description: |
          The label string associated with the tab.
          The string may be the empty string.
          If no value is provided, the tab type is used as the value.

          Maximum of 500 characters.
        type: string
      type:
        description: "The type of this tab. Values are: Approve, CheckBox, Company, Date, DateSigned,\tDecline, Email,\tEmailAddress, EnvelopeId, FirstName, Formula, FullName,\tInitialHere, InitialHereOptional, LastName, List, Note, Number,\tRadio, SignerAttachment, SignHere, SignHereOptional, Ssn, Text, Title, Zip5, or Zip5Dash4."
        type: string
      underline:
        description: 'When set to **true**, the information in the tab is underlined.'
        type: string
      validationMessage:
        description: The message displayed if the custom tab fails input validation (either custom of embedded).
        type: string
      validationPattern:
        description: A regular expressionn used to validate input for the tab.
        type: string
      width:
        description: Width of the tab in pixels.
        type: string
    type: object
    x-ds-category: CustomTabs
    x-ds-definition-name: tabMetadata
    x-ds-order: '10'
    x-ms-summary: Custom tabs
  EMortgageTransactions:
    description: ''
    properties:
      documentData:
        description: ''
        type: string
      dptName:
        description: ''
        type: string
      transactionName:
        description: ''
        type: string
      transactionTypeName:
        description: ''
        type: string
    type: object
    x-ds-category: Accounts
    x-ds-definition-name: postTransactionsRequest
    x-ds-order: '120'
    x-ms-summary: ''
  ENoteConfigurations:
    description: ''
    properties:
      connectConfigured:
        description: ''
        type: string
      eNoteConfigured:
        description: ''
        type: string
      organization:
        description: ''
        type: string
      password:
        description: ''
        type: string
      userName:
        description: ''
        type: string
    type: object
    x-ds-category: Accounts
    x-ds-definition-name: eNoteConfiguration
    x-ds-order: '110'
    x-ms-summary: ''
  EnvelopeAttachments:
    description: ''
    properties:
      accessControl:
        description: ''
        type: string
      attachmentId:
        description: ''
        type: string
      attachmentType:
        description: ''
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      label:
        description: ''
        type: string
      name:
        description: ''
        type: string
    type: object
    x-ds-category: Envelopes
    x-ds-definition-name: envelopeAttachment
    x-ds-order: '60'
    x-ms-summary: ''
  EnvelopeBulkRecipients:
    description: Envelope bulk recipients
    properties:
      bulkRecipients:
        description: A complex type containing information about the bulk recipients in the response.
        items:
          $ref: '#/definitions/bulkRecipient'
        type: array
      endPosition:
        description: 'The last position in the result set. '
        type: string
      nextUri:
        description: 'The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. '
        type: string
      previousUri:
        description: 'The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. '
        type: string
      resultSetSize:
        description: 'The number of results returned in this response. '
        type: string
      startPosition:
        description: Starting position of the current result set.
        type: string
      totalSetSize:
        description: The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.
        type: string
    type: object
    x-ds-category: BulkEnvelopes
    x-ds-definition-name: bulkRecipientsResponse
    x-ds-order: '20'
    x-ms-summary: Envelope bulk recipients
  EnvelopeConsumerDisclosures:
    description: Envelope consumer disclosures
    properties:
      accountEsignId:
        description: A GUID identifying the account associated with the consumer disclosure
        type: string
      allowCDWithdraw:
        description: Indicates whether the customer can withdraw their acceptance of the consumer disclosure.
        type: string
      allowCDWithdrawMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      changeEmail:
        description: ''
        type: string
      changeEmailOther:
        description: ''
        type: string
      companyName:
        description: The name of the company associated with the consumer disclosure.
        type: string
      companyPhone:
        description: The phone number of the company associated with the consumer disclosure.
        type: string
      copyCostPerPage:
        description: ''
        type: string
      copyFeeCollectionMethod:
        description: |-
          Specifies the fee collection method for cases in which the customer requires paper copies of the document.

          Maximum Length: 255 characters
        type: string
      copyRequestEmail:
        description: ''
        type: string
      custom:
        description: ''
        type: string
      enableEsign:
        description: ''
        type: string
      esignAgreement:
        description: The Electronic Record and Signature Disclosure text. The disclosure text includes the html formatting.
        type: string
      esignText:
        description: ''
        type: string
      languageCode:
        description: ''
        type: string
      mustAgreeToEsign:
        description: ''
        type: string
      pdfId:
        description: ''
        type: string
      useBrand:
        description: ''
        type: string
      useConsumerDisclosureWithinAccount:
        description: ''
        type: string
      useConsumerDisclosureWithinAccountMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      withdrawAddressLine1:
        description: |-
          Contains the first address line of the postal address to which a customer can send a consent withdrawal notification.

          Maximum length: 100 characters. 
        type: string
      withdrawAddressLine2:
        description: |-
          Contains the second address line of the postal address to which a customer can send a consent withdrawal notification.

          Maximum length: 100 characters. 
        type: string
      withdrawByEmail:
        description: Indicates whether the customer can withdraw consent by email.
        type: string
      withdrawByMail:
        description: Indicates whether the customer can withdraw consent by postal mail.
        type: string
      withdrawByPhone:
        description: Indicates whether the customer can withdraw consent by phone.
        type: string
      withdrawCity:
        description: |-
          Contains the city of the postal address to which a customer can send a consent withdrawal notification.

          Maximum length: 50 characters. 
        type: string
      withdrawConsequences:
        description: Indicates the consequences of withdrawing consent.
        type: string
      withdrawEmail:
        description: |-
          Contains the email address to which a customer can send a consent withdrawal notification.

          Maximum length: 100 characters. 
        type: string
      withdrawOther:
        description: |-
          Indicates other information need to withdraw consent.

          Maximum length: 255 characters.
        type: string
      withdrawPhone:
        description: |-
          Contains the phone number which a customer can call to register consent withdrawal notification.

          Maximum length: 20 characters. 
        type: string
      withdrawPostalCode:
        description: |-
          Contains the postal code of the postal address to which a customer can send a consent withdrawal notification.

          Maximum length: 20 characters. 
        type: string
      withdrawState:
        description: Contains the state of the postal address to which a customer can send a consent withdrawal notification.
        type: string
    type: object
    x-ds-category: Envelopes
    x-ds-definition-name: consumerDisclosure
    x-ds-order: '90'
    x-ms-summary: Envelope consumer disclosures
  EnvelopeCustomFields:
    description: Envelope custom fields
    properties:
      listCustomFields:
        description: An array of list custom fields.
        items:
          $ref: '#/definitions/listCustomField'
        type: array
      textCustomFields:
        description: An array of text custom fields.
        items:
          $ref: '#/definitions/textCustomField'
        type: array
    type: object
    x-ds-category: Envelopes
    x-ds-definition-name: customFields
    x-ds-order: '70'
    x-ms-summary: Envelope custom fields
  EnvelopeDocumentFields:
    description: Envelope document fields
    properties:
      documentFields:
        description: |
          The array of name/value custom data strings to be added to a document. Custom document field information is returned in the status, but otherwise is not used by DocuSign. The array contains the elements: 

          * name - A string that can be a maximum of 50 characters. 
          * value - A string that can be a maximum of 200 characters.

          *IMPORTANT*: If you are using xml, the name/value pair is contained in a nameValue element. 
        items:
          $ref: '#/definitions/nameValue'
        type: array
    type: object
    x-ds-category: Envelopes
    x-ds-definition-name: documentFieldsInformation
    x-ds-order: '60'
    x-ms-summary: Envelope document fields
  EnvelopeDocumentTabs:
    description: ''
    properties:
      approveTabs:
        description: |
          A tab that allows the recipient to approve documents
          without placing a signature or initials on the
          document. If the recipient clicks the Approve tab during the signing
          process, the recipient is considered to have signed the document. No
          information is shown on the document for the approval, but it is
          recorded as a signature in the envelope history.
        items:
          $ref: '#/definitions/approve'
        type: array
      checkboxTabs:
        description: Specifies a tag on the document in a location where the recipient can select an option.
        items:
          $ref: '#/definitions/checkbox'
        type: array
      companyTabs:
        description: |-
          Specifies a tag on the document where you want the recipient's company name to appear.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
        items:
          $ref: '#/definitions/company'
        type: array
      dateSignedTabs:
        description: Specifies a tab on the document where the date the document was signed will automatically appear.
        items:
          $ref: '#/definitions/dateSigned'
        type: array
      dateTabs:
        description: |-
          Specifies a tab on the document where you want the recipient to enter a date. Date tabs are single-line fields that allow date information to be entered in any format. The tooltip for this tab recommends entering the date as MM/DD/YYYY, but this is not enforced. The format entered by the signer is retained. 

          If you need a particular date format enforced, DocuSign recommends using a Text tab with a Validation Pattern and Validation Message to enforce the format.
        items:
          $ref: '#/definitions/date'
        type: array
      declineTabs:
        description: 'Specifies a tag on the document where you want to give the recipient the option of declining an envelope. If the recipient clicks the Decline tag during the signing process, the envelope is voided.'
        items:
          $ref: '#/definitions/decline'
        type: array
      emailAddressTabs:
        description: 'Specifies a location on the document where you want where you want the recipient''s email, as entered in the recipient information, to display.'
        items:
          $ref: '#/definitions/emailAddress'
        type: array
      emailTabs:
        description: |-
          Specifies a tag on the document where you want the recipient to enter an email. Email tags are single-line fields that accept any characters. The system checks that a valid email format (i.e. xxx@yyy.zzz) is entered in the tag. It uses the same parameters as a Text tab, with the validation message and pattern set for email information.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
        items:
          $ref: '#/definitions/email'
        type: array
      envelopeIdTabs:
        description: 'Specifies a tag on the document where you want the envelope ID for to appear. Recipients cannot enter or change the information in this tab, it is for informational purposes only.'
        items:
          $ref: '#/definitions/envelopeId'
        type: array
      firstNameTabs:
        description: 'Specifies tag on a document where you want the recipient''s first name to appear. This tag takes the recipient''s name, as entered in the recipient information, splits it into sections based on spaces and uses the first section as the first name.'
        items:
          $ref: '#/definitions/firstName'
        type: array
      formulaTabs:
        description: |
          A list of formula tabs.

          The value of a formula tab is calculated
          from the values of other
          number or date tabs in the document.
          When the recipient completes the underlying fields,
          the formula tab calculates and displays the result.

          The `formula` property of the tab
          contains the references
          to the underlying tabs.
          See [Calculated Fields][calculatedfields]
          in the DocuSign Support Center
          to learn more about formulas.

          If a formula tab contains
          a `paymentDetails` property,
          the tab is considered a payment item.
          See [Requesting Payments Along with Signatures][paymentguide]
          in the DocuSign Support Center
          to learn more about payments.

          [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields
          [paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures
        items:
          $ref: '#/definitions/formulaTab'
        type: array
      fullNameTabs:
        description: Specifies a tag on the document where you want the recipient's name to appear.
        items:
          $ref: '#/definitions/fullName'
        type: array
      initialHereTabs:
        description: Specifies a tag location in the document at which a recipient will place their initials. The `optional` parameter specifies whether the initials are required or optional.
        items:
          $ref: '#/definitions/initialHere'
        type: array
      lastNameTabs:
        description: 'Specifies a tag on a document where you want the recipient''s last name to appear. This tag takes the recipient''s name, as entered in the recipient information, splits it into sections based on spaces and uses the last section as the last name.'
        items:
          $ref: '#/definitions/lastName'
        type: array
      listTabs:
        description: 'Specify this tag to give your recipient a list of options, presented as a drop-down list, from which they can select.'
        items:
          $ref: '#/definitions/list'
        type: array
      noteTabs:
        description: 'Specifies a location on the document where you want to place additional information, in the form of a note, for a recipient.'
        items:
          $ref: '#/definitions/note'
        type: array
      numberTabs:
        description: |-
          Specifies a tag on the document where you want the recipient to enter a number. It uses the same parameters as a Text tab, with the validation message and pattern set for number information.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response. 
        items:
          $ref: '#/definitions/number'
        type: array
      radioGroupTabs:
        description: Specifies a tag on the document in a location where the recipient can select one option from a group of options using a radio button. The radio buttons do not have to be on the same page in a document.
        items:
          $ref: '#/definitions/radioGroup'
        type: array
      signHereTabs:
        description: |
          A complex type the contains information about the tag that specifies where the recipient places their signature in the document. The "optional" parameter sets if the signature is required or optional.
        items:
          $ref: '#/definitions/signHere'
        type: array
      signerAttachmentTabs:
        description: Specifies a tag on the document when you want the recipient to add supporting documents to an envelope.
        items:
          $ref: '#/definitions/signerAttachment'
        type: array
      ssnTabs:
        description: |-
          Specifies a tag on the document where you want the recipient to enter a Social Security Number (SSN). A SSN can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
        items:
          $ref: '#/definitions/ssn'
        type: array
      textTabs:
        description: |-
          Specifies a that that is an adaptable field that allows the recipient to enter different text information.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
        items:
          $ref: '#/definitions/text'
        type: array
      titleTabs:
        description: |-
          Specifies a tag on the document where you want the recipient's title to appear.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
        items:
          $ref: '#/definitions/title'
        type: array
      viewTabs:
        description: ''
        items:
          $ref: '#/definitions/view'
        type: array
      zipTabs:
        description: |-
          Specifies a tag on the document where you want the recipient to enter a ZIP code. The ZIP code can be a five numbers or the ZIP+4 format with nine numbers. The zip code can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
        items:
          $ref: '#/definitions/zip'
        type: array
    type: object
    x-ds-category: Envelopes
    x-ds-definition-name: tabs
    x-ds-order: '50'
    x-ms-summary: ''
  EnvelopeDocumentVisibility:
    description: ''
    properties:
      documentVisibility:
        description: ''
        items:
          $ref: '#/definitions/documentVisibility'
        type: array
    type: object
    x-ds-category: Envelopes
    x-ds-definition-name: documentVisibilityList
    x-ds-order: '170'
    x-ms-summary: ''
  EnvelopeDocuments:
    description: Envelope documents
    properties:
      envelopeDocuments:
        description: ''
        items:
          $ref: '#/definitions/envelopeDocument'
        type: array
      envelopeId:
        description: The envelope ID of the envelope status that failed to post.
        type: string
    type: object
    x-ds-category: Envelopes
    x-ds-definition-name: envelopeDocumentsResult
    x-ds-order: '40'
    x-ms-summary: Envelope documents
  EnvelopeEmailSettings:
    description: Envelope email settings
    properties:
      bccEmailAddresses:
        description: A list of email addresses that receive a copy of all email communications for an envelope. You can use this for archiving purposes.
        items:
          $ref: '#/definitions/bccEmailAddress'
        type: array
      replyEmailAddressOverride:
        description: ''
        type: string
      replyEmailNameOverride:
        description: ''
        type: string
    type: object
    x-ds-category: Envelopes
    x-ds-definition-name: emailSettings
    x-ds-order: '30'
    x-ms-summary: Envelope email settings
  EnvelopeFormData:
    description: ''
    properties:
      emailSubject:
        description: |-
          Specifies the subject of the email that is sent to all recipients.

          See [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.
        type: string
      envelopeId:
        description: The envelope ID of the envelope status that failed to post.
        type: string
      formData:
        description: ''
        items:
          $ref: '#/definitions/nameValue'
        type: array
      recipientFormData:
        description: ''
        items:
          $ref: '#/definitions/recipientFormData'
        type: array
      sentDateTime:
        description: The date and time the envelope was sent.
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
    type: object
    x-ds-category: Envelopes
    x-ds-definition-name: envelopeFormData
    x-ds-order: '160'
    x-ms-summary: ''
  EnvelopeLocks:
    description: Envelope locks
    properties:
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      lockDurationInSeconds:
        description: |
          Sets the time, in seconds, until the lock expires when there is no activity on the envelope.

          If no value is entered, then the default value of 300 seconds is used. The maximum value is 1,800 seconds.

          The lock duration can be extended.
        type: string
      lockToken:
        description: A unique identifier provided to the owner of the envelope lock.   Used to prove ownership of the lock.
        type: string
      lockType:
        description: The type of envelope lock.  Currently "edit" is the only supported type.
        type: string
      lockedByApp:
        description: Specifies the friendly name of  the application that is locking the envelope.
        type: string
      lockedByUser:
        $ref: '#/definitions/userInfo'
        description: A complex type containing information about the user that has the Envelope or Template locked.
      lockedUntilDateTime:
        description: The datetime until the envelope lock expires.
        type: string
      useScratchPad:
        description: |-
          Reserved for future use.

          Indicates whether a scratchpad is used for editing information.
           
        type: string
    type: object
    x-ds-category: Envelopes
    x-ds-definition-name: lockInformation
    x-ds-order: '80'
    x-ms-summary: Envelope locks
  EnvelopeRecipientTabs:
    description: Envelope tabs
    properties:
      approveTabs:
        description: |
          A tab that allows the recipient to approve documents
          without placing a signature or initials on the
          document. If the recipient clicks the Approve tab during the signing
          process, the recipient is considered to have signed the document. No
          information is shown on the document for the approval, but it is
          recorded as a signature in the envelope history.
        items:
          $ref: '#/definitions/approve'
        type: array
      checkboxTabs:
        description: Specifies a tag on the document in a location where the recipient can select an option.
        items:
          $ref: '#/definitions/checkbox'
        type: array
      companyTabs:
        description: |-
          Specifies a tag on the document where you want the recipient's company name to appear.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
        items:
          $ref: '#/definitions/company'
        type: array
      dateSignedTabs:
        description: Specifies a tab on the document where the date the document was signed will automatically appear.
        items:
          $ref: '#/definitions/dateSigned'
        type: array
      dateTabs:
        description: |-
          Specifies a tab on the document where you want the recipient to enter a date. Date tabs are single-line fields that allow date information to be entered in any format. The tooltip for this tab recommends entering the date as MM/DD/YYYY, but this is not enforced. The format entered by the signer is retained. 

          If you need a particular date format enforced, DocuSign recommends using a Text tab with a Validation Pattern and Validation Message to enforce the format.
        items:
          $ref: '#/definitions/date'
        type: array
      declineTabs:
        description: 'Specifies a tag on the document where you want to give the recipient the option of declining an envelope. If the recipient clicks the Decline tag during the signing process, the envelope is voided.'
        items:
          $ref: '#/definitions/decline'
        type: array
      emailAddressTabs:
        description: 'Specifies a location on the document where you want where you want the recipient''s email, as entered in the recipient information, to display.'
        items:
          $ref: '#/definitions/emailAddress'
        type: array
      emailTabs:
        description: |-
          Specifies a tag on the document where you want the recipient to enter an email. Email tags are single-line fields that accept any characters. The system checks that a valid email format (i.e. xxx@yyy.zzz) is entered in the tag. It uses the same parameters as a Text tab, with the validation message and pattern set for email information.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
        items:
          $ref: '#/definitions/email'
        type: array
      envelopeIdTabs:
        description: 'Specifies a tag on the document where you want the envelope ID for to appear. Recipients cannot enter or change the information in this tab, it is for informational purposes only.'
        items:
          $ref: '#/definitions/envelopeId'
        type: array
      firstNameTabs:
        description: 'Specifies tag on a document where you want the recipient''s first name to appear. This tag takes the recipient''s name, as entered in the recipient information, splits it into sections based on spaces and uses the first section as the first name.'
        items:
          $ref: '#/definitions/firstName'
        type: array
      formulaTabs:
        description: |
          A list of formula tabs.

          The value of a formula tab is calculated
          from the values of other
          number or date tabs in the document.
          When the recipient completes the underlying fields,
          the formula tab calculates and displays the result.

          The `formula` property of the tab
          contains the references
          to the underlying tabs.
          See [Calculated Fields][calculatedfields]
          in the DocuSign Support Center
          to learn more about formulas.

          If a formula tab contains
          a `paymentDetails` property,
          the tab is considered a payment item.
          See [Requesting Payments Along with Signatures][paymentguide]
          in the DocuSign Support Center
          to learn more about payments.

          [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields
          [paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures
        items:
          $ref: '#/definitions/formulaTab'
        type: array
      fullNameTabs:
        description: Specifies a tag on the document where you want the recipient's name to appear.
        items:
          $ref: '#/definitions/fullName'
        type: array
      initialHereTabs:
        description: Specifies a tag location in the document at which a recipient will place their initials. The `optional` parameter specifies whether the initials are required or optional.
        items:
          $ref: '#/definitions/initialHere'
        type: array
      lastNameTabs:
        description: 'Specifies a tag on a document where you want the recipient''s last name to appear. This tag takes the recipient''s name, as entered in the recipient information, splits it into sections based on spaces and uses the last section as the last name.'
        items:
          $ref: '#/definitions/lastName'
        type: array
      listTabs:
        description: 'Specify this tag to give your recipient a list of options, presented as a drop-down list, from which they can select.'
        items:
          $ref: '#/definitions/list'
        type: array
      noteTabs:
        description: 'Specifies a location on the document where you want to place additional information, in the form of a note, for a recipient.'
        items:
          $ref: '#/definitions/note'
        type: array
      numberTabs:
        description: |-
          Specifies a tag on the document where you want the recipient to enter a number. It uses the same parameters as a Text tab, with the validation message and pattern set for number information.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response. 
        items:
          $ref: '#/definitions/number'
        type: array
      radioGroupTabs:
        description: Specifies a tag on the document in a location where the recipient can select one option from a group of options using a radio button. The radio buttons do not have to be on the same page in a document.
        items:
          $ref: '#/definitions/radioGroup'
        type: array
      signHereTabs:
        description: |
          A complex type the contains information about the tag that specifies where the recipient places their signature in the document. The "optional" parameter sets if the signature is required or optional.
        items:
          $ref: '#/definitions/signHere'
        type: array
      signerAttachmentTabs:
        description: Specifies a tag on the document when you want the recipient to add supporting documents to an envelope.
        items:
          $ref: '#/definitions/signerAttachment'
        type: array
      ssnTabs:
        description: |-
          Specifies a tag on the document where you want the recipient to enter a Social Security Number (SSN). A SSN can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
        items:
          $ref: '#/definitions/ssn'
        type: array
      textTabs:
        description: |-
          Specifies a that that is an adaptable field that allows the recipient to enter different text information.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
        items:
          $ref: '#/definitions/text'
        type: array
      titleTabs:
        description: |-
          Specifies a tag on the document where you want the recipient's title to appear.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
        items:
          $ref: '#/definitions/title'
        type: array
      viewTabs:
        description: ''
        items:
          $ref: '#/definitions/view'
        type: array
      zipTabs:
        description: |-
          Specifies a tag on the document where you want the recipient to enter a ZIP code. The ZIP code can be a five numbers or the ZIP+4 format with nine numbers. The zip code can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
        items:
          $ref: '#/definitions/zip'
        type: array
    type: object
    x-ds-category: Envelopes
    x-ds-definition-name: tabs
    x-ds-order: '50'
    x-ms-summary: Envelope tabs
  EnvelopeRecipients:
    description: Envelope recipients
    properties:
      agents:
        description: A complex type defining the management and access rights of a recipient assigned assigned as an agent on the document.
        items:
          $ref: '#/definitions/agent'
        type: array
      carbonCopies:
        description: 'A complex type containing information about recipients who should receive a copy of the envelope, but does not need to sign it.'
        items:
          $ref: '#/definitions/carbonCopy'
        type: array
      certifiedDeliveries:
        description: 'A complex type containing information on a recipient the must receive the completed documents for the envelope to be completed, but the recipient does not need to sign, initial, date, or add information to any of the documents.'
        items:
          $ref: '#/definitions/certifiedDelivery'
        type: array
      currentRoutingOrder:
        description: ''
        type: string
      editors:
        description: A complex type defining the management and access rights of a recipient assigned assigned as an editor on the document.
        items:
          $ref: '#/definitions/editor'
        type: array
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      inPersonSigners:
        description: Specifies a signer that is in the same physical location as a DocuSign user who will act as a Signing Host for the transaction. The recipient added is the Signing Host and new separate Signer Name field appears after Sign in person is selected.
        items:
          $ref: '#/definitions/inPersonSigner'
        type: array
      intermediaries:
        description: 'Identifies a recipient that can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order (until subsequent Agents, Editors or Intermediaries recipient types are added).'
        items:
          $ref: '#/definitions/intermediary'
        type: array
      recipientCount:
        description: |-
          The list of recipient event statuses that will trigger Connect to send updates to the url. It can be a two-part list with:

          * recipientEventStatusCode - The recipient status, this can be Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded.
          * includeDocuments - When set to **true**, the envelope time zone information is included in the message.
        type: string
      signers:
        description: A complex type containing information about the Signer recipient.
        items:
          $ref: '#/definitions/signer'
        type: array
    type: object
    x-ds-category: Envelopes
    x-ds-definition-name: recipients
    x-ds-order: '20'
    x-ms-summary: Envelope recipients
  EnvelopeTemplates:
    description: Envelope templates
    properties:
      templates:
        description: ''
        items:
          $ref: '#/definitions/templateSummary'
        type: array
    type: object
    x-ds-category: Envelopes
    x-ds-definition-name: templateInformation
    x-ds-order: '85'
    x-ms-summary: Envelope templates
  EnvelopeViews:
    description: Embedding Envelope views
    properties:
      url:
        description: The view URL to be navigated to.
        type: string
    type: object
    x-ds-category: Envelopes
    x-ds-definition-name: viewUrl
    x-ds-order: '1'
    x-ms-summary: Embedding Envelope views
  Envelopes:
    description: 'Envelope creation, management'
    properties:
      allowMarkup:
        description: 'When set to **true**, Document Markup is enabled for envelope. Account must have Document Markup enabled to use this'
        type: string
      allowReassign:
        description: 'When set to **true**, the recipient can redirect an envelope to a more appropriate recipient.'
        type: string
      asynchronous:
        description: 'When set to **true**, the envelope is queued for processing and the value of the `status` property is set to ''Processing''. Additionally, get status calls return ''Processing'' until completed.'
        type: string
      attachmentsUri:
        description: ''
        type: string
      authoritativeCopy:
        description: Specifies the Authoritative copy feature. If set to true the Authoritative copy feature is enabled.
        type: string
      autoNavigation:
        description: |
          Specifies whether auto navigation is set for the recipient.
        type: string
      brandId:
        description: The unique identifier of a brand.
        type: string
      brandLock:
        description: ''
        type: string
      certificateUri:
        description: Retrieves a URI for an endpoint that allows you to easily retrieve certificate information.
        type: string
      completedDateTime:
        description: Specifies the date and time this item was completed.
        type: string
      createdDateTime:
        description: Indicates the date and time the item was created.
        type: string
      customFields:
        $ref: '#/definitions/AccountCustomFields'
        description: An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
      customFieldsUri:
        description: Contains a URI for an endpoint that you can use to retrieve the custom fields.
        type: string
      declinedDateTime:
        description: The date and time the recipient declined the document.
        type: string
      deletedDateTime:
        description: Specifies the data and time the item was deleted.
        type: string
      deliveredDateTime:
        description: 'Reserved: For DocuSign use only.'
        type: string
      documentsCombinedUri:
        description: ''
        type: string
      documentsUri:
        description: Contains a URI for an endpoint that you can use to retrieve the documents.
        type: string
      emailBlurb:
        description: This is the same as the email body. If specified it is included in email body for all envelope recipients.
        type: string
      emailSettings:
        $ref: '#/definitions/EnvelopeEmailSettings'
        description: |
          A complex element that allows  the sender to override some envelope email setting information. This can be used to override the Reply To email address and name associated with the envelope and to override the BCC email addresses to which an envelope is sent. 

          When the emailSettings information is used for an envelope, it only applies to that envelope. 

          **IMPORTANT**: The emailSettings information is not returned in the GET for envelope status. Use GET /email_settings to return information about the emailSettings. 

          EmailSettings consists of: 

          * replyEmailAddressOverride - The Reply To email used for the envelope. DocuSign will verify that a correct email format is used, but does not verify that the email is active. Maximum Length: 100 characters.
          * replyEmailNameOverride - The name associated with the Reply To email address. Maximum Length: 100 characters.
          * bccEmailAddresses - An array of up to five email addresses to which the envelope is sent to as a BCC email. Only users with canManageAccount setting set to true can use this option. 
          DocuSign verifies that the email format is correct, but does not verify that the email is active. Using this overrides the BCC for Email Archive information setting for this envelope. Maximum Length: 100 characters.
          *Example*: if your account has BCC for Email Archive set up for the email address 'archive@mycompany.com' and you send an envelope using the BCC Email Override to send a BCC email to 'salesarchive@mycompany.com', then a copy of the envelope is only sent to the 'salesarchive@mycompany.com' email address.
      emailSubject:
        description: |-
          Specifies the subject of the email that is sent to all recipients.

          See [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.
        type: string
      enableWetSign:
        description: 'When set to **true**, the signer is allowed to print the document and sign it on paper.'
        type: string
      enforceSignerVisibility:
        description: |-
          When set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.

          Your account must have Document Visibility enabled to use this.
        type: string
      envelopeId:
        description: The envelope ID of the envelope status that failed to post.
        type: string
      envelopeIdStamping:
        description: 'When set to **true**, Envelope ID Stamping is enabled.'
        type: string
      envelopeUri:
        description: Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.
        type: string
      initialSentDateTime:
        description: ''
        type: string
      is21CFRPart11:
        description: 'When set to **true**, indicates that this module is enabled on the account.'
        type: string
      isSignatureProviderEnvelope:
        description: ''
        type: string
      lastModifiedDateTime:
        description: The date and time the item was last modified.
        type: string
      lockInformation:
        $ref: '#/definitions/EnvelopeLocks'
        description: ''
      messageLock:
        description: |-
          When set to **true**, prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope. 

          Additionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes. 

          However, if the `messageLock` node is set to true**** and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.
        type: string
      notification:
        $ref: '#/definitions/notification'
        description: |
          A complex element that specifies the notification options for the envelope. It consists of:

          * useAccountDefaults - When set to **true**, the account default notification settings are used for the envelope. 
          * reminders - A complex element that specifies reminder settings for the envelope. It consists of: 

             * reminderEnabled - When set to **true**, a reminder message is sent to the recipient.
             * reminderDelay - An interger that sets the number of days after the recipient receives the envelope that reminder emails are sent to the recipient. 
             * reminderFrequency - An interger that sets the interval, in days, between reminder emails. 

          * expirations - A complex element that specifies the expiration settings for the envelope. It consists of:

             * expireEnabled - When set to **true**, the envelope expires (is no longer available for signing) in the set number of days. If false, the account default setting is used. If the account does not have an expiration setting, the DocuSign default value of 120 days is used. 
             * expireAfter - An integer that sets the number of days the envelope is active.
             * expireWarn - An integer that sets the number of days before envelope expiration that an expiration warning email is sent to the recipient. If set to 0 (zero), no warning email is sent. 
      notificationUri:
        description: Contains a URI for an endpoint that you can use to retrieve the notifications.
        type: string
      purgeState:
        description: ''
        type: string
      recipients:
        $ref: '#/definitions/EnvelopeRecipients'
        description: ''
      recipientsLock:
        description: 'When set to **true**, prevents senders from changing, correcting, or deleting the recipient information for the envelope.'
        type: string
      recipientsUri:
        description: Contains a URI for an endpoint that you can use to retrieve the recipients.
        type: string
      sentDateTime:
        description: The date and time the envelope was sent.
        type: string
      signingLocation:
        description: Specifies the physical location where the signing takes place. It can have two enumeration values; InPerson and Online. The default value is Online.
        type: string
      status:
        description: |
          Indicates the envelope status. Valid values are:

          * created - The envelope is created as a draft. It can be modified and sent later.
          * sent - The envelope is sent to the recipients.
        type: string
      statusChangedDateTime:
        description: The data and time the status changed.
        type: string
      templatesUri:
        description: Contains a URI for an endpoint which you can use to retrieve the templates.
        type: string
      transactionId:
        description: ' Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The `transactionId` property can be used determine an envelope''s status (i.e. was it created or not) in cases where the internet connection was lost before the envelope status was returned.'
        type: string
      useDisclosure:
        description: |-
          When set to **true**, the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When set to **false**, the Electronic Record and Signature Disclosure is not shown to any envelope recipients. 

          If the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.
        type: string
      voidedDateTime:
        description: The date and time the envelope or template was voided.
        type: string
      voidedReason:
        description: The reason the envelope or template was voided.
        type: string
    type: object
    x-ds-category: Envelopes
    x-ds-definition-name: envelope
    x-ds-order: '10'
    x-ms-summary: 'Envelope creation, management'
  Folders:
    description: Folder management
    properties:
      folders:
        description: A collection of folder objects returned in a response.
        items:
          $ref: '#/definitions/folder'
        type: array
    type: object
    x-ds-category: Folders
    x-ds-definition-name: foldersResponse
    x-ds-order: '10'
    x-ms-summary: Folder management
  GroupBrands:
    description: Brand management for groups
    properties:
      brands:
        description: The list of brands.
        items:
          $ref: '#/definitions/brand'
        type: array
      recipientBrandIdDefault:
        description: The brand seen by envelope recipients when a brand is not explicitly set.
        type: string
      senderBrandIdDefault:
        description: The brand seen by envelope senders when a brand is not explicitly set.
        type: string
    type: object
    x-ds-category: UserGroups
    x-ds-definition-name: brandsResponse
    x-ds-order: '30'
    x-ms-summary: Brand management for groups
  GroupUsers:
    description: Groups' users
    properties:
      endPosition:
        description: 'The last position in the result set. '
        type: string
      nextUri:
        description: 'The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. '
        type: string
      previousUri:
        description: 'The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. '
        type: string
      resultSetSize:
        description: 'The number of results returned in this response. '
        type: string
      startPosition:
        description: Starting position of the current result set.
        type: string
      totalSetSize:
        description: The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.
        type: string
      users:
        description: ''
        items:
          $ref: '#/definitions/userInfo'
        type: array
    type: object
    x-ds-category: UserGroups
    x-ds-definition-name: usersResponse
    x-ds-order: '20'
    x-ms-summary: Groups' users
  Groups:
    description: Group information
    properties:
      endPosition:
        description: 'The last position in the result set. '
        type: string
      groups:
        description: A collection group objects containing information about the groups returned.
        items:
          $ref: '#/definitions/group'
        type: array
      nextUri:
        description: 'The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. '
        type: string
      previousUri:
        description: 'The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. '
        type: string
      resultSetSize:
        description: 'The number of results returned in this response. '
        type: string
      startPosition:
        description: Starting position of the current result set.
        type: string
      totalSetSize:
        description: The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.
        type: string
    type: object
    x-ds-category: UserGroups
    x-ds-definition-name: groupInformation
    x-ds-order: '10'
    x-ms-summary: Group information
  Invoices:
    description: Invoices
    properties:
      amount:
        description: 'Reserved: TBD'
        type: string
      balance:
        description: 'Reserved: TBD'
        type: string
      dueDate:
        description: 'Reserved: TBD'
        type: string
      invoiceId:
        description: 'Reserved: TBD'
        type: string
      invoiceItems:
        description: 'Reserved: TBD'
        items:
          $ref: '#/definitions/billingInvoiceItem'
        type: array
      invoiceNumber:
        description: 'Reserved: TBD'
        type: string
      invoiceUri:
        description: Contains a URI for an endpoint that you can use to retrieve invoice information.
        type: string
      nonTaxableAmount:
        description: ''
        type: string
      pdfAvailable:
        description: ''
        type: string
      taxableAmount:
        description: ''
        type: string
    type: object
    x-ds-category: Billing
    x-ds-definition-name: billingInvoice
    x-ds-order: '20'
    x-ms-summary: Invoices
  PaymentGatewayAccounts:
    description: ''
    properties:
      displayName:
        description: ''
        type: string
      paymentGateway:
        description: ''
        type: string
      paymentGatewayAccountId:
        description: ''
        type: string
    type: object
    x-ds-category: Payments
    x-ds-definition-name: paymentGatewayAccount
    x-ds-order: '210'
    x-ms-summary: ''
  Payments:
    description: Payments
    properties:
      amount:
        description: 'Reserved: TBD'
        type: string
      description:
        description: |
          A sender-defined description of the line item.
        type: string
      paymentDate:
        description: ''
        type: string
      paymentId:
        description: ''
        type: string
      paymentNumber:
        description: |-
          When set to **true**, a PDF version of the invoice is available. 

          To get the PDF, make the call again and change "Accept:" in the header to "Accept: application/pdf".
        type: string
    type: object
    x-ds-category: Billing
    x-ds-definition-name: billingPaymentItem
    x-ds-order: '30'
    x-ms-summary: Payments
  PowerFormData:
    description: ''
    properties:
      envelopeId:
        description: The envelope ID of the envelope status that failed to post.
        type: string
      recipients:
        description: An array of powerform recipients.
        items:
          $ref: '#/definitions/powerFormFormDataRecipient'
        type: array
    type: object
    x-ds-category: PowerForms
    x-ds-definition-name: powerFormFormDataEnvelope
    x-ds-order: '90'
    x-ms-summary: ''
  PowerForms:
    description: ''
    properties:
      createdDateTime:
        description: Indicates the date and time the item was created.
        type: string
      emailBody:
        description: |-
          Specifies the email body of the message sent to the recipient. 

          Maximum length: 10000 characters. 
        type: string
      emailSubject:
        description: |-
          Specifies the subject of the email that is sent to all recipients.

          See [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.
        type: string
      envelopes:
        description: ''
        items:
          $ref: '#/definitions/Envelopes'
        type: array
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      instructions:
        description: ''
        type: string
      isActive:
        description: ''
        type: string
      lastUsed:
        description: ''
        type: string
      limitUseInterval:
        description: ''
        type: string
      limitUseIntervalEnabled:
        description: ''
        type: string
      limitUseIntervalUnits:
        description: ''
        type: string
      maxUseEnabled:
        description: ''
        type: string
      name:
        description: ''
        type: string
      powerFormId:
        description: ''
        type: string
      powerFormUrl:
        description: ''
        type: string
      recipients:
        description: An array of powerform recipients.
        items:
          $ref: '#/definitions/powerFormRecipient'
        type: array
      senderName:
        description: ''
        type: string
      senderUserId:
        description: ''
        type: string
      signingMode:
        description: ''
        type: string
      templateId:
        description: 'The unique identifier of the template. If this is not provided, DocuSign will generate a value. '
        type: string
      templateName:
        description: ''
        type: string
      timesUsed:
        description: ''
        type: string
      uri:
        description: ''
        type: string
      usesRemaining:
        description: ''
        type: string
    type: object
    x-ds-category: PowerForms
    x-ds-definition-name: powerForm
    x-ds-order: '80'
    x-ms-summary: ''
  RequestLogs:
    description: Request logs
    properties:
      apiRequestLogMaxEntries:
        description: Specifies the maximum number of API requests to log.
        type: string
      apiRequestLogRemainingEntries:
        description: Indicates the remaining number of API requests that can be logged.
        type: string
      apiRequestLogging:
        description: ' When set to **true**, enables API request logging for the user. '
        type: string
    type: object
    x-ds-category: Diagnostics
    x-ds-definition-name: diagnosticsSettingsInformation
    x-ds-order: '10'
    x-ms-summary: Request logs
  Resources:
    description: API resource information
    properties:
      resources:
        description: ''
        items:
          $ref: '#/definitions/nameValue'
        type: array
    type: object
    x-ds-category: Diagnostics
    x-ds-definition-name: resourceInformation
    x-ds-order: '20'
    x-ms-summary: API resource information
  Services:
    description: API service information
    properties:
      buildBranch:
        description: 'Reserved: TBD'
        type: string
      buildBranchDeployedDateTime:
        description: 'Reserved: TBD'
        type: string
      buildSHA:
        description: 'Reserved: TBD'
        type: string
      buildVersion:
        description: 'Reserved: TBD'
        type: string
      linkedSites:
        description: ''
        items:
          type: string
        type: array
      serviceVersions:
        description: ''
        items:
          $ref: '#/definitions/serviceVersion'
        type: array
    type: object
    x-ds-category: Diagnostics
    x-ds-definition-name: serviceInformation
    x-ds-order: '30'
    x-ms-summary: API service information
  SigningGroupUsers:
    description: Signing groups' users
    properties:
      users:
        description: ''
        items:
          $ref: '#/definitions/signingGroupUser'
        type: array
    type: object
    x-ds-category: SigningGroups
    x-ds-definition-name: signingGroupUsers
    x-ds-order: '20'
    x-ms-summary: Signing groups' users
  SigningGroups:
    description: Signing groups
    properties:
      created:
        description: The UTC DateTime when the workspace user authorization was created.
        type: string
      createdBy:
        description: ''
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      groupEmail:
        description: ''
        type: string
      groupName:
        description: The name of the group.
        type: string
      groupType:
        description: The group type.
        type: string
      modified:
        description: ''
        type: string
      modifiedBy:
        description: ''
        type: string
      signingGroupId:
        description: 'When set to **true** and the feature is enabled in the sender''s account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).'
        type: string
      users:
        description: ''
        items:
          $ref: '#/definitions/signingGroupUser'
        type: array
    type: object
    x-ds-category: SigningGroups
    x-ds-definition-name: signingGroup
    x-ds-order: '10'
    x-ms-summary: Signing groups
  TemplateBulkRecipients:
    description: Template bulk recipients
    properties:
      bulkRecipients:
        description: A complex type containing information about the bulk recipients in the response.
        items:
          $ref: '#/definitions/bulkRecipient'
        type: array
      endPosition:
        description: 'The last position in the result set. '
        type: string
      nextUri:
        description: 'The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. '
        type: string
      previousUri:
        description: 'The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. '
        type: string
      resultSetSize:
        description: 'The number of results returned in this response. '
        type: string
      startPosition:
        description: Starting position of the current result set.
        type: string
      totalSetSize:
        description: The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.
        type: string
    type: object
    x-ds-category: Templates
    x-ds-definition-name: bulkRecipientsResponse
    x-ds-order: '30'
    x-ms-summary: Template bulk recipients
  TemplateCustomFields:
    description: Template custom fields
    properties:
      listCustomFields:
        description: An array of list custom fields.
        items:
          $ref: '#/definitions/listCustomField'
        type: array
      textCustomFields:
        description: An array of text custom fields.
        items:
          $ref: '#/definitions/textCustomField'
        type: array
    type: object
    x-ds-category: Templates
    x-ds-definition-name: customFields
    x-ds-order: '70'
    x-ms-summary: Template custom fields
  TemplateDocumentFields:
    description: Template document fields
    properties:
      documentFields:
        description: |
          The array of name/value custom data strings to be added to a document. Custom document field information is returned in the status, but otherwise is not used by DocuSign. The array contains the elements: 

          * name - A string that can be a maximum of 50 characters. 
          * value - A string that can be a maximum of 200 characters.

          *IMPORTANT*: If you are using xml, the name/value pair is contained in a nameValue element. 
        items:
          $ref: '#/definitions/nameValue'
        type: array
    type: object
    x-ds-category: Templates
    x-ds-definition-name: documentFieldsInformation
    x-ds-order: '60'
    x-ms-summary: Template document fields
  TemplateDocumentTabs:
    description: ''
    properties:
      approveTabs:
        description: |
          A tab that allows the recipient to approve documents
          without placing a signature or initials on the
          document. If the recipient clicks the Approve tab during the signing
          process, the recipient is considered to have signed the document. No
          information is shown on the document for the approval, but it is
          recorded as a signature in the envelope history.
        items:
          $ref: '#/definitions/approve'
        type: array
      checkboxTabs:
        description: Specifies a tag on the document in a location where the recipient can select an option.
        items:
          $ref: '#/definitions/checkbox'
        type: array
      companyTabs:
        description: |-
          Specifies a tag on the document where you want the recipient's company name to appear.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
        items:
          $ref: '#/definitions/company'
        type: array
      dateSignedTabs:
        description: Specifies a tab on the document where the date the document was signed will automatically appear.
        items:
          $ref: '#/definitions/dateSigned'
        type: array
      dateTabs:
        description: |-
          Specifies a tab on the document where you want the recipient to enter a date. Date tabs are single-line fields that allow date information to be entered in any format. The tooltip for this tab recommends entering the date as MM/DD/YYYY, but this is not enforced. The format entered by the signer is retained. 

          If you need a particular date format enforced, DocuSign recommends using a Text tab with a Validation Pattern and Validation Message to enforce the format.
        items:
          $ref: '#/definitions/date'
        type: array
      declineTabs:
        description: 'Specifies a tag on the document where you want to give the recipient the option of declining an envelope. If the recipient clicks the Decline tag during the signing process, the envelope is voided.'
        items:
          $ref: '#/definitions/decline'
        type: array
      emailAddressTabs:
        description: 'Specifies a location on the document where you want where you want the recipient''s email, as entered in the recipient information, to display.'
        items:
          $ref: '#/definitions/emailAddress'
        type: array
      emailTabs:
        description: |-
          Specifies a tag on the document where you want the recipient to enter an email. Email tags are single-line fields that accept any characters. The system checks that a valid email format (i.e. xxx@yyy.zzz) is entered in the tag. It uses the same parameters as a Text tab, with the validation message and pattern set for email information.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
        items:
          $ref: '#/definitions/email'
        type: array
      envelopeIdTabs:
        description: 'Specifies a tag on the document where you want the envelope ID for to appear. Recipients cannot enter or change the information in this tab, it is for informational purposes only.'
        items:
          $ref: '#/definitions/envelopeId'
        type: array
      firstNameTabs:
        description: 'Specifies tag on a document where you want the recipient''s first name to appear. This tag takes the recipient''s name, as entered in the recipient information, splits it into sections based on spaces and uses the first section as the first name.'
        items:
          $ref: '#/definitions/firstName'
        type: array
      formulaTabs:
        description: |
          A list of formula tabs.

          The value of a formula tab is calculated
          from the values of other
          number or date tabs in the document.
          When the recipient completes the underlying fields,
          the formula tab calculates and displays the result.

          The `formula` property of the tab
          contains the references
          to the underlying tabs.
          See [Calculated Fields][calculatedfields]
          in the DocuSign Support Center
          to learn more about formulas.

          If a formula tab contains
          a `paymentDetails` property,
          the tab is considered a payment item.
          See [Requesting Payments Along with Signatures][paymentguide]
          in the DocuSign Support Center
          to learn more about payments.

          [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields
          [paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures
        items:
          $ref: '#/definitions/formulaTab'
        type: array
      fullNameTabs:
        description: Specifies a tag on the document where you want the recipient's name to appear.
        items:
          $ref: '#/definitions/fullName'
        type: array
      initialHereTabs:
        description: Specifies a tag location in the document at which a recipient will place their initials. The `optional` parameter specifies whether the initials are required or optional.
        items:
          $ref: '#/definitions/initialHere'
        type: array
      lastNameTabs:
        description: 'Specifies a tag on a document where you want the recipient''s last name to appear. This tag takes the recipient''s name, as entered in the recipient information, splits it into sections based on spaces and uses the last section as the last name.'
        items:
          $ref: '#/definitions/lastName'
        type: array
      listTabs:
        description: 'Specify this tag to give your recipient a list of options, presented as a drop-down list, from which they can select.'
        items:
          $ref: '#/definitions/list'
        type: array
      noteTabs:
        description: 'Specifies a location on the document where you want to place additional information, in the form of a note, for a recipient.'
        items:
          $ref: '#/definitions/note'
        type: array
      numberTabs:
        description: |-
          Specifies a tag on the document where you want the recipient to enter a number. It uses the same parameters as a Text tab, with the validation message and pattern set for number information.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response. 
        items:
          $ref: '#/definitions/number'
        type: array
      radioGroupTabs:
        description: Specifies a tag on the document in a location where the recipient can select one option from a group of options using a radio button. The radio buttons do not have to be on the same page in a document.
        items:
          $ref: '#/definitions/radioGroup'
        type: array
      signHereTabs:
        description: |
          A complex type the contains information about the tag that specifies where the recipient places their signature in the document. The "optional" parameter sets if the signature is required or optional.
        items:
          $ref: '#/definitions/signHere'
        type: array
      signerAttachmentTabs:
        description: Specifies a tag on the document when you want the recipient to add supporting documents to an envelope.
        items:
          $ref: '#/definitions/signerAttachment'
        type: array
      ssnTabs:
        description: |-
          Specifies a tag on the document where you want the recipient to enter a Social Security Number (SSN). A SSN can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
        items:
          $ref: '#/definitions/ssn'
        type: array
      textTabs:
        description: |-
          Specifies a that that is an adaptable field that allows the recipient to enter different text information.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
        items:
          $ref: '#/definitions/text'
        type: array
      titleTabs:
        description: |-
          Specifies a tag on the document where you want the recipient's title to appear.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
        items:
          $ref: '#/definitions/title'
        type: array
      viewTabs:
        description: ''
        items:
          $ref: '#/definitions/view'
        type: array
      zipTabs:
        description: |-
          Specifies a tag on the document where you want the recipient to enter a ZIP code. The ZIP code can be a five numbers or the ZIP+4 format with nine numbers. The zip code can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
        items:
          $ref: '#/definitions/zip'
        type: array
    type: object
    x-ds-category: Templates
    x-ds-definition-name: tabs
    x-ds-order: '50'
    x-ms-summary: ''
  TemplateDocumentVisibility:
    description: ''
    properties:
      documentVisibility:
        description: ''
        items:
          $ref: '#/definitions/documentVisibility'
        type: array
    type: object
    x-ds-category: Templates
    x-ds-definition-name: templateDocumentVisibilityList
    x-ds-order: '180'
    x-ms-summary: ''
  TemplateDocuments:
    description: Template documents
    properties:
      templateDocuments:
        description: ''
        items:
          $ref: '#/definitions/envelopeDocument'
        type: array
      templateId:
        description: 'The unique identifier of the template. If this is not provided, DocuSign will generate a value. '
        type: string
    type: object
    x-ds-category: Templates
    x-ds-definition-name: templateDocumentsResult
    x-ds-order: '40'
    x-ms-summary: Template documents
  TemplateLocks:
    description: Template locks
    properties:
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      lockDurationInSeconds:
        description: |
          Sets the time, in seconds, until the lock expires when there is no activity on the envelope.

          If no value is entered, then the default value of 300 seconds is used. The maximum value is 1,800 seconds.

          The lock duration can be extended.
        type: string
      lockToken:
        description: A unique identifier provided to the owner of the envelope lock.   Used to prove ownership of the lock.
        type: string
      lockType:
        description: The type of envelope lock.  Currently "edit" is the only supported type.
        type: string
      lockedByApp:
        description: Specifies the friendly name of  the application that is locking the envelope.
        type: string
      lockedByUser:
        $ref: '#/definitions/userInfo'
        description: A complex type containing information about the user that has the Envelope or Template locked.
      lockedUntilDateTime:
        description: The datetime until the envelope lock expires.
        type: string
      useScratchPad:
        description: |-
          Reserved for future use.

          Indicates whether a scratchpad is used for editing information.
           
        type: string
    type: object
    x-ds-category: Templates
    x-ds-definition-name: lockInformation
    x-ds-order: '80'
    x-ms-summary: Template locks
  TemplateRecipientTabs:
    description: Template tabs
    properties:
      approveTabs:
        description: |
          A tab that allows the recipient to approve documents
          without placing a signature or initials on the
          document. If the recipient clicks the Approve tab during the signing
          process, the recipient is considered to have signed the document. No
          information is shown on the document for the approval, but it is
          recorded as a signature in the envelope history.
        items:
          $ref: '#/definitions/approve'
        type: array
      checkboxTabs:
        description: Specifies a tag on the document in a location where the recipient can select an option.
        items:
          $ref: '#/definitions/checkbox'
        type: array
      companyTabs:
        description: |-
          Specifies a tag on the document where you want the recipient's company name to appear.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
        items:
          $ref: '#/definitions/company'
        type: array
      dateSignedTabs:
        description: Specifies a tab on the document where the date the document was signed will automatically appear.
        items:
          $ref: '#/definitions/dateSigned'
        type: array
      dateTabs:
        description: |-
          Specifies a tab on the document where you want the recipient to enter a date. Date tabs are single-line fields that allow date information to be entered in any format. The tooltip for this tab recommends entering the date as MM/DD/YYYY, but this is not enforced. The format entered by the signer is retained. 

          If you need a particular date format enforced, DocuSign recommends using a Text tab with a Validation Pattern and Validation Message to enforce the format.
        items:
          $ref: '#/definitions/date'
        type: array
      declineTabs:
        description: 'Specifies a tag on the document where you want to give the recipient the option of declining an envelope. If the recipient clicks the Decline tag during the signing process, the envelope is voided.'
        items:
          $ref: '#/definitions/decline'
        type: array
      emailAddressTabs:
        description: 'Specifies a location on the document where you want where you want the recipient''s email, as entered in the recipient information, to display.'
        items:
          $ref: '#/definitions/emailAddress'
        type: array
      emailTabs:
        description: |-
          Specifies a tag on the document where you want the recipient to enter an email. Email tags are single-line fields that accept any characters. The system checks that a valid email format (i.e. xxx@yyy.zzz) is entered in the tag. It uses the same parameters as a Text tab, with the validation message and pattern set for email information.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
        items:
          $ref: '#/definitions/email'
        type: array
      envelopeIdTabs:
        description: 'Specifies a tag on the document where you want the envelope ID for to appear. Recipients cannot enter or change the information in this tab, it is for informational purposes only.'
        items:
          $ref: '#/definitions/envelopeId'
        type: array
      firstNameTabs:
        description: 'Specifies tag on a document where you want the recipient''s first name to appear. This tag takes the recipient''s name, as entered in the recipient information, splits it into sections based on spaces and uses the first section as the first name.'
        items:
          $ref: '#/definitions/firstName'
        type: array
      formulaTabs:
        description: |
          A list of formula tabs.

          The value of a formula tab is calculated
          from the values of other
          number or date tabs in the document.
          When the recipient completes the underlying fields,
          the formula tab calculates and displays the result.

          The `formula` property of the tab
          contains the references
          to the underlying tabs.
          See [Calculated Fields][calculatedfields]
          in the DocuSign Support Center
          to learn more about formulas.

          If a formula tab contains
          a `paymentDetails` property,
          the tab is considered a payment item.
          See [Requesting Payments Along with Signatures][paymentguide]
          in the DocuSign Support Center
          to learn more about payments.

          [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields
          [paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures
        items:
          $ref: '#/definitions/formulaTab'
        type: array
      fullNameTabs:
        description: Specifies a tag on the document where you want the recipient's name to appear.
        items:
          $ref: '#/definitions/fullName'
        type: array
      initialHereTabs:
        description: Specifies a tag location in the document at which a recipient will place their initials. The `optional` parameter specifies whether the initials are required or optional.
        items:
          $ref: '#/definitions/initialHere'
        type: array
      lastNameTabs:
        description: 'Specifies a tag on a document where you want the recipient''s last name to appear. This tag takes the recipient''s name, as entered in the recipient information, splits it into sections based on spaces and uses the last section as the last name.'
        items:
          $ref: '#/definitions/lastName'
        type: array
      listTabs:
        description: 'Specify this tag to give your recipient a list of options, presented as a drop-down list, from which they can select.'
        items:
          $ref: '#/definitions/list'
        type: array
      noteTabs:
        description: 'Specifies a location on the document where you want to place additional information, in the form of a note, for a recipient.'
        items:
          $ref: '#/definitions/note'
        type: array
      numberTabs:
        description: |-
          Specifies a tag on the document where you want the recipient to enter a number. It uses the same parameters as a Text tab, with the validation message and pattern set for number information.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response. 
        items:
          $ref: '#/definitions/number'
        type: array
      radioGroupTabs:
        description: Specifies a tag on the document in a location where the recipient can select one option from a group of options using a radio button. The radio buttons do not have to be on the same page in a document.
        items:
          $ref: '#/definitions/radioGroup'
        type: array
      signHereTabs:
        description: |
          A complex type the contains information about the tag that specifies where the recipient places their signature in the document. The "optional" parameter sets if the signature is required or optional.
        items:
          $ref: '#/definitions/signHere'
        type: array
      signerAttachmentTabs:
        description: Specifies a tag on the document when you want the recipient to add supporting documents to an envelope.
        items:
          $ref: '#/definitions/signerAttachment'
        type: array
      ssnTabs:
        description: |-
          Specifies a tag on the document where you want the recipient to enter a Social Security Number (SSN). A SSN can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
        items:
          $ref: '#/definitions/ssn'
        type: array
      textTabs:
        description: |-
          Specifies a that that is an adaptable field that allows the recipient to enter different text information.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
        items:
          $ref: '#/definitions/text'
        type: array
      titleTabs:
        description: |-
          Specifies a tag on the document where you want the recipient's title to appear.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
        items:
          $ref: '#/definitions/title'
        type: array
      viewTabs:
        description: ''
        items:
          $ref: '#/definitions/view'
        type: array
      zipTabs:
        description: |-
          Specifies a tag on the document where you want the recipient to enter a ZIP code. The ZIP code can be a five numbers or the ZIP+4 format with nine numbers. The zip code can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
        items:
          $ref: '#/definitions/zip'
        type: array
    type: object
    x-ds-category: Templates
    x-ds-definition-name: tabs
    x-ds-order: '50'
    x-ms-summary: Template tabs
  TemplateRecipients:
    description: Template recipients
    properties:
      agents:
        description: A complex type defining the management and access rights of a recipient assigned assigned as an agent on the document.
        items:
          $ref: '#/definitions/agent'
        type: array
      carbonCopies:
        description: 'A complex type containing information about recipients who should receive a copy of the envelope, but does not need to sign it.'
        items:
          $ref: '#/definitions/carbonCopy'
        type: array
      certifiedDeliveries:
        description: 'A complex type containing information on a recipient the must receive the completed documents for the envelope to be completed, but the recipient does not need to sign, initial, date, or add information to any of the documents.'
        items:
          $ref: '#/definitions/certifiedDelivery'
        type: array
      currentRoutingOrder:
        description: ''
        type: string
      editors:
        description: A complex type defining the management and access rights of a recipient assigned assigned as an editor on the document.
        items:
          $ref: '#/definitions/editor'
        type: array
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      inPersonSigners:
        description: Specifies a signer that is in the same physical location as a DocuSign user who will act as a Signing Host for the transaction. The recipient added is the Signing Host and new separate Signer Name field appears after Sign in person is selected.
        items:
          $ref: '#/definitions/inPersonSigner'
        type: array
      intermediaries:
        description: 'Identifies a recipient that can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order (until subsequent Agents, Editors or Intermediaries recipient types are added).'
        items:
          $ref: '#/definitions/intermediary'
        type: array
      recipientCount:
        description: |-
          The list of recipient event statuses that will trigger Connect to send updates to the url. It can be a two-part list with:

          * recipientEventStatusCode - The recipient status, this can be Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded.
          * includeDocuments - When set to **true**, the envelope time zone information is included in the message.
        type: string
      signers:
        description: A complex type containing information about the Signer recipient.
        items:
          $ref: '#/definitions/signer'
        type: array
    type: object
    x-ds-category: Templates
    x-ds-definition-name: recipients
    x-ds-order: '20'
    x-ms-summary: Template recipients
  TemplateViews:
    description: Embedding template views
    properties:
      url:
        description: The view URL to be navigated to.
        type: string
    type: object
    x-ds-category: Templates
    x-ds-definition-name: viewUrl
    x-ds-order: '55'
    x-ms-summary: Embedding template views
  Templates:
    description: Template management
    properties:
      allowMarkup:
        description: 'When set to **true**, Document Markup is enabled for envelope. Account must have Document Markup enabled to use this'
        type: string
      allowReassign:
        description: 'When set to **true**, the recipient can redirect an envelope to a more appropriate recipient.'
        type: string
      asynchronous:
        description: 'When set to **true**, the envelope is queued for processing and the value of the `status` property is set to ''Processing''. Additionally, get status calls return ''Processing'' until completed.'
        type: string
      attachmentsUri:
        description: ''
        type: string
      authoritativeCopy:
        description: Specifies the Authoritative copy feature. If set to true the Authoritative copy feature is enabled.
        type: string
      autoNavigation:
        description: |
          Specifies whether auto navigation is set for the recipient.
        type: string
      brandId:
        description: The unique identifier of a brand.
        type: string
      brandLock:
        description: ''
        type: string
      certificateUri:
        description: Retrieves a URI for an endpoint that allows you to easily retrieve certificate information.
        type: string
      completedDateTime:
        description: Specifies the date and time this item was completed.
        type: string
      createdDateTime:
        description: Indicates the date and time the item was created.
        type: string
      customFields:
        $ref: '#/definitions/AccountCustomFields'
        description: An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
      customFieldsUri:
        description: Contains a URI for an endpoint that you can use to retrieve the custom fields.
        type: string
      declinedDateTime:
        description: The date and time the recipient declined the document.
        type: string
      deletedDateTime:
        description: Specifies the data and time the item was deleted.
        type: string
      deliveredDateTime:
        description: 'Reserved: For DocuSign use only.'
        type: string
      documents:
        description: Complex element contains the details on the documents in the envelope.
        items:
          $ref: '#/definitions/document'
        type: array
      documentsCombinedUri:
        description: ''
        type: string
      documentsUri:
        description: Contains a URI for an endpoint that you can use to retrieve the documents.
        type: string
      emailBlurb:
        description: ''
        type: string
      emailSettings:
        $ref: '#/definitions/EnvelopeEmailSettings'
        description: ''
      emailSubject:
        description: |-
          Specifies the subject of the email that is sent to all recipients.

          See [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.
        type: string
      enableWetSign:
        description: 'When set to **true**, the signer is allowed to print the document and sign it on paper.'
        type: string
      enforceSignerVisibility:
        description: |-
          When set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.

          Your account must have Document Visibility enabled to use this.
        type: string
      envelopeId:
        description: The envelope ID of the envelope status that failed to post.
        type: string
      envelopeIdStamping:
        description: 'When set to **true**, Envelope ID Stamping is enabled.'
        type: string
      envelopeTemplateDefinition:
        $ref: '#/definitions/envelopeTemplateDefinition'
        description: |
          A complex element containing the following information:

          templateId: Unique identifier of the template. If this is not provided, DocuSign will generate a value. 

          name: Name of the template. Maximum length: 100 characters.

          shared: When set to **true**, the template is shared with the Everyone group in the account. If false, the template is only shared with the Administrator group.

          password: Password, if the template is locked.

          description: Description of the template. Maximum Length: 500 characters.

          pageCount: Number of document pages in the template.

          folderName: The name of the folder the template is located in.

          folderId: The ID for the folder.

          owner: The userName, email, userId, userType, and userStatus for the template owner.
      envelopeUri:
        description: Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.
        type: string
      initialSentDateTime:
        description: ''
        type: string
      is21CFRPart11:
        description: 'When set to **true**, indicates that this module is enabled on the account.'
        type: string
      isSignatureProviderEnvelope:
        description: ''
        type: string
      lastModifiedDateTime:
        description: The date and time the item was last modified.
        type: string
      lockInformation:
        $ref: '#/definitions/EnvelopeLocks'
        description: ''
      messageLock:
        description: |-
          When set to **true**, prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope. 

          Additionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes. 

          However, if the `messageLock` node is set to true**** and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.
        type: string
      notification:
        $ref: '#/definitions/notification'
        description: ''
      notificationUri:
        description: Contains a URI for an endpoint that you can use to retrieve the notifications.
        type: string
      purgeState:
        description: ''
        type: string
      recipients:
        $ref: '#/definitions/EnvelopeRecipients'
        description: ''
      recipientsLock:
        description: 'When set to **true**, prevents senders from changing, correcting, or deleting the recipient information for the envelope.'
        type: string
      recipientsUri:
        description: Contains a URI for an endpoint that you can use to retrieve the recipients.
        type: string
      sentDateTime:
        description: The date and time the envelope was sent.
        type: string
      signingLocation:
        description: Specifies the physical location where the signing takes place. It can have two enumeration values; InPerson and Online. The default value is Online.
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      statusChangedDateTime:
        description: The data and time the status changed.
        type: string
      templatesUri:
        description: Contains a URI for an endpoint which you can use to retrieve the templates.
        type: string
      transactionId:
        description: ' Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The `transactionId` property can be used determine an envelope''s status (i.e. was it created or not) in cases where the internet connection was lost before the envelope status was returned.'
        type: string
      useDisclosure:
        description: |-
          When set to **true**, the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When set to **false**, the Electronic Record and Signature Disclosure is not shown to any envelope recipients. 

          If the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.
        type: string
      voidedDateTime:
        description: The date and time the envelope or template was voided.
        type: string
      voidedReason:
        description: The reason the envelope or template was voided.
        type: string
    type: object
    x-ds-category: Templates
    x-ds-definition-name: envelopeTemplate
    x-ds-order: '10'
    x-ms-summary: Template management
  UserCustomSettings:
    description: Users' custom settings
    properties:
      customSettings:
        description: The name/value pair information for the user custom setting.
        items:
          $ref: '#/definitions/nameValue'
        type: array
    type: object
    x-ds-category: Users
    x-ds-definition-name: customSettingsInformation
    x-ds-order: '30'
    x-ms-summary: Users' custom settings
  UserProfiles:
    description: Users' profiles
    properties:
      address:
        $ref: '#/definitions/addressInformation_v2'
        description: ''
      authenticationMethods:
        description: |-
          These properties cannot be modified in the PUT. 

          Indicates the authentication methods used by the user.
        items:
          $ref: '#/definitions/authenticationMethod'
        type: array
      companyName:
        description: The name of the user's Company.
        type: string
      displayOrganizationInfo:
        description: ' When set to **true**, the user''s company and title information are shown on the ID card. '
        type: string
      displayPersonalInfo:
        description: 'When set to **true**, the user''s Address and Phone number are shown on the ID card.'
        type: string
      displayProfile:
        description: 'When set to **true**, the user''s ID card can be viewed from signed documents and envelope history.'
        type: string
      displayUsageHistory:
        description: 'When set to **true**, the user''s usage information is shown on the ID card.'
        type: string
      profileImageUri:
        description: ''
        type: string
      title:
        description: The title of the user.
        type: string
      usageHistory:
        $ref: '#/definitions/usageHistory'
        description: |
          A complex element consisting of: 

          * lastSentDateTime - the date and time the user last sent an envelope. 
          * lastSignedDateTime - the date and time the user last signed an envelope.
          * sentCount - the number of envelopes the user has sent.
          * signedCount - the number of envelopes the user has signed. 
      userDetails:
        $ref: '#/definitions/Users'
        description: ''
      userProfileLastModifiedDate:
        description: ''
        type: string
    type: object
    x-ds-category: Users
    x-ds-definition-name: userProfile
    x-ds-order: '20'
    x-ms-summary: Users' profiles
  UserSignatures:
    description: Users' signatures
    properties:
      adoptedDateTime:
        description: The date and time the user adopted their signature.
        type: string
      createdDateTime:
        description: Indicates the date and time the item was created.
        type: string
      dateStampProperties:
        $ref: '#/definitions/dateStampProperties'
        description: ''
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      externalID:
        description: ''
        type: string
      imageType:
        description: One of **signature_image** or **initials_image**.
        type: string
      initials150ImageId:
        description: ''
        type: string
      initialsImageUri:
        description: Contains the URI for an endpoint that you can use to retrieve the initials image.
        type: string
      isDefault:
        description: ''
        type: string
      phoneticName:
        description: ''
        type: string
      signature150ImageId:
        description: ''
        type: string
      signatureFont:
        description: |
          The font type for the signature, if the signature is not drawn. The supported font types are:

          "7_DocuSign", "1_DocuSign", "6_DocuSign", "8_DocuSign", "3_DocuSign", "Mistral", "4_DocuSign", "2_DocuSign", "5_DocuSign", "Rage Italic"
        type: string
      signatureId:
        description: 'Specifies the signature ID associated with the signature name. You can use the signature ID in the URI in place of the signature name, and the value stored in the `signatureName` property in the body is used. This allows the use of special characters (such as "&", "<", ">") in a the signature name. Note that with each update to signatures, the returned signature ID might change, so the caller will need to trigger off the signature name to get the new signature ID.'
        type: string
      signatureImageUri:
        description: Contains the URI for an endpoint that you can use to retrieve the signature image.
        type: string
      signatureInitials:
        description: ' The initials associated with the signature.'
        type: string
      signatureName:
        description: Specifies the user signature name.
        type: string
      signatureType:
        description: ''
        type: string
      stampFormat:
        description: ''
        type: string
      stampImageUri:
        description: ''
        type: string
      stampSizeMM:
        description: ''
        type: string
      stampType:
        description: ''
        type: string
    type: object
    x-ds-category: Users
    x-ds-definition-name: userSignature
    x-ds-order: '40'
    x-ms-summary: Users' signatures
  UserSocialAccountLogins:
    description: Users' social account logins
    properties:
      email:
        description: The users email address.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      provider:
        description: 'The social account provider (Facebook, Yahoo, etc.)'
        type: string
      socialId:
        description: The ID provided by the Socal Account.
        type: string
      userName:
        description: The full user name for the account.
        type: string
    type: object
    x-ds-category: Authentication
    x-ds-definition-name: socialAccountInformation
    x-ds-order: '20'
    x-ms-summary: Users' social account logins
  Users:
    description: User management
    properties:
      accountManagementGranular:
        $ref: '#/definitions/userAccountManagementGranularInformation'
        description: ''
      activationAccessCode:
        description: The activation code the new user must enter when activating their account.
        type: string
      createdDateTime:
        description: Indicates the date and time the item was created.
        type: string
      customSettings:
        description: The name/value pair information for the user custom setting.
        items:
          $ref: '#/definitions/nameValue'
        type: array
      email:
        description: ''
        type: string
      enableConnectForUser:
        description: 'Specifies whether the user is enabled for updates from DocuSign Connect. Valid values: true or false.'
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      firstName:
        description: |-
          The user's first name. 
          Maximum Length: 50 characters.
        type: string
      forgottenPasswordInfo:
        $ref: '#/definitions/forgottenPasswordInformation'
        description: A complex element that has up to four Question/Answer pairs for forgotten password information.
      groupList:
        description: |
          A list of the group information for groups to add the user to. Group information can be found by calling [ML:GET group information]. The only required parameter is groupId. 

          The parameters are:

          * groupId - The DocuSign group ID for the group.
          * groupName - The name of the group
          * permissionProfileId - The ID of the permission profile associated with the group.
          * groupType - The group type.
        items:
          $ref: '#/definitions/group'
        type: array
      homeAddress:
        $ref: '#/definitions/addressInformation_v2'
        description: |-
          Specifies the email for the signing host. It is a Required element for In Person Signers recipient Type. 
          Maximum Length: 100 characters.
      initialsImageUri:
        description: Contains the URI for an endpoint that you can use to retrieve the initials image.
        type: string
      isAdmin:
        description: Determines if the feature set is actively set as part of the plan.
        type: string
      lastLogin:
        description: Shows the date-time when the user last logged on to the system.
        type: string
      lastName:
        description: |-
          The user's last name. 
          Maximum Length: 50 characters.
        type: string
      loginStatus:
        description: |
          Shows the current status of the user's password. Possible values are: 

          * password_reset
          * password_active
          * password_expired
          * password_locked
          * password_reset_failed 
        type: string
      middleName:
        description: |-
          The user's middle name. 
          Maximum Length: 50 characters.
        type: string
      password:
        description: ''
        type: string
      passwordExpiration:
        description: ''
        type: string
      permissionProfileId:
        description: ''
        type: string
      permissionProfileName:
        description: ''
        type: string
      profileImageUri:
        description: ''
        type: string
      sendActivationOnInvalidLogin:
        description: 'When set to **true**, specifies that an additional activation email is sent to the user if they fail a log on before activating their account. '
        type: string
      signatureImageUri:
        description: Contains the URI for an endpoint that you can use to retrieve the signature image.
        type: string
      suffixName:
        description: |-
          The suffix for the user's name. 

          Maximum Length: 50 characters. 
        type: string
      title:
        description: The title of the user.
        type: string
      uri:
        description: ''
        type: string
      userId:
        description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
        type: string
      userName:
        description: ''
        type: string
      userProfileLastModifiedDate:
        description: ''
        type: string
      userSettings:
        description: ' The name/value pair information for user settings. These determine the actions that a user can take in the account. The `[ML:userSettings]` are listed and described below.'
        items:
          $ref: '#/definitions/nameValue'
        type: array
      userStatus:
        description: ''
        type: string
      userType:
        description: ''
        type: string
      workAddress:
        $ref: '#/definitions/addressInformation_v2'
        description: ''
    type: object
    x-ds-category: Users
    x-ds-definition-name: userInformation
    x-ds-order: '10'
    x-ms-summary: User management
  WorkspaceItems:
    description: ''
    properties:
      callerAuthorization:
        $ref: '#/definitions/workspaceUserAuthorization'
        description: ''
      contentType:
        description: ''
        type: string
      created:
        description: The UTC DateTime when the workspace item was created.
        type: string
      createdById:
        description: ''
        type: string
      createdByInformation:
        $ref: '#/definitions/workspaceUser'
        description: ''
      extension:
        description: ''
        type: string
      fileSize:
        description: ''
        type: string
      fileUri:
        description: ''
        type: string
      id:
        description: ''
        type: string
      isPublic:
        description: ' If true, this supersedes need for bit mask permission with workspaceUserAuthorization'
        type: string
      lastModified:
        description: Utc date and time the comment was last updated (can only be done by creator.)
        type: string
      lastModifiedById:
        description: Utc date and time the comment was last updated (can only be done by creator)
        type: string
      lastModifiedByInformation:
        $ref: '#/definitions/workspaceUser'
        description: ''
      name:
        description: 'A simple string description of the item, such as a file name or a folder name.'
        type: string
      pageCount:
        description: ''
        type: string
      parentFolderId:
        description: 'The ID of the parent folder. This is the GUID of the parent folder, or the special value ''root'' for the root folder.'
        type: string
      parentFolderUri:
        description: ''
        type: string
      type:
        description: 'The type of the workspace item. Valid values are file, folder.'
        type: string
      uri:
        description: ''
        type: string
    type: object
    x-ds-category: Workspaces
    x-ds-definition-name: workspaceItem
    x-ds-order: '130'
    x-ms-summary: ''
  Workspaces:
    description: ''
    properties:
      billableAccountId:
        description: ''
        type: string
      created:
        description: The UTC DateTime when the workspace user authorization was created.
        type: string
      createdByInformation:
        $ref: '#/definitions/workspaceUser'
        description: ''
      lastModified:
        description: Utc date and time the comment was last updated (can only be done by creator.)
        type: string
      lastModifiedByInformation:
        $ref: '#/definitions/workspaceUser'
        description: ''
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      workspaceBaseUrl:
        description: The relative URL that may be used to access the workspace.
        type: string
      workspaceDescription:
        description: Text describing the purpose of the workspace.
        type: string
      workspaceId:
        description: 'The id of the workspace, always populated.'
        type: string
      workspaceName:
        description: The name of the workspace.
        type: string
      workspaceUri:
        description: The relative URI that may be used to access the workspace.
        type: string
    type: object
    x-ds-category: Workspaces
    x-ds-definition-name: workspace
    x-ds-order: '140'
    x-ms-summary: ''
  accountAddress:
    description: Contains information about an account address.
    properties:
      address1:
        description: |-
          First Line of the address.
          Maximum length: 100 characters.
        type: string
      address2:
        description: |-
          Second Line of the address.
          Maximum length: 100 characters.
        type: string
      city:
        description: The city value of the address.
        type: string
      country:
        description: Specifies the country associated with the address.
        type: string
      email:
        description: ''
        type: string
      fax:
        description: ''
        type: string
      firstName:
        description: |-
          The user's first name. 
          Maximum Length: 50 characters.
        type: string
      lastName:
        description: ''
        type: string
      phone:
        description: ''
        type: string
      postalCode:
        description: ''
        type: string
      state:
        description: The state or province associated with the address.
        type: string
      supportedCountries:
        description: Contains an array of countries supported by the billing plan.
        items:
          $ref: '#/definitions/country'
        type: array
    type: object
    x-ds-definition-name: accountAddress
    x-ms-summary: Contains information about an account address.
  accountBillingPlan:
    description: Contains information about an account billing plan.
    properties:
      addOns:
        description: 'Reserved:'
        items:
          $ref: '#/definitions/addOn'
        type: array
      canCancelRenewal:
        description: 'Reserved: TBD'
        type: string
      canUpgrade:
        description: 'When set to **true**, specifies that you can upgrade the account through the API.'
        type: string
      currencyCode:
        description: Specifies the ISO currency code for the account.
        type: string
      enableSupport:
        description: 'When set to **true**, then customer support is provided as part of the account plan.'
        type: string
      includedSeats:
        description: The number of seats (users) included.
        type: string
      incrementalSeats:
        description: 'Reserved: TBD'
        type: string
      isDowngrade:
        description: ''
        type: string
      otherDiscountPercent:
        description: ' Any other percentage discount for the plan. '
        type: string
      paymentCycle:
        description: ''
        type: string
      paymentMethod:
        description: ' The payment method used with the plan. The possible values are: CreditCard, PurchaseOrder, Premium, or Freemium. '
        type: string
      perSeatPrice:
        description: ''
        type: string
      planClassification:
        description: 'Identifies the type of plan. Examples include Business, Corporate, Enterprise, Free.'
        type: string
      planFeatureSets:
        description: |
          A complex type that sets the feature sets for the account. It contains the following information (all string content):

          * currencyFeatureSetPrices - Contains the currencyCode and currencySymbol for the alternate currency values for envelopeFee, fixedFee, seatFee that are configured for this plan feature set.
          * envelopeFee - An incremental envelope cost for plans with envelope overages (when isEnabled=true).
          * featureSetId - A unique ID for the feature set.
          * fixedFee - A one-time fee associated with the plan (when isEnabled=true).
          * isActive - Specifies whether the feature set is actively set as part of the plan.
          * isEnabled - Specifies whether the feature set is actively enabled as part of the plan.
          * name - The name of the feature set.
          * seatFee - An incremental seat cost for seat-based plans (when isEnabled=true).
        items:
          $ref: '#/definitions/featureSet'
        type: array
      planId:
        description: The DocuSign Plan ID for the account.
        type: string
      planName:
        description: The name of the Billing Plan.
        type: string
      renewalStatus:
        description: |-
          The renewal status for the account. The acceptable values are:

          * auto: The account automatically renews.
          * queued_for_close: Account will be closed at the billingPeriodEndDate.
          * queued_for_downgrade: Account will be downgraded at the billingPeriodEndDate.
        type: string
      seatDiscounts:
        description: |2-
           A complex type that contains any seat discount information.

          Values are: BeginSeatCount, EndSeatCount, and SeatDiscountPercent.
           
        items:
          $ref: '#/definitions/seatDiscount'
        type: array
      supportIncidentFee:
        description: The support incident fee charged for each support incident.
        type: string
      supportPlanFee:
        description: The support plan fee charged for this plan.
        type: string
    type: object
    x-ds-definition-name: accountBillingPlan
    x-ms-summary: Contains information about an account billing plan.
  accountMinimumPasswordLength:
    description: ''
    properties:
      maximumLength:
        description: ''
        type: string
      minimumLength:
        description: ''
        type: string
    type: object
    x-ds-definition-name: accountMinimumPasswordLength
    x-ms-summary: ''
  accountPasswordExpirePasswordDays:
    description: ''
    properties:
      maximumDays:
        description: ''
        type: string
      minimumDays:
        description: ''
        type: string
    type: object
    x-ds-definition-name: accountPasswordExpirePasswordDays
    x-ms-summary: ''
  accountPasswordLockoutDurationMinutes:
    description: ''
    properties:
      maximumMinutes:
        description: ''
        type: string
      minimumMinutes:
        description: ''
        type: string
    type: object
    x-ds-definition-name: accountPasswordLockoutDurationMinutes
    x-ms-summary: ''
  accountPasswordLockoutDurationType:
    description: ''
    properties:
      options:
        description: ''
        items:
          type: string
        type: array
    type: object
    x-ds-definition-name: accountPasswordLockoutDurationType
    x-ms-summary: ''
  accountPasswordMinimumPasswordAgeDays:
    description: ''
    properties:
      maximumAge:
        description: ''
        type: string
      minimumAge:
        description: ''
        type: string
    type: object
    x-ds-definition-name: accountPasswordMinimumPasswordAgeDays
    x-ms-summary: ''
  accountPasswordQuestionsRequired:
    description: ''
    properties:
      maximumQuestions:
        description: ''
        type: string
      minimumQuestions:
        description: ''
        type: string
    type: object
    x-ds-definition-name: accountPasswordQuestionsRequired
    x-ms-summary: ''
  accountPasswordStrengthType:
    description: ''
    properties:
      options:
        description: ''
        items:
          $ref: '#/definitions/accountPasswordStrengthTypeOption'
        type: array
    type: object
    x-ds-definition-name: accountPasswordStrengthType
    x-ms-summary: ''
  accountPasswordStrengthTypeOption:
    description: ''
    properties:
      minimumLength:
        description: ''
        type: string
      name:
        description: ''
        type: string
      passwordIncludeDigit:
        description: ''
        type: string
      passwordIncludeDigitOrSpecialCharacter:
        description: ''
        type: string
      passwordIncludeLowerCase:
        description: ''
        type: string
      passwordIncludeSpecialCharacter:
        description: ''
        type: string
      passwordIncludeUpperCase:
        description: ''
        type: string
    type: object
    x-ds-definition-name: accountPasswordStrengthTypeOption
    x-ms-summary: ''
  accountRoleSettings:
    description: ''
    properties:
      allowAccountManagement:
        description: ''
        type: string
      allowAccountManagementMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      allowApiAccess:
        description: ''
        type: string
      allowApiAccessMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      allowApiAccessToAccount:
        description: ''
        type: string
      allowApiAccessToAccountMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      allowApiSendingOnBehalfOfOthers:
        description: ''
        type: string
      allowApiSendingOnBehalfOfOthersMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      allowApiSequentialSigning:
        description: ''
        type: string
      allowApiSequentialSigningMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      allowBulkSending:
        description: ''
        type: string
      allowBulkSendingMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      allowDocuSignDesktopClient:
        description: ''
        type: string
      allowDocuSignDesktopClientMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      allowEnvelopeSending:
        description: ''
        type: string
      allowEnvelopeSendingMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      allowSendersToSetRecipientEmailLanguage:
        description: ''
        type: string
      allowSendersToSetRecipientEmailLanguageMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      allowSignerAttachments:
        description: ''
        type: string
      allowSignerAttachmentsMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      allowSupplementalDocuments:
        description: ''
        type: string
      allowSupplementalDocumentsMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      allowTaggingInSendAndCorrect:
        description: ''
        type: string
      allowTaggingInSendAndCorrectMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      allowVaulting:
        description: ''
        type: string
      allowVaultingMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      allowWetSigningOverride:
        description: ''
        type: string
      allowWetSigningOverrideMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      allowedAddressBookAccess:
        description: ''
        type: string
      allowedAddressBookAccessMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      allowedTemplateAccess:
        description: ''
        type: string
      allowedTemplateAccessMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      allowedToBeEnvelopeTransferRecipient:
        description: ''
        type: string
      allowedToBeEnvelopeTransferRecipientMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      canCreateWorkspaces:
        description: ''
        type: string
      canCreateWorkspacesMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      disableDocumentUpload:
        description: ''
        type: string
      disableDocumentUploadMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      disableOtherActions:
        description: ''
        type: string
      disableOtherActionsMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      enableApiRequestLogging:
        description: ''
        type: string
      enableApiRequestLoggingMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      enableRecipientViewingNotifications:
        description: ''
        type: string
      enableRecipientViewingNotificationsMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      enableSequentialSigningInterface:
        description: ''
        type: string
      enableSequentialSigningInterfaceMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      enableTransactionPointIntegration:
        description: ''
        type: string
      enableTransactionPointIntegrationMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      powerFormRole:
        description: ''
        type: string
      powerFormRoleMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      receiveCompletedSelfSignedDocumentsAsEmailLinks:
        description: ''
        type: string
      receiveCompletedSelfSignedDocumentsAsEmailLinksMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      supplementalDocumentsMustAccept:
        description: ''
        type: string
      supplementalDocumentsMustAcceptMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      supplementalDocumentsMustRead:
        description: ''
        type: string
      supplementalDocumentsMustReadMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      supplementalDocumentsMustView:
        description: ''
        type: string
      supplementalDocumentsMustViewMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      useNewDocuSignExperienceInterface:
        description: ''
        type: string
      useNewDocuSignExperienceInterfaceMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      useNewSendingInterface:
        description: ''
        type: string
      useNewSendingInterfaceMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      vaultingMode:
        description: ''
        type: string
      vaultingModeMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
    type: object
    x-ds-definition-name: accountRoleSettings
    x-ms-summary: ''
  accountSettingsInformation:
    description: Contains account settings information.
    properties:
      accountSettings:
        description: |
          The list of
          [account settings][accountsettings]
          that determine
          the features available for the account.
          Note that some features are determined
          by the plan used to create the account and cannot be overridden.

          [accountsettings]: /esign/restapi/Accounts/Accounts/create/#account-settings
        items:
          $ref: '#/definitions/nameValue'
        type: array
    type: object
    x-ds-definition-name: accountSettingsInformation
    x-ms-summary: Contains account settings information.
  accountSharedAccess:
    description: Contains shared access information.
    properties:
      accountId:
        description: The account ID associated with the envelope.
        type: string
      endPosition:
        description: 'The last position in the result set. '
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: A complex type containing an errorCode and message identifying the error that occurred.
      nextUri:
        description: 'The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. '
        type: string
      previousUri:
        description: 'The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. '
        type: string
      resultSetSize:
        description: 'The number of results returned in this response. '
        type: string
      sharedAccess:
        description: A complex type containing the shared access information to an envelope for the users specified in the request.
        items:
          $ref: '#/definitions/memberSharedItems'
        type: array
      startPosition:
        description: Starting position of the current result set.
        type: string
      totalSetSize:
        description: The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.
        type: string
    type: object
    x-ds-definition-name: accountSharedAccess
    x-ms-summary: Contains shared access information.
  accountSignatureProvider:
    description: ''
    properties:
      isRequired:
        description: ''
        type: string
      priority:
        description: ''
        type: string
      signatureProviderDisplayName:
        description: ''
        type: string
      signatureProviderId:
        description: ''
        type: string
      signatureProviderName:
        description: 'The name of an Electronic or Standards Based Signature (digital signature) provider for the signer to use. [The current provider list.](../../../../guide/appendix/standards_based_signatures.html#signature-provider-options)'
        type: string
      signatureProviderOptionsMetadata:
        description: ''
        items:
          $ref: '#/definitions/accountSignatureProviderOption'
        type: array
      signatureProviderRequiredOptions:
        description: ''
        items:
          $ref: '#/definitions/signatureProviderRequiredOption'
        type: array
    type: object
    x-ds-definition-name: accountSignatureProvider
    x-ms-summary: ''
  accountSignatureProviderOption:
    description: ''
    properties:
      signatureProviderOptionDisplayName:
        description: ''
        type: string
      signatureProviderOptionId:
        description: ''
        type: string
      signatureProviderOptionName:
        description: ''
        type: string
    type: object
    x-ds-definition-name: accountSignatureProviderOption
    x-ms-summary: ''
  addOn:
    description: Contains information about add ons.
    properties:
      active:
        description: 'Reserved:'
        type: string
      addOnId:
        description: 'Reserved:'
        type: string
      id:
        description: ''
        type: string
      name:
        description: 'Reserved:'
        type: string
    type: object
    x-ds-definition-name: addOn
    x-ms-summary: Contains information about add ons.
  addressInformation:
    description: Contains address information.
    properties:
      city:
        description: The city associated with the address.
        type: string
      country:
        description: Specifies the country associated with the address.
        type: string
      fax:
        description: A Fax number associated with the address if one is available.
        type: string
      phone:
        description: A phone number associated with the address.
        type: string
      state:
        description: The state or province associated with the address.
        type: string
      street1:
        description: The first line of the address.
        type: string
      street2:
        description: The second line of the address (optional).
        type: string
      zip:
        description: The zip or postal code associated with the address.
        type: string
    type: object
    x-ds-definition-name: addressInformation
    x-ms-summary: Contains address information.
  addressInformationInput:
    description: Contains address input information.
    properties:
      addressInformation:
        $ref: '#/definitions/addressInformation'
        description: |
          A complex type that contains the following information for the new account (all string content): address1, address2, city, country, fax, phone, postalCode and state.

          ###### Note: If country is US (United States) then State codes are validated for US States.

          Otherwise, State is treated as a non-validated string and serves the purpose of entering a state/province/region.
          The maximum characters for the strings are:

          * address1, address2, city, country and state: 100 characters
          * postalCode, phone, and fax: 20 characters
      displayLevelCode:
        description: |-
          Specifies the display level for the recipient. 
          Valid values are: 

          * ReadOnly
          * Editable
          * DoNotDisplay
        type: string
      receiveInResponse:
        description: 'When set to **true**, the information needs to be returned in the response.'
        type: string
    type: object
    x-ds-definition-name: addressInformationInput
    x-ms-summary: Contains address input information.
  addressInformation_v2:
    description: ''
    properties:
      address1:
        description: |-
          First Line of the address.
          Maximum length: 100 characters.
        type: string
      address2:
        description: |-
          Second Line of the address.
          Maximum length: 100 characters.
        type: string
      city:
        description: ''
        type: string
      country:
        description: Specifies the country associated with the address.
        type: string
      fax:
        description: ''
        type: string
      phone:
        description: ''
        type: string
      postalCode:
        description: ''
        type: string
      stateOrProvince:
        description: The state or province associated with the address.
        type: string
    type: object
    x-ds-definition-name: addressInformation_v2
    x-ms-summary: ''
  agent:
    description: Contains information about agent recipients.
    properties:
      accessCode:
        description: |-
          If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. 

          Maximum Length: 50 characters and it must conform to the account's access code format setting.

          If blank, but the signer `accessCode` property is set in the envelope, then that value is used.

          If blank and the signer `accessCode` property is not set, then the access code is not required.
        type: string
      addAccessCodeToEmail:
        description: This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.
        type: string
      clientUserId:
        description: |-
          Specifies whether the recipient is embedded or remote. 

          If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.

          Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending. 

          Maximum length: 100 characters. 
        type: string
      customFields:
        description: An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
        items:
          type: string
        type: array
      declinedDateTime:
        description: The date and time the recipient declined the document.
        type: string
      declinedReason:
        description: The reason the recipient declined the document.
        type: string
      deliveredDateTime:
        description: 'Reserved: For DocuSign use only.'
        type: string
      deliveryMethod:
        description: 'Reserved: For DocuSign use only.'
        type: string
      documentVisibility:
        description: ''
        items:
          $ref: '#/definitions/documentVisibility'
        type: array
      email:
        description: |-
          Email id of the recipient. Notification of the document to sign is sent to this email id. 

          Maximum length: 100 characters. 
        type: string
      emailNotification:
        $ref: '#/definitions/recipientEmailNotification'
        description: |-
          An optional complex type that sets a specific email subject and body for this recipient's notification email. 

          **Note**: If you use this field to set a specific email notification for one recipient, you must also set the email notification for the other recipients. Using this field for one or more recipients negates the Envelope `Subject` and `EmailBlurb` property settings. 
      emailRecipientPostSigningURL:
        description: ''
        type: string
      embeddedRecipientStartURL:
        description: |-
          Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. 

          If set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.

          It is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.

          If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. 

          *Example*: 

          `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` 
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      excludedDocuments:
        description: |-
          Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.

          When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
        items:
          type: string
        type: array
      faxNumber:
        description: 'Reserved:'
        type: string
      idCheckConfigurationName:
        description: |-
          Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.

          *Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.
        type: string
      idCheckInformationInput:
        $ref: '#/definitions/idCheckInformationInput'
        description: |-
          A complex element that contains input information related to a recipient ID check. It can include the following information.

          addressInformationInput: Used to set recipient address information and consists of:

          * addressInformation: consists of six elements, with stree2 and zipPlus4 being optional. The elements are: street1, street2, city, state, zip, zipPlus4. The maximum length of each element is: street1/street2 = 150 characters, city = 50 characters, state = 2 characters, and zip/zipPlus4 = 20 characters.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
          * receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.

          dobInformationInput: Used to set recipient date of birth information and consists of:

          * dateOfBirth: Specifies the recipient's date, month and year of birth.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
          * receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.

          ssn4InformationInput: Used to set the last four digits of the recipient's SSN information and consists of:

          * ssn4: Specifies the last four digits of the recipient's SSN.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
          * receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.

          ssn9InformationInput: Used to set the recipient's SSN information. Note that the ssn9 information can never be returned in the response. The ssn9 input consists of: 
          * ssn9: Specifies the recipient's SSN.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
           
      inheritEmailNotificationConfiguration:
        description: 'When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient''s account. '
        type: string
      name:
        description: ''
        type: string
      note:
        description: |
          A note sent to the recipient in the signing email.
          This note is unique to this recipient.
          In the user interface,
          it appears near the upper left corner
          of the document
          on the signing screen.

          Maximum Length: 1000 characters.
        type: string
      phoneAuthentication:
        $ref: '#/definitions/recipientPhoneAuthentication'
        description: |
          A complex type that Contains the elements:

          * recipMayProvideNumber - Boolean. When set to **true**, the recipient can use whatever phone number they choose.
          * senderProvidedNumbers - ArrayOfString.  A list of phone numbers the recipient can use.
          * recordVoicePrint - Reserved.
          * validateRecipProvidedNumber - Reserved.
      recipientAttachments:
        description: 'Reserved:'
        items:
          $ref: '#/definitions/recipientAttachment'
        type: array
      recipientAuthenticationStatus:
        $ref: '#/definitions/authenticationStatus'
        description: ''
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      recipientIdGuid:
        description: ''
        type: string
      requireIdLookup:
        description: 'When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. '
        type: string
      roleName:
        description: Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.
        type: string
      routingOrder:
        description: 'Specifies the routing order of the recipient in the envelope. '
        type: string
      samlAuthentication:
        $ref: '#/definitions/recipientSAMLAuthentication'
        description: |-
          Contains the name/value pair information for the SAML assertion attributes:

          * name - The name of the SAML assertion attribute.
          * value - The value associated with the named SAML assertion attribute. 

          Your account must be set up to use SSO to use this.
      sentDateTime:
        description: The date and time the envelope was sent.
        type: string
      signedDateTime:
        description: 'Reserved: For DocuSign use only. '
        type: string
      signingGroupId:
        description: 'When set to **true** and the feature is enabled in the sender''s account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).'
        type: string
      signingGroupName:
        description: |-
          The display name for the signing group. 

          Maximum Length: 100 characters. 
        type: string
      signingGroupUsers:
        description: A complex type that contains information about users in the signing group.
        items:
          $ref: '#/definitions/userInfo'
        type: array
      smsAuthentication:
        $ref: '#/definitions/recipientSMSAuthentication'
        description: |
          Contains the element senderProvidedNumbers which is an Array  of phone numbers the recipient can use for SMS text authentication. 
      socialAuthentications:
        description: ' Lists the social ID type that can be used for recipient authentication.'
        items:
          $ref: '#/definitions/socialAuthentication'
        type: array
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      totalTabCount:
        description: ''
        type: string
      userId:
        description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
        type: string
    type: object
    x-ds-definition-name: agent
    x-ms-summary: Contains information about agent recipients.
  apiRequestLog:
    description: Contains API request log information.
    properties:
      createdDateTime:
        description: Indicates the date and time the item was created.
        type: string
      description:
        description: |
          A sender-defined description of the line item.
        type: string
      requestLogId:
        description: ''
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
    type: object
    x-ds-definition-name: apiRequestLog
    x-ms-summary: Contains API request log information.
  apiRequestLogsResult:
    description: Contains information about mutiple API request logs.
    properties:
      apiRequestLogs:
        description: 'Reserved: TBD'
        items:
          $ref: '#/definitions/apiRequestLog'
        type: array
    type: object
    x-ds-definition-name: apiRequestLogsResult
    x-ms-summary: Contains information about mutiple API request logs.
  appStoreProduct:
    description: Contains information about an APP store product.
    properties:
      marketPlace:
        description: ''
        type: string
      productId:
        description: The Product ID from the AppStore.
        type: string
    type: object
    x-ds-definition-name: appStoreProduct
    x-ms-summary: Contains information about an APP store product.
  appStoreReceipt:
    description: Contains information about an APP store receipt.
    properties:
      productId:
        description: The Product ID from the AppStore.
        type: string
      receiptData:
        description: 'Reserved: TBD'
        type: string
    type: object
    x-ds-definition-name: appStoreReceipt
    x-ms-summary: Contains information about an APP store receipt.
  approve:
    description: |
      A tab that allows the recipient to approve documents
      without placing a signature or initials on the
      document.
    properties:
      anchorCaseSensitive:
        description: |-
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
          -->
        type: string
      anchorHorizontalAlignment:
        description: |
          Reserved for DocuSign.
          <!--
          Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
          -->
        type: string
      anchorIgnoreIfNotPresent:
        description: 'When set to **true**, this tab is ignored if anchorString is not found in the document.'
        type: string
      anchorMatchWholeWord:
        description: |
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
          -->
        type: string
      anchorString:
        description: Anchor text information for a radio button.
        type: string
      anchorUnits:
        description: 'Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.'
        type: string
      anchorXOffset:
        description: 'Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      anchorYOffset:
        description: 'Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      bold:
        description: 'When set to **true**, the information in the tab is bold.'
        type: string
      buttonText:
        description: ' Specifies the approval text displayed in the tab. '
        type: string
      conditionalParentLabel:
        description: For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
        type: string
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      customTabId:
        description: 'The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.'
        type: string
      documentId:
        description: Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      font:
        description: 'The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.'
        type: string
      fontColor:
        description: |-
          The font color used for the information in the tab.

          Possible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
        type: string
      fontSize:
        description: |-
          The font size used for the information in the tab.

          Possible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
        type: string
      height:
        description: Height of the tab in pixels.
        type: integer
      italic:
        description: 'When set to **true**, the information in the tab is italic.'
        type: string
      mergeField:
        $ref: '#/definitions/mergeField'
        description: ''
      pageNumber:
        description: |
          Specifies the page number on which the tab is located.
          Must be 1 for [supplemental documents][supdocs].

          [supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents
        type: string
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      tabId:
        description: |
          The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. 

           
        type: string
      tabLabel:
        description: |
          The label string associated with the tab.
          The string may be the empty string.
          If no value is provided, the tab type is used as the value.

          Maximum of 500 characters.
        type: string
      tabOrder:
        description: ''
        type: string
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      underline:
        description: 'When set to **true**, the information in the tab is underlined.'
        type: string
      width:
        description: Width of the tab in pixels.
        type: integer
      xPosition:
        description: |
          This indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. May be zero.
        type: string
      yPosition:
        description: |
          This indicates the vertical offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. May be zero.
        type: string
    type: object
    x-ds-definition-name: approve
    x-ms-summary: |
      A tab that allows the recipient to approve documents
      without placing a signature or initials on the
      document.
  attachment:
    description: Contains information about an attachment.
    properties:
      accessControl:
        description: ''
        type: string
      attachmentId:
        description: ''
        type: string
      attachmentType:
        description: Specifies the type of the attachment for the recipient.
        type: string
      data:
        description: ''
        type: string
      label:
        description: ''
        type: string
      name:
        description: ''
        type: string
      remoteUrl:
        description: ''
        type: string
    type: object
    x-ds-definition-name: attachment
    x-ms-summary: Contains information about an attachment.
  authenticationMethod:
    description: Contains information about the method used for authentication.
    properties:
      authenticationType:
        description: 'Indicates the type of authentication. Valid values are: PhoneAuth, STAN, ISCheck, OFAC, AccessCode, AgeVerify, or SSOAuth. '
        type: string
      lastProvider:
        description: 'The last provider that authenticated the user. '
        type: string
      lastTimestamp:
        description: ' The data and time the user last used the authentication method. '
        type: string
      totalCount:
        description: 'The number of times the authentication method was used. '
        type: integer
    type: object
    x-ds-definition-name: authenticationMethod
    x-ms-summary: Contains information about the method used for authentication.
  authenticationStatus:
    description: Contains information about the authentication status.
    properties:
      accessCodeResult:
        $ref: '#/definitions/eventResult'
        description: ''
      ageVerifyResult:
        $ref: '#/definitions/eventResult'
        description: ''
      anySocialIDResult:
        $ref: '#/definitions/eventResult'
        description: ''
      facebookResult:
        $ref: '#/definitions/eventResult'
        description: ''
      googleResult:
        $ref: '#/definitions/eventResult'
        description: ''
      idLookupResult:
        $ref: '#/definitions/eventResult'
        description: ''
      idQuestionsResult:
        $ref: '#/definitions/eventResult'
        description: ''
      linkedinResult:
        $ref: '#/definitions/eventResult'
        description: ''
      liveIDResult:
        $ref: '#/definitions/eventResult'
        description: ''
      ofacResult:
        $ref: '#/definitions/eventResult'
        description: ''
      openIDResult:
        $ref: '#/definitions/eventResult'
        description: ''
      phoneAuthResult:
        $ref: '#/definitions/eventResult'
        description: ''
      sTANPinResult:
        $ref: '#/definitions/eventResult'
        description: ''
      salesforceResult:
        $ref: '#/definitions/eventResult'
        description: ''
      signatureProviderResult:
        $ref: '#/definitions/eventResult'
        description: ''
      smsAuthResult:
        $ref: '#/definitions/eventResult'
        description: ''
      twitterResult:
        $ref: '#/definitions/eventResult'
        description: ''
      yahooResult:
        $ref: '#/definitions/eventResult'
        description: ''
    type: object
    x-ds-definition-name: authenticationStatus
    x-ms-summary: Contains information about the authentication status.
  bccEmailAddress:
    description: Contains information about the BCC email address.
    properties:
      bccEmailAddressId:
        description: |-
          Only users with canManageAccount setting can use this option. An array of up to 5 email addresses the envelope is sent to as a BCC email. 
           
          Example: If your account has BCC for Email Archive set up for the email address 'archive@mycompany.com' and you send an envelope using the BCC Email Override to send a BCC email to 'salesarchive@mycompany.com', then a copy of the envelope is only sent to the 'salesarchive@mycompany.com' email address.
        type: string
      email:
        description: |-
          Specifies the BCC email address. DocuSign verifies that the email format is correct, but does not verify that the email is active.Using this overrides the BCC for Email Archive information setting for this envelope.

          Maximum of length: 100 characters. 
        type: string
    type: object
    x-ds-definition-name: bccEmailAddress
    x-ms-summary: Contains information about the BCC email address.
  billingCharge:
    description: Contains information about a billing charge.
    properties:
      allowedQuantity:
        description: 'Reserved: TBD'
        type: string
      blocked:
        description: 'Reserved: TBD'
        type: string
      chargeName:
        description: |-
          Provides information on what services the charge item is for.

          The following table provides a description of the different chargeName values available at this time.

          | chargeName | Description |
          | --- | --- |
          | id_check | ID Check Charge |
          | in_person_signing | In Person Signing charge |
          | envelopes Included | Sent Envelopes for the account |
          | age_verify | Age verification check |
          | ofac | OFAC Check |
          | id_confirm | ID confirmation check |
          | student_authentication | STAN PIN authentication check |
          | wet_sign_fax | Pages for returning signed documents by fax |
          | attachment_fax | Pages for returning attachments by fax |
          | phone_authentication | Phone authentication charge |
          | powerforms | PowerForm envelopes sent |
          | signer_payments | Payment processing charge |
          | outbound_fax | Send by fax charge |
          | bulk_recipient_envelopes | Bulk Recipient Envelopes sent |
          | sms_authentications | SMS authentication charge |
          | saml_authentications | SAML authentication charge |
          | express_signer_certificate | DocuSign Express Certificate charge |
          | personal_signer_certificate | Personal Signer Certificate charge |
          | safe_certificate | SAFE BioPharma Signer Certificate charge |
          | seats | Included active seats charge |
          | open_trust_certificate | OpenTrust Signer Certificate charge |
        type: string
      chargeType:
        description: 'Reserved: TBD'
        type: string
      chargeUnitOfMeasure:
        description: 'Reserved: TBD'
        type: string
      discounts:
        description: ''
        items:
          $ref: '#/definitions/billingDiscount'
        type: array
      firstEffectiveDate:
        description: ''
        type: string
      includedQuantity:
        description: ''
        type: string
      incrementalQuantity:
        description: 'Reserved: TBD'
        type: string
      lastEffectiveDate:
        description: ''
        type: string
      prices:
        description: ''
        items:
          $ref: '#/definitions/billingPrice'
        type: array
      unitPrice:
        description: 'Reserved: TBD'
        type: string
      usedQuantity:
        description: ''
        type: string
    type: object
    x-ds-definition-name: billingCharge
    x-ms-summary: Contains information about a billing charge.
  billingChargeResponse:
    description: Defines a billing charge response object.
    properties:
      billingChargeItems:
        description: 'Reserved: TBD'
        items:
          $ref: '#/definitions/billingCharge'
        type: array
    type: object
    x-ds-definition-name: billingChargeResponse
    x-ms-summary: Defines a billing charge response object.
  billingDiscount:
    description: ''
    properties:
      beginQuantity:
        description: 'Reserved: TBD'
        type: string
      discount:
        description: ''
        type: string
      endQuantity:
        description: ''
        type: string
    type: object
    x-ds-definition-name: billingDiscount
    x-ms-summary: ''
  billingInvoiceItem:
    description: Contains information about an item on a billing invoice.
    properties:
      chargeAmount:
        description: 'Reserved: TBD'
        type: string
      chargeName:
        description: 'Reserved: TBD'
        type: string
      invoiceItemId:
        description: 'Reserved: TBD'
        type: string
      quantity:
        description: The quantity of envelopes to add to the account.
        type: string
      unitPrice:
        description: 'Reserved: TBD'
        type: string
    type: object
    x-ds-definition-name: billingInvoiceItem
    x-ms-summary: Contains information about an item on a billing invoice.
  billingInvoicesResponse:
    description: Defines a billing invoice response object.
    properties:
      billingInvoices:
        description: 'Reserved: TBD'
        items:
          $ref: '#/definitions/Invoices'
        type: array
      nextUri:
        description: 'The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. '
        type: string
      previousUri:
        description: 'The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. '
        type: string
    type: object
    x-ds-definition-name: billingInvoicesResponse
    x-ms-summary: Defines a billing invoice response object.
  billingInvoicesSummary:
    description: ''
    properties:
      billingInvoices:
        description: 'Reserved: TBD'
        items:
          $ref: '#/definitions/Invoices'
        type: array
      pastDueBalance:
        description: ''
        type: string
      paymentAllowed:
        description: ''
        type: string
    type: object
    x-ds-definition-name: billingInvoicesSummary
    x-ms-summary: ''
  billingPayment:
    description: Contains information on a billing plan.
    properties:
      amount:
        description: 'Reserved: TBD'
        type: string
      invoiceId:
        description: 'Reserved: TBD'
        type: string
      paymentId:
        description: ''
        type: string
    type: object
    x-ds-definition-name: billingPayment
    x-ms-summary: Contains information on a billing plan.
  billingPaymentRequest:
    description: ''
    properties:
      paymentAmount:
        description: The payment amount for the past due invoices. This value must match the pastDueBalance value retrieved using Get Past Due Invoices.
        type: string
    type: object
    x-ds-definition-name: billingPaymentRequest
    x-ms-summary: ''
  billingPaymentResponse:
    description: Defines an billing payment response object.
    properties:
      billingPayments:
        description: 'Reserved: TBD'
        items:
          $ref: '#/definitions/billingPayment'
        type: array
    type: object
    x-ds-definition-name: billingPaymentResponse
    x-ms-summary: Defines an billing payment response object.
  billingPaymentsResponse:
    description: Defines a billing payments response object.
    properties:
      billingPayments:
        description: 'Reserved: TBD'
        items:
          $ref: '#/definitions/Payments'
        type: array
      nextUri:
        description: 'The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. '
        type: string
      previousUri:
        description: 'The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. '
        type: string
    type: object
    x-ds-definition-name: billingPaymentsResponse
    x-ms-summary: Defines a billing payments response object.
  billingPlan:
    description: Contains information about a billing plan.
    properties:
      appStoreProducts:
        description: 'Reserved: TBD'
        items:
          $ref: '#/definitions/appStoreProduct'
        type: array
      currencyPlanPrices:
        description: 'Contains the currencyCode and currencySymbol for the alternate currency values for envelopeFee, fixedFee, and seatFee that are configured for this plan feature set.'
        items:
          $ref: '#/definitions/currencyPlanPrice'
        type: array
      enableSupport:
        description: 'When set to **true**, then customer support is provided as part of the account plan.'
        type: string
      includedSeats:
        description: The number of seats (users) included.
        type: string
      otherDiscountPercent:
        description: ''
        type: string
      paymentCycle:
        description: ' The payment cycle associated with the plan. The possible values are: Monthly or Annually. '
        type: string
      paymentMethod:
        description: ''
        type: string
      perSeatPrice:
        description: The per seat price for the plan.
        type: string
      planClassification:
        description: 'Identifies the type of plan. Examples include Business, Corporate, Enterprise, Free.'
        type: string
      planFeatureSets:
        description: A complex type that sets the feature sets for the account.
        items:
          $ref: '#/definitions/featureSet'
        type: array
      planId:
        description: The DocuSign Plan ID for the account.
        type: string
      planName:
        description: The name of the Billing Plan.
        type: string
      seatDiscounts:
        description: ''
        items:
          $ref: '#/definitions/seatDiscount'
        type: array
      supportIncidentFee:
        description: The support incident fee charged for each support incident.
        type: string
      supportPlanFee:
        description: The support plan fee charged for this plan.
        type: string
    type: object
    x-ds-definition-name: billingPlan
    x-ms-summary: Contains information about a billing plan.
  billingPlanInformation:
    description: ''
    properties:
      appStoreReceipt:
        $ref: '#/definitions/appStoreReceipt'
        description: ''
      billingAddress:
        $ref: '#/definitions/accountAddress'
        description: ''
      creditCardInformation:
        $ref: '#/definitions/creditCardInformation'
        description: A complex type that has information about the credit card used to pay for this account.
      downgradeReason:
        description: ''
        type: string
      enableSupport:
        description: 'When set to **true**, then customer support is provided as part of the account plan.'
        type: string
      includedSeats:
        description: The number of seats (users) included.
        type: string
      incrementalSeats:
        description: 'Reserved: TBD'
        type: string
      paymentProcessorInformation:
        $ref: '#/definitions/paymentProcessorInformation'
        description: ''
      planInformation:
        $ref: '#/definitions/planInformation'
        description: An object used to identify the features and attributes of the account being created.
      referralInformation:
        $ref: '#/definitions/referralInformation'
        description: |
          A complex type that contains the following information for entering referral and discount information. The following items are included in the referral information (all string content): enableSupport, includedSeats, saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, saleDiscountSeatPriceOverride, planStartMonth, referralCode, referrerName, advertisementId, publisherId, shopperId, promoCode, groupMemberId, idType, and industry 

          ###### Note: saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, and saleDiscountSeatPriceOverride are reserved for DoucSign use only. 
      renewalStatus:
        description: ''
        type: string
      saleDiscountAmount:
        description: Reserved for DocuSign use only.
        type: string
      saleDiscountFixedAmount:
        description: Reserved for DocuSign use only.
        type: string
      saleDiscountPercent:
        description: Reserved for DocuSign use only.
        type: string
      saleDiscountPeriods:
        description: Reserved for DocuSign use only.
        type: string
      saleDiscountSeatPriceOverride:
        description: Reserved for DocuSign use only.
        type: string
    type: object
    x-ds-definition-name: billingPlanInformation
    x-ms-summary: ''
  billingPlanPreview:
    description: Contains information about a preview billing plan.
    properties:
      currencyCode:
        description: Specifies the ISO currency code for the account.
        type: string
      invoice:
        $ref: '#/definitions/Invoices'
        description: ''
      isProrated:
        description: ''
        type: string
      subtotalAmount:
        description: ''
        type: string
      taxAmount:
        description: ''
        type: string
      totalAmount:
        description: ''
        type: string
    type: object
    x-ds-definition-name: billingPlanPreview
    x-ms-summary: Contains information about a preview billing plan.
  billingPlanResponse:
    description: Defines a billing plan response object.
    properties:
      billingPlan:
        $ref: '#/definitions/billingPlan'
        description: ''
      successorPlans:
        description: ''
        items:
          $ref: '#/definitions/billingPlan'
        type: array
    type: object
    x-ds-definition-name: billingPlanResponse
    x-ms-summary: Defines a billing plan response object.
  billingPlanUpdateResponse:
    description: Defines a billing plan update response object.
    properties:
      accountPaymentMethod:
        description: ''
        type: string
      billingPlanPreview:
        $ref: '#/definitions/billingPlanPreview'
        description: ''
      currencyCode:
        description: Specifies the ISO currency code for the account.
        type: string
      includedSeats:
        description: The number of seats (users) included.
        type: string
      paymentCycle:
        description: ''
        type: string
      paymentMethod:
        description: ''
        type: string
      planId:
        description: The DocuSign Plan ID for the account.
        type: string
      planName:
        description: ''
        type: string
    type: object
    x-ds-definition-name: billingPlanUpdateResponse
    x-ms-summary: Defines a billing plan update response object.
  billingPlansResponse:
    description: Defines a billing plans response object.
    properties:
      billingPlans:
        description: 'Reserved: TBD'
        items:
          $ref: '#/definitions/billingPlan'
        type: array
    type: object
    x-ds-definition-name: billingPlansResponse
    x-ms-summary: Defines a billing plans response object.
  billingPrice:
    description: ''
    properties:
      beginQuantity:
        description: 'Reserved: TBD'
        type: string
      endQuantity:
        description: ''
        type: string
      unitPrice:
        description: 'Reserved: TBD'
        type: string
    type: object
    x-ds-definition-name: billingPrice
    x-ms-summary: ''
  brand:
    description: ''
    properties:
      brandCompany:
        description: The name of the company associated with this brand.
        type: string
      brandId:
        description: The ID used to identify a specific brand in API calls.
        type: string
      brandName:
        description: The name of the brand.
        type: string
      colors:
        description: ''
        items:
          $ref: '#/definitions/nameValue'
        type: array
      emailContent:
        description: ''
        items:
          $ref: '#/definitions/brandEmailContent'
        type: array
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      isOverridingCompanyName:
        description: ''
        type: string
      isSendingDefault:
        description: ''
        type: string
      isSigningDefault:
        description: ''
        type: string
      landingPages:
        description: ''
        items:
          $ref: '#/definitions/nameValue'
        type: array
      links:
        description: ''
        items:
          $ref: '#/definitions/brandLink'
        type: array
      logos:
        $ref: '#/definitions/brandLogos'
        description: ''
      resources:
        $ref: '#/definitions/brandResourceUrls'
        description: ''
    type: object
    x-ds-definition-name: brand
    x-ms-summary: ''
  brandEmailContent:
    description: ''
    properties:
      content:
        description: ''
        type: string
      emailContentType:
        description: ''
        type: string
      emailToLink:
        description: ''
        type: string
      linkText:
        description: ''
        type: string
    type: object
    x-ds-definition-name: brandEmailContent
    x-ms-summary: ''
  brandLink:
    description: ''
    properties:
      linkText:
        description: ''
        type: string
      linkType:
        description: ''
        type: string
      showLink:
        description: ''
        type: string
      urlOrMailTo:
        description: ''
        type: string
    type: object
    x-ds-definition-name: brandLink
    x-ms-summary: ''
  brandLogos:
    description: ''
    properties:
      email:
        description: ''
        type: string
      primary:
        description: ''
        type: string
      secondary:
        description: ''
        type: string
    type: object
    x-ds-definition-name: brandLogos
    x-ms-summary: ''
  brandRequest:
    description: ''
    properties:
      brandId:
        description: The ID of the brand used in API calls
        type: string
    type: object
    x-ds-definition-name: brandRequest
    x-ms-summary: ''
  brandResourceUrls:
    description: ''
    properties:
      email:
        description: ''
        type: string
      sending:
        description: ''
        type: string
      signing:
        description: ''
        type: string
      signingCaptive:
        description: ''
        type: string
    type: object
    x-ds-definition-name: brandResourceUrls
    x-ms-summary: ''
  brandResources:
    description: ''
    properties:
      createdByUserInfo:
        $ref: '#/definitions/userInfo'
        description: ''
      createdDate:
        description: ''
        type: string
      modifiedByUserInfo:
        $ref: '#/definitions/userInfo'
        description: ''
      modifiedDate:
        description: ''
        type: string
      modifiedTemplates:
        description: ''
        items:
          type: string
        type: array
      resourcesContentType:
        description: ''
        type: string
      resourcesContentUri:
        description: ''
        type: string
    type: object
    x-ds-definition-name: brandResources
    x-ms-summary: ''
  brandResourcesList:
    description: ''
    properties:
      resourcesContentTypes:
        description: ''
        items:
          $ref: '#/definitions/brandResources'
        type: array
    type: object
    x-ds-definition-name: brandResourcesList
    x-ms-summary: ''
  brandsRequest:
    description: ''
    properties:
      brands:
        description: The list of brands.
        items:
          $ref: '#/definitions/brandRequest'
        type: array
    type: object
    x-ds-definition-name: brandsRequest
    x-ms-summary: ''
  bulkEnvelope:
    description: ''
    properties:
      bulkRecipientRow:
        description: 'Reserved: TBD'
        type: string
      bulkStatus:
        description: |-
          Indicates the status of the bulk send operation. Returned values can be:
          * queued
          * processing
          * sent
          * failed
        type: string
      email:
        description: ''
        type: string
      envelopeId:
        description: The envelope ID of the envelope status that failed to post.
        type: string
      envelopeUri:
        description: Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      name:
        description: ''
        type: string
      submittedDateTime:
        description: ''
        type: string
      transactionId:
        description: ' Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The `transactionId` property can be used determine an envelope''s status (i.e. was it created or not) in cases where the internet connection was lost before the envelope status was returned.'
        type: string
    type: object
    x-ds-definition-name: bulkEnvelope
    x-ms-summary: ''
  bulkEnvelopeStatus:
    description: ''
    properties:
      batchId:
        description: Specifies an identifier which can be used to retrieve a more detailed status of individual bulk recipient batches.
        type: string
      batchSize:
        description: The number of items returned in this response.
        type: string
      bulkEnvelopes:
        description: 'Reserved: TBD'
        items:
          $ref: '#/definitions/bulkEnvelope'
        type: array
      bulkEnvelopesBatchUri:
        description: 'Reserved: TBD'
        type: string
      endPosition:
        description: 'The last position in the result set. '
        type: string
      failed:
        description: 'The number of entries with a status of failed. '
        type: string
      nextUri:
        description: 'The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. '
        type: string
      previousUri:
        description: 'The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. '
        type: string
      queued:
        description: 'The number of entries with a status of queued. '
        type: string
      resultSetSize:
        description: 'The number of results returned in this response. '
        type: string
      sent:
        description: The number of entries with a status of sent.
        type: string
      startPosition:
        description: Starting position of the current result set.
        type: string
      submittedDate:
        description: ''
        type: string
      totalSetSize:
        description: The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.
        type: string
    type: object
    x-ds-definition-name: bulkEnvelopeStatus
    x-ms-summary: ''
  bulkRecipient:
    description: ''
    properties:
      accessCode:
        description: |-
          If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. 

          Maximum Length: 50 characters and it must conform to the account's access code format setting.

          If blank, but the signer `accessCode` property is set in the envelope, then that value is used.

          If blank and the signer `accessCode` property is not set, then the access code is not required.
        type: string
      email:
        description: |-
          Specifies the recipient's email address. 

          Maximum length: 100 characters.
        type: string
      errorDetails:
        description: Array or errors.
        items:
          $ref: '#/definitions/errorDetails'
        type: array
      identification:
        description: |-
          Specifies the authentication check used for the signer. If blank then no authentication check is required for the signer. Only one value can be used in this field.

          The acceptable values are:

          * KBA: Enables the normal ID check authentication set up for your account.
          * Phone: Enables phone authentication.
          * SMS: Enables SMS authentication.
        type: string
      name:
        description: |-
          Specifies the recipient's name. 

          Maximum length: 50 characters.
        type: string
      note:
        description: |
          A note sent to the recipient in the signing email.
          This note is unique to this recipient.
          In the user interface,
          it appears near the upper left corner
          of the document
          on the signing screen.

          Maximum Length: 1000 characters.
        type: string
      phoneNumber:
        description: |-
          This is only used if the Identification field value is Phone or SMS. The value for this field can be a valid telephone number or, if Phone, usersupplied (SMS authentication cannot use a user supplied number). Parenthesis and dashes can be used in the telephone number.

          If `usersupplied` is used, the signer supplies his or her own telephone number.
        type: string
      recipientSignatureProviderInfo:
        description: ''
        items:
          $ref: '#/definitions/bulkRecipientSignatureProvider'
        type: array
      rowNumber:
        description: ''
        type: string
      tabLabels:
        description: |-
          Specifies values used to populate recipient tabs with information. This allows each bulk recipient signer to have different values for their associated tabs. Any number of `tabLabel` columns can be added to the bulk recipient file.

          The information used in the bulk recipient file header must be the same as the `tabLabel` for the tab.

          The values entered in this column are automatically inserted into the corresponding tab for the recipient in the same row.

          Note that this option cannot be used for tabs that do not have data or that are automatically populated data such as Signature, Full Name, Email Address, Company, Title, and Date Signed tabs.
        items:
          $ref: '#/definitions/bulkRecipientTabLabel'
        type: array
    type: object
    x-ds-definition-name: bulkRecipient
    x-ms-summary: ''
  bulkRecipientSignatureProvider:
    description: ''
    properties:
      name:
        description: ''
        type: string
      value:
        description: 'Specifies the value of the tab. '
        type: string
    type: object
    x-ds-definition-name: bulkRecipientSignatureProvider
    x-ms-summary: ''
  bulkRecipientTabLabel:
    description: ''
    properties:
      name:
        description: ''
        type: string
      value:
        description: 'Specifies the value of the tab. '
        type: string
    type: object
    x-ds-definition-name: bulkRecipientTabLabel
    x-ms-summary: ''
  bulkRecipientsRequest:
    description: ''
    properties:
      bulkRecipients:
        description: A complex type containing information about the bulk recipients in the request.
        items:
          $ref: '#/definitions/bulkRecipient'
        type: array
    type: object
    x-ds-definition-name: bulkRecipientsRequest
    x-ms-summary: ''
  bulkRecipientsSummaryResponse:
    description: ''
    properties:
      bulkRecipients:
        description: A complex type containing information about the bulk recipients in the response.
        items:
          $ref: '#/definitions/bulkRecipient'
        type: array
      bulkRecipientsCount:
        description: The number of items returned in this response.
        type: string
      bulkRecipientsUri:
        description: Contains a URI for an endpoint that allows you to easily retrieve bulk recipient information.
        type: string
      errorDetails:
        description: Array or errors.
        items:
          $ref: '#/definitions/errorDetails'
        type: array
    type: object
    x-ds-definition-name: bulkRecipientsSummaryResponse
    x-ms-summary: ''
  bulkRecipientsUpdateResponse:
    description: ''
    properties:
      signer:
        $ref: '#/definitions/signer'
        description: ''
    type: object
    x-ds-definition-name: bulkRecipientsUpdateResponse
    x-ms-summary: ''
  captiveRecipient:
    description: ''
    properties:
      clientUserId:
        description: |-
          Specifies whether the recipient is embedded or remote. 

          If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.

          Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending. 

          Maximum length: 100 characters. 
        type: string
      email:
        description: Specifies the email address associated with the captive recipient.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      userName:
        description: Specifies the user name associated with the captive recipient.
        type: string
    type: object
    x-ds-definition-name: captiveRecipient
    x-ms-summary: ''
  captiveRecipientInformation:
    description: ''
    properties:
      captiveRecipients:
        description: A complex type containing information about one or more captive recipients.
        items:
          $ref: '#/definitions/captiveRecipient'
        type: array
    type: object
    x-ds-definition-name: captiveRecipientInformation
    x-ms-summary: ''
  carbonCopy:
    description: ''
    properties:
      accessCode:
        description: |-
          If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. 

          Maximum Length: 50 characters and it must conform to the account's access code format setting.

          If blank, but the signer `accessCode` property is set in the envelope, then that value is used.

          If blank and the signer `accessCode` property is not set, then the access code is not required.
        type: string
      addAccessCodeToEmail:
        description: This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.
        type: string
      clientUserId:
        description: |-
          Specifies whether the recipient is embedded or remote. 

          If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.

          Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending. 

          Maximum length: 100 characters. 
        type: string
      customFields:
        description: An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
        items:
          type: string
        type: array
      declinedDateTime:
        description: The date and time the recipient declined the document.
        type: string
      declinedReason:
        description: The reason the recipient declined the document.
        type: string
      deliveredDateTime:
        description: 'Reserved: For DocuSign use only.'
        type: string
      deliveryMethod:
        description: 'Reserved: For DocuSign use only.'
        type: string
      documentVisibility:
        description: ''
        items:
          $ref: '#/definitions/documentVisibility'
        type: array
      email:
        description: |-
          Email id of the recipient. Notification of the document to sign is sent to this email id. 

          Maximum length: 100 characters. 
        type: string
      emailNotification:
        $ref: '#/definitions/recipientEmailNotification'
        description: |-
          An optional complex type that sets a specific email subject and body for this recipient's notification email. 

          **Note**: If you use this field to set a specific email notification for one recipient, you must also set the email notification for the other recipients. Using this field for one or more recipients negates the Envelope `Subject` and `EmailBlurb` property settings. 
      emailRecipientPostSigningURL:
        description: ''
        type: string
      embeddedRecipientStartURL:
        description: |-
          Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. 

          If set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.

          It is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.

          If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. 

          *Example*: 

          `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` 
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      excludedDocuments:
        description: |-
          Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.

          When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
        items:
          type: string
        type: array
      faxNumber:
        description: 'Reserved:'
        type: string
      idCheckConfigurationName:
        description: |-
          Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.

          *Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.
        type: string
      idCheckInformationInput:
        $ref: '#/definitions/idCheckInformationInput'
        description: |-
          A complex element that contains input information related to a recipient ID check. It can include the following information.

          addressInformationInput: Used to set recipient address information and consists of:

          * addressInformation: consists of six elements, with stree2 and zipPlus4 being optional. The elements are: street1, street2, city, state, zip, zipPlus4. The maximum length of each element is: street1/street2 = 150 characters, city = 50 characters, state = 2 characters, and zip/zipPlus4 = 20 characters.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
          * receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.

          dobInformationInput: Used to set recipient date of birth information and consists of:

          * dateOfBirth: Specifies the recipient's date, month and year of birth.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
          * receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.

          ssn4InformationInput: Used to set the last four digits of the recipient's SSN information and consists of:

          * ssn4: Specifies the last four digits of the recipient's SSN.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
          * receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.

          ssn9InformationInput: Used to set the recipient's SSN information. Note that the ssn9 information can never be returned in the response. The ssn9 input consists of: 
          * ssn9: Specifies the recipient's SSN.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
           
      inheritEmailNotificationConfiguration:
        description: 'When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient''s account. '
        type: string
      name:
        description: |-
          legal name of the recipient.

          Maximum Length: 100 characters.
        type: string
      note:
        description: |
          A note sent to the recipient in the signing email.
          This note is unique to this recipient.
          In the user interface,
          it appears near the upper left corner
          of the document
          on the signing screen.

          Maximum Length: 1000 characters.
        type: string
      phoneAuthentication:
        $ref: '#/definitions/recipientPhoneAuthentication'
        description: |
          A complex type that Contains the elements:

          * recipMayProvideNumber - Boolean. When set to **true**, the recipient can use whatever phone number they choose.
          * senderProvidedNumbers - ArrayOfString.  A list of phone numbers the recipient can use.
          * recordVoicePrint - Reserved.
          * validateRecipProvidedNumber - Reserved.
      recipientAttachments:
        description: 'Reserved:'
        items:
          $ref: '#/definitions/recipientAttachment'
        type: array
      recipientAuthenticationStatus:
        $ref: '#/definitions/authenticationStatus'
        description: ''
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      recipientIdGuid:
        description: ''
        type: string
      requireIdLookup:
        description: 'When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. '
        type: string
      roleName:
        description: Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.
        type: string
      routingOrder:
        description: 'Specifies the routing order of the recipient in the envelope. '
        type: string
      samlAuthentication:
        $ref: '#/definitions/recipientSAMLAuthentication'
        description: ''
      sentDateTime:
        description: The date and time the envelope was sent.
        type: string
      signedDateTime:
        description: 'Reserved: For DocuSign use only. '
        type: string
      signingGroupId:
        description: 'When set to **true** and the feature is enabled in the sender''s account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).'
        type: string
      signingGroupName:
        description: |-
          The display name for the signing group. 

          Maximum Length: 100 characters. 
        type: string
      signingGroupUsers:
        description: A complex type that contains information about users in the signing group.
        items:
          $ref: '#/definitions/userInfo'
        type: array
      smsAuthentication:
        $ref: '#/definitions/recipientSMSAuthentication'
        description: |
          Contains the element senderProvidedNumbers which is an Array  of phone numbers the recipient can use for SMS text authentication. 
      socialAuthentications:
        description: ' Lists the social ID type that can be used for recipient authentication.'
        items:
          $ref: '#/definitions/socialAuthentication'
        type: array
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      totalTabCount:
        description: ''
        type: string
      userId:
        description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
        type: string
    type: object
    x-ds-definition-name: carbonCopy
    x-ms-summary: ''
  certifiedDelivery:
    description: ''
    properties:
      accessCode:
        description: |-
          If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. 

          Maximum Length: 50 characters and it must conform to the account's access code format setting.

          If blank, but the signer `accessCode` property is set in the envelope, then that value is used.

          If blank and the signer `accessCode` property is not set, then the access code is not required.
        type: string
      addAccessCodeToEmail:
        description: This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.
        type: string
      clientUserId:
        description: |-
          Specifies whether the recipient is embedded or remote. 

          If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.

          Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending. 

          Maximum length: 100 characters. 
        type: string
      customFields:
        description: An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
        items:
          type: string
        type: array
      declinedDateTime:
        description: The date and time the recipient declined the document.
        type: string
      declinedReason:
        description: The reason the recipient declined the document.
        type: string
      deliveredDateTime:
        description: 'Reserved: For DocuSign use only.'
        type: string
      deliveryMethod:
        description: 'Reserved: For DocuSign use only.'
        type: string
      documentVisibility:
        description: ''
        items:
          $ref: '#/definitions/documentVisibility'
        type: array
      email:
        description: ''
        type: string
      emailNotification:
        $ref: '#/definitions/recipientEmailNotification'
        description: |-
          An optional complex type that sets a specific email subject and body for this recipient's notification email. 

          **Note**: If you use this field to set a specific email notification for one recipient, you must also set the email notification for the other recipients. Using this field for one or more recipients negates the Envelope `Subject` and `EmailBlurb` property settings. 
      emailRecipientPostSigningURL:
        description: ''
        type: string
      embeddedRecipientStartURL:
        description: |-
          Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. 

          If set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.

          It is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.

          If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. 

          *Example*: 

          `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` 
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      excludedDocuments:
        description: |-
          Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.

          When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
        items:
          type: string
        type: array
      faxNumber:
        description: 'Reserved:'
        type: string
      idCheckConfigurationName:
        description: |-
          Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.

          *Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.
        type: string
      idCheckInformationInput:
        $ref: '#/definitions/idCheckInformationInput'
        description: |-
          A complex element that contains input information related to a recipient ID check. It can include the following information.

          addressInformationInput: Used to set recipient address information and consists of:

          * addressInformation: consists of six elements, with stree2 and zipPlus4 being optional. The elements are: street1, street2, city, state, zip, zipPlus4. The maximum length of each element is: street1/street2 = 150 characters, city = 50 characters, state = 2 characters, and zip/zipPlus4 = 20 characters.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
          * receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.

          dobInformationInput: Used to set recipient date of birth information and consists of:

          * dateOfBirth: Specifies the recipient's date, month and year of birth.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
          * receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.

          ssn4InformationInput: Used to set the last four digits of the recipient's SSN information and consists of:

          * ssn4: Specifies the last four digits of the recipient's SSN.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
          * receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.

          ssn9InformationInput: Used to set the recipient's SSN information. Note that the ssn9 information can never be returned in the response. The ssn9 input consists of: 
          * ssn9: Specifies the recipient's SSN.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
           
      inheritEmailNotificationConfiguration:
        description: 'When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient''s account. '
        type: string
      name:
        description: ''
        type: string
      note:
        description: |
          A note sent to the recipient in the signing email.
          This note is unique to this recipient.
          In the user interface,
          it appears near the upper left corner
          of the document
          on the signing screen.

          Maximum Length: 1000 characters.
        type: string
      phoneAuthentication:
        $ref: '#/definitions/recipientPhoneAuthentication'
        description: |
          A complex type that Contains the elements:

          * recipMayProvideNumber - Boolean. When set to **true**, the recipient can use whatever phone number they choose.
          * senderProvidedNumbers - ArrayOfString.  A list of phone numbers the recipient can use.
          * recordVoicePrint - Reserved.
          * validateRecipProvidedNumber - Reserved.
      recipientAttachments:
        description: 'Reserved:'
        items:
          $ref: '#/definitions/recipientAttachment'
        type: array
      recipientAuthenticationStatus:
        $ref: '#/definitions/authenticationStatus'
        description: ''
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      recipientIdGuid:
        description: ''
        type: string
      requireIdLookup:
        description: 'When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. '
        type: string
      roleName:
        description: Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.
        type: string
      routingOrder:
        description: 'Specifies the routing order of the recipient in the envelope. '
        type: string
      samlAuthentication:
        $ref: '#/definitions/recipientSAMLAuthentication'
        description: ''
      sentDateTime:
        description: The date and time the envelope was sent.
        type: string
      signedDateTime:
        description: 'Reserved: For DocuSign use only. '
        type: string
      signingGroupId:
        description: 'When set to **true** and the feature is enabled in the sender''s account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).'
        type: string
      signingGroupName:
        description: |-
          The display name for the signing group. 

          Maximum Length: 100 characters. 
        type: string
      signingGroupUsers:
        description: A complex type that contains information about users in the signing group.
        items:
          $ref: '#/definitions/userInfo'
        type: array
      smsAuthentication:
        $ref: '#/definitions/recipientSMSAuthentication'
        description: |
          Contains the element senderProvidedNumbers which is an Array  of phone numbers the recipient can use for SMS text authentication. 
      socialAuthentications:
        description: ' Lists the social ID type that can be used for recipient authentication.'
        items:
          $ref: '#/definitions/socialAuthentication'
        type: array
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      totalTabCount:
        description: ''
        type: string
      userId:
        description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
        type: string
    type: object
    x-ds-definition-name: certifiedDelivery
    x-ms-summary: ''
  checkbox:
    description: ''
    properties:
      anchorCaseSensitive:
        description: |-
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
          -->
        type: string
      anchorHorizontalAlignment:
        description: |
          Reserved for DocuSign.
          <!--
          Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
          -->
        type: string
      anchorIgnoreIfNotPresent:
        description: 'When set to **true**, this tab is ignored if anchorString is not found in the document.'
        type: string
      anchorMatchWholeWord:
        description: |
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
          -->
        type: string
      anchorString:
        description: Anchor text information for a radio button.
        type: string
      anchorUnits:
        description: 'Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.'
        type: string
      anchorXOffset:
        description: 'Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      anchorYOffset:
        description: 'Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      conditionalParentLabel:
        description: For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
        type: string
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      customTabId:
        description: 'The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.'
        type: string
      documentId:
        description: Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      locked:
        description: 'When set to **true**, the signer cannot change the data of the custom tab.'
        type: string
      mergeField:
        $ref: '#/definitions/mergeField'
        description: ''
      name:
        description: Specifies the tool tip text for the tab.
        type: string
      pageNumber:
        description: |
          Specifies the page number on which the tab is located.
          Must be 1 for [supplemental documents][supdocs].

          [supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents
        type: string
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      requireInitialOnSharedChange:
        description: 'Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.'
        type: string
      required:
        description: 'When set to **true**, the signer is required to fill out this tab'
        type: string
      selected:
        description: 'When set to **true**, the checkbox is selected.'
        type: string
      shared:
        description: 'When set to **true**, this custom tab is shared.'
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      tabId:
        description: |
          The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. 

           
        type: string
      tabLabel:
        description: |
          The label string associated with the tab.
          The string may be the empty string.
          If no value is provided, the tab type is used as the value.

          Maximum of 500 characters.
        type: string
      tabOrder:
        description: ''
        type: string
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      xPosition:
        description: |
          This indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. May be zero.
        type: string
      yPosition:
        description: This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
        type: string
    type: object
    x-ds-definition-name: checkbox
    x-ms-summary: ''
  chunkedUploadPart:
    description: ''
    properties:
      sequence:
        description: ''
        type: string
      size:
        description: 'Reserved: TBD'
        type: string
    type: object
    x-ds-definition-name: chunkedUploadPart
    x-ms-summary: ''
  chunkedUploadRequest:
    description: ''
    properties:
      chunkedUploadId:
        description: ''
        type: string
      data:
        description: ''
        type: string
    type: object
    x-ds-definition-name: chunkedUploadRequest
    x-ms-summary: ''
  cloudStorageProvider:
    description: ''
    properties:
      authenticationUrl:
        description: 'The authentication URL used for the cloud storage provider. This information is only included in the response if the user has not passed authentication for the cloud storage provider. If the redirectUrl query string is provided, the returnUrl is appended to the authenticationUrl. '
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      redirectUrl:
        description: |-
          The URL the user is redirected to after the cloud storage provider authenticates the user. Using this will append the redirectUrl to the authenticationUrl.

          The redirectUrl is restricted to URLs in the docusign.com or docusign.net domains.
        type: string
      service:
        description: The service name for the cloud storage provider.
        type: string
      serviceId:
        description: The DocuSign generated ID for the cloud storage provider
        type: string
    type: object
    x-ds-definition-name: cloudStorageProvider
    x-ms-summary: ''
  company:
    description: ''
    properties:
      anchorCaseSensitive:
        description: |-
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
          -->
        type: string
      anchorHorizontalAlignment:
        description: |
          Reserved for DocuSign.
          <!--
          Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
          -->
        type: string
      anchorIgnoreIfNotPresent:
        description: 'When set to **true**, this tab is ignored if anchorString is not found in the document.'
        type: string
      anchorMatchWholeWord:
        description: |
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
          -->
        type: string
      anchorString:
        description: Anchor text information for a radio button.
        type: string
      anchorUnits:
        description: 'Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.'
        type: string
      anchorXOffset:
        description: 'Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      anchorYOffset:
        description: 'Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      bold:
        description: 'When set to **true**, the information in the tab is bold.'
        type: string
      concealValueOnDocument:
        description: |-
          When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

          When an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.

          This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        type: string
      conditionalParentLabel:
        description: For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
        type: string
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      customTabId:
        description: 'The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.'
        type: string
      disableAutoSize:
        description: 'When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.'
        type: string
      documentId:
        description: Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      font:
        description: 'The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.'
        type: string
      fontColor:
        description: |-
          The font color used for the information in the tab.

          Possible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
        type: string
      fontSize:
        description: |-
          The font size used for the information in the tab.

          Possible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
        type: string
      italic:
        description: 'When set to **true**, the information in the tab is italic.'
        type: string
      locked:
        description: 'When set to **true**, the signer cannot change the data of the custom tab.'
        type: string
      maxLength:
        description: An optional value that describes the maximum length of the property when the property is a string.
        type: integer
      mergeField:
        $ref: '#/definitions/mergeField'
        description: ''
      name:
        description: Specifies the tool tip text for the tab.
        type: string
      originalValue:
        description: 'The initial value of the tab when it was sent to the recipient. '
        type: string
      pageNumber:
        description: |
          Specifies the page number on which the tab is located.
          Must be 1 for [supplemental documents][supdocs].

          [supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents
        type: string
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      required:
        description: 'When set to **true**, the signer is required to fill out this tab'
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      tabId:
        description: |
          The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. 

           
        type: string
      tabLabel:
        description: |
          The label string associated with the tab.
          The string may be the empty string.
          If no value is provided, the tab type is used as the value.

          Maximum of 500 characters.
        type: string
      tabOrder:
        description: ''
        type: string
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      underline:
        description: 'When set to **true**, the information in the tab is underlined.'
        type: string
      value:
        description: 'Specifies the value of the tab. '
        type: string
      width:
        description: Width of the tab in pixels.
        type: integer
      xPosition:
        description: |
          This indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. May be zero.
        type: string
      yPosition:
        description: This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
        type: string
    type: object
    x-ds-definition-name: company
    x-ms-summary: ''
  compositeTemplate:
    description: ''
    properties:
      compositeTemplateId:
        description: 'The identify of this composite template. It is used as a reference when adding document object information. If used, the document''s `content-disposition` must include the composite template ID to which the document should be added. If a composite template ID is not specified in the content-disposition, the document is applied based on the value of the `documentId` property only. If no document object is specified, the composite template inherits the first document.'
        type: string
      document:
        $ref: '#/definitions/document'
        description: ''
      inlineTemplates:
        description: ' Zero or more inline templates and their position in the overlay. If supplied, they are overlaid into the envelope in the order of their Sequence value.'
        items:
          $ref: '#/definitions/inlineTemplate'
        type: array
      pdfMetaDataTemplateSequence:
        description: ''
        type: string
      serverTemplates:
        description: '0 or more server-side templates and their position in the overlay. If supplied, they are overlaid into the envelope in the order of their Sequence value'
        items:
          $ref: '#/definitions/serverTemplate'
        type: array
    type: object
    x-ds-definition-name: compositeTemplate
    x-ms-summary: ''
  connectConfigResults:
    description: ''
    properties:
      configurations:
        description: Array of Connect Configurations
        items:
          $ref: '#/definitions/ConnectConfigurations'
        type: array
      totalRecords:
        description: Record count.
        type: string
    type: object
    x-ds-definition-name: connectConfigResults
    x-ms-summary: ''
  connectDebugLog:
    description: ''
    properties:
      connectConfig:
        description: ''
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      eventDateTime:
        description: ''
        type: string
      eventDescription:
        description: ''
        type: string
      payload:
        description: ''
        type: string
    type: object
    x-ds-definition-name: connectDebugLog
    x-ms-summary: ''
  connectFailureFilter:
    description: ''
    properties:
      envelopeIds:
        description: ''
        items:
          type: string
        type: array
      synchronous:
        description: ''
        type: string
    type: object
    x-ds-definition-name: connectFailureFilter
    x-ms-summary: ''
  connectFailureResult:
    description: ''
    properties:
      configId:
        description: 'Reserved: TBD'
        type: string
      configUrl:
        description: 'Reserved: TBD'
        type: string
      envelopeId:
        description: The envelope ID of the envelope status that failed to post.
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      statusMessage:
        description: ''
        type: string
    type: object
    x-ds-definition-name: connectFailureResult
    x-ms-summary: ''
  connectFailureResults:
    description: ''
    properties:
      retryQueue:
        description: ''
        items:
          $ref: '#/definitions/connectFailureResult'
        type: array
    type: object
    x-ds-definition-name: connectFailureResults
    x-ms-summary: ''
  connectLog:
    description: ''
    properties:
      accountId:
        description: The account ID associated with the envelope.
        type: string
      configUrl:
        description: The web address of the listener or Retrieving Service end point for Connect.
        type: string
      connectDebugLog:
        description: |-
          A complex element containing information about the Connect configuration, error details, date/time, description and payload.

          This is only included in the response if the query additional_info=true is used.
        items:
          $ref: '#/definitions/connectDebugLog'
        type: array
      connectId:
        description: 'The identifier for the Connect configuration that failed. If an account has multiple Connect configurations, this value is used to look up the Connect configuration for the failed post.'
        type: string
      created:
        description: The date and time the entry was created.
        type: string
      email:
        description: The email that sent the envelope.
        type: string
      envelopeId:
        description: The envelope ID of the envelope status that failed to post.
        type: string
      error:
        description: The error that caused the Connect post to fail.
        type: string
      failureId:
        description: The failure log ID for the failure.
        type: string
      failureUri:
        description: The URI for the failure.
        type: string
      lastTry:
        description: The date and time the last attempt to post.
        type: string
      logId:
        description: The Connect log ID for the entry.
        type: string
      logUri:
        description: The URI for the log item.
        type: string
      retryCount:
        description: The number of times the Connect post has been retried.
        type: string
      retryUri:
        description: The UEI to retry to publish the Connect failure.
        type: string
      status:
        description: 'The new envelope status for the failed Connect post. The possible values are: Any, Voided, Created, Deleted, Sent, Delivered, Signed, Completed, Declined, TimedOut, Template, or Processing.'
        type: string
      subject:
        description: The envelope subject.
        type: string
      userName:
        description: The name of the envelope sender.
        type: string
    type: object
    x-ds-definition-name: connectLog
    x-ms-summary: ''
  consoleViewRequest:
    description: ''
    properties:
      envelopeId:
        description: The envelope ID of the envelope status that failed to post.
        type: string
      returnUrl:
        description: The URL to be redirected to after the console view session has ended.
        type: string
    type: object
    x-ds-definition-name: consoleViewRequest
    x-ms-summary: ''
  contactGetResponse:
    description: ''
    properties:
      contacts:
        description: ''
        items:
          $ref: '#/definitions/Contacts'
        type: array
      endPosition:
        description: 'The last position in the result set. '
        type: string
      nextUri:
        description: 'The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. '
        type: string
      previousUri:
        description: 'The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. '
        type: string
      resultSetSize:
        description: 'The number of results returned in this response. '
        type: string
      startPosition:
        description: Starting position of the current result set.
        type: string
      totalSetSize:
        description: The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.
        type: string
    type: object
    x-ds-definition-name: contactGetResponse
    x-ms-summary: ''
  contactModRequest:
    description: ''
    properties:
      contacts:
        description: ''
        items:
          $ref: '#/definitions/Contacts'
        type: array
    type: object
    x-ds-definition-name: contactModRequest
    x-ms-summary: ''
  contactPhoneNumber:
    description: ''
    properties:
      phoneNumber:
        description: ''
        type: string
      phoneType:
        description: ''
        type: string
    type: object
    x-ds-definition-name: contactPhoneNumber
    x-ms-summary: ''
  contactUpdateResponse:
    description: ''
    properties:
      contacts:
        description: ''
        items:
          $ref: '#/definitions/Contacts'
        type: array
    type: object
    x-ds-definition-name: contactUpdateResponse
    x-ms-summary: ''
  correctViewRequest:
    description: ''
    properties:
      returnUrl:
        description: |-
          The url used after correct/send view session has ended. DocuSign redirects to the url and includes an event parameter that can be used by your app. The event parameters returned are: 

          * send (user corrected and sent the envelope)
          * save (user saved the envelope)
          * cancel (user canceled the transaction.)
          * error (there was an error when performing the correct or send)
          * sessionEnd (the session ended before the user completed a different action)

          ###### Note: Include https:// in the URL or the redirect might not succeed on some browsers. 
        type: string
      suppressNavigation:
        description: Specifies whether the window is displayed with or without dressing.
        type: string
    type: object
    x-ds-definition-name: correctViewRequest
    x-ms-summary: ''
  country:
    description: ''
    properties:
      isoCode:
        description: ''
        type: string
      name:
        description: ''
        type: string
      provinceValidated:
        description: ''
        type: string
      provinces:
        description: ''
        items:
          $ref: '#/definitions/province'
        type: array
    type: object
    x-ds-definition-name: country
    x-ms-summary: ''
  creditCardInformation:
    description: ''
    properties:
      address:
        $ref: '#/definitions/addressInformation'
        description: |-
          A complex element containing the credit card billing address information. 

          This can be the same as billing address and follows the same rules as billingAddress. It contains the following elements: street1, street2, city, state, zip, zipPlus4, phone, fax, and country.
      cardNumber:
        description: The number on the credit card.
        type: string
      cardType:
        description: 'The credit card type. Valid values are: visa, mastercard, or amex.'
        type: string
      expirationMonth:
        description: The month that the credit card expires (1-12).
        type: string
      expirationYear:
        description: The year 4 digit year in which the credit card expires.
        type: string
      nameOnCard:
        description: The exact name printed on the credit card.
        type: string
    type: object
    x-ds-definition-name: creditCardInformation
    x-ms-summary: ''
  creditCardTypes:
    description: ''
    properties:
      cardTypes:
        description: An array containing supported credit card types.
        items:
          type: string
        type: array
    type: object
    x-ds-definition-name: creditCardTypes
    x-ms-summary: ''
  currencyFeatureSetPrice:
    description: ''
    properties:
      currencyCode:
        description: 'Specifies the alternate ISO currency code for the account. '
        type: string
      currencySymbol:
        description: Specifies the alternate currency symbol for the account.
        type: string
      envelopeFee:
        description: An incremental envelope cost for plans with envelope overages (when `isEnabled` is set to **true**.)
        type: string
      fixedFee:
        description: Specifies a one-time fee associated with the plan (when `isEnabled` is set to **true**.)
        type: string
      seatFee:
        description: Specifies an incremental seat cost for seat-based plans (when `isEnabled` is set to **true**.)
        type: string
    type: object
    x-ds-definition-name: currencyFeatureSetPrice
    x-ms-summary: ''
  currencyPlanPrice:
    description: ''
    properties:
      currencyCode:
        description: Specifies the ISO currency code for the account.
        type: string
      currencySymbol:
        description: Specifies the currency symbol for the account.
        type: string
      perSeatPrice:
        description: ''
        type: string
      supportIncidentFee:
        description: The support incident fee charged for each support incident.
        type: string
      supportPlanFee:
        description: The support plan fee charged for this plan.
        type: string
      supportedCardTypes:
        $ref: '#/definitions/creditCardTypes'
        description: 'A simple type enumeration of the language used. The supported languages, with the language value shown in parenthesis, are: Arabic (ar), Bahasa Indonesia (id), Bahasa Melayu (ms) Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro),Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk) and Vietnamese (vi).'
    type: object
    x-ds-definition-name: currencyPlanPrice
    x-ms-summary: ''
  customField:
    description: ''
    properties:
      customFieldType:
        description: ''
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      fieldId:
        description: An ID used to specify a custom field.
        type: string
      listItems:
        description: ''
        items:
          type: string
        type: array
      name:
        description: ''
        type: string
      required:
        description: 'When set to **true**, the signer is required to fill out this tab'
        type: string
      show:
        description: A boolean indicating if the value should be displayed.
        type: string
      value:
        description: 'Specifies the value of the tab. '
        type: string
    type: object
    x-ds-definition-name: customField
    x-ms-summary: ''
  customField_v2:
    description: ''
    properties:
      configurationType:
        description: 'If merge field''s are being used, specifies the type of the merge field. The only  supported value is **salesforce**.'
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      fieldId:
        description: An ID used to specify a custom field.
        type: string
      name:
        description: ''
        type: string
      required:
        description: 'When set to **true**, the signer is required to fill out this tab'
        type: string
      show:
        description: A boolean indicating if the value should be displayed.
        type: string
      value:
        description: The value of the custom field.
        type: string
    type: object
    x-ds-definition-name: customField_v2
    x-ms-summary: ''
  customFieldsEnvelope:
    description: ''
    properties:
      listCustomFields:
        description: An array of list custom fields.
        items:
          $ref: '#/definitions/listCustomField'
        type: array
      textCustomFields:
        description: An array of text custom fields.
        items:
          $ref: '#/definitions/textCustomField'
        type: array
    type: object
    x-ds-definition-name: customFieldsEnvelope
    x-ms-summary: ''
  date:
    description: ''
    properties:
      anchorCaseSensitive:
        description: |-
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
          -->
        type: string
      anchorHorizontalAlignment:
        description: |
          Reserved for DocuSign.
          <!--
          Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
          -->
        type: string
      anchorIgnoreIfNotPresent:
        description: 'When set to **true**, this tab is ignored if anchorString is not found in the document.'
        type: string
      anchorMatchWholeWord:
        description: |
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
          -->
        type: string
      anchorString:
        description: Anchor text information for a radio button.
        type: string
      anchorUnits:
        description: 'Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.'
        type: string
      anchorXOffset:
        description: 'Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      anchorYOffset:
        description: 'Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      bold:
        description: 'When set to **true**, the information in the tab is bold.'
        type: string
      concealValueOnDocument:
        description: |-
          When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

          When an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.

          This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        type: string
      conditionalParentLabel:
        description: For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
        type: string
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      customTabId:
        description: 'The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.'
        type: string
      disableAutoSize:
        description: 'When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.'
        type: string
      documentId:
        description: Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      font:
        description: 'The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.'
        type: string
      fontColor:
        description: |-
          The font color used for the information in the tab.

          Possible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
        type: string
      fontSize:
        description: |-
          The font size used for the information in the tab.

          Possible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
        type: string
      italic:
        description: 'When set to **true**, the information in the tab is italic.'
        type: string
      locked:
        description: 'When set to **true**, the signer cannot change the data of the custom tab.'
        type: string
      maxLength:
        description: An optional value that describes the maximum length of the property when the property is a string.
        type: integer
      mergeField:
        $ref: '#/definitions/mergeField'
        description: ''
      name:
        description: ''
        type: string
      originalValue:
        description: 'The initial value of the tab when it was sent to the recipient. '
        type: string
      pageNumber:
        description: |
          Specifies the page number on which the tab is located.
          Must be 1 for [supplemental documents][supdocs].

          [supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents
        type: string
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      requireAll:
        description: 'When set to **true** and shared is true, information must be entered in this field to complete the envelope. '
        type: string
      requireInitialOnSharedChange:
        description: 'Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.'
        type: string
      required:
        description: 'When set to **true**, the signer is required to fill out this tab'
        type: string
      senderRequired:
        description: |-
          When set to **true**, the sender must populate the tab before an envelope can be sent using the template. 

          This value tab can only be changed by modifying (PUT) the template. 

          Tabs with a `senderRequired` value of true cannot be deleted from an envelope.
        type: string
      shared:
        description: 'When set to **true**, this custom tab is shared.'
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      tabId:
        description: |
          The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. 

           
        type: string
      tabLabel:
        description: |
          The label string associated with the tab.
          The string may be the empty string.
          If no value is provided, the tab type is used as the value.

          Maximum of 500 characters.
        type: string
      tabOrder:
        description: ''
        type: string
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      underline:
        description: 'When set to **true**, the information in the tab is underlined.'
        type: string
      validationMessage:
        description: The message displayed if the custom tab fails input validation (either custom of embedded).
        type: string
      validationPattern:
        description: A regular expressionn used to validate input for the tab.
        type: string
      value:
        description: 'Specifies the value of the tab. '
        type: string
      width:
        description: Width of the tab in pixels.
        type: integer
      xPosition:
        description: |
          This indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. May be zero.
        type: string
      yPosition:
        description: This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
        type: string
    type: object
    x-ds-definition-name: date
    x-ms-summary: ''
  dateSigned:
    description: ''
    properties:
      anchorCaseSensitive:
        description: |-
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
          -->
        type: string
      anchorHorizontalAlignment:
        description: |
          Reserved for DocuSign.
          <!--
          Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
          -->
        type: string
      anchorIgnoreIfNotPresent:
        description: 'When set to **true**, this tab is ignored if anchorString is not found in the document.'
        type: string
      anchorMatchWholeWord:
        description: |
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
          -->
        type: string
      anchorString:
        description: Anchor text information for a radio button.
        type: string
      anchorUnits:
        description: 'Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.'
        type: string
      anchorXOffset:
        description: 'Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      anchorYOffset:
        description: 'Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      bold:
        description: 'When set to **true**, the information in the tab is bold.'
        type: string
      conditionalParentLabel:
        description: For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
        type: string
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      customTabId:
        description: 'The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.'
        type: string
      documentId:
        description: Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      font:
        description: 'The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.'
        type: string
      fontColor:
        description: |-
          The font color used for the information in the tab.

          Possible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
        type: string
      fontSize:
        description: |-
          The font size used for the information in the tab.

          Possible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
        type: string
      italic:
        description: 'When set to **true**, the information in the tab is italic.'
        type: string
      mergeField:
        $ref: '#/definitions/mergeField'
        description: ''
      name:
        description: ''
        type: string
      pageNumber:
        description: |
          Specifies the page number on which the tab is located.
          Must be 1 for [supplemental documents][supdocs].

          [supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents
        type: string
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      tabId:
        description: |
          The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. 

           
        type: string
      tabLabel:
        description: |
          The label string associated with the tab.
          The string may be the empty string.
          If no value is provided, the tab type is used as the value.

          Maximum of 500 characters.
        type: string
      tabOrder:
        description: ''
        type: string
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      underline:
        description: 'When set to **true**, the information in the tab is underlined.'
        type: string
      value:
        description: 'Specifies the value of the tab. '
        type: string
      xPosition:
        description: |
          This indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. May be zero.
        type: string
      yPosition:
        description: This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
        type: string
    type: object
    x-ds-definition-name: dateSigned
    x-ms-summary: ''
  dateStampProperties:
    description: ''
    properties:
      dateAreaHeight:
        description: ''
        type: string
      dateAreaWidth:
        description: ''
        type: string
      dateAreaX:
        description: ''
        type: string
      dateAreaY:
        description: ''
        type: string
    type: object
    x-ds-definition-name: dateStampProperties
    x-ms-summary: ''
  decline:
    description: ''
    properties:
      anchorCaseSensitive:
        description: |-
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
          -->
        type: string
      anchorHorizontalAlignment:
        description: |
          Reserved for DocuSign.
          <!--
          Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
          -->
        type: string
      anchorIgnoreIfNotPresent:
        description: 'When set to **true**, this tab is ignored if anchorString is not found in the document.'
        type: string
      anchorMatchWholeWord:
        description: |
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
          -->
        type: string
      anchorString:
        description: Anchor text information for a radio button.
        type: string
      anchorUnits:
        description: 'Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.'
        type: string
      anchorXOffset:
        description: 'Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      anchorYOffset:
        description: 'Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      bold:
        description: 'When set to **true**, the information in the tab is bold.'
        type: string
      buttonText:
        description: ' Specifies the decline text displayed in the tab.'
        type: string
      conditionalParentLabel:
        description: For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
        type: string
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      customTabId:
        description: 'The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.'
        type: string
      declineReason:
        description: The reason the recipient declined the document.
        type: string
      documentId:
        description: Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      font:
        description: 'The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.'
        type: string
      fontColor:
        description: |-
          The font color used for the information in the tab.

          Possible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
        type: string
      fontSize:
        description: |-
          The font size used for the information in the tab.

          Possible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
        type: string
      height:
        description: Height of the tab in pixels.
        type: integer
      italic:
        description: 'When set to **true**, the information in the tab is italic.'
        type: string
      mergeField:
        $ref: '#/definitions/mergeField'
        description: ''
      pageNumber:
        description: |
          Specifies the page number on which the tab is located.
          Must be 1 for [supplemental documents][supdocs].

          [supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents
        type: string
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      tabId:
        description: |
          The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. 

           
        type: string
      tabLabel:
        description: |
          The label string associated with the tab.
          The string may be the empty string.
          If no value is provided, the tab type is used as the value.

          Maximum of 500 characters.
        type: string
      tabOrder:
        description: ''
        type: string
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      underline:
        description: 'When set to **true**, the information in the tab is underlined.'
        type: string
      width:
        description: Width of the tab in pixels.
        type: integer
      xPosition:
        description: |
          This indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. May be zero.
        type: string
      yPosition:
        description: This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
        type: string
    type: object
    x-ds-definition-name: decline
    x-ms-summary: ''
  dobInformationInput:
    description: |-
      Complex type containing:

      * dateOfBirth
      * displayLevelCode
      * receiveInResponse
    properties:
      dateOfBirth:
        description: 'Specifies the recipient''s date, month, and year of birth.'
        type: string
      displayLevelCode:
        description: |-
          Specifies the display level for the recipient. 
          Valid values are: 

          * ReadOnly
          * Editable
          * DoNotDisplay
        type: string
      receiveInResponse:
        description: 'When set to **true**, the information needs to be returned in the response.'
        type: string
    type: object
    x-ds-definition-name: dobInformationInput
    x-ms-summary: |-
      Complex type containing:

      * dateOfBirth
      * displayLevelCode
      * receiveInResponse
  document:
    description: ''
    properties:
      applyAnchorTabs:
        description: 'Reserved: TBD'
        type: string
      display:
        description: |
          This string sets the display and behavior properties of
          the document during signing. The possible values are:

          * `modal`<br>
            The document is shown as a supplement action strip
            and can be viewed, downloaded, or printed in a modal window.
            This is the recommended value for supplemental documents. 

          * `download`<br>
            The document is shown as a supplement action strip
            and can be viewed, downloaded, or printed in a new browser window. 

          * `inline`<br>
            The document is shown in the normal signing window.
            This value is not used with supplemental documents,
            but is the default value for all other documents.
        type: string
      documentBase64:
        description: The document's bytes. This field can be used to include a base64 version of the document bytes within an envelope definition instead of sending the document using a multi-part HTTP request. The maximum document size is smaller if this field is used due to the overhead of the base64 encoding.
        type: string
      documentFields:
        description: ''
        items:
          $ref: '#/definitions/nameValue'
        type: array
      documentGroup:
        description: ''
        type: string
      documentId:
        description: Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
        type: string
      encryptedWithKeyManager:
        description: |-
          When set to **true**, the document is been already encrypted by the sender for use with the DocuSign Key Manager Security Appliance.
           
        type: string
      fileExtension:
        description: |-
          The file extension type of the document. If the document is not a PDF it is converted to a PDF.
           
        type: string
      fileFormatHint:
        description: ''
        type: string
      includeInDownload:
        description: |
          When set to **true**,
          the document is included in the combined document download. 
          The default value is **true**.
        type: string
      matchBoxes:
        description: |
          Matchboxes define areas in a document for document matching when you are creating envelopes. They are only used when you upload and edit a template. 

          A matchbox consists of 5 elements:

          * pageNumber - The document page number  on which the matchbox will appear. 
          * xPosition - The x position of the matchbox on a page. 
          * yPosition - The y position of the matchbox on a page.
          * width - The width of the matchbox. 
          * height - The height of the matchbox. 
        items:
          $ref: '#/definitions/matchBox'
        type: array
      name:
        description: ''
        type: string
      order:
        description: |-
          An optional value that sets the direction order used to sort the item list. 

          Valid values are: 

          * asc = ascending sort order
          * desc = descending sort order 
        type: string
      pages:
        description: ''
        type: string
      password:
        description: ''
        type: string
      remoteUrl:
        description: 'The file id from the cloud storage service where the document is located. This information is returned using [ML:GET /folders] or [ML:/folders/{folderid}]. '
        type: string
      signerMustAcknowledge:
        description: "Sets how the signer interacts with the supplemental document.\nThe possible values are: \n\n*\t`no_interaction`<br>\n  No recipient action is required. \n\n*\t`view`<br>\n  The recipient is required to view the document. \n\n*\t`accept`<br>\n  The recipient is required to accept the document by selecting accept during signing, but is not required to view the document. \n\n*\t`view_accept`<br>\n  The recipient is required to view and accept the document.  \n\n"
        type: string
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      transformPdfFields:
        description: 'When set to **true**, PDF form field data is transformed into document tab values when the PDF form field name matches the DocuSign custom tab tabLabel. The resulting PDF form data is also returned in the PDF meta data when requesting the document PDF. See the [ML:Transform PDF Fields] section for more information about how fields are transformed into DocuSign tabs. '
        type: string
      uri:
        description: ''
        type: string
    type: object
    x-ds-definition-name: document
    x-ms-summary: ''
  documentTemplate:
    description: ''
    properties:
      documentEndPage:
        description: ''
        type: string
      documentId:
        description: Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
        type: string
      documentStartPage:
        description: ''
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      templateId:
        description: 'The unique identifier of the template. If this is not provided, DocuSign will generate a value. '
        type: string
    type: object
    x-ds-definition-name: documentTemplate
    x-ms-summary: ''
  documentTemplateList:
    description: ''
    properties:
      documentTemplates:
        description: ''
        items:
          $ref: '#/definitions/documentTemplate'
        type: array
    type: object
    x-ds-definition-name: documentTemplateList
    x-ms-summary: ''
  documentVisibility:
    description: ''
    properties:
      documentId:
        description: Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      rights:
        description: ''
        type: string
      visible:
        description: ''
        type: string
    type: object
    x-ds-definition-name: documentVisibility
    x-ms-summary: ''
  editor:
    description: ''
    properties:
      accessCode:
        description: |-
          If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. 

          Maximum Length: 50 characters and it must conform to the account's access code format setting.

          If blank, but the signer `accessCode` property is set in the envelope, then that value is used.

          If blank and the signer `accessCode` property is not set, then the access code is not required.
        type: string
      addAccessCodeToEmail:
        description: This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.
        type: string
      clientUserId:
        description: |-
          Specifies whether the recipient is embedded or remote. 

          If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.

          Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending. 

          Maximum length: 100 characters. 
        type: string
      customFields:
        description: An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
        items:
          type: string
        type: array
      declinedDateTime:
        description: The date and time the recipient declined the document.
        type: string
      declinedReason:
        description: The reason the recipient declined the document.
        type: string
      deliveredDateTime:
        description: 'Reserved: For DocuSign use only.'
        type: string
      deliveryMethod:
        description: 'Reserved: For DocuSign use only.'
        type: string
      documentVisibility:
        description: ''
        items:
          $ref: '#/definitions/documentVisibility'
        type: array
      email:
        description: |-
          Email id of the recipient. Notification of the document to sign is sent to this email id. 

          Maximum length: 100 characters. 
        type: string
      emailNotification:
        $ref: '#/definitions/recipientEmailNotification'
        description: |-
          An optional complex type that sets a specific email subject and body for this recipient's notification email. 

          **Note**: If you use this field to set a specific email notification for one recipient, you must also set the email notification for the other recipients. Using this field for one or more recipients negates the Envelope `Subject` and `EmailBlurb` property settings. 
      emailRecipientPostSigningURL:
        description: ''
        type: string
      embeddedRecipientStartURL:
        description: |-
          Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. 

          If set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.

          It is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.

          If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. 

          *Example*: 

          `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` 
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      faxNumber:
        description: 'Reserved:'
        type: string
      idCheckConfigurationName:
        description: |-
          Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.

          *Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.
        type: string
      idCheckInformationInput:
        $ref: '#/definitions/idCheckInformationInput'
        description: |-
          A complex element that contains input information related to a recipient ID check. It can include the following information.

          addressInformationInput: Used to set recipient address information and consists of:

          * addressInformation: consists of six elements, with stree2 and zipPlus4 being optional. The elements are: street1, street2, city, state, zip, zipPlus4. The maximum length of each element is: street1/street2 = 150 characters, city = 50 characters, state = 2 characters, and zip/zipPlus4 = 20 characters.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
          * receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.

          dobInformationInput: Used to set recipient date of birth information and consists of:

          * dateOfBirth: Specifies the recipient's date, month and year of birth.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
          * receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.

          ssn4InformationInput: Used to set the last four digits of the recipient's SSN information and consists of:

          * ssn4: Specifies the last four digits of the recipient's SSN.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
          * receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.

          ssn9InformationInput: Used to set the recipient's SSN information. Note that the ssn9 information can never be returned in the response. The ssn9 input consists of: 
          * ssn9: Specifies the recipient's SSN.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
           
      inheritEmailNotificationConfiguration:
        description: 'When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient''s account. '
        type: string
      name:
        description: |-
          legal name of the recipient.

          Maximum Length: 100 characters.
        type: string
      note:
        description: |
          A note sent to the recipient in the signing email.
          This note is unique to this recipient.
          In the user interface,
          it appears near the upper left corner
          of the document
          on the signing screen.

          Maximum Length: 1000 characters.
        type: string
      phoneAuthentication:
        $ref: '#/definitions/recipientPhoneAuthentication'
        description: |
          A complex type that Contains the elements:

          * recipMayProvideNumber - Boolean. When set to **true**, the recipient can use whatever phone number they choose.
          * senderProvidedNumbers - ArrayOfString.  A list of phone numbers the recipient can use.
          * recordVoicePrint - Reserved.
          * validateRecipProvidedNumber - Reserved.
      recipientAttachments:
        description: 'Reserved:'
        items:
          $ref: '#/definitions/recipientAttachment'
        type: array
      recipientAuthenticationStatus:
        $ref: '#/definitions/authenticationStatus'
        description: ''
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      recipientIdGuid:
        description: ''
        type: string
      requireIdLookup:
        description: 'When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. '
        type: string
      roleName:
        description: Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.
        type: string
      routingOrder:
        description: 'Specifies the routing order of the recipient in the envelope. '
        type: string
      samlAuthentication:
        $ref: '#/definitions/recipientSAMLAuthentication'
        description: ''
      sentDateTime:
        description: The date and time the envelope was sent.
        type: string
      signedDateTime:
        description: 'Reserved: For DocuSign use only. '
        type: string
      signingGroupId:
        description: 'When set to **true** and the feature is enabled in the sender''s account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).'
        type: string
      signingGroupName:
        description: |-
          The display name for the signing group. 

          Maximum Length: 100 characters. 
        type: string
      signingGroupUsers:
        description: A complex type that contains information about users in the signing group.
        items:
          $ref: '#/definitions/userInfo'
        type: array
      smsAuthentication:
        $ref: '#/definitions/recipientSMSAuthentication'
        description: |
          Contains the element senderProvidedNumbers which is an Array  of phone numbers the recipient can use for SMS text authentication. 
      socialAuthentications:
        description: ' Lists the social ID type that can be used for recipient authentication.'
        items:
          $ref: '#/definitions/socialAuthentication'
        type: array
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      totalTabCount:
        description: ''
        type: string
      userId:
        description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
        type: string
    type: object
    x-ds-definition-name: editor
    x-ms-summary: ''
  email:
    description: ''
    properties:
      anchorCaseSensitive:
        description: |-
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
          -->
        type: string
      anchorHorizontalAlignment:
        description: |
          Reserved for DocuSign.
          <!--
          Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
          -->
        type: string
      anchorIgnoreIfNotPresent:
        description: 'When set to **true**, this tab is ignored if anchorString is not found in the document.'
        type: string
      anchorMatchWholeWord:
        description: |
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
          -->
        type: string
      anchorString:
        description: Anchor text information for a radio button.
        type: string
      anchorUnits:
        description: 'Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.'
        type: string
      anchorXOffset:
        description: 'Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      anchorYOffset:
        description: 'Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      bold:
        description: 'When set to **true**, the information in the tab is bold.'
        type: string
      concealValueOnDocument:
        description: |-
          When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

          When an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.

          This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        type: string
      conditionalParentLabel:
        description: For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
        type: string
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      customTabId:
        description: 'The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.'
        type: string
      disableAutoSize:
        description: 'When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.'
        type: string
      documentId:
        description: Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      font:
        description: 'The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.'
        type: string
      fontColor:
        description: |-
          The font color used for the information in the tab.

          Possible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
        type: string
      fontSize:
        description: |-
          The font size used for the information in the tab.

          Possible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
        type: string
      italic:
        description: 'When set to **true**, the information in the tab is italic.'
        type: string
      locked:
        description: 'When set to **true**, the signer cannot change the data of the custom tab.'
        type: string
      maxLength:
        description: An optional value that describes the maximum length of the property when the property is a string.
        type: integer
      mergeField:
        $ref: '#/definitions/mergeField'
        description: ''
      name:
        description: ''
        type: string
      originalValue:
        description: 'The initial value of the tab when it was sent to the recipient. '
        type: string
      pageNumber:
        description: |
          Specifies the page number on which the tab is located.
          Must be 1 for [supplemental documents][supdocs].

          [supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents
        type: string
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      requireAll:
        description: 'When set to **true** and shared is true, information must be entered in this field to complete the envelope. '
        type: string
      requireInitialOnSharedChange:
        description: 'Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.'
        type: string
      required:
        description: 'When set to **true**, the signer is required to fill out this tab'
        type: string
      senderRequired:
        description: |-
          When set to **true**, the sender must populate the tab before an envelope can be sent using the template. 

          This value tab can only be changed by modifying (PUT) the template. 

          Tabs with a `senderRequired` value of true cannot be deleted from an envelope.
        type: string
      shared:
        description: 'When set to **true**, this custom tab is shared.'
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      tabId:
        description: |
          The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. 

           
        type: string
      tabLabel:
        description: |
          The label string associated with the tab.
          The string may be the empty string.
          If no value is provided, the tab type is used as the value.

          Maximum of 500 characters.
        type: string
      tabOrder:
        description: ''
        type: string
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      underline:
        description: 'When set to **true**, the information in the tab is underlined.'
        type: string
      validationMessage:
        description: The message displayed if the custom tab fails input validation (either custom of embedded).
        type: string
      validationPattern:
        description: A regular expressionn used to validate input for the tab.
        type: string
      value:
        description: 'Specifies the value of the tab. '
        type: string
      width:
        description: Width of the tab in pixels.
        type: integer
      xPosition:
        description: |
          This indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. May be zero.
        type: string
      yPosition:
        description: This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
        type: string
    type: object
    x-ds-definition-name: email
    x-ms-summary: ''
  emailAddress:
    description: ''
    properties:
      anchorCaseSensitive:
        description: |-
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
          -->
        type: string
      anchorHorizontalAlignment:
        description: |
          Reserved for DocuSign.
          <!--
          Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
          -->
        type: string
      anchorIgnoreIfNotPresent:
        description: 'When set to **true**, this tab is ignored if anchorString is not found in the document.'
        type: string
      anchorMatchWholeWord:
        description: |
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
          -->
        type: string
      anchorString:
        description: Anchor text information for a radio button.
        type: string
      anchorUnits:
        description: 'Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.'
        type: string
      anchorXOffset:
        description: 'Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      anchorYOffset:
        description: 'Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      bold:
        description: 'When set to **true**, the information in the tab is bold.'
        type: string
      conditionalParentLabel:
        description: For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
        type: string
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      customTabId:
        description: 'The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.'
        type: string
      documentId:
        description: Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      font:
        description: 'The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.'
        type: string
      fontColor:
        description: |-
          The font color used for the information in the tab.

          Possible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
        type: string
      fontSize:
        description: |-
          The font size used for the information in the tab.

          Possible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
        type: string
      italic:
        description: 'When set to **true**, the information in the tab is italic.'
        type: string
      mergeField:
        $ref: '#/definitions/mergeField'
        description: ''
      name:
        description: ''
        type: string
      pageNumber:
        description: |
          Specifies the page number on which the tab is located.
          Must be 1 for [supplemental documents][supdocs].

          [supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents
        type: string
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      tabId:
        description: |
          The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. 

           
        type: string
      tabLabel:
        description: |
          The label string associated with the tab.
          The string may be the empty string.
          If no value is provided, the tab type is used as the value.

          Maximum of 500 characters.
        type: string
      tabOrder:
        description: ''
        type: string
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      underline:
        description: 'When set to **true**, the information in the tab is underlined.'
        type: string
      value:
        description: 'Specifies the value of the tab. '
        type: string
      xPosition:
        description: |
          This indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. May be zero.
        type: string
      yPosition:
        description: This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
        type: string
    type: object
    x-ds-definition-name: emailAddress
    x-ms-summary: ''
  envelopeAttachmentsRequest:
    description: ''
    properties:
      attachments:
        description: ''
        items:
          $ref: '#/definitions/attachment'
        type: array
    type: object
    x-ds-definition-name: envelopeAttachmentsRequest
    x-ms-summary: ''
  envelopeAttachmentsResult:
    description: ''
    properties:
      attachments:
        description: ''
        items:
          $ref: '#/definitions/EnvelopeAttachments'
        type: array
    type: object
    x-ds-definition-name: envelopeAttachmentsResult
    x-ms-summary: ''
  envelopeAuditEvent:
    description: ''
    properties:
      eventFields:
        description: ''
        items:
          $ref: '#/definitions/nameValue'
        type: array
    type: object
    x-ds-definition-name: envelopeAuditEvent
    x-ms-summary: ''
  envelopeAuditEventResponse:
    description: ''
    properties:
      auditEvents:
        description: 'Reserved: TBD'
        items:
          $ref: '#/definitions/envelopeAuditEvent'
        type: array
    type: object
    x-ds-definition-name: envelopeAuditEventResponse
    x-ms-summary: ''
  envelopeDefinition:
    description: ''
    properties:
      accessibility:
        description: |-
          Sets the document reading zones for screen reader applications.  This element can only be used if Document Accessibility is enabled for the account. 

          ###### Note: This information is currently generated from the DocuSign web console by setting the reading zones when creating a template, exporting the reading zone string information, and adding it here.
        type: string
      allowMarkup:
        description: 'When set to **true**, Document Markup is enabled for envelope. Account must have Document Markup enabled to use this'
        type: string
      allowReassign:
        description: 'When set to **true**, the recipient can redirect an envelope to a more appropriate recipient.'
        type: string
      allowRecipientRecursion:
        description: 'When set to **true**, this enables the Recursive Recipients feature and allows a recipient to appear more than once in the routing order.'
        type: string
      asynchronous:
        description: 'When set to **true**, the envelope is queued for processing and the value of the `status` property is set to ''Processing''. Additionally, get status calls return ''Processing'' until completed.'
        type: string
      attachments:
        description: ''
        items:
          $ref: '#/definitions/attachment'
        type: array
      attachmentsUri:
        description: ''
        type: string
      authoritativeCopy:
        description: Specifies the Authoritative copy feature. If set to true the Authoritative copy feature is enabled.
        type: string
      autoNavigation:
        description: |
          Specifies whether auto navigation is set for the recipient.
        type: string
      brandId:
        description: This sets the brand profile format used for the envelope. The value in the string is the brandId associated with the profile. Account branding must be enabled for the account to use this option.
        type: string
      brandLock:
        description: ''
        type: string
      certificateUri:
        description: Retrieves a URI for an endpoint that allows you to easily retrieve certificate information.
        type: string
      completedDateTime:
        description: Specifies the date and time this item was completed.
        type: string
      compositeTemplates:
        description: 'A complex type that can be added to create envelopes from a combination of DocuSign templates and PDF forms. The basic envelope remains the same, while the Composite Template adds new document and template overlays into the envelope. There can be any number of Composite Template structures in the envelope.'
        items:
          $ref: '#/definitions/compositeTemplate'
        type: array
      createdDateTime:
        description: Indicates the date and time the item was created.
        type: string
      customFields:
        $ref: '#/definitions/AccountCustomFields'
        description: An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
      customFieldsUri:
        description: Contains a URI for an endpoint that you can use to retrieve the custom fields.
        type: string
      declinedDateTime:
        description: The date and time the recipient declined the document.
        type: string
      deletedDateTime:
        description: Specifies the data and time the item was deleted.
        type: string
      deliveredDateTime:
        description: 'Reserved: For DocuSign use only.'
        type: string
      documents:
        description: Complex element contains the details on the documents in the envelope.
        items:
          $ref: '#/definitions/document'
        type: array
      documentsCombinedUri:
        description: ''
        type: string
      documentsUri:
        description: Contains a URI for an endpoint that you can use to retrieve the documents.
        type: string
      emailBlurb:
        description: Optional element. This is the same as the email body. If specified it is included in email body for all envelope recipients. This can be a maximum of 10000 characters
        type: string
      emailSettings:
        $ref: '#/definitions/EnvelopeEmailSettings'
        description: 'This optional complex element allows sender to override some envelope email setting information. This can be used to override the Reply To email address and name associated with the envelope and to override the BCC email addresses to which an envelope is sent. When the emailSettings information is used for an envelope, it only applies to that envelope. **IMPORTANT:** The emailSettings information is not returned in the GET for envelope status. Use GET /email_settings to return information about the emailSettings.'
      emailSubject:
        description: |-
          Specifies the subject of the email that is sent to all recipients.

          See [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.
        type: string
      enableWetSign:
        description: 'When set to **true**, the signer is allowed to print the document and sign it on paper.'
        type: string
      enforceSignerVisibility:
        description: |-
          When set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.

          Your account must have Document Visibility enabled to use this.
        type: string
      envelopeId:
        description: The envelope ID of the envelope status that failed to post.
        type: string
      envelopeIdStamping:
        description: 'When set to **true**, Envelope ID Stamping is enabled.'
        type: string
      envelopeUri:
        description: Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.
        type: string
      eventNotification:
        $ref: '#/definitions/eventNotification'
        description: This optional object is used to register a webhook that will receive status changes for this envelope.
      initialSentDateTime:
        description: ''
        type: string
      is21CFRPart11:
        description: 'When set to **true**, indicates that this module is enabled on the account.'
        type: string
      isSignatureProviderEnvelope:
        description: ''
        type: string
      lastModifiedDateTime:
        description: The date and time the item was last modified.
        type: string
      lockInformation:
        $ref: '#/definitions/EnvelopeLocks'
        description: ''
      messageLock:
        description: |-
          When set to **true**, prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope. 

          Additionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes. 

          However, if the `messageLock` node is set to true**** and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.
        type: string
      notification:
        $ref: '#/definitions/notification'
        description: An optional complex element that specifies the notification options for the envelope.
      notificationUri:
        description: Contains a URI for an endpoint that you can use to retrieve the notifications.
        type: string
      password:
        description: ''
        type: string
      purgeState:
        description: |
          Initiates a purge request. Valid values are:
          * documents_queued: Places envelope documents in the purge queue.
          * documents_and_metadata_queued: Places envelope documents and metadata in the purge queue.
        type: string
      recipients:
        $ref: '#/definitions/EnvelopeRecipients'
        description: Specifies the envelope recipients.
      recipientsLock:
        description: 'When set to **true**, prevents senders from changing, correcting, or deleting the recipient information for the envelope.'
        type: string
      recipientsUri:
        description: Contains a URI for an endpoint that you can use to retrieve the recipients.
        type: string
      sentDateTime:
        description: The date and time the envelope was sent.
        type: string
      signingLocation:
        description: Specifies the physical location where the signing takes place. It can have two enumeration values; InPerson and Online. The default value is Online.
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      statusChangedDateTime:
        description: The data and time the status changed.
        type: string
      templateId:
        description: 'The unique identifier of the template. If this is not provided, DocuSign will generate a value. '
        type: string
      templateRoles:
        description: |
          Specifies the template recipients. Each roleName in the template must have a recipient assigned to it. This is made up elements:

          * email - The recipient's email address.
          * name - The recipient's name.
          * roleName - The template roleName associated with the recipient.
          * clientUserId - Optional, this sets if the signer is This specifies if the recipient is embedded or remote. If the clientUserId is not null then the recipient is embedded. Note that if a ClientUserId is used and the account settings SignerMustHaveAccount or SignerMustLoginToSign are true, an error is generated on sending.
          * defaultRecipient - Optional, When set to **true**, this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.
          * routingOrder - This specifies the routing order of the recipient in the envelope.
          * accessCode - This optional element specifies the access code a recipient has to enter to validate the identity. This can be a maximum of 50 characters.
          * inPersonSignerName - Optional, if the template role is an in person signer, this is the full legal name of the signer. This can be a maximum of 100 characters.
          * emailNotification - This is an optional complex element that has a role specific emailSubject, emailBody, and language. It follows the same format as the emailNotification node for Recipients.
          * tabs - This allows the tab values to be specified for matching to tabs in the template.
        items:
          $ref: '#/definitions/templateRole'
        type: array
      templatesUri:
        description: Contains a URI for an endpoint which you can use to retrieve the templates.
        type: string
      transactionId:
        description: ' Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The `transactionId` property can be used determine an envelope''s status (i.e. was it created or not) in cases where the internet connection was lost before the envelope status was returned.'
        type: string
      useDisclosure:
        description: |-
          When set to **true**, the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When set to **false**, the Electronic Record and Signature Disclosure is not shown to any envelope recipients. 

          If the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.
        type: string
      voidedDateTime:
        description: The date and time the envelope or template was voided.
        type: string
      voidedReason:
        description: The reason the envelope or template was voided.
        type: string
    type: object
    x-ds-definition-name: envelopeDefinition
    x-ms-summary: ''
  envelopeDocument:
    description: ''
    properties:
      attachmentTabId:
        description: ''
        type: string
      availableDocumentTypes:
        description: ''
        items:
          $ref: '#/definitions/signatureType'
        type: array
      containsPdfFormFields:
        description: ''
        type: string
      display:
        description: |
          This string sets the display and behavior properties of
          the document during signing. The possible values are:

          * `modal`<br>
            The document is shown as a supplement action strip
            and can be viewed, downloaded, or printed in a modal window.
            This is the recommended value for supplemental documents. 

          * `download`<br>
            The document is shown as a supplement action strip
            and can be viewed, downloaded, or printed in a new browser window. 

          * `inline`<br>
            The document is shown in the normal signing window.
            This value is not used with supplemental documents,
            but is the default value for all other documents.
        type: string
      documentFields:
        description: ''
        items:
          $ref: '#/definitions/nameValue'
        type: array
      documentGroup:
        description: ''
        type: string
      documentId:
        description: Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      includeInDownload:
        description: |
          When set to **true**,
          the document is included in the combined document download. 
          The default value is **true**.
        type: string
      name:
        description: ''
        type: string
      order:
        description: |-
          An optional value that sets the direction order used to sort the item list. 

          Valid values are: 

          * asc = ascending sort order
          * desc = descending sort order 
        type: string
      pages:
        description: ''
        type: string
      signerMustAcknowledge:
        description: "Sets how the signer interacts with the supplemental document.\nThe possible values are: \n\n*\t`no_interaction`<br>\n  No recipient action is required. \n\n*\t`view`<br>\n  The recipient is required to view the document. \n\n*\t`accept`<br>\n  The recipient is required to accept the document by selecting accept during signing, but is not required to view the document. \n\n*\t`view_accept`<br>\n  The recipient is required to view and accept the document.  \n\n"
        type: string
      type:
        description: 'Type of the user. Valid values: type_owner, type_participant.'
        type: string
      uri:
        description: ''
        type: string
    type: object
    x-ds-definition-name: envelopeDocument
    x-ms-summary: ''
  envelopeEvent:
    description: For which envelope events should your webhook be called?
    properties:
      envelopeEventStatusCode:
        description: 'An envelope status for which your webhook should be called. Values: Draft, Sent, Delivered, Completed, Declined, or Voided.'
        type: string
      includeDocuments:
        description: reserved
        type: string
    type: object
    x-ds-definition-name: envelopeEvent
    x-ms-summary: For which envelope events should your webhook be called?
  envelopeId:
    description: ''
    properties:
      anchorCaseSensitive:
        description: |-
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
          -->
        type: string
      anchorHorizontalAlignment:
        description: |
          Reserved for DocuSign.
          <!--
          Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
          -->
        type: string
      anchorIgnoreIfNotPresent:
        description: 'When set to **true**, this tab is ignored if anchorString is not found in the document.'
        type: string
      anchorMatchWholeWord:
        description: |
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
          -->
        type: string
      anchorString:
        description: Anchor text information for a radio button.
        type: string
      anchorUnits:
        description: 'Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.'
        type: string
      anchorXOffset:
        description: 'Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      anchorYOffset:
        description: 'Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      bold:
        description: 'When set to **true**, the information in the tab is bold.'
        type: string
      conditionalParentLabel:
        description: For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
        type: string
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      customTabId:
        description: 'The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.'
        type: string
      documentId:
        description: Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      font:
        description: 'The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.'
        type: string
      fontColor:
        description: |-
          The font color used for the information in the tab.

          Possible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
        type: string
      fontSize:
        description: |-
          The font size used for the information in the tab.

          Possible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
        type: string
      italic:
        description: 'When set to **true**, the information in the tab is italic.'
        type: string
      mergeField:
        $ref: '#/definitions/mergeField'
        description: ''
      name:
        description: ''
        type: string
      pageNumber:
        description: |
          Specifies the page number on which the tab is located.
          Must be 1 for [supplemental documents][supdocs].

          [supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents
        type: string
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      tabId:
        description: |
          The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. 

           
        type: string
      tabLabel:
        description: |
          The label string associated with the tab.
          The string may be the empty string.
          If no value is provided, the tab type is used as the value.

          Maximum of 500 characters.
        type: string
      tabOrder:
        description: ''
        type: string
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      underline:
        description: 'When set to **true**, the information in the tab is underlined.'
        type: string
      xPosition:
        description: |
          This indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. May be zero.
        type: string
      yPosition:
        description: This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
        type: string
    type: object
    x-ds-definition-name: envelopeId
    x-ms-summary: ''
  envelopeIdsRequest:
    description: ''
    properties:
      envelopeIds:
        description: ''
        items:
          type: string
        type: array
      transactionIds:
        description: ' A list of transaction Id''s used to determining the status of envelopes sent asynchronously. See **transactionId** property on envelopes.'
        items:
          type: string
        type: array
    type: object
    x-ds-definition-name: envelopeIdsRequest
    x-ms-summary: ''
  envelopeNotificationRequest:
    description: ''
    properties:
      expirations:
        $ref: '#/definitions/expirations'
        description: A complex element that specifies the expiration settings for the envelope.
      reminders:
        $ref: '#/definitions/reminders'
        description: A complex element that specifies reminder settings for the envelope
      useAccountDefaults:
        description: 'When set to **true**, the account default notification settings are used for the envelope.'
        type: string
    type: object
    x-ds-definition-name: envelopeNotificationRequest
    x-ms-summary: ''
  envelopeSummary:
    description: ''
    properties:
      envelopeId:
        description: The envelope ID of the envelope status that failed to post.
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      statusDateTime:
        description: The DateTime that the envelope changed status (i.e. was created or sent.)
        type: string
      uri:
        description: ''
        type: string
    type: object
    x-ds-definition-name: envelopeSummary
    x-ms-summary: ''
  envelopeTemplateDefinition:
    description: |-
      A complex element containing the following information:

      templateId: Unique identifier of the template. If this is not provided, DocuSign will generate a value. 

      name: Name of the template. Maximum length: 100 characters.

      shared: When set to **true**, the template is shared with the Everyone group in the account. If false, the template is only shared with the Administrator group.

      password: Password, if the template is locked.

      description: Description of the template. Maximum Length: 500 characters.

      pageCount: Number of document pages in the template.

      folderName: The name of the folder the template is located in.

      folderId: The ID for the folder.

      owner: The userName, email, userId, userType, and userStatus for the template owner.
    properties:
      description:
        description: |
          A sender-defined description of the line item.
        type: string
      folderId:
        description: The ID for the folder.
        type: string
      folderName:
        description: ' The name of the folder in which the template is located.'
        type: string
      folderUri:
        description: The URI of the folder.
        type: string
      lastModified:
        description: Utc date and time the comment was last updated (can only be done by creator.)
        type: string
      lastModifiedBy:
        $ref: '#/definitions/userInfo'
        description: ''
      name:
        description: ''
        type: string
      newPassword:
        description: The user's new password.
        type: string
      owner:
        $ref: '#/definitions/userInfo'
        description: 'The userName, email, userId, userType, and userStatus for the template owner.'
      pageCount:
        description: An integer value specifying the number of document pages in the template. Omit this property if not submitting a page count.
        type: integer
      parentFolderUri:
        description: ''
        type: string
      password:
        description: ''
        type: string
      shared:
        description: 'When set to **true**, this custom tab is shared.'
        type: string
      templateId:
        description: 'The unique identifier of the template. If this is not provided, DocuSign will generate a value. '
        type: string
      uri:
        description: ''
        type: string
    type: object
    x-ds-definition-name: envelopeTemplateDefinition
    x-ms-summary: |-
      A complex element containing the following information:

      templateId: Unique identifier of the template. If this is not provided, DocuSign will generate a value. 

      name: Name of the template. Maximum length: 100 characters.

      shared: When set to **true**, the template is shared with the Everyone group in the account. If false, the template is only shared with the Administrator group.

      password: Password, if the template is locked.

      description: Description of the template. Maximum Length: 500 characters.

      pageCount: Number of document pages in the template.

      folderName: The name of the folder the template is located in.

      folderId: The ID for the folder.

      owner: The userName, email, userId, userType, and userStatus for the template owner.
  envelopeTemplateResult:
    description: ''
    properties:
      allowMarkup:
        description: 'When set to **true**, Document Markup is enabled for envelope. Account must have Document Markup enabled to use this'
        type: string
      allowReassign:
        description: 'When set to **true**, the recipient can redirect an envelope to a more appropriate recipient.'
        type: string
      asynchronous:
        description: 'When set to **true**, the envelope is queued for processing and the value of the `status` property is set to ''Processing''. Additionally, get status calls return ''Processing'' until completed.'
        type: string
      attachmentsUri:
        description: ''
        type: string
      authoritativeCopy:
        description: Specifies the Authoritative copy feature. If set to true the Authoritative copy feature is enabled.
        type: string
      autoNavigation:
        description: |
          Specifies whether auto navigation is set for the recipient.
        type: string
      brandId:
        description: The unique identifier of a brand.
        type: string
      brandLock:
        description: ''
        type: string
      certificateUri:
        description: Retrieves a URI for an endpoint that allows you to easily retrieve certificate information.
        type: string
      completedDateTime:
        description: Specifies the date and time this item was completed.
        type: string
      createdDateTime:
        description: Indicates the date and time the item was created.
        type: string
      customFields:
        $ref: '#/definitions/AccountCustomFields'
        description: An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
      customFieldsUri:
        description: Contains a URI for an endpoint that you can use to retrieve the custom fields.
        type: string
      declinedDateTime:
        description: The date and time the recipient declined the document.
        type: string
      deletedDateTime:
        description: Specifies the data and time the item was deleted.
        type: string
      deliveredDateTime:
        description: 'Reserved: For DocuSign use only.'
        type: string
      description:
        description: |
          A sender-defined description of the line item.
        type: string
      documents:
        description: Complex element contains the details on the documents in the envelope.
        items:
          $ref: '#/definitions/document'
        type: array
      documentsCombinedUri:
        description: ''
        type: string
      documentsUri:
        description: Contains a URI for an endpoint that you can use to retrieve the documents.
        type: string
      emailBlurb:
        description: ''
        type: string
      emailSettings:
        $ref: '#/definitions/EnvelopeEmailSettings'
        description: ''
      emailSubject:
        description: |-
          Specifies the subject of the email that is sent to all recipients.

          See [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.
        type: string
      enableWetSign:
        description: 'When set to **true**, the signer is allowed to print the document and sign it on paper.'
        type: string
      enforceSignerVisibility:
        description: |-
          When set to **true**, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.

          Your account must have Document Visibility enabled to use this.
        type: string
      envelopeId:
        description: The envelope ID of the envelope status that failed to post.
        type: string
      envelopeIdStamping:
        description: 'When set to **true**, Envelope ID Stamping is enabled.'
        type: string
      envelopeUri:
        description: Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.
        type: string
      folderId:
        description: The ID of the folder being accessed.
        type: string
      folderName:
        description: ''
        type: string
      folderUri:
        description: ''
        type: string
      initialSentDateTime:
        description: ''
        type: string
      is21CFRPart11:
        description: 'When set to **true**, indicates that this module is enabled on the account.'
        type: string
      isSignatureProviderEnvelope:
        description: ''
        type: string
      lastModified:
        description: Utc date and time the comment was last updated (can only be done by creator.)
        type: string
      lastModifiedDateTime:
        description: The date and time the item was last modified.
        type: string
      lockInformation:
        $ref: '#/definitions/EnvelopeLocks'
        description: ''
      messageLock:
        description: |-
          When set to **true**, prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope. 

          Additionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes. 

          However, if the `messageLock` node is set to true**** and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.
        type: string
      name:
        description: ''
        type: string
      notification:
        $ref: '#/definitions/notification'
        description: ''
      notificationUri:
        description: Contains a URI for an endpoint that you can use to retrieve the notifications.
        type: string
      owner:
        $ref: '#/definitions/userInfo'
        description: ''
      pageCount:
        description: ''
        type: integer
      parentFolderUri:
        description: ''
        type: string
      password:
        description: ''
        type: string
      purgeState:
        description: ''
        type: string
      recipients:
        $ref: '#/definitions/EnvelopeRecipients'
        description: ''
      recipientsLock:
        description: 'When set to **true**, prevents senders from changing, correcting, or deleting the recipient information for the envelope.'
        type: string
      recipientsUri:
        description: Contains a URI for an endpoint that you can use to retrieve the recipients.
        type: string
      sentDateTime:
        description: The date and time the envelope was sent.
        type: string
      shared:
        description: 'When set to **true**, this custom tab is shared.'
        type: string
      signingLocation:
        description: Specifies the physical location where the signing takes place. It can have two enumeration values; InPerson and Online. The default value is Online.
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      statusChangedDateTime:
        description: The data and time the status changed.
        type: string
      templateId:
        description: 'The unique identifier of the template. If this is not provided, DocuSign will generate a value. '
        type: string
      templatesUri:
        description: Contains a URI for an endpoint which you can use to retrieve the templates.
        type: string
      transactionId:
        description: ' Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The `transactionId` property can be used determine an envelope''s status (i.e. was it created or not) in cases where the internet connection was lost before the envelope status was returned.'
        type: string
      uri:
        description: ''
        type: string
      useDisclosure:
        description: |-
          When set to **true**, the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When set to **false**, the Electronic Record and Signature Disclosure is not shown to any envelope recipients. 

          If the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.
        type: string
      voidedDateTime:
        description: The date and time the envelope or template was voided.
        type: string
      voidedReason:
        description: The reason the envelope or template was voided.
        type: string
    type: object
    x-ds-definition-name: envelopeTemplateResult
    x-ms-summary: ''
  envelopeTemplateResults:
    description: ''
    properties:
      endPosition:
        description: 'The last position in the result set. '
        type: string
      envelopeTemplates:
        description: The list of requested templates.
        items:
          $ref: '#/definitions/envelopeTemplateResult'
        type: array
      folders:
        description: A collection of folder objects returned in a response.
        items:
          $ref: '#/definitions/folder'
        type: array
      nextUri:
        description: 'The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. '
        type: string
      previousUri:
        description: 'The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. '
        type: string
      resultSetSize:
        description: 'The number of results returned in this response. '
        type: string
      startPosition:
        description: Starting position of the current result set.
        type: string
      totalSetSize:
        description: The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.
        type: string
    type: object
    x-ds-definition-name: envelopeTemplateResults
    x-ms-summary: ''
  envelopeTransactionStatus:
    description: ''
    properties:
      envelopeId:
        description: The envelope ID of the envelope status that failed to post.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      transactionId:
        description: ' Used to identify an envelope. The id is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The `transactionId` property can be used determine an envelope''s status (i.e. was it created or not) in cases where the internet connection was lost before the envelope status was returned.'
        type: string
    type: object
    x-ds-definition-name: envelopeTransactionStatus
    x-ms-summary: ''
  envelopeUpdateSummary:
    description: ''
    properties:
      bulkEnvelopeStatus:
        $ref: '#/definitions/bulkEnvelopeStatus'
        description: ''
      envelopeId:
        description: The envelope ID of the envelope status that failed to post.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      listCustomFieldUpdateResults:
        description: ''
        items:
          $ref: '#/definitions/listCustomField'
        type: array
      lockInformation:
        $ref: '#/definitions/EnvelopeLocks'
        description: ''
      recipientUpdateResults:
        description: ''
        items:
          $ref: '#/definitions/recipientUpdateResponse'
        type: array
      tabUpdateResults:
        $ref: '#/definitions/EnvelopeRecipientTabs'
        description: ''
      textCustomFieldUpdateResults:
        description: ''
        items:
          $ref: '#/definitions/textCustomField'
        type: array
    type: object
    x-ds-definition-name: envelopeUpdateSummary
    x-ms-summary: ''
  envelopesInformation:
    description: 'Result set for the Envelopes: listStatusChanges method'
    properties:
      endPosition:
        description: 'The last position in the result set. '
        type: string
      envelopeTransactionStatuses:
        description: Array of envelope statuses and transaction Ids in the result set.
        items:
          $ref: '#/definitions/envelopeTransactionStatus'
        type: array
      envelopes:
        description: Set of envelope information
        items:
          $ref: '#/definitions/Envelopes'
        type: array
      nextUri:
        description: 'The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. '
        type: string
      previousUri:
        description: 'The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. '
        type: string
      resultSetSize:
        description: 'The number of results returned in this response. '
        type: string
      startPosition:
        description: Starting position of the current result set.
        type: string
      totalSetSize:
        description: The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.
        type: string
    type: object
    x-ds-definition-name: envelopesInformation
    x-ms-summary: 'Result set for the Envelopes: listStatusChanges method'
  errorDetails:
    description: 'This object describes errors that occur. It is only valid for responses, and ignored in requests.'
    properties:
      errorCode:
        description: An error code associated with the error.
        type: string
      message:
        description: A short error message.
        type: string
    type: object
    x-ds-definition-name: errorDetails
    x-ms-summary: 'This object describes errors that occur. It is only valid for responses, and ignored in requests.'
  eventNotification:
    description: Register a webhook for the envelope
    properties:
      envelopeEvents:
        description: |-
          A list of envelope-level event statuses that will trigger Connect to send updates to the endpoint specified in the `url` property. 

          To receive notifications, you must include either an `envelopeEvents` node or a `recipientEvents` node. You do not need to specify both.
        items:
          $ref: '#/definitions/envelopeEvent'
        type: array
      includeCertificateOfCompletion:
        description: 'When set to **true**, the Connect Service includes the Certificate of Completion with completed envelopes. '
        type: string
      includeCertificateWithSoap:
        description: 'When set to **true**, the Connect service will send the DocuSign signedby certificate as part of the SOAP xml. The certificate is included in the XML message as `wsse:BinarySecurityToken`.'
        type: string
      includeDocumentFields:
        description: 'When set to **true**, the Document Fields associated with the envelope''s documents are included in the notification messages. Document Fields are optional custom name-value pairs added to documents using the API. '
        type: string
      includeDocuments:
        description: 'When set to **true**, the XML webhook messages will include the envelope''s PDF documents. Including the PDF documents will greatly increase the size of the notification messages. Ensure that your listener can handle incoming messages that are 25MB or larger. '
        type: string
      includeEnvelopeVoidReason:
        description: 'When set to **true**, if the envelope is voided, the Connect Service notification will include the void reason, as entered by the person that voided the envelope. '
        type: string
      includeSenderAccountAsCustomField:
        description: 'When set to **true**, Connect will include the sender account as Custom Field in the data.'
        type: string
      includeTimeZone:
        description: 'When set to **true**, the envelope''s time zone information is included in the webhook messages. '
        type: string
      loggingEnabled:
        description: 'When set to **true**, the webhook messages are logged. They can be viewed on the DocuSign Administration Web Tool in the Connect section. Logged messages can also be downloaded via the [ConnectEvents resource](../../../Connect/ConnectEvents/)'
        type: string
      recipientEvents:
        description: |-
          An array of recipient event statuses that will trigger Connect to send notifications to your webhook listener at the url endpoint specified in the `url` property. 

          To receive notifications, you must include either an `envelopeEvents` node or a `recipientEvents` node. You do not need to specify both.
        items:
          $ref: '#/definitions/recipientEvent'
        type: array
      requireAcknowledgment:
        description: 'When set to **true**, the DocuSign Connect service checks that the message was received and retries on failures. '
        type: string
      signMessageWithX509Cert:
        description: 'When set to **true**, notification messages are digitally signed with an [X509 certificate](https://trust.docusign.com/en-us/trust-certifications/docusign-public-certificates/). '
        type: string
      soapNameSpace:
        description: |-
          The namespace of the SOAP interface.

          The namespace value must be set if useSoapInterface is set to true.
        type: string
      url:
        description: 'The endpoint to which webhook notification messages are sent via an HTTP/S POST request. For the DocuSign production platform, the url must start with https. For the demo platform, either http or https is ok.'
        type: string
      useSoapInterface:
        description: 'When set to **true**, the notifications are sent to your endpoint as SOAP requests. '
        type: string
    type: object
    x-ds-definition-name: eventNotification
    x-ms-summary: Register a webhook for the envelope
  eventResult:
    description: ''
    properties:
      eventTimestamp:
        description: ''
        type: string
      failureDescription:
        description: ''
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      vendorFailureStatusCode:
        description: ''
        type: string
    type: object
    x-ds-definition-name: eventResult
    x-ms-summary: ''
  expirations:
    description: A complex element that specifies the expiration settings for the envelope.
    properties:
      expireAfter:
        description: An integer that sets the number of days the envelope is active.
        type: string
      expireEnabled:
        description: 'When set to **true**, the envelope expires (is no longer available for signing) in the set number of days. If false, the account default setting is used. If the account does not have an expiration setting, the DocuSign default value of 120 days is used.'
        type: string
      expireWarn:
        description: 'An integer that sets the number of days before envelope expiration that an expiration warning email is sent to the recipient. If set to 0 (zero), no warning email is sent.'
        type: string
    type: object
    x-ds-definition-name: expirations
    x-ms-summary: A complex element that specifies the expiration settings for the envelope.
  externalDocServiceErrorDetails:
    description: ''
    properties:
      authenticationUrl:
        description: 'Reserved: TBD'
        type: string
      errorCode:
        description: ''
        type: string
      message:
        description: ''
        type: string
    type: object
    x-ds-definition-name: externalDocServiceErrorDetails
    x-ms-summary: ''
  externalFile:
    description: ''
    properties:
      date:
        description: ''
        type: string
      id:
        description: ''
        type: string
      img:
        description: ''
        type: string
      name:
        description: ''
        type: string
      size:
        description: 'Reserved: TBD'
        type: string
      supported:
        description: ''
        type: string
      type:
        description: 'Type of the user. Valid values: type_owner, type_participant.'
        type: string
      uri:
        description: ''
        type: string
    type: object
    x-ds-definition-name: externalFile
    x-ms-summary: ''
  featureSet:
    description: ''
    properties:
      currencyFeatureSetPrices:
        description: A complex type that contains alternate currency values that are configured for this plan feature set.
        items:
          $ref: '#/definitions/currencyFeatureSetPrice'
        type: array
      envelopeFee:
        description: ''
        type: string
      featureSetId:
        description: A unique ID for the feature set.
        type: string
      fixedFee:
        description: ''
        type: string
      is21CFRPart11:
        description: 'When set to **true**, indicates that this module is enabled on the account.'
        type: string
      isActive:
        description: ''
        type: string
      isEnabled:
        description: Specifies whether the feature set is actively enabled as part of the plan.
        type: string
      name:
        description: ''
        type: string
      seatFee:
        description: An incremental seat cost for seat-based plans. Only valid when isEnabled for the feature set is set to true.
        type: string
    type: object
    x-ds-definition-name: featureSet
    x-ms-summary: ''
  fileType:
    description: ''
    properties:
      fileExtension:
        description: ''
        type: string
      mimeType:
        description: The mime-type of a file type listed in a fileTypes collection.
        type: string
    type: object
    x-ds-definition-name: fileType
    x-ms-summary: ''
  fileTypeList:
    description: ''
    properties:
      fileTypes:
        description: A collection of file types.
        items:
          $ref: '#/definitions/fileType'
        type: array
    type: object
    x-ds-definition-name: fileTypeList
    x-ms-summary: ''
  filter:
    description: ''
    properties:
      actionRequired:
        description: Access token information.
        type: string
      expires:
        description: ''
        type: string
      folderIds:
        description: ''
        type: string
      fromDateTime:
        description: ''
        type: string
      isTemplate:
        description: ''
        type: string
      order:
        description: |-
          An optional value that sets the direction order used to sort the item list. 

          Valid values are: 

          * asc = ascending sort order
          * desc = descending sort order 
        type: string
      orderBy:
        description: ''
        type: string
      searchTarget:
        description: ''
        type: string
      searchText:
        description: ''
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      toDateTime:
        description: Must be set to "bearer".
        type: string
    type: object
    x-ds-definition-name: filter
    x-ms-summary: ''
  firstName:
    description: ''
    properties:
      anchorCaseSensitive:
        description: |-
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
          -->
        type: string
      anchorHorizontalAlignment:
        description: |
          Reserved for DocuSign.
          <!--
          Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
          -->
        type: string
      anchorIgnoreIfNotPresent:
        description: 'When set to **true**, this tab is ignored if anchorString is not found in the document.'
        type: string
      anchorMatchWholeWord:
        description: |
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
          -->
        type: string
      anchorString:
        description: Anchor text information for a radio button.
        type: string
      anchorUnits:
        description: 'Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.'
        type: string
      anchorXOffset:
        description: 'Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      anchorYOffset:
        description: 'Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      bold:
        description: 'When set to **true**, the information in the tab is bold.'
        type: string
      conditionalParentLabel:
        description: For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
        type: string
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      customTabId:
        description: 'The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.'
        type: string
      documentId:
        description: Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      font:
        description: 'The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.'
        type: string
      fontColor:
        description: |-
          The font color used for the information in the tab.

          Possible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
        type: string
      fontSize:
        description: |-
          The font size used for the information in the tab.

          Possible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
        type: string
      italic:
        description: 'When set to **true**, the information in the tab is italic.'
        type: string
      mergeField:
        $ref: '#/definitions/mergeField'
        description: ''
      name:
        description: ''
        type: string
      pageNumber:
        description: |
          Specifies the page number on which the tab is located.
          Must be 1 for [supplemental documents][supdocs].

          [supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents
        type: string
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      tabId:
        description: |
          The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. 

           
        type: string
      tabLabel:
        description: |
          The label string associated with the tab.
          The string may be the empty string.
          If no value is provided, the tab type is used as the value.

          Maximum of 500 characters.
        type: string
      tabOrder:
        description: ''
        type: string
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      underline:
        description: 'When set to **true**, the information in the tab is underlined.'
        type: string
      value:
        description: 'Specifies the value of the tab. '
        type: string
      xPosition:
        description: |
          This indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. May be zero.
        type: string
      yPosition:
        description: This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
        type: string
    type: object
    x-ds-definition-name: firstName
    x-ms-summary: ''
  folder:
    description: ''
    properties:
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      filter:
        $ref: '#/definitions/filter'
        description: ''
      folderId:
        description: The ID of the folder being accessed.
        type: string
      folders:
        description: A collection of folder objects returned in a response.
        items:
          $ref: '#/definitions/folder'
        type: array
      name:
        description: ''
        type: string
      ownerEmail:
        description: ''
        type: string
      ownerUserId:
        description: ''
        type: string
      ownerUserName:
        description: ''
        type: string
      parentFolderId:
        description: ''
        type: string
      parentFolderUri:
        description: ''
        type: string
      type:
        description: 'Type of the user. Valid values: type_owner, type_participant.'
        type: string
      uri:
        description: ''
        type: string
    type: object
    x-ds-definition-name: folder
    x-ms-summary: ''
  folderItem:
    description: ''
    properties:
      completedDateTime:
        description: Specifies the date and time this item was completed.
        type: string
      createdDateTime:
        description: Indicates the date and time the item was created.
        type: string
      customFields:
        description: An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
        items:
          $ref: '#/definitions/customField_v2'
        type: array
      description:
        description: |
          A sender-defined description of the line item.
        type: string
      envelopeId:
        description: The envelope ID of the envelope status that failed to post.
        type: string
      envelopeUri:
        description: Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.
        type: string
      is21CFRPart11:
        description: 'When set to **true**, indicates that this module is enabled on the account.'
        type: string
      isSignatureProviderEnvelope:
        description: ''
        type: string
      lastModified:
        description: Utc date and time the comment was last updated (can only be done by creator.)
        type: string
      name:
        description: ''
        type: string
      ownerName:
        description: Name of the envelope owner.
        type: string
      pageCount:
        description: ''
        type: integer
      password:
        description: ''
        type: string
      senderEmail:
        description: ''
        type: string
      senderName:
        description: Name of the envelope sender.
        type: string
      sentDateTime:
        description: The date and time the envelope was sent.
        type: string
      shared:
        description: 'When set to **true**, this custom tab is shared.'
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      subject:
        description: ''
        type: string
      templateId:
        description: 'The unique identifier of the template. If this is not provided, DocuSign will generate a value. '
        type: string
      uri:
        description: ''
        type: string
    type: object
    x-ds-definition-name: folderItem
    x-ms-summary: ''
  folderItemResponse:
    description: ''
    properties:
      endPosition:
        description: 'The last position in the result set. '
        type: string
      folderItems:
        description: 'A list of the envelopes in the specified folder or folders. '
        items:
          $ref: '#/definitions/folderItem_v2'
        type: array
      nextUri:
        description: 'The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. '
        type: string
      previousUri:
        description: 'The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. '
        type: string
      resultSetSize:
        description: 'The number of results returned in this response. '
        type: string
      startPosition:
        description: Starting position of the current result set.
        type: string
      totalRows:
        description: ''
        type: string
    type: object
    x-ds-definition-name: folderItemResponse
    x-ms-summary: ''
  folderItem_v2:
    description: ''
    properties:
      completedDateTime:
        description: Specifies the date and time this item was completed.
        type: string
      createdDateTime:
        description: Indicates the date and time the item was created.
        type: string
      envelopeId:
        description: The envelope ID of the envelope status that failed to post.
        type: string
      envelopeUri:
        description: Contains a URI for an endpoint that you can use to retrieve the envelope or envelopes.
        type: string
      expireDateTime:
        description: The date and time the envelope is set to expire.
        type: string
      folderId:
        description: The ID of the folder being accessed.
        type: string
      folderUri:
        description: ''
        type: string
      is21CFRPart11:
        description: 'When set to **true**, indicates that this module is enabled on the account.'
        type: string
      isSignatureProviderEnvelope:
        description: ''
        type: string
      lastModifiedDateTime:
        description: The date and time the item was last modified.
        type: string
      ownerName:
        description: ''
        type: string
      recipients:
        $ref: '#/definitions/EnvelopeRecipients'
        description: ''
      recipientsUri:
        description: Contains a URI for an endpoint that you can use to retrieve the recipients.
        type: string
      senderCompany:
        description: ''
        type: string
      senderEmail:
        description: ''
        type: string
      senderName:
        description: ''
        type: string
      senderUserId:
        description: ''
        type: string
      sentDateTime:
        description: The date and time the envelope was sent.
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      subject:
        description: ''
        type: string
    type: object
    x-ds-definition-name: folderItem_v2
    x-ms-summary: ''
  folderItemsResponse:
    description: ''
    properties:
      endPosition:
        description: 'The last position in the result set. '
        type: string
      folderItems:
        description: 'A list of the envelopes in the specified folder or folders. '
        items:
          $ref: '#/definitions/folderItem'
        type: array
      nextUri:
        description: 'The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. '
        type: string
      previousUri:
        description: 'The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. '
        type: string
      resultSetSize:
        description: 'The number of results returned in this response. '
        type: string
      startPosition:
        description: Starting position of the current result set.
        type: string
      totalSetSize:
        description: The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.
        type: string
    type: object
    x-ds-definition-name: folderItemsResponse
    x-ms-summary: ''
  foldersRequest:
    description: ''
    properties:
      envelopeIds:
        description: ''
        items:
          type: string
        type: array
      fromFolderId:
        description: ' The folder ID the envelope is being moved from.'
        type: string
    type: object
    x-ds-definition-name: foldersRequest
    x-ms-summary: ''
  forgottenPasswordInformation:
    description: A complex element that has up to four Question/Answer pairs for forgotten password information.
    properties:
      forgottenPasswordAnswer1:
        description: The answer to the first forgotten password challenge question.
        type: string
      forgottenPasswordAnswer2:
        description: The answer to the second forgotten password challenge question.
        type: string
      forgottenPasswordAnswer3:
        description: The answer to the third forgotten password challenge question.
        type: string
      forgottenPasswordAnswer4:
        description: The answer to the fourth forgotten password challenge question.
        type: string
      forgottenPasswordQuestion1:
        description: The first challenge question presented to a user who has forgotten their password.
        type: string
      forgottenPasswordQuestion2:
        description: The second challenge question presented to a user who has forgotten their password.
        type: string
      forgottenPasswordQuestion3:
        description: The third challenge question presented to a user who has forgotten their password.
        type: string
      forgottenPasswordQuestion4:
        description: The fourth challenge question presented to a user who has forgotten their password.
        type: string
    type: object
    x-ds-definition-name: forgottenPasswordInformation
    x-ms-summary: A complex element that has up to four Question/Answer pairs for forgotten password information.
  formulaTab:
    description: |
      The value of a formula tab is calculated
      from the values of other
      number or date tabs in the document.
      When the recipient completes the underlying fields,
      the formula tab calculates and displays the result.

      The `formula` property of the tab
      contains the references
      to the underlying tabs.
      See [Calculated Fields][calculatedfields]
      in the DocuSign Support Center
      to learn more about formulas.

      If a formula tab contains
      a `paymentDetails` property,
      the tab is considered a payment item.
      See [Requesting Payments Along with Signatures][paymentguide]
      in the DocuSign Support Center
      to learn more about payments.

      [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields
      [paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures
    properties:
      anchorCaseSensitive:
        description: |-
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
          -->
        type: string
      anchorHorizontalAlignment:
        description: |
          Reserved for DocuSign.
          <!--
          Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
          -->
        type: string
      anchorIgnoreIfNotPresent:
        description: 'When set to **true**, this tab is ignored if anchorString is not found in the document.'
        type: string
      anchorMatchWholeWord:
        description: |
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
          -->
        type: string
      anchorString:
        description: Anchor text information for a radio button.
        type: string
      anchorUnits:
        description: 'Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.'
        type: string
      anchorXOffset:
        description: 'Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      anchorYOffset:
        description: 'Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      bold:
        description: 'When set to **true**, the information in the tab is bold.'
        type: string
      concealValueOnDocument:
        description: |-
          When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

          When an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.

          This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        type: string
      conditionalParentLabel:
        description: For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
        type: string
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      customTabId:
        description: 'The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.'
        type: string
      disableAutoSize:
        description: 'When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.'
        type: string
      documentId:
        description: Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      font:
        description: 'The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.'
        type: string
      fontColor:
        description: |-
          The font color used for the information in the tab.

          Possible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
        type: string
      fontSize:
        description: |-
          The font size used for the information in the tab.

          Possible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
        type: string
      formula:
        description: |
          Contains the formula
          for calculating the value of
          this tab.

          Use a tab's `tabLabel`,
          enclosed in brackets,
          to refer to it.

          For example,
          you want to present the total cost
          of two items, tax included.

          The cost of each item is stored
          in number tabs labeled Item1 and Item2.
          The tax rate is in a number tab
          labeled TaxRate.

          The formula string for this property
          would be:
          `([Item1] + [Item2]) * (1 + [TaxRate])`

          See [Calculated Fields][calculatedfields]
          in the DocuSign Support Center
          to learn more about formulas.

          Maximum Length: 2000 characters

          [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields
        type: string
      hidden:
        description: ''
        type: string
      isPaymentAmount:
        description: 'When set to **true**, sets this as a payment tab. Can only be used with Text, Number, Formula, or List tabs. The value of the tab must be a number. '
        type: string
      italic:
        description: 'When set to **true**, the information in the tab is italic.'
        type: string
      locked:
        description: 'When set to **true**, the signer cannot change the data of the custom tab.'
        type: string
      maxLength:
        description: An optional value that describes the maximum length of the property when the property is a string.
        type: integer
      mergeField:
        $ref: '#/definitions/mergeField'
        description: ''
      name:
        description: ''
        type: string
      originalValue:
        description: 'The initial value of the tab when it was sent to the recipient. '
        type: string
      pageNumber:
        description: |
          Specifies the page number on which the tab is located.
          Must be 1 for [supplemental documents][supdocs].

          [supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents
        type: string
      paymentDetails:
        $ref: '#/definitions/paymentDetails'
        description: |
          This property indicates
          that this formula tab
          is a payment item.
          See [Requesting Payments Along with Signatures][paymentguide]
          in the DocuSign Support Center
          to learn more about payments.

          [paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      requireAll:
        description: 'When set to **true** and shared is true, information must be entered in this field to complete the envelope. '
        type: string
      requireInitialOnSharedChange:
        description: 'Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.'
        type: string
      required:
        description: 'When set to **true**, the signer is required to fill out this tab'
        type: string
      roundDecimalPlaces:
        description: ''
        type: string
      senderRequired:
        description: |-
          When set to **true**, the sender must populate the tab before an envelope can be sent using the template. 

          This value tab can only be changed by modifying (PUT) the template. 

          Tabs with a `senderRequired` value of true cannot be deleted from an envelope.
        type: string
      shared:
        description: 'When set to **true**, this custom tab is shared.'
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      tabId:
        description: |
          The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. 

           
        type: string
      tabLabel:
        description: |
          The label string associated with the tab.
          The string may be the empty string.
          If no value is provided, the tab type is used as the value.

          Maximum of 500 characters.
        type: string
      tabOrder:
        description: ''
        type: string
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      underline:
        description: 'When set to **true**, the information in the tab is underlined.'
        type: string
      validationMessage:
        description: The message displayed if the custom tab fails input validation (either custom of embedded).
        type: string
      validationPattern:
        description: A regular expressionn used to validate input for the tab.
        type: string
      value:
        description: 'Specifies the value of the tab. '
        type: string
      width:
        description: Width of the tab in pixels.
        type: integer
      xPosition:
        description: |
          This indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. May be zero.
        type: string
      yPosition:
        description: This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
        type: string
    type: object
    x-ds-definition-name: formulaTab
    x-ms-summary: |
      The value of a formula tab is calculated
      from the values of other
      number or date tabs in the document.
      When the recipient completes the underlying fields,
      the formula tab calculates and displays the result.

      The `formula` property of the tab
      contains the references
      to the underlying tabs.
      See [Calculated Fields][calculatedfields]
      in the DocuSign Support Center
      to learn more about formulas.

      If a formula tab contains
      a `paymentDetails` property,
      the tab is considered a payment item.
      See [Requesting Payments Along with Signatures][paymentguide]
      in the DocuSign Support Center
      to learn more about payments.

      [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields
      [paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures
  fullName:
    description: ''
    properties:
      anchorCaseSensitive:
        description: |-
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
          -->
        type: string
      anchorHorizontalAlignment:
        description: |
          Reserved for DocuSign.
          <!--
          Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
          -->
        type: string
      anchorIgnoreIfNotPresent:
        description: 'When set to **true**, this tab is ignored if anchorString is not found in the document.'
        type: string
      anchorMatchWholeWord:
        description: |
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
          -->
        type: string
      anchorString:
        description: Anchor text information for a radio button.
        type: string
      anchorUnits:
        description: 'Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.'
        type: string
      anchorXOffset:
        description: 'Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      anchorYOffset:
        description: 'Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      bold:
        description: 'When set to **true**, the information in the tab is bold.'
        type: string
      conditionalParentLabel:
        description: For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
        type: string
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      customTabId:
        description: 'The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.'
        type: string
      documentId:
        description: Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      font:
        description: 'The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.'
        type: string
      fontColor:
        description: |-
          The font color used for the information in the tab.

          Possible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
        type: string
      fontSize:
        description: |-
          The font size used for the information in the tab.

          Possible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
        type: string
      italic:
        description: 'When set to **true**, the information in the tab is italic.'
        type: string
      mergeField:
        $ref: '#/definitions/mergeField'
        description: ''
      name:
        description: ''
        type: string
      pageNumber:
        description: |
          Specifies the page number on which the tab is located.
          Must be 1 for [supplemental documents][supdocs].

          [supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents
        type: string
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      tabId:
        description: |
          The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. 

           
        type: string
      tabLabel:
        description: |
          The label string associated with the tab.
          The string may be the empty string.
          If no value is provided, the tab type is used as the value.

          Maximum of 500 characters.
        type: string
      tabOrder:
        description: ''
        type: string
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      underline:
        description: 'When set to **true**, the information in the tab is underlined.'
        type: string
      value:
        description: 'Specifies the value of the tab. '
        type: string
      xPosition:
        description: |
          This indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. May be zero.
        type: string
      yPosition:
        description: This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
        type: string
    type: object
    x-ds-definition-name: fullName
    x-ms-summary: ''
  group:
    description: ''
    properties:
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      groupId:
        description: The DocuSign group ID for the group.
        type: string
      groupName:
        description: The name of the group.
        type: string
      groupType:
        description: The group type.
        type: string
      permissionProfileId:
        description: The ID of the permission profile associated with the group.
        type: string
      users:
        description: ''
        items:
          $ref: '#/definitions/userInfo'
        type: array
    type: object
    x-ds-definition-name: group
    x-ms-summary: ''
  idCheckInformationInput:
    description: |-
      A complex element that contains input information related to a recipient ID check. It can include the following information.

      addressInformationInput: Used to set recipient address information and consists of:

      * addressInformation: consists of six elements, with stree2 and zipPlus4 being optional. The elements are: street1, street2, city, state, zip, zipPlus4. The maximum length of each element is: street1/street2 = 150 characters, city = 50 characters, state = 2 characters, and zip/zipPlus4 = 20 characters.
      * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
      * receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.

      dobInformationInput: Used to set recipient date of birth information and consists of:

      * dateOfBirth: Specifies the recipient's date, month and year of birth.
      * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
      * receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.

      ssn4InformationInput: Used to set the last four digits of the recipient's SSN information and consists of:

      * ssn4: Specifies the last four digits of the recipient's SSN.
      * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
      * receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.

      ssn9InformationInput: Used to set the recipient's SSN information. Note that the ssn9 information can never be returned in the response. The ssn9 input consists of: 
      * ssn9: Specifies the recipient's SSN.
      * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
    properties:
      addressInformationInput:
        $ref: '#/definitions/addressInformationInput'
        description: ''
      dobInformationInput:
        $ref: '#/definitions/dobInformationInput'
        description: |-
          Complex type containing:

          * dateOfBirth
          * displayLevelCode
          * receiveInResponse
      ssn4InformationInput:
        $ref: '#/definitions/ssn4InformationInput'
        description: ''
      ssn9InformationInput:
        $ref: '#/definitions/ssn9InformationInput'
        description: ''
    type: object
    x-ds-definition-name: idCheckInformationInput
    x-ms-summary: |-
      A complex element that contains input information related to a recipient ID check. It can include the following information.

      addressInformationInput: Used to set recipient address information and consists of:

      * addressInformation: consists of six elements, with stree2 and zipPlus4 being optional. The elements are: street1, street2, city, state, zip, zipPlus4. The maximum length of each element is: street1/street2 = 150 characters, city = 50 characters, state = 2 characters, and zip/zipPlus4 = 20 characters.
      * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
      * receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.

      dobInformationInput: Used to set recipient date of birth information and consists of:

      * dateOfBirth: Specifies the recipient's date, month and year of birth.
      * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
      * receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.

      ssn4InformationInput: Used to set the last four digits of the recipient's SSN information and consists of:

      * ssn4: Specifies the last four digits of the recipient's SSN.
      * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
      * receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.

      ssn9InformationInput: Used to set the recipient's SSN information. Note that the ssn9 information can never be returned in the response. The ssn9 input consists of: 
      * ssn9: Specifies the recipient's SSN.
      * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
  inPersonSigner:
    description: |
      An in-person recipient is a DocuSign user,
      acting as a Signing Host,
      who is in the same physical location as the signer.
      To learn about fields used
      for eNotary feature,
      see the [EnvelopeRecipients resource][enveloperecipientsInPerson].

      [enveloperecipientsInPerson]: /esign/restapi/Envelopes/EnvelopeRecipients/#in-person-signers-recipient
    properties:
      accessCode:
        description: |-
          If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. 

          Maximum Length: 50 characters and it must conform to the account's access code format setting.

          If blank, but the signer `accessCode` property is set in the envelope, then that value is used.

          If blank and the signer `accessCode` property is not set, then the access code is not required.
        type: string
      addAccessCodeToEmail:
        description: This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.
        type: string
      autoNavigation:
        description: |
          Specifies whether auto navigation is set for the recipient.
        type: string
      canSignOffline:
        description: 'When set to **true**, specifies that the signer can perform the signing ceremony offline.'
        type: string
      clientUserId:
        description: |-
          Specifies whether the recipient is embedded or remote. 

          If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.

          Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending. 

          Maximum length: 100 characters. 
        type: string
      creationReason:
        description: ''
        type: string
      customFields:
        description: An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
        items:
          type: string
        type: array
      declinedDateTime:
        description: The date and time the recipient declined the document.
        type: string
      declinedReason:
        description: The reason the recipient declined the document.
        type: string
      defaultRecipient:
        description: |
          When set to **true**,
          this is the default recipient for the envelope.
          This option is used when creating an envelope from a template.
        type: string
      deliveredDateTime:
        description: 'Reserved: For DocuSign use only.'
        type: string
      deliveryMethod:
        description: 'Reserved: For DocuSign use only.'
        type: string
      documentVisibility:
        description: ''
        items:
          $ref: '#/definitions/documentVisibility'
        type: array
      email:
        description: |
          The signer's email address in an eNotary flow.

          Use only when `inPersonSigningType` is `notary`.
          For regular in-person-signer flow, use `signerEmail` instead.
        type: string
      emailNotification:
        $ref: '#/definitions/recipientEmailNotification'
        description: |-
          An optional complex type that sets a specific email subject and body for this recipient's notification email. 

          **Note**: If you use this field to set a specific email notification for one recipient, you must also set the email notification for the other recipients. Using this field for one or more recipients negates the Envelope `Subject` and `EmailBlurb` property settings. 
      embeddedRecipientStartURL:
        description: |-
          Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. 

          If set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.

          It is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.

          If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. 

          *Example*: 

          `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` 
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      faxNumber:
        description: 'Reserved:'
        type: string
      hostEmail:
        description: |
          The email address of the signing host.
          This is the DocuSign user that is hosting the in-person signing session.

          Required when `inPersonSigningType` is `inPersonSigner`.
          For eNotary flow, use `email` instead.

          Maximum Length: 100 characters.
        type: string
      hostName:
        description: |
          The name of the signing host.
          This is the DocuSign user that is hosting the in-person signing session.

          Required when `inPersonSigningType` is `inPersonSigner`.
          For eNotary flow, use `name` instead.

          Maximum Length: 100 characters.
        type: string
      idCheckConfigurationName:
        description: |-
          Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.

          *Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.
        type: string
      idCheckInformationInput:
        $ref: '#/definitions/idCheckInformationInput'
        description: |-
          A complex element that contains input information related to a recipient ID check. It can include the following information.

          addressInformationInput: Used to set recipient address information and consists of:

          * addressInformation: consists of six elements, with stree2 and zipPlus4 being optional. The elements are: street1, street2, city, state, zip, zipPlus4. The maximum length of each element is: street1/street2 = 150 characters, city = 50 characters, state = 2 characters, and zip/zipPlus4 = 20 characters.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
          * receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.

          dobInformationInput: Used to set recipient date of birth information and consists of:

          * dateOfBirth: Specifies the recipient's date, month and year of birth.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
          * receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.

          ssn4InformationInput: Used to set the last four digits of the recipient's SSN information and consists of:

          * ssn4: Specifies the last four digits of the recipient's SSN.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
          * receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.

          ssn9InformationInput: Used to set the recipient's SSN information. Note that the ssn9 information can never be returned in the response. The ssn9 input consists of: 
          * ssn9: Specifies the recipient's SSN.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
           
      inPersonSigningType:
        description: |
          Specifies whether the envelope uses the eNotary feature.
          Valid values:

          * `inPersonSigner` The envelope uses the normal in-person signing flow.
          * `notary`: The envelope uses the eNotary in-person signing flow.
        type: string
      inheritEmailNotificationConfiguration:
        description: 'When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient''s account. '
        type: string
      name:
        description: |
          The signer's full legal name in an eNotary flow.

          Required when `inPersonSigningType` is `notary`.
          For regular in-person-signer flow, use `signerName` instead.

          Maximum Length: 100 characters.
        type: string
      notaryHost:
        $ref: '#/definitions/notaryHost'
        description: |+
          Information about the notary host.
          The following information is required
          when using the eNotary in-person signing flow:

          * `name`: Specifies the name of the notary.
          * `email`: Specifies the email address of the notary.
          * `recipientId`: A unique ID number for the notary signing host.

      note:
        description: |
          A note sent to the in-person signer in the signing email.
          This note is visible only to this recipient.

          Maximum Length: 1000 characters.
        type: string
      phoneAuthentication:
        $ref: '#/definitions/recipientPhoneAuthentication'
        description: |
          A complex type that Contains the elements:

          * recipMayProvideNumber - Boolean. When set to **true**, the recipient can use whatever phone number they choose.
          * senderProvidedNumbers - ArrayOfString.  A list of phone numbers the recipient can use.
          * recordVoicePrint - Reserved.
          * validateRecipProvidedNumber - Reserved.
      recipientAttachments:
        description: 'Reserved:'
        items:
          $ref: '#/definitions/recipientAttachment'
        type: array
      recipientAuthenticationStatus:
        $ref: '#/definitions/authenticationStatus'
        description: ''
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      recipientIdGuid:
        description: ''
        type: string
      recipientSignatureProviders:
        description: 'The default signature provider is the DocuSign Electronic signature system. This parameter is used to specify one or more Standards Based Signature (digital signature) providers for the signer to use. [More information](../../../../guide/appendix/standards_based_signatures.html)'
        items:
          $ref: '#/definitions/recipientSignatureProvider'
        type: array
      recipientSuppliesTabs:
        description: ''
        type: string
      requireIdLookup:
        description: 'When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. '
        type: string
      requireSignOnPaper:
        description: 'When set to **true**, the signer must print, sign, and upload or fax the signed documents to DocuSign.'
        type: string
      requireSignerCertificate:
        description: |-
          By default, DocuSign signers create electronic signatures. This field can be used to require the signer to use a SAFE-BioPharma digital certificate for signing.

          This parameter should only be used to select a SAFE-BioPharma certificate. New integrations should use the `recipientSignatureProviders` parameter for other types of digital certificates. 

          Set this parameter to `safe` to use a SAFE-BioPharma certificate.

          The signer must be enrolled in the SAFE program to sign with a SAFE certificate.
        type: string
      roleName:
        description: Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.
        type: string
      routingOrder:
        description: 'Specifies the routing order of the recipient in the envelope. '
        type: string
      samlAuthentication:
        $ref: '#/definitions/recipientSAMLAuthentication'
        description: ''
      sentDateTime:
        description: The date and time the envelope was sent.
        type: string
      signInEachLocation:
        description: 'When set to **true**, specifies that the signer must sign in all locations.'
        type: string
      signatureInfo:
        $ref: '#/definitions/recipientSignatureInformation'
        description: |-
          Allows the sender to pre-specify the signature name, signature initials and signature font used in the signature stamp for the recipient.

          Used only with recipient types In Person Signers and Signers. 
           
      signedDateTime:
        description: 'Reserved: For DocuSign use only. '
        type: string
      signerEmail:
        description: |+
          The in-person signer's email address.

          Required when `inPersonSigningType` is `inPersonSigner`.
          For eNotary flow, use `email` instead.

          Maximum Length: 100 characters.

        type: string
      signerName:
        description: |
          The in-person signer's full legal name.

          Required when `inPersonSigningType` is `inPersonSigner`.
          For eNotary flow, use `name` instead.

          Maximum Length: 100 characters.
        type: string
      signingGroupId:
        description: 'When set to **true** and the feature is enabled in the sender''s account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).'
        type: string
      signingGroupName:
        description: |-
          The display name for the signing group. 

          Maximum Length: 100 characters. 
        type: string
      signingGroupUsers:
        description: A complex type that contains information about users in the signing group.
        items:
          $ref: '#/definitions/userInfo'
        type: array
      smsAuthentication:
        $ref: '#/definitions/recipientSMSAuthentication'
        description: |
          Contains the element senderProvidedNumbers which is an Array  of phone numbers the recipient can use for SMS text authentication. 
      socialAuthentications:
        description: ' Lists the social ID type that can be used for recipient authentication.'
        items:
          $ref: '#/definitions/socialAuthentication'
        type: array
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      tabs:
        $ref: '#/definitions/EnvelopeRecipientTabs'
        description: ''
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      totalTabCount:
        description: ''
        type: string
      userId:
        description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
        type: string
    type: object
    x-ds-definition-name: inPersonSigner
    x-ms-summary: |
      An in-person recipient is a DocuSign user,
      acting as a Signing Host,
      who is in the same physical location as the signer.
      To learn about fields used
      for eNotary feature,
      see the [EnvelopeRecipients resource][enveloperecipientsInPerson].

      [enveloperecipientsInPerson]: /esign/restapi/Envelopes/EnvelopeRecipients/#in-person-signers-recipient
  initialHere:
    description: ''
    properties:
      anchorCaseSensitive:
        description: |-
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
          -->
        type: string
      anchorHorizontalAlignment:
        description: |
          Reserved for DocuSign.
          <!--
          Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
          -->
        type: string
      anchorIgnoreIfNotPresent:
        description: 'When set to **true**, this tab is ignored if anchorString is not found in the document.'
        type: string
      anchorMatchWholeWord:
        description: |
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
          -->
        type: string
      anchorString:
        description: Anchor text information for a radio button.
        type: string
      anchorUnits:
        description: 'Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.'
        type: string
      anchorXOffset:
        description: 'Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      anchorYOffset:
        description: 'Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      conditionalParentLabel:
        description: For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
        type: string
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      customTabId:
        description: 'The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.'
        type: string
      documentId:
        description: Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      mergeField:
        $ref: '#/definitions/mergeField'
        description: ''
      name:
        description: Specifies the tool tip text for the tab.
        type: string
      optional:
        description: ''
        type: string
      pageNumber:
        description: |
          Specifies the page number on which the tab is located.
          Must be 1 for [supplemental documents][supdocs].

          [supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents
        type: string
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      scaleValue:
        description: ' Sets the size for the InitialHere tab. It can be value from 0.5 to 1.0, where 1.0 represents full size and 0.5 is 50% size.'
        type: number
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      tabId:
        description: |
          The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. 

           
        type: string
      tabLabel:
        description: |
          The label string associated with the tab.
          The string may be the empty string.
          If no value is provided, the tab type is used as the value.

          Maximum of 500 characters.
        type: string
      tabOrder:
        description: ''
        type: string
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      xPosition:
        description: |
          This indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. May be zero.
        type: string
      yPosition:
        description: This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
        type: string
    type: object
    x-ds-definition-name: initialHere
    x-ms-summary: ''
  inlineTemplate:
    description: ''
    properties:
      customFields:
        $ref: '#/definitions/AccountCustomFields'
        description: An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
      documents:
        description: Complex element contains the details on the documents in the envelope.
        items:
          $ref: '#/definitions/document'
        type: array
      envelope:
        $ref: '#/definitions/Envelopes'
        description: 'A container used to send documents to recipients. The envelope carries information about the sender and timestamps to indicate the progress of the delivery procedure. It can contain collections of Documents, Tabs and Recipients.'
      recipients:
        $ref: '#/definitions/EnvelopeRecipients'
        description: ''
      sequence:
        description: Specifies the order in which templates are overlaid.
        type: string
    type: object
    x-ds-definition-name: inlineTemplate
    x-ms-summary: ''
  integratedUserInfoList:
    description: ''
    properties:
      allUsersSelected:
        description: ''
        type: string
      endPosition:
        description: 'The last position in the result set. '
        type: string
      nextUri:
        description: 'The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. '
        type: string
      previousUri:
        description: 'The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. '
        type: string
      resultSetSize:
        description: 'The number of results returned in this response. '
        type: string
      startPosition:
        description: Starting position of the current result set.
        type: string
      totalSetSize:
        description: The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.
        type: string
      users:
        description: ''
        items:
          $ref: '#/definitions/userInfo'
        type: array
    type: object
    x-ds-definition-name: integratedUserInfoList
    x-ms-summary: ''
  intermediary:
    description: ''
    properties:
      accessCode:
        description: |-
          If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. 

          Maximum Length: 50 characters and it must conform to the account's access code format setting.

          If blank, but the signer `accessCode` property is set in the envelope, then that value is used.

          If blank and the signer `accessCode` property is not set, then the access code is not required.
        type: string
      addAccessCodeToEmail:
        description: This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.
        type: string
      clientUserId:
        description: |-
          Specifies whether the recipient is embedded or remote. 

          If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.

          Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending. 

          Maximum length: 100 characters. 
        type: string
      customFields:
        description: An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
        items:
          type: string
        type: array
      declinedDateTime:
        description: The date and time the recipient declined the document.
        type: string
      declinedReason:
        description: The reason the recipient declined the document.
        type: string
      deliveredDateTime:
        description: 'Reserved: For DocuSign use only.'
        type: string
      deliveryMethod:
        description: 'Reserved: For DocuSign use only.'
        type: string
      documentVisibility:
        description: ''
        items:
          $ref: '#/definitions/documentVisibility'
        type: array
      email:
        description: |-
          Email id of the recipient. Notification of the document to sign is sent to this email id. 

          Maximum length: 100 characters. 
        type: string
      emailNotification:
        $ref: '#/definitions/recipientEmailNotification'
        description: |-
          An optional complex type that sets a specific email subject and body for this recipient's notification email. 

          **Note**: If you use this field to set a specific email notification for one recipient, you must also set the email notification for the other recipients. Using this field for one or more recipients negates the Envelope `Subject` and `EmailBlurb` property settings. 
      emailRecipientPostSigningURL:
        description: ''
        type: string
      embeddedRecipientStartURL:
        description: |-
          Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. 

          If set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.

          It is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.

          If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. 

          *Example*: 

          `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` 
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      excludedDocuments:
        description: |-
          Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.

          When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
        items:
          type: string
        type: array
      faxNumber:
        description: 'Reserved:'
        type: string
      idCheckConfigurationName:
        description: |-
          Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.

          *Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.
        type: string
      idCheckInformationInput:
        $ref: '#/definitions/idCheckInformationInput'
        description: |-
          A complex element that contains input information related to a recipient ID check. It can include the following information.

          addressInformationInput: Used to set recipient address information and consists of:

          * addressInformation: consists of six elements, with stree2 and zipPlus4 being optional. The elements are: street1, street2, city, state, zip, zipPlus4. The maximum length of each element is: street1/street2 = 150 characters, city = 50 characters, state = 2 characters, and zip/zipPlus4 = 20 characters.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
          * receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.

          dobInformationInput: Used to set recipient date of birth information and consists of:

          * dateOfBirth: Specifies the recipient's date, month and year of birth.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
          * receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.

          ssn4InformationInput: Used to set the last four digits of the recipient's SSN information and consists of:

          * ssn4: Specifies the last four digits of the recipient's SSN.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
          * receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.

          ssn9InformationInput: Used to set the recipient's SSN information. Note that the ssn9 information can never be returned in the response. The ssn9 input consists of: 
          * ssn9: Specifies the recipient's SSN.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
           
      inheritEmailNotificationConfiguration:
        description: 'When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient''s account. '
        type: string
      name:
        description: ''
        type: string
      note:
        description: |
          A note sent to the recipient in the signing email.
          This note is unique to this recipient.
          In the user interface,
          it appears near the upper left corner
          of the document
          on the signing screen.

          Maximum Length: 1000 characters.
        type: string
      phoneAuthentication:
        $ref: '#/definitions/recipientPhoneAuthentication'
        description: |
          A complex type that Contains the elements:

          * recipMayProvideNumber - Boolean. When set to **true**, the recipient can use whatever phone number they choose.
          * senderProvidedNumbers - ArrayOfString.  A list of phone numbers the recipient can use.
          * recordVoicePrint - Reserved.
          * validateRecipProvidedNumber - Reserved.
      recipientAttachments:
        description: 'Reserved:'
        items:
          $ref: '#/definitions/recipientAttachment'
        type: array
      recipientAuthenticationStatus:
        $ref: '#/definitions/authenticationStatus'
        description: ''
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      recipientIdGuid:
        description: ''
        type: string
      requireIdLookup:
        description: 'When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. '
        type: string
      roleName:
        description: Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.
        type: string
      routingOrder:
        description: 'Specifies the routing order of the recipient in the envelope. '
        type: string
      samlAuthentication:
        $ref: '#/definitions/recipientSAMLAuthentication'
        description: ''
      sentDateTime:
        description: The date and time the envelope was sent.
        type: string
      signedDateTime:
        description: 'Reserved: For DocuSign use only. '
        type: string
      signingGroupId:
        description: 'When set to **true** and the feature is enabled in the sender''s account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).'
        type: string
      signingGroupName:
        description: |-
          The display name for the signing group. 

          Maximum Length: 100 characters. 
        type: string
      signingGroupUsers:
        description: A complex type that contains information about users in the signing group.
        items:
          $ref: '#/definitions/userInfo'
        type: array
      smsAuthentication:
        $ref: '#/definitions/recipientSMSAuthentication'
        description: |
          Contains the element senderProvidedNumbers which is an Array  of phone numbers the recipient can use for SMS text authentication. 
      socialAuthentications:
        description: ' Lists the social ID type that can be used for recipient authentication.'
        items:
          $ref: '#/definitions/socialAuthentication'
        type: array
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      totalTabCount:
        description: ''
        type: string
      userId:
        description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
        type: string
    type: object
    x-ds-definition-name: intermediary
    x-ms-summary: ''
  lastName:
    description: ''
    properties:
      anchorCaseSensitive:
        description: |-
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
          -->
        type: string
      anchorHorizontalAlignment:
        description: |
          Reserved for DocuSign.
          <!--
          Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
          -->
        type: string
      anchorIgnoreIfNotPresent:
        description: 'When set to **true**, this tab is ignored if anchorString is not found in the document.'
        type: string
      anchorMatchWholeWord:
        description: |
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
          -->
        type: string
      anchorString:
        description: Anchor text information for a radio button.
        type: string
      anchorUnits:
        description: 'Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.'
        type: string
      anchorXOffset:
        description: 'Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      anchorYOffset:
        description: 'Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      bold:
        description: 'When set to **true**, the information in the tab is bold.'
        type: string
      conditionalParentLabel:
        description: For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
        type: string
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      customTabId:
        description: 'The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.'
        type: string
      documentId:
        description: Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      font:
        description: 'The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.'
        type: string
      fontColor:
        description: |-
          The font color used for the information in the tab.

          Possible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
        type: string
      fontSize:
        description: |-
          The font size used for the information in the tab.

          Possible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
        type: string
      italic:
        description: 'When set to **true**, the information in the tab is italic.'
        type: string
      mergeField:
        $ref: '#/definitions/mergeField'
        description: ''
      name:
        description: ''
        type: string
      pageNumber:
        description: |
          Specifies the page number on which the tab is located.
          Must be 1 for [supplemental documents][supdocs].

          [supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents
        type: string
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      tabId:
        description: |
          The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. 

           
        type: string
      tabLabel:
        description: |
          The label string associated with the tab.
          The string may be the empty string.
          If no value is provided, the tab type is used as the value.

          Maximum of 500 characters.
        type: string
      tabOrder:
        description: ''
        type: string
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      underline:
        description: 'When set to **true**, the information in the tab is underlined.'
        type: string
      value:
        description: 'Specifies the value of the tab. '
        type: string
      xPosition:
        description: |
          This indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. May be zero.
        type: string
      yPosition:
        description: This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
        type: string
    type: object
    x-ds-definition-name: lastName
    x-ms-summary: ''
  list:
    description: ''
    properties:
      anchorCaseSensitive:
        description: |-
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
          -->
        type: string
      anchorHorizontalAlignment:
        description: |
          Reserved for DocuSign.
          <!--
          Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
          -->
        type: string
      anchorIgnoreIfNotPresent:
        description: 'When set to **true**, this tab is ignored if anchorString is not found in the document.'
        type: string
      anchorMatchWholeWord:
        description: |
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
          -->
        type: string
      anchorString:
        description: Anchor text information for a radio button.
        type: string
      anchorUnits:
        description: 'Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.'
        type: string
      anchorXOffset:
        description: 'Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      anchorYOffset:
        description: 'Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      bold:
        description: 'When set to **true**, the information in the tab is bold.'
        type: string
      conditionalParentLabel:
        description: For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
        type: string
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      customTabId:
        description: 'The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.'
        type: string
      documentId:
        description: Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      font:
        description: 'The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.'
        type: string
      fontColor:
        description: |-
          The font color used for the information in the tab.

          Possible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
        type: string
      fontSize:
        description: |-
          The font size used for the information in the tab.

          Possible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
        type: string
      italic:
        description: 'When set to **true**, the information in the tab is italic.'
        type: string
      listItems:
        description: |
          The list of values that can be selected by senders. The list values are separated by semi-colons. Example: [one;two;three;four]

          Maximum Length of listItems:  2048 characters.
          Maximum Length of items in the list: 100 characters. 
        items:
          $ref: '#/definitions/listItem'
        type: array
      locked:
        description: 'When set to **true**, the signer cannot change the data of the custom tab.'
        type: string
      mergeField:
        $ref: '#/definitions/mergeField'
        description: ''
      pageNumber:
        description: |
          Specifies the page number on which the tab is located.
          Must be 1 for [supplemental documents][supdocs].

          [supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents
        type: string
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      requireAll:
        description: 'When set to **true** and shared is true, information must be entered in this field to complete the envelope. '
        type: string
      requireInitialOnSharedChange:
        description: 'Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.'
        type: string
      required:
        description: 'When set to **true**, the signer is required to fill out this tab'
        type: string
      senderRequired:
        description: |-
          When set to **true**, the sender must populate the tab before an envelope can be sent using the template. 

          This value tab can only be changed by modifying (PUT) the template. 

          Tabs with a `senderRequired` value of true cannot be deleted from an envelope.
        type: string
      shared:
        description: 'When set to **true**, this custom tab is shared.'
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      tabId:
        description: |
          The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. 

           
        type: string
      tabLabel:
        description: |
          The label string associated with the tab.
          The string may be the empty string.
          If no value is provided, the tab type is used as the value.

          Maximum of 500 characters.
        type: string
      tabOrder:
        description: ''
        type: string
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      underline:
        description: 'When set to **true**, the information in the tab is underlined.'
        type: string
      value:
        description: The value to use when the item is selected.
        type: string
      width:
        description: Width of the tab in pixels.
        type: integer
      xPosition:
        description: |
          This indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. May be zero.
        type: string
      yPosition:
        description: This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
        type: string
    type: object
    x-ds-definition-name: list
    x-ms-summary: ''
  listCustomField:
    description: ''
    properties:
      configurationType:
        description: 'If merge field''s are being used, specifies the type of the merge field. The only  supported value is **salesforce**.'
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      fieldId:
        description: An ID used to specify a custom field.
        type: string
      listItems:
        description: ''
        items:
          type: string
        type: array
      name:
        description: The name of the custom field.
        type: string
      required:
        description: 'When set to **true**, the signer is required to fill out this tab'
        type: string
      show:
        description: A boolean indicating if the value should be displayed.
        type: string
      value:
        description: |-
          The value of the custom field.

          Maximum Length: 100 characters.
        type: string
    type: object
    x-ds-definition-name: listCustomField
    x-ms-summary: ''
  listItem:
    description: ''
    properties:
      selected:
        description: |-
          When set to **true**, indicates that this item is the default selection shown to a signer. 

          Only one selection can be set as the default.
        type: string
      text:
        description: 'Specifies the text that is shown in the dropdown list. '
        type: string
      value:
        description: Specifies the value that is used when the list item is selected.
        type: string
    type: object
    x-ds-definition-name: listItem
    x-ms-summary: ''
  lockRequest:
    description: ''
    properties:
      lockDurationInSeconds:
        description: The number of seconds to lock the envelope for editing.  Must be greater than 0 seconds.
        type: string
      lockType:
        description: The type of envelope lock.  Currently "edit" is the only supported type.
        type: string
      lockedByApp:
        description: A friendly name of the application used to lock the envelope.  Will be used in error messages to the user when lock conflicts occur.
        type: string
      templatePassword:
        description: ''
        type: string
      useScratchPad:
        description: |-
          Reserved for future use.

          Indicates whether a scratchpad is used for editing information.
           
        type: string
    type: object
    x-ds-definition-name: lockRequest
    x-ms-summary: ''
  loginAccount:
    description: ''
    properties:
      accountId:
        description: The account ID associated with the envelope.
        type: string
      accountIdGuid:
        description: The GUID associated with the account ID.
        type: string
      baseUrl:
        description: 'The URL that should be used for successive calls to this account. It includes the protocal (https), the DocuSign server where the account is located, and the account number. Use this Url to make API calls against this account. Many of the API calls provide Uri''s that are relative to this baseUrl.'
        type: string
      email:
        description: The email address for the user.
        type: string
      isDefault:
        description: 'This value is true if this is the default account for the user, otherwise false is returned.'
        type: string
      loginAccountSettings:
        description: A list of settings on the acccount that indicate what features are available.
        items:
          $ref: '#/definitions/nameValue'
        type: array
      loginUserSettings:
        description: A list of user-level settings that indicate what user-specific features are available.
        items:
          $ref: '#/definitions/nameValue'
        type: array
      name:
        description: The name associated with the account.
        type: string
      siteDescription:
        description: An optional descirption of the site that hosts the account.
        type: string
      userId:
        description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
        type: string
      userName:
        description: The name of this user as defined by the account.
        type: string
    type: object
    x-ds-definition-name: loginAccount
    x-ms-summary: ''
  matchBox:
    description: ''
    properties:
      height:
        description: Height of the tab in pixels.
        type: integer
      pageNumber:
        description: |
          Specifies the page number on which the tab is located.
          Must be 1 for [supplemental documents][supdocs].

          [supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents
        type: integer
      width:
        description: Width of the tab in pixels.
        type: integer
      xPosition:
        description: |
          This indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. May be zero.
        type: integer
      yPosition:
        description: This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
        type: integer
    type: object
    x-ds-definition-name: matchBox
    x-ms-summary: ''
  memberGroupSharedItem:
    description: ''
    properties:
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      group:
        $ref: '#/definitions/group'
        description: ''
      shared:
        description: 'When set to **true**, this custom tab is shared.'
        type: string
    type: object
    x-ds-definition-name: memberGroupSharedItem
    x-ms-summary: ''
  memberSharedItems:
    description: ''
    properties:
      envelopes:
        description: ''
        items:
          $ref: '#/definitions/sharedItem'
        type: array
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      templates:
        description: ''
        items:
          $ref: '#/definitions/templateSharedItem'
        type: array
      user:
        $ref: '#/definitions/userInfo'
        description: ''
    type: object
    x-ds-definition-name: memberSharedItems
    x-ms-summary: ''
  mergeField:
    description: Contains information for transfering values between Salesforce data fields and DocuSign Tabs.
    properties:
      allowSenderToEdit:
        description: 'When set to **true**, the sender can modify the value of the custom tab during the sending process.'
        type: string
      configurationType:
        description: 'If merge field''s are being used, specifies the type of the merge field. The only  supported value is **salesforce**.'
        type: string
      path:
        description: Sets the object associated with the custom tab. Currently this is the Salesforce Object.
        type: string
      row:
        description: Specifies the row number in a Salesforce table that the merge field value corresponds to.
        type: string
      writeBack:
        description: 'When wet to true, the information entered in the tab automatically updates the related Salesforce data when an envelope is completed.'
        type: string
    type: object
    x-ds-definition-name: mergeField
    x-ms-summary: Contains information for transfering values between Salesforce data fields and DocuSign Tabs.
  mobileNotifierConfiguration:
    description: ''
    properties:
      deviceId:
        description: ''
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      platform:
        description: The Platform of the client application
        type: string
    type: object
    x-ds-definition-name: mobileNotifierConfiguration
    x-ms-summary: ''
  money:
    description: |
      Describes information
      about the `total` of a payment.
    properties:
      amountInBaseUnit:
        description: |
          The total payment amount
          in the currency's base unit.
          For example, for USD
          the base currency is one cent.
        type: string
      currency:
        description: |
          The three-letter
          [ISO 4217][ISO4217] currency code for the payment.

          For example:

          * AUD Australian dollar
          * CAD Canadian dollar
          * EUR Euro
          * GBP Great Britain pund
          * USD United States dollar

          This is a read-only property.

          [ISO4217]:          https://en.wikipedia.org/wiki/ISO_4217
        type: string
      displayAmount:
        description: |
          The payment amount as displayed
          in the `currency`.

          For example, if the payment amount
          is USD 12.59,
          the `amountInBaseUnit` is 1259 (cents),
          and the displayed amount is `$12.59 USD`.

          This is a read-only property.
        type: string
    type: object
    x-ds-definition-name: money
    x-ms-summary: |
      Describes information
      about the `total` of a payment.
  nameValue:
    description: ''
    properties:
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      name:
        description: The name or key of a name/value pair.
        type: string
      originalValue:
        description: 'The initial value of the tab when it was sent to the recipient. '
        type: string
      value:
        description: The value field of a name/value pair.
        type: string
    type: object
    x-ds-definition-name: nameValue
    x-ms-summary: ''
  newAccountDefinition:
    description: ''
    properties:
      PaymentProcessorInformation:
        $ref: '#/definitions/paymentProcessorInformation'
        description: ''
      accountName:
        description: The account name for the new account.
        type: string
      accountSettings:
        description: |
          The list of
          [account settings][accountsettings]
          that determine
          the features available for the account.
          Note that some features are determined
          by the plan used to create the account and cannot be overridden.

          [accountsettings]: /esign/restapi/Accounts/Accounts/create/#account-settings
        items:
          $ref: '#/definitions/nameValue'
        type: array
      addressInformation:
        $ref: '#/definitions/accountAddress'
        description: |-
          A complex type that contains the following information for the new account (all string content): address1, address2, city, country, fax, phone, postalCode and state.

          **Note:** If country is US (United States) then State codes are validated for US States. Otherwise, State is treated as a non-validated string and serves the purpose of entering a state/province/region.

          The maximum characters for the strings are:
          * address1, address2, city, country and state: 100 characters
          * postalCode, phone, and fax: 20 characters
      creditCardInformation:
        $ref: '#/definitions/creditCardInformation'
        description: A complex type that has information about the credit card used to pay for this account.
      distributorCode:
        description: The code that identifies the billing plan groups and plans for the new account.
        type: string
      distributorPassword:
        description: The password for the distributorCode.
        type: string
      initialUser:
        $ref: '#/definitions/Users'
        description: A complex type with the initial user information for the new account. Note that some user information is set internally based on the plan and cannot be overridden.
      planInformation:
        $ref: '#/definitions/planInformation'
        description: An object used to identify the features and attributes of the account being created.
      referralInformation:
        $ref: '#/definitions/referralInformation'
        description: |
          A complex type that contains the following information for entering referral and discount information. The following items are included in the referral information (all string content): enableSupport, includedSeats, saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, saleDiscountSeatPriceOverride, planStartMonth, referralCode, referrerName, advertisementId, publisherId, shopperId, promoCode, groupMemberId, idType, and industry 

          ###### Note: saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, and saleDiscountSeatPriceOverride are reserved for DoucSign use only. 
      socialAccountInformation:
        $ref: '#/definitions/UserSocialAccountLogins'
        description: 'Contains properties that map a DocuSign user to a social account (Facebook, Yahoo, etc.)'
    type: object
    x-ds-definition-name: newAccountDefinition
    x-ms-summary: ''
  newAccountSummary:
    description: ''
    properties:
      accountId:
        description: The account ID associated with the envelope.
        type: string
      accountIdGuid:
        description: The GUID associated with the account ID.
        type: string
      accountName:
        description: The account name for the new account.
        type: string
      apiPassword:
        description: Contains a token that can be used for authentication in API calls instead of using the user name and password.
        type: string
      baseUrl:
        description: 'The URL that should be used for successive calls to this account. It includes the protocal (https), the DocuSign server where the account is located, and the account number. Use this Url to make API calls against this account. Many of the API calls provide Uri''s that are relative to this baseUrl.'
        type: string
      billingPlanPreview:
        $ref: '#/definitions/billingPlanPreview'
        description: ''
      userId:
        description: Specifies the user ID of the new user.
        type: string
    type: object
    x-ds-definition-name: newAccountSummary
    x-ms-summary: ''
  newUser:
    description: ''
    properties:
      apiPassword:
        description: Contains a token that can be used for authentication in API calls instead of using the user name and password.
        type: string
      createdDateTime:
        description: Indicates the date and time the item was created.
        type: string
      email:
        description: ''
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      permissionProfileId:
        description: ''
        type: string
      permissionProfileName:
        description: ''
        type: string
      uri:
        description: ''
        type: string
      userId:
        description: Specifies the user ID for the new user.
        type: string
      userName:
        description: ''
        type: string
      userStatus:
        description: ''
        type: string
    type: object
    x-ds-definition-name: newUser
    x-ms-summary: ''
  newUsersDefinition:
    description: ''
    properties:
      newUsers:
        description: ''
        items:
          $ref: '#/definitions/Users'
        type: array
    type: object
    x-ds-definition-name: newUsersDefinition
    x-ms-summary: ''
  newUsersSummary:
    description: ''
    properties:
      newUsers:
        description: ''
        items:
          $ref: '#/definitions/newUser'
        type: array
    type: object
    x-ds-definition-name: newUsersSummary
    x-ms-summary: ''
  notaryHost:
    description: |
      This object is used only when `inPersonSigningType` in the `inPersonSigner` object is `notary`.

      It describes information about the notary host.
      The following information is required
      when using the eNotary in-person signing flow:

      * `name`: Specifies the notary's full legal name.
      * `email`: Specifies the notary's email address.
      * `recipientId`: A unique ID number for the notary signing host.
    properties:
      accessCode:
        description: |-
          If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. 

          Maximum Length: 50 characters and it must conform to the account's access code format setting.

          If blank, but the signer `accessCode` property is set in the envelope, then that value is used.

          If blank and the signer `accessCode` property is not set, then the access code is not required.
        type: string
      addAccessCodeToEmail:
        description: This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.
        type: string
      clientUserId:
        description: |-
          Specifies whether the recipient is embedded or remote. 

          If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.

          Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending. 

          Maximum length: 100 characters. 
        type: string
      customFields:
        description: An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
        items:
          type: string
        type: array
      declinedDateTime:
        description: The date and time the recipient declined the document.
        type: string
      declinedReason:
        description: The reason the recipient declined the document.
        type: string
      deliveredDateTime:
        description: 'Reserved: For DocuSign use only.'
        type: string
      deliveryMethod:
        description: 'Reserved: For DocuSign use only.'
        type: string
      documentVisibility:
        description: ''
        items:
          $ref: '#/definitions/documentVisibility'
        type: array
      email:
        description: |
          The notary's email address.

          Maximum Length: 100 characters.
        type: string
      emailNotification:
        $ref: '#/definitions/recipientEmailNotification'
        description: |-
          An optional complex type that sets a specific email subject and body for this recipient's notification email. 

          **Note**: If you use this field to set a specific email notification for one recipient, you must also set the email notification for the other recipients. Using this field for one or more recipients negates the Envelope `Subject` and `EmailBlurb` property settings. 
      embeddedRecipientStartURL:
        description: |-
          Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. 

          If set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.

          It is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.

          If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. 

          *Example*: 

          `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` 
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      faxNumber:
        description: 'Reserved:'
        type: string
      hostRecipientId:
        description: ''
        type: string
      idCheckConfigurationName:
        description: |-
          Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.

          *Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.
        type: string
      idCheckInformationInput:
        $ref: '#/definitions/idCheckInformationInput'
        description: |-
          A complex element that contains input information related to a recipient ID check. It can include the following information.

          addressInformationInput: Used to set recipient address information and consists of:

          * addressInformation: consists of six elements, with stree2 and zipPlus4 being optional. The elements are: street1, street2, city, state, zip, zipPlus4. The maximum length of each element is: street1/street2 = 150 characters, city = 50 characters, state = 2 characters, and zip/zipPlus4 = 20 characters.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
          * receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.

          dobInformationInput: Used to set recipient date of birth information and consists of:

          * dateOfBirth: Specifies the recipient's date, month and year of birth.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
          * receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.

          ssn4InformationInput: Used to set the last four digits of the recipient's SSN information and consists of:

          * ssn4: Specifies the last four digits of the recipient's SSN.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
          * receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.

          ssn9InformationInput: Used to set the recipient's SSN information. Note that the ssn9 information can never be returned in the response. The ssn9 input consists of: 
          * ssn9: Specifies the recipient's SSN.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
           
      inheritEmailNotificationConfiguration:
        description: 'When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient''s account. '
        type: string
      name:
        description: |
          The notary's full legal name.

          Maximum Length: 100 characters.
        type: string
      notaryEmailMetadata:
        $ref: '#/definitions/propertyMetadata'
        description: ''
      notaryNameMetadata:
        $ref: '#/definitions/propertyMetadata'
        description: ''
      note:
        description: |
          A note sent to the notary in the signing email.
          This note is visible only to this notary.

          Maximum Length: 1000 characters.
        type: string
      phoneAuthentication:
        $ref: '#/definitions/recipientPhoneAuthentication'
        description: |
          A complex type that Contains the elements:

          * recipMayProvideNumber - Boolean. When set to **true**, the recipient can use whatever phone number they choose.
          * senderProvidedNumbers - ArrayOfString.  A list of phone numbers the recipient can use.
          * recordVoicePrint - Reserved.
          * validateRecipProvidedNumber - Reserved.
      recipientAttachments:
        description: 'Reserved:'
        items:
          $ref: '#/definitions/recipientAttachment'
        type: array
      recipientAuthenticationStatus:
        $ref: '#/definitions/authenticationStatus'
        description: ''
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      recipientIdGuid:
        description: ''
        type: string
      requireIdLookup:
        description: 'When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. '
        type: string
      roleName:
        description: Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.
        type: string
      routingOrder:
        description: 'Specifies the routing order of the recipient in the envelope. '
        type: string
      samlAuthentication:
        $ref: '#/definitions/recipientSAMLAuthentication'
        description: ''
      sentDateTime:
        description: The date and time the envelope was sent.
        type: string
      signedDateTime:
        description: 'Reserved: For DocuSign use only. '
        type: string
      smsAuthentication:
        $ref: '#/definitions/recipientSMSAuthentication'
        description: |
          Contains the element senderProvidedNumbers which is an Array  of phone numbers the recipient can use for SMS text authentication. 
      socialAuthentications:
        description: ' Lists the social ID type that can be used for recipient authentication.'
        items:
          $ref: '#/definitions/socialAuthentication'
        type: array
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      totalTabCount:
        description: ''
        type: string
      userId:
        description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
        type: string
    type: object
    x-ds-definition-name: notaryHost
    x-ms-summary: |
      This object is used only when `inPersonSigningType` in the `inPersonSigner` object is `notary`.

      It describes information about the notary host.
      The following information is required
      when using the eNotary in-person signing flow:

      * `name`: Specifies the notary's full legal name.
      * `email`: Specifies the notary's email address.
      * `recipientId`: A unique ID number for the notary signing host.
  note:
    description: ''
    properties:
      anchorCaseSensitive:
        description: |-
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
          -->
        type: string
      anchorHorizontalAlignment:
        description: |
          Reserved for DocuSign.
          <!--
          Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
          -->
        type: string
      anchorIgnoreIfNotPresent:
        description: 'When set to **true**, this tab is ignored if anchorString is not found in the document.'
        type: string
      anchorMatchWholeWord:
        description: |
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
          -->
        type: string
      anchorString:
        description: Anchor text information for a radio button.
        type: string
      anchorUnits:
        description: 'Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.'
        type: string
      anchorXOffset:
        description: 'Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      anchorYOffset:
        description: 'Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      bold:
        description: 'When set to **true**, the information in the tab is bold.'
        type: string
      conditionalParentLabel:
        description: For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
        type: string
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      customTabId:
        description: 'The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.'
        type: string
      documentId:
        description: Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      font:
        description: 'The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.'
        type: string
      fontColor:
        description: |-
          The font color used for the information in the tab.

          Possible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
        type: string
      fontSize:
        description: |-
          The font size used for the information in the tab.

          Possible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
        type: string
      height:
        description: Height of the tab in pixels.
        type: integer
      italic:
        description: 'When set to **true**, the information in the tab is italic.'
        type: string
      mergeField:
        $ref: '#/definitions/mergeField'
        description: ''
      name:
        description: Specifies the tool tip text for the tab.
        type: string
      pageNumber:
        description: |
          Specifies the page number on which the tab is located.
          Must be 1 for [supplemental documents][supdocs].

          [supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents
        type: string
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      shared:
        description: 'When set to **true**, this custom tab is shared.'
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      tabId:
        description: |
          The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. 

           
        type: string
      tabLabel:
        description: |
          The label string associated with the tab.
          The string may be the empty string.
          If no value is provided, the tab type is used as the value.

          Maximum of 500 characters.
        type: string
      tabOrder:
        description: ''
        type: string
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      underline:
        description: 'When set to **true**, the information in the tab is underlined.'
        type: string
      value:
        description: 'Specifies the value of the tab. '
        type: string
      width:
        description: Width of the tab in pixels.
        type: integer
      xPosition:
        description: |
          This indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. May be zero.
        type: string
      yPosition:
        description: This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
        type: string
    type: object
    x-ds-definition-name: note
    x-ms-summary: ''
  notification:
    description: |-
      A complex element that specifies the notification options for the envelope. It consists of:

      * useAccountDefaults - When set to **true**, the account default notification settings are used for the envelope. 
      * reminders - A complex element that specifies reminder settings for the envelope. It consists of: 

         * reminderEnabled - When set to **true**, a reminder message is sent to the recipient.
         * reminderDelay - An interger that sets the number of days after the recipient receives the envelope that reminder emails are sent to the recipient. 
         * reminderFrequency - An interger that sets the interval, in days, between reminder emails. 

      * expirations - A complex element that specifies the expiration settings for the envelope. It consists of:

         * expireEnabled - When set to **true**, the envelope expires (is no longer available for signing) in the set number of days. If false, the account default setting is used. If the account does not have an expiration setting, the DocuSign default value of 120 days is used. 
         * expireAfter - An integer that sets the number of days the envelope is active.
         * expireWarn - An integer that sets the number of days before envelope expiration that an expiration warning email is sent to the recipient. If set to 0 (zero), no warning email is sent.
    properties:
      expirations:
        $ref: '#/definitions/expirations'
        description: A complex element that specifies the expiration settings for the envelope.
      reminders:
        $ref: '#/definitions/reminders'
        description: A complex element that specifies reminder settings for the envelope
      useAccountDefaults:
        description: 'When set to **true**, the account default notification settings are used for the envelope.'
        type: string
    type: object
    x-ds-definition-name: notification
    x-ms-summary: |-
      A complex element that specifies the notification options for the envelope. It consists of:

      * useAccountDefaults - When set to **true**, the account default notification settings are used for the envelope. 
      * reminders - A complex element that specifies reminder settings for the envelope. It consists of: 

         * reminderEnabled - When set to **true**, a reminder message is sent to the recipient.
         * reminderDelay - An interger that sets the number of days after the recipient receives the envelope that reminder emails are sent to the recipient. 
         * reminderFrequency - An interger that sets the interval, in days, between reminder emails. 

      * expirations - A complex element that specifies the expiration settings for the envelope. It consists of:

         * expireEnabled - When set to **true**, the envelope expires (is no longer available for signing) in the set number of days. If false, the account default setting is used. If the account does not have an expiration setting, the DocuSign default value of 120 days is used. 
         * expireAfter - An integer that sets the number of days the envelope is active.
         * expireWarn - An integer that sets the number of days before envelope expiration that an expiration warning email is sent to the recipient. If set to 0 (zero), no warning email is sent.
  number:
    description: ''
    properties:
      anchorCaseSensitive:
        description: |-
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
          -->
        type: string
      anchorHorizontalAlignment:
        description: |
          Reserved for DocuSign.
          <!--
          Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
          -->
        type: string
      anchorIgnoreIfNotPresent:
        description: 'When set to **true**, this tab is ignored if anchorString is not found in the document.'
        type: string
      anchorMatchWholeWord:
        description: |
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
          -->
        type: string
      anchorString:
        description: Anchor text information for a radio button.
        type: string
      anchorUnits:
        description: 'Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.'
        type: string
      anchorXOffset:
        description: 'Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      anchorYOffset:
        description: 'Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      bold:
        description: 'When set to **true**, the information in the tab is bold.'
        type: string
      concealValueOnDocument:
        description: |-
          When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

          When an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.

          This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        type: string
      conditionalParentLabel:
        description: For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
        type: string
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      customTabId:
        description: 'The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.'
        type: string
      disableAutoSize:
        description: 'When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.'
        type: string
      documentId:
        description: Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      font:
        description: 'The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.'
        type: string
      fontColor:
        description: |-
          The font color used for the information in the tab.

          Possible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
        type: string
      fontSize:
        description: |-
          The font size used for the information in the tab.

          Possible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
        type: string
      formula:
        description: |
          Contains the formula
          for calculating the value of
          this tab.

          Use a tab's `tabLabel`,
          enclosed in brackets,
          to refer to it.

          For example,
          you want to present the total cost
          of two items, tax included.

          The cost of each item is stored
          in number tabs labeled Item1 and Item2.
          The tax rate is in a number tab
          labeled TaxRate.

          The formula string for this property
          would be:
          `([Item1] + [Item2]) * (1 + [TaxRate])`

          See [Calculated Fields][calculatedfields]
          in the DocuSign Support Center
          to learn more about formulas.

          Maximum Length: 2000 characters

          [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields
        type: string
      isPaymentAmount:
        description: 'When set to **true**, sets this as a payment tab. Can only be used with Text, Number, Formula, or List tabs. The value of the tab must be a number. '
        type: string
      italic:
        description: 'When set to **true**, the information in the tab is italic.'
        type: string
      locked:
        description: 'When set to **true**, the signer cannot change the data of the custom tab.'
        type: string
      maxLength:
        description: An optional value that describes the maximum length of the property when the property is a string.
        type: integer
      mergeField:
        $ref: '#/definitions/mergeField'
        description: ''
      name:
        description: Specifies the tool tip text for the tab.
        type: string
      originalValue:
        description: 'The initial value of the tab when it was sent to the recipient. '
        type: string
      pageNumber:
        description: |
          Specifies the page number on which the tab is located.
          Must be 1 for [supplemental documents][supdocs].

          [supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents
        type: string
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      requireAll:
        description: 'When set to **true** and shared is true, information must be entered in this field to complete the envelope. '
        type: string
      requireInitialOnSharedChange:
        description: 'Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.'
        type: string
      required:
        description: 'When set to **true**, the signer is required to fill out this tab'
        type: string
      senderRequired:
        description: |-
          When set to **true**, the sender must populate the tab before an envelope can be sent using the template. 

          This value tab can only be changed by modifying (PUT) the template. 

          Tabs with a `senderRequired` value of true cannot be deleted from an envelope.
        type: string
      shared:
        description: 'When set to **true**, this custom tab is shared.'
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      tabId:
        description: |
          The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. 

           
        type: string
      tabLabel:
        description: |
          The label string associated with the tab.
          The string may be the empty string.
          If no value is provided, the tab type is used as the value.

          Maximum of 500 characters.
        type: string
      tabOrder:
        description: ''
        type: string
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      underline:
        description: 'When set to **true**, the information in the tab is underlined.'
        type: string
      validationMessage:
        description: The message displayed if the custom tab fails input validation (either custom of embedded).
        type: string
      validationPattern:
        description: A regular expressionn used to validate input for the tab.
        type: string
      value:
        description: 'Specifies the value of the tab. '
        type: string
      width:
        description: Width of the tab in pixels.
        type: integer
      xPosition:
        description: |
          This indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. May be zero.
        type: string
      yPosition:
        description: This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
        type: string
    type: object
    x-ds-definition-name: number
    x-ms-summary: ''
  oauthAccess:
    description: ''
    properties:
      access_token:
        description: Access token information.
        type: string
      data:
        description: ''
        items:
          $ref: '#/definitions/nameValue'
        type: array
      expires_in:
        description: ''
        type: string
      refresh_token:
        description: ''
        type: string
      scope:
        description: Must be set to "api".
        type: string
      token_type:
        description: ''
        type: string
    type: object
    x-ds-definition-name: oauthAccess
    x-ms-summary: ''
  page:
    description: Description of a page of a document.
    properties:
      dpi:
        description: The number of dots per inch used for the page image.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      height:
        description: Height of the tab in pixels.
        type: string
      imageBytes:
        description: ''
        type: string
      mimeType:
        description: ''
        type: string
      pageId:
        description: ''
        type: string
      sequence:
        description: ''
        type: string
      width:
        description: Width of the tab in pixels.
        type: string
    type: object
    x-ds-definition-name: page
    x-ms-summary: Description of a page of a document.
  pageImages:
    description: ''
    properties:
      endPosition:
        description: 'The last position in the result set. '
        type: string
      nextUri:
        description: 'The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. '
        type: string
      pages:
        description: ''
        items:
          $ref: '#/definitions/page'
        type: array
      previousUri:
        description: 'The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. '
        type: string
      resultSetSize:
        description: 'The number of results returned in this response. '
        type: string
      startPosition:
        description: Starting position of the current result set.
        type: string
      totalSetSize:
        description: The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.
        type: string
    type: object
    x-ds-definition-name: pageImages
    x-ms-summary: ''
  pageRequest:
    description: ''
    properties:
      password:
        description: ''
        type: string
      rotate:
        description: 'Sets the direction the page image is rotated. The possible settings are: left or right'
        type: string
    type: object
    x-ds-definition-name: pageRequest
    x-ms-summary: ''
  paymentDetails:
    description: |
      When a formula tab
      has a `paymentDetails` property,
      the formula tab
      is a payment item.
      See [Requesting Payments Along with Signatures][paymentguide]
      in the DocuSign Support Center
      to learn more about payments.

      [paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures
    properties:
      chargeId:
        description: ''
        type: string
      currencyCode:
        description: |
          Specifies the three-letter
          [ISO 4217][ISO4217] currency code for the payment.

          Supported currencies are:

          * AUD Australian dollar
          * CAD Canadian dollar
          * EUR Euro
          * GBP Great Britain pund
          * USD United States dollar

          Specifying any other ISO 4217 code for payments is an error.

          [ISO4217]:          https://en.wikipedia.org/wiki/ISO_4217
        type: string
      gatewayAccountId:
        description: |
          A GUID that identifies the payment gateway
          connected to the sender's DocuSign account.

          There is no public API
          for connecting payment gateway accounts
          You must connect and manage payment gateway accounts
          through the DocuSign Admin console
          and through your chosen payment gateway.

          You can get the gateway account ID
          in the Payments section
          of the DocuSign Admin console.


          [paymentgateways]:  https://support.docusign.com/en/guides/managing-payment-gateways
        type: string
      gatewayName:
        description: ''
        type: string
      lineItems:
        description: |
          A payment formula can have
          one or more line items
          that provide detail about
          individual items in a payment request.

          The list of line items
          are returned as metadata
          to the payment gateway.
        items:
          $ref: '#/definitions/paymentLineItem'
        type: array
      status:
        description: |
          This read-only property describes the status of a payment.

          * `new`<br>
            This is a new payment request.
            The envelope has been created,
            but no payment authorizations have been made.

          * `auth_complete`<br>
            A recipient has entered their credit card information,
            but the envelope has not been completed.
            The card has not been charged.

          * `payment_complete`<br>
            The recipient's card has been charged.

          * `payment_capture_failed`<br>
            Final charge failed.
            This can happen when too much time
            passes between authorizing the payment
            and completing the document.
        type: string
      total:
        $ref: '#/definitions/money'
        description: |
          This read-only property
          is a currency-formatted string
          that represents the total
          of all the line items.
          The total is available
          only after the document is completed,
          which is when all recipients have paid and
          have completed all required fields.
    type: object
    x-ds-definition-name: paymentDetails
    x-ms-summary: |
      When a formula tab
      has a `paymentDetails` property,
      the formula tab
      is a payment item.
      See [Requesting Payments Along with Signatures][paymentguide]
      in the DocuSign Support Center
      to learn more about payments.

      [paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures
  paymentGatewayAccountsInfo:
    description: ''
    properties:
      paymentGatewayAccounts:
        description: ''
        items:
          $ref: '#/definitions/PaymentGatewayAccounts'
        type: array
    type: object
    x-ds-definition-name: paymentGatewayAccountsInfo
    x-ms-summary: ''
  paymentLineItem:
    description: |+
      A line item describes details
      about an individual line item
      in a payment request.

    properties:
      amountReference:
        description: |+
          This is a the `tabLabel`
          that specifies the amount paid
          for the line items.

        type: string
      description:
        description: |
          A sender-defined description of the line item.
        type: string
      itemCode:
        description: |
          This is the sender-defined
          SKU, inventory number, or other item code
          for the line item.
        type: string
      name:
        description: |
          This is a sender-defined
          product name, service name,
          or other designation for the line item.
        type: string
    type: object
    x-ds-definition-name: paymentLineItem
    x-ms-summary: |+
      A line item describes details
      about an individual line item
      in a payment request.

  paymentProcessorInformation:
    description: ''
    properties:
      address:
        $ref: '#/definitions/addressInformation'
        description: ''
      billingAgreementId:
        description: ''
        type: string
      email:
        description: ''
        type: string
    type: object
    x-ds-definition-name: paymentProcessorInformation
    x-ms-summary: ''
  permissionProfileInformation:
    description: ''
    properties:
      permissionProfiles:
        description: A complex type containing a collection of permission profiles.
        items:
          $ref: '#/definitions/AccountPermissionProfiles'
        type: array
    type: object
    x-ds-definition-name: permissionProfileInformation
    x-ms-summary: ''
  planInformation:
    description: An object used to identify the features and attributes of the account being created.
    properties:
      addOns:
        description: 'Reserved:'
        items:
          $ref: '#/definitions/addOn'
        type: array
      currencyCode:
        description: Specifies the ISO currency code for the account.
        type: string
      freeTrialDaysOverride:
        description: Reserved for DocuSign use only.
        type: string
      planFeatureSets:
        description: A complex type that sets the feature sets for the account.
        items:
          $ref: '#/definitions/featureSet'
        type: array
      planId:
        description: The DocuSign Plan ID for the account.
        type: string
      recipientDomains:
        description: ''
        items:
          $ref: '#/definitions/recipientDomain'
        type: array
    type: object
    x-ds-definition-name: planInformation
    x-ms-summary: An object used to identify the features and attributes of the account being created.
  postTransactionsResponse:
    description: ''
    properties:
      documentData:
        description: ''
        type: string
      transactionSid:
        description: ''
        type: string
    type: object
    x-ds-definition-name: postTransactionsResponse
    x-ms-summary: ''
  powerFormFormDataRecipient:
    description: ''
    properties:
      email:
        description: ''
        type: string
      formData:
        description: ''
        items:
          $ref: '#/definitions/nameValue'
        type: array
      name:
        description: ''
        type: string
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
    type: object
    x-ds-definition-name: powerFormFormDataRecipient
    x-ms-summary: ''
  powerFormRecipient:
    description: ''
    properties:
      accessCode:
        description: |-
          If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. 

          Maximum Length: 50 characters and it must conform to the account's access code format setting.

          If blank, but the signer `accessCode` property is set in the envelope, then that value is used.

          If blank and the signer `accessCode` property is not set, then the access code is not required.
        type: string
      accessCodeLocked:
        description: ''
        type: string
      accessCodeRequired:
        description: ''
        type: string
      email:
        description: ''
        type: string
      emailLocked:
        description: ''
        type: string
      idCheckConfigurationName:
        description: |-
          Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.

          *Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.
        type: string
      idCheckRequired:
        description: ''
        type: string
      name:
        description: ''
        type: string
      recipientType:
        description: ''
        type: string
      roleName:
        description: Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.
        type: string
      routingOrder:
        description: 'Specifies the routing order of the recipient in the envelope. '
        type: string
      templateRequiresIdLookup:
        description: ''
        type: string
      userNameLocked:
        description: ''
        type: string
    type: object
    x-ds-definition-name: powerFormRecipient
    x-ms-summary: ''
  powerFormSendersResponse:
    description: ''
    properties:
      endPosition:
        description: 'The last position in the result set. '
        type: string
      nextUri:
        description: 'The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. '
        type: string
      powerFormSenders:
        description: ''
        items:
          $ref: '#/definitions/userInfo'
        type: array
      previousUri:
        description: 'The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. '
        type: string
      resultSetSize:
        description: 'The number of results returned in this response. '
        type: string
      startPosition:
        description: Starting position of the current result set.
        type: string
      totalSetSize:
        description: The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.
        type: string
    type: object
    x-ds-definition-name: powerFormSendersResponse
    x-ms-summary: ''
  powerFormsFormDataResponse:
    description: ''
    properties:
      envelopes:
        description: ''
        items:
          $ref: '#/definitions/PowerFormData'
        type: array
    type: object
    x-ds-definition-name: powerFormsFormDataResponse
    x-ms-summary: ''
  powerFormsRequest:
    description: ''
    properties:
      powerForms:
        description: ''
        items:
          $ref: '#/definitions/PowerForms'
        type: array
    type: object
    x-ds-definition-name: powerFormsRequest
    x-ms-summary: ''
  powerFormsResponse:
    description: ''
    properties:
      endPosition:
        description: 'The last position in the result set. '
        type: string
      nextUri:
        description: 'The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. '
        type: string
      powerForms:
        description: ''
        items:
          $ref: '#/definitions/PowerForms'
        type: array
      previousUri:
        description: 'The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. '
        type: string
      resultSetSize:
        description: 'The number of results returned in this response. '
        type: string
      startPosition:
        description: Starting position of the current result set.
        type: string
      totalSetSize:
        description: The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.
        type: string
    type: object
    x-ds-definition-name: powerFormsResponse
    x-ms-summary: ''
  propertyMetadata:
    description: ''
    properties:
      options:
        description: ''
        items:
          type: string
        type: array
      rights:
        description: ''
        type: string
    type: object
    x-ds-definition-name: propertyMetadata
    x-ms-summary: ''
  province:
    description: ''
    properties:
      isoCode:
        description: ''
        type: string
      name:
        description: ''
        type: string
    type: object
    x-ds-definition-name: province
    x-ms-summary: ''
  provisioningInformation:
    description: ''
    properties:
      defaultConnectionId:
        description: ''
        type: string
      defaultPlanId:
        description: ''
        type: string
      distributorCode:
        description: The code that identifies the billing plan groups and plans for the new account.
        type: string
      distributorPassword:
        description: The password for the distributorCode.
        type: string
      passwordRuleText:
        description: ''
        type: string
      planPromotionText:
        description: ''
        type: string
      purchaseOrderOrPromAllowed:
        description: ''
        type: string
    type: object
    x-ds-definition-name: provisioningInformation
    x-ms-summary: ''
  purchasedEnvelopesInformation:
    description: ''
    properties:
      amount:
        description: The total amount of the purchase.
        type: string
      appName:
        description: The AppName of the client application.
        type: string
      currencyCode:
        description: Specifies the ISO currency code of the purchase. This is based on the ISO 4217 currency code information.
        type: string
      platform:
        description: The Platform of the client application
        type: string
      productId:
        description: The Product ID from the AppStore.
        type: string
      quantity:
        description: The quantity of envelopes to add to the account.
        type: string
      receiptData:
        description: The encrypted Base64 encoded receipt data.
        type: string
      storeName:
        description: The name of the AppStore.
        type: string
      transactionId:
        description: Specifies the Transaction ID from the AppStore.
        type: string
    type: object
    x-ds-definition-name: purchasedEnvelopesInformation
    x-ms-summary: ''
  radio:
    description: ''
    properties:
      anchorCaseSensitive:
        description: |-
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
          -->
        type: string
      anchorHorizontalAlignment:
        description: |
          Reserved for DocuSign.
          <!--
          Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
          -->
        type: string
      anchorIgnoreIfNotPresent:
        description: 'When set to **true**, this tab is ignored if anchorString is not found in the document.'
        type: string
      anchorMatchWholeWord:
        description: |
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
          -->
        type: string
      anchorString:
        description: Anchor text information for a radio button.
        type: string
      anchorUnits:
        description: 'Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.'
        type: string
      anchorXOffset:
        description: 'Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      anchorYOffset:
        description: 'Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      locked:
        description: 'When set to **true**, the signer cannot change the data of the custom tab.'
        type: string
      pageNumber:
        description: |
          Specifies the page number on which the tab is located.
          Must be 1 for [supplemental documents][supdocs].

          [supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents
        type: string
      required:
        description: 'When set to **true**, the signer is required to fill out this tab'
        type: string
      selected:
        description: 'When set to **true**, the radio button is selected.'
        type: string
      tabId:
        description: |
          The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. 

           
        type: string
      tabOrder:
        description: ''
        type: string
      value:
        description: 'Specifies the value of the tab. '
        type: string
      xPosition:
        description: |
          This indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. May be zero.
        type: string
      yPosition:
        description: This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
        type: string
    type: object
    x-ds-definition-name: radio
    x-ms-summary: ''
  radioGroup:
    description: ''
    properties:
      conditionalParentLabel:
        description: For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
        type: string
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      documentId:
        description: Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
        type: string
      groupName:
        description: The name of the group.
        type: string
      radios:
        description: Specifies the locations and status for radio buttons that are grouped together.
        items:
          $ref: '#/definitions/radio'
        type: array
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      requireAll:
        description: 'When set to **true** and shared is true, information must be entered in this field to complete the envelope. '
        type: string
      requireInitialOnSharedChange:
        description: 'Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.'
        type: string
      shared:
        description: 'When set to **true**, this custom tab is shared.'
        type: string
    type: object
    x-ds-definition-name: radioGroup
    x-ms-summary: ''
  recipientAttachment:
    description: ''
    properties:
      attachmentId:
        description: ''
        type: string
      attachmentType:
        description: ''
        type: string
      data:
        description: ''
        type: string
      label:
        description: ''
        type: string
      name:
        description: ''
        type: string
      remoteUrl:
        description: ''
        type: string
    type: object
    x-ds-definition-name: recipientAttachment
    x-ms-summary: ''
  recipientDomain:
    description: ''
    properties:
      active:
        description: ''
        type: string
      domainCode:
        description: ''
        type: string
      domainName:
        description: ''
        type: string
      recipientDomainId:
        description: ''
        type: string
    type: object
    x-ds-definition-name: recipientDomain
    x-ms-summary: ''
  recipientEmailNotification:
    description: ''
    properties:
      emailBody:
        description: |-
          Specifies the email body of the message sent to the recipient. 

          Maximum length: 10000 characters. 
        type: string
      emailSubject:
        description: |-
          Specifies the subject of the email that is sent to all recipients.

          See [ML:Template Email Subject Merge Fields] for information about adding merge field information to the email subject.
        type: string
      supportedLanguage:
        description: 'The language to be used with your custom notification email. The supported languages, with the language value shown in parenthesis, are: Arabic (ar), Bahasa Indonesia (id), Bahasa Melayu (ms) Bulgarian (bg), Czech (cs), Chinese Simplified (zh_CN), Chinese Traditional (zh_TW), Croatian (hr), Danish (da), Dutch (nl), English US (en), English UK (en_GB), Estonian (et), Farsi (fa), Finnish (fi), French (fr), French Canada (fr_CA), German (de), Greek (el), Hebrew (he), Hindi (hi), Hungarian (hu), Italian (it), Japanese (ja), Korean (ko), Latvian (lv), Lithuanian (lt), Norwegian (no), Polish (pl), Portuguese (pt), Portuguese Brazil (pt_BR), Romanian (ro),Russian (ru), Serbian (sr), Slovak (sk), Slovenian (sl), Spanish (es),Spanish Latin America (es_MX), Swedish (sv), Thai (th), Turkish (tr), Ukrainian (uk), and Vietnamese (vi).'
        type: string
    type: object
    x-ds-definition-name: recipientEmailNotification
    x-ms-summary: ''
  recipientEvent:
    description: ''
    properties:
      includeDocuments:
        description: reserved
        type: string
      recipientEventStatusCode:
        description: 'Send a webhook notification for the following recipient statuses: Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded.'
        type: string
    type: object
    x-ds-definition-name: recipientEvent
    x-ms-summary: ''
  recipientFormData:
    description: ''
    properties:
      declinedTime:
        description: ''
        type: string
      deliveredTime:
        description: ''
        type: string
      email:
        description: ''
        type: string
      formData:
        description: ''
        items:
          $ref: '#/definitions/nameValue'
        type: array
      name:
        description: ''
        type: string
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      sentTime:
        description: ''
        type: string
      signedTime:
        description: ''
        type: string
    type: object
    x-ds-definition-name: recipientFormData
    x-ms-summary: ''
  recipientNamesResponse:
    description: ''
    properties:
      multipleUsers:
        description: Indicates whether email address is used by more than one user.
        type: string
      recipientNames:
        description: ''
        items:
          type: string
        type: array
      reservedRecipientEmail:
        description: ''
        type: string
    type: object
    x-ds-definition-name: recipientNamesResponse
    x-ms-summary: ''
  recipientPhoneAuthentication:
    description: |-
      A complex type that Contains the elements:

      * recipMayProvideNumber - Boolean. When set to **true**, the recipient can use whatever phone number they choose.
      * senderProvidedNumbers - ArrayOfString.  A list of phone numbers the recipient can use.
      * recordVoicePrint - Reserved.
      * validateRecipProvidedNumber - Reserved.
    properties:
      recipMayProvideNumber:
        description: 'Boolean. When set to **true**, the recipient can supply a phone number their choice.'
        type: string
      recordVoicePrint:
        description: Reserved.
        type: string
      senderProvidedNumbers:
        description: 'An Array containing a list of phone numbers the recipient may use for SMS text authentication. '
        items:
          type: string
        type: array
      validateRecipProvidedNumber:
        description: ' Reserved.'
        type: string
    type: object
    x-ds-definition-name: recipientPhoneAuthentication
    x-ms-summary: |-
      A complex type that Contains the elements:

      * recipMayProvideNumber - Boolean. When set to **true**, the recipient can use whatever phone number they choose.
      * senderProvidedNumbers - ArrayOfString.  A list of phone numbers the recipient can use.
      * recordVoicePrint - Reserved.
      * validateRecipProvidedNumber - Reserved.
  recipientSAMLAuthentication:
    description: |-
      Contains the name/value pair information for the SAML assertion attributes:

      * name - The name of the SAML assertion attribute.
      * value - The value associated with the named SAML assertion attribute. 

      Your account must be set up to use SSO to use this.
    properties:
      samlAssertionAttributes:
        description: ''
        items:
          $ref: '#/definitions/samlAssertionAttribute'
        type: array
    type: object
    x-ds-definition-name: recipientSAMLAuthentication
    x-ms-summary: |-
      Contains the name/value pair information for the SAML assertion attributes:

      * name - The name of the SAML assertion attribute.
      * value - The value associated with the named SAML assertion attribute. 

      Your account must be set up to use SSO to use this.
  recipientSMSAuthentication:
    description: Contains the element senderProvidedNumbers which is an Array  of phone numbers the recipient can use for SMS text authentication.
    properties:
      senderProvidedNumbers:
        description: 'An Array containing a list of phone numbers the recipient may use for SMS text authentication. '
        items:
          type: string
        type: array
    type: object
    x-ds-definition-name: recipientSMSAuthentication
    x-ms-summary: Contains the element senderProvidedNumbers which is an Array  of phone numbers the recipient can use for SMS text authentication.
  recipientSignatureInformation:
    description: |-
      Allows the sender to pre-specify the signature name, signature initials and signature font used in the signature stamp for the recipient.

      Used only with recipient types In Person Signers and Signers.
    properties:
      fontStyle:
        description: ''
        type: string
      signatureInitials:
        description: ''
        type: string
      signatureName:
        description: Specifies the user signature name.
        type: string
    type: object
    x-ds-definition-name: recipientSignatureInformation
    x-ms-summary: |-
      Allows the sender to pre-specify the signature name, signature initials and signature font used in the signature stamp for the recipient.

      Used only with recipient types In Person Signers and Signers.
  recipientSignatureProvider:
    description: 'An Electronic or Standards Based Signature (digital signature) provider for the signer to use. [More information.](../../../../guide/appendix/standards_based_signatures.html)'
    properties:
      signatureProviderName:
        description: 'The name of an Electronic or Standards Based Signature (digital signature) provider for the signer to use. [The current provider list.](../../../../guide/appendix/standards_based_signatures.html#signature-provider-options)'
        type: string
      signatureProviderOptions:
        $ref: '#/definitions/recipientSignatureProviderOptions'
        description: Option settings for the signature provider.
    type: object
    x-ds-definition-name: recipientSignatureProvider
    x-ms-summary: 'An Electronic or Standards Based Signature (digital signature) provider for the signer to use. [More information.](../../../../guide/appendix/standards_based_signatures.html)'
  recipientSignatureProviderOptions:
    description: 'Option settings for the signature provider. Different providers require or use different options. [The current provider list and the options they require.](../../../../guide/appendix/standards_based_signatures.html#signature-provider-options)'
    properties:
      cpfNumber:
        description: Reserved for DocuSign
        type: string
      oneTimePassword:
        description: 'A pre-shared secret that the signer must enter to complete the signing process. Eg last six digits of the signer''s government ID or Social Security number. Or a newly created pre-shared secret for the transaction. Note: some signature providers may require an exact (case-sensitive) match if alphabetic characters are included in the field.'
        type: string
      signerRole:
        description: 'The role or capacity of the signing recipient. Examples: Manager, Approver, etc.'
        type: string
      sms:
        description: 'The mobile phone number used to send the recipient an access code for the signing ceremony. Format: a string starting with +, then the country code followed by the full mobile phone number without any spaces or special characters. Omit leading zeroes before a city code. Examples: +14155551234, +97235551234, +33505551234.'
        type: string
    type: object
    x-ds-definition-name: recipientSignatureProviderOptions
    x-ms-summary: 'Option settings for the signature provider. Different providers require or use different options. [The current provider list and the options they require.](../../../../guide/appendix/standards_based_signatures.html#signature-provider-options)'
  recipientUpdateResponse:
    description: ''
    properties:
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      tabs:
        $ref: '#/definitions/EnvelopeRecipientTabs'
        description: ''
    type: object
    x-ds-definition-name: recipientUpdateResponse
    x-ms-summary: ''
  recipientViewRequest:
    description: ''
    properties:
      assertionId:
        description: A unique identifier of the authentication event executed by the client application.
        type: string
      authenticationInstant:
        description: A sender generated value that indicates the date/time that the signer was authenticated.
        type: string
      authenticationMethod:
        description: |-
          Required. Choose a value that most closely matches the technique your application used to authenticate the recipient / signer. 

          Choose a value from this list: 
          * Biometric 
          * Email
          * HTTPBasicAuth
          * Kerberos
          * KnowledgeBasedAuth
          * None
          * PaperDocuments
          * Password
          * RSASecureID
          * SingleSignOn_CASiteminder
          * SingleSignOn_InfoCard
          * SingleSignOn_MicrosoftActiveDirectory
          * SingleSignOn_Other
          * SingleSignOn_Passport
          * SingleSignOn_SAML
          * Smartcard
          * SSLMutualAuth
          * X509Certificate

          This information is included in the Certificate of Completion.
        type: string
      clientUserId:
        description: |-
          A sender created value. If provided, the recipient is treated as an embedded (captive) recipient or signer.

          Use your application's client ID (user ID) for the recipient. Doing so enables the details of your application's authentication of the recipient to be connected to the recipient's signature if the signature is disputed or repudiated.

          Maximum length: 100 characters.
        type: string
      email:
        description: Specifies the email of the recipient. You can use either email and userName or userId to identify the recipient.
        type: string
      pingFrequency:
        description: 'Only used if pingUrl is specified. This is the interval, in seconds, between pings on the pingUrl.  The default is 300 seconds. Valid values are 60-1200 seconds.'
        type: string
      pingUrl:
        description: A client Url to be pinged by the DocuSign Signing experience to indicate to the client that Signing is active. An HTTP Get is executed against the client. The response from the client is ignored. The intent is for the client to reset it's session timer when the request is received.
        type: string
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      returnUrl:
        description: |
          The URL that the recipient is redirected to
          after the signing session has ended.
          DocuSign redirects to the URL
          and includes an `event` query parameter
          that can be used by your application.

          Possible `event` parameter values: 

          * `access_code_failed`<br>
            Recipient used incorrect access code.
          * `cancel`<br>
            Recipient canceled the signing operation,
            possibly by using the Finish Later option.
          * `decline`<br>
            Recipient declined to sign.
          * `exception`<br>
            A system error occurred during signing.
          * `fax_pending`<br>
            Recipient has a fax pending.
          * `id_check_failed`<br>
            Recipient failed an ID check.
          * `session_timeout`<br>
            The session timed out.
            An account can control this timeout using the Signer Session Timeout option.
          * `signing_complete`<br>
            Recipient completed the signing ceremony.
          * `ttl_expired`<br>
            The Time To Live token for the envelope has expired.
            After being successfully invoked, these tokens expire
            after 5 minutes
            or if the envelope is voided.
          * `viewing_complete`<br>
            The recipient completed viewing an envelope
            that is in a read-only/terminal state
            such as completed, declined, or voided.

          Be sure to include `https://` in the URL
          or the redirect may fail
          on some browsers.
        type: string
      securityDomain:
        description: The domain in which the user authenticated.
        type: string
      userId:
        description: |-
          Specifies the user ID of the recipient. You can use with user ID or email and user name to identify the recipient. 

          If userId is used and a clientUserId is provided, the value in the `userId` property must match a recipientId (which can be retrieved with a GET recipients call) for the envelope. 

          If a userId is used and a clientUserId is not provided, the userId must match the user ID of the authenticating user.
        type: string
      userName:
        description: Specifies the username of the recipient. You can use either email and userName or userId to identify the recipient.
        type: string
      xFrameOptions:
        description: ''
        type: string
      xFrameOptionsAllowFromUrl:
        description: ''
        type: string
    type: object
    x-ds-definition-name: recipientViewRequest
    x-ms-summary: ''
  recipientsUpdateSummary:
    description: ''
    properties:
      recipientUpdateResults:
        description: ''
        items:
          $ref: '#/definitions/recipientUpdateResponse'
        type: array
    type: object
    x-ds-definition-name: recipientsUpdateSummary
    x-ms-summary: ''
  referralInformation:
    description: |-
      A complex type that contains the following information for entering referral and discount information. The following items are included in the referral information (all string content): enableSupport, includedSeats, saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, saleDiscountSeatPriceOverride, planStartMonth, referralCode, referrerName, advertisementId, publisherId, shopperId, promoCode, groupMemberId, idType, and industry 

      ###### Note: saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, and saleDiscountSeatPriceOverride are reserved for DoucSign use only.
    properties:
      advertisementId:
        description: |
          A complex type that contains the following information for entering referral and discount information. The following items are included in the referral information (all string content): enableSupport, includedSeats, saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, saleDiscountSeatPriceOverride, planStartMonth, referralCode, referrerName, advertisementId, publisherId, shopperId, promoCode, groupMemberId, idType, and industry.

          ###### Note: saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, and saleDiscountSeatPriceOverride are reserved for DoucSign use only. 
        type: string
      enableSupport:
        description: 'When set to **true**, then customer support is provided as part of the account plan.'
        type: string
      externalOrgId:
        description: ''
        type: string
      groupMemberId:
        description: ''
        type: string
      idType:
        description: ''
        type: string
      includedSeats:
        description: The number of seats (users) included.
        type: string
      industry:
        description: ''
        type: string
      planStartMonth:
        description: ''
        type: string
      promoCode:
        description: ''
        type: string
      publisherId:
        description: ''
        type: string
      referralCode:
        description: ''
        type: string
      referrerName:
        description: ''
        type: string
      saleDiscountAmount:
        description: Reserved for DocuSign use only.
        type: string
      saleDiscountFixedAmount:
        description: Reserved for DocuSign use only.
        type: string
      saleDiscountPercent:
        description: Reserved for DocuSign use only.
        type: string
      saleDiscountPeriods:
        description: Reserved for DocuSign use only.
        type: string
      saleDiscountSeatPriceOverride:
        description: Reserved for DocuSign use only.
        type: string
      shopperId:
        description: ''
        type: string
    type: object
    x-ds-definition-name: referralInformation
    x-ms-summary: |-
      A complex type that contains the following information for entering referral and discount information. The following items are included in the referral information (all string content): enableSupport, includedSeats, saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, saleDiscountSeatPriceOverride, planStartMonth, referralCode, referrerName, advertisementId, publisherId, shopperId, promoCode, groupMemberId, idType, and industry 

      ###### Note: saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, and saleDiscountSeatPriceOverride are reserved for DoucSign use only.
  reminders:
    description: A complex element that specifies reminder settings for the envelope
    properties:
      reminderDelay:
        description: An interger that sets the number of days after the recipient receives the envelope that reminder emails are sent to the recipient.
        type: string
      reminderEnabled:
        description: 'When set to **true**, the envelope expires (is no longer available for signing) in the set number of days. If false, the account default setting is used. If the account does not have an expiration setting, the DocuSign default value of 120 days is used.'
        type: string
      reminderFrequency:
        description: 'An interger that sets the interval, in days, between reminder emails.'
        type: string
    type: object
    x-ds-definition-name: reminders
    x-ms-summary: A complex element that specifies reminder settings for the envelope
  returnUrlRequest:
    description: 'The request body for the EnvelopeViews: createSender method.'
    properties:
      returnUrl:
        description: |-
          Your app's return url that the user will be redirected to after sending the envelope or completing the sending/tagging view. Query parameters `envelopeId` and `event` will be added to the URL. The event parameter values: 

          * `Send` (the user sent the envelope)
          * `Save` (the user saved the envelope, it is still a draft)
          * `Cancel` (the user canceled the sending transaction)
          * `Error` (there was an error during the send operation)
          * `SessionEnd` (the sending session ended before the user completed a different action)
        type: string
    type: object
    x-ds-definition-name: returnUrlRequest
    x-ms-summary: 'The request body for the EnvelopeViews: createSender method.'
  samlAssertionAttribute:
    description: ''
    properties:
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      name:
        description: ''
        type: string
      originalValue:
        description: 'The initial value of the tab when it was sent to the recipient. '
        type: string
      value:
        description: The value associated with the named SAML assertion attribute
        type: string
    type: object
    x-ds-definition-name: samlAssertionAttribute
    x-ms-summary: ''
  seatDiscount:
    description: ''
    properties:
      beginSeatCount:
        description: 'Reserved: TBD'
        type: string
      discountPercent:
        description: ''
        type: string
      endSeatCount:
        description: 'Reserved: TBD'
        type: string
    type: object
    x-ds-definition-name: seatDiscount
    x-ms-summary: ''
  senderEmailNotifications:
    description: ''
    properties:
      changedSigner:
        description: 'When set to **true**, the sender receives notification if the signer changes.'
        type: string
      deliveryFailed:
        description: 'When set to **true**, the sender receives notification if the delivery of the envelope fails.'
        type: string
      envelopeComplete:
        description: 'When set to **true**, the user receives notification that the envelope has been completed.'
        type: string
      offlineSigningFailed:
        description: 'When set to **true**, the user receives notification if the offline signing failed.'
        type: string
      recipientViewed:
        description: 'When set to **true**, the sender receives notification that the recipient viewed the enveloper.'
        type: string
      senderEnvelopeDeclined:
        description: ''
        type: string
      withdrawnConsent:
        description: 'When set to **true**, the user receives notification if consent is withdrawn.'
        type: string
    type: object
    x-ds-definition-name: senderEmailNotifications
    x-ms-summary: ''
  serverTemplate:
    description: ''
    properties:
      sequence:
        description: ''
        type: string
      templateId:
        description: 'The unique identifier of the template. If this is not provided, DocuSign will generate a value. '
        type: string
    type: object
    x-ds-definition-name: serverTemplate
    x-ms-summary: ''
  serviceVersion:
    description: ''
    properties:
      version:
        description: The version of the rest API.
        type: string
      versionUrl:
        description: ''
        type: string
    type: object
    x-ds-definition-name: serviceVersion
    x-ms-summary: ''
  settingsMetadata:
    description: ''
    properties:
      is21CFRPart11:
        description: 'When set to **true**, indicates that this module is enabled on the account.'
        type: string
      options:
        description: ''
        items:
          type: string
        type: array
      rights:
        description: ''
        type: string
      uiHint:
        description: ''
        type: string
      uiOrder:
        description: ''
        type: string
      uiType:
        description: ''
        type: string
    type: object
    x-ds-definition-name: settingsMetadata
    x-ms-summary: ''
  sharedItem:
    description: ''
    properties:
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      shared:
        description: 'When set to **true**, this custom tab is shared.'
        type: string
      user:
        $ref: '#/definitions/userInfo'
        description: ''
    type: object
    x-ds-definition-name: sharedItem
    x-ms-summary: ''
  signHere:
    description: ''
    properties:
      anchorCaseSensitive:
        description: |-
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
          -->
        type: string
      anchorHorizontalAlignment:
        description: |
          Reserved for DocuSign.
          <!--
          Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
          -->
        type: string
      anchorIgnoreIfNotPresent:
        description: 'When set to **true**, this tab is ignored if anchorString is not found in the document.'
        type: string
      anchorMatchWholeWord:
        description: |
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
          -->
        type: string
      anchorString:
        description: Anchor text information for a radio button.
        type: string
      anchorUnits:
        description: 'Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.'
        type: string
      anchorXOffset:
        description: 'Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      anchorYOffset:
        description: 'Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      conditionalParentLabel:
        description: For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
        type: string
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      customTabId:
        description: 'The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.'
        type: string
      documentId:
        description: Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      mergeField:
        $ref: '#/definitions/mergeField'
        description: ''
      name:
        description: Specifies the tool tip text for the tab.
        type: string
      optional:
        description: ''
        type: string
      pageNumber:
        description: |
          Specifies the page number on which the tab is located.
          Must be 1 for [supplemental documents][supdocs].

          [supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents
        type: string
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      scaleValue:
        description: ''
        type: number
      stampType:
        description: ''
        type: string
      stampTypeMetadata:
        $ref: '#/definitions/propertyMetadata'
        description: ''
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      tabId:
        description: |
          The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. 

           
        type: string
      tabLabel:
        description: |
          The label string associated with the tab.
          The string may be the empty string.
          If no value is provided, the tab type is used as the value.

          Maximum of 500 characters.
        type: string
      tabOrder:
        description: ''
        type: string
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      xPosition:
        description: |
          This indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. May be zero.
        type: string
      yPosition:
        description: This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
        type: string
    type: object
    x-ds-definition-name: signHere
    x-ms-summary: ''
  signatureProviderRequiredOption:
    description: ''
    properties:
      requiredSignatureProviderOptionIds:
        description: ''
        items:
          type: string
        type: array
      signerType:
        description: ''
        type: string
    type: object
    x-ds-definition-name: signatureProviderRequiredOption
    x-ms-summary: ''
  signatureType:
    description: ''
    properties:
      isDefault:
        description: ''
        type: string
      type:
        description: 'Type of the user. Valid values: type_owner, type_participant.'
        type: string
    type: object
    x-ds-definition-name: signatureType
    x-ms-summary: ''
  signer:
    description: ''
    properties:
      accessCode:
        description: |-
          If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. 

          Maximum Length: 50 characters and it must conform to the account's access code format setting.

          If blank, but the signer `accessCode` property is set in the envelope, then that value is used.

          If blank and the signer `accessCode` property is not set, then the access code is not required.
        type: string
      addAccessCodeToEmail:
        description: This Optional attribute indicates that the access code will be added to the email sent to the recipient; this nullifies the Security measure of Access Code on the recipient.
        type: string
      autoNavigation:
        description: |
          Specifies whether auto navigation is set for the recipient.
        type: string
      bulkRecipientsUri:
        description: Contains a URI for an endpoint that allows you to easily retrieve bulk recipient information.
        type: string
      canSignOffline:
        description: 'When set to **true**, specifies that the signer can perform the signing ceremony offline.'
        type: string
      clientUserId:
        description: |-
          Specifies whether the recipient is embedded or remote. 

          If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.

          Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending. 

          Maximum length: 100 characters. 
        type: string
      creationReason:
        description: ''
        type: string
      customFields:
        description: An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.
        items:
          type: string
        type: array
      declinedDateTime:
        description: The date and time the recipient declined the document.
        type: string
      declinedReason:
        description: The reason the recipient declined the document.
        type: string
      defaultRecipient:
        description: 'When set to **true**, this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.'
        type: string
      deliveredDateTime:
        description: 'Reserved: For DocuSign use only.'
        type: string
      deliveryMethod:
        description: 'Reserved: For DocuSign use only.'
        type: string
      documentVisibility:
        description: ''
        items:
          $ref: '#/definitions/documentVisibility'
        type: array
      email:
        description: |-
          Email id of the recipient. Notification of the document to sign is sent to this email id. 

          Maximum length: 100 characters. 
        type: string
      emailNotification:
        $ref: '#/definitions/recipientEmailNotification'
        description: |-
          An optional complex type that sets a specific email subject and body for this recipient's notification email. 

          **Note**: If you use this field to set a specific email notification for one recipient, you must also set the email notification for the other recipients. Using this field for one or more recipients negates the Envelope `Subject` and `EmailBlurb` property settings. 
      emailRecipientPostSigningURL:
        description: ''
        type: string
      embeddedRecipientStartURL:
        description: |-
          Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. 

          If set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.

          It is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.

          If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. 

          *Example*: 

          `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` 
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      excludedDocuments:
        description: |-
          Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.

          When enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.
        items:
          type: string
        type: array
      faxNumber:
        description: 'Reserved:'
        type: string
      idCheckConfigurationName:
        description: |-
          Specifies authentication check by name. The names used here must be the same as the authentication type names used by the account (these name can also be found in the web console sending interface in the Identify list for a recipient,) This overrides any default authentication setting.

          *Example*: Your account has ID Check and SMS Authentication available and in the web console Identify list these appear as 'ID Check $' and 'SMS Auth $'. To use ID check in an envelope, the idCheckConfigurationName should be 'ID Check '. If you wanted to use SMS, it would be 'SMS Auth $' and you would need to add you would need to add phone number information to the `smsAuthentication` node.
        type: string
      idCheckInformationInput:
        $ref: '#/definitions/idCheckInformationInput'
        description: |-
          A complex element that contains input information related to a recipient ID check. It can include the following information.

          addressInformationInput: Used to set recipient address information and consists of:

          * addressInformation: consists of six elements, with stree2 and zipPlus4 being optional. The elements are: street1, street2, city, state, zip, zipPlus4. The maximum length of each element is: street1/street2 = 150 characters, city = 50 characters, state = 2 characters, and zip/zipPlus4 = 20 characters.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
          * receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.

          dobInformationInput: Used to set recipient date of birth information and consists of:

          * dateOfBirth: Specifies the recipient's date, month and year of birth.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
          * receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.

          ssn4InformationInput: Used to set the last four digits of the recipient's SSN information and consists of:

          * ssn4: Specifies the last four digits of the recipient's SSN.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
          * receiveInResponse: A Boolean element that specifies if the information needs to be returned in the response.

          ssn9InformationInput: Used to set the recipient's SSN information. Note that the ssn9 information can never be returned in the response. The ssn9 input consists of: 
          * ssn9: Specifies the recipient's SSN.
          * displayLevelCode: Specifies the display level for the recipient. Values are: ReadOnly, Editable, or DoNotDisplay.
           
      inheritEmailNotificationConfiguration:
        description: 'When set to **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient''s account. '
        type: string
      isBulkRecipient:
        description: |
          When set to **true**, this signer is a bulk recipient and the recipient information is contained in a bulk recipient file. 

          Note that when this is true the email and name for the recipient becomes bulk@recipient.com and "Bulk Recipient". These fields can not be changed for the bulk recipient. 
        type: string
      name:
        description: ''
        type: string
      note:
        description: |
          A note sent to the recipient in the signing email.
          This note is unique to this recipient.
          In the user interface,
          it appears near the upper left corner
          of the document
          on the signing screen.

          Maximum Length: 1000 characters.
        type: string
      phoneAuthentication:
        $ref: '#/definitions/recipientPhoneAuthentication'
        description: |
          A complex type that Contains the elements:

          * recipMayProvideNumber - Boolean. When set to **true**, the recipient can use whatever phone number they choose.
          * senderProvidedNumbers - ArrayOfString.  A list of phone numbers the recipient can use.
          * recordVoicePrint - Reserved.
          * validateRecipProvidedNumber - Reserved.
      recipientAttachments:
        description: 'Reserved:'
        items:
          $ref: '#/definitions/recipientAttachment'
        type: array
      recipientAuthenticationStatus:
        $ref: '#/definitions/authenticationStatus'
        description: ''
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      recipientIdGuid:
        description: ''
        type: string
      recipientSignatureProviders:
        description: 'The default signature provider is the DocuSign Electronic signature system. This parameter is used to specify one or more Standards Based Signature (digital signature) providers for the signer to use. [More information](../../../../guide/appendix/standards_based_signatures.html)'
        items:
          $ref: '#/definitions/recipientSignatureProvider'
        type: array
      recipientSuppliesTabs:
        description: ''
        type: string
      requireIdLookup:
        description: 'When set to **true**, the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. '
        type: string
      requireSignOnPaper:
        description: 'When set to **true**, the signer must print, sign, and upload or fax the signed documents to DocuSign.'
        type: string
      requireSignerCertificate:
        description: |-
          By default, DocuSign signers create electronic signatures. This field can be used to require the signer to use a SAFE-BioPharma digital certificate for signing.

          This parameter should only be used to select a SAFE-BioPharma certificate. New integrations should use the `recipientSignatureProviders` parameter for other types of digital certificates. 

          Set this parameter to `safe` to use a SAFE-BioPharma certificate.

          The signer must be enrolled in the SAFE program to sign with a SAFE certificate.
        type: string
      roleName:
        description: Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.
        type: string
      routingOrder:
        description: 'Specifies the routing order of the recipient in the envelope. '
        type: string
      samlAuthentication:
        $ref: '#/definitions/recipientSAMLAuthentication'
        description: ''
      sentDateTime:
        description: The date and time the envelope was sent.
        type: string
      signInEachLocation:
        description: 'When set to **true**, specifies that the signer must sign in all locations.'
        type: string
      signatureInfo:
        $ref: '#/definitions/recipientSignatureInformation'
        description: |-
          Allows the sender to pre-specify the signature name, signature initials and signature font used in the signature stamp for the recipient.

          Used only with recipient types In Person Signers and Signers. 
           
      signedDateTime:
        description: 'Reserved: For DocuSign use only. '
        type: string
      signingGroupId:
        description: 'When set to **true** and the feature is enabled in the sender''s account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).'
        type: string
      signingGroupName:
        description: |-
          The display name for the signing group. 

          Maximum Length: 100 characters. 
        type: string
      signingGroupUsers:
        description: A complex type that contains information about users in the signing group.
        items:
          $ref: '#/definitions/userInfo'
        type: array
      smsAuthentication:
        $ref: '#/definitions/recipientSMSAuthentication'
        description: |
          Contains the element senderProvidedNumbers which is an Array  of phone numbers the recipient can use for SMS text authentication. 
      socialAuthentications:
        description: ' Lists the social ID type that can be used for recipient authentication.'
        items:
          $ref: '#/definitions/socialAuthentication'
        type: array
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      tabs:
        $ref: '#/definitions/EnvelopeRecipientTabs'
        description: ''
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      totalTabCount:
        description: ''
        type: string
      userId:
        description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
        type: string
    type: object
    x-ds-definition-name: signer
    x-ms-summary: ''
  signerAttachment:
    description: ''
    properties:
      anchorCaseSensitive:
        description: |-
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
          -->
        type: string
      anchorHorizontalAlignment:
        description: |
          Reserved for DocuSign.
          <!--
          Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
          -->
        type: string
      anchorIgnoreIfNotPresent:
        description: 'When set to **true**, this tab is ignored if anchorString is not found in the document.'
        type: string
      anchorMatchWholeWord:
        description: |
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
          -->
        type: string
      anchorString:
        description: Anchor text information for a radio button.
        type: string
      anchorUnits:
        description: 'Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.'
        type: string
      anchorXOffset:
        description: 'Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      anchorYOffset:
        description: 'Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      conditionalParentLabel:
        description: For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
        type: string
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      customTabId:
        description: 'The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.'
        type: string
      documentId:
        description: Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      mergeField:
        $ref: '#/definitions/mergeField'
        description: ''
      name:
        description: ''
        type: string
      optional:
        description: ''
        type: string
      pageNumber:
        description: |
          Specifies the page number on which the tab is located.
          Must be 1 for [supplemental documents][supdocs].

          [supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents
        type: string
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      scaleValue:
        description: ''
        type: number
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      tabId:
        description: |
          The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. 

           
        type: string
      tabLabel:
        description: |
          The label string associated with the tab.
          The string may be the empty string.
          If no value is provided, the tab type is used as the value.

          Maximum of 500 characters.
        type: string
      tabOrder:
        description: ''
        type: string
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      xPosition:
        description: |
          This indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. May be zero.
        type: string
      yPosition:
        description: This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
        type: string
    type: object
    x-ds-definition-name: signerAttachment
    x-ms-summary: ''
  signerEmailNotifications:
    description: 'An array of email notifications that specifies the email the user receives when they are a sender. When the specific email notification is set to true, the user receives those types of email notifications from DocuSign. The user inherits the default account sender email notification settings when the user is created.'
    properties:
      agentNotification:
        description: 'When set to **true**, the user receives agent notification emails.'
        type: string
      carbonCopyNotification:
        description: 'When set to **true**, the user receives notifications of carbon copy deliveries.'
        type: string
      certifiedDeliveryNotification:
        description: 'When set to **true**, the user receives notifications of certified deliveries.'
        type: string
      documentMarkupActivation:
        description: 'When set to **true**, the user receives notification that document markup has been activated.'
        type: string
      envelopeActivation:
        description: 'When set to **true**, the user receives notification that the envelope has been activated.'
        type: string
      envelopeComplete:
        description: 'When set to **true**, the user receives notification that the envelope has been completed.'
        type: string
      envelopeCorrected:
        description: 'When set to **true**, the user receives notification that the envelope has been corrected.'
        type: string
      envelopeDeclined:
        description: 'When set to **true**, the user receives notification that the envelope has been declined.'
        type: string
      envelopeVoided:
        description: 'When set to **true**, the user receives notification that the envelope has been voided.'
        type: string
      faxReceived:
        description: 'Reserved:'
        type: string
      offlineSigningFailed:
        description: 'When set to **true**, the user receives notification if the offline signing failed.'
        type: string
      purgeDocuments:
        description: 'When set to **true**, the user receives notification of document purges.'
        type: string
      reassignedSigner:
        description: 'When set to **true**, the user receives notification that the envelope has been reassigned.'
        type: string
      whenSigningGroupMember:
        description: ''
        type: string
    type: object
    x-ds-definition-name: signerEmailNotifications
    x-ms-summary: 'An array of email notifications that specifies the email the user receives when they are a sender. When the specific email notification is set to true, the user receives those types of email notifications from DocuSign. The user inherits the default account sender email notification settings when the user is created.'
  signingGroupInformation:
    description: ''
    properties:
      groups:
        description: A collection group objects containing information about the groups returned.
        items:
          $ref: '#/definitions/SigningGroups'
        type: array
    type: object
    x-ds-definition-name: signingGroupInformation
    x-ms-summary: ''
  signingGroupUser:
    description: ''
    properties:
      email:
        description: ''
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      userName:
        description: |-
          The name of the group member. 

          Maximum Length: 100 characters. 
        type: string
    type: object
    x-ds-definition-name: signingGroupUser
    x-ms-summary: ''
  socialAuthentication:
    description: ''
    properties:
      authentication:
        description: 'Reserved: TBD'
        type: string
    type: object
    x-ds-definition-name: socialAuthentication
    x-ms-summary: ''
  ssn:
    description: ''
    properties:
      anchorCaseSensitive:
        description: |-
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
          -->
        type: string
      anchorHorizontalAlignment:
        description: |
          Reserved for DocuSign.
          <!--
          Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
          -->
        type: string
      anchorIgnoreIfNotPresent:
        description: 'When set to **true**, this tab is ignored if anchorString is not found in the document.'
        type: string
      anchorMatchWholeWord:
        description: |
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
          -->
        type: string
      anchorString:
        description: Anchor text information for a radio button.
        type: string
      anchorUnits:
        description: 'Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.'
        type: string
      anchorXOffset:
        description: 'Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      anchorYOffset:
        description: 'Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      bold:
        description: 'When set to **true**, the information in the tab is bold.'
        type: string
      concealValueOnDocument:
        description: |-
          When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

          When an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.

          This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        type: string
      conditionalParentLabel:
        description: For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
        type: string
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      customTabId:
        description: 'The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.'
        type: string
      disableAutoSize:
        description: 'When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.'
        type: string
      documentId:
        description: Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      font:
        description: 'The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.'
        type: string
      fontColor:
        description: |-
          The font color used for the information in the tab.

          Possible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
        type: string
      fontSize:
        description: |-
          The font size used for the information in the tab.

          Possible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
        type: string
      italic:
        description: 'When set to **true**, the information in the tab is italic.'
        type: string
      locked:
        description: 'When set to **true**, the signer cannot change the data of the custom tab.'
        type: string
      maxLength:
        description: An optional value that describes the maximum length of the property when the property is a string.
        type: integer
      mergeField:
        $ref: '#/definitions/mergeField'
        description: ''
      name:
        description: Specifies the tool tip text for the tab.
        type: string
      originalValue:
        description: 'The initial value of the tab when it was sent to the recipient. '
        type: string
      pageNumber:
        description: |
          Specifies the page number on which the tab is located.
          Must be 1 for [supplemental documents][supdocs].

          [supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents
        type: string
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      requireAll:
        description: 'When set to **true** and shared is true, information must be entered in this field to complete the envelope. '
        type: string
      requireInitialOnSharedChange:
        description: 'Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.'
        type: string
      required:
        description: 'When set to **true**, the signer is required to fill out this tab'
        type: string
      senderRequired:
        description: |-
          When set to **true**, the sender must populate the tab before an envelope can be sent using the template. 

          This value tab can only be changed by modifying (PUT) the template. 

          Tabs with a `senderRequired` value of true cannot be deleted from an envelope.
        type: string
      shared:
        description: 'When set to **true**, this custom tab is shared.'
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      tabId:
        description: |
          The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. 

           
        type: string
      tabLabel:
        description: |
          The label string associated with the tab.
          The string may be the empty string.
          If no value is provided, the tab type is used as the value.

          Maximum of 500 characters.
        type: string
      tabOrder:
        description: ''
        type: string
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      underline:
        description: 'When set to **true**, the information in the tab is underlined.'
        type: string
      validationMessage:
        description: The message displayed if the custom tab fails input validation (either custom of embedded).
        type: string
      validationPattern:
        description: A regular expressionn used to validate input for the tab.
        type: string
      value:
        description: 'Specifies the value of the tab. '
        type: string
      width:
        description: Width of the tab in pixels.
        type: integer
      xPosition:
        description: |
          This indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. May be zero.
        type: string
      yPosition:
        description: This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
        type: string
    type: object
    x-ds-definition-name: ssn
    x-ms-summary: ''
  ssn4InformationInput:
    description: ''
    properties:
      displayLevelCode:
        description: |-
          Specifies the display level for the recipient. 
          Valid values are: 

          * ReadOnly
          * Editable
          * DoNotDisplay
        type: string
      receiveInResponse:
        description: 'When set to **true**, the information needs to be returned in the response.'
        type: string
      ssn4:
        description: The last four digits of the recipient's Social Security Number (SSN).
        type: string
    type: object
    x-ds-definition-name: ssn4InformationInput
    x-ms-summary: ''
  ssn9InformationInput:
    description: ''
    properties:
      displayLevelCode:
        description: |-
          Specifies the display level for the recipient. 
          Valid values are: 

          * ReadOnly
          * Editable
          * DoNotDisplay
        type: string
      ssn9:
        description: ' The recipient''s Social Security Number(SSN).'
        type: string
    type: object
    x-ds-definition-name: ssn9InformationInput
    x-ms-summary: ''
  supportedLanguages:
    description: ''
    properties:
      languages:
        description: ''
        items:
          $ref: '#/definitions/nameValue'
        type: array
    type: object
    x-ds-definition-name: supportedLanguages
    x-ms-summary: ''
  tabMetadataList:
    description: ''
    properties:
      tabs:
        description: ''
        items:
          $ref: '#/definitions/CustomTabs'
        type: array
    type: object
    x-ds-definition-name: tabMetadataList
    x-ms-summary: ''
  templateCustomFields:
    description: ''
    properties:
      listCustomFields:
        description: An array of list custom fields.
        items:
          $ref: '#/definitions/listCustomField'
        type: array
      textCustomFields:
        description: An array of text custom fields.
        items:
          $ref: '#/definitions/textCustomField'
        type: array
    type: object
    x-ds-definition-name: templateCustomFields
    x-ms-summary: ''
  templateMatch:
    description: ''
    properties:
      documentEndPage:
        description: ''
        type: string
      documentStartPage:
        description: ''
        type: string
      matchPercentage:
        description: ''
        type: string
    type: object
    x-ds-definition-name: templateMatch
    x-ms-summary: ''
  templateNotificationRequest:
    description: ''
    properties:
      expirations:
        $ref: '#/definitions/expirations'
        description: A complex element that specifies the expiration settings for the envelope.
      password:
        description: ''
        type: string
      reminders:
        $ref: '#/definitions/reminders'
        description: A complex element that specifies reminder settings for the envelope
      useAccountDefaults:
        description: 'When set to **true**, the account default notification settings are used for the envelope.'
        type: string
    type: object
    x-ds-definition-name: templateNotificationRequest
    x-ms-summary: ''
  templateRecipients:
    description: ''
    properties:
      agents:
        description: A complex type defining the management and access rights of a recipient assigned assigned as an agent on the document.
        items:
          $ref: '#/definitions/agent'
        type: array
      carbonCopies:
        description: 'A complex type containing information about recipients who should receive a copy of the envelope, but does not need to sign it.'
        items:
          $ref: '#/definitions/carbonCopy'
        type: array
      certifiedDeliveries:
        description: 'A complex type containing information on a recipient the must receive the completed documents for the envelope to be completed, but the recipient does not need to sign, initial, date, or add information to any of the documents.'
        items:
          $ref: '#/definitions/certifiedDelivery'
        type: array
      currentRoutingOrder:
        description: ''
        type: string
      editors:
        description: ''
        items:
          $ref: '#/definitions/editor'
        type: array
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      inPersonSigners:
        description: Specifies a signer that is in the same physical location as a DocuSign user who will act as a Signing Host for the transaction. The recipient added is the Signing Host and new separate Signer Name field appears after Sign in person is selected.
        items:
          $ref: '#/definitions/inPersonSigner'
        type: array
      intermediaries:
        description: 'Identifies a recipient that can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order (until subsequent Agents, Editors or Intermediaries recipient types are added).'
        items:
          $ref: '#/definitions/intermediary'
        type: array
      recipientCount:
        description: |-
          The list of recipient event statuses that will trigger Connect to send updates to the url. It can be a two-part list with:

          * recipientEventStatusCode - The recipient status, this can be Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded.
          * includeDocuments - When set to **true**, the envelope time zone information is included in the message.
        type: string
      signers:
        description: A complex type containing information about the Signer recipient.
        items:
          $ref: '#/definitions/signer'
        type: array
    type: object
    x-ds-definition-name: templateRecipients
    x-ms-summary: ''
  templateRole:
    description: ''
    properties:
      accessCode:
        description: |-
          If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. 

          Maximum Length: 50 characters and it must conform to the account's access code format setting.

          If blank, but the signer `accessCode` property is set in the envelope, then that value is used.

          If blank and the signer `accessCode` property is not set, then the access code is not required.
        type: string
      clientUserId:
        description: |-
          Specifies whether the recipient is embedded or remote. 

          If the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.

          Note: if the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true**, an error is generated on sending. 

          Maximum length: 100 characters. 
        type: string
      defaultRecipient:
        description: 'When set to **true**, this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.'
        type: string
      email:
        description: Specifies the email associated with a role name.
        type: string
      emailNotification:
        $ref: '#/definitions/recipientEmailNotification'
        description: |-
          An optional complex type that sets a specific email subject and body for this recipient's notification email. 

          **Note**: If you use this field to set a specific email notification for one recipient, you must also set the email notification for the other recipients. Using this field for one or more recipients negates the Envelope `Subject` and `EmailBlurb` property settings. 
      embeddedRecipientStartURL:
        description: |-
          Specifies a sender provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. 

          If set to `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation that is launched by any partner.

          It is important to remember that in a typical embedded workflow the authentication of an embedded recipient is the responsibility of the sending application, DocuSign expects that senders will follow their own process for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process in initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.

          If the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: envelopeId, recipientId, recipientName, recipientEmail, and customFields. The `customFields` property must be set fort the recipient or envelope. The merge fields are enclosed in double brackets. 

          *Example*: 

          `http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` 
        type: string
      inPersonSignerName:
        description: |-
          Specifies the full legal name of the signer in person signer template roles.

          Maximum Length: 100 characters.
        type: string
      name:
        description: Specifies the recipient's name.
        type: string
      recipientSignatureProviders:
        description: 'The default signature provider is the DocuSign Electronic signature system. This parameter is used to specify one or more Standards Based Signature (digital signature) providers for the signer to use. [More information](../../../../guide/appendix/standards_based_signatures.html)'
        items:
          $ref: '#/definitions/recipientSignatureProvider'
        type: array
      roleName:
        description: Optional element. Specifies the role name associated with the recipient.<br/><br/>This is required when working with template recipients.
        type: string
      routingOrder:
        description: 'Specifies the routing order of the recipient in the envelope. '
        type: string
      signingGroupId:
        description: 'When set to **true** and the feature is enabled in the sender''s account, the signing recipient is required to draw signatures and initials at each signature/initial tab ( instead of adopting a signature/initial style or only drawing a signature/initial once).'
        type: string
      tabs:
        $ref: '#/definitions/EnvelopeRecipientTabs'
        description: ''
    type: object
    x-ds-definition-name: templateRole
    x-ms-summary: ''
  templateSharedItem:
    description: ''
    properties:
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      owner:
        $ref: '#/definitions/userInfo'
        description: ''
      shared:
        description: 'When set to **true**, this custom tab is shared.'
        type: string
      sharedGroups:
        description: ''
        items:
          $ref: '#/definitions/memberGroupSharedItem'
        type: array
      sharedUsers:
        description: ''
        items:
          $ref: '#/definitions/userSharedItem'
        type: array
      templateId:
        description: 'The unique identifier of the template. If this is not provided, DocuSign will generate a value. '
        type: string
      templateName:
        description: ''
        type: string
    type: object
    x-ds-definition-name: templateSharedItem
    x-ms-summary: ''
  templateSummary:
    description: ''
    properties:
      applied:
        description: 'Reserved: TBD'
        type: string
      documentId:
        description: Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
        type: string
      documentName:
        description: ''
        type: string
      name:
        description: ''
        type: string
      templateId:
        description: 'The unique identifier of the template. If this is not provided, DocuSign will generate a value. '
        type: string
      templateMatch:
        $ref: '#/definitions/templateMatch'
        description: ''
      uri:
        description: ''
        type: string
    type: object
    x-ds-definition-name: templateSummary
    x-ms-summary: ''
  templateTabs:
    description: ''
    properties:
      approveTabs:
        description: |
          A tab that allows the recipient to approve documents
          without placing a signature or initials on the
          document. If the recipient clicks the Approve tab during the signing
          process, the recipient is considered to have signed the document. No
          information is shown on the document for the approval, but it is
          recorded as a signature in the envelope history.
        items:
          $ref: '#/definitions/approve'
        type: array
      checkboxTabs:
        description: Specifies a tag on the document in a location where the recipient can select an option.
        items:
          $ref: '#/definitions/checkbox'
        type: array
      companyTabs:
        description: |-
          Specifies a tag on the document where you want the recipient's company name to appear.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
        items:
          $ref: '#/definitions/company'
        type: array
      dateSignedTabs:
        description: Specifies a tab on the document where the date the document was signed will automatically appear.
        items:
          $ref: '#/definitions/dateSigned'
        type: array
      dateTabs:
        description: |-
          Specifies a tab on the document where you want the recipient to enter a date. Date tabs are single-line fields that allow date information to be entered in any format. The tooltip for this tab recommends entering the date as MM/DD/YYYY, but this is not enforced. The format entered by the signer is retained. 

          If you need a particular date format enforced, DocuSign recommends using a Text tab with a Validation Pattern and Validation Message to enforce the format.
        items:
          $ref: '#/definitions/date'
        type: array
      declineTabs:
        description: 'Specifies a tag on the document where you want to give the recipient the option of declining an envelope. If the recipient clicks the Decline tag during the signing process, the envelope is voided.'
        items:
          $ref: '#/definitions/decline'
        type: array
      emailAddressTabs:
        description: 'Specifies a location on the document where you want where you want the recipient''s email, as entered in the recipient information, to display.'
        items:
          $ref: '#/definitions/emailAddress'
        type: array
      emailTabs:
        description: |-
          Specifies a tag on the document where you want the recipient to enter an email. Email tags are single-line fields that accept any characters. The system checks that a valid email format (i.e. xxx@yyy.zzz) is entered in the tag. It uses the same parameters as a Text tab, with the validation message and pattern set for email information.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
        items:
          $ref: '#/definitions/email'
        type: array
      envelopeIdTabs:
        description: 'Specifies a tag on the document where you want the envelope ID for to appear. Recipients cannot enter or change the information in this tab, it is for informational purposes only.'
        items:
          $ref: '#/definitions/envelopeId'
        type: array
      firstNameTabs:
        description: 'Specifies tag on a document where you want the recipient''s first name to appear. This tag takes the recipient''s name, as entered in the recipient information, splits it into sections based on spaces and uses the first section as the first name.'
        items:
          $ref: '#/definitions/firstName'
        type: array
      formulaTabs:
        description: |
          A list of formula tabs.

          The value of a formula tab is calculated
          from the values of other
          number or date tabs in the document.
          When the recipient completes the underlying fields,
          the formula tab calculates and displays the result.

          The `formula` property of the tab
          contains the references
          to the underlying tabs.
          See [Calculated Fields][calculatedfields]
          in the DocuSign Support Center
          to learn more about formulas.

          If a formula tab contains
          a `paymentDetails` property,
          the tab is considered a payment item.
          See [Requesting Payments Along with Signatures][paymentguide]
          in the DocuSign Support Center
          to learn more about payments.

          [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields
          [paymentguide]:     https://support.docusign.com/en/guides/requesting-payments-along-with-signatures
        items:
          $ref: '#/definitions/formulaTab'
        type: array
      fullNameTabs:
        description: Specifies a tag on the document where you want the recipient's name to appear.
        items:
          $ref: '#/definitions/fullName'
        type: array
      initialHereTabs:
        description: Specifies a tag location in the document at which a recipient will place their initials. The `optional` parameter specifies whether the initials are required or optional.
        items:
          $ref: '#/definitions/initialHere'
        type: array
      lastNameTabs:
        description: 'Specifies a tag on a document where you want the recipient''s last name to appear. This tag takes the recipient''s name, as entered in the recipient information, splits it into sections based on spaces and uses the last section as the last name.'
        items:
          $ref: '#/definitions/lastName'
        type: array
      listTabs:
        description: 'Specify this tag to give your recipient a list of options, presented as a drop-down list, from which they can select.'
        items:
          $ref: '#/definitions/list'
        type: array
      noteTabs:
        description: 'Specifies a location on the document where you want to place additional information, in the form of a note, for a recipient.'
        items:
          $ref: '#/definitions/note'
        type: array
      numberTabs:
        description: |-
          Specifies a tag on the document where you want the recipient to enter a number. It uses the same parameters as a Text tab, with the validation message and pattern set for number information.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response. 
        items:
          $ref: '#/definitions/number'
        type: array
      radioGroupTabs:
        description: Specifies a tag on the document in a location where the recipient can select one option from a group of options using a radio button. The radio buttons do not have to be on the same page in a document.
        items:
          $ref: '#/definitions/radioGroup'
        type: array
      signHereTabs:
        description: |
          A complex type the contains information about the tag that specifies where the recipient places their signature in the document. The "optional" parameter sets if the signature is required or optional.
        items:
          $ref: '#/definitions/signHere'
        type: array
      signerAttachmentTabs:
        description: Specifies a tag on the document when you want the recipient to add supporting documents to an envelope.
        items:
          $ref: '#/definitions/signerAttachment'
        type: array
      ssnTabs:
        description: |-
          Specifies a tag on the document where you want the recipient to enter a Social Security Number (SSN). A SSN can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
        items:
          $ref: '#/definitions/ssn'
        type: array
      textTabs:
        description: |-
          Specifies a that that is an adaptable field that allows the recipient to enter different text information.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
        items:
          $ref: '#/definitions/text'
        type: array
      titleTabs:
        description: |-
          Specifies a tag on the document where you want the recipient's title to appear.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
        items:
          $ref: '#/definitions/title'
        type: array
      viewTabs:
        description: ''
        items:
          $ref: '#/definitions/view'
        type: array
      zipTabs:
        description: |-
          Specifies a tag on the document where you want the recipient to enter a ZIP code. The ZIP code can be a five numbers or the ZIP+4 format with nine numbers. The zip code can be typed with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.

          When getting information that includes this tab type, the original value of the tab when the associated envelope was sent is included in the response.
        items:
          $ref: '#/definitions/zip'
        type: array
    type: object
    x-ds-definition-name: templateTabs
    x-ms-summary: ''
  templateUpdateSummary:
    description: ''
    properties:
      bulkEnvelopeStatus:
        $ref: '#/definitions/bulkEnvelopeStatus'
        description: ''
      envelopeId:
        description: The envelope ID of the envelope status that failed to post.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      listCustomFieldUpdateResults:
        description: ''
        items:
          $ref: '#/definitions/listCustomField'
        type: array
      lockInformation:
        $ref: '#/definitions/EnvelopeLocks'
        description: ''
      recipientUpdateResults:
        description: ''
        items:
          $ref: '#/definitions/recipientUpdateResponse'
        type: array
      tabUpdateResults:
        $ref: '#/definitions/EnvelopeRecipientTabs'
        description: ''
      textCustomFieldUpdateResults:
        description: ''
        items:
          $ref: '#/definitions/textCustomField'
        type: array
    type: object
    x-ds-definition-name: templateUpdateSummary
    x-ms-summary: ''
  text:
    description: ''
    properties:
      anchorCaseSensitive:
        description: |-
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
          -->
        type: string
      anchorHorizontalAlignment:
        description: |
          Reserved for DocuSign.
          <!--
          Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
          -->
        type: string
      anchorIgnoreIfNotPresent:
        description: 'When set to **true**, this tab is ignored if anchorString is not found in the document.'
        type: string
      anchorMatchWholeWord:
        description: |
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
          -->
        type: string
      anchorString:
        description: Anchor text information for a radio button.
        type: string
      anchorUnits:
        description: 'Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.'
        type: string
      anchorXOffset:
        description: 'Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      anchorYOffset:
        description: 'Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      bold:
        description: 'When set to **true**, the information in the tab is bold.'
        type: string
      concealValueOnDocument:
        description: |-
          When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

          When an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.

          This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        type: string
      conditionalParentLabel:
        description: For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
        type: string
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      customTabId:
        description: 'The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.'
        type: string
      disableAutoSize:
        description: 'When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.'
        type: string
      documentId:
        description: Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      font:
        description: 'The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.'
        type: string
      fontColor:
        description: |-
          The font color used for the information in the tab.

          Possible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
        type: string
      fontSize:
        description: |-
          The font size used for the information in the tab.

          Possible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
        type: string
      formula:
        description: |
          Contains the formula
          for calculating the value of
          this tab.

          Use a tab's `tabLabel`,
          enclosed in brackets,
          to refer to it.

          For example,
          you want to present the total cost
          of two items, tax included.

          The cost of each item is stored
          in number tabs labeled Item1 and Item2.
          The tax rate is in a number tab
          labeled TaxRate.

          The formula string for this property
          would be:
          `([Item1] + [Item2]) * (1 + [TaxRate])`

          See [Calculated Fields][calculatedfields]
          in the DocuSign Support Center
          to learn more about formulas.

          Maximum Length: 2000 characters

          [calculatedfields]: https://support.docusign.com/en/guides/ndse-user-guide-calculated-fields
        type: string
      height:
        description: Height of the tab in pixels.
        type: integer
      isPaymentAmount:
        description: 'When set to **true**, sets this as a payment tab. Can only be used with Text, Number, Formula, or List tabs. The value of the tab must be a number. '
        type: string
      italic:
        description: 'When set to **true**, the information in the tab is italic.'
        type: string
      locked:
        description: 'When set to **true**, the signer cannot change the data of the custom tab.'
        type: string
      maxLength:
        description: An optional value that describes the maximum length of the property when the property is a string.
        type: integer
      mergeField:
        $ref: '#/definitions/mergeField'
        description: ''
      name:
        description: Specifies the tool tip text for the tab.
        type: string
      originalValue:
        description: 'The initial value of the tab when it was sent to the recipient. '
        type: string
      pageNumber:
        description: |
          Specifies the page number on which the tab is located.
          Must be 1 for [supplemental documents][supdocs].

          [supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents
        type: string
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      requireAll:
        description: 'When set to **true** and shared is true, information must be entered in this field to complete the envelope. '
        type: string
      requireInitialOnSharedChange:
        description: 'Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.'
        type: string
      required:
        description: 'When set to **true**, the signer is required to fill out this tab'
        type: string
      senderRequired:
        description: |-
          When set to **true**, the sender must populate the tab before an envelope can be sent using the template. 

          This value tab can only be changed by modifying (PUT) the template. 

          Tabs with a `senderRequired` value of true cannot be deleted from an envelope.
        type: string
      shared:
        description: 'When set to **true**, this custom tab is shared.'
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      tabId:
        description: |
          The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. 

           
        type: string
      tabLabel:
        description: |
          The label string associated with the tab.
          The string may be the empty string.
          If no value is provided, the tab type is used as the value.

          Maximum of 500 characters.
        type: string
      tabOrder:
        description: ''
        type: string
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      underline:
        description: 'When set to **true**, the information in the tab is underlined.'
        type: string
      validationMessage:
        description: The message displayed if the custom tab fails input validation (either custom of embedded).
        type: string
      validationPattern:
        description: A regular expressionn used to validate input for the tab.
        type: string
      value:
        description: 'Specifies the value of the tab. '
        type: string
      width:
        description: Width of the tab in pixels.
        type: integer
      xPosition:
        description: |
          This indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. May be zero.
        type: string
      yPosition:
        description: This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
        type: string
    type: object
    x-ds-definition-name: text
    x-ms-summary: ''
  textCustomField:
    description: ''
    properties:
      configurationType:
        description: 'If merge field''s are being used, specifies the type of the merge field. The only  supported value is **salesforce**.'
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      fieldId:
        description: An ID used to specify a custom field.
        type: string
      name:
        description: The name of the custom field.
        type: string
      required:
        description: 'When set to **true**, the signer is required to fill out this tab'
        type: string
      show:
        description: A boolean indicating if the value should be displayed.
        type: string
      value:
        description: The value of the custom field.
        type: string
    type: object
    x-ds-definition-name: textCustomField
    x-ms-summary: ''
  title:
    description: ''
    properties:
      anchorCaseSensitive:
        description: |-
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
          -->
        type: string
      anchorHorizontalAlignment:
        description: |
          Reserved for DocuSign.
          <!--
          Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
          -->
        type: string
      anchorIgnoreIfNotPresent:
        description: 'When set to **true**, this tab is ignored if anchorString is not found in the document.'
        type: string
      anchorMatchWholeWord:
        description: |
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
          -->
        type: string
      anchorString:
        description: Anchor text information for a radio button.
        type: string
      anchorUnits:
        description: 'Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.'
        type: string
      anchorXOffset:
        description: 'Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      anchorYOffset:
        description: 'Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      bold:
        description: 'When set to **true**, the information in the tab is bold.'
        type: string
      concealValueOnDocument:
        description: |-
          When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

          When an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.

          This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        type: string
      conditionalParentLabel:
        description: For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
        type: string
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      customTabId:
        description: 'The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.'
        type: string
      disableAutoSize:
        description: 'When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.'
        type: string
      documentId:
        description: Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      font:
        description: 'The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.'
        type: string
      fontColor:
        description: |-
          The font color used for the information in the tab.

          Possible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
        type: string
      fontSize:
        description: |-
          The font size used for the information in the tab.

          Possible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
        type: string
      italic:
        description: 'When set to **true**, the information in the tab is italic.'
        type: string
      locked:
        description: 'When set to **true**, the signer cannot change the data of the custom tab.'
        type: string
      maxLength:
        description: An optional value that describes the maximum length of the property when the property is a string.
        type: integer
      mergeField:
        $ref: '#/definitions/mergeField'
        description: ''
      name:
        description: ''
        type: string
      originalValue:
        description: 'The initial value of the tab when it was sent to the recipient. '
        type: string
      pageNumber:
        description: |
          Specifies the page number on which the tab is located.
          Must be 1 for [supplemental documents][supdocs].

          [supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents
        type: string
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      required:
        description: 'When set to **true**, the signer is required to fill out this tab'
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      tabId:
        description: |
          The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. 

           
        type: string
      tabLabel:
        description: |
          The label string associated with the tab.
          The string may be the empty string.
          If no value is provided, the tab type is used as the value.

          Maximum of 500 characters.
        type: string
      tabOrder:
        description: ''
        type: string
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      underline:
        description: 'When set to **true**, the information in the tab is underlined.'
        type: string
      value:
        description: 'Specifies the value of the tab. '
        type: string
      width:
        description: Width of the tab in pixels.
        type: integer
      xPosition:
        description: |
          This indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. May be zero.
        type: string
      yPosition:
        description: This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
        type: string
    type: object
    x-ds-definition-name: title
    x-ms-summary: ''
  usageHistory:
    description: |-
      A complex element consisting of: 

      * lastSentDateTime - the date and time the user last sent an envelope. 
      * lastSignedDateTime - the date and time the user last signed an envelope.
      * sentCount - the number of envelopes the user has sent.
      * signedCount - the number of envelopes the user has signed.
    properties:
      lastSentDateTime:
        description: 'The date and time the user last sent an envelope. '
        type: string
      lastSignedDateTime:
        description: The date and time the user last signed an envelope.
        type: string
      sentCount:
        description: 'The number of envelopes the user has sent. '
        type: integer
      signedCount:
        description: 'The number of envelopes the user has signed. '
        type: integer
    type: object
    x-ds-definition-name: usageHistory
    x-ms-summary: |-
      A complex element consisting of: 

      * lastSentDateTime - the date and time the user last sent an envelope. 
      * lastSignedDateTime - the date and time the user last signed an envelope.
      * sentCount - the number of envelopes the user has sent.
      * signedCount - the number of envelopes the user has signed.
  userAccountManagementGranularInformation:
    description: ''
    properties:
      canManageAdmins:
        description: ''
        type: string
      canManageAdminsMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      canManageGroups:
        description: ''
        type: string
      canManageGroupsMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      canManageSharing:
        description: ''
        type: string
      canManageSharingMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
      canManageUsers:
        description: ''
        type: string
      canManageUsersMetadata:
        $ref: '#/definitions/settingsMetadata'
        description: ''
    type: object
    x-ds-definition-name: userAccountManagementGranularInformation
    x-ms-summary: ''
  userInfo:
    description: ''
    properties:
      activationAccessCode:
        description: ''
        type: string
      email:
        description: ''
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      loginStatus:
        description: ''
        type: string
      sendActivationEmail:
        description: ''
        type: string
      uri:
        description: ''
        type: string
      userId:
        description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
        type: string
      userName:
        description: ''
        type: string
      userStatus:
        description: ''
        type: string
      userType:
        description: ''
        type: string
    type: object
    x-ds-definition-name: userInfo
    x-ms-summary: ''
  userInfoList:
    description: ''
    properties:
      users:
        description: ''
        items:
          $ref: '#/definitions/userInfo'
        type: array
    type: object
    x-ds-definition-name: userInfoList
    x-ms-summary: ''
  userInformationList:
    description: ''
    properties:
      endPosition:
        description: 'The last position in the result set. '
        type: string
      nextUri:
        description: 'The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. '
        type: string
      previousUri:
        description: 'The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. '
        type: string
      resultSetSize:
        description: 'The number of results returned in this response. '
        type: string
      startPosition:
        description: Starting position of the current result set.
        type: string
      totalSetSize:
        description: The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.
        type: string
      users:
        description: ''
        items:
          $ref: '#/definitions/Users'
        type: array
    type: object
    x-ds-definition-name: userInformationList
    x-ms-summary: ''
  userPasswordInformation:
    description: ''
    properties:
      currentPassword:
        description: The user's current password to be changed.
        type: string
      email:
        description: The user's email address for the associated account.
        type: string
      forgottenPasswordInfo:
        $ref: '#/definitions/forgottenPasswordInformation'
        description: A complex element that has up to four Question/Answer pairs for forgotten password information.
      newPassword:
        description: The user's new password.
        type: string
    type: object
    x-ds-definition-name: userPasswordInformation
    x-ms-summary: ''
  userPasswordRules:
    description: ''
    properties:
      passwordRules:
        $ref: '#/definitions/AccountPasswordRules'
        description: ''
      userId:
        description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
        type: string
    type: object
    x-ds-definition-name: userPasswordRules
    x-ms-summary: ''
  userSettingsInformation:
    description: ''
    properties:
      accountManagementGranular:
        $ref: '#/definitions/userAccountManagementGranularInformation'
        description: ''
      senderEmailNotifications:
        $ref: '#/definitions/senderEmailNotifications'
        description: |2-
           
          An array of email notifications that sets the email the user receives when they are a sender. When the specific email notification is set to true, the user will receive those types of email notifications from DocuSign. 

          The user inherits the default account sender email notification settings when the user is created. The email notifications are:

          * envelopeComplete
          * changedSigner 
          * senderEnvelopeDeclined 
          * withdrawnConsent 
          * recipientViewed 
          * deliveryFailed 
           
      signerEmailNotifications:
        $ref: '#/definitions/signerEmailNotifications'
        description: 'An array of email notifications that specifies the email the user receives when they are a sender. When the specific email notification is set to true, the user receives those types of email notifications from DocuSign. The user inherits the default account sender email notification settings when the user is created.'
      userSettings:
        description: ''
        items:
          $ref: '#/definitions/nameValue'
        type: array
    type: object
    x-ds-definition-name: userSettingsInformation
    x-ms-summary: ''
  userSharedItem:
    description: ''
    properties:
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      shared:
        description: 'When set to **true**, this custom tab is shared.'
        type: string
      user:
        $ref: '#/definitions/userInfo'
        description: ''
    type: object
    x-ds-definition-name: userSharedItem
    x-ms-summary: ''
  userSignatureDefinition:
    description: ''
    properties:
      signatureFont:
        description: ''
        type: string
      signatureId:
        description: 'Specifies the signature ID associated with the signature name. You can use the signature ID in the URI in place of the signature name, and the value stored in the `signatureName` property in the body is used. This allows the use of special characters (such as "&", "<", ">") in a the signature name. Note that with each update to signatures, the returned signature ID might change, so the caller will need to trigger off the signature name to get the new signature ID.'
        type: string
      signatureInitials:
        description: ''
        type: string
      signatureName:
        description: Specifies the user signature name.
        type: string
    type: object
    x-ds-definition-name: userSignatureDefinition
    x-ms-summary: ''
  userSignaturesInformation:
    description: ''
    properties:
      userSignatures:
        description: ''
        items:
          $ref: '#/definitions/UserSignatures'
        type: array
    type: object
    x-ds-definition-name: userSignaturesInformation
    x-ms-summary: ''
  userSocialIdResult:
    description: ''
    properties:
      socialAccountInformation:
        description: 'Contains properties that map a DocuSign user to a social account (Facebook, Yahoo, etc.)'
        items:
          $ref: '#/definitions/UserSocialAccountLogins'
        type: array
      userId:
        description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
        type: string
    type: object
    x-ds-definition-name: userSocialIdResult
    x-ms-summary: ''
  view:
    description: ''
    properties:
      anchorCaseSensitive:
        description: |-
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
          -->
        type: string
      anchorHorizontalAlignment:
        description: |
          Reserved for DocuSign.
          <!--
          Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
          -->
        type: string
      anchorIgnoreIfNotPresent:
        description: 'When set to **true**, this tab is ignored if anchorString is not found in the document.'
        type: string
      anchorMatchWholeWord:
        description: |
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
          -->
        type: string
      anchorString:
        description: Anchor text information for a radio button.
        type: string
      anchorUnits:
        description: 'Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.'
        type: string
      anchorXOffset:
        description: 'Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      anchorYOffset:
        description: 'Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      bold:
        description: 'When set to **true**, the information in the tab is bold.'
        type: string
      buttonText:
        description: ''
        type: string
      conditionalParentLabel:
        description: For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
        type: string
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      customTabId:
        description: 'The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.'
        type: string
      documentId:
        description: Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      font:
        description: 'The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.'
        type: string
      fontColor:
        description: |-
          The font color used for the information in the tab.

          Possible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
        type: string
      fontSize:
        description: |-
          The font size used for the information in the tab.

          Possible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
        type: string
      height:
        description: Height of the tab in pixels.
        type: integer
      italic:
        description: 'When set to **true**, the information in the tab is italic.'
        type: string
      mergeField:
        $ref: '#/definitions/mergeField'
        description: ''
      pageNumber:
        description: |
          Specifies the page number on which the tab is located.
          Must be 1 for [supplemental documents][supdocs].

          [supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents
        type: string
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      required:
        description: 'When set to **true**, the signer is required to fill out this tab'
        type: string
      requiredRead:
        description: ''
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      tabId:
        description: |
          The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. 

           
        type: string
      tabLabel:
        description: |
          The label string associated with the tab.
          The string may be the empty string.
          If no value is provided, the tab type is used as the value.

          Maximum of 500 characters.
        type: string
      tabOrder:
        description: ''
        type: string
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      underline:
        description: 'When set to **true**, the information in the tab is underlined.'
        type: string
      width:
        description: Width of the tab in pixels.
        type: integer
      xPosition:
        description: |
          This indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. May be zero.
        type: string
      yPosition:
        description: This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
        type: string
    type: object
    x-ds-definition-name: view
    x-ms-summary: ''
  viewLinkRequest:
    description: ''
    properties:
      email:
        description: ''
        type: string
      returnUrl:
        description: ''
        type: string
    type: object
    x-ds-definition-name: viewLinkRequest
    x-ms-summary: ''
  workspaceFolderContents:
    description: Provides properties that describe the contents of a workspace folder.
    properties:
      endPosition:
        description: 'The last position in the result set. '
        type: string
      folder:
        $ref: '#/definitions/WorkspaceItems'
        description: The query value can be a folder name or folder ID. The response will only return templates in the specified folder.
      items:
        description: ''
        items:
          $ref: '#/definitions/WorkspaceItems'
        type: array
      parentFolders:
        description: ''
        items:
          $ref: '#/definitions/WorkspaceItems'
        type: array
      resultSetSize:
        description: 'The number of results returned in this response. '
        type: string
      startPosition:
        description: Starting position of the current result set.
        type: string
      totalSetSize:
        description: The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.
        type: string
      workspaceId:
        description: 'The id of the workspace, always populated.'
        type: string
    type: object
    x-ds-definition-name: workspaceFolderContents
    x-ms-summary: Provides properties that describe the contents of a workspace folder.
  workspaceItemList:
    description: Provides properties that describe the items contained in a workspace.
    properties:
      items:
        description: ''
        items:
          $ref: '#/definitions/WorkspaceItems'
        type: array
    type: object
    x-ds-definition-name: workspaceItemList
    x-ms-summary: Provides properties that describe the items contained in a workspace.
  workspaceList:
    description: Provides properties that describe the workspaces avaialble.
    properties:
      endPosition:
        description: 'The last position in the result set. '
        type: string
      resultSetSize:
        description: 'The number of results returned in this response. '
        type: string
      startPosition:
        description: Starting position of the current result set.
        type: string
      totalSetSize:
        description: The total number of items in the search's result set. It will always be greater than or equal to the value of the `resultSetSize` field.
        type: string
      workspaces:
        description: A list of workspaces.
        items:
          $ref: '#/definitions/Workspaces'
        type: array
    type: object
    x-ds-definition-name: workspaceList
    x-ms-summary: Provides properties that describe the workspaces avaialble.
  workspaceUser:
    description: 'A workspaceUser representing the user. This property is only returned in response to user specific GET call. '
    properties:
      accountId:
        description: The account ID associated with the envelope.
        type: string
      accountName:
        description: The name of the account that the workspace user belongs to.
        type: string
      activeSince:
        description: ''
        type: string
      created:
        description: The UTC DateTime when the workspace user was created.
        type: string
      createdById:
        description: ''
        type: string
      email:
        description: ''
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      lastModified:
        description: Utc date and time the comment was last updated (can only be done by creator.)
        type: string
      lastModifiedById:
        description: ''
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      type:
        description: 'Type of the user. Valid values: type_owner, type_participant.'
        type: string
      userId:
        description: 'The user ID of the user being accessed. Generally this is the user ID of the authenticated user, but if the authenticated user is an Admin on the account, this may be another user the Admin user is accessing.'
        type: string
      userName:
        description: ''
        type: string
      workspaceId:
        description: Specifies the workspace ID GUID.
        type: string
      workspaceUserBaseUrl:
        description: The relative URI that may be used to access a workspace user.
        type: string
      workspaceUserId:
        description: ''
        type: string
    type: object
    x-ds-definition-name: workspaceUser
    x-ms-summary: 'A workspaceUser representing the user. This property is only returned in response to user specific GET call. '
  workspaceUserAuthorization:
    description: Provides properties that describe user authorization to a workspace.
    properties:
      canDelete:
        description: ''
        type: string
      canMove:
        description: ''
        type: string
      canTransact:
        description: ''
        type: string
      canView:
        description: ''
        type: string
      created:
        description: The UTC DateTime when the workspace user authorization was created.
        type: string
      createdById:
        description: ''
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      modified:
        description: ''
        type: string
      modifiedById:
        description: ''
        type: string
      workspaceUserId:
        description: ''
        type: string
      workspaceUserInformation:
        $ref: '#/definitions/workspaceUser'
        description: ''
    type: object
    x-ds-definition-name: workspaceUserAuthorization
    x-ms-summary: Provides properties that describe user authorization to a workspace.
  zip:
    description: ''
    properties:
      anchorCaseSensitive:
        description: |-
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string does not consider case when matching strings in the document. The default value is **true**.
          -->
        type: string
      anchorHorizontalAlignment:
        description: |
          Reserved for DocuSign.
          <!--
          Specifies the alignment of anchor tabs with anchor strings. Possible values are **left** or **right**. The default value is **left**.
          -->
        type: string
      anchorIgnoreIfNotPresent:
        description: 'When set to **true**, this tab is ignored if anchorString is not found in the document.'
        type: string
      anchorMatchWholeWord:
        description: |
          Reserved for DocuSign.
          <!--
          When set to **true**, the anchor string in this tab matches whole words only (strings embedded in other strings are ignored.) The default value is **true**.
          -->
        type: string
      anchorString:
        description: Anchor text information for a radio button.
        type: string
      anchorUnits:
        description: 'Specifies units of the X and Y offset. Units could be pixels, millimeters, centimeters, or inches.'
        type: string
      anchorXOffset:
        description: 'Specifies the X axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      anchorYOffset:
        description: 'Specifies the Y axis location of the tab, in achorUnits, relative to the anchorString.'
        type: string
      bold:
        description: 'When set to **true**, the information in the tab is bold.'
        type: string
      concealValueOnDocument:
        description: |-
          When set to **true**, the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.

          When an envelope is completed the information is available to the sender through the Form Data link in the DocuSign Console.

          This setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.
        type: string
      conditionalParentLabel:
        description: For conditional fields this is the TabLabel of the parent tab that controls this tab's visibility.
        type: string
      conditionalParentValue:
        description: |
          For conditional fields, this is the value of the parent tab that controls the tab's visibility.

          If the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use "on" as the value to show that the parent tab is active.
        type: string
      customTabId:
        description: 'The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.'
        type: string
      disableAutoSize:
        description: 'When set to **true**, disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.'
        type: string
      documentId:
        description: Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.
        type: string
      errorDetails:
        $ref: '#/definitions/errorDetails'
        description: ''
      font:
        description: 'The font to be used for the tab value. Supported Fonts: Arial, Arial, ArialNarrow, Calibri, CourierNew, Garamond, Georgia, Helvetica,   LucidaConsole, Tahoma, TimesNewRoman, Trebuchet, Verdana, MSGothic, MSMincho, Default.'
        type: string
      fontColor:
        description: |-
          The font color used for the information in the tab.

          Possible values are: Black, BrightBlue, BrightRed, DarkGreen, DarkRed, Gold, Green, NavyBlue, Purple, or White.
        type: string
      fontSize:
        description: |-
          The font size used for the information in the tab.

          Possible values are: Size7, Size8, Size9, Size10, Size11, Size12, Size14, Size16, Size18, Size20, Size22, Size24, Size26, Size28, Size36, Size48, or Size72.
        type: string
      italic:
        description: 'When set to **true**, the information in the tab is italic.'
        type: string
      locked:
        description: 'When set to **true**, the signer cannot change the data of the custom tab.'
        type: string
      maxLength:
        description: An optional value that describes the maximum length of the property when the property is a string.
        type: integer
      mergeField:
        $ref: '#/definitions/mergeField'
        description: ''
      name:
        description: ''
        type: string
      originalValue:
        description: 'The initial value of the tab when it was sent to the recipient. '
        type: string
      pageNumber:
        description: |
          Specifies the page number on which the tab is located.
          Must be 1 for [supplemental documents][supdocs].

          [supdocs]: /esign/guide/appendix/glossary.html#supplemental-documents
        type: string
      recipientId:
        description: Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.
        type: string
      requireAll:
        description: 'When set to **true** and shared is true, information must be entered in this field to complete the envelope. '
        type: string
      requireInitialOnSharedChange:
        description: 'Optional element for field markup. When set to **true**, the signer is required to initial when they modify a shared field.'
        type: string
      required:
        description: 'When set to **true**, the signer is required to fill out this tab'
        type: string
      senderRequired:
        description: |-
          When set to **true**, the sender must populate the tab before an envelope can be sent using the template. 

          This value tab can only be changed by modifying (PUT) the template. 

          Tabs with a `senderRequired` value of true cannot be deleted from an envelope.
        type: string
      shared:
        description: 'When set to **true**, this custom tab is shared.'
        type: string
      status:
        description: |-
          Indicates the envelope status. Valid values are:

          * sent - The envelope is sent to the recipients. 
          * created - The envelope is saved as a draft and can be modified and sent later.
        type: string
      tabId:
        description: |
          The unique identifier for the tab. The tabid can be retrieved with the [ML:GET call]. 

           
        type: string
      tabLabel:
        description: |
          The label string associated with the tab.
          The string may be the empty string.
          If no value is provided, the tab type is used as the value.

          Maximum of 500 characters.
        type: string
      tabOrder:
        description: ''
        type: string
      templateLocked:
        description: 'When set to **true**, the sender cannot change any attributes of the recipient. Used only when working with template recipients. '
        type: string
      templateRequired:
        description: 'When set to **true**, the sender may not remove the recipient. Used only when working with template recipients.'
        type: string
      underline:
        description: 'When set to **true**, the information in the tab is underlined.'
        type: string
      useDash4:
        description: ''
        type: string
      validationMessage:
        description: The message displayed if the custom tab fails input validation (either custom of embedded).
        type: string
      validationPattern:
        description: A regular expressionn used to validate input for the tab.
        type: string
      value:
        description: 'Specifies the value of the tab. '
        type: string
      width:
        description: Width of the tab in pixels.
        type: integer
      xPosition:
        description: |
          This indicates the horizontal offset of the object on the page.
          DocuSign uses 72 DPI when determining position.
          Required. May be zero.
        type: string
      yPosition:
        description: This indicates the vertical offset of the object on the page. DocuSign uses 72 DPI when determining position.
        type: string
    type: object
    x-ds-definition-name: zip
    x-ms-summary: ''
x-ds-allow-editing: true
x-ds-categories:
  - description: |-
      Use the Authentication category to manage various account login tasks including:

      * Getting login information for a user.
      * Managing linked social accounts.
      * Getting and revoking OAuth tokens.
    name: Authentication
    summary: Logging in and authentication
  - description: |+
      The DocuSign API Envelope category includes the resources and methods for sending and managing envelopes and envelope data.

      Envelopes are the key objects within the DocuSign eSignature system. As a result, they are complex data structures with few required fields. See the [API Recipes](https://www.docusign.com/developer-center/recipes) for use case examples and their solutions.

      To create and send envelopes, see the [Envelopes resource](Envelopes).

    name: Envelopes
    summary: Creating and sending envelopes
  - description: |-
      The Connect category enables your application to be called via HTTPS when an event of interest occurs.

      Use the Connect service to "end the polling madness." With Connect, there is no need for your application to poll DocuSign every 15 minutes to learn the latest about your envelopes.

      Instead, you register your interest in one or more types of envelope or recipient events. Then, when an interesting event occurs, the DocuSign platform will contact your application with the event's details and data. You can register interest in envelopes sent by particular users in your account, or for envelopes sent by any user.

      ## Incoming Connect Calls
      To use the Connect service, your application needs to provide an https url that can be called from the public internet. If your application runs on a server behind your organization's firewall, then you will need to create a "pinhole" in the firewall to allow the incoming Connect calls from DocuSign to reach your application. Other techniques for receiving the incoming calls including proxy servers and DMZ networking can also be used. 

      ## Per-envelope Connect Configuration
      Instead of registering a general Connect configuration and listener, an individual envelope can have its own Connect configuration. See the `eventNotification` field for envelopes.

      ## Categories
      Use the Connect category for:

      * Programmatically creating Connect configurations. Connect configurations can be created manually by using the DocuSign web service, or programmatically via the API. Configurations created via the API can be seen and updated from the web service.
      * Retrieving and managing the event log for your Connect configurations. 
      * Requesting that an event be re-published to the listener.
    name: Connect
    summary: Connect configuration and logging
  - description: |-
      Use the Templates category to manage your account's templates.

      You can:

      * Create, list, get, update, and delete templates.
      * Manage templates' notification and group sharing settings.
      * Fetch and rotate pages from a document used by a template.

      Templates can be created programmatically or can be created via the DocuSign web interface and then used by your application.
    name: Templates
    summary: Template creation and management
  - description: |-
      Use the SigningGroup category to manage signing groups that allow you anyone in the group to sign a document.

      The category allows you create the signing group and manage the users in the group.
    name: SigningGroups
    summary: Send a signing request to a group of potential signers
  - description: |-
      Use the Folders category to manage envelopes in your folders. 

      You can list the folder contents and move envelopes between folders.
    name: Folders
    summary: Folders for completed envelopes
  - description: Use the BulkEnvelopes category to manage the sending of envelopes to multiple recipients.
    name: BulkEnvelopes
    summary: Bulk envelopes
  - description: |
      Custom Tabs enable accounts to have one or more pre-configured (custom) tabs. Custom tabs save time when users are tagging documents since the users don't have to manually set the tabs' parameters.

      This category enables custom tabs to be managed programmatically, including creation, deletion, etc. 
    name: CustomTabs
    summary: Custom tabs
  - description: |-
      Use the Cloud Storage category to list the user's cloud storage document contents.

      It is also used to manage the user's authentication/accounts with cloud storage service providers.
    name: CloudStorage
    summary: Cloud storage providers and user management
  - description: |-
      Use the Users category to manage the users in your accounts.

      You can:

      * Set custom user settings.
      * Manage a users profile.
      * Add delete users.
      * Add and delete the intials and signature images for a user.
    name: Users
    summary: User management
  - description: |-
      Use the User Groups category to manage your permissions groups.

      You can:

      * Create and delete groups.
      * Add users to, and delete users from, your groups.
      * Manage the brand information associated with a group.
    name: UserGroups
    summary: Group users for common permissions and branding
  - description: |+
      Use the Account category for various account management tasks including:

      * Programmatically creating and deleting accounts.
      * Getting information about an account and its capabilities.
      * Branding the account with custom colors, message text, and more.
      * Account charges.

      The Account category also includes end points for 
      * Listing the recipient names associated with an email address that was used by the account. For example, a single email address is often shared by mulitple members of a family.


    name: Accounts
    summary: Account management
  - description: |-
      Use the Billing category to manage the following billing related tasks:

      * Retrieve and update billing plan information.
      * Retrieve invoices.
      * Retrieve and update payment information.
    name: Billing
    summary: Invoices
  - description: |-
      The Diagnostics category provides miscellaneous end points.

      They include:
      * Requesting and managing the API call-logging feature. (Perfect for debugging your app!)
      * Getting information on the API's resources and versions.
    name: Diagnostics
    summary: Diagnostics and request logging
  - description: The PowerForms category enables PowerForms to be created and managed.
    name: PowerForms
    summary: PowerForm creation and management
  - description: |+
      Workspaces creation and management.

    name: Workspaces
    summary: Workspace creation and management
  - description: This category includes resources for managing payment gateways. Payment information is added to envelopes via methods in the Envelopes category.
    name: Payments
    summary: Manage Payments
