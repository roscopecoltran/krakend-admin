{
	"basePath": "/Rail.svc",
	"host": "api.wmata.com",
	"info.description": "Rail line and station information, including locations, fares, times, and parking.",
	"info.title": "Rail Station Information",
	"info.version": "1.0",
	"info.x-apisguru-categories.length": 1,
	"info.x-apisguru-categories[0]": "transport",
	"info.x-logo.url": "https://api.apis.guru/v2/cache/logo/https_pbs.twimg.com_profile_images_874608810190622720_rRcPRXuu_400x400.jpg",
	"info.x-origin.length": 1,
	"info.x-origin[0].format": "swagger",
	"info.x-origin[0].url": "https://developer.wmata.com/docs/services/5476364f031f590f38092507/export?DocumentFormat=Swagger",
	"info.x-origin[0].version": "2.0",
	"info.x-preferred": true,
	"info.x-providerName": "wmata.com",
	"info.x-serviceName": "rail-station",
	"paths./Lines.get.description": "\u003ch4 class=\"text-primary\"\u003eDescription\u003c/h4\u003e\r\n\r\n\u003cp\u003eReturns information about all rail lines.\u003c/p\u003e\r\n\r\n\u003ch4 class=\"text-primary\"\u003eResponse Elements\u003c/h4\u003e\r\n\r\n\u003ctable class=\"table table-condensed table-hover\"\u003e\r\n\u003cthead\u003e\r\n\u003ctr\u003e\r\n\u003cth class=\"col-md-3\"\u003eElement\u003c/th\u003e\r\n\r\n\u003cth\u003eDescription\u003c/th\u003e\r\n\u003c/tr\u003e\r\n\u003c/thead\u003e\r\n\r\n\u003ctbody\u003e\r\n\u003ctr\u003e\r\n\u003ctd\u003eLines\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nArray containing line information (\u003ca href=\"#Line\"\u003eLine\u003c/a\u003e).\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd colspan=\"2\"\u003e\r\n\u003cdiv class=\"text-primary\" style=\"margin-top: 1em\"\u003e\r\n\u003ca id=\"Line\" name=\"Line\"\u003eLine Elements\u003c/a\u003e\r\n\u003c/div\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eDisplayName\u003c/td\u003e\r\n\r\n\u003ctd\u003eFull name of line color.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eEndStationCode\u003c/td\u003e\r\n\r\n\u003ctd\u003eEnd station code. For example, will be E10 (Greenbelt) for the\r\nGreen Line, B11 (Glenmont) for the Red Line, etc. Use this value in\r\nother rail-related APIs to retrieve data about a station.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eInternalDestination1\u003c/td\u003e\r\n\r\n\u003ctd\u003eIntermediate terminal station code. During normal service, some\r\ntrains on some lines might end their trip prior to the\r\nStartStationCode or EndStationCode. A good example is on the Red\r\nLine where some trains stop at A11 (Grosvenor) or B08 (Silver\r\nSpring). Empty string if not defined.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eInternalDestination2\u003c/td\u003e\r\n\r\n\u003ctd\u003eSimilar to InternalDestination1.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLineCode\u003c/td\u003e\r\n\r\n\u003ctd\u003eTwo-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,\r\nor SV).\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eStartStationCode\u003c/td\u003e\r\n\r\n\u003ctd\u003eStart station code. For example, will be F11 (Branch Avenue)\r\nfor the Green Line, A15 (Shady Grove) for the Red Line, etc. Use\r\nthis value in other rail-related APIs to retrieve data about a\r\nstation.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\u003c/tbody\u003e\r\n\u003c/table\u003e",
	"paths./Lines.get.operationId": "XML - Lines",
	"paths./Lines.get.produces.length": 1,
	"paths./Lines.get.produces[0]": "application/xml",
	"paths./Lines.get.responses.200.description": "Default response code.",
	"paths./Lines.get.responses.200.examples.application/xml": "\u003cLinesResp xmlns=\"http://www.wmata.com\" xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\"\u003e\n    \u003cLines\u003e\n        \u003cLine\u003e\n            \u003cDisplayName\u003eGreen\u003c/DisplayName\u003e\n            \u003cEndStationCode\u003eE10\u003c/EndStationCode\u003e\n            \u003cInternalDestination1/\u003e\n            \u003cInternalDestination2/\u003e\n            \u003cLineCode\u003eGR\u003c/LineCode\u003e\n            \u003cStartStationCode\u003eF11\u003c/StartStationCode\u003e\n        \u003c/Line\u003e\n        \u003cLine\u003e\n            \u003cDisplayName\u003eBlue\u003c/DisplayName\u003e\n            \u003cEndStationCode\u003eG05\u003c/EndStationCode\u003e\n            \u003cInternalDestination1/\u003e\n            \u003cInternalDestination2/\u003e\n            \u003cLineCode\u003eBL\u003c/LineCode\u003e\n            \u003cStartStationCode\u003eJ03\u003c/StartStationCode\u003e\n        \u003c/Line\u003e\n        \u003cLine\u003e\n            \u003cDisplayName\u003eSilver\u003c/DisplayName\u003e\n            \u003cEndStationCode\u003eG05\u003c/EndStationCode\u003e\n            \u003cInternalDestination1/\u003e\n            \u003cInternalDestination2/\u003e\n            \u003cLineCode\u003eSV\u003c/LineCode\u003e\n            \u003cStartStationCode\u003eN06\u003c/StartStationCode\u003e\n        \u003c/Line\u003e\n        \u003cLine\u003e\n            \u003cDisplayName\u003eRed\u003c/DisplayName\u003e\n            \u003cEndStationCode\u003eB11\u003c/EndStationCode\u003e\n            \u003cInternalDestination1\u003eA11\u003c/InternalDestination1\u003e\n            \u003cInternalDestination2\u003eB08\u003c/InternalDestination2\u003e\n            \u003cLineCode\u003eRD\u003c/LineCode\u003e\n            \u003cStartStationCode\u003eA15\u003c/StartStationCode\u003e\n        \u003c/Line\u003e\n        \u003cLine\u003e\n            \u003cDisplayName\u003eOrange\u003c/DisplayName\u003e\n            \u003cEndStationCode\u003eD13\u003c/EndStationCode\u003e\n            \u003cInternalDestination1/\u003e\n            \u003cInternalDestination2/\u003e\n            \u003cLineCode\u003eOR\u003c/LineCode\u003e\n            \u003cStartStationCode\u003eK08\u003c/StartStationCode\u003e\n        \u003c/Line\u003e\n        \u003cLine\u003e\n            \u003cDisplayName\u003eYellow\u003c/DisplayName\u003e\n            \u003cEndStationCode\u003eE06\u003c/EndStationCode\u003e\n            \u003cInternalDestination1\u003eE01\u003c/InternalDestination1\u003e\n            \u003cInternalDestination2/\u003e\n            \u003cLineCode\u003eYL\u003c/LineCode\u003e\n            \u003cStartStationCode\u003eC15\u003c/StartStationCode\u003e\n        \u003c/Line\u003e\n    \u003c/Lines\u003e\n\u003c/LinesResp\u003e",
	"paths./Path.get.description": "\u003ch4 class=\"text-primary\"\u003eDescription\u003c/h4\u003e\r\n\r\n\u003cp\u003eReturns a set of ordered stations and distances between two stations on the\r\n\u003cem\u003esame line\u003c/em\u003e.\u003c/p\u003e\r\n\r\n\u003cp\u003eNote that this method is not suitable on its own as a pathfinding solution\r\nbetween stations.\u003c/p\u003e\r\n\r\n\u003ch4 class=\"text-primary\"\u003eResponse Elements\u003c/h4\u003e\r\n\r\n\u003ctable class=\"table table-condensed table-hover\"\u003e\r\n\u003cthead\u003e\r\n\u003ctr\u003e\r\n\u003cth class=\"col-md-3\"\u003eElement\u003c/th\u003e\r\n\r\n\u003cth\u003eDescription\u003c/th\u003e\r\n\u003c/tr\u003e\r\n\u003c/thead\u003e\r\n\r\n\u003ctbody\u003e\r\n\u003ctr\u003e\r\n\u003ctd\u003ePath\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nArray containing path details (\u003ca href=\r\n\"#MetroPathItem\"\u003eMetroPathItem\u003c/a\u003e)\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd colspan=\"2\"\u003e\r\n\u003cdiv class=\"text-primary\" style=\"margin-top: 1em\"\u003e\r\n\u003ca id=\"MetroPathItem\" name=\"MetroPathItem\"\u003eMetroPathItem\r\nElements\u003c/a\u003e\r\n\u003c/div\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eDistanceToPrev\u003c/td\u003e\r\n\r\n\u003ctd\u003eDistance in feet to the previous station in the list.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLineCode\u003c/td\u003e\r\n\r\n\u003ctd\u003eTwo-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,\r\nor SV) this station's platform is on.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eSeqNum\u003c/td\u003e\r\n\r\n\u003ctd\u003eOrdered sequence number.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eStationCode\u003c/td\u003e\r\n\r\n\u003ctd\u003eStation code for this station. Use this value in other\r\nrail-related APIs to retrieve data about a station.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eStationName\u003c/td\u003e\r\n\r\n\u003ctd\u003eFull name for this station, as shown on the WMATA website.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\u003c/tbody\u003e\r\n\u003c/table\u003e",
	"paths./Path.get.operationId": "XML - Path Between Stations",
	"paths./Path.get.parameters.length": 2,
	"paths./Path.get.parameters[0].default": "N06",
	"paths./Path.get.parameters[0].description": "Station code for the origin station.  Use the Station List method to return a list of all station codes.",
	"paths./Path.get.parameters[0].enum.length": 1,
	"paths./Path.get.parameters[0].enum[0]": "N06",
	"paths./Path.get.parameters[0].in": "query",
	"paths./Path.get.parameters[0].name": "FromStationCode",
	"paths./Path.get.parameters[0].required": true,
	"paths./Path.get.parameters[0].type": "string",
	"paths./Path.get.parameters[1].default": "G05",
	"paths./Path.get.parameters[1].description": "Station code for the origin station.  Use the Station List method to return a list of all station codes.",
	"paths./Path.get.parameters[1].enum.length": 1,
	"paths./Path.get.parameters[1].enum[0]": "G05",
	"paths./Path.get.parameters[1].in": "query",
	"paths./Path.get.parameters[1].name": "ToStationCode",
	"paths./Path.get.parameters[1].required": true,
	"paths./Path.get.parameters[1].type": "string",
	"paths./Path.get.produces.length": 1,
	"paths./Path.get.produces[0]": "application/xml",
	"paths./Path.get.responses.200.description": "Default response code.",
	"paths./Path.get.responses.200.examples.application/xml": "\n\n\u003cPathResp\n    xmlns=\"http://www.wmata.com\"\n    xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\"\u003e\n    \u003cPath\u003e\n        \u003cMetroPathItem\u003e\n            \u003cDistanceToPrev\u003e0\u003c/DistanceToPrev\u003e\n            \u003cLineCode\u003eSV\u003c/LineCode\u003e\n            \u003cSeqNum\u003e1\u003c/SeqNum\u003e\n            \u003cStationCode\u003eN06\u003c/StationCode\u003e\n            \u003cStationName\u003eWiehle-Reston East\u003c/StationName\u003e\n        \u003c/MetroPathItem\u003e\n        \u003cMetroPathItem\u003e\n            \u003cDistanceToPrev\u003e30867\u003c/DistanceToPrev\u003e\n            \u003cLineCode\u003eSV\u003c/LineCode\u003e\n            \u003cSeqNum\u003e2\u003c/SeqNum\u003e\n            \u003cStationCode\u003eN04\u003c/StationCode\u003e\n            \u003cStationName\u003eSpring Hill\u003c/StationName\u003e\n        \u003c/MetroPathItem\u003e\n        \u003cMetroPathItem\u003e\n            \u003cDistanceToPrev\u003e3634\u003c/DistanceToPrev\u003e\n            \u003cLineCode\u003eSV\u003c/LineCode\u003e\n            \u003cSeqNum\u003e3\u003c/SeqNum\u003e\n            \u003cStationCode\u003eN03\u003c/StationCode\u003e\n            \u003cStationName\u003eGreensboro\u003c/StationName\u003e\n        \u003c/MetroPathItem\u003e\n        \u003cMetroPathItem\u003e\n            \u003cDistanceToPrev\u003e3902\u003c/DistanceToPrev\u003e\n            \u003cLineCode\u003eSV\u003c/LineCode\u003e\n            \u003cSeqNum\u003e4\u003c/SeqNum\u003e\n            \u003cStationCode\u003eN02\u003c/StationCode\u003e\n            \u003cStationName\u003eTysons Corner\u003c/StationName\u003e\n        \u003c/MetroPathItem\u003e\n        \u003cMetroPathItem\u003e\n            \u003cDistanceToPrev\u003e3440\u003c/DistanceToPrev\u003e\n            \u003cLineCode\u003eSV\u003c/LineCode\u003e\n            \u003cSeqNum\u003e5\u003c/SeqNum\u003e\n            \u003cStationCode\u003eN01\u003c/StationCode\u003e\n            \u003cStationName\u003eMcLean\u003c/StationName\u003e\n        \u003c/MetroPathItem\u003e\n        \u003cMetroPathItem\u003e\n            \u003cDistanceToPrev\u003e24745\u003c/DistanceToPrev\u003e\n            \u003cLineCode\u003eSV\u003c/LineCode\u003e\n            \u003cSeqNum\u003e6\u003c/SeqNum\u003e\n            \u003cStationCode\u003eK05\u003c/StationCode\u003e\n            \u003cStationName\u003eE Falls Church\u003c/StationName\u003e\n        \u003c/MetroPathItem\u003e\n        \u003cMetroPathItem\u003e\n            \u003cDistanceToPrev\u003e13156\u003c/DistanceToPrev\u003e\n            \u003cLineCode\u003eSV\u003c/LineCode\u003e\n            \u003cSeqNum\u003e7\u003c/SeqNum\u003e\n            \u003cStationCode\u003eK04\u003c/StationCode\u003e\n            \u003cStationName\u003eBallston\u003c/StationName\u003e\n        \u003c/MetroPathItem\u003e\n        \u003cMetroPathItem\u003e\n            \u003cDistanceToPrev\u003e2980\u003c/DistanceToPrev\u003e\n            \u003cLineCode\u003eSV\u003c/LineCode\u003e\n            \u003cSeqNum\u003e8\u003c/SeqNum\u003e\n            \u003cStationCode\u003eK03\u003c/StationCode\u003e\n            \u003cStationName\u003eVirginia Square\u003c/StationName\u003e\n        \u003c/MetroPathItem\u003e\n        \u003cMetroPathItem\u003e\n            \u003cDistanceToPrev\u003e2473\u003c/DistanceToPrev\u003e\n            \u003cLineCode\u003eSV\u003c/LineCode\u003e\n            \u003cSeqNum\u003e9\u003c/SeqNum\u003e\n            \u003cStationCode\u003eK02\u003c/StationCode\u003e\n            \u003cStationName\u003eClarendon\u003c/StationName\u003e\n        \u003c/MetroPathItem\u003e\n        \u003cMetroPathItem\u003e\n            \u003cDistanceToPrev\u003e2687\u003c/DistanceToPrev\u003e\n            \u003cLineCode\u003eSV\u003c/LineCode\u003e\n            \u003cSeqNum\u003e10\u003c/SeqNum\u003e\n            \u003cStationCode\u003eK01\u003c/StationCode\u003e\n            \u003cStationName\u003eCourt House\u003c/StationName\u003e\n        \u003c/MetroPathItem\u003e\n        \u003cMetroPathItem\u003e\n            \u003cDistanceToPrev\u003e4936\u003c/DistanceToPrev\u003e\n            \u003cLineCode\u003eSV\u003c/LineCode\u003e\n            \u003cSeqNum\u003e11\u003c/SeqNum\u003e\n            \u003cStationCode\u003eC05\u003c/StationCode\u003e\n            \u003cStationName\u003eRosslyn\u003c/StationName\u003e\n        \u003c/MetroPathItem\u003e\n        \u003cMetroPathItem\u003e\n            \u003cDistanceToPrev\u003e6993\u003c/DistanceToPrev\u003e\n            \u003cLineCode\u003eSV\u003c/LineCode\u003e\n            \u003cSeqNum\u003e12\u003c/SeqNum\u003e\n            \u003cStationCode\u003eC04\u003c/StationCode\u003e\n            \u003cStationName\u003eFoggy Bottom\u003c/StationName\u003e\n        \u003c/MetroPathItem\u003e\n        \u003cMetroPathItem\u003e\n            \u003cDistanceToPrev\u003e2783\u003c/DistanceToPrev\u003e\n            \u003cLineCode\u003eSV\u003c/LineCode\u003e\n            \u003cSeqNum\u003e13\u003c/SeqNum\u003e\n            \u003cStationCode\u003eC03\u003c/StationCode\u003e\n            \u003cStationName\u003eFarragut West\u003c/StationName\u003e\n        \u003c/MetroPathItem\u003e\n        \u003cMetroPathItem\u003e\n            \u003cDistanceToPrev\u003e2001\u003c/DistanceToPrev\u003e\n            \u003cLineCode\u003eSV\u003c/LineCode\u003e\n            \u003cSeqNum\u003e14\u003c/SeqNum\u003e\n            \u003cStationCode\u003eC02\u003c/StationCode\u003e\n            \u003cStationName\u003eMcPherson Square\u003c/StationName\u003e\n        \u003c/MetroPathItem\u003e\n        \u003cMetroPathItem\u003e\n            \u003cDistanceToPrev\u003e2359\u003c/DistanceToPrev\u003e\n            \u003cLineCode\u003eSV\u003c/LineCode\u003e\n            \u003cSeqNum\u003e15\u003c/SeqNum\u003e\n            \u003cStationCode\u003eC01\u003c/StationCode\u003e\n            \u003cStationName\u003eMetro Center\u003c/StationName\u003e\n        \u003c/MetroPathItem\u003e\n        \u003cMetroPathItem\u003e\n            \u003cDistanceToPrev\u003e1561\u003c/DistanceToPrev\u003e\n            \u003cLineCode\u003eSV\u003c/LineCode\u003e\n            \u003cSeqNum\u003e16\u003c/SeqNum\u003e\n            \u003cStationCode\u003eD01\u003c/StationCode\u003e\n            \u003cStationName\u003eFederal Triangle\u003c/StationName\u003e\n        \u003c/MetroPathItem\u003e\n        \u003cMetroPathItem\u003e\n            \u003cDistanceToPrev\u003e2016\u003c/DistanceToPrev\u003e\n            \u003cLineCode\u003eSV\u003c/LineCode\u003e\n            \u003cSeqNum\u003e17\u003c/SeqNum\u003e\n            \u003cStationCode\u003eD02\u003c/StationCode\u003e\n            \u003cStationName\u003eSmithsonian\u003c/StationName\u003e\n        \u003c/MetroPathItem\u003e\n        \u003cMetroPathItem\u003e\n            \u003cDistanceToPrev\u003e2643\u003c/DistanceToPrev\u003e\n            \u003cLineCode\u003eSV\u003c/LineCode\u003e\n            \u003cSeqNum\u003e18\u003c/SeqNum\u003e\n            \u003cStationCode\u003eD03\u003c/StationCode\u003e\n            \u003cStationName\u003eL'Enfant Plaza\u003c/StationName\u003e\n        \u003c/MetroPathItem\u003e\n        \u003cMetroPathItem\u003e\n            \u003cDistanceToPrev\u003e1757\u003c/DistanceToPrev\u003e\n            \u003cLineCode\u003eSV\u003c/LineCode\u003e\n            \u003cSeqNum\u003e19\u003c/SeqNum\u003e\n            \u003cStationCode\u003eD04\u003c/StationCode\u003e\n            \u003cStationName\u003eFederal Center SW\u003c/StationName\u003e\n        \u003c/MetroPathItem\u003e\n        \u003cMetroPathItem\u003e\n            \u003cDistanceToPrev\u003e3052\u003c/DistanceToPrev\u003e\n            \u003cLineCode\u003eSV\u003c/LineCode\u003e\n            \u003cSeqNum\u003e20\u003c/SeqNum\u003e\n            \u003cStationCode\u003eD05\u003c/StationCode\u003e\n            \u003cStationName\u003eCapitol South\u003c/StationName\u003e\n        \u003c/MetroPathItem\u003e\n        \u003cMetroPathItem\u003e\n            \u003cDistanceToPrev\u003e2703\u003c/DistanceToPrev\u003e\n            \u003cLineCode\u003eSV\u003c/LineCode\u003e\n            \u003cSeqNum\u003e21\u003c/SeqNum\u003e\n            \u003cStationCode\u003eD06\u003c/StationCode\u003e\n            \u003cStationName\u003eEastern Market\u003c/StationName\u003e\n        \u003c/MetroPathItem\u003e\n        \u003cMetroPathItem\u003e\n            \u003cDistanceToPrev\u003e3289\u003c/DistanceToPrev\u003e\n            \u003cLineCode\u003eSV\u003c/LineCode\u003e\n            \u003cSeqNum\u003e22\u003c/SeqNum\u003e\n            \u003cStationCode\u003eD07\u003c/StationCode\u003e\n            \u003cStationName\u003ePotomac Avenue\u003c/StationName\u003e\n        \u003c/MetroPathItem\u003e\n        \u003cMetroPathItem\u003e\n            \u003cDistanceToPrev\u003e3750\u003c/DistanceToPrev\u003e\n            \u003cLineCode\u003eSV\u003c/LineCode\u003e\n            \u003cSeqNum\u003e23\u003c/SeqNum\u003e\n            \u003cStationCode\u003eD08\u003c/StationCode\u003e\n            \u003cStationName\u003eStadium Armory\u003c/StationName\u003e\n        \u003c/MetroPathItem\u003e\n        \u003cMetroPathItem\u003e\n            \u003cDistanceToPrev\u003e12162\u003c/DistanceToPrev\u003e\n            \u003cLineCode\u003eSV\u003c/LineCode\u003e\n            \u003cSeqNum\u003e24\u003c/SeqNum\u003e\n            \u003cStationCode\u003eG01\u003c/StationCode\u003e\n            \u003cStationName\u003eBenning Road\u003c/StationName\u003e\n        \u003c/MetroPathItem\u003e\n        \u003cMetroPathItem\u003e\n            \u003cDistanceToPrev\u003e7779\u003c/DistanceToPrev\u003e\n            \u003cLineCode\u003eSV\u003c/LineCode\u003e\n            \u003cSeqNum\u003e25\u003c/SeqNum\u003e\n            \u003cStationCode\u003eG02\u003c/StationCode\u003e\n            \u003cStationName\u003eCapitol Heights\u003c/StationName\u003e\n        \u003c/MetroPathItem\u003e\n        \u003cMetroPathItem\u003e\n            \u003cDistanceToPrev\u003e5215\u003c/DistanceToPrev\u003e\n            \u003cLineCode\u003eSV\u003c/LineCode\u003e\n            \u003cSeqNum\u003e26\u003c/SeqNum\u003e\n            \u003cStationCode\u003eG03\u003c/StationCode\u003e\n            \u003cStationName\u003eAddison Road\u003c/StationName\u003e\n        \u003c/MetroPathItem\u003e\n        \u003cMetroPathItem\u003e\n            \u003cDistanceToPrev\u003e7960\u003c/DistanceToPrev\u003e\n            \u003cLineCode\u003eSV\u003c/LineCode\u003e\n            \u003cSeqNum\u003e27\u003c/SeqNum\u003e\n            \u003cStationCode\u003eG04\u003c/StationCode\u003e\n            \u003cStationName\u003eMorgan Blvd\u003c/StationName\u003e\n        \u003c/MetroPathItem\u003e\n        \u003cMetroPathItem\u003e\n            \u003cDistanceToPrev\u003e7256\u003c/DistanceToPrev\u003e\n            \u003cLineCode\u003eSV\u003c/LineCode\u003e\n            \u003cSeqNum\u003e28\u003c/SeqNum\u003e\n            \u003cStationCode\u003eG05\u003c/StationCode\u003e\n            \u003cStationName\u003eLargo Town Center\u003c/StationName\u003e\n        \u003c/MetroPathItem\u003e\n    \u003c/Path\u003e\n\u003c/PathResp\u003e",
	"paths./SrcStationToDstStationInfo.get.description": "\u003ch4 class=\"text-primary\"\u003eDescription\u003c/h4\u003e\r\n\r\n\u003cp\u003eReturns a distance, fare information, and estimated travel time between any\r\ntwo stations, including those on different lines. Omit both parameters to\r\nretrieve data for all stations.\u003c/p\u003e\r\n\r\n\u003ch4 class=\"text-primary\"\u003eResponse Elements\u003c/h4\u003e\r\n\r\n\u003ctable class=\"table table-condensed table-hover\"\u003e\r\n\u003cthead\u003e\r\n\u003ctr\u003e\r\n\u003cth class=\"col-md-3\"\u003eElement\u003c/th\u003e\r\n\r\n\u003cth\u003eDescription\u003c/th\u003e\r\n\u003c/tr\u003e\r\n\u003c/thead\u003e\r\n\r\n\u003ctbody\u003e\r\n\u003ctr\u003e\r\n\u003ctd\u003eStationToStationInfos\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nArray containing station to station information (\u003ca href=\r\n\"#StationToStationInfo\"\u003eStationToStationInfo\u003c/a\u003e).\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd colspan=\"2\"\u003e\r\n\u003cdiv class=\"text-primary\" style=\"margin-top: 1em\"\u003e\r\n\u003ca id=\"StationToStationInfo\" name=\r\n\"StationToStationInfo\"\u003eStationToStationInfo Elements\u003c/a\u003e\r\n\u003c/div\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eCompositeMiles\u003c/td\u003e\r\n\r\n\u003ctd\u003eDistance in miles from the source to destination station.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eDestinationStation\u003c/td\u003e\r\n\r\n\u003ctd\u003eDestination station code. Use this value in other rail-related\r\nAPIs to retrieve data about a station.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eRailFare\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nStructure containing \u003ca href=\"#RailFare\"\u003efare\u003c/a\u003e information.\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eRailTime\u003c/td\u003e\r\n\r\n\u003ctd\u003eEstimated travel time (schedule time) in minutes between the source and destination station. This is not correlated to minutes \u003cspan class=\"text-info\"\u003e(Min)\u003c/span\u003e in Real-Time Rail Predictions.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eSourceStation\u003c/td\u003e\r\n\r\n\u003ctd\u003eOrigin station code. Use this value in other rail-related APIs\r\nto retrieve data about a station.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd colspan=\"2\"\u003e\r\n\u003cdiv class=\"text-primary\" style=\"margin-top: 1em\"\u003e\r\n\u003ca id=\"RailFare\" name=\"RailFare\"\u003eRailFare Elements\u003c/a\u003e\r\n\u003c/div\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eOffPeakTime\u003c/td\u003e\r\n\r\n\u003ctd\u003eFare during off-peak times (times other than the ones described\r\nbelow).\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003ePeakTime\u003c/td\u003e\r\n\r\n\u003ctd\u003eFare during peak times (weekdays from opening to 9:30 AM and\r\n3-7 PM, and weekends from midnight to closing).\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eSeniorDisabled\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nReduced fare for \u003ca href=\r\n\"http://www.wmata.com/fares/reduced.cfm\"\u003esenior citizens or\r\npeople with disabilities\u003c/a\u003e.\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\u003c/tbody\u003e\r\n\u003c/table\u003e",
	"paths./SrcStationToDstStationInfo.get.operationId": "XML - Station to Station Information",
	"paths./SrcStationToDstStationInfo.get.parameters.length": 2,
	"paths./SrcStationToDstStationInfo.get.parameters[0].default": "E10",
	"paths./SrcStationToDstStationInfo.get.parameters[0].description": "Station code for the origin station.  Use the Station List method to return a list of all station codes.",
	"paths./SrcStationToDstStationInfo.get.parameters[0].enum.length": 1,
	"paths./SrcStationToDstStationInfo.get.parameters[0].enum[0]": "E10",
	"paths./SrcStationToDstStationInfo.get.parameters[0].in": "query",
	"paths./SrcStationToDstStationInfo.get.parameters[0].name": "FromStationCode",
	"paths./SrcStationToDstStationInfo.get.parameters[0].type": "string",
	"paths./SrcStationToDstStationInfo.get.parameters[1].default": "J03",
	"paths./SrcStationToDstStationInfo.get.parameters[1].description": "Station code for the destination station.  Use the Station List method to return a list of all station codes.",
	"paths./SrcStationToDstStationInfo.get.parameters[1].enum.length": 1,
	"paths./SrcStationToDstStationInfo.get.parameters[1].enum[0]": "J03",
	"paths./SrcStationToDstStationInfo.get.parameters[1].in": "query",
	"paths./SrcStationToDstStationInfo.get.parameters[1].name": "ToStationCode",
	"paths./SrcStationToDstStationInfo.get.parameters[1].type": "string",
	"paths./SrcStationToDstStationInfo.get.produces.length": 1,
	"paths./SrcStationToDstStationInfo.get.produces[0]": "application/xml",
	"paths./SrcStationToDstStationInfo.get.responses.200.description": "Default response code.",
	"paths./SrcStationToDstStationInfo.get.responses.200.examples.application/xml": "\u003cStationToStationInfoResp xmlns=\"http://www.wmata.com\" xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\"\u003e\n    \u003cStationToStationInfos\u003e\n        \u003cStationToStationInfo\u003e\n            \u003cCompositeMiles\u003e25.41\u003c/CompositeMiles\u003e\n            \u003cDestinationStation\u003eJ03\u003c/DestinationStation\u003e\n            \u003cRailFare\u003e\n                \u003cOffPeakTime\u003e3.60\u003c/OffPeakTime\u003e\n                \u003cPeakTime\u003e5.90\u003c/PeakTime\u003e\n                \u003cSeniorDisabled\u003e2.95\u003c/SeniorDisabled\u003e\n            \u003c/RailFare\u003e\n            \u003cRailTime\u003e66\u003c/RailTime\u003e\n            \u003cSourceStation\u003eE10\u003c/SourceStation\u003e\n        \u003c/StationToStationInfo\u003e\n    \u003c/StationToStationInfos\u003e\n\u003c/StationToStationInfoResp\u003e",
	"paths./StationEntrances.get.description": "\u003ch4 class=\"text-primary\"\u003eDescription\u003c/h4\u003e\r\n\r\n\u003cp\u003eReturns a list of nearby station entrances based on latitude, longitude, and\r\nradius (meters). Omit search parameters to return all station entrances.\u003c/p\u003e\r\n\r\n\u003ch4 class=\"text-primary\"\u003eResponse Elements\u003c/h4\u003e\r\n\r\n\u003ctable class=\"table table-condensed table-hover\"\u003e\r\n\u003cthead\u003e\r\n\u003ctr\u003e\r\n\u003cth class=\"col-md-3\"\u003eElement\u003c/th\u003e\r\n\r\n\u003cth\u003eDescription\u003c/th\u003e\r\n\u003c/tr\u003e\r\n\u003c/thead\u003e\r\n\r\n\u003ctbody\u003e\r\n\u003ctr\u003e\r\n\u003ctd\u003eEntrances\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nArray containing detailed information about station entrances\r\n(\u003ca href=\"#StationEntrance\"\u003eStationEntrance\u003c/a\u003e).\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd colspan=\"2\"\u003e\r\n\u003cdiv class=\"text-primary\" style=\"margin-top: 1em\"\u003e\r\n\u003ca id=\"StationEntrance\" name=\r\n\"StationEntrance\"\u003eStationEntrance Elements\u003c/a\u003e\r\n\u003c/div\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eDescription\u003c/td\u003e\r\n\r\n\u003ctd\u003eAdditional information for the entrance, if available.\r\nCurrently available data usually shows the same value as the Name\r\nelement.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd style=\"text-decoration: line-through\"\u003eID\u003c/td\u003e\r\n\r\n\u003ctd\u003e\u003cspan class=\"text-danger\"\u003eDeprecated.\u003c/span\u003e\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLat\u003c/td\u003e\r\n\r\n\u003ctd\u003eLatitude.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLon\u003c/td\u003e\r\n\r\n\u003ctd\u003eLongitude.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eName\u003c/td\u003e\r\n\r\n\u003ctd\u003eName of the entrance (usually the station name and nearest\r\nintersection).\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eStationCode1\u003c/td\u003e\r\n\r\n\u003ctd\u003eThe station code associated with this entrance. Use this value\r\nin other rail-related APIs to retrieve data about a station.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eStationCode2\u003c/td\u003e\r\n\r\n\u003ctd\u003eFor stations containing multiple platforms (e.g.: Gallery\r\nPlace, Fort Totten, L'Enfant Plaza, and Metro Center), the other\r\nstation code.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\u003c/tbody\u003e\r\n\u003c/table\u003e",
	"paths./StationEntrances.get.operationId": "XML - Station Entrances",
	"paths./StationEntrances.get.parameters.length": 3,
	"paths./StationEntrances.get.parameters[0].description": "Center point Latitude, required if Longitude and Radius are specified.",
	"paths./StationEntrances.get.parameters[0].enum.length": 1,
	"paths./StationEntrances.get.parameters[0].enum[0]": "38.8978168",
	"paths./StationEntrances.get.parameters[0].in": "query",
	"paths./StationEntrances.get.parameters[0].name": "Lat",
	"paths./StationEntrances.get.parameters[0].type": "number",
	"paths./StationEntrances.get.parameters[1].description": "Center point Longitude, required if Latitude and Radius are specified.",
	"paths./StationEntrances.get.parameters[1].enum.length": 1,
	"paths./StationEntrances.get.parameters[1].enum[0]": "-77.0404246",
	"paths./StationEntrances.get.parameters[1].in": "query",
	"paths./StationEntrances.get.parameters[1].name": "Lon",
	"paths./StationEntrances.get.parameters[1].type": "number",
	"paths./StationEntrances.get.parameters[2].description": "Radius (meters) to include in the search area, required if Latitude and Longitude are specified.",
	"paths./StationEntrances.get.parameters[2].enum.length": 1,
	"paths./StationEntrances.get.parameters[2].enum[0]": "500",
	"paths./StationEntrances.get.parameters[2].in": "query",
	"paths./StationEntrances.get.parameters[2].name": "Radius",
	"paths./StationEntrances.get.parameters[2].type": "number",
	"paths./StationEntrances.get.produces.length": 1,
	"paths./StationEntrances.get.produces[0]": "application/xml",
	"paths./StationEntrances.get.responses.200.description": "Default response code.",
	"paths./StationEntrances.get.responses.200.examples.application/xml": "\u003cStationEntrancesResp\n    xmlns=\"http://www.wmata.com\"\n    xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\"\u003e\n    \u003cEntrances\u003e\n        \u003cStationEntrance\u003e\n            \u003cDescription\u003eFarragut West, 17th \u0026amp; I St\u003c/Description\u003e\n            \u003cID\u003e100\u003c/ID\u003e\n            \u003cLat\u003e38.901098\u003c/Lat\u003e\n            \u003cLon\u003e-77.039293\u003c/Lon\u003e\n            \u003cName\u003eFarragut West 17th \u0026amp; I St\u003c/Name\u003e\n            \u003cStationCode1\u003eC03\u003c/StationCode1\u003e\n            \u003cStationCode2/\u003e\n        \u003c/StationEntrance\u003e\n        \u003cStationEntrance\u003e\n            \u003cDescription\u003eFarragut West, 18th \u0026amp; I St\u003c/Description\u003e\n            \u003cID\u003e101\u003c/ID\u003e\n            \u003cLat\u003e38.901453\u003c/Lat\u003e\n            \u003cLon\u003e-77.042093\u003c/Lon\u003e\n            \u003cName\u003eFarragut West 18th \u0026amp; I St\u003c/Name\u003e\n            \u003cStationCode1\u003eC03\u003c/StationCode1\u003e\n            \u003cStationCode2/\u003e\n        \u003c/StationEntrance\u003e\n    \u003c/Entrances\u003e\n\u003c/StationEntrancesResp\u003e",
	"paths./StationInfo.get.description": "\u003ch4 class=\"text-primary\"\u003eDescription\u003c/h4\u003e\r\n\r\n\u003cp\u003eReturns station location and address information based on a given\r\nStationCode.\u003c/p\u003e\r\n\r\n\u003ch4 class=\"text-primary\"\u003eResponse Elements\u003c/h4\u003e\r\n\r\n\u003ctable class=\"table table-condensed table-hover\"\u003e\r\n\u003cthead\u003e\r\n\u003ctr\u003e\r\n\u003cth class=\"col-md-3\"\u003eElement\u003c/th\u003e\r\n\r\n\u003cth\u003eDescription\u003c/th\u003e\r\n\u003c/tr\u003e\r\n\u003c/thead\u003e\r\n\r\n\u003ctbody\u003e\r\n\u003ctr\u003e\r\n\u003ctd\u003eAddress\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nStructure describing \u003ca href=\"#Address\"\u003eaddress\u003c/a\u003e information.\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eCode\u003c/td\u003e\r\n\r\n\u003ctd\u003eStation code. Repeated from input.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLat\u003c/td\u003e\r\n\r\n\u003ctd\u003eLatitude.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLineCode1\u003c/td\u003e\r\n\r\n\u003ctd\u003eTwo-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,\r\nor SV) served by this station.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLineCode2\u003c/td\u003e\r\n\r\n\u003ctd\u003eAdditional line served by this station. This is often the case\r\nwhen stations have multiple platforms (e.g.: Gallery Place, Fort\r\nTotten, L'Enfant Plaza, and Metro Center).\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLineCode3\u003c/td\u003e\r\n\r\n\u003ctd\u003eSimilar to function as LineCodeX.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLineCode4\u003c/td\u003e\r\n\r\n\u003ctd\u003eSimilar to function as LineCodeX. Currently not in use.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLon\u003c/td\u003e\r\n\r\n\u003ctd\u003eLongitude.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eName\u003c/td\u003e\r\n\r\n\u003ctd\u003eStation name.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eStationTogether1\u003c/td\u003e\r\n\r\n\u003ctd\u003eFor stations with multiple platforms (e.g.: Gallery Place, Fort\r\nTotten, L'Enfant Plaza, and Metro Center), the additional\r\nStationCode will be listed here.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eStationTogether2\u003c/td\u003e\r\n\r\n\u003ctd\u003eSimilar in function to StationTogether2. Currently not in\r\nuse.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd colspan=\"2\"\u003e\r\n\u003cdiv class=\"text-primary\" style=\"margin-top: 1em\"\u003e\r\n\u003ca name=\"Address\"\u003eAddress Elements\u003c/a\u003e\r\n\u003c/div\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eCity\u003c/td\u003e\r\n\r\n\u003ctd\u003eCity.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eState\u003c/td\u003e\r\n\r\n\u003ctd\u003eState (abbreviated).\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eStreet\u003c/td\u003e\r\n\r\n\u003ctd\u003eStreet address (for GPS use).\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eZip\u003c/td\u003e\r\n\r\n\u003ctd\u003eZip code.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\u003c/tbody\u003e\r\n\u003c/table\u003e",
	"paths./StationInfo.get.operationId": "XML - Station Information",
	"paths./StationInfo.get.parameters.length": 1,
	"paths./StationInfo.get.parameters[0].default": "A01",
	"paths./StationInfo.get.parameters[0].description": "Station code.  Use the Station List method to return a list of all station codes.",
	"paths./StationInfo.get.parameters[0].enum.length": 1,
	"paths./StationInfo.get.parameters[0].enum[0]": "A01",
	"paths./StationInfo.get.parameters[0].in": "query",
	"paths./StationInfo.get.parameters[0].name": "StationCode",
	"paths./StationInfo.get.parameters[0].required": true,
	"paths./StationInfo.get.parameters[0].type": "string",
	"paths./StationInfo.get.produces.length": 1,
	"paths./StationInfo.get.produces[0]": "application/xml",
	"paths./StationInfo.get.responses.200.description": "Default response code.",
	"paths./StationInfo.get.responses.200.examples.application/xml": "\u003cStation\n    xmlns=\"http://www.wmata.com\"\n    xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\"\u003e\n    \u003cAddress\u003e\n        \u003cCity\u003eWashington\u003c/City\u003e\n        \u003cState\u003eDC\u003c/State\u003e\n        \u003cStreet\u003e607 13th St. NW\u003c/Street\u003e\n        \u003cZip\u003e20005\u003c/Zip\u003e\n    \u003c/Address\u003e\n    \u003cCode\u003eA01\u003c/Code\u003e\n    \u003cLat\u003e38.8983144732\u003c/Lat\u003e\n    \u003cLineCode1\u003eRD\u003c/LineCode1\u003e\n    \u003cLineCode2 i:nil=\"true\"/\u003e\n    \u003cLineCode3 i:nil=\"true\"/\u003e\n    \u003cLineCode4 i:nil=\"true\"/\u003e\n    \u003cLon\u003e-77.0280779971\u003c/Lon\u003e\n    \u003cName\u003eMetro Center\u003c/Name\u003e\n    \u003cStationTogether1\u003eC01\u003c/StationTogether1\u003e\n    \u003cStationTogether2/\u003e\n\u003c/Station\u003e",
	"paths./StationParking.get.description": "\u003ch4 class=\"text-primary\"\u003eDescription\u003c/h4\u003e\r\n\r\n\u003cp\u003eReturns parking information at a station based on a given StationCode. Omit\r\nthe StationCode to return parking information for all stations.\u003c/p\u003e\r\n\r\n\u003cp\u003eIf a station has no parking, the StationsParking element will contain no\r\nchild elements.\u003c/p\u003e\r\n\r\n\u003ch4 class=\"text-primary\"\u003eResponse Elements\u003c/h4\u003e\r\n\r\n\u003ctable class=\"table table-condensed table-hover\"\u003e\r\n\u003cthead\u003e\r\n\u003ctr\u003e\r\n\u003cth class=\"col-md-3\"\u003eElement\u003c/th\u003e\r\n\r\n\u003cth\u003eDescription\u003c/th\u003e\r\n\u003c/tr\u003e\r\n\u003c/thead\u003e\r\n\r\n\u003ctbody\u003e\r\n\u003ctr\u003e\r\n\u003ctd\u003eStationsParking\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nArray containing station parking information (\u003ca href=\r\n\"#StationParking\"\u003eStationParking\u003c/a\u003e).\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd colspan=\"2\"\u003e\r\n\u003cdiv class=\"text-primary\" style=\"margin-top: 1em\"\u003e\r\n\u003ca id=\"StationParking\" name=\"StationParking\"\u003eStationParking\r\nElements\u003c/a\u003e\r\n\u003c/div\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eCode\u003c/td\u003e\r\n\r\n\u003ctd\u003eStation code. Useful when returning parking information for all\r\nstations. Use this value in other rail-related APIs to retrieve\r\ndata about a station.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eNotes\u003c/td\u003e\r\n\r\n\u003ctd\u003eWhen not NULL, provides additional parking resources such as\r\nnearby lots.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eAllDayParking\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nStructure describing \u003ca href=\"#AllDayParking\"\u003eall-day\r\nparking\u003c/a\u003e options.\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eShortTermParking\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nStructure describing \u003ca href=\"#ShortTermParking\"\u003eshort-term\r\nparking\u003c/a\u003e options.\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd colspan=\"2\"\u003e\r\n\u003cdiv class=\"text-primary\" style=\"margin-top: 1em\"\u003e\r\n\u003ca id=\"AllDayParking\" name=\"AllDayParking\"\u003eAllDayParking\r\nElements\u003c/a\u003e\r\n\u003c/div\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eTotalCount\u003c/td\u003e\r\n\r\n\u003ctd\u003eNumber of all-day parking spots available at a station.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eRiderCost\u003c/td\u003e\r\n\r\n\u003ctd\u003eAll-day cost per day for Metro riders. NULL when no all-day\r\nspots are available. For most stations, this value is identical to\r\nthe NonRiderCost.\u003cbr\u003e\r\n\u003cbr\u003e\r\nFor cases where the NonRiderCost is different, the lower cost per\r\nday requires a valid rail trip using a SmarTrip\u0026reg; card\r\noriginating from a station other than the one where the patron\r\nparked. To receive this lower rate, patrons must pay for their\r\nparking with the same SmarTrip\u0026reg; card used to enter/exit\r\nMetrorail, and must exit the parking lot within two hours of\r\nexiting Metrorail.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eNonRiderCost\u003c/td\u003e\r\n\r\n\u003ctd\u003eAll-day cost per day for non-Metro riders. NULL when no all-day\r\nspots are available.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd colspan=\"2\"\u003e\r\n\u003cdiv class=\"text-primary\" style=\"margin-top: 1em\"\u003e\r\n\u003ca id=\"ShortTermParking\" name=\r\n\"ShortTermParking\"\u003eShortTermParking Elements\u003c/a\u003e\r\n\u003c/div\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eTotalCount\u003c/td\u003e\r\n\r\n\u003ctd\u003eNumber of short-term parking spots available at a station\r\n(parking meters).\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eNotes\u003c/td\u003e\r\n\r\n\u003ctd\u003eMisc. information relating to short-term parking. NULL when no\r\nshort-term spots are available.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\u003c/tbody\u003e\r\n\u003c/table\u003e",
	"paths./StationParking.get.operationId": "XML - Parking Information",
	"paths./StationParking.get.parameters.length": 1,
	"paths./StationParking.get.parameters[0].description": "Station code.  Use the Station List method to return a list of all station codes.",
	"paths./StationParking.get.parameters[0].enum.length": 2,
	"paths./StationParking.get.parameters[0].enum[0]": "E08",
	"paths./StationParking.get.parameters[0].enum[1]": "F06",
	"paths./StationParking.get.parameters[0].in": "query",
	"paths./StationParking.get.parameters[0].name": "StationCode",
	"paths./StationParking.get.parameters[0].type": "string",
	"paths./StationParking.get.produces.length": 1,
	"paths./StationParking.get.produces[0]": "application/xml",
	"paths./StationParking.get.responses.200.description": "Default response code.",
	"paths./StationParking.get.responses.200.examples.application/xml": "\u003cStationParkingResp\n    xmlns=\"http://www.wmata.com\"\n    xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\"\u003e\n    \u003cStationsParking\u003e\n        \u003cStationParking\u003e\n            \u003cCode\u003eF06\u003c/Code\u003e\n            \u003cNotes\u003e325 spaces metered for 12-hr. max. @ $1.00 per 60 mins.\u003c/Notes\u003e\n            \u003cAllDayParking\u003e\n                \u003cTotalCount\u003e808\u003c/TotalCount\u003e\n                \u003cRiderCost\u003e4.60\u003c/RiderCost\u003e\n                \u003cNonRiderCost\u003e4.60\u003c/NonRiderCost\u003e\n            \u003c/AllDayParking\u003e\n            \u003cShortTermParking\u003e\n                \u003cTotalCount\u003e15\u003c/TotalCount\u003e\n                \u003cNotes\u003eShort term parking available 5 am - 2 am, time limit 12 hours\u003c/Notes\u003e\n            \u003c/ShortTermParking\u003e\n        \u003c/StationParking\u003e\n    \u003c/StationsParking\u003e\n\u003c/StationParkingResp\u003e",
	"paths./StationTimes.get.description": "\u003ch4 class=\"text-primary\"\u003eDescription\u003c/h4\u003e\r\n\r\n\u003cp\u003eReturns opening and scheduled first/last train times based on a given\r\nStationCode. Omit the StationCode to return timing information for all\r\nstations.\u003c/p\u003e\r\n\r\n\u003cp\u003eNote that for stations with multiple platforms (e.g.: Metro Center, L'Enfant\r\nPlaza, etc.), a distinct call is required for each StationCode to retrieve the\r\nfull set of train times at such stations.\u003c/p\u003e\r\n\r\n\u003ch4 class=\"text-primary\"\u003eResponse Elements\u003c/h4\u003e\r\n\r\n\u003ctable class=\"table table-condensed table-hover\"\u003e\r\n\u003cthead\u003e\r\n\u003ctr\u003e\r\n\u003cth class=\"col-md-3\"\u003eElement\u003c/th\u003e\r\n\r\n\u003cth\u003eDescription\u003c/th\u003e\r\n\u003c/tr\u003e\r\n\u003c/thead\u003e\r\n\r\n\u003ctbody\u003e\r\n\u003ctr\u003e\r\n\u003ctd\u003eStationTimes\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nArray containing station timing information (\u003ca href=\r\n\"#StationTime\"\u003eStationTime\u003c/a\u003e).\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd colspan=\"2\"\u003e\r\n\u003cdiv class=\"text-primary\" style=\"margin-top: 1em\"\u003e\r\n\u003ca id=\"StationTime\" name=\"StationTime\"\u003eStationTime\r\nElements\u003c/a\u003e\r\n\u003c/div\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eCode\u003c/td\u003e\r\n\r\n\u003ctd\u003eStation code for this station. Use this value in other\r\nrail-related APIs to retrieve data about a station.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eStationName\u003c/td\u003e\r\n\r\n\u003ctd\u003eFull name of the station.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003e*Day Elements\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nContainer elements containing timing information based on\r\n\u003ca href=\"#dow\"\u003eday of the week.\u003c/a\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd colspan=\"2\"\u003e\r\n\u003cdiv class=\"text-primary\" style=\"margin-top: 1em\"\u003e\r\n\u003ca id=\"dow\" name=\"dow\"\u003eMonday/Tuesday/Wednesday/etc.\r\nElements\u003c/a\u003e\r\n\u003c/div\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eOpeningTime\u003c/td\u003e\r\n\r\n\u003ctd\u003eStation opening time. Format is HH:mm.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eFirstTrains\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nStructure containing \u003ca href=\"#first\"\u003efirst train\u003c/a\u003e\r\ninformation.\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLastTrains\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nStructure containing \u003ca href=\"#last\"\u003elast train\u003c/a\u003e\r\ninformation.\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd colspan=\"2\"\u003e\r\n\u003cdiv class=\"text-primary\" style=\"margin-top: 1em\"\u003e\r\n\u003ca id=\"first\" name=\"first\"\u003eFirstTrains Elements\u003c/a\u003e\r\n\u003c/div\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eTime\u003c/td\u003e\r\n\r\n\u003ctd\u003eFirst train leaves the station at this time. Format is\r\nHH:mm.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eDestinationStation\u003c/td\u003e\r\n\r\n\u003ctd\u003eStation code for the train's destination. Use this value in\r\nother rail-related APIs to retrieve data about a station.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd colspan=\"2\"\u003e\r\n\u003cdiv class=\"text-primary\" style=\"margin-top: 1em\"\u003e\r\n\u003ca id=\"last\" name=\"last\"\u003eLastTrains Elements\u003c/a\u003e\r\n\u003c/div\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eTime\u003c/td\u003e\r\n\r\n\u003ctd\u003eLast train leaves the station at this time. Format is HH:mm.\r\nNote that when the time is AM, it signifies the next day. For\r\nexample, a value of 02:30 under a Saturday element means the last\r\ntrain leaves on Sunday at 2:30 AM.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eDestinationStation\u003c/td\u003e\r\n\r\n\u003ctd\u003eStation code for the train's destination. Use this value in\r\nother rail-related APIs to retrieve data about a station.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\u003c/tbody\u003e\r\n\u003c/table\u003e",
	"paths./StationTimes.get.operationId": "XML - Station Timings",
	"paths./StationTimes.get.parameters.length": 1,
	"paths./StationTimes.get.parameters[0].default": "E10",
	"paths./StationTimes.get.parameters[0].description": "Station code.  Use the Station List method to return a list of all station codes.",
	"paths./StationTimes.get.parameters[0].enum.length": 1,
	"paths./StationTimes.get.parameters[0].enum[0]": "E10",
	"paths./StationTimes.get.parameters[0].in": "query",
	"paths./StationTimes.get.parameters[0].name": "StationCode",
	"paths./StationTimes.get.parameters[0].type": "string",
	"paths./StationTimes.get.produces.length": 1,
	"paths./StationTimes.get.produces[0]": "application/xml",
	"paths./StationTimes.get.responses.200.description": "Default response code.",
	"paths./StationTimes.get.responses.200.examples.application/xml": "\u003cStationTimeResp\n    xmlns=\"http://www.wmata.com\"\n    xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\"\u003e\n    \u003cStationTimes\u003e\n        \u003cStationTime\u003e\n            \u003cCode\u003eE10\u003c/Code\u003e\n            \u003cStationName\u003eGreenbelt\u003c/StationName\u003e\n            \u003cMonday\u003e\n                \u003cOpeningTime\u003e04:50\u003c/OpeningTime\u003e\n                \u003cFirstTrains\u003e\n                    \u003cTrain\u003e\n                        \u003cTime\u003e05:00\u003c/Time\u003e\n                        \u003cDestinationStation\u003eF11\u003c/DestinationStation\u003e\n                    \u003c/Train\u003e\n                \u003c/FirstTrains\u003e\n                \u003cLastTrains\u003e\n                    \u003cTrain\u003e\n                        \u003cTime\u003e23:30\u003c/Time\u003e\n                        \u003cDestinationStation\u003eF11\u003c/DestinationStation\u003e\n                    \u003c/Train\u003e\n                \u003c/LastTrains\u003e\n            \u003c/Monday\u003e\n            \u003cTuesday\u003e\n                \u003cOpeningTime\u003e04:50\u003c/OpeningTime\u003e\n                \u003cFirstTrains\u003e\n                    \u003cTrain\u003e\n                        \u003cTime\u003e05:00\u003c/Time\u003e\n                        \u003cDestinationStation\u003eF11\u003c/DestinationStation\u003e\n                    \u003c/Train\u003e\n                \u003c/FirstTrains\u003e\n                \u003cLastTrains\u003e\n                    \u003cTrain\u003e\n                        \u003cTime\u003e23:30\u003c/Time\u003e\n                        \u003cDestinationStation\u003eF11\u003c/DestinationStation\u003e\n                    \u003c/Train\u003e\n                \u003c/LastTrains\u003e\n            \u003c/Tuesday\u003e\n            \u003cWednesday\u003e\n                \u003cOpeningTime\u003e04:50\u003c/OpeningTime\u003e\n                \u003cFirstTrains\u003e\n                    \u003cTrain\u003e\n                        \u003cTime\u003e05:00\u003c/Time\u003e\n                        \u003cDestinationStation\u003eF11\u003c/DestinationStation\u003e\n                    \u003c/Train\u003e\n                \u003c/FirstTrains\u003e\n                \u003cLastTrains\u003e\n                    \u003cTrain\u003e\n                        \u003cTime\u003e23:30\u003c/Time\u003e\n                        \u003cDestinationStation\u003eF11\u003c/DestinationStation\u003e\n                    \u003c/Train\u003e\n                \u003c/LastTrains\u003e\n            \u003c/Wednesday\u003e\n            \u003cThursday\u003e\n                \u003cOpeningTime\u003e04:50\u003c/OpeningTime\u003e\n                \u003cFirstTrains\u003e\n                    \u003cTrain\u003e\n                        \u003cTime\u003e05:00\u003c/Time\u003e\n                        \u003cDestinationStation\u003eF11\u003c/DestinationStation\u003e\n                    \u003c/Train\u003e\n                \u003c/FirstTrains\u003e\n                \u003cLastTrains\u003e\n                    \u003cTrain\u003e\n                        \u003cTime\u003e23:30\u003c/Time\u003e\n                        \u003cDestinationStation\u003eF11\u003c/DestinationStation\u003e\n                    \u003c/Train\u003e\n                \u003c/LastTrains\u003e\n            \u003c/Thursday\u003e\n            \u003cFriday\u003e\n                \u003cOpeningTime\u003e04:50\u003c/OpeningTime\u003e\n                \u003cFirstTrains\u003e\n                    \u003cTrain\u003e\n                        \u003cTime\u003e05:00\u003c/Time\u003e\n                        \u003cDestinationStation\u003eF11\u003c/DestinationStation\u003e\n                    \u003c/Train\u003e\n                \u003c/FirstTrains\u003e\n                \u003cLastTrains\u003e\n                    \u003cTrain\u003e\n                        \u003cTime\u003e02:30\u003c/Time\u003e\n                        \u003cDestinationStation\u003eF11\u003c/DestinationStation\u003e\n                    \u003c/Train\u003e\n                \u003c/LastTrains\u003e\n            \u003c/Friday\u003e\n            \u003cSaturday\u003e\n                \u003cOpeningTime\u003e06:50\u003c/OpeningTime\u003e\n                \u003cFirstTrains\u003e\n                    \u003cTrain\u003e\n                        \u003cTime\u003e07:00\u003c/Time\u003e\n                        \u003cDestinationStation\u003eF11\u003c/DestinationStation\u003e\n                    \u003c/Train\u003e\n                \u003c/FirstTrains\u003e\n                \u003cLastTrains\u003e\n                    \u003cTrain\u003e\n                        \u003cTime\u003e02:30\u003c/Time\u003e\n                        \u003cDestinationStation\u003eF11\u003c/DestinationStation\u003e\n                    \u003c/Train\u003e\n                \u003c/LastTrains\u003e\n            \u003c/Saturday\u003e\n            \u003cSunday\u003e\n                \u003cOpeningTime\u003e06:50\u003c/OpeningTime\u003e\n                \u003cFirstTrains\u003e\n                    \u003cTrain\u003e\n                        \u003cTime\u003e07:00\u003c/Time\u003e\n                        \u003cDestinationStation\u003eF11\u003c/DestinationStation\u003e\n                    \u003c/Train\u003e\n                \u003c/FirstTrains\u003e\n                \u003cLastTrains\u003e\n                    \u003cTrain\u003e\n                        \u003cTime\u003e23:30\u003c/Time\u003e\n                        \u003cDestinationStation\u003eF11\u003c/DestinationStation\u003e\n                    \u003c/Train\u003e\n                \u003c/LastTrains\u003e\n            \u003c/Sunday\u003e\n        \u003c/StationTime\u003e\n    \u003c/StationTimes\u003e\n\u003c/StationTimeResp\u003e",
	"paths./Stations.get.description": "\u003ch4 class=\"text-primary\"\u003eDescription\u003c/h4\u003e\r\n\r\n\u003cp\u003eReturns a list of station location and address information based on a given\r\nLineCode. Omit the LineCode to return all stations. The response is an array of\r\nobjects identical to those returned in the Station Information method.\u003c/p\u003e\r\n\r\n\u003ch4 class=\"text-primary\"\u003eResponse Elements\u003c/h4\u003e\r\n\r\n\u003ctable class=\"table table-condensed table-hover\"\u003e\r\n\u003cthead\u003e\r\n\u003ctr\u003e\r\n\u003cth class=\"col-md-3\"\u003eElement\u003c/th\u003e\r\n\r\n\u003cth\u003eDescription\u003c/th\u003e\r\n\u003c/tr\u003e\r\n\u003c/thead\u003e\r\n\r\n\u003ctbody\u003e\r\n\u003ctr\u003e\r\n\u003ctd\u003eStations\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nArray containing station information (\u003ca href=\r\n\"#Station\"\u003eStation\u003c/a\u003e).\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd colspan=\"2\"\u003e\r\n\u003cdiv class=\"text-primary\" style=\"margin-top: 1em\"\u003e\r\n\u003ca id=\"Station\" name=\"Station\"\u003eStation Elements\u003c/a\u003e\r\n\u003c/div\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eAddress\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nStructure describing \u003ca href=\"#Address\"\u003eaddress\u003c/a\u003e information.\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eCode\u003c/td\u003e\r\n\r\n\u003ctd\u003eStation code. Repeated from input.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLat\u003c/td\u003e\r\n\r\n\u003ctd\u003eLatitude.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLineCode1\u003c/td\u003e\r\n\r\n\u003ctd\u003eTwo-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,\r\nor SV) served by this station.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLineCode2\u003c/td\u003e\r\n\r\n\u003ctd\u003eAdditional line served by this station. This is often the case\r\nwhen stations have multiple platforms (e.g.: Gallery Place, Fort\r\nTotten, L'Enfant Plaza, and Metro Center).\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLineCode3\u003c/td\u003e\r\n\r\n\u003ctd\u003eSimilar to function as LineCodeX.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLineCode4\u003c/td\u003e\r\n\r\n\u003ctd\u003eSimilar to function as LineCodeX. Currently not in use.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLon\u003c/td\u003e\r\n\r\n\u003ctd\u003eLongitude.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eName\u003c/td\u003e\r\n\r\n\u003ctd\u003eStation name.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eStationTogether1\u003c/td\u003e\r\n\r\n\u003ctd\u003eFor stations with multiple platforms (e.g.: Gallery Place, Fort\r\nTotten, L'Enfant Plaza, and Metro Center), the additional\r\nStationCode will be listed here.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eStationTogether2\u003c/td\u003e\r\n\r\n\u003ctd\u003eSimilar in function to StationTogether2. Currently not in\r\nuse.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd colspan=\"2\"\u003e\r\n\u003cdiv class=\"text-primary\" style=\"margin-top: 1em\"\u003e\r\n\u003ca id=\"Address\" name=\"Address\"\u003eAddress Elements\u003c/a\u003e\r\n\u003c/div\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eCity\u003c/td\u003e\r\n\r\n\u003ctd\u003eCity.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eState\u003c/td\u003e\r\n\r\n\u003ctd\u003eState (abbreviated).\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eStreet\u003c/td\u003e\r\n\r\n\u003ctd\u003eStreet address (for GPS use).\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eZip\u003c/td\u003e\r\n\r\n\u003ctd\u003eZip code.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\u003c/tbody\u003e\r\n\u003c/table\u003e",
	"paths./Stations.get.operationId": "XML - Station List",
	"paths./Stations.get.parameters.length": 1,
	"paths./Stations.get.parameters[0].description": "Two-letter line code abbreviation:\n\n\u003cul\u003e\n\u003cli\u003eRD - Red\u003c/li\u003e\n\u003cli\u003eYL - Yellow\u003c/li\u003e\n\u003cli\u003eGR - Green\u003c/li\u003e\n\u003cli\u003eBL - Blue\u003c/li\u003e\n\u003cli\u003eOR - Orange\u003c/li\u003e\n\u003cli\u003eSV - Silver\u003c/li\u003e\n\u003c/ul\u003e",
	"paths./Stations.get.parameters[0].enum.length": 6,
	"paths./Stations.get.parameters[0].enum[0]": "RD",
	"paths./Stations.get.parameters[0].enum[1]": "YL",
	"paths./Stations.get.parameters[0].enum[2]": "GR",
	"paths./Stations.get.parameters[0].enum[3]": "BL",
	"paths./Stations.get.parameters[0].enum[4]": "OR",
	"paths./Stations.get.parameters[0].enum[5]": "SV",
	"paths./Stations.get.parameters[0].in": "query",
	"paths./Stations.get.parameters[0].name": "LineCode",
	"paths./Stations.get.parameters[0].type": "string",
	"paths./Stations.get.produces.length": 1,
	"paths./Stations.get.produces[0]": "application/xml",
	"paths./Stations.get.responses.200.description": "Default response code.",
	"paths./Stations.get.responses.200.examples.application/xml": "\n\n\u003cStationsResp\n    xmlns=\"http://www.wmata.com\"\n    xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\"\u003e\n    \u003cStations\u003e\n        \u003cStation\u003e\n            \u003cAddress\u003e\n                \u003cCity\u003eRockville\u003c/City\u003e\n                \u003cState\u003eMD\u003c/State\u003e\n                \u003cStreet\u003e15903 Somerville Drive\u003c/Street\u003e\n                \u003cZip\u003e20855\u003c/Zip\u003e\n            \u003c/Address\u003e\n            \u003cCode\u003eA15\u003c/Code\u003e\n            \u003cLat\u003e39.1199273249\u003c/Lat\u003e\n            \u003cLineCode1\u003eRD\u003c/LineCode1\u003e\n            \u003cLineCode2 i:nil=\"true\"/\u003e\n            \u003cLineCode3 i:nil=\"true\"/\u003e\n            \u003cLineCode4 i:nil=\"true\"/\u003e\n            \u003cLon\u003e-77.1646273343\u003c/Lon\u003e\n            \u003cName\u003eShady Grove\u003c/Name\u003e\n            \u003cStationTogether1/\u003e\n            \u003cStationTogether2/\u003e\n        \u003c/Station\u003e\n        \u003cStation\u003e\n            \u003cAddress\u003e\n                \u003cCity\u003eRockville\u003c/City\u003e\n                \u003cState\u003eMD\u003c/State\u003e\n                \u003cStreet\u003e251 Hungerford Drive\u003c/Street\u003e\n                \u003cZip\u003e20850\u003c/Zip\u003e\n            \u003c/Address\u003e\n            \u003cCode\u003eA14\u003c/Code\u003e\n            \u003cLat\u003e39.0843216075\u003c/Lat\u003e\n            \u003cLineCode1\u003eRD\u003c/LineCode1\u003e\n            \u003cLineCode2 i:nil=\"true\"/\u003e\n            \u003cLineCode3 i:nil=\"true\"/\u003e\n            \u003cLineCode4 i:nil=\"true\"/\u003e\n            \u003cLon\u003e-77.1461253392\u003c/Lon\u003e\n            \u003cName\u003eRockville\u003c/Name\u003e\n            \u003cStationTogether1/\u003e\n            \u003cStationTogether2/\u003e\n        \u003c/Station\u003e\n        \u003cStation\u003e\n            \u003cAddress\u003e\n                \u003cCity\u003eRockville\u003c/City\u003e\n                \u003cState\u003eMD\u003c/State\u003e\n                \u003cStreet\u003e1600 Chapman Avenue\u003c/Street\u003e\n                \u003cZip\u003e20852\u003c/Zip\u003e\n            \u003c/Address\u003e\n            \u003cCode\u003eA13\u003c/Code\u003e\n            \u003cLat\u003e39.0624676517\u003c/Lat\u003e\n            \u003cLineCode1\u003eRD\u003c/LineCode1\u003e\n            \u003cLineCode2 i:nil=\"true\"/\u003e\n            \u003cLineCode3 i:nil=\"true\"/\u003e\n            \u003cLineCode4 i:nil=\"true\"/\u003e\n            \u003cLon\u003e-77.1208179517\u003c/Lon\u003e\n            \u003cName\u003eTwinbrook\u003c/Name\u003e\n            \u003cStationTogether1/\u003e\n            \u003cStationTogether2/\u003e\n        \u003c/Station\u003e\n        \u003cStation\u003e\n            \u003cAddress\u003e\n                \u003cCity\u003eRockville\u003c/City\u003e\n                \u003cState\u003eMD\u003c/State\u003e\n                \u003cStreet\u003e5500 Marinelli Road\u003c/Street\u003e\n                \u003cZip\u003e20852\u003c/Zip\u003e\n            \u003c/Address\u003e\n            \u003cCode\u003eA12\u003c/Code\u003e\n            \u003cLat\u003e39.0481513573\u003c/Lat\u003e\n            \u003cLineCode1\u003eRD\u003c/LineCode1\u003e\n            \u003cLineCode2 i:nil=\"true\"/\u003e\n            \u003cLineCode3 i:nil=\"true\"/\u003e\n            \u003cLineCode4 i:nil=\"true\"/\u003e\n            \u003cLon\u003e-77.112829859\u003c/Lon\u003e\n            \u003cName\u003eWhite Flint\u003c/Name\u003e\n            \u003cStationTogether1/\u003e\n            \u003cStationTogether2/\u003e\n        \u003c/Station\u003e\n        \u003cStation\u003e\n            \u003cAddress\u003e\n                \u003cCity\u003eBethesda\u003c/City\u003e\n                \u003cState\u003eMD\u003c/State\u003e\n                \u003cStreet\u003e10300 Rockville Pike\u003c/Street\u003e\n                \u003cZip\u003e20852\u003c/Zip\u003e\n            \u003c/Address\u003e\n            \u003cCode\u003eA11\u003c/Code\u003e\n            \u003cLat\u003e39.02926895\u003c/Lat\u003e\n            \u003cLineCode1\u003eRD\u003c/LineCode1\u003e\n            \u003cLineCode2 i:nil=\"true\"/\u003e\n            \u003cLineCode3 i:nil=\"true\"/\u003e\n            \u003cLineCode4 i:nil=\"true\"/\u003e\n            \u003cLon\u003e-77.10384972\u003c/Lon\u003e\n            \u003cName\u003eGrosvenor\u003c/Name\u003e\n            \u003cStationTogether1/\u003e\n            \u003cStationTogether2/\u003e\n        \u003c/Station\u003e\n        \u003cStation\u003e\n            \u003cAddress\u003e\n                \u003cCity\u003eBethesda\u003c/City\u003e\n                \u003cState\u003eMD\u003c/State\u003e\n                \u003cStreet\u003e8810 Rockville Pike\u003c/Street\u003e\n                \u003cZip\u003e20814\u003c/Zip\u003e\n            \u003c/Address\u003e\n            \u003cCode\u003eA10\u003c/Code\u003e\n            \u003cLat\u003e39.0000564843\u003c/Lat\u003e\n            \u003cLineCode1\u003eRD\u003c/LineCode1\u003e\n            \u003cLineCode2 i:nil=\"true\"/\u003e\n            \u003cLineCode3 i:nil=\"true\"/\u003e\n            \u003cLineCode4 i:nil=\"true\"/\u003e\n            \u003cLon\u003e-77.0969522905\u003c/Lon\u003e\n            \u003cName\u003eMedical Center\u003c/Name\u003e\n            \u003cStationTogether1/\u003e\n            \u003cStationTogether2/\u003e\n        \u003c/Station\u003e\n        \u003cStation\u003e\n            \u003cAddress\u003e\n                \u003cCity\u003eBethesda\u003c/City\u003e\n                \u003cState\u003eMD\u003c/State\u003e\n                \u003cStreet\u003e7450 Wisconsin Avenue\u003c/Street\u003e\n                \u003cZip\u003e20814\u003c/Zip\u003e\n            \u003c/Address\u003e\n            \u003cCode\u003eA09\u003c/Code\u003e\n            \u003cLat\u003e38.9843936603\u003c/Lat\u003e\n            \u003cLineCode1\u003eRD\u003c/LineCode1\u003e\n            \u003cLineCode2 i:nil=\"true\"/\u003e\n            \u003cLineCode3 i:nil=\"true\"/\u003e\n            \u003cLineCode4 i:nil=\"true\"/\u003e\n            \u003cLon\u003e-77.0941291922\u003c/Lon\u003e\n            \u003cName\u003eBethesda\u003c/Name\u003e\n            \u003cStationTogether1/\u003e\n            \u003cStationTogether2/\u003e\n        \u003c/Station\u003e\n        \u003cStation\u003e\n            \u003cAddress\u003e\n                \u003cCity\u003eWashington\u003c/City\u003e\n                \u003cState\u003eDC\u003c/State\u003e\n                \u003cStreet\u003e5337 Wisconsin Avenue NW\u003c/Street\u003e\n                \u003cZip\u003e20015\u003c/Zip\u003e\n            \u003c/Address\u003e\n            \u003cCode\u003eA08\u003c/Code\u003e\n            \u003cLat\u003e38.9594838736\u003c/Lat\u003e\n            \u003cLineCode1\u003eRD\u003c/LineCode1\u003e\n            \u003cLineCode2 i:nil=\"true\"/\u003e\n            \u003cLineCode3 i:nil=\"true\"/\u003e\n            \u003cLineCode4 i:nil=\"true\"/\u003e\n            \u003cLon\u003e-77.084995805\u003c/Lon\u003e\n            \u003cName\u003eFriendship Heights\u003c/Name\u003e\n            \u003cStationTogether1/\u003e\n            \u003cStationTogether2/\u003e\n        \u003c/Station\u003e\n        \u003cStation\u003e\n            \u003cAddress\u003e\n                \u003cCity\u003eWashington\u003c/City\u003e\n                \u003cState\u003eDC\u003c/State\u003e\n                \u003cStreet\u003e4501 Wisconsin Avenue NW\u003c/Street\u003e\n                \u003cZip\u003e20016\u003c/Zip\u003e\n            \u003c/Address\u003e\n            \u003cCode\u003eA07\u003c/Code\u003e\n            \u003cLat\u003e38.9488514351\u003c/Lat\u003e\n            \u003cLineCode1\u003eRD\u003c/LineCode1\u003e\n            \u003cLineCode2 i:nil=\"true\"/\u003e\n            \u003cLineCode3 i:nil=\"true\"/\u003e\n            \u003cLineCode4 i:nil=\"true\"/\u003e\n            \u003cLon\u003e-77.0795873255\u003c/Lon\u003e\n            \u003cName\u003eTenleytown\u003c/Name\u003e\n            \u003cStationTogether1/\u003e\n            \u003cStationTogether2/\u003e\n        \u003c/Station\u003e\n        \u003cStation\u003e\n            \u003cAddress\u003e\n                \u003cCity\u003eWashington\u003c/City\u003e\n                \u003cState\u003eDC\u003c/State\u003e\n                \u003cStreet\u003e4200 Connecticut Avenue NW\u003c/Street\u003e\n                \u003cZip\u003e20008\u003c/Zip\u003e\n            \u003c/Address\u003e\n            \u003cCode\u003eA06\u003c/Code\u003e\n            \u003cLat\u003e38.9432652883\u003c/Lat\u003e\n            \u003cLineCode1\u003eRD\u003c/LineCode1\u003e\n            \u003cLineCode2 i:nil=\"true\"/\u003e\n            \u003cLineCode3 i:nil=\"true\"/\u003e\n            \u003cLineCode4 i:nil=\"true\"/\u003e\n            \u003cLon\u003e-77.0629861805\u003c/Lon\u003e\n            \u003cName\u003eVan Ness UDC\u003c/Name\u003e\n            \u003cStationTogether1/\u003e\n            \u003cStationTogether2/\u003e\n        \u003c/Station\u003e\n        \u003cStation\u003e\n            \u003cAddress\u003e\n                \u003cCity\u003eWashington\u003c/City\u003e\n                \u003cState\u003eDC\u003c/State\u003e\n                \u003cStreet\u003e3599 Connecticut Avenue NW\u003c/Street\u003e\n                \u003cZip\u003e20008\u003c/Zip\u003e\n            \u003c/Address\u003e\n            \u003cCode\u003eA05\u003c/Code\u003e\n            \u003cLat\u003e38.9347628908\u003c/Lat\u003e\n            \u003cLineCode1\u003eRD\u003c/LineCode1\u003e\n            \u003cLineCode2 i:nil=\"true\"/\u003e\n            \u003cLineCode3 i:nil=\"true\"/\u003e\n            \u003cLineCode4 i:nil=\"true\"/\u003e\n            \u003cLon\u003e-77.0580425191\u003c/Lon\u003e\n            \u003cName\u003eCleveland Park\u003c/Name\u003e\n            \u003cStationTogether1/\u003e\n            \u003cStationTogether2/\u003e\n        \u003c/Station\u003e\n        \u003cStation\u003e\n            \u003cAddress\u003e\n                \u003cCity\u003eWashington\u003c/City\u003e\n                \u003cState\u003eDC\u003c/State\u003e\n                \u003cStreet\u003e2700 Connecticut Ave., NW\u003c/Street\u003e\n                \u003cZip\u003e20008\u003c/Zip\u003e\n            \u003c/Address\u003e\n            \u003cCode\u003eA04\u003c/Code\u003e\n            \u003cLat\u003e38.9250851371\u003c/Lat\u003e\n            \u003cLineCode1\u003eRD\u003c/LineCode1\u003e\n            \u003cLineCode2 i:nil=\"true\"/\u003e\n            \u003cLineCode3 i:nil=\"true\"/\u003e\n            \u003cLineCode4 i:nil=\"true\"/\u003e\n            \u003cLon\u003e-77.0524180207\u003c/Lon\u003e\n            \u003cName\u003eWoodley Park Zoo\u003c/Name\u003e\n            \u003cStationTogether1/\u003e\n            \u003cStationTogether2/\u003e\n        \u003c/Station\u003e\n        \u003cStation\u003e\n            \u003cAddress\u003e\n                \u003cCity\u003eWashington\u003c/City\u003e\n                \u003cState\u003eDC\u003c/State\u003e\n                \u003cStreet\u003e1525 20th St. NW\u003c/Street\u003e\n                \u003cZip\u003e20036\u003c/Zip\u003e\n            \u003c/Address\u003e\n            \u003cCode\u003eA03\u003c/Code\u003e\n            \u003cLat\u003e38.9095980575\u003c/Lat\u003e\n            \u003cLineCode1\u003eRD\u003c/LineCode1\u003e\n            \u003cLineCode2 i:nil=\"true\"/\u003e\n            \u003cLineCode3 i:nil=\"true\"/\u003e\n            \u003cLineCode4 i:nil=\"true\"/\u003e\n            \u003cLon\u003e-77.0434143597\u003c/Lon\u003e\n            \u003cName\u003eDupont Circle\u003c/Name\u003e\n            \u003cStationTogether1/\u003e\n            \u003cStationTogether2/\u003e\n        \u003c/Station\u003e\n        \u003cStation\u003e\n            \u003cAddress\u003e\n                \u003cCity\u003eWashington\u003c/City\u003e\n                \u003cState\u003eDC\u003c/State\u003e\n                \u003cStreet\u003e1001 Connecticut Avenue NW\u003c/Street\u003e\n                \u003cZip\u003e20036\u003c/Zip\u003e\n            \u003c/Address\u003e\n            \u003cCode\u003eA02\u003c/Code\u003e\n            \u003cLat\u003e38.9032019462\u003c/Lat\u003e\n            \u003cLineCode1\u003eRD\u003c/LineCode1\u003e\n            \u003cLineCode2 i:nil=\"true\"/\u003e\n            \u003cLineCode3 i:nil=\"true\"/\u003e\n            \u003cLineCode4 i:nil=\"true\"/\u003e\n            \u003cLon\u003e-77.0397008272\u003c/Lon\u003e\n            \u003cName\u003eFarragut North\u003c/Name\u003e\n            \u003cStationTogether1/\u003e\n            \u003cStationTogether2/\u003e\n        \u003c/Station\u003e\n        \u003cStation\u003e\n            \u003cAddress\u003e\n                \u003cCity\u003eWashington\u003c/City\u003e\n                \u003cState\u003eDC\u003c/State\u003e\n                \u003cStreet\u003e607 13th St. NW\u003c/Street\u003e\n                \u003cZip\u003e20005\u003c/Zip\u003e\n            \u003c/Address\u003e\n            \u003cCode\u003eA01\u003c/Code\u003e\n            \u003cLat\u003e38.8983144732\u003c/Lat\u003e\n            \u003cLineCode1\u003eRD\u003c/LineCode1\u003e\n            \u003cLineCode2 i:nil=\"true\"/\u003e\n            \u003cLineCode3 i:nil=\"true\"/\u003e\n            \u003cLineCode4 i:nil=\"true\"/\u003e\n            \u003cLon\u003e-77.0280779971\u003c/Lon\u003e\n            \u003cName\u003eMetro Center\u003c/Name\u003e\n            \u003cStationTogether1\u003eC01\u003c/StationTogether1\u003e\n            \u003cStationTogether2/\u003e\n        \u003c/Station\u003e\n        \u003cStation\u003e\n            \u003cAddress\u003e\n                \u003cCity\u003eWashington\u003c/City\u003e\n                \u003cState\u003eDC\u003c/State\u003e\n                \u003cStreet\u003e630 H St. NW\u003c/Street\u003e\n                \u003cZip\u003e20001\u003c/Zip\u003e\n            \u003c/Address\u003e\n            \u003cCode\u003eB01\u003c/Code\u003e\n            \u003cLat\u003e38.8983168097\u003c/Lat\u003e\n            \u003cLineCode1\u003eRD\u003c/LineCode1\u003e\n            \u003cLineCode2 i:nil=\"true\"/\u003e\n            \u003cLineCode3 i:nil=\"true\"/\u003e\n            \u003cLineCode4 i:nil=\"true\"/\u003e\n            \u003cLon\u003e-77.0219153904\u003c/Lon\u003e\n            \u003cName\u003eGallery Place\u003c/Name\u003e\n            \u003cStationTogether1\u003eF01\u003c/StationTogether1\u003e\n            \u003cStationTogether2/\u003e\n        \u003c/Station\u003e\n        \u003cStation\u003e\n            \u003cAddress\u003e\n                \u003cCity\u003eWashington\u003c/City\u003e\n                \u003cState\u003eDC\u003c/State\u003e\n                \u003cStreet\u003e450 F Street NW\u003c/Street\u003e\n                \u003cZip\u003e20001\u003c/Zip\u003e\n            \u003c/Address\u003e\n            \u003cCode\u003eB02\u003c/Code\u003e\n            \u003cLat\u003e38.8960903176\u003c/Lat\u003e\n            \u003cLineCode1\u003eRD\u003c/LineCode1\u003e\n            \u003cLineCode2 i:nil=\"true\"/\u003e\n            \u003cLineCode3 i:nil=\"true\"/\u003e\n            \u003cLineCode4 i:nil=\"true\"/\u003e\n            \u003cLon\u003e-77.0166389566\u003c/Lon\u003e\n            \u003cName\u003eJudiciary Square\u003c/Name\u003e\n            \u003cStationTogether1/\u003e\n            \u003cStationTogether2/\u003e\n        \u003c/Station\u003e\n        \u003cStation\u003e\n            \u003cAddress\u003e\n                \u003cCity\u003eWashington\u003c/City\u003e\n                \u003cState\u003eDC\u003c/State\u003e\n                \u003cStreet\u003e701 First St. NE\u003c/Street\u003e\n                \u003cZip\u003e20002\u003c/Zip\u003e\n            \u003c/Address\u003e\n            \u003cCode\u003eB03\u003c/Code\u003e\n            \u003cLat\u003e38.8977660392\u003c/Lat\u003e\n            \u003cLineCode1\u003eRD\u003c/LineCode1\u003e\n            \u003cLineCode2 i:nil=\"true\"/\u003e\n            \u003cLineCode3 i:nil=\"true\"/\u003e\n            \u003cLineCode4 i:nil=\"true\"/\u003e\n            \u003cLon\u003e-77.0074142921\u003c/Lon\u003e\n            \u003cName\u003eUnion Station\u003c/Name\u003e\n            \u003cStationTogether1/\u003e\n            \u003cStationTogether2/\u003e\n        \u003c/Station\u003e\n        \u003cStation\u003e\n            \u003cAddress\u003e\n                \u003cCity\u003eWashington\u003c/City\u003e\n                \u003cState\u003eDC\u003c/State\u003e\n                \u003cStreet\u003e200 Florida Ave N.E.\u003c/Street\u003e\n                \u003cZip\u003e20002\u003c/Zip\u003e\n            \u003c/Address\u003e\n            \u003cCode\u003eB35\u003c/Code\u003e\n            \u003cLat\u003e38.9070162121\u003c/Lat\u003e\n            \u003cLineCode1\u003eRD\u003c/LineCode1\u003e\n            \u003cLineCode2 i:nil=\"true\"/\u003e\n            \u003cLineCode3 i:nil=\"true\"/\u003e\n            \u003cLineCode4 i:nil=\"true\"/\u003e\n            \u003cLon\u003e-77.0030204472\u003c/Lon\u003e\n            \u003cName\u003eNew York Avenue\u003c/Name\u003e\n            \u003cStationTogether1/\u003e\n            \u003cStationTogether2/\u003e\n        \u003c/Station\u003e\n        \u003cStation\u003e\n            \u003cAddress\u003e\n                \u003cCity\u003eWashington\u003c/City\u003e\n                \u003cState\u003eDC\u003c/State\u003e\n                \u003cStreet\u003e919 Rhode Island Avenue NE\u003c/Street\u003e\n                \u003cZip\u003e20018\u003c/Zip\u003e\n            \u003c/Address\u003e\n            \u003cCode\u003eB04\u003c/Code\u003e\n            \u003cLat\u003e38.9210596891\u003c/Lat\u003e\n            \u003cLineCode1\u003eRD\u003c/LineCode1\u003e\n            \u003cLineCode2 i:nil=\"true\"/\u003e\n            \u003cLineCode3 i:nil=\"true\"/\u003e\n            \u003cLineCode4 i:nil=\"true\"/\u003e\n            \u003cLon\u003e-76.9959369166\u003c/Lon\u003e\n            \u003cName\u003eRhode Island Avenue\u003c/Name\u003e\n            \u003cStationTogether1/\u003e\n            \u003cStationTogether2/\u003e\n        \u003c/Station\u003e\n        \u003cStation\u003e\n            \u003cAddress\u003e\n                \u003cCity\u003eWashington\u003c/City\u003e\n                \u003cState\u003eDC\u003c/State\u003e\n                \u003cStreet\u003e801 Michigan Avenue NE\u003c/Street\u003e\n                \u003cZip\u003e20017\u003c/Zip\u003e\n            \u003c/Address\u003e\n            \u003cCode\u003eB05\u003c/Code\u003e\n            \u003cLat\u003e38.9332109913\u003c/Lat\u003e\n            \u003cLineCode1\u003eRD\u003c/LineCode1\u003e\n            \u003cLineCode2 i:nil=\"true\"/\u003e\n            \u003cLineCode3 i:nil=\"true\"/\u003e\n            \u003cLineCode4 i:nil=\"true\"/\u003e\n            \u003cLon\u003e-76.9945342851\u003c/Lon\u003e\n            \u003cName\u003eBrookland\u003c/Name\u003e\n            \u003cStationTogether1/\u003e\n            \u003cStationTogether2/\u003e\n        \u003c/Station\u003e\n        \u003cStation\u003e\n            \u003cAddress\u003e\n                \u003cCity\u003eWashington\u003c/City\u003e\n                \u003cState\u003eDC\u003c/State\u003e\n                \u003cStreet\u003e550 Galloway Street NE\u003c/Street\u003e\n                \u003cZip\u003e20011\u003c/Zip\u003e\n            \u003c/Address\u003e\n            \u003cCode\u003eB06\u003c/Code\u003e\n            \u003cLat\u003e38.9518467675\u003c/Lat\u003e\n            \u003cLineCode1\u003eRD\u003c/LineCode1\u003e\n            \u003cLineCode2 i:nil=\"true\"/\u003e\n            \u003cLineCode3 i:nil=\"true\"/\u003e\n            \u003cLineCode4 i:nil=\"true\"/\u003e\n            \u003cLon\u003e-77.0022030768\u003c/Lon\u003e\n            \u003cName\u003eFort Totten\u003c/Name\u003e\n            \u003cStationTogether1\u003eE06\u003c/StationTogether1\u003e\n            \u003cStationTogether2/\u003e\n        \u003c/Station\u003e\n        \u003cStation\u003e\n            \u003cAddress\u003e\n                \u003cCity\u003eWashington\u003c/City\u003e\n                \u003cState\u003eDC\u003c/State\u003e\n                \u003cStreet\u003e327 Cedar Street NW\u003c/Street\u003e\n                \u003cZip\u003e20012\u003c/Zip\u003e\n            \u003c/Address\u003e\n            \u003cCode\u003eB07\u003c/Code\u003e\n            \u003cLat\u003e38.976078531\u003c/Lat\u003e\n            \u003cLineCode1\u003eRD\u003c/LineCode1\u003e\n            \u003cLineCode2 i:nil=\"true\"/\u003e\n            \u003cLineCode3 i:nil=\"true\"/\u003e\n            \u003cLineCode4 i:nil=\"true\"/\u003e\n            \u003cLon\u003e-77.0181766987\u003c/Lon\u003e\n            \u003cName\u003eTakoma\u003c/Name\u003e\n            \u003cStationTogether1/\u003e\n            \u003cStationTogether2/\u003e\n        \u003c/Station\u003e\n        \u003cStation\u003e\n            \u003cAddress\u003e\n                \u003cCity\u003eSilver Spring\u003c/City\u003e\n                \u003cState\u003eMD\u003c/State\u003e\n                \u003cStreet\u003e8400 Colesville Road\u003c/Street\u003e\n                \u003cZip\u003e20910\u003c/Zip\u003e\n            \u003c/Address\u003e\n            \u003cCode\u003eB08\u003c/Code\u003e\n            \u003cLat\u003e38.9939493747\u003c/Lat\u003e\n            \u003cLineCode1\u003eRD\u003c/LineCode1\u003e\n            \u003cLineCode2 i:nil=\"true\"/\u003e\n            \u003cLineCode3 i:nil=\"true\"/\u003e\n            \u003cLineCode4 i:nil=\"true\"/\u003e\n            \u003cLon\u003e-77.0310178268\u003c/Lon\u003e\n            \u003cName\u003eSilver Spring\u003c/Name\u003e\n            \u003cStationTogether1/\u003e\n            \u003cStationTogether2/\u003e\n        \u003c/Station\u003e\n        \u003cStation\u003e\n            \u003cAddress\u003e\n                \u003cCity\u003eForest Glen\u003c/City\u003e\n                \u003cState\u003eMD\u003c/State\u003e\n                \u003cStreet\u003e9730 Georgia Avenue\u003c/Street\u003e\n                \u003cZip\u003e20910\u003c/Zip\u003e\n            \u003c/Address\u003e\n            \u003cCode\u003eB09\u003c/Code\u003e\n            \u003cLat\u003e39.0149542752\u003c/Lat\u003e\n            \u003cLineCode1\u003eRD\u003c/LineCode1\u003e\n            \u003cLineCode2 i:nil=\"true\"/\u003e\n            \u003cLineCode3 i:nil=\"true\"/\u003e\n            \u003cLineCode4 i:nil=\"true\"/\u003e\n            \u003cLon\u003e-77.0429165548\u003c/Lon\u003e\n            \u003cName\u003eForest Glen\u003c/Name\u003e\n            \u003cStationTogether1/\u003e\n            \u003cStationTogether2/\u003e\n        \u003c/Station\u003e\n        \u003cStation\u003e\n            \u003cAddress\u003e\n                \u003cCity\u003eSilver Spring\u003c/City\u003e\n                \u003cState\u003eMD\u003c/State\u003e\n                \u003cStreet\u003e11171 Georgia Avenue\u003c/Street\u003e\n                \u003cZip\u003e20902\u003c/Zip\u003e\n            \u003c/Address\u003e\n            \u003cCode\u003eB10\u003c/Code\u003e\n            \u003cLat\u003e39.0375271436\u003c/Lat\u003e\n            \u003cLineCode1\u003eRD\u003c/LineCode1\u003e\n            \u003cLineCode2 i:nil=\"true\"/\u003e\n            \u003cLineCode3 i:nil=\"true\"/\u003e\n            \u003cLineCode4 i:nil=\"true\"/\u003e\n            \u003cLon\u003e-77.0501070535\u003c/Lon\u003e\n            \u003cName\u003eWheaton\u003c/Name\u003e\n            \u003cStationTogether1/\u003e\n            \u003cStationTogether2/\u003e\n        \u003c/Station\u003e\n        \u003cStation\u003e\n            \u003cAddress\u003e\n                \u003cCity\u003eSilver Spring\u003c/City\u003e\n                \u003cState\u003eMD\u003c/State\u003e\n                \u003cStreet\u003e12501 Georgia Avenue\u003c/Street\u003e\n                \u003cZip\u003e20906\u003c/Zip\u003e\n            \u003c/Address\u003e\n            \u003cCode\u003eB11\u003c/Code\u003e\n            \u003cLat\u003e39.0617837655\u003c/Lat\u003e\n            \u003cLineCode1\u003eRD\u003c/LineCode1\u003e\n            \u003cLineCode2 i:nil=\"true\"/\u003e\n            \u003cLineCode3 i:nil=\"true\"/\u003e\n            \u003cLineCode4 i:nil=\"true\"/\u003e\n            \u003cLon\u003e-77.0535573593\u003c/Lon\u003e\n            \u003cName\u003eGlenmont\u003c/Name\u003e\n            \u003cStationTogether1/\u003e\n            \u003cStationTogether2/\u003e\n        \u003c/Station\u003e\n    \u003c/Stations\u003e\n\u003c/StationsResp\u003e",
	"paths./json/jLines.get.description": "\u003ch4 class=\"text-primary\"\u003eDescription\u003c/h4\u003e\r\n\r\n\u003cp\u003eReturns information about all rail lines.\u003c/p\u003e\r\n\r\n\u003ch4 class=\"text-primary\"\u003eResponse Elements\u003c/h4\u003e\r\n\r\n\u003ctable class=\"table table-condensed table-hover\"\u003e\r\n\u003cthead\u003e\r\n\u003ctr\u003e\r\n\u003cth class=\"col-md-3\"\u003eElement\u003c/th\u003e\r\n\r\n\u003cth\u003eDescription\u003c/th\u003e\r\n\u003c/tr\u003e\r\n\u003c/thead\u003e\r\n\r\n\u003ctbody\u003e\r\n\u003ctr\u003e\r\n\u003ctd\u003eLines\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nArray containing line information (\u003ca href=\"#Line\"\u003eLine\u003c/a\u003e).\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd colspan=\"2\"\u003e\r\n\u003cdiv class=\"text-primary\" style=\"margin-top: 1em\"\u003e\r\n\u003ca id=\"Line\" name=\"Line\"\u003eLine Elements\u003c/a\u003e\r\n\u003c/div\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eDisplayName\u003c/td\u003e\r\n\r\n\u003ctd\u003eFull name of line color.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eEndStationCode\u003c/td\u003e\r\n\r\n\u003ctd\u003eEnd station code. For example, will be E10 (Greenbelt) for the\r\nGreen Line, B11 (Glenmont) for the Red Line, etc. Use this value in\r\nother rail-related APIs to retrieve data about a station.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eInternalDestination1\u003c/td\u003e\r\n\r\n\u003ctd\u003eIntermediate terminal station code. During normal service, some\r\ntrains on some lines might end their trip prior to the\r\nStartStationCode or EndStationCode. A good example is on the Red\r\nLine where some trains stop at A11 (Grosvenor) or B08 (Silver\r\nSpring). Empty string if not defined.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eInternalDestination2\u003c/td\u003e\r\n\r\n\u003ctd\u003eSimilar to InternalDestination1.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLineCode\u003c/td\u003e\r\n\r\n\u003ctd\u003eTwo-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,\r\nor SV).\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eStartStationCode\u003c/td\u003e\r\n\r\n\u003ctd\u003eStart station code. For example, will be F11 (Branch Avenue)\r\nfor the Green Line, A15 (Shady Grove) for the Red Line, etc. Use\r\nthis value in other rail-related APIs to retrieve data about a\r\nstation.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\u003c/tbody\u003e\r\n\u003c/table\u003e",
	"paths./json/jLines.get.operationId": "JSON - Lines",
	"paths./json/jLines.get.produces.length": 1,
	"paths./json/jLines.get.produces[0]": "application/json",
	"paths./json/jLines.get.responses.200.description": "Default response code.",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines.length": 6,
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[0].DisplayName": "Green",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[0].EndStationCode": "E10",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[0].InternalDestination1": "",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[0].InternalDestination2": "",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[0].LineCode": "GR",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[0].StartStationCode": "F11",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[1].DisplayName": "Blue",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[1].EndStationCode": "G05",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[1].InternalDestination1": "",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[1].InternalDestination2": "",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[1].LineCode": "BL",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[1].StartStationCode": "J03",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[2].DisplayName": "Silver",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[2].EndStationCode": "G05",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[2].InternalDestination1": "",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[2].InternalDestination2": "",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[2].LineCode": "SV",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[2].StartStationCode": "N06",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[3].DisplayName": "Red",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[3].EndStationCode": "B11",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[3].InternalDestination1": "A11",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[3].InternalDestination2": "B08",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[3].LineCode": "RD",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[3].StartStationCode": "A15",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[4].DisplayName": "Orange",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[4].EndStationCode": "D13",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[4].InternalDestination1": "",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[4].InternalDestination2": "",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[4].LineCode": "OR",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[4].StartStationCode": "K08",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[5].DisplayName": "Yellow",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[5].EndStationCode": "E06",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[5].InternalDestination1": "E01",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[5].InternalDestination2": "",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[5].LineCode": "YL",
	"paths./json/jLines.get.responses.200.examples.application/json.Lines[5].StartStationCode": "C15",
	"paths./json/jPath.get.description": "\u003ch4 class=\"text-primary\"\u003eDescription\u003c/h4\u003e\r\n\r\n\u003cp\u003eReturns a set of ordered stations and distances between two stations on the\r\n\u003cem\u003esame line\u003c/em\u003e.\u003c/p\u003e\r\n\r\n\u003cp\u003eNote that this method is not suitable on its own as a pathfinding solution\r\nbetween stations.\u003c/p\u003e\r\n\r\n\u003ch4 class=\"text-primary\"\u003eResponse Elements\u003c/h4\u003e\r\n\r\n\u003ctable class=\"table table-condensed table-hover\"\u003e\r\n\u003cthead\u003e\r\n\u003ctr\u003e\r\n\u003cth class=\"col-md-3\"\u003eElement\u003c/th\u003e\r\n\r\n\u003cth\u003eDescription\u003c/th\u003e\r\n\u003c/tr\u003e\r\n\u003c/thead\u003e\r\n\r\n\u003ctbody\u003e\r\n\u003ctr\u003e\r\n\u003ctd\u003ePath\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nArray containing path details (\u003ca href=\r\n\"#MetroPathItem\"\u003eMetroPathItem\u003c/a\u003e)\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd colspan=\"2\"\u003e\r\n\u003cdiv class=\"text-primary\" style=\"margin-top: 1em\"\u003e\r\n\u003ca id=\"MetroPathItem\" name=\"MetroPathItem\"\u003eMetroPathItem\r\nElements\u003c/a\u003e\r\n\u003c/div\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eDistanceToPrev\u003c/td\u003e\r\n\r\n\u003ctd\u003eDistance in feet to the previous station in the list.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLineCode\u003c/td\u003e\r\n\r\n\u003ctd\u003eTwo-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,\r\nor SV) this station's platform is on.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eSeqNum\u003c/td\u003e\r\n\r\n\u003ctd\u003eOrdered sequence number.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eStationCode\u003c/td\u003e\r\n\r\n\u003ctd\u003eStation code for this station. Use this value in other\r\nrail-related APIs to retrieve data about a station.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eStationName\u003c/td\u003e\r\n\r\n\u003ctd\u003eFull name for this station, as shown on the WMATA website.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\u003c/tbody\u003e\r\n\u003c/table\u003e",
	"paths./json/jPath.get.operationId": "JSON - Path Between Stations",
	"paths./json/jPath.get.parameters.length": 2,
	"paths./json/jPath.get.parameters[0].default": "N06",
	"paths./json/jPath.get.parameters[0].description": "Station code for the origin station.  Use the Station List method to return a list of all station codes.",
	"paths./json/jPath.get.parameters[0].enum.length": 1,
	"paths./json/jPath.get.parameters[0].enum[0]": "N06",
	"paths./json/jPath.get.parameters[0].in": "query",
	"paths./json/jPath.get.parameters[0].name": "FromStationCode",
	"paths./json/jPath.get.parameters[0].required": true,
	"paths./json/jPath.get.parameters[0].type": "string",
	"paths./json/jPath.get.parameters[1].default": "G05",
	"paths./json/jPath.get.parameters[1].description": "Station code for the destination station.  Use the Station List method to return a list of all station codes.",
	"paths./json/jPath.get.parameters[1].enum.length": 1,
	"paths./json/jPath.get.parameters[1].enum[0]": "G05",
	"paths./json/jPath.get.parameters[1].in": "query",
	"paths./json/jPath.get.parameters[1].name": "ToStationCode",
	"paths./json/jPath.get.parameters[1].required": true,
	"paths./json/jPath.get.parameters[1].type": "string",
	"paths./json/jPath.get.produces.length": 1,
	"paths./json/jPath.get.produces[0]": "application/json",
	"paths./json/jPath.get.responses.200.description": "Default response code.",
	"paths./json/jPath.get.responses.200.examples.application/json.Path.length": 28,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[0].DistanceToPrev": 0,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[0].LineCode": "SV",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[0].SeqNum": 1,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[0].StationCode": "N06",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[0].StationName": "Wiehle-Reston East",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[10].DistanceToPrev": 4936,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[10].LineCode": "SV",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[10].SeqNum": 11,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[10].StationCode": "C05",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[10].StationName": "Rosslyn",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[11].DistanceToPrev": 6993,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[11].LineCode": "SV",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[11].SeqNum": 12,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[11].StationCode": "C04",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[11].StationName": "Foggy Bottom",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[12].DistanceToPrev": 2783,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[12].LineCode": "SV",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[12].SeqNum": 13,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[12].StationCode": "C03",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[12].StationName": "Farragut West",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[13].DistanceToPrev": 2001,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[13].LineCode": "SV",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[13].SeqNum": 14,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[13].StationCode": "C02",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[13].StationName": "McPherson Square",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[14].DistanceToPrev": 2359,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[14].LineCode": "SV",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[14].SeqNum": 15,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[14].StationCode": "C01",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[14].StationName": "Metro Center",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[15].DistanceToPrev": 1561,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[15].LineCode": "SV",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[15].SeqNum": 16,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[15].StationCode": "D01",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[15].StationName": "Federal Triangle",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[16].DistanceToPrev": 2016,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[16].LineCode": "SV",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[16].SeqNum": 17,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[16].StationCode": "D02",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[16].StationName": "Smithsonian",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[17].DistanceToPrev": 2643,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[17].LineCode": "SV",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[17].SeqNum": 18,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[17].StationCode": "D03",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[17].StationName": "L'Enfant Plaza",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[18].DistanceToPrev": 1757,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[18].LineCode": "SV",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[18].SeqNum": 19,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[18].StationCode": "D04",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[18].StationName": "Federal Center SW",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[19].DistanceToPrev": 3052,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[19].LineCode": "SV",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[19].SeqNum": 20,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[19].StationCode": "D05",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[19].StationName": "Capitol South",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[1].DistanceToPrev": 30867,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[1].LineCode": "SV",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[1].SeqNum": 2,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[1].StationCode": "N04",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[1].StationName": "Spring Hill",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[20].DistanceToPrev": 2703,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[20].LineCode": "SV",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[20].SeqNum": 21,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[20].StationCode": "D06",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[20].StationName": "Eastern Market",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[21].DistanceToPrev": 3289,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[21].LineCode": "SV",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[21].SeqNum": 22,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[21].StationCode": "D07",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[21].StationName": "Potomac Avenue",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[22].DistanceToPrev": 3750,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[22].LineCode": "SV",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[22].SeqNum": 23,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[22].StationCode": "D08",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[22].StationName": "Stadium Armory",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[23].DistanceToPrev": 12162,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[23].LineCode": "SV",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[23].SeqNum": 24,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[23].StationCode": "G01",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[23].StationName": "Benning Road",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[24].DistanceToPrev": 7779,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[24].LineCode": "SV",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[24].SeqNum": 25,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[24].StationCode": "G02",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[24].StationName": "Capitol Heights",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[25].DistanceToPrev": 5215,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[25].LineCode": "SV",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[25].SeqNum": 26,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[25].StationCode": "G03",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[25].StationName": "Addison Road",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[26].DistanceToPrev": 7960,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[26].LineCode": "SV",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[26].SeqNum": 27,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[26].StationCode": "G04",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[26].StationName": "Morgan Blvd",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[27].DistanceToPrev": 7256,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[27].LineCode": "SV",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[27].SeqNum": 28,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[27].StationCode": "G05",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[27].StationName": "Largo Town Center",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[2].DistanceToPrev": 3634,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[2].LineCode": "SV",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[2].SeqNum": 3,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[2].StationCode": "N03",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[2].StationName": "Greensboro",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[3].DistanceToPrev": 3902,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[3].LineCode": "SV",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[3].SeqNum": 4,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[3].StationCode": "N02",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[3].StationName": "Tysons Corner",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[4].DistanceToPrev": 3440,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[4].LineCode": "SV",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[4].SeqNum": 5,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[4].StationCode": "N01",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[4].StationName": "McLean",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[5].DistanceToPrev": 24745,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[5].LineCode": "SV",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[5].SeqNum": 6,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[5].StationCode": "K05",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[5].StationName": "E Falls Church",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[6].DistanceToPrev": 13156,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[6].LineCode": "SV",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[6].SeqNum": 7,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[6].StationCode": "K04",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[6].StationName": "Ballston",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[7].DistanceToPrev": 2980,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[7].LineCode": "SV",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[7].SeqNum": 8,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[7].StationCode": "K03",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[7].StationName": "Virginia Square",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[8].DistanceToPrev": 2473,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[8].LineCode": "SV",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[8].SeqNum": 9,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[8].StationCode": "K02",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[8].StationName": "Clarendon",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[9].DistanceToPrev": 2687,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[9].LineCode": "SV",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[9].SeqNum": 10,
	"paths./json/jPath.get.responses.200.examples.application/json.Path[9].StationCode": "K01",
	"paths./json/jPath.get.responses.200.examples.application/json.Path[9].StationName": "Court House",
	"paths./json/jSrcStationToDstStationInfo.get.description": "\u003ch4 class=\"text-primary\"\u003eDescription\u003c/h4\u003e\r\n\r\n\u003cp\u003eReturns a distance, fare information, and estimated travel time between any\r\ntwo stations, including those on different lines. Omit both parameters to\r\nretrieve data for all stations.\u003c/p\u003e\r\n\r\n\u003ch4 class=\"text-primary\"\u003eResponse Elements\u003c/h4\u003e\r\n\r\n\u003ctable class=\"table table-condensed table-hover\"\u003e\r\n\u003cthead\u003e\r\n\u003ctr\u003e\r\n\u003cth class=\"col-md-3\"\u003eElement\u003c/th\u003e\r\n\r\n\u003cth\u003eDescription\u003c/th\u003e\r\n\u003c/tr\u003e\r\n\u003c/thead\u003e\r\n\r\n\u003ctbody\u003e\r\n\u003ctr\u003e\r\n\u003ctd\u003eStationToStationInfos\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nArray containing station to station information (\u003ca href=\r\n\"#StationToStationInfo\"\u003eStationToStationInfo\u003c/a\u003e).\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd colspan=\"2\"\u003e\r\n\u003cdiv class=\"text-primary\" style=\"margin-top: 1em\"\u003e\r\n\u003ca id=\"StationToStationInfo\" name=\r\n\"StationToStationInfo\"\u003eStationToStationInfo Elements\u003c/a\u003e\r\n\u003c/div\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eCompositeMiles\u003c/td\u003e\r\n\r\n\u003ctd\u003eDistance in miles from the source to destination station.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eDestinationStation\u003c/td\u003e\r\n\r\n\u003ctd\u003eDestination station code. Use this value in other rail-related\r\nAPIs to retrieve data about a station.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eRailFare\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nStructure containing \u003ca href=\"#RailFare\"\u003efare\u003c/a\u003e information.\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eRailTime\u003c/td\u003e\r\n\r\n\u003ctd\u003eEstimated travel time (schedule time) in minutes between the source and\r\ndestination station. This is not correlated to minutes \u003cspan class=\"text-info\"\u003e(Min)\u003c/span\u003e in Real-Time Rail Predictions.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eSourceStation\u003c/td\u003e\r\n\r\n\u003ctd\u003eOrigin station code. Use this value in other rail-related APIs\r\nto retrieve data about a station.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd colspan=\"2\"\u003e\r\n\u003cdiv class=\"text-primary\" style=\"margin-top: 1em\"\u003e\r\n\u003ca id=\"RailFare\" name=\"RailFare\"\u003eRailFare Elements\u003c/a\u003e\r\n\u003c/div\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eOffPeakTime\u003c/td\u003e\r\n\r\n\u003ctd\u003eFare during off-peak times (times other than the ones described\r\nbelow).\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003ePeakTime\u003c/td\u003e\r\n\r\n\u003ctd\u003eFare during peak times (weekdays from opening to 9:30 AM and\r\n3-7 PM, and weekends from midnight to closing).\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eSeniorDisabled\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nReduced fare for \u003ca href=\r\n\"http://www.wmata.com/fares/reduced.cfm\"\u003esenior citizens or\r\npeople with disabilities\u003c/a\u003e.\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\u003c/tbody\u003e\r\n\u003c/table\u003e",
	"paths./json/jSrcStationToDstStationInfo.get.operationId": "JSON - Station to Station Information",
	"paths./json/jSrcStationToDstStationInfo.get.parameters.length": 2,
	"paths./json/jSrcStationToDstStationInfo.get.parameters[0].default": "E10",
	"paths./json/jSrcStationToDstStationInfo.get.parameters[0].description": "Station code for the origin station.  Use the Station List method to return a list of all station codes.",
	"paths./json/jSrcStationToDstStationInfo.get.parameters[0].enum.length": 1,
	"paths./json/jSrcStationToDstStationInfo.get.parameters[0].enum[0]": "E10",
	"paths./json/jSrcStationToDstStationInfo.get.parameters[0].in": "query",
	"paths./json/jSrcStationToDstStationInfo.get.parameters[0].name": "FromStationCode",
	"paths./json/jSrcStationToDstStationInfo.get.parameters[0].type": "string",
	"paths./json/jSrcStationToDstStationInfo.get.parameters[1].default": "J03",
	"paths./json/jSrcStationToDstStationInfo.get.parameters[1].description": "Station code for the destination station.  Use the Station List method to return a list of all station codes.",
	"paths./json/jSrcStationToDstStationInfo.get.parameters[1].enum.length": 1,
	"paths./json/jSrcStationToDstStationInfo.get.parameters[1].enum[0]": "J03",
	"paths./json/jSrcStationToDstStationInfo.get.parameters[1].in": "query",
	"paths./json/jSrcStationToDstStationInfo.get.parameters[1].name": "ToStationCode",
	"paths./json/jSrcStationToDstStationInfo.get.parameters[1].type": "string",
	"paths./json/jSrcStationToDstStationInfo.get.produces.length": 1,
	"paths./json/jSrcStationToDstStationInfo.get.produces[0]": "application/json",
	"paths./json/jSrcStationToDstStationInfo.get.responses.200.description": "Default response code.",
	"paths./json/jSrcStationToDstStationInfo.get.responses.200.examples.application/json.StationToStationInfos.length": 1,
	"paths./json/jSrcStationToDstStationInfo.get.responses.200.examples.application/json.StationToStationInfos[0].CompositeMiles": 25.41,
	"paths./json/jSrcStationToDstStationInfo.get.responses.200.examples.application/json.StationToStationInfos[0].DestinationStation": "J03",
	"paths./json/jSrcStationToDstStationInfo.get.responses.200.examples.application/json.StationToStationInfos[0].RailFare.OffPeakTime": 3.6,
	"paths./json/jSrcStationToDstStationInfo.get.responses.200.examples.application/json.StationToStationInfos[0].RailFare.PeakTime": 5.9,
	"paths./json/jSrcStationToDstStationInfo.get.responses.200.examples.application/json.StationToStationInfos[0].RailFare.SeniorDisabled": 2.95,
	"paths./json/jSrcStationToDstStationInfo.get.responses.200.examples.application/json.StationToStationInfos[0].RailTime": 66,
	"paths./json/jSrcStationToDstStationInfo.get.responses.200.examples.application/json.StationToStationInfos[0].SourceStation": "E10",
	"paths./json/jStationEntrances.get.description": "\u003ch4 class=\"text-primary\"\u003eDescription\u003c/h4\u003e\r\n\r\n\u003cp\u003eReturns a list of nearby station entrances based on latitude, longitude, and\r\nradius (meters). Omit search parameters to return all station entrances.\u003c/p\u003e\r\n\r\n\u003ch4 class=\"text-primary\"\u003eResponse Elements\u003c/h4\u003e\r\n\r\n\u003ctable class=\"table table-condensed table-hover\"\u003e\r\n\u003cthead\u003e\r\n\u003ctr\u003e\r\n\u003cth class=\"col-md-3\"\u003eElement\u003c/th\u003e\r\n\r\n\u003cth\u003eDescription\u003c/th\u003e\r\n\u003c/tr\u003e\r\n\u003c/thead\u003e\r\n\r\n\u003ctbody\u003e\r\n\u003ctr\u003e\r\n\u003ctd\u003eEntrances\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nArray containing detailed information about station entrances\r\n(\u003ca href=\"#StationEntrance\"\u003eStationEntrance\u003c/a\u003e).\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd colspan=\"2\"\u003e\r\n\u003cdiv class=\"text-primary\" style=\"margin-top: 1em\"\u003e\r\n\u003ca id=\"StationEntrance\" name=\r\n\"StationEntrance\"\u003eStationEntrance Elements\u003c/a\u003e\r\n\u003c/div\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eDescription\u003c/td\u003e\r\n\r\n\u003ctd\u003eAdditional information for the entrance, if available.\r\nCurrently available data usually shows the same value as the Name\r\nelement.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd style=\"text-decoration: line-through\"\u003eID\u003c/td\u003e\r\n\r\n\u003ctd\u003e\u003cspan class=\"text-danger\"\u003eDeprecated.\u003c/span\u003e\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLat\u003c/td\u003e\r\n\r\n\u003ctd\u003eLatitude.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLon\u003c/td\u003e\r\n\r\n\u003ctd\u003eLongitude.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eName\u003c/td\u003e\r\n\r\n\u003ctd\u003eName of the entrance (usually the station name and nearest\r\nintersection).\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eStationCode1\u003c/td\u003e\r\n\r\n\u003ctd\u003eThe station code associated with this entrance. Use this value\r\nin other rail-related APIs to retrieve data about a station.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eStationCode2\u003c/td\u003e\r\n\r\n\u003ctd\u003eFor stations containing multiple platforms (e.g.: Gallery\r\nPlace, Fort Totten, L'Enfant Plaza, and Metro Center), the other\r\nstation code.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\u003c/tbody\u003e\r\n\u003c/table\u003e",
	"paths./json/jStationEntrances.get.operationId": "JSON - Station Entrances",
	"paths./json/jStationEntrances.get.parameters.length": 3,
	"paths./json/jStationEntrances.get.parameters[0].description": "Center point Latitude, required if Longitude and Radius are specified.",
	"paths./json/jStationEntrances.get.parameters[0].enum.length": 1,
	"paths./json/jStationEntrances.get.parameters[0].enum[0]": "38.8978168",
	"paths./json/jStationEntrances.get.parameters[0].in": "query",
	"paths./json/jStationEntrances.get.parameters[0].name": "Lat",
	"paths./json/jStationEntrances.get.parameters[0].type": "number",
	"paths./json/jStationEntrances.get.parameters[1].description": "Center point Longitude, required if Latitude and Radius are specified.",
	"paths./json/jStationEntrances.get.parameters[1].enum.length": 1,
	"paths./json/jStationEntrances.get.parameters[1].enum[0]": "-77.0404246",
	"paths./json/jStationEntrances.get.parameters[1].in": "query",
	"paths./json/jStationEntrances.get.parameters[1].name": "Lon",
	"paths./json/jStationEntrances.get.parameters[1].type": "number",
	"paths./json/jStationEntrances.get.parameters[2].description": "Radius (meters) to include in the search area, required if Latitude and Longitude are specified.",
	"paths./json/jStationEntrances.get.parameters[2].enum.length": 1,
	"paths./json/jStationEntrances.get.parameters[2].enum[0]": "500",
	"paths./json/jStationEntrances.get.parameters[2].in": "query",
	"paths./json/jStationEntrances.get.parameters[2].name": "Radius",
	"paths./json/jStationEntrances.get.parameters[2].type": "number",
	"paths./json/jStationEntrances.get.produces.length": 1,
	"paths./json/jStationEntrances.get.produces[0]": "application/json",
	"paths./json/jStationEntrances.get.responses.200.description": "Default response code.",
	"paths./json/jStationEntrances.get.responses.200.examples.application/json.Entrances.length": 2,
	"paths./json/jStationEntrances.get.responses.200.examples.application/json.Entrances[0].Description": "Farragut West, 17th \u0026 I St",
	"paths./json/jStationEntrances.get.responses.200.examples.application/json.Entrances[0].ID": "100",
	"paths./json/jStationEntrances.get.responses.200.examples.application/json.Entrances[0].Lat": 38.901098,
	"paths./json/jStationEntrances.get.responses.200.examples.application/json.Entrances[0].Lon": -77.039293,
	"paths./json/jStationEntrances.get.responses.200.examples.application/json.Entrances[0].Name": "Farragut West 17th \u0026 I St",
	"paths./json/jStationEntrances.get.responses.200.examples.application/json.Entrances[0].StationCode1": "C03",
	"paths./json/jStationEntrances.get.responses.200.examples.application/json.Entrances[0].StationCode2": "",
	"paths./json/jStationEntrances.get.responses.200.examples.application/json.Entrances[1].Description": "Farragut West, 18th \u0026 I St",
	"paths./json/jStationEntrances.get.responses.200.examples.application/json.Entrances[1].ID": "101",
	"paths./json/jStationEntrances.get.responses.200.examples.application/json.Entrances[1].Lat": 38.901453,
	"paths./json/jStationEntrances.get.responses.200.examples.application/json.Entrances[1].Lon": -77.042093,
	"paths./json/jStationEntrances.get.responses.200.examples.application/json.Entrances[1].Name": "Farragut West 18th \u0026 I St",
	"paths./json/jStationEntrances.get.responses.200.examples.application/json.Entrances[1].StationCode1": "C03",
	"paths./json/jStationEntrances.get.responses.200.examples.application/json.Entrances[1].StationCode2": "",
	"paths./json/jStationInfo.get.description": "\u003ch4 class=\"text-primary\"\u003eDescription\u003c/h4\u003e\r\n\r\n\u003cp\u003eReturns station location and address information based on a given\r\nStationCode.\u003c/p\u003e\r\n\r\n\u003ch4 class=\"text-primary\"\u003eResponse Elements\u003c/h4\u003e\r\n\r\n\u003ctable class=\"table table-condensed table-hover\"\u003e\r\n\u003cthead\u003e\r\n\u003ctr\u003e\r\n\u003cth class=\"col-md-3\"\u003eElement\u003c/th\u003e\r\n\r\n\u003cth\u003eDescription\u003c/th\u003e\r\n\u003c/tr\u003e\r\n\u003c/thead\u003e\r\n\r\n\u003ctbody\u003e\r\n\u003ctr\u003e\r\n\u003ctd\u003eAddress\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nStructure describing \u003ca href=\"#Address\"\u003eaddress\u003c/a\u003e information.\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eCode\u003c/td\u003e\r\n\r\n\u003ctd\u003eStation code. Repeated from input.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLat\u003c/td\u003e\r\n\r\n\u003ctd\u003eLatitude.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLineCode1\u003c/td\u003e\r\n\r\n\u003ctd\u003eTwo-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,\r\nor SV) served by this station.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLineCode2\u003c/td\u003e\r\n\r\n\u003ctd\u003eAdditional line served by this station. This is often the case\r\nwhen stations have multiple platforms (e.g.: Gallery Place, Fort\r\nTotten, L'Enfant Plaza, and Metro Center).\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLineCode3\u003c/td\u003e\r\n\r\n\u003ctd\u003eSimilar to function as LineCodeX.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLineCode4\u003c/td\u003e\r\n\r\n\u003ctd\u003eSimilar to function as LineCodeX. Currently not in use.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLon\u003c/td\u003e\r\n\r\n\u003ctd\u003eLongitude.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eName\u003c/td\u003e\r\n\r\n\u003ctd\u003eStation name.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eStationTogether1\u003c/td\u003e\r\n\r\n\u003ctd\u003eFor stations with multiple platforms (e.g.: Gallery Place, Fort\r\nTotten, L'Enfant Plaza, and Metro Center), the additional\r\nStationCode will be listed here.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eStationTogether2\u003c/td\u003e\r\n\r\n\u003ctd\u003eSimilar in function to StationTogether2. Currently not in\r\nuse.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd colspan=\"2\"\u003e\r\n\u003cdiv class=\"text-primary\" style=\"margin-top: 1em\"\u003e\r\n\u003ca name=\"Address\"\u003eAddress Elements\u003c/a\u003e\r\n\u003c/div\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eCity\u003c/td\u003e\r\n\r\n\u003ctd\u003eCity.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eState\u003c/td\u003e\r\n\r\n\u003ctd\u003eState (abbreviated).\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eStreet\u003c/td\u003e\r\n\r\n\u003ctd\u003eStreet address (for GPS use).\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eZip\u003c/td\u003e\r\n\r\n\u003ctd\u003eZip code.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\u003c/tbody\u003e\r\n\u003c/table\u003e",
	"paths./json/jStationInfo.get.operationId": "JSON - Station Information",
	"paths./json/jStationInfo.get.parameters.length": 1,
	"paths./json/jStationInfo.get.parameters[0].default": "A01",
	"paths./json/jStationInfo.get.parameters[0].description": "Station code.  Use the Station List method to return a list of all station codes.",
	"paths./json/jStationInfo.get.parameters[0].enum.length": 1,
	"paths./json/jStationInfo.get.parameters[0].enum[0]": "A01",
	"paths./json/jStationInfo.get.parameters[0].in": "query",
	"paths./json/jStationInfo.get.parameters[0].name": "StationCode",
	"paths./json/jStationInfo.get.parameters[0].required": true,
	"paths./json/jStationInfo.get.parameters[0].type": "string",
	"paths./json/jStationInfo.get.produces.length": 1,
	"paths./json/jStationInfo.get.produces[0]": "application/json",
	"paths./json/jStationInfo.get.responses.200.description": "Default response code.",
	"paths./json/jStationInfo.get.responses.200.examples.application/json.Address.City": "Washington",
	"paths./json/jStationInfo.get.responses.200.examples.application/json.Address.State": "DC",
	"paths./json/jStationInfo.get.responses.200.examples.application/json.Address.Street": "607 13th St. NW",
	"paths./json/jStationInfo.get.responses.200.examples.application/json.Address.Zip": "20005",
	"paths./json/jStationInfo.get.responses.200.examples.application/json.Code": "A01",
	"paths./json/jStationInfo.get.responses.200.examples.application/json.Lat": 38.8983144732,
	"paths./json/jStationInfo.get.responses.200.examples.application/json.LineCode1": "RD",
	"paths./json/jStationInfo.get.responses.200.examples.application/json.Lon": -77.0280779971,
	"paths./json/jStationInfo.get.responses.200.examples.application/json.Name": "Metro Center",
	"paths./json/jStationInfo.get.responses.200.examples.application/json.StationTogether1": "C01",
	"paths./json/jStationInfo.get.responses.200.examples.application/json.StationTogether2": "",
	"paths./json/jStationParking.get.description": "\u003ch4 class=\"text-primary\"\u003eDescription\u003c/h4\u003e\r\n\r\n\u003cp\u003eReturns parking information at a station based on a given StationCode. Omit\r\nthe StationCode to return parking information for all stations.\u003c/p\u003e\r\n\r\n\u003cp\u003eIf a station has no parking, the StationsParking element will contain no\r\nchild elements.\u003c/p\u003e\r\n\r\n\u003ch4 class=\"text-primary\"\u003eResponse Elements\u003c/h4\u003e\r\n\r\n\u003ctable class=\"table table-condensed table-hover\"\u003e\r\n\u003cthead\u003e\r\n\u003ctr\u003e\r\n\u003cth class=\"col-md-3\"\u003eElement\u003c/th\u003e\r\n\r\n\u003cth\u003eDescription\u003c/th\u003e\r\n\u003c/tr\u003e\r\n\u003c/thead\u003e\r\n\r\n\u003ctbody\u003e\r\n\u003ctr\u003e\r\n\u003ctd\u003eStationsParking\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nArray containing station parking information (\u003ca href=\r\n\"#StationParking\"\u003eStationParking\u003c/a\u003e).\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd colspan=\"2\"\u003e\r\n\u003cdiv class=\"text-primary\" style=\"margin-top: 1em\"\u003e\r\n\u003ca id=\"StationParking\" name=\"StationParking\"\u003eStationParking\r\nElements\u003c/a\u003e\r\n\u003c/div\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eCode\u003c/td\u003e\r\n\r\n\u003ctd\u003eStation code. Useful when returning parking information for all\r\nstations. Use this value in other rail-related APIs to retrieve\r\ndata about a station.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eNotes\u003c/td\u003e\r\n\r\n\u003ctd\u003eWhen not NULL, provides additional parking resources such as\r\nnearby lots.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eAllDayParking\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nStructure describing \u003ca href=\"#AllDayParking\"\u003eall-day\r\nparking\u003c/a\u003e options.\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eShortTermParking\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nStructure describing \u003ca href=\"#ShortTermParking\"\u003eshort-term\r\nparking\u003c/a\u003e options.\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd colspan=\"2\"\u003e\r\n\u003cdiv class=\"text-primary\" style=\"margin-top: 1em\"\u003e\r\n\u003ca id=\"AllDayParking\" name=\"AllDayParking\"\u003eAllDayParking\r\nElements\u003c/a\u003e\r\n\u003c/div\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eTotalCount\u003c/td\u003e\r\n\r\n\u003ctd\u003eNumber of all-day parking spots available at a station.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eRiderCost\u003c/td\u003e\r\n\r\n\u003ctd\u003eAll-day cost per day for Metro riders. NULL when no all-day\r\nspots are available. For most stations, this value is identical to\r\nthe NonRiderCost.\u003cbr\u003e\r\n\u003cbr\u003e\r\nFor cases where the NonRiderCost is different, the lower cost per\r\nday requires a valid rail trip using a SmarTrip\u0026reg; card\r\noriginating from a station other than the one where the patron\r\nparked. To receive this lower rate, patrons must pay for their\r\nparking with the same SmarTrip\u0026reg; card used to enter/exit\r\nMetrorail, and must exit the parking lot within two hours of\r\nexiting Metrorail.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eNonRiderCost\u003c/td\u003e\r\n\r\n\u003ctd\u003eAll-day cost per day for non-Metro riders. NULL when no all-day\r\nspots are available.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd colspan=\"2\"\u003e\r\n\u003cdiv class=\"text-primary\" style=\"margin-top: 1em\"\u003e\r\n\u003ca id=\"ShortTermParking\" name=\r\n\"ShortTermParking\"\u003eShortTermParking Elements\u003c/a\u003e\r\n\u003c/div\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eTotalCount\u003c/td\u003e\r\n\r\n\u003ctd\u003eNumber of short-term parking spots available at a station\r\n(parking meters).\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eNotes\u003c/td\u003e\r\n\r\n\u003ctd\u003eMisc. information relating to short-term parking. NULL when no\r\nshort-term spots are available.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\u003c/tbody\u003e\r\n\u003c/table\u003e",
	"paths./json/jStationParking.get.operationId": "JSON - Parking Information",
	"paths./json/jStationParking.get.parameters.length": 1,
	"paths./json/jStationParking.get.parameters[0].description": "Station code.  Use the Station List method to return a list of all station codes.",
	"paths./json/jStationParking.get.parameters[0].enum.length": 2,
	"paths./json/jStationParking.get.parameters[0].enum[0]": "E08",
	"paths./json/jStationParking.get.parameters[0].enum[1]": "F06",
	"paths./json/jStationParking.get.parameters[0].in": "query",
	"paths./json/jStationParking.get.parameters[0].name": "StationCode",
	"paths./json/jStationParking.get.parameters[0].type": "string",
	"paths./json/jStationParking.get.produces.length": 1,
	"paths./json/jStationParking.get.produces[0]": "application/json",
	"paths./json/jStationParking.get.responses.200.description": "Default response code.",
	"paths./json/jStationParking.get.responses.200.examples.application/json.StationsParking.length": 1,
	"paths./json/jStationParking.get.responses.200.examples.application/json.StationsParking[0].AllDayParking.NonRiderCost": 4.6,
	"paths./json/jStationParking.get.responses.200.examples.application/json.StationsParking[0].AllDayParking.RiderCost": 4.6,
	"paths./json/jStationParking.get.responses.200.examples.application/json.StationsParking[0].AllDayParking.TotalCount": 808,
	"paths./json/jStationParking.get.responses.200.examples.application/json.StationsParking[0].Code": "F06",
	"paths./json/jStationParking.get.responses.200.examples.application/json.StationsParking[0].Notes": "325 spaces metered for 12-hr. max. @ $1.00 per 60 mins.",
	"paths./json/jStationParking.get.responses.200.examples.application/json.StationsParking[0].ShortTermParking.Notes": "Short term parking available 5 am - 2 am, time limit 12 hours",
	"paths./json/jStationParking.get.responses.200.examples.application/json.StationsParking[0].ShortTermParking.TotalCount": 15,
	"paths./json/jStationTimes.get.description": "\u003ch4 class=\"text-primary\"\u003eDescription\u003c/h4\u003e\r\n\r\n\u003cp\u003eReturns opening and scheduled first/last train times based on a given\r\nStationCode. Omit the StationCode to return timing information for all\r\nstations.\u003c/p\u003e\r\n\r\n\u003cp\u003eNote that for stations with multiple platforms (e.g.: Metro Center, L'Enfant\r\nPlaza, etc.), a distinct call is required for each StationCode to retrieve the\r\nfull set of train times at such stations.\u003c/p\u003e\r\n\r\n\u003ch4 class=\"text-primary\"\u003eResponse Elements\u003c/h4\u003e\r\n\r\n\u003ctable class=\"table table-condensed table-hover\"\u003e\r\n\u003cthead\u003e\r\n\u003ctr\u003e\r\n\u003cth class=\"col-md-3\"\u003eElement\u003c/th\u003e\r\n\r\n\u003cth\u003eDescription\u003c/th\u003e\r\n\u003c/tr\u003e\r\n\u003c/thead\u003e\r\n\r\n\u003ctbody\u003e\r\n\u003ctr\u003e\r\n\u003ctd\u003eStationTimes\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nArray containing station timing information (\u003ca href=\r\n\"#StationTime\"\u003eStationTime\u003c/a\u003e).\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd colspan=\"2\"\u003e\r\n\u003cdiv class=\"text-primary\" style=\"margin-top: 1em\"\u003e\r\n\u003ca id=\"StationTime\" name=\"StationTime\"\u003eStationTime\r\nElements\u003c/a\u003e\r\n\u003c/div\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eCode\u003c/td\u003e\r\n\r\n\u003ctd\u003eStation code for this station. Use this value in other\r\nrail-related APIs to retrieve data about a station.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eStationName\u003c/td\u003e\r\n\r\n\u003ctd\u003eFull name of the station.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003e*Day Elements\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nContainer elements containing timing information based on\r\n\u003ca href=\"#dow\"\u003eday of the week.\u003c/a\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd colspan=\"2\"\u003e\r\n\u003cdiv class=\"text-primary\" style=\"margin-top: 1em\"\u003e\r\n\u003ca id=\"dow\" name=\"dow\"\u003eMonday/Tuesday/Wednesday/etc.\r\nElements\u003c/a\u003e\r\n\u003c/div\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eOpeningTime\u003c/td\u003e\r\n\r\n\u003ctd\u003eStation opening time. Format is HH:mm.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eFirstTrains\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nStructure containing \u003ca href=\"#first\"\u003efirst train\u003c/a\u003e\r\ninformation.\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLastTrains\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nStructure containing \u003ca href=\"#last\"\u003elast train\u003c/a\u003e\r\ninformation.\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd colspan=\"2\"\u003e\r\n\u003cdiv class=\"text-primary\" style=\"margin-top: 1em\"\u003e\r\n\u003ca id=\"first\" name=\"first\"\u003eFirstTrains Elements\u003c/a\u003e\r\n\u003c/div\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eTime\u003c/td\u003e\r\n\r\n\u003ctd\u003eFirst train leaves the station at this time. Format is\r\nHH:mm.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eDestinationStation\u003c/td\u003e\r\n\r\n\u003ctd\u003eStation code for the train's destination. Use this value in\r\nother rail-related APIs to retrieve data about a station.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd colspan=\"2\"\u003e\r\n\u003cdiv class=\"text-primary\" style=\"margin-top: 1em\"\u003e\r\n\u003ca id=\"last\" name=\"last\"\u003eLastTrains Elements\u003c/a\u003e\r\n\u003c/div\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eTime\u003c/td\u003e\r\n\r\n\u003ctd\u003eLast train leaves the station at this time. Format is HH:mm.\r\nNote that when the time is AM, it signifies the next day. For\r\nexample, a value of 02:30 under a Saturday element means the last\r\ntrain leaves on Sunday at 2:30 AM.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eDestinationStation\u003c/td\u003e\r\n\r\n\u003ctd\u003eStation code for the train's destination. Use this value in\r\nother rail-related APIs to retrieve data about a station.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\u003c/tbody\u003e\r\n\u003c/table\u003e",
	"paths./json/jStationTimes.get.operationId": "JSON - Station Timings",
	"paths./json/jStationTimes.get.parameters.length": 1,
	"paths./json/jStationTimes.get.parameters[0].default": "E10",
	"paths./json/jStationTimes.get.parameters[0].description": "Station code.  Use the Station List method to return a list of all station codes.",
	"paths./json/jStationTimes.get.parameters[0].enum.length": 1,
	"paths./json/jStationTimes.get.parameters[0].enum[0]": "E10",
	"paths./json/jStationTimes.get.parameters[0].in": "query",
	"paths./json/jStationTimes.get.parameters[0].name": "StationCode",
	"paths./json/jStationTimes.get.parameters[0].type": "string",
	"paths./json/jStationTimes.get.produces.length": 1,
	"paths./json/jStationTimes.get.produces[0]": "application/json",
	"paths./json/jStationTimes.get.responses.200.description": "Default response code.",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes.length": 1,
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Code": "E10",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Friday.FirstTrains.length": 1,
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Friday.FirstTrains[0].DestinationStation": "F11",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Friday.FirstTrains[0].Time": "05:00",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Friday.LastTrains.length": 1,
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Friday.LastTrains[0].DestinationStation": "F11",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Friday.LastTrains[0].Time": "02:30",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Friday.OpeningTime": "04:50",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Monday.FirstTrains.length": 1,
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Monday.FirstTrains[0].DestinationStation": "F11",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Monday.FirstTrains[0].Time": "05:00",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Monday.LastTrains.length": 1,
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Monday.LastTrains[0].DestinationStation": "F11",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Monday.LastTrains[0].Time": "23:30",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Monday.OpeningTime": "04:50",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Saturday.FirstTrains.length": 1,
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Saturday.FirstTrains[0].DestinationStation": "F11",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Saturday.FirstTrains[0].Time": "07:00",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Saturday.LastTrains.length": 1,
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Saturday.LastTrains[0].DestinationStation": "F11",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Saturday.LastTrains[0].Time": "02:30",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Saturday.OpeningTime": "06:50",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].StationName": "Greenbelt",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Sunday.FirstTrains.length": 1,
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Sunday.FirstTrains[0].DestinationStation": "F11",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Sunday.FirstTrains[0].Time": "07:00",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Sunday.LastTrains.length": 1,
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Sunday.LastTrains[0].DestinationStation": "F11",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Sunday.LastTrains[0].Time": "23:30",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Sunday.OpeningTime": "06:50",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Thursday.FirstTrains.length": 1,
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Thursday.FirstTrains[0].DestinationStation": "F11",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Thursday.FirstTrains[0].Time": "05:00",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Thursday.LastTrains.length": 1,
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Thursday.LastTrains[0].DestinationStation": "F11",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Thursday.LastTrains[0].Time": "23:30",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Thursday.OpeningTime": "04:50",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Tuesday.FirstTrains.length": 1,
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Tuesday.FirstTrains[0].DestinationStation": "F11",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Tuesday.FirstTrains[0].Time": "05:00",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Tuesday.LastTrains.length": 1,
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Tuesday.LastTrains[0].DestinationStation": "F11",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Tuesday.LastTrains[0].Time": "23:30",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Tuesday.OpeningTime": "04:50",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Wednesday.FirstTrains.length": 1,
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Wednesday.FirstTrains[0].DestinationStation": "F11",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Wednesday.FirstTrains[0].Time": "05:00",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Wednesday.LastTrains.length": 1,
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Wednesday.LastTrains[0].DestinationStation": "F11",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Wednesday.LastTrains[0].Time": "23:30",
	"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Wednesday.OpeningTime": "04:50",
	"paths./json/jStations.get.description": "\u003ch4 class=\"text-primary\"\u003eDescription\u003c/h4\u003e\r\n\r\n\u003cp\u003eReturns a list of station location and address information based on a given\r\nLineCode. Omit the LineCode to return all stations. The response is an array of\r\nobjects identical to those returned in the Station Information method.\u003c/p\u003e\r\n\r\n\u003ch4 class=\"text-primary\"\u003eResponse Elements\u003c/h4\u003e\r\n\r\n\u003ctable class=\"table table-condensed table-hover\"\u003e\r\n\u003cthead\u003e\r\n\u003ctr\u003e\r\n\u003cth class=\"col-md-3\"\u003eElement\u003c/th\u003e\r\n\r\n\u003cth\u003eDescription\u003c/th\u003e\r\n\u003c/tr\u003e\r\n\u003c/thead\u003e\r\n\r\n\u003ctbody\u003e\r\n\u003ctr\u003e\r\n\u003ctd\u003eStations\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nArray containing station information (\u003ca href=\r\n\"#Station\"\u003eStation\u003c/a\u003e).\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd colspan=\"2\"\u003e\r\n\u003cdiv class=\"text-primary\" style=\"margin-top: 1em\"\u003e\r\n\u003ca id=\"Station\" name=\"Station\"\u003eStation Elements\u003c/a\u003e\r\n\u003c/div\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eAddress\u003c/td\u003e\r\n\r\n\u003ctd\u003e\r\nStructure describing \u003ca href=\"#Address\"\u003eaddress\u003c/a\u003e information.\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eCode\u003c/td\u003e\r\n\r\n\u003ctd\u003eStation code. Repeated from input.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLat\u003c/td\u003e\r\n\r\n\u003ctd\u003eLatitude.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLineCode1\u003c/td\u003e\r\n\r\n\u003ctd\u003eTwo-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,\r\nor SV) served by this station.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLineCode2\u003c/td\u003e\r\n\r\n\u003ctd\u003eAdditional line served by this station. This is often the case\r\nwhen stations have multiple platforms (e.g.: Gallery Place, Fort\r\nTotten, L'Enfant Plaza, and Metro Center).\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLineCode3\u003c/td\u003e\r\n\r\n\u003ctd\u003eSimilar to function as LineCodeX.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLineCode4\u003c/td\u003e\r\n\r\n\u003ctd\u003eSimilar to function as LineCodeX. Currently not in use.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eLon\u003c/td\u003e\r\n\r\n\u003ctd\u003eLongitude.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eName\u003c/td\u003e\r\n\r\n\u003ctd\u003eStation name.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eStationTogether1\u003c/td\u003e\r\n\r\n\u003ctd\u003eFor stations with multiple platforms (e.g.: Gallery Place, Fort\r\nTotten, L'Enfant Plaza, and Metro Center), the additional\r\nStationCode will be listed here.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eStationTogether2\u003c/td\u003e\r\n\r\n\u003ctd\u003eSimilar in function to StationTogether2. Currently not in\r\nuse.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd colspan=\"2\"\u003e\r\n\u003cdiv class=\"text-primary\" style=\"margin-top: 1em\"\u003e\r\n\u003ca id=\"Address\" name=\"Address\"\u003eAddress Elements\u003c/a\u003e\r\n\u003c/div\u003e\r\n\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eCity\u003c/td\u003e\r\n\r\n\u003ctd\u003eCity.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eState\u003c/td\u003e\r\n\r\n\u003ctd\u003eState (abbreviated).\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eStreet\u003c/td\u003e\r\n\r\n\u003ctd\u003eStreet address (for GPS use).\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\r\n\u003ctr\u003e\r\n\u003ctd\u003eZip\u003c/td\u003e\r\n\r\n\u003ctd\u003eZip code.\u003c/td\u003e\r\n\u003c/tr\u003e\r\n\u003c/tbody\u003e\r\n\u003c/table\u003e",
	"paths./json/jStations.get.operationId": "JSON - Station List",
	"paths./json/jStations.get.parameters.length": 1,
	"paths./json/jStations.get.parameters[0].description": "Two-letter line code abbreviation:\n\n\u003cul\u003e\n\u003cli\u003eRD - Red\u003c/li\u003e\n\u003cli\u003eYL - Yellow\u003c/li\u003e\n\u003cli\u003eGR - Green\u003c/li\u003e\n\u003cli\u003eBL - Blue\u003c/li\u003e\n\u003cli\u003eOR - Orange\u003c/li\u003e\n\u003cli\u003eSV - Silver\u003c/li\u003e\n\u003c/ul\u003e",
	"paths./json/jStations.get.parameters[0].enum.length": 6,
	"paths./json/jStations.get.parameters[0].enum[0]": "RD",
	"paths./json/jStations.get.parameters[0].enum[1]": "YL",
	"paths./json/jStations.get.parameters[0].enum[2]": "GR",
	"paths./json/jStations.get.parameters[0].enum[3]": "BL",
	"paths./json/jStations.get.parameters[0].enum[4]": "OR",
	"paths./json/jStations.get.parameters[0].enum[5]": "SV",
	"paths./json/jStations.get.parameters[0].in": "query",
	"paths./json/jStations.get.parameters[0].name": "LineCode",
	"paths./json/jStations.get.parameters[0].type": "string",
	"paths./json/jStations.get.produces.length": 1,
	"paths./json/jStations.get.produces[0]": "application/json",
	"paths./json/jStations.get.responses.200.description": "Default response code.",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations.length": 27,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[0].Address.City": "Rockville",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[0].Address.State": "MD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[0].Address.Street": "15903 Somerville Drive",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[0].Address.Zip": "20855",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[0].Code": "A15",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[0].Lat": 39.1199273249,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[0].LineCode1": "RD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[0].Lon": -77.1646273343,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[0].Name": "Shady Grove",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[0].StationTogether1": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[0].StationTogether2": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[10].Address.City": "Washington",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[10].Address.State": "DC",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[10].Address.Street": "3599 Connecticut Avenue NW",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[10].Address.Zip": "20008",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[10].Code": "A05",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[10].Lat": 38.9347628908,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[10].LineCode1": "RD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[10].Lon": -77.0580425191,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[10].Name": "Cleveland Park",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[10].StationTogether1": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[10].StationTogether2": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[11].Address.City": "Washington",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[11].Address.State": "DC",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[11].Address.Street": "2700 Connecticut Ave., NW",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[11].Address.Zip": "20008",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[11].Code": "A04",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[11].Lat": 38.9250851371,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[11].LineCode1": "RD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[11].Lon": -77.0524180207,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[11].Name": "Woodley Park Zoo",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[11].StationTogether1": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[11].StationTogether2": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[12].Address.City": "Washington",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[12].Address.State": "DC",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[12].Address.Street": "1525 20th St. NW",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[12].Address.Zip": "20036",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[12].Code": "A03",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[12].Lat": 38.9095980575,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[12].LineCode1": "RD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[12].Lon": -77.0434143597,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[12].Name": "Dupont Circle",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[12].StationTogether1": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[12].StationTogether2": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[13].Address.City": "Washington",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[13].Address.State": "DC",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[13].Address.Street": "1001 Connecticut Avenue NW",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[13].Address.Zip": "20036",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[13].Code": "A02",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[13].Lat": 38.9032019462,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[13].LineCode1": "RD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[13].Lon": -77.0397008272,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[13].Name": "Farragut North",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[13].StationTogether1": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[13].StationTogether2": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[14].Address.City": "Washington",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[14].Address.State": "DC",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[14].Address.Street": "607 13th St. NW",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[14].Address.Zip": "20005",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[14].Code": "A01",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[14].Lat": 38.8983144732,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[14].LineCode1": "RD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[14].Lon": -77.0280779971,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[14].Name": "Metro Center",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[14].StationTogether1": "C01",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[14].StationTogether2": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[15].Address.City": "Washington",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[15].Address.State": "DC",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[15].Address.Street": "630 H St. NW",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[15].Address.Zip": "20001",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[15].Code": "B01",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[15].Lat": 38.8983168097,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[15].LineCode1": "RD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[15].Lon": -77.0219153904,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[15].Name": "Gallery Place",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[15].StationTogether1": "F01",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[15].StationTogether2": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[16].Address.City": "Washington",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[16].Address.State": "DC",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[16].Address.Street": "450 F Street NW",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[16].Address.Zip": "20001",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[16].Code": "B02",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[16].Lat": 38.8960903176,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[16].LineCode1": "RD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[16].Lon": -77.0166389566,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[16].Name": "Judiciary Square",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[16].StationTogether1": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[16].StationTogether2": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[17].Address.City": "Washington",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[17].Address.State": "DC",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[17].Address.Street": "701 First St. NE",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[17].Address.Zip": "20002",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[17].Code": "B03",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[17].Lat": 38.8977660392,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[17].LineCode1": "RD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[17].Lon": -77.0074142921,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[17].Name": "Union Station",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[17].StationTogether1": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[17].StationTogether2": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[18].Address.City": "Washington",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[18].Address.State": "DC",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[18].Address.Street": "200 Florida Ave N.E.",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[18].Address.Zip": "20002",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[18].Code": "B35",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[18].Lat": 38.9070162121,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[18].LineCode1": "RD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[18].Lon": -77.0030204472,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[18].Name": "New York Avenue",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[18].StationTogether1": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[18].StationTogether2": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[19].Address.City": "Washington",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[19].Address.State": "DC",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[19].Address.Street": "919 Rhode Island Avenue NE",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[19].Address.Zip": "20018",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[19].Code": "B04",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[19].Lat": 38.9210596891,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[19].LineCode1": "RD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[19].Lon": -76.9959369166,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[19].Name": "Rhode Island Avenue",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[19].StationTogether1": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[19].StationTogether2": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[1].Address.City": "Rockville",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[1].Address.State": "MD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[1].Address.Street": "251 Hungerford Drive",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[1].Address.Zip": "20850",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[1].Code": "A14",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[1].Lat": 39.0843216075,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[1].LineCode1": "RD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[1].Lon": -77.1461253392,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[1].Name": "Rockville",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[1].StationTogether1": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[1].StationTogether2": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[20].Address.City": "Washington",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[20].Address.State": "DC",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[20].Address.Street": "801 Michigan Avenue NE",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[20].Address.Zip": "20017",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[20].Code": "B05",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[20].Lat": 38.9332109913,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[20].LineCode1": "RD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[20].Lon": -76.9945342851,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[20].Name": "Brookland",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[20].StationTogether1": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[20].StationTogether2": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[21].Address.City": "Washington",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[21].Address.State": "DC",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[21].Address.Street": "550 Galloway Street NE",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[21].Address.Zip": "20011",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[21].Code": "B06",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[21].Lat": 38.9518467675,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[21].LineCode1": "RD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[21].Lon": -77.0022030768,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[21].Name": "Fort Totten",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[21].StationTogether1": "E06",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[21].StationTogether2": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[22].Address.City": "Washington",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[22].Address.State": "DC",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[22].Address.Street": "327 Cedar Street NW",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[22].Address.Zip": "20012",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[22].Code": "B07",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[22].Lat": 38.976078531,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[22].LineCode1": "RD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[22].Lon": -77.0181766987,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[22].Name": "Takoma",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[22].StationTogether1": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[22].StationTogether2": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[23].Address.City": "Silver Spring",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[23].Address.State": "MD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[23].Address.Street": "8400 Colesville Road",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[23].Address.Zip": "20910",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[23].Code": "B08",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[23].Lat": 38.9939493747,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[23].LineCode1": "RD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[23].Lon": -77.0310178268,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[23].Name": "Silver Spring",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[23].StationTogether1": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[23].StationTogether2": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[24].Address.City": "Forest Glen",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[24].Address.State": "MD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[24].Address.Street": "9730 Georgia Avenue",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[24].Address.Zip": "20910",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[24].Code": "B09",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[24].Lat": 39.0149542752,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[24].LineCode1": "RD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[24].Lon": -77.0429165548,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[24].Name": "Forest Glen",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[24].StationTogether1": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[24].StationTogether2": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[25].Address.City": "Silver Spring",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[25].Address.State": "MD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[25].Address.Street": "11171 Georgia Avenue",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[25].Address.Zip": "20902",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[25].Code": "B10",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[25].Lat": 39.0375271436,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[25].LineCode1": "RD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[25].Lon": -77.0501070535,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[25].Name": "Wheaton",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[25].StationTogether1": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[25].StationTogether2": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[26].Address.City": "Silver Spring",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[26].Address.State": "MD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[26].Address.Street": "12501 Georgia Avenue",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[26].Address.Zip": "20906",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[26].Code": "B11",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[26].Lat": 39.0617837655,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[26].LineCode1": "RD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[26].Lon": -77.0535573593,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[26].Name": "Glenmont",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[26].StationTogether1": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[26].StationTogether2": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[2].Address.City": "Rockville",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[2].Address.State": "MD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[2].Address.Street": "1600 Chapman Avenue",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[2].Address.Zip": "20852",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[2].Code": "A13",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[2].Lat": 39.0624676517,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[2].LineCode1": "RD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[2].Lon": -77.1208179517,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[2].Name": "Twinbrook",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[2].StationTogether1": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[2].StationTogether2": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[3].Address.City": "Rockville",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[3].Address.State": "MD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[3].Address.Street": "5500 Marinelli Road",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[3].Address.Zip": "20852",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[3].Code": "A12",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[3].Lat": 39.0481513573,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[3].LineCode1": "RD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[3].Lon": -77.112829859,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[3].Name": "White Flint",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[3].StationTogether1": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[3].StationTogether2": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[4].Address.City": "Bethesda",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[4].Address.State": "MD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[4].Address.Street": "10300 Rockville Pike",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[4].Address.Zip": "20852",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[4].Code": "A11",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[4].Lat": 39.02926895,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[4].LineCode1": "RD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[4].Lon": -77.10384972,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[4].Name": "Grosvenor",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[4].StationTogether1": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[4].StationTogether2": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[5].Address.City": "Bethesda",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[5].Address.State": "MD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[5].Address.Street": "8810 Rockville Pike",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[5].Address.Zip": "20814",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[5].Code": "A10",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[5].Lat": 39.0000564843,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[5].LineCode1": "RD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[5].Lon": -77.0969522905,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[5].Name": "Medical Center",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[5].StationTogether1": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[5].StationTogether2": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[6].Address.City": "Bethesda",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[6].Address.State": "MD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[6].Address.Street": "7450 Wisconsin Avenue",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[6].Address.Zip": "20814",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[6].Code": "A09",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[6].Lat": 38.9843936603,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[6].LineCode1": "RD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[6].Lon": -77.0941291922,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[6].Name": "Bethesda",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[6].StationTogether1": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[6].StationTogether2": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[7].Address.City": "Washington",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[7].Address.State": "DC",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[7].Address.Street": "5337 Wisconsin Avenue NW",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[7].Address.Zip": "20015",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[7].Code": "A08",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[7].Lat": 38.9594838736,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[7].LineCode1": "RD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[7].Lon": -77.084995805,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[7].Name": "Friendship Heights",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[7].StationTogether1": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[7].StationTogether2": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[8].Address.City": "Washington",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[8].Address.State": "DC",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[8].Address.Street": "4501 Wisconsin Avenue NW",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[8].Address.Zip": "20016",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[8].Code": "A07",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[8].Lat": 38.9488514351,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[8].LineCode1": "RD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[8].Lon": -77.0795873255,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[8].Name": "Tenleytown",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[8].StationTogether1": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[8].StationTogether2": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[9].Address.City": "Washington",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[9].Address.State": "DC",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[9].Address.Street": "4200 Connecticut Avenue NW",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[9].Address.Zip": "20008",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[9].Code": "A06",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[9].Lat": 38.9432652883,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[9].LineCode1": "RD",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[9].Lon": -77.0629861805,
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[9].Name": "Van Ness UDC",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[9].StationTogether1": "",
	"paths./json/jStations.get.responses.200.examples.application/json.Stations[9].StationTogether2": "",
	"schemes.length": 2,
	"schemes[0]": "http",
	"schemes[1]": "https",
	"security.length": 2,
	"securityDefinitions.apiKeyHeader.in": "header",
	"securityDefinitions.apiKeyHeader.name": "api_key",
	"securityDefinitions.apiKeyHeader.type": "apiKey",
	"securityDefinitions.apiKeyQuery.in": "query",
	"securityDefinitions.apiKeyQuery.name": "api_key",
	"securityDefinitions.apiKeyQuery.type": "apiKey",
	"security[0].apiKeyHeader.length": 0,
	"security[1].apiKeyQuery.length": 0,
	"swagger": "2.0"
}