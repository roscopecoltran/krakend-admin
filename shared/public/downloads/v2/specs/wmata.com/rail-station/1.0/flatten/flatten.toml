basePath = "/Rail.svc"
host = "api.wmata.com"
"info.description" = "Rail line and station information, including locations, fares, times, and parking."
"info.title" = "Rail Station Information"
"info.version" = "1.0"
"info.x-apisguru-categories.length" = 1
"info.x-apisguru-categories[0]" = "transport"
"info.x-logo.url" = "https://api.apis.guru/v2/cache/logo/https_pbs.twimg.com_profile_images_874608810190622720_rRcPRXuu_400x400.jpg"
"info.x-origin.length" = 1
"info.x-origin[0].format" = "swagger"
"info.x-origin[0].url" = "https://developer.wmata.com/docs/services/5476364f031f590f38092507/export?DocumentFormat=Swagger"
"info.x-origin[0].version" = "2.0"
"info.x-preferred" = true
"info.x-providerName" = "wmata.com"
"info.x-serviceName" = "rail-station"
"paths./Lines.get.description" = "<h4 class=\"text-primary\">Description</h4>\r\n\r\n<p>Returns information about all rail lines.</p>\r\n\r\n<h4 class=\"text-primary\">Response Elements</h4>\r\n\r\n<table class=\"table table-condensed table-hover\">\r\n<thead>\r\n<tr>\r\n<th class=\"col-md-3\">Element</th>\r\n\r\n<th>Description</th>\r\n</tr>\r\n</thead>\r\n\r\n<tbody>\r\n<tr>\r\n<td>Lines</td>\r\n\r\n<td>\r\nArray containing line information (<a href=\"#Line\">Line</a>).\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"Line\" name=\"Line\">Line Elements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>DisplayName</td>\r\n\r\n<td>Full name of line color.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>EndStationCode</td>\r\n\r\n<td>End station code. For example, will be E10 (Greenbelt) for the\r\nGreen Line, B11 (Glenmont) for the Red Line, etc. Use this value in\r\nother rail-related APIs to retrieve data about a station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>InternalDestination1</td>\r\n\r\n<td>Intermediate terminal station code. During normal service, some\r\ntrains on some lines might end their trip prior to the\r\nStartStationCode or EndStationCode. A good example is on the Red\r\nLine where some trains stop at A11 (Grosvenor) or B08 (Silver\r\nSpring). Empty string if not defined.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>InternalDestination2</td>\r\n\r\n<td>Similar to InternalDestination1.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>LineCode</td>\r\n\r\n<td>Two-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,\r\nor SV).</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StartStationCode</td>\r\n\r\n<td>Start station code. For example, will be F11 (Branch Avenue)\r\nfor the Green Line, A15 (Shady Grove) for the Red Line, etc. Use\r\nthis value in other rail-related APIs to retrieve data about a\r\nstation.</td>\r\n</tr>\r\n</tbody>\r\n</table>"
"paths./Lines.get.operationId" = "XML - Lines"
"paths./Lines.get.produces.length" = 1
"paths./Lines.get.produces[0]" = "application/xml"
"paths./Lines.get.responses.200.description" = "Default response code."
"paths./Lines.get.responses.200.examples.application/xml" = "<LinesResp xmlns=\"http://www.wmata.com\" xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <Lines>\n        <Line>\n            <DisplayName>Green</DisplayName>\n            <EndStationCode>E10</EndStationCode>\n            <InternalDestination1/>\n            <InternalDestination2/>\n            <LineCode>GR</LineCode>\n            <StartStationCode>F11</StartStationCode>\n        </Line>\n        <Line>\n            <DisplayName>Blue</DisplayName>\n            <EndStationCode>G05</EndStationCode>\n            <InternalDestination1/>\n            <InternalDestination2/>\n            <LineCode>BL</LineCode>\n            <StartStationCode>J03</StartStationCode>\n        </Line>\n        <Line>\n            <DisplayName>Silver</DisplayName>\n            <EndStationCode>G05</EndStationCode>\n            <InternalDestination1/>\n            <InternalDestination2/>\n            <LineCode>SV</LineCode>\n            <StartStationCode>N06</StartStationCode>\n        </Line>\n        <Line>\n            <DisplayName>Red</DisplayName>\n            <EndStationCode>B11</EndStationCode>\n            <InternalDestination1>A11</InternalDestination1>\n            <InternalDestination2>B08</InternalDestination2>\n            <LineCode>RD</LineCode>\n            <StartStationCode>A15</StartStationCode>\n        </Line>\n        <Line>\n            <DisplayName>Orange</DisplayName>\n            <EndStationCode>D13</EndStationCode>\n            <InternalDestination1/>\n            <InternalDestination2/>\n            <LineCode>OR</LineCode>\n            <StartStationCode>K08</StartStationCode>\n        </Line>\n        <Line>\n            <DisplayName>Yellow</DisplayName>\n            <EndStationCode>E06</EndStationCode>\n            <InternalDestination1>E01</InternalDestination1>\n            <InternalDestination2/>\n            <LineCode>YL</LineCode>\n            <StartStationCode>C15</StartStationCode>\n        </Line>\n    </Lines>\n</LinesResp>"
"paths./Path.get.description" = "<h4 class=\"text-primary\">Description</h4>\r\n\r\n<p>Returns a set of ordered stations and distances between two stations on the\r\n<em>same line</em>.</p>\r\n\r\n<p>Note that this method is not suitable on its own as a pathfinding solution\r\nbetween stations.</p>\r\n\r\n<h4 class=\"text-primary\">Response Elements</h4>\r\n\r\n<table class=\"table table-condensed table-hover\">\r\n<thead>\r\n<tr>\r\n<th class=\"col-md-3\">Element</th>\r\n\r\n<th>Description</th>\r\n</tr>\r\n</thead>\r\n\r\n<tbody>\r\n<tr>\r\n<td>Path</td>\r\n\r\n<td>\r\nArray containing path details (<a href=\r\n\"#MetroPathItem\">MetroPathItem</a>)\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"MetroPathItem\" name=\"MetroPathItem\">MetroPathItem\r\nElements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>DistanceToPrev</td>\r\n\r\n<td>Distance in feet to the previous station in the list.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>LineCode</td>\r\n\r\n<td>Two-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,\r\nor SV) this station's platform is on.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>SeqNum</td>\r\n\r\n<td>Ordered sequence number.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StationCode</td>\r\n\r\n<td>Station code for this station. Use this value in other\r\nrail-related APIs to retrieve data about a station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StationName</td>\r\n\r\n<td>Full name for this station, as shown on the WMATA website.</td>\r\n</tr>\r\n</tbody>\r\n</table>"
"paths./Path.get.operationId" = "XML - Path Between Stations"
"paths./Path.get.parameters.length" = 2
"paths./Path.get.parameters[0].default" = "N06"
"paths./Path.get.parameters[0].description" = "Station code for the origin station.  Use the Station List method to return a list of all station codes."
"paths./Path.get.parameters[0].enum.length" = 1
"paths./Path.get.parameters[0].enum[0]" = "N06"
"paths./Path.get.parameters[0].in" = "query"
"paths./Path.get.parameters[0].name" = "FromStationCode"
"paths./Path.get.parameters[0].required" = true
"paths./Path.get.parameters[0].type" = "string"
"paths./Path.get.parameters[1].default" = "G05"
"paths./Path.get.parameters[1].description" = "Station code for the origin station.  Use the Station List method to return a list of all station codes."
"paths./Path.get.parameters[1].enum.length" = 1
"paths./Path.get.parameters[1].enum[0]" = "G05"
"paths./Path.get.parameters[1].in" = "query"
"paths./Path.get.parameters[1].name" = "ToStationCode"
"paths./Path.get.parameters[1].required" = true
"paths./Path.get.parameters[1].type" = "string"
"paths./Path.get.produces.length" = 1
"paths./Path.get.produces[0]" = "application/xml"
"paths./Path.get.responses.200.description" = "Default response code."
"paths./Path.get.responses.200.examples.application/xml" = "\n\n<PathResp\n    xmlns=\"http://www.wmata.com\"\n    xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <Path>\n        <MetroPathItem>\n            <DistanceToPrev>0</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>1</SeqNum>\n            <StationCode>N06</StationCode>\n            <StationName>Wiehle-Reston East</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>30867</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>2</SeqNum>\n            <StationCode>N04</StationCode>\n            <StationName>Spring Hill</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>3634</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>3</SeqNum>\n            <StationCode>N03</StationCode>\n            <StationName>Greensboro</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>3902</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>4</SeqNum>\n            <StationCode>N02</StationCode>\n            <StationName>Tysons Corner</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>3440</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>5</SeqNum>\n            <StationCode>N01</StationCode>\n            <StationName>McLean</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>24745</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>6</SeqNum>\n            <StationCode>K05</StationCode>\n            <StationName>E Falls Church</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>13156</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>7</SeqNum>\n            <StationCode>K04</StationCode>\n            <StationName>Ballston</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>2980</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>8</SeqNum>\n            <StationCode>K03</StationCode>\n            <StationName>Virginia Square</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>2473</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>9</SeqNum>\n            <StationCode>K02</StationCode>\n            <StationName>Clarendon</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>2687</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>10</SeqNum>\n            <StationCode>K01</StationCode>\n            <StationName>Court House</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>4936</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>11</SeqNum>\n            <StationCode>C05</StationCode>\n            <StationName>Rosslyn</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>6993</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>12</SeqNum>\n            <StationCode>C04</StationCode>\n            <StationName>Foggy Bottom</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>2783</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>13</SeqNum>\n            <StationCode>C03</StationCode>\n            <StationName>Farragut West</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>2001</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>14</SeqNum>\n            <StationCode>C02</StationCode>\n            <StationName>McPherson Square</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>2359</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>15</SeqNum>\n            <StationCode>C01</StationCode>\n            <StationName>Metro Center</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>1561</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>16</SeqNum>\n            <StationCode>D01</StationCode>\n            <StationName>Federal Triangle</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>2016</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>17</SeqNum>\n            <StationCode>D02</StationCode>\n            <StationName>Smithsonian</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>2643</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>18</SeqNum>\n            <StationCode>D03</StationCode>\n            <StationName>L'Enfant Plaza</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>1757</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>19</SeqNum>\n            <StationCode>D04</StationCode>\n            <StationName>Federal Center SW</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>3052</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>20</SeqNum>\n            <StationCode>D05</StationCode>\n            <StationName>Capitol South</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>2703</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>21</SeqNum>\n            <StationCode>D06</StationCode>\n            <StationName>Eastern Market</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>3289</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>22</SeqNum>\n            <StationCode>D07</StationCode>\n            <StationName>Potomac Avenue</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>3750</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>23</SeqNum>\n            <StationCode>D08</StationCode>\n            <StationName>Stadium Armory</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>12162</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>24</SeqNum>\n            <StationCode>G01</StationCode>\n            <StationName>Benning Road</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>7779</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>25</SeqNum>\n            <StationCode>G02</StationCode>\n            <StationName>Capitol Heights</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>5215</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>26</SeqNum>\n            <StationCode>G03</StationCode>\n            <StationName>Addison Road</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>7960</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>27</SeqNum>\n            <StationCode>G04</StationCode>\n            <StationName>Morgan Blvd</StationName>\n        </MetroPathItem>\n        <MetroPathItem>\n            <DistanceToPrev>7256</DistanceToPrev>\n            <LineCode>SV</LineCode>\n            <SeqNum>28</SeqNum>\n            <StationCode>G05</StationCode>\n            <StationName>Largo Town Center</StationName>\n        </MetroPathItem>\n    </Path>\n</PathResp>"
"paths./SrcStationToDstStationInfo.get.description" = "<h4 class=\"text-primary\">Description</h4>\r\n\r\n<p>Returns a distance, fare information, and estimated travel time between any\r\ntwo stations, including those on different lines. Omit both parameters to\r\nretrieve data for all stations.</p>\r\n\r\n<h4 class=\"text-primary\">Response Elements</h4>\r\n\r\n<table class=\"table table-condensed table-hover\">\r\n<thead>\r\n<tr>\r\n<th class=\"col-md-3\">Element</th>\r\n\r\n<th>Description</th>\r\n</tr>\r\n</thead>\r\n\r\n<tbody>\r\n<tr>\r\n<td>StationToStationInfos</td>\r\n\r\n<td>\r\nArray containing station to station information (<a href=\r\n\"#StationToStationInfo\">StationToStationInfo</a>).\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"StationToStationInfo\" name=\r\n\"StationToStationInfo\">StationToStationInfo Elements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>CompositeMiles</td>\r\n\r\n<td>Distance in miles from the source to destination station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>DestinationStation</td>\r\n\r\n<td>Destination station code. Use this value in other rail-related\r\nAPIs to retrieve data about a station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>RailFare</td>\r\n\r\n<td>\r\nStructure containing <a href=\"#RailFare\">fare</a> information.\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>RailTime</td>\r\n\r\n<td>Estimated travel time (schedule time) in minutes between the source and destination station. This is not correlated to minutes <span class=\"text-info\">(Min)</span> in Real-Time Rail Predictions.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>SourceStation</td>\r\n\r\n<td>Origin station code. Use this value in other rail-related APIs\r\nto retrieve data about a station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"RailFare\" name=\"RailFare\">RailFare Elements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>OffPeakTime</td>\r\n\r\n<td>Fare during off-peak times (times other than the ones described\r\nbelow).</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>PeakTime</td>\r\n\r\n<td>Fare during peak times (weekdays from opening to 9:30 AM and\r\n3-7 PM, and weekends from midnight to closing).</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>SeniorDisabled</td>\r\n\r\n<td>\r\nReduced fare for <a href=\r\n\"http://www.wmata.com/fares/reduced.cfm\">senior citizens or\r\npeople with disabilities</a>.\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>"
"paths./SrcStationToDstStationInfo.get.operationId" = "XML - Station to Station Information"
"paths./SrcStationToDstStationInfo.get.parameters.length" = 2
"paths./SrcStationToDstStationInfo.get.parameters[0].default" = "E10"
"paths./SrcStationToDstStationInfo.get.parameters[0].description" = "Station code for the origin station.  Use the Station List method to return a list of all station codes."
"paths./SrcStationToDstStationInfo.get.parameters[0].enum.length" = 1
"paths./SrcStationToDstStationInfo.get.parameters[0].enum[0]" = "E10"
"paths./SrcStationToDstStationInfo.get.parameters[0].in" = "query"
"paths./SrcStationToDstStationInfo.get.parameters[0].name" = "FromStationCode"
"paths./SrcStationToDstStationInfo.get.parameters[0].type" = "string"
"paths./SrcStationToDstStationInfo.get.parameters[1].default" = "J03"
"paths./SrcStationToDstStationInfo.get.parameters[1].description" = "Station code for the destination station.  Use the Station List method to return a list of all station codes."
"paths./SrcStationToDstStationInfo.get.parameters[1].enum.length" = 1
"paths./SrcStationToDstStationInfo.get.parameters[1].enum[0]" = "J03"
"paths./SrcStationToDstStationInfo.get.parameters[1].in" = "query"
"paths./SrcStationToDstStationInfo.get.parameters[1].name" = "ToStationCode"
"paths./SrcStationToDstStationInfo.get.parameters[1].type" = "string"
"paths./SrcStationToDstStationInfo.get.produces.length" = 1
"paths./SrcStationToDstStationInfo.get.produces[0]" = "application/xml"
"paths./SrcStationToDstStationInfo.get.responses.200.description" = "Default response code."
"paths./SrcStationToDstStationInfo.get.responses.200.examples.application/xml" = "<StationToStationInfoResp xmlns=\"http://www.wmata.com\" xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <StationToStationInfos>\n        <StationToStationInfo>\n            <CompositeMiles>25.41</CompositeMiles>\n            <DestinationStation>J03</DestinationStation>\n            <RailFare>\n                <OffPeakTime>3.60</OffPeakTime>\n                <PeakTime>5.90</PeakTime>\n                <SeniorDisabled>2.95</SeniorDisabled>\n            </RailFare>\n            <RailTime>66</RailTime>\n            <SourceStation>E10</SourceStation>\n        </StationToStationInfo>\n    </StationToStationInfos>\n</StationToStationInfoResp>"
"paths./StationEntrances.get.description" = "<h4 class=\"text-primary\">Description</h4>\r\n\r\n<p>Returns a list of nearby station entrances based on latitude, longitude, and\r\nradius (meters). Omit search parameters to return all station entrances.</p>\r\n\r\n<h4 class=\"text-primary\">Response Elements</h4>\r\n\r\n<table class=\"table table-condensed table-hover\">\r\n<thead>\r\n<tr>\r\n<th class=\"col-md-3\">Element</th>\r\n\r\n<th>Description</th>\r\n</tr>\r\n</thead>\r\n\r\n<tbody>\r\n<tr>\r\n<td>Entrances</td>\r\n\r\n<td>\r\nArray containing detailed information about station entrances\r\n(<a href=\"#StationEntrance\">StationEntrance</a>).\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"StationEntrance\" name=\r\n\"StationEntrance\">StationEntrance Elements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Description</td>\r\n\r\n<td>Additional information for the entrance, if available.\r\nCurrently available data usually shows the same value as the Name\r\nelement.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td style=\"text-decoration: line-through\">ID</td>\r\n\r\n<td><span class=\"text-danger\">Deprecated.</span></td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Lat</td>\r\n\r\n<td>Latitude.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Lon</td>\r\n\r\n<td>Longitude.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Name</td>\r\n\r\n<td>Name of the entrance (usually the station name and nearest\r\nintersection).</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StationCode1</td>\r\n\r\n<td>The station code associated with this entrance. Use this value\r\nin other rail-related APIs to retrieve data about a station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StationCode2</td>\r\n\r\n<td>For stations containing multiple platforms (e.g.: Gallery\r\nPlace, Fort Totten, L'Enfant Plaza, and Metro Center), the other\r\nstation code.</td>\r\n</tr>\r\n</tbody>\r\n</table>"
"paths./StationEntrances.get.operationId" = "XML - Station Entrances"
"paths./StationEntrances.get.parameters.length" = 3
"paths./StationEntrances.get.parameters[0].description" = "Center point Latitude, required if Longitude and Radius are specified."
"paths./StationEntrances.get.parameters[0].enum.length" = 1
"paths./StationEntrances.get.parameters[0].enum[0]" = "38.8978168"
"paths./StationEntrances.get.parameters[0].in" = "query"
"paths./StationEntrances.get.parameters[0].name" = "Lat"
"paths./StationEntrances.get.parameters[0].type" = "number"
"paths./StationEntrances.get.parameters[1].description" = "Center point Longitude, required if Latitude and Radius are specified."
"paths./StationEntrances.get.parameters[1].enum.length" = 1
"paths./StationEntrances.get.parameters[1].enum[0]" = "-77.0404246"
"paths./StationEntrances.get.parameters[1].in" = "query"
"paths./StationEntrances.get.parameters[1].name" = "Lon"
"paths./StationEntrances.get.parameters[1].type" = "number"
"paths./StationEntrances.get.parameters[2].description" = "Radius (meters) to include in the search area, required if Latitude and Longitude are specified."
"paths./StationEntrances.get.parameters[2].enum.length" = 1
"paths./StationEntrances.get.parameters[2].enum[0]" = "500"
"paths./StationEntrances.get.parameters[2].in" = "query"
"paths./StationEntrances.get.parameters[2].name" = "Radius"
"paths./StationEntrances.get.parameters[2].type" = "number"
"paths./StationEntrances.get.produces.length" = 1
"paths./StationEntrances.get.produces[0]" = "application/xml"
"paths./StationEntrances.get.responses.200.description" = "Default response code."
"paths./StationEntrances.get.responses.200.examples.application/xml" = "<StationEntrancesResp\n    xmlns=\"http://www.wmata.com\"\n    xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <Entrances>\n        <StationEntrance>\n            <Description>Farragut West, 17th &amp; I St</Description>\n            <ID>100</ID>\n            <Lat>38.901098</Lat>\n            <Lon>-77.039293</Lon>\n            <Name>Farragut West 17th &amp; I St</Name>\n            <StationCode1>C03</StationCode1>\n            <StationCode2/>\n        </StationEntrance>\n        <StationEntrance>\n            <Description>Farragut West, 18th &amp; I St</Description>\n            <ID>101</ID>\n            <Lat>38.901453</Lat>\n            <Lon>-77.042093</Lon>\n            <Name>Farragut West 18th &amp; I St</Name>\n            <StationCode1>C03</StationCode1>\n            <StationCode2/>\n        </StationEntrance>\n    </Entrances>\n</StationEntrancesResp>"
"paths./StationInfo.get.description" = "<h4 class=\"text-primary\">Description</h4>\r\n\r\n<p>Returns station location and address information based on a given\r\nStationCode.</p>\r\n\r\n<h4 class=\"text-primary\">Response Elements</h4>\r\n\r\n<table class=\"table table-condensed table-hover\">\r\n<thead>\r\n<tr>\r\n<th class=\"col-md-3\">Element</th>\r\n\r\n<th>Description</th>\r\n</tr>\r\n</thead>\r\n\r\n<tbody>\r\n<tr>\r\n<td>Address</td>\r\n\r\n<td>\r\nStructure describing <a href=\"#Address\">address</a> information.\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Code</td>\r\n\r\n<td>Station code. Repeated from input.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Lat</td>\r\n\r\n<td>Latitude.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>LineCode1</td>\r\n\r\n<td>Two-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,\r\nor SV) served by this station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>LineCode2</td>\r\n\r\n<td>Additional line served by this station. This is often the case\r\nwhen stations have multiple platforms (e.g.: Gallery Place, Fort\r\nTotten, L'Enfant Plaza, and Metro Center).</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>LineCode3</td>\r\n\r\n<td>Similar to function as LineCodeX.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>LineCode4</td>\r\n\r\n<td>Similar to function as LineCodeX. Currently not in use.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Lon</td>\r\n\r\n<td>Longitude.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Name</td>\r\n\r\n<td>Station name.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StationTogether1</td>\r\n\r\n<td>For stations with multiple platforms (e.g.: Gallery Place, Fort\r\nTotten, L'Enfant Plaza, and Metro Center), the additional\r\nStationCode will be listed here.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StationTogether2</td>\r\n\r\n<td>Similar in function to StationTogether2. Currently not in\r\nuse.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a name=\"Address\">Address Elements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>City</td>\r\n\r\n<td>City.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>State</td>\r\n\r\n<td>State (abbreviated).</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Street</td>\r\n\r\n<td>Street address (for GPS use).</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Zip</td>\r\n\r\n<td>Zip code.</td>\r\n</tr>\r\n</tbody>\r\n</table>"
"paths./StationInfo.get.operationId" = "XML - Station Information"
"paths./StationInfo.get.parameters.length" = 1
"paths./StationInfo.get.parameters[0].default" = "A01"
"paths./StationInfo.get.parameters[0].description" = "Station code.  Use the Station List method to return a list of all station codes."
"paths./StationInfo.get.parameters[0].enum.length" = 1
"paths./StationInfo.get.parameters[0].enum[0]" = "A01"
"paths./StationInfo.get.parameters[0].in" = "query"
"paths./StationInfo.get.parameters[0].name" = "StationCode"
"paths./StationInfo.get.parameters[0].required" = true
"paths./StationInfo.get.parameters[0].type" = "string"
"paths./StationInfo.get.produces.length" = 1
"paths./StationInfo.get.produces[0]" = "application/xml"
"paths./StationInfo.get.responses.200.description" = "Default response code."
"paths./StationInfo.get.responses.200.examples.application/xml" = "<Station\n    xmlns=\"http://www.wmata.com\"\n    xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <Address>\n        <City>Washington</City>\n        <State>DC</State>\n        <Street>607 13th St. NW</Street>\n        <Zip>20005</Zip>\n    </Address>\n    <Code>A01</Code>\n    <Lat>38.8983144732</Lat>\n    <LineCode1>RD</LineCode1>\n    <LineCode2 i:nil=\"true\"/>\n    <LineCode3 i:nil=\"true\"/>\n    <LineCode4 i:nil=\"true\"/>\n    <Lon>-77.0280779971</Lon>\n    <Name>Metro Center</Name>\n    <StationTogether1>C01</StationTogether1>\n    <StationTogether2/>\n</Station>"
"paths./StationParking.get.description" = "<h4 class=\"text-primary\">Description</h4>\r\n\r\n<p>Returns parking information at a station based on a given StationCode. Omit\r\nthe StationCode to return parking information for all stations.</p>\r\n\r\n<p>If a station has no parking, the StationsParking element will contain no\r\nchild elements.</p>\r\n\r\n<h4 class=\"text-primary\">Response Elements</h4>\r\n\r\n<table class=\"table table-condensed table-hover\">\r\n<thead>\r\n<tr>\r\n<th class=\"col-md-3\">Element</th>\r\n\r\n<th>Description</th>\r\n</tr>\r\n</thead>\r\n\r\n<tbody>\r\n<tr>\r\n<td>StationsParking</td>\r\n\r\n<td>\r\nArray containing station parking information (<a href=\r\n\"#StationParking\">StationParking</a>).\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"StationParking\" name=\"StationParking\">StationParking\r\nElements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Code</td>\r\n\r\n<td>Station code. Useful when returning parking information for all\r\nstations. Use this value in other rail-related APIs to retrieve\r\ndata about a station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Notes</td>\r\n\r\n<td>When not NULL, provides additional parking resources such as\r\nnearby lots.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>AllDayParking</td>\r\n\r\n<td>\r\nStructure describing <a href=\"#AllDayParking\">all-day\r\nparking</a> options.\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>ShortTermParking</td>\r\n\r\n<td>\r\nStructure describing <a href=\"#ShortTermParking\">short-term\r\nparking</a> options.\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"AllDayParking\" name=\"AllDayParking\">AllDayParking\r\nElements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>TotalCount</td>\r\n\r\n<td>Number of all-day parking spots available at a station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>RiderCost</td>\r\n\r\n<td>All-day cost per day for Metro riders. NULL when no all-day\r\nspots are available. For most stations, this value is identical to\r\nthe NonRiderCost.<br>\r\n<br>\r\nFor cases where the NonRiderCost is different, the lower cost per\r\nday requires a valid rail trip using a SmarTrip&reg; card\r\noriginating from a station other than the one where the patron\r\nparked. To receive this lower rate, patrons must pay for their\r\nparking with the same SmarTrip&reg; card used to enter/exit\r\nMetrorail, and must exit the parking lot within two hours of\r\nexiting Metrorail.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>NonRiderCost</td>\r\n\r\n<td>All-day cost per day for non-Metro riders. NULL when no all-day\r\nspots are available.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"ShortTermParking\" name=\r\n\"ShortTermParking\">ShortTermParking Elements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>TotalCount</td>\r\n\r\n<td>Number of short-term parking spots available at a station\r\n(parking meters).</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Notes</td>\r\n\r\n<td>Misc. information relating to short-term parking. NULL when no\r\nshort-term spots are available.</td>\r\n</tr>\r\n</tbody>\r\n</table>"
"paths./StationParking.get.operationId" = "XML - Parking Information"
"paths./StationParking.get.parameters.length" = 1
"paths./StationParking.get.parameters[0].description" = "Station code.  Use the Station List method to return a list of all station codes."
"paths./StationParking.get.parameters[0].enum.length" = 2
"paths./StationParking.get.parameters[0].enum[0]" = "E08"
"paths./StationParking.get.parameters[0].enum[1]" = "F06"
"paths./StationParking.get.parameters[0].in" = "query"
"paths./StationParking.get.parameters[0].name" = "StationCode"
"paths./StationParking.get.parameters[0].type" = "string"
"paths./StationParking.get.produces.length" = 1
"paths./StationParking.get.produces[0]" = "application/xml"
"paths./StationParking.get.responses.200.description" = "Default response code."
"paths./StationParking.get.responses.200.examples.application/xml" = "<StationParkingResp\n    xmlns=\"http://www.wmata.com\"\n    xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <StationsParking>\n        <StationParking>\n            <Code>F06</Code>\n            <Notes>325 spaces metered for 12-hr. max. @ $1.00 per 60 mins.</Notes>\n            <AllDayParking>\n                <TotalCount>808</TotalCount>\n                <RiderCost>4.60</RiderCost>\n                <NonRiderCost>4.60</NonRiderCost>\n            </AllDayParking>\n            <ShortTermParking>\n                <TotalCount>15</TotalCount>\n                <Notes>Short term parking available 5 am - 2 am, time limit 12 hours</Notes>\n            </ShortTermParking>\n        </StationParking>\n    </StationsParking>\n</StationParkingResp>"
"paths./StationTimes.get.description" = "<h4 class=\"text-primary\">Description</h4>\r\n\r\n<p>Returns opening and scheduled first/last train times based on a given\r\nStationCode. Omit the StationCode to return timing information for all\r\nstations.</p>\r\n\r\n<p>Note that for stations with multiple platforms (e.g.: Metro Center, L'Enfant\r\nPlaza, etc.), a distinct call is required for each StationCode to retrieve the\r\nfull set of train times at such stations.</p>\r\n\r\n<h4 class=\"text-primary\">Response Elements</h4>\r\n\r\n<table class=\"table table-condensed table-hover\">\r\n<thead>\r\n<tr>\r\n<th class=\"col-md-3\">Element</th>\r\n\r\n<th>Description</th>\r\n</tr>\r\n</thead>\r\n\r\n<tbody>\r\n<tr>\r\n<td>StationTimes</td>\r\n\r\n<td>\r\nArray containing station timing information (<a href=\r\n\"#StationTime\">StationTime</a>).\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"StationTime\" name=\"StationTime\">StationTime\r\nElements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Code</td>\r\n\r\n<td>Station code for this station. Use this value in other\r\nrail-related APIs to retrieve data about a station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StationName</td>\r\n\r\n<td>Full name of the station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>*Day Elements</td>\r\n\r\n<td>\r\nContainer elements containing timing information based on\r\n<a href=\"#dow\">day of the week.</a>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"dow\" name=\"dow\">Monday/Tuesday/Wednesday/etc.\r\nElements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>OpeningTime</td>\r\n\r\n<td>Station opening time. Format is HH:mm.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>FirstTrains</td>\r\n\r\n<td>\r\nStructure containing <a href=\"#first\">first train</a>\r\ninformation.\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>LastTrains</td>\r\n\r\n<td>\r\nStructure containing <a href=\"#last\">last train</a>\r\ninformation.\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"first\" name=\"first\">FirstTrains Elements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Time</td>\r\n\r\n<td>First train leaves the station at this time. Format is\r\nHH:mm.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>DestinationStation</td>\r\n\r\n<td>Station code for the train's destination. Use this value in\r\nother rail-related APIs to retrieve data about a station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"last\" name=\"last\">LastTrains Elements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Time</td>\r\n\r\n<td>Last train leaves the station at this time. Format is HH:mm.\r\nNote that when the time is AM, it signifies the next day. For\r\nexample, a value of 02:30 under a Saturday element means the last\r\ntrain leaves on Sunday at 2:30 AM.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>DestinationStation</td>\r\n\r\n<td>Station code for the train's destination. Use this value in\r\nother rail-related APIs to retrieve data about a station.</td>\r\n</tr>\r\n</tbody>\r\n</table>"
"paths./StationTimes.get.operationId" = "XML - Station Timings"
"paths./StationTimes.get.parameters.length" = 1
"paths./StationTimes.get.parameters[0].default" = "E10"
"paths./StationTimes.get.parameters[0].description" = "Station code.  Use the Station List method to return a list of all station codes."
"paths./StationTimes.get.parameters[0].enum.length" = 1
"paths./StationTimes.get.parameters[0].enum[0]" = "E10"
"paths./StationTimes.get.parameters[0].in" = "query"
"paths./StationTimes.get.parameters[0].name" = "StationCode"
"paths./StationTimes.get.parameters[0].type" = "string"
"paths./StationTimes.get.produces.length" = 1
"paths./StationTimes.get.produces[0]" = "application/xml"
"paths./StationTimes.get.responses.200.description" = "Default response code."
"paths./StationTimes.get.responses.200.examples.application/xml" = "<StationTimeResp\n    xmlns=\"http://www.wmata.com\"\n    xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <StationTimes>\n        <StationTime>\n            <Code>E10</Code>\n            <StationName>Greenbelt</StationName>\n            <Monday>\n                <OpeningTime>04:50</OpeningTime>\n                <FirstTrains>\n                    <Train>\n                        <Time>05:00</Time>\n                        <DestinationStation>F11</DestinationStation>\n                    </Train>\n                </FirstTrains>\n                <LastTrains>\n                    <Train>\n                        <Time>23:30</Time>\n                        <DestinationStation>F11</DestinationStation>\n                    </Train>\n                </LastTrains>\n            </Monday>\n            <Tuesday>\n                <OpeningTime>04:50</OpeningTime>\n                <FirstTrains>\n                    <Train>\n                        <Time>05:00</Time>\n                        <DestinationStation>F11</DestinationStation>\n                    </Train>\n                </FirstTrains>\n                <LastTrains>\n                    <Train>\n                        <Time>23:30</Time>\n                        <DestinationStation>F11</DestinationStation>\n                    </Train>\n                </LastTrains>\n            </Tuesday>\n            <Wednesday>\n                <OpeningTime>04:50</OpeningTime>\n                <FirstTrains>\n                    <Train>\n                        <Time>05:00</Time>\n                        <DestinationStation>F11</DestinationStation>\n                    </Train>\n                </FirstTrains>\n                <LastTrains>\n                    <Train>\n                        <Time>23:30</Time>\n                        <DestinationStation>F11</DestinationStation>\n                    </Train>\n                </LastTrains>\n            </Wednesday>\n            <Thursday>\n                <OpeningTime>04:50</OpeningTime>\n                <FirstTrains>\n                    <Train>\n                        <Time>05:00</Time>\n                        <DestinationStation>F11</DestinationStation>\n                    </Train>\n                </FirstTrains>\n                <LastTrains>\n                    <Train>\n                        <Time>23:30</Time>\n                        <DestinationStation>F11</DestinationStation>\n                    </Train>\n                </LastTrains>\n            </Thursday>\n            <Friday>\n                <OpeningTime>04:50</OpeningTime>\n                <FirstTrains>\n                    <Train>\n                        <Time>05:00</Time>\n                        <DestinationStation>F11</DestinationStation>\n                    </Train>\n                </FirstTrains>\n                <LastTrains>\n                    <Train>\n                        <Time>02:30</Time>\n                        <DestinationStation>F11</DestinationStation>\n                    </Train>\n                </LastTrains>\n            </Friday>\n            <Saturday>\n                <OpeningTime>06:50</OpeningTime>\n                <FirstTrains>\n                    <Train>\n                        <Time>07:00</Time>\n                        <DestinationStation>F11</DestinationStation>\n                    </Train>\n                </FirstTrains>\n                <LastTrains>\n                    <Train>\n                        <Time>02:30</Time>\n                        <DestinationStation>F11</DestinationStation>\n                    </Train>\n                </LastTrains>\n            </Saturday>\n            <Sunday>\n                <OpeningTime>06:50</OpeningTime>\n                <FirstTrains>\n                    <Train>\n                        <Time>07:00</Time>\n                        <DestinationStation>F11</DestinationStation>\n                    </Train>\n                </FirstTrains>\n                <LastTrains>\n                    <Train>\n                        <Time>23:30</Time>\n                        <DestinationStation>F11</DestinationStation>\n                    </Train>\n                </LastTrains>\n            </Sunday>\n        </StationTime>\n    </StationTimes>\n</StationTimeResp>"
"paths./Stations.get.description" = "<h4 class=\"text-primary\">Description</h4>\r\n\r\n<p>Returns a list of station location and address information based on a given\r\nLineCode. Omit the LineCode to return all stations. The response is an array of\r\nobjects identical to those returned in the Station Information method.</p>\r\n\r\n<h4 class=\"text-primary\">Response Elements</h4>\r\n\r\n<table class=\"table table-condensed table-hover\">\r\n<thead>\r\n<tr>\r\n<th class=\"col-md-3\">Element</th>\r\n\r\n<th>Description</th>\r\n</tr>\r\n</thead>\r\n\r\n<tbody>\r\n<tr>\r\n<td>Stations</td>\r\n\r\n<td>\r\nArray containing station information (<a href=\r\n\"#Station\">Station</a>).\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"Station\" name=\"Station\">Station Elements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Address</td>\r\n\r\n<td>\r\nStructure describing <a href=\"#Address\">address</a> information.\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Code</td>\r\n\r\n<td>Station code. Repeated from input.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Lat</td>\r\n\r\n<td>Latitude.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>LineCode1</td>\r\n\r\n<td>Two-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,\r\nor SV) served by this station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>LineCode2</td>\r\n\r\n<td>Additional line served by this station. This is often the case\r\nwhen stations have multiple platforms (e.g.: Gallery Place, Fort\r\nTotten, L'Enfant Plaza, and Metro Center).</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>LineCode3</td>\r\n\r\n<td>Similar to function as LineCodeX.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>LineCode4</td>\r\n\r\n<td>Similar to function as LineCodeX. Currently not in use.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Lon</td>\r\n\r\n<td>Longitude.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Name</td>\r\n\r\n<td>Station name.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StationTogether1</td>\r\n\r\n<td>For stations with multiple platforms (e.g.: Gallery Place, Fort\r\nTotten, L'Enfant Plaza, and Metro Center), the additional\r\nStationCode will be listed here.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StationTogether2</td>\r\n\r\n<td>Similar in function to StationTogether2. Currently not in\r\nuse.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"Address\" name=\"Address\">Address Elements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>City</td>\r\n\r\n<td>City.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>State</td>\r\n\r\n<td>State (abbreviated).</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Street</td>\r\n\r\n<td>Street address (for GPS use).</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Zip</td>\r\n\r\n<td>Zip code.</td>\r\n</tr>\r\n</tbody>\r\n</table>"
"paths./Stations.get.operationId" = "XML - Station List"
"paths./Stations.get.parameters.length" = 1
"paths./Stations.get.parameters[0].description" = "Two-letter line code abbreviation:\n\n<ul>\n<li>RD - Red</li>\n<li>YL - Yellow</li>\n<li>GR - Green</li>\n<li>BL - Blue</li>\n<li>OR - Orange</li>\n<li>SV - Silver</li>\n</ul>"
"paths./Stations.get.parameters[0].enum.length" = 6
"paths./Stations.get.parameters[0].enum[0]" = "RD"
"paths./Stations.get.parameters[0].enum[1]" = "YL"
"paths./Stations.get.parameters[0].enum[2]" = "GR"
"paths./Stations.get.parameters[0].enum[3]" = "BL"
"paths./Stations.get.parameters[0].enum[4]" = "OR"
"paths./Stations.get.parameters[0].enum[5]" = "SV"
"paths./Stations.get.parameters[0].in" = "query"
"paths./Stations.get.parameters[0].name" = "LineCode"
"paths./Stations.get.parameters[0].type" = "string"
"paths./Stations.get.produces.length" = 1
"paths./Stations.get.produces[0]" = "application/xml"
"paths./Stations.get.responses.200.description" = "Default response code."
"paths./Stations.get.responses.200.examples.application/xml" = "\n\n<StationsResp\n    xmlns=\"http://www.wmata.com\"\n    xmlns:i=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <Stations>\n        <Station>\n            <Address>\n                <City>Rockville</City>\n                <State>MD</State>\n                <Street>15903 Somerville Drive</Street>\n                <Zip>20855</Zip>\n            </Address>\n            <Code>A15</Code>\n            <Lat>39.1199273249</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.1646273343</Lon>\n            <Name>Shady Grove</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Rockville</City>\n                <State>MD</State>\n                <Street>251 Hungerford Drive</Street>\n                <Zip>20850</Zip>\n            </Address>\n            <Code>A14</Code>\n            <Lat>39.0843216075</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.1461253392</Lon>\n            <Name>Rockville</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Rockville</City>\n                <State>MD</State>\n                <Street>1600 Chapman Avenue</Street>\n                <Zip>20852</Zip>\n            </Address>\n            <Code>A13</Code>\n            <Lat>39.0624676517</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.1208179517</Lon>\n            <Name>Twinbrook</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Rockville</City>\n                <State>MD</State>\n                <Street>5500 Marinelli Road</Street>\n                <Zip>20852</Zip>\n            </Address>\n            <Code>A12</Code>\n            <Lat>39.0481513573</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.112829859</Lon>\n            <Name>White Flint</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Bethesda</City>\n                <State>MD</State>\n                <Street>10300 Rockville Pike</Street>\n                <Zip>20852</Zip>\n            </Address>\n            <Code>A11</Code>\n            <Lat>39.02926895</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.10384972</Lon>\n            <Name>Grosvenor</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Bethesda</City>\n                <State>MD</State>\n                <Street>8810 Rockville Pike</Street>\n                <Zip>20814</Zip>\n            </Address>\n            <Code>A10</Code>\n            <Lat>39.0000564843</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0969522905</Lon>\n            <Name>Medical Center</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Bethesda</City>\n                <State>MD</State>\n                <Street>7450 Wisconsin Avenue</Street>\n                <Zip>20814</Zip>\n            </Address>\n            <Code>A09</Code>\n            <Lat>38.9843936603</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0941291922</Lon>\n            <Name>Bethesda</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>5337 Wisconsin Avenue NW</Street>\n                <Zip>20015</Zip>\n            </Address>\n            <Code>A08</Code>\n            <Lat>38.9594838736</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.084995805</Lon>\n            <Name>Friendship Heights</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>4501 Wisconsin Avenue NW</Street>\n                <Zip>20016</Zip>\n            </Address>\n            <Code>A07</Code>\n            <Lat>38.9488514351</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0795873255</Lon>\n            <Name>Tenleytown</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>4200 Connecticut Avenue NW</Street>\n                <Zip>20008</Zip>\n            </Address>\n            <Code>A06</Code>\n            <Lat>38.9432652883</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0629861805</Lon>\n            <Name>Van Ness UDC</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>3599 Connecticut Avenue NW</Street>\n                <Zip>20008</Zip>\n            </Address>\n            <Code>A05</Code>\n            <Lat>38.9347628908</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0580425191</Lon>\n            <Name>Cleveland Park</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>2700 Connecticut Ave., NW</Street>\n                <Zip>20008</Zip>\n            </Address>\n            <Code>A04</Code>\n            <Lat>38.9250851371</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0524180207</Lon>\n            <Name>Woodley Park Zoo</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>1525 20th St. NW</Street>\n                <Zip>20036</Zip>\n            </Address>\n            <Code>A03</Code>\n            <Lat>38.9095980575</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0434143597</Lon>\n            <Name>Dupont Circle</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>1001 Connecticut Avenue NW</Street>\n                <Zip>20036</Zip>\n            </Address>\n            <Code>A02</Code>\n            <Lat>38.9032019462</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0397008272</Lon>\n            <Name>Farragut North</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>607 13th St. NW</Street>\n                <Zip>20005</Zip>\n            </Address>\n            <Code>A01</Code>\n            <Lat>38.8983144732</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0280779971</Lon>\n            <Name>Metro Center</Name>\n            <StationTogether1>C01</StationTogether1>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>630 H St. NW</Street>\n                <Zip>20001</Zip>\n            </Address>\n            <Code>B01</Code>\n            <Lat>38.8983168097</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0219153904</Lon>\n            <Name>Gallery Place</Name>\n            <StationTogether1>F01</StationTogether1>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>450 F Street NW</Street>\n                <Zip>20001</Zip>\n            </Address>\n            <Code>B02</Code>\n            <Lat>38.8960903176</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0166389566</Lon>\n            <Name>Judiciary Square</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>701 First St. NE</Street>\n                <Zip>20002</Zip>\n            </Address>\n            <Code>B03</Code>\n            <Lat>38.8977660392</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0074142921</Lon>\n            <Name>Union Station</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>200 Florida Ave N.E.</Street>\n                <Zip>20002</Zip>\n            </Address>\n            <Code>B35</Code>\n            <Lat>38.9070162121</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0030204472</Lon>\n            <Name>New York Avenue</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>919 Rhode Island Avenue NE</Street>\n                <Zip>20018</Zip>\n            </Address>\n            <Code>B04</Code>\n            <Lat>38.9210596891</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-76.9959369166</Lon>\n            <Name>Rhode Island Avenue</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>801 Michigan Avenue NE</Street>\n                <Zip>20017</Zip>\n            </Address>\n            <Code>B05</Code>\n            <Lat>38.9332109913</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-76.9945342851</Lon>\n            <Name>Brookland</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>550 Galloway Street NE</Street>\n                <Zip>20011</Zip>\n            </Address>\n            <Code>B06</Code>\n            <Lat>38.9518467675</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0022030768</Lon>\n            <Name>Fort Totten</Name>\n            <StationTogether1>E06</StationTogether1>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Washington</City>\n                <State>DC</State>\n                <Street>327 Cedar Street NW</Street>\n                <Zip>20012</Zip>\n            </Address>\n            <Code>B07</Code>\n            <Lat>38.976078531</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0181766987</Lon>\n            <Name>Takoma</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Silver Spring</City>\n                <State>MD</State>\n                <Street>8400 Colesville Road</Street>\n                <Zip>20910</Zip>\n            </Address>\n            <Code>B08</Code>\n            <Lat>38.9939493747</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0310178268</Lon>\n            <Name>Silver Spring</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Forest Glen</City>\n                <State>MD</State>\n                <Street>9730 Georgia Avenue</Street>\n                <Zip>20910</Zip>\n            </Address>\n            <Code>B09</Code>\n            <Lat>39.0149542752</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0429165548</Lon>\n            <Name>Forest Glen</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Silver Spring</City>\n                <State>MD</State>\n                <Street>11171 Georgia Avenue</Street>\n                <Zip>20902</Zip>\n            </Address>\n            <Code>B10</Code>\n            <Lat>39.0375271436</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0501070535</Lon>\n            <Name>Wheaton</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n        <Station>\n            <Address>\n                <City>Silver Spring</City>\n                <State>MD</State>\n                <Street>12501 Georgia Avenue</Street>\n                <Zip>20906</Zip>\n            </Address>\n            <Code>B11</Code>\n            <Lat>39.0617837655</Lat>\n            <LineCode1>RD</LineCode1>\n            <LineCode2 i:nil=\"true\"/>\n            <LineCode3 i:nil=\"true\"/>\n            <LineCode4 i:nil=\"true\"/>\n            <Lon>-77.0535573593</Lon>\n            <Name>Glenmont</Name>\n            <StationTogether1/>\n            <StationTogether2/>\n        </Station>\n    </Stations>\n</StationsResp>"
"paths./json/jLines.get.description" = "<h4 class=\"text-primary\">Description</h4>\r\n\r\n<p>Returns information about all rail lines.</p>\r\n\r\n<h4 class=\"text-primary\">Response Elements</h4>\r\n\r\n<table class=\"table table-condensed table-hover\">\r\n<thead>\r\n<tr>\r\n<th class=\"col-md-3\">Element</th>\r\n\r\n<th>Description</th>\r\n</tr>\r\n</thead>\r\n\r\n<tbody>\r\n<tr>\r\n<td>Lines</td>\r\n\r\n<td>\r\nArray containing line information (<a href=\"#Line\">Line</a>).\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"Line\" name=\"Line\">Line Elements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>DisplayName</td>\r\n\r\n<td>Full name of line color.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>EndStationCode</td>\r\n\r\n<td>End station code. For example, will be E10 (Greenbelt) for the\r\nGreen Line, B11 (Glenmont) for the Red Line, etc. Use this value in\r\nother rail-related APIs to retrieve data about a station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>InternalDestination1</td>\r\n\r\n<td>Intermediate terminal station code. During normal service, some\r\ntrains on some lines might end their trip prior to the\r\nStartStationCode or EndStationCode. A good example is on the Red\r\nLine where some trains stop at A11 (Grosvenor) or B08 (Silver\r\nSpring). Empty string if not defined.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>InternalDestination2</td>\r\n\r\n<td>Similar to InternalDestination1.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>LineCode</td>\r\n\r\n<td>Two-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,\r\nor SV).</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StartStationCode</td>\r\n\r\n<td>Start station code. For example, will be F11 (Branch Avenue)\r\nfor the Green Line, A15 (Shady Grove) for the Red Line, etc. Use\r\nthis value in other rail-related APIs to retrieve data about a\r\nstation.</td>\r\n</tr>\r\n</tbody>\r\n</table>"
"paths./json/jLines.get.operationId" = "JSON - Lines"
"paths./json/jLines.get.produces.length" = 1
"paths./json/jLines.get.produces[0]" = "application/json"
"paths./json/jLines.get.responses.200.description" = "Default response code."
"paths./json/jLines.get.responses.200.examples.application/json.Lines.length" = 6
"paths./json/jLines.get.responses.200.examples.application/json.Lines[0].DisplayName" = "Green"
"paths./json/jLines.get.responses.200.examples.application/json.Lines[0].EndStationCode" = "E10"
"paths./json/jLines.get.responses.200.examples.application/json.Lines[0].InternalDestination1" = ""
"paths./json/jLines.get.responses.200.examples.application/json.Lines[0].InternalDestination2" = ""
"paths./json/jLines.get.responses.200.examples.application/json.Lines[0].LineCode" = "GR"
"paths./json/jLines.get.responses.200.examples.application/json.Lines[0].StartStationCode" = "F11"
"paths./json/jLines.get.responses.200.examples.application/json.Lines[1].DisplayName" = "Blue"
"paths./json/jLines.get.responses.200.examples.application/json.Lines[1].EndStationCode" = "G05"
"paths./json/jLines.get.responses.200.examples.application/json.Lines[1].InternalDestination1" = ""
"paths./json/jLines.get.responses.200.examples.application/json.Lines[1].InternalDestination2" = ""
"paths./json/jLines.get.responses.200.examples.application/json.Lines[1].LineCode" = "BL"
"paths./json/jLines.get.responses.200.examples.application/json.Lines[1].StartStationCode" = "J03"
"paths./json/jLines.get.responses.200.examples.application/json.Lines[2].DisplayName" = "Silver"
"paths./json/jLines.get.responses.200.examples.application/json.Lines[2].EndStationCode" = "G05"
"paths./json/jLines.get.responses.200.examples.application/json.Lines[2].InternalDestination1" = ""
"paths./json/jLines.get.responses.200.examples.application/json.Lines[2].InternalDestination2" = ""
"paths./json/jLines.get.responses.200.examples.application/json.Lines[2].LineCode" = "SV"
"paths./json/jLines.get.responses.200.examples.application/json.Lines[2].StartStationCode" = "N06"
"paths./json/jLines.get.responses.200.examples.application/json.Lines[3].DisplayName" = "Red"
"paths./json/jLines.get.responses.200.examples.application/json.Lines[3].EndStationCode" = "B11"
"paths./json/jLines.get.responses.200.examples.application/json.Lines[3].InternalDestination1" = "A11"
"paths./json/jLines.get.responses.200.examples.application/json.Lines[3].InternalDestination2" = "B08"
"paths./json/jLines.get.responses.200.examples.application/json.Lines[3].LineCode" = "RD"
"paths./json/jLines.get.responses.200.examples.application/json.Lines[3].StartStationCode" = "A15"
"paths./json/jLines.get.responses.200.examples.application/json.Lines[4].DisplayName" = "Orange"
"paths./json/jLines.get.responses.200.examples.application/json.Lines[4].EndStationCode" = "D13"
"paths./json/jLines.get.responses.200.examples.application/json.Lines[4].InternalDestination1" = ""
"paths./json/jLines.get.responses.200.examples.application/json.Lines[4].InternalDestination2" = ""
"paths./json/jLines.get.responses.200.examples.application/json.Lines[4].LineCode" = "OR"
"paths./json/jLines.get.responses.200.examples.application/json.Lines[4].StartStationCode" = "K08"
"paths./json/jLines.get.responses.200.examples.application/json.Lines[5].DisplayName" = "Yellow"
"paths./json/jLines.get.responses.200.examples.application/json.Lines[5].EndStationCode" = "E06"
"paths./json/jLines.get.responses.200.examples.application/json.Lines[5].InternalDestination1" = "E01"
"paths./json/jLines.get.responses.200.examples.application/json.Lines[5].InternalDestination2" = ""
"paths./json/jLines.get.responses.200.examples.application/json.Lines[5].LineCode" = "YL"
"paths./json/jLines.get.responses.200.examples.application/json.Lines[5].StartStationCode" = "C15"
"paths./json/jPath.get.description" = "<h4 class=\"text-primary\">Description</h4>\r\n\r\n<p>Returns a set of ordered stations and distances between two stations on the\r\n<em>same line</em>.</p>\r\n\r\n<p>Note that this method is not suitable on its own as a pathfinding solution\r\nbetween stations.</p>\r\n\r\n<h4 class=\"text-primary\">Response Elements</h4>\r\n\r\n<table class=\"table table-condensed table-hover\">\r\n<thead>\r\n<tr>\r\n<th class=\"col-md-3\">Element</th>\r\n\r\n<th>Description</th>\r\n</tr>\r\n</thead>\r\n\r\n<tbody>\r\n<tr>\r\n<td>Path</td>\r\n\r\n<td>\r\nArray containing path details (<a href=\r\n\"#MetroPathItem\">MetroPathItem</a>)\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"MetroPathItem\" name=\"MetroPathItem\">MetroPathItem\r\nElements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>DistanceToPrev</td>\r\n\r\n<td>Distance in feet to the previous station in the list.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>LineCode</td>\r\n\r\n<td>Two-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,\r\nor SV) this station's platform is on.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>SeqNum</td>\r\n\r\n<td>Ordered sequence number.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StationCode</td>\r\n\r\n<td>Station code for this station. Use this value in other\r\nrail-related APIs to retrieve data about a station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StationName</td>\r\n\r\n<td>Full name for this station, as shown on the WMATA website.</td>\r\n</tr>\r\n</tbody>\r\n</table>"
"paths./json/jPath.get.operationId" = "JSON - Path Between Stations"
"paths./json/jPath.get.parameters.length" = 2
"paths./json/jPath.get.parameters[0].default" = "N06"
"paths./json/jPath.get.parameters[0].description" = "Station code for the origin station.  Use the Station List method to return a list of all station codes."
"paths./json/jPath.get.parameters[0].enum.length" = 1
"paths./json/jPath.get.parameters[0].enum[0]" = "N06"
"paths./json/jPath.get.parameters[0].in" = "query"
"paths./json/jPath.get.parameters[0].name" = "FromStationCode"
"paths./json/jPath.get.parameters[0].required" = true
"paths./json/jPath.get.parameters[0].type" = "string"
"paths./json/jPath.get.parameters[1].default" = "G05"
"paths./json/jPath.get.parameters[1].description" = "Station code for the destination station.  Use the Station List method to return a list of all station codes."
"paths./json/jPath.get.parameters[1].enum.length" = 1
"paths./json/jPath.get.parameters[1].enum[0]" = "G05"
"paths./json/jPath.get.parameters[1].in" = "query"
"paths./json/jPath.get.parameters[1].name" = "ToStationCode"
"paths./json/jPath.get.parameters[1].required" = true
"paths./json/jPath.get.parameters[1].type" = "string"
"paths./json/jPath.get.produces.length" = 1
"paths./json/jPath.get.produces[0]" = "application/json"
"paths./json/jPath.get.responses.200.description" = "Default response code."
"paths./json/jPath.get.responses.200.examples.application/json.Path.length" = 28
"paths./json/jPath.get.responses.200.examples.application/json.Path[0].DistanceToPrev" = 0.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[0].LineCode" = "SV"
"paths./json/jPath.get.responses.200.examples.application/json.Path[0].SeqNum" = 1.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[0].StationCode" = "N06"
"paths./json/jPath.get.responses.200.examples.application/json.Path[0].StationName" = "Wiehle-Reston East"
"paths./json/jPath.get.responses.200.examples.application/json.Path[10].DistanceToPrev" = 4936.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[10].LineCode" = "SV"
"paths./json/jPath.get.responses.200.examples.application/json.Path[10].SeqNum" = 11.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[10].StationCode" = "C05"
"paths./json/jPath.get.responses.200.examples.application/json.Path[10].StationName" = "Rosslyn"
"paths./json/jPath.get.responses.200.examples.application/json.Path[11].DistanceToPrev" = 6993.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[11].LineCode" = "SV"
"paths./json/jPath.get.responses.200.examples.application/json.Path[11].SeqNum" = 12.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[11].StationCode" = "C04"
"paths./json/jPath.get.responses.200.examples.application/json.Path[11].StationName" = "Foggy Bottom"
"paths./json/jPath.get.responses.200.examples.application/json.Path[12].DistanceToPrev" = 2783.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[12].LineCode" = "SV"
"paths./json/jPath.get.responses.200.examples.application/json.Path[12].SeqNum" = 13.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[12].StationCode" = "C03"
"paths./json/jPath.get.responses.200.examples.application/json.Path[12].StationName" = "Farragut West"
"paths./json/jPath.get.responses.200.examples.application/json.Path[13].DistanceToPrev" = 2001.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[13].LineCode" = "SV"
"paths./json/jPath.get.responses.200.examples.application/json.Path[13].SeqNum" = 14.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[13].StationCode" = "C02"
"paths./json/jPath.get.responses.200.examples.application/json.Path[13].StationName" = "McPherson Square"
"paths./json/jPath.get.responses.200.examples.application/json.Path[14].DistanceToPrev" = 2359.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[14].LineCode" = "SV"
"paths./json/jPath.get.responses.200.examples.application/json.Path[14].SeqNum" = 15.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[14].StationCode" = "C01"
"paths./json/jPath.get.responses.200.examples.application/json.Path[14].StationName" = "Metro Center"
"paths./json/jPath.get.responses.200.examples.application/json.Path[15].DistanceToPrev" = 1561.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[15].LineCode" = "SV"
"paths./json/jPath.get.responses.200.examples.application/json.Path[15].SeqNum" = 16.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[15].StationCode" = "D01"
"paths./json/jPath.get.responses.200.examples.application/json.Path[15].StationName" = "Federal Triangle"
"paths./json/jPath.get.responses.200.examples.application/json.Path[16].DistanceToPrev" = 2016.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[16].LineCode" = "SV"
"paths./json/jPath.get.responses.200.examples.application/json.Path[16].SeqNum" = 17.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[16].StationCode" = "D02"
"paths./json/jPath.get.responses.200.examples.application/json.Path[16].StationName" = "Smithsonian"
"paths./json/jPath.get.responses.200.examples.application/json.Path[17].DistanceToPrev" = 2643.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[17].LineCode" = "SV"
"paths./json/jPath.get.responses.200.examples.application/json.Path[17].SeqNum" = 18.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[17].StationCode" = "D03"
"paths./json/jPath.get.responses.200.examples.application/json.Path[17].StationName" = "L'Enfant Plaza"
"paths./json/jPath.get.responses.200.examples.application/json.Path[18].DistanceToPrev" = 1757.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[18].LineCode" = "SV"
"paths./json/jPath.get.responses.200.examples.application/json.Path[18].SeqNum" = 19.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[18].StationCode" = "D04"
"paths./json/jPath.get.responses.200.examples.application/json.Path[18].StationName" = "Federal Center SW"
"paths./json/jPath.get.responses.200.examples.application/json.Path[19].DistanceToPrev" = 3052.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[19].LineCode" = "SV"
"paths./json/jPath.get.responses.200.examples.application/json.Path[19].SeqNum" = 20.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[19].StationCode" = "D05"
"paths./json/jPath.get.responses.200.examples.application/json.Path[19].StationName" = "Capitol South"
"paths./json/jPath.get.responses.200.examples.application/json.Path[1].DistanceToPrev" = 30867.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[1].LineCode" = "SV"
"paths./json/jPath.get.responses.200.examples.application/json.Path[1].SeqNum" = 2.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[1].StationCode" = "N04"
"paths./json/jPath.get.responses.200.examples.application/json.Path[1].StationName" = "Spring Hill"
"paths./json/jPath.get.responses.200.examples.application/json.Path[20].DistanceToPrev" = 2703.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[20].LineCode" = "SV"
"paths./json/jPath.get.responses.200.examples.application/json.Path[20].SeqNum" = 21.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[20].StationCode" = "D06"
"paths./json/jPath.get.responses.200.examples.application/json.Path[20].StationName" = "Eastern Market"
"paths./json/jPath.get.responses.200.examples.application/json.Path[21].DistanceToPrev" = 3289.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[21].LineCode" = "SV"
"paths./json/jPath.get.responses.200.examples.application/json.Path[21].SeqNum" = 22.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[21].StationCode" = "D07"
"paths./json/jPath.get.responses.200.examples.application/json.Path[21].StationName" = "Potomac Avenue"
"paths./json/jPath.get.responses.200.examples.application/json.Path[22].DistanceToPrev" = 3750.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[22].LineCode" = "SV"
"paths./json/jPath.get.responses.200.examples.application/json.Path[22].SeqNum" = 23.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[22].StationCode" = "D08"
"paths./json/jPath.get.responses.200.examples.application/json.Path[22].StationName" = "Stadium Armory"
"paths./json/jPath.get.responses.200.examples.application/json.Path[23].DistanceToPrev" = 12162.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[23].LineCode" = "SV"
"paths./json/jPath.get.responses.200.examples.application/json.Path[23].SeqNum" = 24.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[23].StationCode" = "G01"
"paths./json/jPath.get.responses.200.examples.application/json.Path[23].StationName" = "Benning Road"
"paths./json/jPath.get.responses.200.examples.application/json.Path[24].DistanceToPrev" = 7779.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[24].LineCode" = "SV"
"paths./json/jPath.get.responses.200.examples.application/json.Path[24].SeqNum" = 25.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[24].StationCode" = "G02"
"paths./json/jPath.get.responses.200.examples.application/json.Path[24].StationName" = "Capitol Heights"
"paths./json/jPath.get.responses.200.examples.application/json.Path[25].DistanceToPrev" = 5215.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[25].LineCode" = "SV"
"paths./json/jPath.get.responses.200.examples.application/json.Path[25].SeqNum" = 26.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[25].StationCode" = "G03"
"paths./json/jPath.get.responses.200.examples.application/json.Path[25].StationName" = "Addison Road"
"paths./json/jPath.get.responses.200.examples.application/json.Path[26].DistanceToPrev" = 7960.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[26].LineCode" = "SV"
"paths./json/jPath.get.responses.200.examples.application/json.Path[26].SeqNum" = 27.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[26].StationCode" = "G04"
"paths./json/jPath.get.responses.200.examples.application/json.Path[26].StationName" = "Morgan Blvd"
"paths./json/jPath.get.responses.200.examples.application/json.Path[27].DistanceToPrev" = 7256.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[27].LineCode" = "SV"
"paths./json/jPath.get.responses.200.examples.application/json.Path[27].SeqNum" = 28.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[27].StationCode" = "G05"
"paths./json/jPath.get.responses.200.examples.application/json.Path[27].StationName" = "Largo Town Center"
"paths./json/jPath.get.responses.200.examples.application/json.Path[2].DistanceToPrev" = 3634.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[2].LineCode" = "SV"
"paths./json/jPath.get.responses.200.examples.application/json.Path[2].SeqNum" = 3.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[2].StationCode" = "N03"
"paths./json/jPath.get.responses.200.examples.application/json.Path[2].StationName" = "Greensboro"
"paths./json/jPath.get.responses.200.examples.application/json.Path[3].DistanceToPrev" = 3902.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[3].LineCode" = "SV"
"paths./json/jPath.get.responses.200.examples.application/json.Path[3].SeqNum" = 4.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[3].StationCode" = "N02"
"paths./json/jPath.get.responses.200.examples.application/json.Path[3].StationName" = "Tysons Corner"
"paths./json/jPath.get.responses.200.examples.application/json.Path[4].DistanceToPrev" = 3440.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[4].LineCode" = "SV"
"paths./json/jPath.get.responses.200.examples.application/json.Path[4].SeqNum" = 5.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[4].StationCode" = "N01"
"paths./json/jPath.get.responses.200.examples.application/json.Path[4].StationName" = "McLean"
"paths./json/jPath.get.responses.200.examples.application/json.Path[5].DistanceToPrev" = 24745.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[5].LineCode" = "SV"
"paths./json/jPath.get.responses.200.examples.application/json.Path[5].SeqNum" = 6.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[5].StationCode" = "K05"
"paths./json/jPath.get.responses.200.examples.application/json.Path[5].StationName" = "E Falls Church"
"paths./json/jPath.get.responses.200.examples.application/json.Path[6].DistanceToPrev" = 13156.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[6].LineCode" = "SV"
"paths./json/jPath.get.responses.200.examples.application/json.Path[6].SeqNum" = 7.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[6].StationCode" = "K04"
"paths./json/jPath.get.responses.200.examples.application/json.Path[6].StationName" = "Ballston"
"paths./json/jPath.get.responses.200.examples.application/json.Path[7].DistanceToPrev" = 2980.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[7].LineCode" = "SV"
"paths./json/jPath.get.responses.200.examples.application/json.Path[7].SeqNum" = 8.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[7].StationCode" = "K03"
"paths./json/jPath.get.responses.200.examples.application/json.Path[7].StationName" = "Virginia Square"
"paths./json/jPath.get.responses.200.examples.application/json.Path[8].DistanceToPrev" = 2473.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[8].LineCode" = "SV"
"paths./json/jPath.get.responses.200.examples.application/json.Path[8].SeqNum" = 9.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[8].StationCode" = "K02"
"paths./json/jPath.get.responses.200.examples.application/json.Path[8].StationName" = "Clarendon"
"paths./json/jPath.get.responses.200.examples.application/json.Path[9].DistanceToPrev" = 2687.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[9].LineCode" = "SV"
"paths./json/jPath.get.responses.200.examples.application/json.Path[9].SeqNum" = 10.0
"paths./json/jPath.get.responses.200.examples.application/json.Path[9].StationCode" = "K01"
"paths./json/jPath.get.responses.200.examples.application/json.Path[9].StationName" = "Court House"
"paths./json/jSrcStationToDstStationInfo.get.description" = "<h4 class=\"text-primary\">Description</h4>\r\n\r\n<p>Returns a distance, fare information, and estimated travel time between any\r\ntwo stations, including those on different lines. Omit both parameters to\r\nretrieve data for all stations.</p>\r\n\r\n<h4 class=\"text-primary\">Response Elements</h4>\r\n\r\n<table class=\"table table-condensed table-hover\">\r\n<thead>\r\n<tr>\r\n<th class=\"col-md-3\">Element</th>\r\n\r\n<th>Description</th>\r\n</tr>\r\n</thead>\r\n\r\n<tbody>\r\n<tr>\r\n<td>StationToStationInfos</td>\r\n\r\n<td>\r\nArray containing station to station information (<a href=\r\n\"#StationToStationInfo\">StationToStationInfo</a>).\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"StationToStationInfo\" name=\r\n\"StationToStationInfo\">StationToStationInfo Elements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>CompositeMiles</td>\r\n\r\n<td>Distance in miles from the source to destination station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>DestinationStation</td>\r\n\r\n<td>Destination station code. Use this value in other rail-related\r\nAPIs to retrieve data about a station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>RailFare</td>\r\n\r\n<td>\r\nStructure containing <a href=\"#RailFare\">fare</a> information.\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>RailTime</td>\r\n\r\n<td>Estimated travel time (schedule time) in minutes between the source and\r\ndestination station. This is not correlated to minutes <span class=\"text-info\">(Min)</span> in Real-Time Rail Predictions.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>SourceStation</td>\r\n\r\n<td>Origin station code. Use this value in other rail-related APIs\r\nto retrieve data about a station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"RailFare\" name=\"RailFare\">RailFare Elements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>OffPeakTime</td>\r\n\r\n<td>Fare during off-peak times (times other than the ones described\r\nbelow).</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>PeakTime</td>\r\n\r\n<td>Fare during peak times (weekdays from opening to 9:30 AM and\r\n3-7 PM, and weekends from midnight to closing).</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>SeniorDisabled</td>\r\n\r\n<td>\r\nReduced fare for <a href=\r\n\"http://www.wmata.com/fares/reduced.cfm\">senior citizens or\r\npeople with disabilities</a>.\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>"
"paths./json/jSrcStationToDstStationInfo.get.operationId" = "JSON - Station to Station Information"
"paths./json/jSrcStationToDstStationInfo.get.parameters.length" = 2
"paths./json/jSrcStationToDstStationInfo.get.parameters[0].default" = "E10"
"paths./json/jSrcStationToDstStationInfo.get.parameters[0].description" = "Station code for the origin station.  Use the Station List method to return a list of all station codes."
"paths./json/jSrcStationToDstStationInfo.get.parameters[0].enum.length" = 1
"paths./json/jSrcStationToDstStationInfo.get.parameters[0].enum[0]" = "E10"
"paths./json/jSrcStationToDstStationInfo.get.parameters[0].in" = "query"
"paths./json/jSrcStationToDstStationInfo.get.parameters[0].name" = "FromStationCode"
"paths./json/jSrcStationToDstStationInfo.get.parameters[0].type" = "string"
"paths./json/jSrcStationToDstStationInfo.get.parameters[1].default" = "J03"
"paths./json/jSrcStationToDstStationInfo.get.parameters[1].description" = "Station code for the destination station.  Use the Station List method to return a list of all station codes."
"paths./json/jSrcStationToDstStationInfo.get.parameters[1].enum.length" = 1
"paths./json/jSrcStationToDstStationInfo.get.parameters[1].enum[0]" = "J03"
"paths./json/jSrcStationToDstStationInfo.get.parameters[1].in" = "query"
"paths./json/jSrcStationToDstStationInfo.get.parameters[1].name" = "ToStationCode"
"paths./json/jSrcStationToDstStationInfo.get.parameters[1].type" = "string"
"paths./json/jSrcStationToDstStationInfo.get.produces.length" = 1
"paths./json/jSrcStationToDstStationInfo.get.produces[0]" = "application/json"
"paths./json/jSrcStationToDstStationInfo.get.responses.200.description" = "Default response code."
"paths./json/jSrcStationToDstStationInfo.get.responses.200.examples.application/json.StationToStationInfos.length" = 1
"paths./json/jSrcStationToDstStationInfo.get.responses.200.examples.application/json.StationToStationInfos[0].CompositeMiles" = 25.41
"paths./json/jSrcStationToDstStationInfo.get.responses.200.examples.application/json.StationToStationInfos[0].DestinationStation" = "J03"
"paths./json/jSrcStationToDstStationInfo.get.responses.200.examples.application/json.StationToStationInfos[0].RailFare.OffPeakTime" = 3.6
"paths./json/jSrcStationToDstStationInfo.get.responses.200.examples.application/json.StationToStationInfos[0].RailFare.PeakTime" = 5.9
"paths./json/jSrcStationToDstStationInfo.get.responses.200.examples.application/json.StationToStationInfos[0].RailFare.SeniorDisabled" = 2.95
"paths./json/jSrcStationToDstStationInfo.get.responses.200.examples.application/json.StationToStationInfos[0].RailTime" = 66.0
"paths./json/jSrcStationToDstStationInfo.get.responses.200.examples.application/json.StationToStationInfos[0].SourceStation" = "E10"
"paths./json/jStationEntrances.get.description" = "<h4 class=\"text-primary\">Description</h4>\r\n\r\n<p>Returns a list of nearby station entrances based on latitude, longitude, and\r\nradius (meters). Omit search parameters to return all station entrances.</p>\r\n\r\n<h4 class=\"text-primary\">Response Elements</h4>\r\n\r\n<table class=\"table table-condensed table-hover\">\r\n<thead>\r\n<tr>\r\n<th class=\"col-md-3\">Element</th>\r\n\r\n<th>Description</th>\r\n</tr>\r\n</thead>\r\n\r\n<tbody>\r\n<tr>\r\n<td>Entrances</td>\r\n\r\n<td>\r\nArray containing detailed information about station entrances\r\n(<a href=\"#StationEntrance\">StationEntrance</a>).\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"StationEntrance\" name=\r\n\"StationEntrance\">StationEntrance Elements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Description</td>\r\n\r\n<td>Additional information for the entrance, if available.\r\nCurrently available data usually shows the same value as the Name\r\nelement.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td style=\"text-decoration: line-through\">ID</td>\r\n\r\n<td><span class=\"text-danger\">Deprecated.</span></td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Lat</td>\r\n\r\n<td>Latitude.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Lon</td>\r\n\r\n<td>Longitude.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Name</td>\r\n\r\n<td>Name of the entrance (usually the station name and nearest\r\nintersection).</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StationCode1</td>\r\n\r\n<td>The station code associated with this entrance. Use this value\r\nin other rail-related APIs to retrieve data about a station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StationCode2</td>\r\n\r\n<td>For stations containing multiple platforms (e.g.: Gallery\r\nPlace, Fort Totten, L'Enfant Plaza, and Metro Center), the other\r\nstation code.</td>\r\n</tr>\r\n</tbody>\r\n</table>"
"paths./json/jStationEntrances.get.operationId" = "JSON - Station Entrances"
"paths./json/jStationEntrances.get.parameters.length" = 3
"paths./json/jStationEntrances.get.parameters[0].description" = "Center point Latitude, required if Longitude and Radius are specified."
"paths./json/jStationEntrances.get.parameters[0].enum.length" = 1
"paths./json/jStationEntrances.get.parameters[0].enum[0]" = "38.8978168"
"paths./json/jStationEntrances.get.parameters[0].in" = "query"
"paths./json/jStationEntrances.get.parameters[0].name" = "Lat"
"paths./json/jStationEntrances.get.parameters[0].type" = "number"
"paths./json/jStationEntrances.get.parameters[1].description" = "Center point Longitude, required if Latitude and Radius are specified."
"paths./json/jStationEntrances.get.parameters[1].enum.length" = 1
"paths./json/jStationEntrances.get.parameters[1].enum[0]" = "-77.0404246"
"paths./json/jStationEntrances.get.parameters[1].in" = "query"
"paths./json/jStationEntrances.get.parameters[1].name" = "Lon"
"paths./json/jStationEntrances.get.parameters[1].type" = "number"
"paths./json/jStationEntrances.get.parameters[2].description" = "Radius (meters) to include in the search area, required if Latitude and Longitude are specified."
"paths./json/jStationEntrances.get.parameters[2].enum.length" = 1
"paths./json/jStationEntrances.get.parameters[2].enum[0]" = "500"
"paths./json/jStationEntrances.get.parameters[2].in" = "query"
"paths./json/jStationEntrances.get.parameters[2].name" = "Radius"
"paths./json/jStationEntrances.get.parameters[2].type" = "number"
"paths./json/jStationEntrances.get.produces.length" = 1
"paths./json/jStationEntrances.get.produces[0]" = "application/json"
"paths./json/jStationEntrances.get.responses.200.description" = "Default response code."
"paths./json/jStationEntrances.get.responses.200.examples.application/json.Entrances.length" = 2
"paths./json/jStationEntrances.get.responses.200.examples.application/json.Entrances[0].Description" = "Farragut West, 17th & I St"
"paths./json/jStationEntrances.get.responses.200.examples.application/json.Entrances[0].ID" = "100"
"paths./json/jStationEntrances.get.responses.200.examples.application/json.Entrances[0].Lat" = 38.901098
"paths./json/jStationEntrances.get.responses.200.examples.application/json.Entrances[0].Lon" = -77.039293
"paths./json/jStationEntrances.get.responses.200.examples.application/json.Entrances[0].Name" = "Farragut West 17th & I St"
"paths./json/jStationEntrances.get.responses.200.examples.application/json.Entrances[0].StationCode1" = "C03"
"paths./json/jStationEntrances.get.responses.200.examples.application/json.Entrances[0].StationCode2" = ""
"paths./json/jStationEntrances.get.responses.200.examples.application/json.Entrances[1].Description" = "Farragut West, 18th & I St"
"paths./json/jStationEntrances.get.responses.200.examples.application/json.Entrances[1].ID" = "101"
"paths./json/jStationEntrances.get.responses.200.examples.application/json.Entrances[1].Lat" = 38.901453
"paths./json/jStationEntrances.get.responses.200.examples.application/json.Entrances[1].Lon" = -77.042093
"paths./json/jStationEntrances.get.responses.200.examples.application/json.Entrances[1].Name" = "Farragut West 18th & I St"
"paths./json/jStationEntrances.get.responses.200.examples.application/json.Entrances[1].StationCode1" = "C03"
"paths./json/jStationEntrances.get.responses.200.examples.application/json.Entrances[1].StationCode2" = ""
"paths./json/jStationInfo.get.description" = "<h4 class=\"text-primary\">Description</h4>\r\n\r\n<p>Returns station location and address information based on a given\r\nStationCode.</p>\r\n\r\n<h4 class=\"text-primary\">Response Elements</h4>\r\n\r\n<table class=\"table table-condensed table-hover\">\r\n<thead>\r\n<tr>\r\n<th class=\"col-md-3\">Element</th>\r\n\r\n<th>Description</th>\r\n</tr>\r\n</thead>\r\n\r\n<tbody>\r\n<tr>\r\n<td>Address</td>\r\n\r\n<td>\r\nStructure describing <a href=\"#Address\">address</a> information.\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Code</td>\r\n\r\n<td>Station code. Repeated from input.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Lat</td>\r\n\r\n<td>Latitude.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>LineCode1</td>\r\n\r\n<td>Two-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,\r\nor SV) served by this station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>LineCode2</td>\r\n\r\n<td>Additional line served by this station. This is often the case\r\nwhen stations have multiple platforms (e.g.: Gallery Place, Fort\r\nTotten, L'Enfant Plaza, and Metro Center).</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>LineCode3</td>\r\n\r\n<td>Similar to function as LineCodeX.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>LineCode4</td>\r\n\r\n<td>Similar to function as LineCodeX. Currently not in use.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Lon</td>\r\n\r\n<td>Longitude.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Name</td>\r\n\r\n<td>Station name.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StationTogether1</td>\r\n\r\n<td>For stations with multiple platforms (e.g.: Gallery Place, Fort\r\nTotten, L'Enfant Plaza, and Metro Center), the additional\r\nStationCode will be listed here.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StationTogether2</td>\r\n\r\n<td>Similar in function to StationTogether2. Currently not in\r\nuse.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a name=\"Address\">Address Elements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>City</td>\r\n\r\n<td>City.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>State</td>\r\n\r\n<td>State (abbreviated).</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Street</td>\r\n\r\n<td>Street address (for GPS use).</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Zip</td>\r\n\r\n<td>Zip code.</td>\r\n</tr>\r\n</tbody>\r\n</table>"
"paths./json/jStationInfo.get.operationId" = "JSON - Station Information"
"paths./json/jStationInfo.get.parameters.length" = 1
"paths./json/jStationInfo.get.parameters[0].default" = "A01"
"paths./json/jStationInfo.get.parameters[0].description" = "Station code.  Use the Station List method to return a list of all station codes."
"paths./json/jStationInfo.get.parameters[0].enum.length" = 1
"paths./json/jStationInfo.get.parameters[0].enum[0]" = "A01"
"paths./json/jStationInfo.get.parameters[0].in" = "query"
"paths./json/jStationInfo.get.parameters[0].name" = "StationCode"
"paths./json/jStationInfo.get.parameters[0].required" = true
"paths./json/jStationInfo.get.parameters[0].type" = "string"
"paths./json/jStationInfo.get.produces.length" = 1
"paths./json/jStationInfo.get.produces[0]" = "application/json"
"paths./json/jStationInfo.get.responses.200.description" = "Default response code."
"paths./json/jStationInfo.get.responses.200.examples.application/json.Address.City" = "Washington"
"paths./json/jStationInfo.get.responses.200.examples.application/json.Address.State" = "DC"
"paths./json/jStationInfo.get.responses.200.examples.application/json.Address.Street" = "607 13th St. NW"
"paths./json/jStationInfo.get.responses.200.examples.application/json.Address.Zip" = "20005"
"paths./json/jStationInfo.get.responses.200.examples.application/json.Code" = "A01"
"paths./json/jStationInfo.get.responses.200.examples.application/json.Lat" = 38.8983144732
"paths./json/jStationInfo.get.responses.200.examples.application/json.LineCode1" = "RD"
"paths./json/jStationInfo.get.responses.200.examples.application/json.Lon" = -77.0280779971
"paths./json/jStationInfo.get.responses.200.examples.application/json.Name" = "Metro Center"
"paths./json/jStationInfo.get.responses.200.examples.application/json.StationTogether1" = "C01"
"paths./json/jStationInfo.get.responses.200.examples.application/json.StationTogether2" = ""
"paths./json/jStationParking.get.description" = "<h4 class=\"text-primary\">Description</h4>\r\n\r\n<p>Returns parking information at a station based on a given StationCode. Omit\r\nthe StationCode to return parking information for all stations.</p>\r\n\r\n<p>If a station has no parking, the StationsParking element will contain no\r\nchild elements.</p>\r\n\r\n<h4 class=\"text-primary\">Response Elements</h4>\r\n\r\n<table class=\"table table-condensed table-hover\">\r\n<thead>\r\n<tr>\r\n<th class=\"col-md-3\">Element</th>\r\n\r\n<th>Description</th>\r\n</tr>\r\n</thead>\r\n\r\n<tbody>\r\n<tr>\r\n<td>StationsParking</td>\r\n\r\n<td>\r\nArray containing station parking information (<a href=\r\n\"#StationParking\">StationParking</a>).\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"StationParking\" name=\"StationParking\">StationParking\r\nElements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Code</td>\r\n\r\n<td>Station code. Useful when returning parking information for all\r\nstations. Use this value in other rail-related APIs to retrieve\r\ndata about a station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Notes</td>\r\n\r\n<td>When not NULL, provides additional parking resources such as\r\nnearby lots.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>AllDayParking</td>\r\n\r\n<td>\r\nStructure describing <a href=\"#AllDayParking\">all-day\r\nparking</a> options.\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>ShortTermParking</td>\r\n\r\n<td>\r\nStructure describing <a href=\"#ShortTermParking\">short-term\r\nparking</a> options.\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"AllDayParking\" name=\"AllDayParking\">AllDayParking\r\nElements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>TotalCount</td>\r\n\r\n<td>Number of all-day parking spots available at a station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>RiderCost</td>\r\n\r\n<td>All-day cost per day for Metro riders. NULL when no all-day\r\nspots are available. For most stations, this value is identical to\r\nthe NonRiderCost.<br>\r\n<br>\r\nFor cases where the NonRiderCost is different, the lower cost per\r\nday requires a valid rail trip using a SmarTrip&reg; card\r\noriginating from a station other than the one where the patron\r\nparked. To receive this lower rate, patrons must pay for their\r\nparking with the same SmarTrip&reg; card used to enter/exit\r\nMetrorail, and must exit the parking lot within two hours of\r\nexiting Metrorail.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>NonRiderCost</td>\r\n\r\n<td>All-day cost per day for non-Metro riders. NULL when no all-day\r\nspots are available.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"ShortTermParking\" name=\r\n\"ShortTermParking\">ShortTermParking Elements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>TotalCount</td>\r\n\r\n<td>Number of short-term parking spots available at a station\r\n(parking meters).</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Notes</td>\r\n\r\n<td>Misc. information relating to short-term parking. NULL when no\r\nshort-term spots are available.</td>\r\n</tr>\r\n</tbody>\r\n</table>"
"paths./json/jStationParking.get.operationId" = "JSON - Parking Information"
"paths./json/jStationParking.get.parameters.length" = 1
"paths./json/jStationParking.get.parameters[0].description" = "Station code.  Use the Station List method to return a list of all station codes."
"paths./json/jStationParking.get.parameters[0].enum.length" = 2
"paths./json/jStationParking.get.parameters[0].enum[0]" = "E08"
"paths./json/jStationParking.get.parameters[0].enum[1]" = "F06"
"paths./json/jStationParking.get.parameters[0].in" = "query"
"paths./json/jStationParking.get.parameters[0].name" = "StationCode"
"paths./json/jStationParking.get.parameters[0].type" = "string"
"paths./json/jStationParking.get.produces.length" = 1
"paths./json/jStationParking.get.produces[0]" = "application/json"
"paths./json/jStationParking.get.responses.200.description" = "Default response code."
"paths./json/jStationParking.get.responses.200.examples.application/json.StationsParking.length" = 1
"paths./json/jStationParking.get.responses.200.examples.application/json.StationsParking[0].AllDayParking.NonRiderCost" = 4.6
"paths./json/jStationParking.get.responses.200.examples.application/json.StationsParking[0].AllDayParking.RiderCost" = 4.6
"paths./json/jStationParking.get.responses.200.examples.application/json.StationsParking[0].AllDayParking.TotalCount" = 808.0
"paths./json/jStationParking.get.responses.200.examples.application/json.StationsParking[0].Code" = "F06"
"paths./json/jStationParking.get.responses.200.examples.application/json.StationsParking[0].Notes" = "325 spaces metered for 12-hr. max. @ $1.00 per 60 mins."
"paths./json/jStationParking.get.responses.200.examples.application/json.StationsParking[0].ShortTermParking.Notes" = "Short term parking available 5 am - 2 am, time limit 12 hours"
"paths./json/jStationParking.get.responses.200.examples.application/json.StationsParking[0].ShortTermParking.TotalCount" = 15.0
"paths./json/jStationTimes.get.description" = "<h4 class=\"text-primary\">Description</h4>\r\n\r\n<p>Returns opening and scheduled first/last train times based on a given\r\nStationCode. Omit the StationCode to return timing information for all\r\nstations.</p>\r\n\r\n<p>Note that for stations with multiple platforms (e.g.: Metro Center, L'Enfant\r\nPlaza, etc.), a distinct call is required for each StationCode to retrieve the\r\nfull set of train times at such stations.</p>\r\n\r\n<h4 class=\"text-primary\">Response Elements</h4>\r\n\r\n<table class=\"table table-condensed table-hover\">\r\n<thead>\r\n<tr>\r\n<th class=\"col-md-3\">Element</th>\r\n\r\n<th>Description</th>\r\n</tr>\r\n</thead>\r\n\r\n<tbody>\r\n<tr>\r\n<td>StationTimes</td>\r\n\r\n<td>\r\nArray containing station timing information (<a href=\r\n\"#StationTime\">StationTime</a>).\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"StationTime\" name=\"StationTime\">StationTime\r\nElements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Code</td>\r\n\r\n<td>Station code for this station. Use this value in other\r\nrail-related APIs to retrieve data about a station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StationName</td>\r\n\r\n<td>Full name of the station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>*Day Elements</td>\r\n\r\n<td>\r\nContainer elements containing timing information based on\r\n<a href=\"#dow\">day of the week.</a>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"dow\" name=\"dow\">Monday/Tuesday/Wednesday/etc.\r\nElements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>OpeningTime</td>\r\n\r\n<td>Station opening time. Format is HH:mm.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>FirstTrains</td>\r\n\r\n<td>\r\nStructure containing <a href=\"#first\">first train</a>\r\ninformation.\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>LastTrains</td>\r\n\r\n<td>\r\nStructure containing <a href=\"#last\">last train</a>\r\ninformation.\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"first\" name=\"first\">FirstTrains Elements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Time</td>\r\n\r\n<td>First train leaves the station at this time. Format is\r\nHH:mm.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>DestinationStation</td>\r\n\r\n<td>Station code for the train's destination. Use this value in\r\nother rail-related APIs to retrieve data about a station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"last\" name=\"last\">LastTrains Elements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Time</td>\r\n\r\n<td>Last train leaves the station at this time. Format is HH:mm.\r\nNote that when the time is AM, it signifies the next day. For\r\nexample, a value of 02:30 under a Saturday element means the last\r\ntrain leaves on Sunday at 2:30 AM.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>DestinationStation</td>\r\n\r\n<td>Station code for the train's destination. Use this value in\r\nother rail-related APIs to retrieve data about a station.</td>\r\n</tr>\r\n</tbody>\r\n</table>"
"paths./json/jStationTimes.get.operationId" = "JSON - Station Timings"
"paths./json/jStationTimes.get.parameters.length" = 1
"paths./json/jStationTimes.get.parameters[0].default" = "E10"
"paths./json/jStationTimes.get.parameters[0].description" = "Station code.  Use the Station List method to return a list of all station codes."
"paths./json/jStationTimes.get.parameters[0].enum.length" = 1
"paths./json/jStationTimes.get.parameters[0].enum[0]" = "E10"
"paths./json/jStationTimes.get.parameters[0].in" = "query"
"paths./json/jStationTimes.get.parameters[0].name" = "StationCode"
"paths./json/jStationTimes.get.parameters[0].type" = "string"
"paths./json/jStationTimes.get.produces.length" = 1
"paths./json/jStationTimes.get.produces[0]" = "application/json"
"paths./json/jStationTimes.get.responses.200.description" = "Default response code."
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes.length" = 1
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Code" = "E10"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Friday.FirstTrains.length" = 1
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Friday.FirstTrains[0].DestinationStation" = "F11"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Friday.FirstTrains[0].Time" = "05:00"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Friday.LastTrains.length" = 1
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Friday.LastTrains[0].DestinationStation" = "F11"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Friday.LastTrains[0].Time" = "02:30"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Friday.OpeningTime" = "04:50"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Monday.FirstTrains.length" = 1
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Monday.FirstTrains[0].DestinationStation" = "F11"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Monday.FirstTrains[0].Time" = "05:00"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Monday.LastTrains.length" = 1
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Monday.LastTrains[0].DestinationStation" = "F11"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Monday.LastTrains[0].Time" = "23:30"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Monday.OpeningTime" = "04:50"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Saturday.FirstTrains.length" = 1
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Saturday.FirstTrains[0].DestinationStation" = "F11"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Saturday.FirstTrains[0].Time" = "07:00"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Saturday.LastTrains.length" = 1
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Saturday.LastTrains[0].DestinationStation" = "F11"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Saturday.LastTrains[0].Time" = "02:30"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Saturday.OpeningTime" = "06:50"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].StationName" = "Greenbelt"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Sunday.FirstTrains.length" = 1
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Sunday.FirstTrains[0].DestinationStation" = "F11"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Sunday.FirstTrains[0].Time" = "07:00"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Sunday.LastTrains.length" = 1
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Sunday.LastTrains[0].DestinationStation" = "F11"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Sunday.LastTrains[0].Time" = "23:30"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Sunday.OpeningTime" = "06:50"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Thursday.FirstTrains.length" = 1
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Thursday.FirstTrains[0].DestinationStation" = "F11"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Thursday.FirstTrains[0].Time" = "05:00"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Thursday.LastTrains.length" = 1
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Thursday.LastTrains[0].DestinationStation" = "F11"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Thursday.LastTrains[0].Time" = "23:30"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Thursday.OpeningTime" = "04:50"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Tuesday.FirstTrains.length" = 1
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Tuesday.FirstTrains[0].DestinationStation" = "F11"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Tuesday.FirstTrains[0].Time" = "05:00"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Tuesday.LastTrains.length" = 1
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Tuesday.LastTrains[0].DestinationStation" = "F11"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Tuesday.LastTrains[0].Time" = "23:30"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Tuesday.OpeningTime" = "04:50"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Wednesday.FirstTrains.length" = 1
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Wednesday.FirstTrains[0].DestinationStation" = "F11"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Wednesday.FirstTrains[0].Time" = "05:00"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Wednesday.LastTrains.length" = 1
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Wednesday.LastTrains[0].DestinationStation" = "F11"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Wednesday.LastTrains[0].Time" = "23:30"
"paths./json/jStationTimes.get.responses.200.examples.application/json.StationTimes[0].Wednesday.OpeningTime" = "04:50"
"paths./json/jStations.get.description" = "<h4 class=\"text-primary\">Description</h4>\r\n\r\n<p>Returns a list of station location and address information based on a given\r\nLineCode. Omit the LineCode to return all stations. The response is an array of\r\nobjects identical to those returned in the Station Information method.</p>\r\n\r\n<h4 class=\"text-primary\">Response Elements</h4>\r\n\r\n<table class=\"table table-condensed table-hover\">\r\n<thead>\r\n<tr>\r\n<th class=\"col-md-3\">Element</th>\r\n\r\n<th>Description</th>\r\n</tr>\r\n</thead>\r\n\r\n<tbody>\r\n<tr>\r\n<td>Stations</td>\r\n\r\n<td>\r\nArray containing station information (<a href=\r\n\"#Station\">Station</a>).\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"Station\" name=\"Station\">Station Elements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Address</td>\r\n\r\n<td>\r\nStructure describing <a href=\"#Address\">address</a> information.\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Code</td>\r\n\r\n<td>Station code. Repeated from input.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Lat</td>\r\n\r\n<td>Latitude.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>LineCode1</td>\r\n\r\n<td>Two-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,\r\nor SV) served by this station.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>LineCode2</td>\r\n\r\n<td>Additional line served by this station. This is often the case\r\nwhen stations have multiple platforms (e.g.: Gallery Place, Fort\r\nTotten, L'Enfant Plaza, and Metro Center).</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>LineCode3</td>\r\n\r\n<td>Similar to function as LineCodeX.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>LineCode4</td>\r\n\r\n<td>Similar to function as LineCodeX. Currently not in use.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Lon</td>\r\n\r\n<td>Longitude.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Name</td>\r\n\r\n<td>Station name.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StationTogether1</td>\r\n\r\n<td>For stations with multiple platforms (e.g.: Gallery Place, Fort\r\nTotten, L'Enfant Plaza, and Metro Center), the additional\r\nStationCode will be listed here.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>StationTogether2</td>\r\n\r\n<td>Similar in function to StationTogether2. Currently not in\r\nuse.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=\"2\">\r\n<div class=\"text-primary\" style=\"margin-top: 1em\">\r\n<a id=\"Address\" name=\"Address\">Address Elements</a>\r\n</div>\r\n</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>City</td>\r\n\r\n<td>City.</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>State</td>\r\n\r\n<td>State (abbreviated).</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Street</td>\r\n\r\n<td>Street address (for GPS use).</td>\r\n</tr>\r\n\r\n<tr>\r\n<td>Zip</td>\r\n\r\n<td>Zip code.</td>\r\n</tr>\r\n</tbody>\r\n</table>"
"paths./json/jStations.get.operationId" = "JSON - Station List"
"paths./json/jStations.get.parameters.length" = 1
"paths./json/jStations.get.parameters[0].description" = "Two-letter line code abbreviation:\n\n<ul>\n<li>RD - Red</li>\n<li>YL - Yellow</li>\n<li>GR - Green</li>\n<li>BL - Blue</li>\n<li>OR - Orange</li>\n<li>SV - Silver</li>\n</ul>"
"paths./json/jStations.get.parameters[0].enum.length" = 6
"paths./json/jStations.get.parameters[0].enum[0]" = "RD"
"paths./json/jStations.get.parameters[0].enum[1]" = "YL"
"paths./json/jStations.get.parameters[0].enum[2]" = "GR"
"paths./json/jStations.get.parameters[0].enum[3]" = "BL"
"paths./json/jStations.get.parameters[0].enum[4]" = "OR"
"paths./json/jStations.get.parameters[0].enum[5]" = "SV"
"paths./json/jStations.get.parameters[0].in" = "query"
"paths./json/jStations.get.parameters[0].name" = "LineCode"
"paths./json/jStations.get.parameters[0].type" = "string"
"paths./json/jStations.get.produces.length" = 1
"paths./json/jStations.get.produces[0]" = "application/json"
"paths./json/jStations.get.responses.200.description" = "Default response code."
"paths./json/jStations.get.responses.200.examples.application/json.Stations.length" = 27
"paths./json/jStations.get.responses.200.examples.application/json.Stations[0].Address.City" = "Rockville"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[0].Address.State" = "MD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[0].Address.Street" = "15903 Somerville Drive"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[0].Address.Zip" = "20855"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[0].Code" = "A15"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[0].Lat" = 39.1199273249
"paths./json/jStations.get.responses.200.examples.application/json.Stations[0].LineCode1" = "RD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[0].Lon" = -77.1646273343
"paths./json/jStations.get.responses.200.examples.application/json.Stations[0].Name" = "Shady Grove"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[0].StationTogether1" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[0].StationTogether2" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[10].Address.City" = "Washington"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[10].Address.State" = "DC"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[10].Address.Street" = "3599 Connecticut Avenue NW"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[10].Address.Zip" = "20008"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[10].Code" = "A05"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[10].Lat" = 38.9347628908
"paths./json/jStations.get.responses.200.examples.application/json.Stations[10].LineCode1" = "RD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[10].Lon" = -77.0580425191
"paths./json/jStations.get.responses.200.examples.application/json.Stations[10].Name" = "Cleveland Park"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[10].StationTogether1" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[10].StationTogether2" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[11].Address.City" = "Washington"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[11].Address.State" = "DC"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[11].Address.Street" = "2700 Connecticut Ave., NW"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[11].Address.Zip" = "20008"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[11].Code" = "A04"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[11].Lat" = 38.9250851371
"paths./json/jStations.get.responses.200.examples.application/json.Stations[11].LineCode1" = "RD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[11].Lon" = -77.0524180207
"paths./json/jStations.get.responses.200.examples.application/json.Stations[11].Name" = "Woodley Park Zoo"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[11].StationTogether1" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[11].StationTogether2" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[12].Address.City" = "Washington"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[12].Address.State" = "DC"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[12].Address.Street" = "1525 20th St. NW"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[12].Address.Zip" = "20036"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[12].Code" = "A03"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[12].Lat" = 38.9095980575
"paths./json/jStations.get.responses.200.examples.application/json.Stations[12].LineCode1" = "RD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[12].Lon" = -77.0434143597
"paths./json/jStations.get.responses.200.examples.application/json.Stations[12].Name" = "Dupont Circle"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[12].StationTogether1" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[12].StationTogether2" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[13].Address.City" = "Washington"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[13].Address.State" = "DC"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[13].Address.Street" = "1001 Connecticut Avenue NW"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[13].Address.Zip" = "20036"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[13].Code" = "A02"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[13].Lat" = 38.9032019462
"paths./json/jStations.get.responses.200.examples.application/json.Stations[13].LineCode1" = "RD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[13].Lon" = -77.0397008272
"paths./json/jStations.get.responses.200.examples.application/json.Stations[13].Name" = "Farragut North"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[13].StationTogether1" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[13].StationTogether2" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[14].Address.City" = "Washington"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[14].Address.State" = "DC"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[14].Address.Street" = "607 13th St. NW"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[14].Address.Zip" = "20005"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[14].Code" = "A01"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[14].Lat" = 38.8983144732
"paths./json/jStations.get.responses.200.examples.application/json.Stations[14].LineCode1" = "RD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[14].Lon" = -77.0280779971
"paths./json/jStations.get.responses.200.examples.application/json.Stations[14].Name" = "Metro Center"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[14].StationTogether1" = "C01"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[14].StationTogether2" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[15].Address.City" = "Washington"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[15].Address.State" = "DC"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[15].Address.Street" = "630 H St. NW"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[15].Address.Zip" = "20001"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[15].Code" = "B01"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[15].Lat" = 38.8983168097
"paths./json/jStations.get.responses.200.examples.application/json.Stations[15].LineCode1" = "RD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[15].Lon" = -77.0219153904
"paths./json/jStations.get.responses.200.examples.application/json.Stations[15].Name" = "Gallery Place"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[15].StationTogether1" = "F01"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[15].StationTogether2" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[16].Address.City" = "Washington"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[16].Address.State" = "DC"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[16].Address.Street" = "450 F Street NW"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[16].Address.Zip" = "20001"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[16].Code" = "B02"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[16].Lat" = 38.8960903176
"paths./json/jStations.get.responses.200.examples.application/json.Stations[16].LineCode1" = "RD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[16].Lon" = -77.0166389566
"paths./json/jStations.get.responses.200.examples.application/json.Stations[16].Name" = "Judiciary Square"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[16].StationTogether1" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[16].StationTogether2" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[17].Address.City" = "Washington"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[17].Address.State" = "DC"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[17].Address.Street" = "701 First St. NE"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[17].Address.Zip" = "20002"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[17].Code" = "B03"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[17].Lat" = 38.8977660392
"paths./json/jStations.get.responses.200.examples.application/json.Stations[17].LineCode1" = "RD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[17].Lon" = -77.0074142921
"paths./json/jStations.get.responses.200.examples.application/json.Stations[17].Name" = "Union Station"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[17].StationTogether1" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[17].StationTogether2" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[18].Address.City" = "Washington"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[18].Address.State" = "DC"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[18].Address.Street" = "200 Florida Ave N.E."
"paths./json/jStations.get.responses.200.examples.application/json.Stations[18].Address.Zip" = "20002"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[18].Code" = "B35"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[18].Lat" = 38.9070162121
"paths./json/jStations.get.responses.200.examples.application/json.Stations[18].LineCode1" = "RD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[18].Lon" = -77.0030204472
"paths./json/jStations.get.responses.200.examples.application/json.Stations[18].Name" = "New York Avenue"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[18].StationTogether1" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[18].StationTogether2" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[19].Address.City" = "Washington"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[19].Address.State" = "DC"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[19].Address.Street" = "919 Rhode Island Avenue NE"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[19].Address.Zip" = "20018"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[19].Code" = "B04"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[19].Lat" = 38.9210596891
"paths./json/jStations.get.responses.200.examples.application/json.Stations[19].LineCode1" = "RD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[19].Lon" = -76.9959369166
"paths./json/jStations.get.responses.200.examples.application/json.Stations[19].Name" = "Rhode Island Avenue"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[19].StationTogether1" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[19].StationTogether2" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[1].Address.City" = "Rockville"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[1].Address.State" = "MD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[1].Address.Street" = "251 Hungerford Drive"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[1].Address.Zip" = "20850"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[1].Code" = "A14"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[1].Lat" = 39.0843216075
"paths./json/jStations.get.responses.200.examples.application/json.Stations[1].LineCode1" = "RD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[1].Lon" = -77.1461253392
"paths./json/jStations.get.responses.200.examples.application/json.Stations[1].Name" = "Rockville"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[1].StationTogether1" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[1].StationTogether2" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[20].Address.City" = "Washington"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[20].Address.State" = "DC"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[20].Address.Street" = "801 Michigan Avenue NE"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[20].Address.Zip" = "20017"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[20].Code" = "B05"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[20].Lat" = 38.9332109913
"paths./json/jStations.get.responses.200.examples.application/json.Stations[20].LineCode1" = "RD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[20].Lon" = -76.9945342851
"paths./json/jStations.get.responses.200.examples.application/json.Stations[20].Name" = "Brookland"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[20].StationTogether1" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[20].StationTogether2" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[21].Address.City" = "Washington"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[21].Address.State" = "DC"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[21].Address.Street" = "550 Galloway Street NE"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[21].Address.Zip" = "20011"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[21].Code" = "B06"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[21].Lat" = 38.9518467675
"paths./json/jStations.get.responses.200.examples.application/json.Stations[21].LineCode1" = "RD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[21].Lon" = -77.0022030768
"paths./json/jStations.get.responses.200.examples.application/json.Stations[21].Name" = "Fort Totten"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[21].StationTogether1" = "E06"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[21].StationTogether2" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[22].Address.City" = "Washington"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[22].Address.State" = "DC"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[22].Address.Street" = "327 Cedar Street NW"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[22].Address.Zip" = "20012"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[22].Code" = "B07"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[22].Lat" = 38.976078531
"paths./json/jStations.get.responses.200.examples.application/json.Stations[22].LineCode1" = "RD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[22].Lon" = -77.0181766987
"paths./json/jStations.get.responses.200.examples.application/json.Stations[22].Name" = "Takoma"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[22].StationTogether1" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[22].StationTogether2" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[23].Address.City" = "Silver Spring"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[23].Address.State" = "MD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[23].Address.Street" = "8400 Colesville Road"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[23].Address.Zip" = "20910"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[23].Code" = "B08"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[23].Lat" = 38.9939493747
"paths./json/jStations.get.responses.200.examples.application/json.Stations[23].LineCode1" = "RD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[23].Lon" = -77.0310178268
"paths./json/jStations.get.responses.200.examples.application/json.Stations[23].Name" = "Silver Spring"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[23].StationTogether1" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[23].StationTogether2" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[24].Address.City" = "Forest Glen"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[24].Address.State" = "MD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[24].Address.Street" = "9730 Georgia Avenue"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[24].Address.Zip" = "20910"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[24].Code" = "B09"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[24].Lat" = 39.0149542752
"paths./json/jStations.get.responses.200.examples.application/json.Stations[24].LineCode1" = "RD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[24].Lon" = -77.0429165548
"paths./json/jStations.get.responses.200.examples.application/json.Stations[24].Name" = "Forest Glen"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[24].StationTogether1" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[24].StationTogether2" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[25].Address.City" = "Silver Spring"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[25].Address.State" = "MD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[25].Address.Street" = "11171 Georgia Avenue"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[25].Address.Zip" = "20902"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[25].Code" = "B10"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[25].Lat" = 39.0375271436
"paths./json/jStations.get.responses.200.examples.application/json.Stations[25].LineCode1" = "RD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[25].Lon" = -77.0501070535
"paths./json/jStations.get.responses.200.examples.application/json.Stations[25].Name" = "Wheaton"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[25].StationTogether1" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[25].StationTogether2" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[26].Address.City" = "Silver Spring"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[26].Address.State" = "MD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[26].Address.Street" = "12501 Georgia Avenue"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[26].Address.Zip" = "20906"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[26].Code" = "B11"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[26].Lat" = 39.0617837655
"paths./json/jStations.get.responses.200.examples.application/json.Stations[26].LineCode1" = "RD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[26].Lon" = -77.0535573593
"paths./json/jStations.get.responses.200.examples.application/json.Stations[26].Name" = "Glenmont"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[26].StationTogether1" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[26].StationTogether2" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[2].Address.City" = "Rockville"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[2].Address.State" = "MD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[2].Address.Street" = "1600 Chapman Avenue"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[2].Address.Zip" = "20852"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[2].Code" = "A13"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[2].Lat" = 39.0624676517
"paths./json/jStations.get.responses.200.examples.application/json.Stations[2].LineCode1" = "RD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[2].Lon" = -77.1208179517
"paths./json/jStations.get.responses.200.examples.application/json.Stations[2].Name" = "Twinbrook"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[2].StationTogether1" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[2].StationTogether2" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[3].Address.City" = "Rockville"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[3].Address.State" = "MD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[3].Address.Street" = "5500 Marinelli Road"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[3].Address.Zip" = "20852"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[3].Code" = "A12"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[3].Lat" = 39.0481513573
"paths./json/jStations.get.responses.200.examples.application/json.Stations[3].LineCode1" = "RD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[3].Lon" = -77.112829859
"paths./json/jStations.get.responses.200.examples.application/json.Stations[3].Name" = "White Flint"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[3].StationTogether1" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[3].StationTogether2" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[4].Address.City" = "Bethesda"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[4].Address.State" = "MD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[4].Address.Street" = "10300 Rockville Pike"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[4].Address.Zip" = "20852"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[4].Code" = "A11"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[4].Lat" = 39.02926895
"paths./json/jStations.get.responses.200.examples.application/json.Stations[4].LineCode1" = "RD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[4].Lon" = -77.10384972
"paths./json/jStations.get.responses.200.examples.application/json.Stations[4].Name" = "Grosvenor"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[4].StationTogether1" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[4].StationTogether2" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[5].Address.City" = "Bethesda"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[5].Address.State" = "MD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[5].Address.Street" = "8810 Rockville Pike"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[5].Address.Zip" = "20814"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[5].Code" = "A10"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[5].Lat" = 39.0000564843
"paths./json/jStations.get.responses.200.examples.application/json.Stations[5].LineCode1" = "RD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[5].Lon" = -77.0969522905
"paths./json/jStations.get.responses.200.examples.application/json.Stations[5].Name" = "Medical Center"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[5].StationTogether1" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[5].StationTogether2" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[6].Address.City" = "Bethesda"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[6].Address.State" = "MD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[6].Address.Street" = "7450 Wisconsin Avenue"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[6].Address.Zip" = "20814"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[6].Code" = "A09"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[6].Lat" = 38.9843936603
"paths./json/jStations.get.responses.200.examples.application/json.Stations[6].LineCode1" = "RD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[6].Lon" = -77.0941291922
"paths./json/jStations.get.responses.200.examples.application/json.Stations[6].Name" = "Bethesda"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[6].StationTogether1" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[6].StationTogether2" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[7].Address.City" = "Washington"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[7].Address.State" = "DC"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[7].Address.Street" = "5337 Wisconsin Avenue NW"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[7].Address.Zip" = "20015"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[7].Code" = "A08"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[7].Lat" = 38.9594838736
"paths./json/jStations.get.responses.200.examples.application/json.Stations[7].LineCode1" = "RD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[7].Lon" = -77.084995805
"paths./json/jStations.get.responses.200.examples.application/json.Stations[7].Name" = "Friendship Heights"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[7].StationTogether1" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[7].StationTogether2" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[8].Address.City" = "Washington"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[8].Address.State" = "DC"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[8].Address.Street" = "4501 Wisconsin Avenue NW"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[8].Address.Zip" = "20016"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[8].Code" = "A07"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[8].Lat" = 38.9488514351
"paths./json/jStations.get.responses.200.examples.application/json.Stations[8].LineCode1" = "RD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[8].Lon" = -77.0795873255
"paths./json/jStations.get.responses.200.examples.application/json.Stations[8].Name" = "Tenleytown"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[8].StationTogether1" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[8].StationTogether2" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[9].Address.City" = "Washington"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[9].Address.State" = "DC"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[9].Address.Street" = "4200 Connecticut Avenue NW"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[9].Address.Zip" = "20008"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[9].Code" = "A06"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[9].Lat" = 38.9432652883
"paths./json/jStations.get.responses.200.examples.application/json.Stations[9].LineCode1" = "RD"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[9].Lon" = -77.0629861805
"paths./json/jStations.get.responses.200.examples.application/json.Stations[9].Name" = "Van Ness UDC"
"paths./json/jStations.get.responses.200.examples.application/json.Stations[9].StationTogether1" = ""
"paths./json/jStations.get.responses.200.examples.application/json.Stations[9].StationTogether2" = ""
"schemes.length" = 2
"schemes[0]" = "http"
"schemes[1]" = "https"
"security.length" = 2
"securityDefinitions.apiKeyHeader.in" = "header"
"securityDefinitions.apiKeyHeader.name" = "api_key"
"securityDefinitions.apiKeyHeader.type" = "apiKey"
"securityDefinitions.apiKeyQuery.in" = "query"
"securityDefinitions.apiKeyQuery.name" = "api_key"
"securityDefinitions.apiKeyQuery.type" = "apiKey"
"security[0].apiKeyHeader.length" = 0
"security[1].apiKeyQuery.length" = 0
swagger = "2.0"
