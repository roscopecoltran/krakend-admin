basePath: /v2
consumes.length: 1
consumes[0]: application/json
definitions.Assignment.description: Assignment details
definitions.Assignment.example.attachments.length: 3
definitions.Assignment.example.attachments[0].score: "0000000000000000"
definitions.Assignment.example.attachments[0].type: flat
definitions.Assignment.example.attachments[1].type: link
definitions.Assignment.example.attachments[1].url: https://flat.io/developers
definitions.Assignment.example.attachments[2].authorName: Flat
definitions.Assignment.example.attachments[2].authorUrl: https://www.youtube.com/channel/UCEUIbEP9Rba_g0r4eeGhmXw
definitions.Assignment.example.attachments[2].description: Discover Flat on https://flat.io
definitions.Assignment.example.attachments[2].html: <iframe width="560" height="315"
  src="https://www.youtube.com/embed/SNbRUiBZ4Uw" frameborder="0" allowfullscreen></iframe>
definitions.Assignment.example.attachments[2].thumbnailHeight: 1052
definitions.Assignment.example.attachments[2].thumbnailUrl: https://i.ytimg.com/vi/SNbRUiBZ4Uw/maxresdefault.jpg
definitions.Assignment.example.attachments[2].thumbnailWidth: 1868
definitions.Assignment.example.attachments[2].title: Flat - The online collaborative
  music notation software
definitions.Assignment.example.attachments[2].type: video
definitions.Assignment.example.attachments[2].url: https://www.youtube.com/watch?v=SNbRUiBZ4Uw
definitions.Assignment.example.classroom: 58c4725345cd836264f0b29e
definitions.Assignment.example.creationDate: 2017-06-12T13:56:19.613Z
definitions.Assignment.example.creator: 5832bf149995c4024bd6de7d
definitions.Assignment.example.description: Get started with Flat
definitions.Assignment.example.dueDate: 2017-07-12T13:56:19.613Z
definitions.Assignment.example.googleClassroom.alternateLink: http://classroom.google.com/c/music-theory/a/first-assignment/detail
definitions.Assignment.example.googleClassroom.id: "1235665432"
definitions.Assignment.example.scheduledDate: 2017-06-18T13:56:19.613Z
definitions.Assignment.example.state: active
definitions.Assignment.example.submissions.length: 1
definitions.Assignment.example.submissions[0].assignment: 58c49068524c03ec576ca43c
definitions.Assignment.example.submissions[0].attachments.length: 1
definitions.Assignment.example.submissions[0].attachments[0].score: 58c4955a226ffff257211a8d
definitions.Assignment.example.submissions[0].attachments[0].title: Hello - Student
definitions.Assignment.example.submissions[0].attachments[0].type: flat
definitions.Assignment.example.submissions[0].classroom: 58c4725345cd836264f0b29e
definitions.Assignment.example.submissions[0].creationDate: 2017-03-12T00:25:00.748Z
definitions.Assignment.example.submissions[0].creator: 559eb5c7f0d4d5e46d03781d
definitions.Assignment.example.submissions[0].googleClassroom.alternateLink: http://classroom.google.com/c/music-theory/a/first-assignment/submissions/student/my-submission
definitions.Assignment.example.submissions[0].googleClassroom.id: CgsI-00000000000
definitions.Assignment.example.submissions[0].googleClassroom.state: turned_in
definitions.Assignment.example.submissions[0].id: 58c4955c226ffff257211a90
definitions.Assignment.example.submissions[0].submissionDate: 2017-03-12T00:25:22.748Z
definitions.Assignment.example.title: My first assignment
definitions.Assignment.properties.attachments.items.$ref: '#/definitions/MediaAttachment'
definitions.Assignment.properties.attachments.type: array
definitions.Assignment.properties.classroom.description: The unique identifier of
  the class where this assignment was posted
definitions.Assignment.properties.classroom.type: string
definitions.Assignment.properties.creationDate.description: The creation date of this
  assignment
definitions.Assignment.properties.creationDate.format: date-time
definitions.Assignment.properties.creationDate.type: string
definitions.Assignment.properties.creator.description: |
  The User unique identifier of the creator of this assignment
definitions.Assignment.properties.creator.type: string
definitions.Assignment.properties.description.description: Description and content
  of the assignment
definitions.Assignment.properties.description.type: string
definitions.Assignment.properties.dueDate.description: |
  The due date of this assignment, late submissions will be marked as
  paste due.
definitions.Assignment.properties.dueDate.format: date-time
definitions.Assignment.properties.dueDate.type: string
definitions.Assignment.properties.googleClassroom.$ref: '#/definitions/GoogleClassroomCoursework'
definitions.Assignment.properties.scheduledDate.description: |
  The publication (scheduled) date of the assignment.
  If this one is specified, the assignment will only be listed to the teachers of the class.
definitions.Assignment.properties.scheduledDate.format: date-time
definitions.Assignment.properties.scheduledDate.type: string
definitions.Assignment.properties.state.description: State of the assignment
definitions.Assignment.properties.state.enum.length: 3
definitions.Assignment.properties.state.enum[0]: draft
definitions.Assignment.properties.state.enum[1]: active
definitions.Assignment.properties.state.enum[2]: archived
definitions.Assignment.properties.state.type: string
definitions.Assignment.properties.submissions.items.$ref: '#/definitions/AssignmentSubmission'
definitions.Assignment.properties.submissions.type: array
definitions.Assignment.properties.title.description: Title of the assignment
definitions.Assignment.properties.title.type: string
definitions.Assignment.type: object
definitions.AssignmentCopy.description: Assignment copy operation
definitions.AssignmentCopy.example.classroom: "0000000000000000"
definitions.AssignmentCopy.properties.classroom.description: The destination classroom
  where the assignment will be copied
definitions.AssignmentCopy.properties.classroom.type: string
definitions.AssignmentCopy.required.length: 1
definitions.AssignmentCopy.required[0]: classroom
definitions.AssignmentCopy.type: object
definitions.AssignmentCreation.description: Assignment creation details
definitions.AssignmentCreation.example.attachments.length: 2
definitions.AssignmentCreation.example.attachments[0].score: "0000000000000000"
definitions.AssignmentCreation.example.attachments[0].type: flat
definitions.AssignmentCreation.example.attachments[1].type: link
definitions.AssignmentCreation.example.attachments[1].url: https://flat.io/developers
definitions.AssignmentCreation.example.description: Get started with Flat
definitions.AssignmentCreation.example.dueDate: 2017-07-12T13:56:19.613Z
definitions.AssignmentCreation.example.scheduledDate: 2017-06-20T13:56:19.613Z
definitions.AssignmentCreation.example.title: First assignment
definitions.AssignmentCreation.properties.attachments.items.$ref: '#/definitions/ClassAttachmentCreation'
definitions.AssignmentCreation.properties.attachments.type: array
definitions.AssignmentCreation.properties.description.description: Description and
  content of the assignment
definitions.AssignmentCreation.properties.description.type: string
definitions.AssignmentCreation.properties.dueDate.description: |
  The due date of this assignment, late submissions will be marked as paste due. If not set, the assignment won't have a due date.
definitions.AssignmentCreation.properties.dueDate.format: date-time
definitions.AssignmentCreation.properties.dueDate.type: string
definitions.AssignmentCreation.properties.scheduledDate.description: |
  The publication (scheduled) date of the assignment.
  If this one is specified, the assignment will only be listed to the teachers of the class.
definitions.AssignmentCreation.properties.scheduledDate.format: date-time
definitions.AssignmentCreation.properties.scheduledDate.type: string
definitions.AssignmentCreation.properties.title.description: Title of the assignment
definitions.AssignmentCreation.properties.title.type: string
definitions.AssignmentCreation.type: object
definitions.AssignmentSubmission.description: Assignment Submission
definitions.AssignmentSubmission.example.assignment: 58c49068524c03ec576ca43c
definitions.AssignmentSubmission.example.attachments.length: 1
definitions.AssignmentSubmission.example.attachments[0].score: 58c4955a226ffff257211a8d
definitions.AssignmentSubmission.example.attachments[0].title: Hello - Student
definitions.AssignmentSubmission.example.attachments[0].type: flat
definitions.AssignmentSubmission.example.classroom: 58c4725345cd836264f0b29e
definitions.AssignmentSubmission.example.creationDate: 2017-03-12T00:25:00.748Z
definitions.AssignmentSubmission.example.creator: 559eb5c7f0d4d5e46d03781d
definitions.AssignmentSubmission.example.googleClassroom.alternateLink: http://classroom.google.com/c/music-theory/a/first-assignment/submissions/student/my-submission
definitions.AssignmentSubmission.example.googleClassroom.id: CgsI-00000000000
definitions.AssignmentSubmission.example.googleClassroom.state: turned_in
definitions.AssignmentSubmission.example.id: 58c4955c226ffff257211a90
definitions.AssignmentSubmission.example.submissionDate: 2017-03-12T00:25:22.748Z
definitions.AssignmentSubmission.properties.assignment.description: Unique identifier
  of the assignment
definitions.AssignmentSubmission.properties.assignment.type: string
definitions.AssignmentSubmission.properties.attachments.items.$ref: '#/definitions/MediaAttachment'
definitions.AssignmentSubmission.properties.attachments.type: array
definitions.AssignmentSubmission.properties.classroom.description: |
  Unique identifier of the classroom where the assignment was posted
definitions.AssignmentSubmission.properties.classroom.type: string
definitions.AssignmentSubmission.properties.creationDate.description: The date when
  the submission was created
definitions.AssignmentSubmission.properties.creationDate.type: string
definitions.AssignmentSubmission.properties.creator.description: The User identifier
  of the student who created the submission
definitions.AssignmentSubmission.properties.creator.type: string
definitions.AssignmentSubmission.properties.googleClassroom.$ref: '#/definitions/GoogleClassroomSubmission'
definitions.AssignmentSubmission.properties.id.description: Unique identifier of the
  submission
definitions.AssignmentSubmission.properties.id.type: string
definitions.AssignmentSubmission.properties.returnCreator.description: |
  The User unique identifier of the teacher who returned the submission
definitions.AssignmentSubmission.properties.returnCreator.type: string
definitions.AssignmentSubmission.properties.returnDate.description: The date when
  the teacher returned the work
definitions.AssignmentSubmission.properties.returnDate.type: string
definitions.AssignmentSubmission.properties.returnFeedback.description: The feedback
  associated with the return
definitions.AssignmentSubmission.properties.returnFeedback.type: string
definitions.AssignmentSubmission.properties.studentComment.description: |
  An optionnal comment sent by the student when submitting his work
definitions.AssignmentSubmission.properties.studentComment.type: string
definitions.AssignmentSubmission.properties.submissionDate.description: The date when
  the student submitted his work
definitions.AssignmentSubmission.properties.submissionDate.type: string
definitions.AssignmentSubmission.type: object
definitions.AssignmentSubmissionUpdate.description: Assignment Submission creation
definitions.AssignmentSubmissionUpdate.example.attachments.length: 1
definitions.AssignmentSubmissionUpdate.example.attachments[0].score: 58c4955a226ffff257211a8d
definitions.AssignmentSubmissionUpdate.example.attachments[0].title: Hello - Student
definitions.AssignmentSubmissionUpdate.example.attachments[0].type: flat
definitions.AssignmentSubmissionUpdate.example.studentComment: Here is my great creation
definitions.AssignmentSubmissionUpdate.example.submit: true
definitions.AssignmentSubmissionUpdate.properties.attachments.items.$ref: '#/definitions/ClassAttachmentCreation'
definitions.AssignmentSubmissionUpdate.properties.attachments.type: array
definitions.AssignmentSubmissionUpdate.properties.returnFeedback.description: The
  feedback associated with the return
definitions.AssignmentSubmissionUpdate.properties.returnFeedback.type: string
definitions.AssignmentSubmissionUpdate.properties.studentComment.description: |
  An optionnal comment sent by the student when submitting his work
definitions.AssignmentSubmissionUpdate.properties.studentComment.type: string
definitions.AssignmentSubmissionUpdate.properties.submit.description: If `true`, the
  submission will be marked as done
definitions.AssignmentSubmissionUpdate.properties.submit.type: boolean
definitions.AssignmentSubmissionUpdate.type: object
definitions.ClassAttachmentCreation.description: |
  Attachment creation for an assignment or stream post.
  This attachment must contain a `score` or an `url`, all the details of this one will be resolved and returned as `ClassAttachment` once the assignment or stream post is created.
definitions.ClassAttachmentCreation.example.score: "000000000000000001"
definitions.ClassAttachmentCreation.example.sharingMode: copy
definitions.ClassAttachmentCreation.example.type: flat
definitions.ClassAttachmentCreation.properties.score.description: |
  A unique Flat score identifier. The user creating the assignment must at least have read access to the document. If the user has admin rights, new group permissions will be automatically added for the
  teachers and students of the class.
definitions.ClassAttachmentCreation.properties.score.type: string
definitions.ClassAttachmentCreation.properties.type.description: The type of the attachment
  posted
definitions.ClassAttachmentCreation.properties.type.enum.length: 3
definitions.ClassAttachmentCreation.properties.type.enum[0]: flat
definitions.ClassAttachmentCreation.properties.type.enum[1]: link
definitions.ClassAttachmentCreation.properties.type.enum[2]: exercise
definitions.ClassAttachmentCreation.properties.type.type: string
definitions.ClassAttachmentCreation.properties.url.description: The URL of the attachment.
definitions.ClassAttachmentCreation.properties.url.type: string
definitions.ClassAttachmentCreation.type: object
definitions.ClassCreation.description: Creation of a classroom
definitions.ClassCreation.example.name: Music Theory Course
definitions.ClassCreation.example.section: Music Theory 101
definitions.ClassCreation.properties.name.description: The name of the new class
definitions.ClassCreation.properties.name.maxLength: 255
definitions.ClassCreation.properties.name.type: string
definitions.ClassCreation.properties.section.description: The section of the new class
definitions.ClassCreation.properties.section.maxLength: 255
definitions.ClassCreation.properties.section.type: string
definitions.ClassCreation.required.length: 1
definitions.ClassCreation.required[0]: name
definitions.ClassCreation.type: object
definitions.ClassDetails.description: A classroom
definitions.ClassDetails.example.assignmentsCount: 10
definitions.ClassDetails.example.canvas.id: "000000000"
definitions.ClassDetails.example.creationTime: 2017-01-25T09:47:34.544Z
definitions.ClassDetails.example.enrollmentCode: jm447ear
definitions.ClassDetails.example.googleClassroom.alternateLink: http://classroom.google.com/c/music-theory
definitions.ClassDetails.example.googleClassroom.creationTime: 2017-01-25T09:47:34.544Z
definitions.ClassDetails.example.googleClassroom.id: "00000000"
definitions.ClassDetails.example.googleClassroom.name: Music Theory 101
definitions.ClassDetails.example.googleClassroom.ownerId: "0000000000424242"
definitions.ClassDetails.example.googleClassroom.updateTime: 2017-01-25T09:47:33.481Z
definitions.ClassDetails.example.googleDrive.teacherFolderAlternateLink: https://drive.google.com/drive/folders/0B-0000000000000000
definitions.ClassDetails.example.googleDrive.teacherFolderId: 0B-0000000000000000
definitions.ClassDetails.example.id: "100000000000000000000001"
definitions.ClassDetails.example.lti.contextId: "042"
definitions.ClassDetails.example.lti.contextLabel: MUSIC
definitions.ClassDetails.example.lti.contextTitle: Music Theory 101
definitions.ClassDetails.example.name: Music Theory 101
definitions.ClassDetails.example.organization: "100000000000000000000002"
definitions.ClassDetails.example.owner: "100000000000000000000003"
definitions.ClassDetails.example.section: Music Theory 101
definitions.ClassDetails.example.state: active
definitions.ClassDetails.example.theme: blue-8
definitions.ClassDetails.properties.assignmentsCount.description: The number of assignments
  created in the class
definitions.ClassDetails.properties.assignmentsCount.type: number
definitions.ClassDetails.properties.canvas.description: Meta information provided
  by Canvs LMS
definitions.ClassDetails.properties.canvas.properties.domain.description: Canvas instance
  domain (e.g. "canvas.instructure.com")
definitions.ClassDetails.properties.canvas.properties.domain.type: string
definitions.ClassDetails.properties.canvas.properties.id.description: Unique identifier
  of the course on Canvas
definitions.ClassDetails.properties.canvas.properties.id.type: string
definitions.ClassDetails.properties.canvas.type: object
definitions.ClassDetails.properties.clever.description: Clever.com section-related
  information
definitions.ClassDetails.properties.clever.properties.creationDate.description: The
  creation date of the section on clever
definitions.ClassDetails.properties.clever.properties.creationDate.format: date-time
definitions.ClassDetails.properties.clever.properties.creationDate.type: string
definitions.ClassDetails.properties.clever.properties.id.description: Clever section
  unique identifier
definitions.ClassDetails.properties.clever.properties.id.type: string
definitions.ClassDetails.properties.clever.properties.modificationDate.description: The
  last modification date of the section on clever
definitions.ClassDetails.properties.clever.properties.modificationDate.format: date-time
definitions.ClassDetails.properties.clever.properties.modificationDate.type: string
definitions.ClassDetails.properties.clever.properties.subject.description: Normalized
  subject of the course
definitions.ClassDetails.properties.clever.properties.subject.enum.length: 11
definitions.ClassDetails.properties.clever.properties.subject.enum[0]: english/language
  arts
definitions.ClassDetails.properties.clever.properties.subject.enum[1]: math
definitions.ClassDetails.properties.clever.properties.subject.enum[2]: science
definitions.ClassDetails.properties.clever.properties.subject.enum[3]: social studies
definitions.ClassDetails.properties.clever.properties.subject.enum[4]: language
definitions.ClassDetails.properties.clever.properties.subject.enum[5]: homeroom/advisory
definitions.ClassDetails.properties.clever.properties.subject.enum[6]: interventions/online
  learning
definitions.ClassDetails.properties.clever.properties.subject.enum[7]: technology
  and engineering
definitions.ClassDetails.properties.clever.properties.subject.enum[8]: PE and health
definitions.ClassDetails.properties.clever.properties.subject.enum[9]: arts and music
definitions.ClassDetails.properties.clever.properties.subject.enum[10]: other
definitions.ClassDetails.properties.clever.properties.subject.type: string
definitions.ClassDetails.properties.clever.properties.termEndDate.description: End
  date of the term
definitions.ClassDetails.properties.clever.properties.termEndDate.format: date-time
definitions.ClassDetails.properties.clever.properties.termEndDate.type: string
definitions.ClassDetails.properties.clever.properties.termName.description: Name of
  the term when this course happens
definitions.ClassDetails.properties.clever.properties.termName.type: string
definitions.ClassDetails.properties.clever.properties.termStartDate.description: Beginning
  date of the term
definitions.ClassDetails.properties.clever.properties.termStartDate.format: date-time
definitions.ClassDetails.properties.clever.properties.termStartDate.type: string
definitions.ClassDetails.properties.clever.type: object
definitions.ClassDetails.properties.creationDate.description: The date when the class
  was create
definitions.ClassDetails.properties.creationDate.format: date-time
definitions.ClassDetails.properties.creationDate.type: string
definitions.ClassDetails.properties.description.description: An optionnal description
  for this class
definitions.ClassDetails.properties.description.type: string
definitions.ClassDetails.properties.enrollmentCode.description: |
  [Teachers only] The enrollment code that can be used by the students to join the class
definitions.ClassDetails.properties.enrollmentCode.type: string
definitions.ClassDetails.properties.googleClassroom.description: Google Classroom
  course-related information
definitions.ClassDetails.properties.googleClassroom.properties.alternateLink.description: Absolute
  link to this course in the Classroom web UI
definitions.ClassDetails.properties.googleClassroom.properties.alternateLink.type: string
definitions.ClassDetails.properties.googleClassroom.properties.id.description: The
  course identifier on Google Classroom
definitions.ClassDetails.properties.googleClassroom.properties.id.type: string
definitions.ClassDetails.properties.googleClassroom.properties.name.description: The
  name of the course on Google Classroom
definitions.ClassDetails.properties.googleClassroom.properties.name.type: string
definitions.ClassDetails.properties.googleClassroom.properties.section.description: The
  section of the course on Google Classroom
definitions.ClassDetails.properties.googleClassroom.properties.section.type: string
definitions.ClassDetails.properties.googleClassroom.type: object
definitions.ClassDetails.properties.googleDrive.description: Google Drive course-related
  information provided by Google Classroom
definitions.ClassDetails.properties.googleDrive.properties.teacherFolderAlternateLink.description: |
  [Teachers only] The Drive URL of the teachers' folder
definitions.ClassDetails.properties.googleDrive.properties.teacherFolderAlternateLink.type: string
definitions.ClassDetails.properties.googleDrive.properties.teacherFolderId.description: |
  [Teachers only] The Drive directory identifier of the teachers' folder
definitions.ClassDetails.properties.googleDrive.properties.teacherFolderId.type: string
definitions.ClassDetails.properties.googleDrive.type: object
definitions.ClassDetails.properties.id.description: The unique identifier of the class
definitions.ClassDetails.properties.id.type: string
definitions.ClassDetails.properties.lti.description: Meta information provided by
  the LTI consumer
definitions.ClassDetails.properties.lti.properties.contextId.description: Unique context
  identifier provided
definitions.ClassDetails.properties.lti.properties.contextId.type: string
definitions.ClassDetails.properties.lti.properties.contextLabel.description: Context
  label
definitions.ClassDetails.properties.lti.properties.contextLabel.type: string
definitions.ClassDetails.properties.lti.properties.contextTitle.description: Context
  title
definitions.ClassDetails.properties.lti.properties.contextTitle.type: string
definitions.ClassDetails.properties.lti.type: object
definitions.ClassDetails.properties.name.description: The name of the class
definitions.ClassDetails.properties.name.type: string
definitions.ClassDetails.properties.organization.description: The unique identifier
  of the Organization owning this class
definitions.ClassDetails.properties.organization.type: string
definitions.ClassDetails.properties.owner.description: The unique identifier of the
  User owning this class
definitions.ClassDetails.properties.owner.type: string
definitions.ClassDetails.properties.section.description: The section of the class
definitions.ClassDetails.properties.section.type: string
definitions.ClassDetails.properties.state.$ref: '#/definitions/ClassState'
definitions.ClassDetails.properties.studentsGroup.$ref: '#/definitions/GroupDetails'
definitions.ClassDetails.properties.teachersGroup.$ref: '#/definitions/GroupDetails'
definitions.ClassDetails.properties.theme.description: The theme identifier using
  in Flat User Interface
definitions.ClassDetails.properties.theme.type: string
definitions.ClassDetails.type: object
definitions.ClassRoles.description: User's Class Role (for Edu users only)
definitions.ClassRoles.enum.length: 2
definitions.ClassRoles.enum[0]: teacher
definitions.ClassRoles.enum[1]: student
definitions.ClassRoles.type: string
definitions.ClassState.description: The state of a classroom
definitions.ClassState.enum.length: 3
definitions.ClassState.enum[0]: active
definitions.ClassState.enum[1]: inactive
definitions.ClassState.enum[2]: archived
definitions.ClassState.type: string
definitions.ClassUpdate.description: Update of a classroom
definitions.ClassUpdate.example.name: Music Theory Course
definitions.ClassUpdate.example.section: Music Theory 101
definitions.ClassUpdate.properties.name.description: The name of the class
definitions.ClassUpdate.properties.name.maxLength: 255
definitions.ClassUpdate.properties.name.type: string
definitions.ClassUpdate.properties.section.description: The section of the class
definitions.ClassUpdate.properties.section.maxLength: 255
definitions.ClassUpdate.properties.section.type: string
definitions.ClassUpdate.type: object
definitions.FlatErrorResponse.example.code: CLIENT_ERROR
definitions.FlatErrorResponse.example.id: "123456789"
definitions.FlatErrorResponse.example.message: Invalid request
definitions.FlatErrorResponse.properties.code.description: A corresponding code for
  this error
definitions.FlatErrorResponse.properties.code.type: string
definitions.FlatErrorResponse.properties.id.description: An unique error identifier
  generated for the request
definitions.FlatErrorResponse.properties.id.type: string
definitions.FlatErrorResponse.properties.message.description: A printable message
  for this message
definitions.FlatErrorResponse.properties.message.type: string
definitions.FlatErrorResponse.properties.param.description: The related parameter
  that caused the error
definitions.FlatErrorResponse.properties.param.type: string
definitions.FlatErrorResponse.type: object
definitions.FlatLocales.default: en
definitions.FlatLocales.description: The user language
definitions.FlatLocales.enum.length: 7
definitions.FlatLocales.enum[0]: en
definitions.FlatLocales.enum[1]: es
definitions.FlatLocales.enum[2]: fr
definitions.FlatLocales.enum[3]: it
definitions.FlatLocales.enum[4]: pl
definitions.FlatLocales.enum[5]: ro
definitions.FlatLocales.enum[6]: nl
definitions.FlatLocales.type: string
definitions.GoogleClassroomCoursework.description: A coursework on Google Classroom
definitions.GoogleClassroomCoursework.example.alternateLink: http://classroom.google.com/c/music-theory/a/first-assignment/detail
definitions.GoogleClassroomCoursework.example.id: "1235665432"
definitions.GoogleClassroomCoursework.properties.alternateLink.description: Absolute
  link to this coursework in the Classroom web UI
definitions.GoogleClassroomCoursework.properties.alternateLink.type: string
definitions.GoogleClassroomCoursework.properties.id.description: Identifier of the
  coursework assigned by Classroom
definitions.GoogleClassroomCoursework.properties.id.type: string
definitions.GoogleClassroomCoursework.properties.state.description: State of the coursework
definitions.GoogleClassroomCoursework.properties.state.type: string
definitions.GoogleClassroomCoursework.type: object
definitions.GoogleClassroomSubmission.description: A coursework submission on Google
  Classroom
definitions.GoogleClassroomSubmission.example.alternateLink: http://classroom.google.com/c/music-theory/a/first-assignment/submissions/student/my-submission
definitions.GoogleClassroomSubmission.example.id: CgsI-00000000000
definitions.GoogleClassroomSubmission.example.state: turned_in
definitions.GoogleClassroomSubmission.properties.alternateLink.description: Absolute
  link to this coursework in the Classroom web UI
definitions.GoogleClassroomSubmission.properties.alternateLink.type: string
definitions.GoogleClassroomSubmission.properties.id.description: Identifier of the
  coursework submission assigned by Classroom
definitions.GoogleClassroomSubmission.properties.id.type: string
definitions.GoogleClassroomSubmission.properties.state.description: State of the submission
  on Google Classroom
definitions.GoogleClassroomSubmission.properties.state.type: string
definitions.GoogleClassroomSubmission.type: object
definitions.Group.description: A group of users
definitions.Group.example.creationDate: 2015-01-19T00:22:02.387Z
definitions.Group.example.id: "0000000000000000000000043"
definitions.Group.example.name: 5th grade
definitions.Group.example.organization: "0000000000000000000000042"
definitions.Group.example.readOnly: true
definitions.Group.example.type: classTeachers
definitions.Group.example.userCount: 24
definitions.Group.properties.creationDate.description: The creation date of the group
definitions.Group.properties.creationDate.format: date-time
definitions.Group.properties.creationDate.type: string
definitions.Group.properties.id.description: The unique identifier of the group
definitions.Group.properties.id.type: string
definitions.Group.properties.name.description: The display name of the group
definitions.Group.properties.name.type: string
definitions.Group.properties.organization.description: |
  If the group is related to an organization, this field will contain
  the unique identifier of the organization
definitions.Group.properties.organization.type: string
definitions.Group.properties.readOnly.description: |
  `True` if the group is set in read-only
definitions.Group.properties.readOnly.type: boolean
definitions.Group.properties.type.description: |
  The type of the group:
  * `generic`: A group created by a Flat user
  * `classTeachers`: A group created automaticaly by Flat that contains
    the teachers of a class
  * `classStudents`: A group created automaticaly by Flat that contains
    the studnets of a class
definitions.Group.properties.type.enum.length: 3
definitions.Group.properties.type.enum[0]: generic
definitions.Group.properties.type.enum[1]: classTeachers
definitions.Group.properties.type.enum[2]: classStudents
definitions.Group.properties.type.type: string
definitions.Group.properties.usersCount.description: The number of users in this group
definitions.Group.properties.usersCount.type: number
definitions.Group.type: object
definitions.GroupDetails.description: The details of a group
definitions.GroupDetails.example.creationDate: 2017-07-02T15:02:40.207Z
definitions.GroupDetails.example.id: 58c4955c226ffff257211a00
definitions.GroupDetails.example.name: 5th Grade - Teachers
definitions.GroupDetails.example.organization: "0000000000000000000000042"
definitions.GroupDetails.example.readOnly: false
definitions.GroupDetails.example.type: classTeachers
definitions.GroupDetails.example.usersCount: 2
definitions.GroupDetails.properties.creationDate.description: The date when the group
  was create
definitions.GroupDetails.properties.creationDate.format: date-time
definitions.GroupDetails.properties.creationDate.type: string
definitions.GroupDetails.properties.id.description: The unique identifier of the group
definitions.GroupDetails.properties.id.type: string
definitions.GroupDetails.properties.name.description: The displayable name of the
  group
definitions.GroupDetails.properties.name.type: string
definitions.GroupDetails.properties.organization.description: The unique identifier
  of the Organization owning the group
definitions.GroupDetails.properties.organization.type: string
definitions.GroupDetails.properties.readOnly.description: |
  `true` if the properties and members of this group are in in read-only
definitions.GroupDetails.properties.readOnly.type: boolean
definitions.GroupDetails.properties.type.$ref: '#/definitions/GroupType'
definitions.GroupDetails.properties.usersCount.description: The number of students
  in this group
definitions.GroupDetails.properties.usersCount.type: number
definitions.GroupDetails.type: object
definitions.GroupType.description: The type of the group
definitions.GroupType.enum.length: 3
definitions.GroupType.enum[0]: generic
definitions.GroupType.enum[1]: classTeachers
definitions.GroupType.enum[2]: classStudents
definitions.GroupType.type: string
definitions.LicenseMode.description: Mode of the license
definitions.LicenseMode.enum.length: 2
definitions.LicenseMode.enum[0]: credit
definitions.LicenseMode.enum[1]: site
definitions.LicenseMode.type: string
definitions.LicenseSources.default: order
definitions.LicenseSources.description: Source of the license
definitions.LicenseSources.enum.length: 5
definitions.LicenseSources.enum[0]: order
definitions.LicenseSources.enum[1]: trial
definitions.LicenseSources.enum[2]: voucher
definitions.LicenseSources.enum[3]: distributor
definitions.LicenseSources.enum[4]: subscription
definitions.LicenseSources.type: string
definitions.LmsName.description: LMS name
definitions.LmsName.enum.length: 7
definitions.LmsName.enum[0]: canvas
definitions.LmsName.enum[1]: moodle
definitions.LmsName.enum[2]: schoology
definitions.LmsName.enum[3]: blackboard
definitions.LmsName.enum[4]: desire2learn
definitions.LmsName.enum[5]: sakai
definitions.LmsName.enum[6]: other
definitions.LmsName.type: string
definitions.LtiCredentials.description: A couple of LTI 1.x OAuth credentials
definitions.LtiCredentials.example.consumerKey: 200082F5-FAFD-4C6E-BB19-7DAB5D6264D4
definitions.LtiCredentials.example.consumerSecret: 168b6181c05eae14298176a274273e4ebef0d15555fe3e80c6a98ccd57d0c3b6
definitions.LtiCredentials.example.creationDate: 2017-06-06T11:03:01.955Z
definitions.LtiCredentials.example.creator: 5832bf149995c4024bd6de7d
definitions.LtiCredentials.example.id: 59368be5c66caf895ee02387
definitions.LtiCredentials.example.lastUsage: 2017-06-13T16:02:34.324Z
definitions.LtiCredentials.example.lms: canvas
definitions.LtiCredentials.example.name: My couple of credentials for Canvas
definitions.LtiCredentials.example.organization: 5832c801a4bedc05f4fb4993
definitions.LtiCredentials.properties.consumerKey.description: OAuth 1 Consumer Key
definitions.LtiCredentials.properties.consumerKey.type: string
definitions.LtiCredentials.properties.consumerSecret.description: OAuth 1 Consumer
  Secret
definitions.LtiCredentials.properties.consumerSecret.type: string
definitions.LtiCredentials.properties.creationDate.description: The creation date
  of thse credentials
definitions.LtiCredentials.properties.creationDate.format: date-time
definitions.LtiCredentials.properties.creationDate.type: string
definitions.LtiCredentials.properties.creator.description: Unique identifier of the
  user who created these credentials
definitions.LtiCredentials.properties.creator.type: string
definitions.LtiCredentials.properties.id.description: The unique identifier of this
  couple of credentials
definitions.LtiCredentials.properties.id.type: string
definitions.LtiCredentials.properties.lastUsage.description: The last time these credentials
  were used
definitions.LtiCredentials.properties.lastUsage.format: date-time
definitions.LtiCredentials.properties.lastUsage.type: string
definitions.LtiCredentials.properties.lms.$ref: '#/definitions/LmsName'
definitions.LtiCredentials.properties.name.description: Name of the couple of credentials
definitions.LtiCredentials.properties.name.type: string
definitions.LtiCredentials.properties.organization.description: The unique identifier
  of the Organization associated to these credentials
definitions.LtiCredentials.properties.organization.type: string
definitions.LtiCredentials.type: object
definitions.LtiCredentialsCreation.description: Creation of a couple of LTI 1.x OAuth
  credentials
definitions.LtiCredentialsCreation.example.lms: canvas
definitions.LtiCredentialsCreation.example.name: My couple of credentials for Canvas
definitions.LtiCredentialsCreation.properties.lms.$ref: '#/definitions/LmsName'
definitions.LtiCredentialsCreation.properties.name.description: Name of the couple
  of credentials
definitions.LtiCredentialsCreation.properties.name.maxLength: 300
definitions.LtiCredentialsCreation.properties.name.type: string
definitions.LtiCredentialsCreation.required.length: 2
definitions.LtiCredentialsCreation.required[0]: name
definitions.LtiCredentialsCreation.required[1]: lms
definitions.LtiCredentialsCreation.type: object
definitions.MediaAttachment.description: |
  Media attachment. The API will automatically resolve the details, oEmbed,
  and media available if possible and return them in this object
definitions.MediaAttachment.example.authorName: Flat
definitions.MediaAttachment.example.authorUrl: https://www.youtube.com/channel/UCEUIbEP9Rba_g0r4eeGhmXw
definitions.MediaAttachment.example.description: Discover Flat on https://flat.io
definitions.MediaAttachment.example.html: <iframe width="560" height="315" src="https://www.youtube.com/embed/SNbRUiBZ4Uw"
  frameborder="0" allowfullscreen></iframe>
definitions.MediaAttachment.example.thumbnailHeight: 1052
definitions.MediaAttachment.example.thumbnailUrl: https://i.ytimg.com/vi/SNbRUiBZ4Uw/maxresdefault.jpg
definitions.MediaAttachment.example.thumbnailWidth: 1868
definitions.MediaAttachment.example.title: Flat - The online collaborative music notation
  software
definitions.MediaAttachment.example.type: video
definitions.MediaAttachment.example.url: https://www.youtube.com/watch?v=SNbRUiBZ4Uw
definitions.MediaAttachment.properties.authorName.description: The resolved author
  name of the attachment
definitions.MediaAttachment.properties.authorName.type: string
definitions.MediaAttachment.properties.authorUrl.description: The resolved author
  url of the attachment
definitions.MediaAttachment.properties.authorUrl.type: string
definitions.MediaAttachment.properties.correct.description: If the attachment is an
  exercise question, this state will describe if it is correct or not.For exercise
  assignments only.
definitions.MediaAttachment.properties.correct.type: boolean
definitions.MediaAttachment.properties.description.description: The resolved description
  of the attachment
definitions.MediaAttachment.properties.description.type: string
definitions.MediaAttachment.properties.html.description: |
  If the attachment type is `rich` or `video`, the HTML code of the
  media to display
definitions.MediaAttachment.properties.html.type: string
definitions.MediaAttachment.properties.htmlHeight.description: If the `html` is available,
  the height of the widget
definitions.MediaAttachment.properties.htmlHeight.type: string
definitions.MediaAttachment.properties.htmlWidth.description: If the `html` is available,
  the width of the widget
definitions.MediaAttachment.properties.htmlWidth.type: string
definitions.MediaAttachment.properties.revision.description: An unique revision identifier
  of a score
definitions.MediaAttachment.properties.revision.type: string
definitions.MediaAttachment.properties.score.description: An unique Flat score identifier
definitions.MediaAttachment.properties.score.type: string
definitions.MediaAttachment.properties.sharingMode.$ref: '#/definitions/MediaScoreSharingMode'
definitions.MediaAttachment.properties.thumbnailHeight.description: |
  If the `thumbnailUrl` is available, the width of the thumbnail
definitions.MediaAttachment.properties.thumbnailHeight.type: string
definitions.MediaAttachment.properties.thumbnailUrl.description: |
  If the attachment type is `rich`, `video`, `photo` or `link`, a
  displayable thumbnail for this attachment
definitions.MediaAttachment.properties.thumbnailUrl.type: string
definitions.MediaAttachment.properties.thumbnailWidth.description: |
  If the `thumbnailUrl` is available, the width of the thumbnail
definitions.MediaAttachment.properties.thumbnailWidth.type: string
definitions.MediaAttachment.properties.title.description: The resolved title of the
  attachment
definitions.MediaAttachment.properties.title.type: string
definitions.MediaAttachment.properties.type.description: |
  The type of the assignment resolved:
  * `rich`, `photo`, `video` are attachment types that are automatically resolved from a `link` attachment.
  * A `flat` attachment is a score document where the unique identifier will be specified in the `score` property. Its sharing mode will be provided in the `sharingMode` property.
definitions.MediaAttachment.properties.type.enum.length: 6
definitions.MediaAttachment.properties.type.enum[0]: rich
definitions.MediaAttachment.properties.type.enum[1]: photo
definitions.MediaAttachment.properties.type.enum[2]: video
definitions.MediaAttachment.properties.type.enum[3]: link
definitions.MediaAttachment.properties.type.enum[4]: flat
definitions.MediaAttachment.properties.type.enum[5]: exercise
definitions.MediaAttachment.properties.type.type: string
definitions.MediaAttachment.properties.url.description: The url of the attachment
definitions.MediaAttachment.properties.url.type: string
definitions.MediaAttachment.type: object
definitions.MediaScoreSharingMode.default: read
definitions.MediaScoreSharingMode.description: The sharing mode of the score for classes
  post and assignments
definitions.MediaScoreSharingMode.enum.length: 3
definitions.MediaScoreSharingMode.enum[0]: read
definitions.MediaScoreSharingMode.enum[1]: write
definitions.MediaScoreSharingMode.enum[2]: copy
definitions.MediaScoreSharingMode.type: string
definitions.OrganizationInvitation.description: Details of an invitation to join an
  organization
definitions.OrganizationInvitation.example.creationDate: 2017-07-02T15:05:15.576Z
definitions.OrganizationInvitation.example.customCode: u5raQ7pZ
definitions.OrganizationInvitation.example.email: edu@flat.io
definitions.OrganizationInvitation.example.id: 59590bab53b1af260610000
definitions.OrganizationInvitation.example.invitedBy: 55b8d8f395c8db031ed00000
definitions.OrganizationInvitation.example.organization: 55df29a6694e4a3953100000
definitions.OrganizationInvitation.example.organizationRole: teacher
definitions.OrganizationInvitation.properties.customCode.description: Enrollment code
  to use when joining this organization
definitions.OrganizationInvitation.properties.customCode.type: string
definitions.OrganizationInvitation.properties.email.description: The email address
  this invitation was sent to
definitions.OrganizationInvitation.properties.email.type: string
definitions.OrganizationInvitation.properties.id.description: The invitation unique
  identifier
definitions.OrganizationInvitation.properties.id.type: string
definitions.OrganizationInvitation.properties.invitedBy.description: The unique identifier
  of the User who created this invitation
definitions.OrganizationInvitation.properties.invitedBy.type: string
definitions.OrganizationInvitation.properties.organization.description: The unique
  identifier of the Organization owning this class
definitions.OrganizationInvitation.properties.organization.type: string
definitions.OrganizationInvitation.properties.organizationRole.$ref: '#/definitions/OrganizationRoles'
definitions.OrganizationInvitation.properties.usedBy.description: The unique identifier
  of the User who used this invitation
definitions.OrganizationInvitation.properties.usedBy.type: string
definitions.OrganizationInvitation.type: object
definitions.OrganizationInvitationCreation.description: The parameters to create an
  organization invitation
definitions.OrganizationInvitationCreation.example.email: edu@flat.io
definitions.OrganizationInvitationCreation.example.organizationRole: teacher
definitions.OrganizationInvitationCreation.properties.email.description: The email
  address you want to send the invitation to
definitions.OrganizationInvitationCreation.properties.email.type: string
definitions.OrganizationInvitationCreation.properties.organizationRole.$ref: '#/definitions/OrganizationRoles'
definitions.OrganizationInvitationCreation.type: object
definitions.OrganizationRoles.description: User's Organization Role (for Edu users
  only)
definitions.OrganizationRoles.enum.length: 4
definitions.OrganizationRoles.enum[0]: admin
definitions.OrganizationRoles.enum[1]: billing
definitions.OrganizationRoles.enum[2]: teacher
definitions.OrganizationRoles.enum[3]: user
definitions.OrganizationRoles.type: string
definitions.ScoreCollaborator.description: |
  A collaborator of a score. The `userEmail` and `group` are only available if the requesting user is a collaborator of the related score (in this case these permissions will eventualy not be listed and exposed publicly).
definitions.ScoreCollaborator.example.aclAdmin: true
definitions.ScoreCollaborator.example.aclRead: true
definitions.ScoreCollaborator.example.aclWrite: true
definitions.ScoreCollaborator.example.id: "000000000000000000000031"
definitions.ScoreCollaborator.example.score: "000000000000000000000040"
definitions.ScoreCollaborator.example.userEmail: user@example.com
definitions.ScoreCollaborator.properties.aclAdmin.default: false
definitions.ScoreCollaborator.properties.aclAdmin.description: |
  `True` if the related user can can manage the current document, i.e. changing the document permissions and deleting the document
definitions.ScoreCollaborator.properties.aclAdmin.type: boolean
definitions.ScoreCollaborator.properties.aclRead.default: true
definitions.ScoreCollaborator.properties.aclRead.description: |
  `True` if the related user can read the score. (probably true if the user has a permission on the document).
definitions.ScoreCollaborator.properties.aclRead.type: boolean
definitions.ScoreCollaborator.properties.aclWrite.default: false
definitions.ScoreCollaborator.properties.aclWrite.description: |
  `True` if the related user can modify the score.
definitions.ScoreCollaborator.properties.aclWrite.type: boolean
definitions.ScoreCollaborator.properties.group.$ref: '#/definitions/Group'
definitions.ScoreCollaborator.properties.id.description: The unique identifier of
  the score permission
definitions.ScoreCollaborator.properties.id.type: string
definitions.ScoreCollaborator.properties.score.description: The unique identifier
  of the score
definitions.ScoreCollaborator.properties.score.type: string
definitions.ScoreCollaborator.properties.user.$ref: '#/definitions/UserPublic'
definitions.ScoreCollaborator.properties.userEmail.description: |
  If the collaborator is not a user of Flat yet, this field will contain his email.
definitions.ScoreCollaborator.properties.userEmail.type: string
definitions.ScoreCollaborator.type: object
definitions.ScoreCollaboratorCreation.description: |
  A collaborator of a score. The `userEmail` and `group` are only available if the requesting user is a collaborator of the related score (in this case these permissions will eventualy not be listed and exposed publicly).
definitions.ScoreCollaboratorCreation.example.aclAdmin: false
definitions.ScoreCollaboratorCreation.example.aclRead: true
definitions.ScoreCollaboratorCreation.example.aclWrite: true
definitions.ScoreCollaboratorCreation.example.userEmail: jdoe@flat.io
definitions.ScoreCollaboratorCreation.properties.aclAdmin.default: false
definitions.ScoreCollaboratorCreation.properties.aclAdmin.description: |
  `True` if the related user can can manage the current document, i.e. changing the document permissions and deleting the document
definitions.ScoreCollaboratorCreation.properties.aclAdmin.type: boolean
definitions.ScoreCollaboratorCreation.properties.aclRead.default: true
definitions.ScoreCollaboratorCreation.properties.aclRead.description: |
  `True` if the related user can read the score. (probably true if the user has a permission on the document).
definitions.ScoreCollaboratorCreation.properties.aclRead.type: boolean
definitions.ScoreCollaboratorCreation.properties.aclWrite.default: false
definitions.ScoreCollaboratorCreation.properties.aclWrite.description: |
  `True` if the related user can modify the score.
definitions.ScoreCollaboratorCreation.properties.aclWrite.type: boolean
definitions.ScoreCollaboratorCreation.properties.group.description: The unique identifier
  of a Flat group
definitions.ScoreCollaboratorCreation.properties.group.type: string
definitions.ScoreCollaboratorCreation.properties.user.description: The unique identifier
  of a Flat user
definitions.ScoreCollaboratorCreation.properties.user.type: string
definitions.ScoreCollaboratorCreation.properties.userEmail.description: |
  Fill this field to invite an individual user by email.
definitions.ScoreCollaboratorCreation.properties.userEmail.type: string
definitions.ScoreCollaboratorCreation.type: object
definitions.ScoreComment.description: Comment added on a sheet music
definitions.ScoreComment.example.comment: '@[000000000000000000000000:flat] Great
  work!'
definitions.ScoreComment.example.context.measureUuids.length: 3
definitions.ScoreComment.example.context.measureUuids[0]: e6a6a60b-8710-f819-9a49-e907b19c6f1f
definitions.ScoreComment.example.context.measureUuids[1]: da83d93c-e3a6-3c73-1bbe-15e5131d6437
definitions.ScoreComment.example.context.measureUuids[2]: 056ec5eb-9213-df56-6ae8-d9b99673dc48
definitions.ScoreComment.example.context.partUuid: 91982db7-2e6d-285e-7a19-76b4bd005b8b
definitions.ScoreComment.example.context.staffIdx: 0
definitions.ScoreComment.example.context.startDpq: 1
definitions.ScoreComment.example.context.startTimePos: 2
definitions.ScoreComment.example.context.stopDpq: 1
definitions.ScoreComment.example.context.stopTimePos: 3
definitions.ScoreComment.example.date: 2017-01-26T20:29:10.622Z
definitions.ScoreComment.example.id: "000000000000000000000010"
definitions.ScoreComment.example.mentions.length: 1
definitions.ScoreComment.example.mentions[0]: "000000000000000000000000"
definitions.ScoreComment.example.modificationDate: 2017-01-26T21:29:10.622Z
definitions.ScoreComment.example.rawComment: '@flat: Great work!'
definitions.ScoreComment.example.replyTo: "000000000000000000000000"
definitions.ScoreComment.example.resolved: true
definitions.ScoreComment.example.resolvedBy: "000000000000000000000000"
definitions.ScoreComment.example.revision: "000000000000000000000011"
definitions.ScoreComment.example.score: "000000000000000000000042"
definitions.ScoreComment.example.spam: false
definitions.ScoreComment.example.type: inline
definitions.ScoreComment.example.user: "000000000000000000000001"
definitions.ScoreComment.properties.comment.description: |
  The comment text that can includes mentions using the following
  format: `@[id:username]`.
definitions.ScoreComment.properties.comment.type: string
definitions.ScoreComment.properties.context.$ref: '#/definitions/ScoreCommentContext'
definitions.ScoreComment.properties.date.description: The date when the comment was
  posted
definitions.ScoreComment.properties.date.format: date-time
definitions.ScoreComment.properties.date.type: string
definitions.ScoreComment.properties.id.description: The comment unique identifier
definitions.ScoreComment.properties.id.type: string
definitions.ScoreComment.properties.mentions.description: The list of user identifier
  mentioned on the score
definitions.ScoreComment.properties.mentions.items.type: string
definitions.ScoreComment.properties.mentions.type: array
definitions.ScoreComment.properties.modificationDate.description: The date of the
  last comment modification
definitions.ScoreComment.properties.modificationDate.format: date-time
definitions.ScoreComment.properties.modificationDate.type: string
definitions.ScoreComment.properties.rawComment.description: |
  A raw version of the comment, that can be displayed without parsing
  the mentions.
definitions.ScoreComment.properties.rawComment.type: string
definitions.ScoreComment.properties.replyTo.description: |
  When the comment is a reply to another comment, the unique identifier of the parent comment
definitions.ScoreComment.properties.replyTo.type: string
definitions.ScoreComment.properties.resolved.description: |
  For inline comments, the comment can be marked as resolved and will be hidden in the future responses
definitions.ScoreComment.properties.resolved.type: boolean
definitions.ScoreComment.properties.resolvedBy.description: |
  If the user is marked as resolved, this will contain the unique identifier of the User who marked this comment as resolved
definitions.ScoreComment.properties.resolvedBy.type: string
definitions.ScoreComment.properties.revision.description: The unique identifier of
  revision the comment was posted
definitions.ScoreComment.properties.revision.type: string
definitions.ScoreComment.properties.score.description: The unique identifier of the
  score where the comment was posted
definitions.ScoreComment.properties.score.type: string
definitions.ScoreComment.properties.spam.description: |
  `true  if the message has been detected as spam and hidden from other users
definitions.ScoreComment.properties.spam.type: boolean
definitions.ScoreComment.properties.type.description: The type of the comment
definitions.ScoreComment.properties.type.enum.length: 2
definitions.ScoreComment.properties.type.enum[0]: document
definitions.ScoreComment.properties.type.enum[1]: inline
definitions.ScoreComment.properties.type.type: string
definitions.ScoreComment.properties.user.description: The author unique identifier
definitions.ScoreComment.properties.user.type: string
definitions.ScoreComment.type: object
definitions.ScoreCommentContext.description: |
  The context of the comment (for inline/contextualized comments). A context will include all the information related to the location of the comment (i.e. score parts, range of measure, time position).
definitions.ScoreCommentContext.example.measureUuids.length: 3
definitions.ScoreCommentContext.example.measureUuids[0]: e6a6a60b-8710-f819-9a49-e907b19c6f1f
definitions.ScoreCommentContext.example.measureUuids[1]: da83d93c-e3a6-3c73-1bbe-15e5131d6437
definitions.ScoreCommentContext.example.measureUuids[2]: 056ec5eb-9213-df56-6ae8-d9b99673dc48
definitions.ScoreCommentContext.example.partUuid: 91982db7-2e6d-285e-7a19-76b4bd005b8b
definitions.ScoreCommentContext.example.staffIdx: 0
definitions.ScoreCommentContext.example.startDpq: 1
definitions.ScoreCommentContext.example.startTimePos: 2
definitions.ScoreCommentContext.example.stopDpq: 1
definitions.ScoreCommentContext.example.stopTimePos: 3
definitions.ScoreCommentContext.properties.measureUuids.description: The list of measure
  UUIds
definitions.ScoreCommentContext.properties.measureUuids.items.type: string
definitions.ScoreCommentContext.properties.measureUuids.type: array
definitions.ScoreCommentContext.properties.partUuid.description: The unique identifier
  (UUID) of the score part
definitions.ScoreCommentContext.properties.partUuid.type: string
definitions.ScoreCommentContext.properties.staffIdx.description: The identififer of
  the staff
definitions.ScoreCommentContext.properties.staffIdx.type: number
definitions.ScoreCommentContext.properties.startDpq.type: number
definitions.ScoreCommentContext.properties.startTimePos.type: number
definitions.ScoreCommentContext.properties.stopDpq.type: number
definitions.ScoreCommentContext.properties.stopTimePos.type: number
definitions.ScoreCommentContext.required.length: 7
definitions.ScoreCommentContext.required[0]: partUuid
definitions.ScoreCommentContext.required[1]: staffIdx
definitions.ScoreCommentContext.required[2]: measureUuids
definitions.ScoreCommentContext.required[3]: startTimePos
definitions.ScoreCommentContext.required[4]: stopTimePos
definitions.ScoreCommentContext.required[5]: startDpq
definitions.ScoreCommentContext.required[6]: stopDpq
definitions.ScoreCommentContext.type: object
definitions.ScoreCommentCreation.description: Creation of a comment
definitions.ScoreCommentCreation.example.comment: '@[000000000000000000000000:flat]
  Great work!'
definitions.ScoreCommentCreation.example.context.measureUuids.length: 3
definitions.ScoreCommentCreation.example.context.measureUuids[0]: e6a6a60b-8710-f819-9a49-e907b19c6f1f
definitions.ScoreCommentCreation.example.context.measureUuids[1]: da83d93c-e3a6-3c73-1bbe-15e5131d6437
definitions.ScoreCommentCreation.example.context.measureUuids[2]: 056ec5eb-9213-df56-6ae8-d9b99673dc48
definitions.ScoreCommentCreation.example.context.partUuid: 91982db7-2e6d-285e-7a19-76b4bd005b8b
definitions.ScoreCommentCreation.example.context.staffIdx: 0
definitions.ScoreCommentCreation.example.context.startDpq: 1
definitions.ScoreCommentCreation.example.context.startTimePos: 2
definitions.ScoreCommentCreation.example.context.stopDpq: 1
definitions.ScoreCommentCreation.example.context.stopTimePos: 3
definitions.ScoreCommentCreation.example.mentions.length: 1
definitions.ScoreCommentCreation.example.mentions[0]: "000000000000000000000000"
definitions.ScoreCommentCreation.example.rawComment: '@flat: Great work!'
definitions.ScoreCommentCreation.example.replyTo: "000000000000000000000000"
definitions.ScoreCommentCreation.example.revision: "000000000000000000000010"
definitions.ScoreCommentCreation.properties.comment.description: |
  The comment text that can includes mentions using the following format: `@[id:username]`.
definitions.ScoreCommentCreation.properties.comment.type: string
definitions.ScoreCommentCreation.properties.context.$ref: '#/definitions/ScoreCommentContext'
definitions.ScoreCommentCreation.properties.mentions.description: The list of user
  identifiers mentioned in this comment
definitions.ScoreCommentCreation.properties.mentions.items.type: string
definitions.ScoreCommentCreation.properties.mentions.type: array
definitions.ScoreCommentCreation.properties.rawComment.description: |
  A raw version of the comment, that can be displayed without the mentions. If you use mentions, this property must be set.
definitions.ScoreCommentCreation.properties.rawComment.type: string
definitions.ScoreCommentCreation.properties.replyTo.description: |
  When the comment is a reply to another comment, the unique identifier of the parent comment
definitions.ScoreCommentCreation.properties.replyTo.type: string
definitions.ScoreCommentCreation.properties.revision.description: |
  The unique indentifier of the revision of the score where the comment was added. If this property is unspecified or contains "last", the API will automatically take the last revision created.
definitions.ScoreCommentCreation.properties.revision.type: string
definitions.ScoreCommentCreation.required.length: 1
definitions.ScoreCommentCreation.required[0]: comment
definitions.ScoreCommentCreation.type: object
definitions.ScoreCommentUpdate.description: Update of a comment
definitions.ScoreCommentUpdate.example.comment: '@[000000000000000000000000:flat]
  Great work!'
definitions.ScoreCommentUpdate.example.context.measureUuids.length: 3
definitions.ScoreCommentUpdate.example.context.measureUuids[0]: e6a6a60b-8710-f819-9a49-e907b19c6f1f
definitions.ScoreCommentUpdate.example.context.measureUuids[1]: da83d93c-e3a6-3c73-1bbe-15e5131d6437
definitions.ScoreCommentUpdate.example.context.measureUuids[2]: 056ec5eb-9213-df56-6ae8-d9b99673dc48
definitions.ScoreCommentUpdate.example.context.partUuid: 91982db7-2e6d-285e-7a19-76b4bd005b8b
definitions.ScoreCommentUpdate.example.context.staffIdx: 0
definitions.ScoreCommentUpdate.example.context.startDpq: 1
definitions.ScoreCommentUpdate.example.context.startTimePos: 2
definitions.ScoreCommentUpdate.example.context.stopDpq: 1
definitions.ScoreCommentUpdate.example.context.stopTimePos: 3
definitions.ScoreCommentUpdate.example.mentions.length: 1
definitions.ScoreCommentUpdate.example.mentions[0]: "000000000000000000000000"
definitions.ScoreCommentUpdate.example.rawComment: '@flat: Great work!'
definitions.ScoreCommentUpdate.example.replyTo: "000000000000000000000000"
definitions.ScoreCommentUpdate.example.revision: "000000000000000000000011"
definitions.ScoreCommentUpdate.properties.comment.description: |
  The comment text that can includes mentions using the following format: `@[id:username]`.
definitions.ScoreCommentUpdate.properties.comment.maxLength: 10000
definitions.ScoreCommentUpdate.properties.comment.minLength: 1
definitions.ScoreCommentUpdate.properties.comment.type: string
definitions.ScoreCommentUpdate.properties.context.$ref: '#/definitions/ScoreCommentContext'
definitions.ScoreCommentUpdate.properties.rawComment.description: |
  A raw version of the comment, that can be displayed without the mentions. If you use mentions, this property must be set.
definitions.ScoreCommentUpdate.properties.rawComment.maxLength: 10000
definitions.ScoreCommentUpdate.properties.rawComment.minLength: 1
definitions.ScoreCommentUpdate.properties.rawComment.type: string
definitions.ScoreCommentUpdate.properties.revision.description: |
  The unique indentifier of the revision of the score where the comment was added. If this property is unspecified or contains "last", the API will automatically take the last revision created.
definitions.ScoreCommentUpdate.properties.revision.type: string
definitions.ScoreCommentUpdate.type: object
definitions.ScoreCommentsCounts.description: |
  A computed version of the total, unique, weekly and monthly number of
  comments added on the documents (this doesn't include inline comments).
definitions.ScoreCommentsCounts.example.monthly: 30
definitions.ScoreCommentsCounts.example.total: 42
definitions.ScoreCommentsCounts.example.unique: 35
definitions.ScoreCommentsCounts.example.weekly: 10
definitions.ScoreCommentsCounts.properties.monthly.description: The monthly unique
  number of comments added on the score
definitions.ScoreCommentsCounts.properties.monthly.type: number
definitions.ScoreCommentsCounts.properties.total.description: The total number of
  comments added on the score
definitions.ScoreCommentsCounts.properties.total.type: number
definitions.ScoreCommentsCounts.properties.unique.description: The unique (1/user)
  number of comments added on the score
definitions.ScoreCommentsCounts.properties.unique.type: number
definitions.ScoreCommentsCounts.properties.weekly.description: The weekly unique number
  of comments added on the score
definitions.ScoreCommentsCounts.properties.weekly.type: number
definitions.ScoreCommentsCounts.type: object
definitions.ScoreCreation.description: A new created score
definitions.ScoreCreation.example.data: <score-partwise version="3.0"></score-partwise>
definitions.ScoreCreation.example.googleDriveFolder: 0B-0000000000000000
definitions.ScoreCreation.example.privacy: private
definitions.ScoreCreation.example.title: My new score
definitions.ScoreCreation.properties.data.$ref: '#/definitions/ScoreData'
definitions.ScoreCreation.properties.dataEncoding.$ref: '#/definitions/ScoreDataEncoding'
definitions.ScoreCreation.properties.googleDriveFolder.description: |
  If the user uses Google Drive and this properties is specified, the file will be created in this directory. The currently user creating the file must be granted to write in this directory.
definitions.ScoreCreation.properties.googleDriveFolder.type: string
definitions.ScoreCreation.properties.privacy.$ref: '#/definitions/ScorePrivacy'
definitions.ScoreCreation.properties.source.$ref: '#/definitions/ScoreSource'
definitions.ScoreCreation.properties.title.description: |
  The title of the new score.

  If this title is not specified, the API will try to (in this order):
    - Use the name of the file for files from a specified `source` (e.g. Google Drive)
    - Use the title contained in the file (e.g. [`movement-title`](https://usermanuals.musicxml.com/MusicXML/Content/EL-MusicXML-movement-title.htm) or [`credit-words`](https://usermanuals.musicxml.com/MusicXML/Content/EL-MusicXML-credit-words.htm) for [MusicXML](http://www.musicxml.com/) files).
    - Set a default title (e.g. "New Music Score")

  If the title is already used, the API will append the creation date after the title. If the title is too long, the API may trim this one.
definitions.ScoreCreation.properties.title.type: string
definitions.ScoreCreation.required.length: 1
definitions.ScoreCreation.required[0]: privacy
definitions.ScoreCreation.type: object
definitions.ScoreData.description: |
  The data of the score file. It must be a MusicXML 3 file (`vnd.recordare.musicxml` or `vnd.recordare.musicxml+xml`), a MIDI file (`audio/midi`) or a Flat.json (aka Adagio.json) file.

  Binary payloads (`vnd.recordare.musicxml` and `audio/midi`) can be encoded in Base64, in this case the `dataEncoding` property must match the encoding used for the API request.
definitions.ScoreData.example: <score-partwise version="3.0"></score-partwise>
definitions.ScoreData.type: string
definitions.ScoreDataEncoding.description: The optional encoding of the score data.
  This property must match the encoding used for the `data` property.
definitions.ScoreDataEncoding.enum.length: 1
definitions.ScoreDataEncoding.enum[0]: base64
definitions.ScoreDataEncoding.type: string
definitions.ScoreDetails.allOf.length: 2
definitions.ScoreDetails.allOf[0].$ref: '#/definitions/ScoreSummary'
definitions.ScoreDetails.allOf[1].properties.collaborators.description: The list of
  the collaborators of the score
definitions.ScoreDetails.allOf[1].properties.collaborators.items.$ref: '#/definitions/ScoreCollaborator'
definitions.ScoreDetails.allOf[1].properties.collaborators.type: array
definitions.ScoreDetails.allOf[1].properties.comments.$ref: '#/definitions/ScoreCommentsCounts'
definitions.ScoreDetails.allOf[1].properties.creationDate.description: The date when
  the score was created
definitions.ScoreDetails.allOf[1].properties.creationDate.format: date-time
definitions.ScoreDetails.allOf[1].properties.creationDate.type: string
definitions.ScoreDetails.allOf[1].properties.googleDriveFileId.description: |
  If the user uses Google Drive and the score exists on Google Drive, this field will contain the unique identifier of the Flat score on Google Drive. You can access the document using the url: `https://drive.google.com/open?id={googleDriveFileId}`
definitions.ScoreDetails.allOf[1].properties.googleDriveFileId.type: string
definitions.ScoreDetails.allOf[1].properties.instruments.description: |
  An array of the instrument identifiers used in the last version of the score. This is mainly used to display a list of the instruments in the Flat's UI or instruments icons. The format of the strings is `{instrument-group}.{instrument-id}`.
definitions.ScoreDetails.allOf[1].properties.instruments.items.type: string
definitions.ScoreDetails.allOf[1].properties.instruments.type: array
definitions.ScoreDetails.allOf[1].properties.likes.$ref: '#/definitions/ScoreLikesCounts'
definitions.ScoreDetails.allOf[1].properties.modificationDate.description: The date
  of the last revision of the score
definitions.ScoreDetails.allOf[1].properties.modificationDate.format: date-time
definitions.ScoreDetails.allOf[1].properties.modificationDate.type: string
definitions.ScoreDetails.allOf[1].properties.organization.description: |
  If the score has been created in an organization, the identifier of this organization. This property is especially used with the score privacy `organizationPublic`.
definitions.ScoreDetails.allOf[1].properties.organization.type: string
definitions.ScoreDetails.allOf[1].properties.parentScore.description: |
  If the score has been forked, the unique identifier of the parent score.
definitions.ScoreDetails.allOf[1].properties.parentScore.type: string
definitions.ScoreDetails.allOf[1].properties.rights.$ref: '#/definitions/ScoreRights'
definitions.ScoreDetails.allOf[1].properties.views.$ref: '#/definitions/ScoreViewsCounts'
definitions.ScoreDetails.allOf[1].type: object
definitions.ScoreDetails.description: The score and all its details
definitions.ScoreDetails.example.collaborators.length: 2
definitions.ScoreDetails.example.collaborators[0].aclAdmin: true
definitions.ScoreDetails.example.collaborators[0].aclRead: true
definitions.ScoreDetails.example.collaborators[0].aclWrite: true
definitions.ScoreDetails.example.collaborators[0].user.id: "000000000000000000000001"
definitions.ScoreDetails.example.collaborators[0].user.name: Flat Team
definitions.ScoreDetails.example.collaborators[0].user.picture: https://flat.io/img/logo_flat.svg
definitions.ScoreDetails.example.collaborators[0].user.printableName: Flat Team
definitions.ScoreDetails.example.collaborators[0].user.username: flat
definitions.ScoreDetails.example.collaborators[1].aclAdmin: false
definitions.ScoreDetails.example.collaborators[1].aclRead: true
definitions.ScoreDetails.example.collaborators[1].aclWrite: false
definitions.ScoreDetails.example.collaborators[1].group.creationDate: 2015-01-19T00:22:02.387Z
definitions.ScoreDetails.example.collaborators[1].group.id: "0000000000000000000000043"
definitions.ScoreDetails.example.collaborators[1].group.name: 5th grade
definitions.ScoreDetails.example.collaborators[1].group.organization: "0000000000000000000000042"
definitions.ScoreDetails.example.collaborators[1].group.readOnly: true
definitions.ScoreDetails.example.collaborators[1].group.type: classTeachers
definitions.ScoreDetails.example.collaborators[1].group.userCount: 24
definitions.ScoreDetails.example.comments.monthly: 0
definitions.ScoreDetails.example.comments.total: 0
definitions.ScoreDetails.example.comments.unique: 0
definitions.ScoreDetails.example.comments.weekly: 0
definitions.ScoreDetails.example.creationDate: 2017-01-15T20:03:25.771Z
definitions.ScoreDetails.example.googleDriveFileId: 0BCDEFAGA00000000000000
definitions.ScoreDetails.example.htmlUrl: https://flat.io/score/000000000000000000000000
definitions.ScoreDetails.example.id: "000000000000000000000000"
definitions.ScoreDetails.example.instruments.length: 3
definitions.ScoreDetails.example.instruments[0]: keyboards.grand-piano
definitions.ScoreDetails.example.instruments[1]: woodwinds.oboe
definitions.ScoreDetails.example.instruments[2]: woodwinds.clarinet
definitions.ScoreDetails.example.likes.monthly: 0
definitions.ScoreDetails.example.likes.total: 0
definitions.ScoreDetails.example.likes.weekly: 0
definitions.ScoreDetails.example.modificationDate: 2017-01-26T20:29:10.622Z
definitions.ScoreDetails.example.organization: "000000000000000000000030"
definitions.ScoreDetails.example.parentScore: "000000000000000000000040"
definitions.ScoreDetails.example.privacy: private
definitions.ScoreDetails.example.rights.aclAdmin: true
definitions.ScoreDetails.example.rights.aclRead: true
definitions.ScoreDetails.example.rights.aclWrite: true
definitions.ScoreDetails.example.title: My score
definitions.ScoreDetails.example.user.id: "000000000000000000000001"
definitions.ScoreDetails.example.user.name: Flat Team
definitions.ScoreDetails.example.user.picture: https://flat.io/img/logo_flat.svg
definitions.ScoreDetails.example.user.printableName: Flat Team
definitions.ScoreDetails.example.user.username: flat
definitions.ScoreDetails.example.views.monthly: 0
definitions.ScoreDetails.example.views.total: 0
definitions.ScoreDetails.example.views.weekly: 0
definitions.ScoreDetails.type: object
definitions.ScoreFork.description: Options to fork the score
definitions.ScoreFork.type: object
definitions.ScoreLikesCounts.description: |
  A computed version of the weekly, monthly and total of number of likes
  for a score
definitions.ScoreLikesCounts.example.monthly: 30
definitions.ScoreLikesCounts.example.total: 42
definitions.ScoreLikesCounts.example.weekly: 10
definitions.ScoreLikesCounts.properties.monthly.description: The number of new likes
  during the last month
definitions.ScoreLikesCounts.properties.monthly.type: number
definitions.ScoreLikesCounts.properties.total.description: The total number of likes
  of the score
definitions.ScoreLikesCounts.properties.total.type: number
definitions.ScoreLikesCounts.properties.weekly.description: The number of new likes
  during the last week
definitions.ScoreLikesCounts.properties.weekly.type: number
definitions.ScoreLikesCounts.type: object
definitions.ScoreModification.description: Edit the score metadata
definitions.ScoreModification.example.privacy: private
definitions.ScoreModification.example.title: Edited title
definitions.ScoreModification.properties.privacy.$ref: '#/definitions/ScorePrivacy'
definitions.ScoreModification.properties.sharingKey.description: When using the `privacy`
  mode `privateLink`, this property can be used to set a custom sharing key, otherwise
  a new key will be generated.
definitions.ScoreModification.properties.sharingKey.pattern: ^[a-f0-9]{128}$
definitions.ScoreModification.properties.sharingKey.type: string
definitions.ScoreModification.properties.title.description: A new title of the score
definitions.ScoreModification.properties.title.type: string
definitions.ScoreModification.type: object
definitions.ScorePrivacy.description: |
  The score main privacy mode.

  - `public`: The score is public on the Internet. This one can be accessible at the url `https://flat.io/score/{score}` and can be modified and administred by specified collaborators users.
  - `private`: The score is private and can be only accessed, modified and administred by specified collaborators users.
  - `privateLink`: The score is private but can be accessed using a private link `htmlUrl` or the private key in the property `sharingKey`.
  - `organizationPublic`: _Available only with [Flat for Education](https://flat.io/edu)._ The score is public in the organization: users of the same organization can access to this one. The score can be modified and administred by specified collaborators users.

  The score can also be individually shared to a set of users or groups using the different collaborators API methods.

  When a file is synchronized from an external source (e.g. Google Drive) and the sharing options are changed on the source, Flat will chose the best privacy mode for the file.

  When using a [Flat for Education](https://flat.io/edu) account, some of the modes may not be available if disabled by an administrator of the organization (e.g. by default the `public` mode is not available).
definitions.ScorePrivacy.enum.length: 4
definitions.ScorePrivacy.enum[0]: public
definitions.ScorePrivacy.enum[1]: private
definitions.ScorePrivacy.enum[2]: organizationPublic
definitions.ScorePrivacy.enum[3]: privateLink
definitions.ScorePrivacy.type: string
definitions.ScoreRevision.description: A score revision metadata
definitions.ScoreRevision.example.autosave: true
definitions.ScoreRevision.example.collaborators.length: 2
definitions.ScoreRevision.example.collaborators[0]: "000000000000000000000010"
definitions.ScoreRevision.example.collaborators[1]: "000000000000000000000020"
definitions.ScoreRevision.example.creationDate: 2017-01-26T20:29:10.622Z
definitions.ScoreRevision.example.description: New revision
definitions.ScoreRevision.example.user: "000000000000000000000020"
definitions.ScoreRevision.properties.autosave.description: |
  True if this revision was automatically generated by Flat and not on
  purpose by the user.
definitions.ScoreRevision.properties.autosave.type: boolean
definitions.ScoreRevision.properties.collaborators.items.description: |
  The list of user identifier or collaborators who worked on this
  revision. This is list is built from the history of the revision
  specified during the creation of the revision.
definitions.ScoreRevision.properties.collaborators.items.type: string
definitions.ScoreRevision.properties.collaborators.type: array
definitions.ScoreRevision.properties.creationDate.description: The date when this
  revision was created
definitions.ScoreRevision.properties.creationDate.format: date-time
definitions.ScoreRevision.properties.creationDate.type: string
definitions.ScoreRevision.properties.description.description: A description associated
  to the revision
definitions.ScoreRevision.properties.description.type: string
definitions.ScoreRevision.properties.id.description: The unique identifier of the
  revision.
definitions.ScoreRevision.properties.id.type: string
definitions.ScoreRevision.properties.statistics.$ref: '#/definitions/ScoreRevisionStatistics'
definitions.ScoreRevision.properties.user.description: The user identifier who created
  the revision
definitions.ScoreRevision.properties.user.type: string
definitions.ScoreRevision.type: object
definitions.ScoreRevisionCreation.description: A new created revision
definitions.ScoreRevisionCreation.example.autosave: true
definitions.ScoreRevisionCreation.example.data: <score-partwise version="3.0"></score-partwise>
definitions.ScoreRevisionCreation.example.description: New revision
definitions.ScoreRevisionCreation.example.history.length: 1
definitions.ScoreRevisionCreation.example.history[0].args.measureUuid: 0be9f739-3213-f312-bb0a-00ad0c787ef7
definitions.ScoreRevisionCreation.example.history[0].args.previousUuid: 888cb742-2110-a050-ba71-28300ba6d61f
definitions.ScoreRevisionCreation.example.history[0].fnc: action.AddMeasure
definitions.ScoreRevisionCreation.example.history[0].id: "000000000000000000000090"
definitions.ScoreRevisionCreation.example.history[0].userId: "000000000000000000000010"
definitions.ScoreRevisionCreation.properties.autosave.description: |
  Must be set to `true` if the revision was created automatically.
definitions.ScoreRevisionCreation.properties.autosave.type: boolean
definitions.ScoreRevisionCreation.properties.data.$ref: '#/definitions/ScoreData'
definitions.ScoreRevisionCreation.properties.dataEncoding.$ref: '#/definitions/ScoreDataEncoding'
definitions.ScoreRevisionCreation.properties.description.description: A description
  associated to the revision
definitions.ScoreRevisionCreation.properties.description.type: string
definitions.ScoreRevisionCreation.required.length: 1
definitions.ScoreRevisionCreation.required[0]: data
definitions.ScoreRevisionCreation.type: object
definitions.ScoreRevisionStatistics.description: |
  The statistics related to the score revision (additions and deletions)
definitions.ScoreRevisionStatistics.example.additions: 24
definitions.ScoreRevisionStatistics.example.deletions: 5
definitions.ScoreRevisionStatistics.properties.additions.description: The number of
  additions operations in the last revision
definitions.ScoreRevisionStatistics.properties.additions.type: number
definitions.ScoreRevisionStatistics.properties.deletions.description: The number of
  deletions operations in the last revision
definitions.ScoreRevisionStatistics.properties.deletions.type: number
definitions.ScoreRevisionStatistics.type: object
definitions.ScoreRights.description: The rights of the current user on a score
definitions.ScoreRights.example.aclAdmin: true
definitions.ScoreRights.example.aclRead: true
definitions.ScoreRights.example.aclWrite: true
definitions.ScoreRights.properties.aclAdmin.default: false
definitions.ScoreRights.properties.aclAdmin.description: |
  `True` if the current user can manage the current document, i.e.
  changing the document permissions and deleting the document
definitions.ScoreRights.properties.aclAdmin.type: boolean
definitions.ScoreRights.properties.aclRead.description: |
  `True` if the current user can read the current document
definitions.ScoreRights.properties.aclWrite.default: false
definitions.ScoreRights.properties.aclWrite.description: |
  `True` if the current user can modify the current document
definitions.ScoreRights.properties.aclWrite.type: boolean
definitions.ScoreRights.type: object
definitions.ScoreSource.example.googleDrive: 0B-0000000000000001
definitions.ScoreSource.properties.googleDrive.description: |
  If the score is a file on Google Drive, this field property must contain its identifier. To use this method, the Drive file must be public or the Flat Drive App must have access to the file.
definitions.ScoreSource.properties.googleDrive.type: string
definitions.ScoreSource.type: object
definitions.ScoreSummary.description: A summary of the score details
definitions.ScoreSummary.example.htmlUrl: https://flat.io/score/000000000000000000000000
definitions.ScoreSummary.example.id: "000000000000000000000000"
definitions.ScoreSummary.example.privacy: private
definitions.ScoreSummary.example.title: My score
definitions.ScoreSummary.example.user.id: "000000000000000000000001"
definitions.ScoreSummary.example.user.name: Flat Team
definitions.ScoreSummary.example.user.picture: https://flat.io/img/logo_flat.svg
definitions.ScoreSummary.example.user.printableName: Flat Team
definitions.ScoreSummary.example.user.username: flat
definitions.ScoreSummary.properties.htmlUrl.description: The url where the score can
  be viewed in a web browser
definitions.ScoreSummary.properties.htmlUrl.format: url
definitions.ScoreSummary.properties.htmlUrl.type: string
definitions.ScoreSummary.properties.id.description: The unique identifier of the score
definitions.ScoreSummary.properties.id.type: string
definitions.ScoreSummary.properties.privacy.$ref: '#/definitions/ScorePrivacy'
definitions.ScoreSummary.properties.sharingKey.description: The private sharing key
  of the score (available when the `privacy` mode is set to `privateLink`)
definitions.ScoreSummary.properties.sharingKey.type: string
definitions.ScoreSummary.properties.title.description: The title of the score
definitions.ScoreSummary.properties.title.type: string
definitions.ScoreSummary.properties.user.$ref: '#/definitions/UserPublicSummary'
definitions.ScoreSummary.type: object
definitions.ScoreViewsCounts.description: |
  A computed version of the total, weekly, and monthly number of views of
  the score
definitions.ScoreViewsCounts.example.monthly: 30
definitions.ScoreViewsCounts.example.total: 42
definitions.ScoreViewsCounts.example.weekly: 10
definitions.ScoreViewsCounts.properties.monthly.description: The monthly number of
  views of the score
definitions.ScoreViewsCounts.properties.monthly.type: number
definitions.ScoreViewsCounts.properties.total.description: The total number of views
  of the score
definitions.ScoreViewsCounts.properties.total.type: number
definitions.ScoreViewsCounts.properties.weekly.description: The weekly number of views
  of the score
definitions.ScoreViewsCounts.properties.weekly.type: number
definitions.ScoreViewsCounts.type: object
definitions.UserAdminUpdate.description: User update as an organization admin
definitions.UserAdminUpdate.properties.organizationRole.$ref: '#/definitions/OrganizationRoles'
definitions.UserAdminUpdate.properties.password.description: Password of the new account
definitions.UserAdminUpdate.properties.password.format: password
definitions.UserAdminUpdate.properties.password.minLength: 6
definitions.UserAdminUpdate.properties.password.type: string
definitions.UserAdminUpdate.type: object
definitions.UserBasics.discriminator: userType
definitions.UserBasics.example.id: "000000000000000000000001"
definitions.UserBasics.example.isPowerUser: true
definitions.UserBasics.example.name: Flat Team
definitions.UserBasics.example.picture: https://flat.io/img/logo_flat.svg
definitions.UserBasics.example.printableName: Flat Team
definitions.UserBasics.example.username: flat
definitions.UserBasics.properties.id.description: The user unique identifier
definitions.UserBasics.properties.id.type: string
definitions.UserBasics.properties.isPowerUser.description: User license status. 'True'
  if user is an individual Power user
definitions.UserBasics.properties.isPowerUser.type: boolean
definitions.UserBasics.properties.name.description: A displayable name for the user
definitions.UserBasics.properties.name.type: string
definitions.UserBasics.properties.picture.description: User pictue
definitions.UserBasics.properties.picture.type: string
definitions.UserBasics.properties.printableName.description: The name that can be
  directly printed (name or username)
definitions.UserBasics.properties.printableName.type: string
definitions.UserBasics.properties.username.description: The user name (unique for
  the organization)
definitions.UserBasics.properties.username.type: string
definitions.UserBasics.type: object
definitions.UserCreation.description: User creation
definitions.UserCreation.properties.email.description: Email of the new account
definitions.UserCreation.properties.email.format: email
definitions.UserCreation.properties.email.type: string
definitions.UserCreation.properties.locale.$ref: '#/definitions/FlatLocales'
definitions.UserCreation.properties.password.description: Password of the new account
definitions.UserCreation.properties.password.format: password
definitions.UserCreation.properties.password.minLength: 6
definitions.UserCreation.properties.password.type: string
definitions.UserCreation.properties.username.description: Username of the new account
definitions.UserCreation.properties.username.pattern: ^[A-Za-z0-9-_.]+$
definitions.UserCreation.properties.username.type: string
definitions.UserCreation.required.length: 2
definitions.UserCreation.required[0]: username
definitions.UserCreation.required[1]: password
definitions.UserCreation.type: object
definitions.UserDetails.allOf.length: 2
definitions.UserDetails.allOf[0].$ref: '#/definitions/UserPublic'
definitions.UserDetails.allOf[1].properties.id.description: Identifier of the user
definitions.UserDetails.allOf[1].properties.id.type: string
definitions.UserDetails.allOf[1].properties.locale.$ref: '#/definitions/FlatLocales'
definitions.UserDetails.allOf[1].properties.privateProfile.description: Tell either
  this user profile is private or not (individual accounts only)
definitions.UserDetails.allOf[1].properties.privateProfile.type: boolean
definitions.UserDetails.allOf[1].properties.type.description: The type of account
definitions.UserDetails.allOf[1].properties.type.enum.length: 2
definitions.UserDetails.allOf[1].properties.type.enum[0]: user
definitions.UserDetails.allOf[1].properties.type.enum[1]: guest
definitions.UserDetails.allOf[1].properties.type.type: string
definitions.UserDetails.allOf[1].type: object
definitions.UserDetails.description: User details
definitions.UserDetails.type: object
definitions.UserDetailsAdmin.allOf.length: 2
definitions.UserDetailsAdmin.allOf[0].$ref: '#/definitions/UserPublicSummary'
definitions.UserDetailsAdmin.allOf[1].properties.email.description: Email of the user
definitions.UserDetailsAdmin.allOf[1].properties.email.format: email
definitions.UserDetailsAdmin.allOf[1].properties.email.type: string
definitions.UserDetailsAdmin.allOf[1].properties.lastActivityDate.description: Date
  of the last user activity
definitions.UserDetailsAdmin.allOf[1].properties.lastActivityDate.format: date-time
definitions.UserDetailsAdmin.allOf[1].properties.lastActivityDate.type: string
definitions.UserDetailsAdmin.allOf[1].properties.license.description: Current active
  license of the user
definitions.UserDetailsAdmin.allOf[1].properties.license.properties.active.description: ID
  of the current license
definitions.UserDetailsAdmin.allOf[1].properties.license.properties.active.type: boolean
definitions.UserDetailsAdmin.allOf[1].properties.license.properties.expirationDate.description: Date
  when the license expires
definitions.UserDetailsAdmin.allOf[1].properties.license.properties.expirationDate.format: date-time
definitions.UserDetailsAdmin.allOf[1].properties.license.properties.expirationDate.type: string
definitions.UserDetailsAdmin.allOf[1].properties.license.properties.id.description: ID
  of the current license
definitions.UserDetailsAdmin.allOf[1].properties.license.properties.id.type: string
definitions.UserDetailsAdmin.allOf[1].properties.license.properties.mode.$ref: '#/definitions/LicenseMode'
definitions.UserDetailsAdmin.allOf[1].properties.license.properties.source.$ref: '#/definitions/LicenseSources'
definitions.UserDetailsAdmin.allOf[1].properties.license.type: object
definitions.UserDetailsAdmin.allOf[1].type: object
definitions.UserDetailsAdmin.description: User details (view for organization teacher
  / admin)
definitions.UserInstruments.description: |
  An array of the instrument identifiers that the user plays.
  This is mainly used to display a list of the instruments in the Flat's UI or instruments icons.
  The format of the strings is `{instrument-group}.{instrument-id}`.
definitions.UserInstruments.example.length: 3
definitions.UserInstruments.example[0]: keyboards.grand-piano
definitions.UserInstruments.example[1]: brass.trumpet
definitions.UserInstruments.example[2]: strings.violin
definitions.UserInstruments.items.pattern: ^[a-z-]+\.[a-z-]+$
definitions.UserInstruments.items.type: string
definitions.UserInstruments.type: array
definitions.UserPublic.allOf.length: 2
definitions.UserPublic.allOf[0].$ref: '#/definitions/UserPublicSummary'
definitions.UserPublic.allOf[1].properties.bio.description: User's biography
definitions.UserPublic.allOf[1].properties.bio.type: string
definitions.UserPublic.allOf[1].properties.followersCount.description: Number of followers
  the user have
definitions.UserPublic.allOf[1].properties.followersCount.type: integer
definitions.UserPublic.allOf[1].properties.followingCount.description: Number of people
  the user follow
definitions.UserPublic.allOf[1].properties.followingCount.type: integer
definitions.UserPublic.allOf[1].properties.instruments.$ref: '#/definitions/UserInstruments'
definitions.UserPublic.allOf[1].properties.likedScoresCount.description: Number of
  the scores liked by the user
definitions.UserPublic.allOf[1].properties.likedScoresCount.type: integer
definitions.UserPublic.allOf[1].properties.ownedPublicScoresCount.description: Number
  of public scores the user have
definitions.UserPublic.allOf[1].properties.ownedPublicScoresCount.type: integer
definitions.UserPublic.allOf[1].properties.profileTheme.description: Theme (background)
  for the profile
definitions.UserPublic.allOf[1].properties.profileTheme.type: string
definitions.UserPublic.allOf[1].properties.registrationDate.description: Date the
  user signed up
definitions.UserPublic.allOf[1].properties.registrationDate.format: date-time
definitions.UserPublic.allOf[1].properties.registrationDate.type: string
definitions.UserPublic.allOf[1].type: object
definitions.UserPublic.description: Public User details
definitions.UserPublic.example.bio: The Flat Team
definitions.UserPublic.example.classRole: teacher
definitions.UserPublic.example.followersCount: 4242
definitions.UserPublic.example.followingCount: 0
definitions.UserPublic.example.htmlUrl: https://flat.io/flat
definitions.UserPublic.example.id: "000000000000000000000001"
definitions.UserPublic.example.instruments.length: 2
definitions.UserPublic.example.instruments[0]: woodwinds.flute
definitions.UserPublic.example.instruments[1]: woodwinds.clarinet
definitions.UserPublic.example.isPowerUser: true
definitions.UserPublic.example.likedScoresCount: 1
definitions.UserPublic.example.name: Flat Team
definitions.UserPublic.example.organization: "0000000000000000000000042"
definitions.UserPublic.example.organizationRole: admin
definitions.UserPublic.example.ownedPublicScoresCount: 10
definitions.UserPublic.example.picture: https://flat.io/img/logo_flat.svg
definitions.UserPublic.example.printableName: Flat Team
definitions.UserPublic.example.profileTheme: blue-8
definitions.UserPublic.example.registrationDate: 2015-01-19T00:22:02.387Z
definitions.UserPublic.example.username: flat
definitions.UserPublicSummary.allOf.length: 2
definitions.UserPublicSummary.allOf[0].$ref: '#/definitions/UserBasics'
definitions.UserPublicSummary.allOf[1].properties.classRole.$ref: '#/definitions/ClassRoles'
definitions.UserPublicSummary.allOf[1].properties.htmlUrl.description: Link to user
  profile (for Indiv. users only)
definitions.UserPublicSummary.allOf[1].properties.htmlUrl.type: string
definitions.UserPublicSummary.allOf[1].properties.organization.description: Organization
  ID (for Edu users only)
definitions.UserPublicSummary.allOf[1].properties.organization.type: string
definitions.UserPublicSummary.allOf[1].properties.organizationRole.$ref: '#/definitions/OrganizationRoles'
definitions.UserPublicSummary.allOf[1].type: object
definitions.UserPublicSummary.description: Public User details summary
definitions.UserPublicSummary.example.classRole: teacher
definitions.UserPublicSummary.example.htmlUrl: https://flat.io/flat
definitions.UserPublicSummary.example.id: "000000000000000000000001"
definitions.UserPublicSummary.example.isPowerUser: true
definitions.UserPublicSummary.example.name: Flat Team
definitions.UserPublicSummary.example.organization: "0000000000000000000000042"
definitions.UserPublicSummary.example.organizationRole: admin
definitions.UserPublicSummary.example.picture: https://flat.io/img/logo_flat.svg
definitions.UserPublicSummary.example.printableName: Flat Team
definitions.UserPublicSummary.example.username: flat
host: api.flat.io
info.contact.email: developers@flat.io
info.contact.name: Flat
info.contact.url: https://flat.io/developers/docs/api/
info.description: |
  The Flat API allows you to easily extend the abilities of the [Flat Platform](https://flat.io), with a wide range of use cases including the following:

  * Creating and importing new music scores using MusicXML or MIDI files
  * Browsing, updating, copying, exporting the user's scores (for example in MP3, WAV or MIDI)
  * Managing educational resources with Flat for Education: creating & updating the organization accounts, the classes, rosters and assignments.

  The Flat API is built on HTTP. Our API is RESTful It has predictable resource URLs. It returns HTTP response codes to indicate errors. It also accepts and returns JSON in the HTTP body.
  The [schema](/swagger.yaml) of this API follows the [OpenAPI Initiative (OAI) specification](https://www.openapis.org/), you can use and work with [compatible Swagger tools](http://swagger.io/open-source-integrations/).
  This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with [W3C spec](https://www.w3.org/TR/cors/).

  You can use your favorite HTTP/REST library for your programming language to use Flat's API. This specification and reference is [available on Github](https://github.com/FlatIO/api-reference).

  Getting Started and learn more:

  * [API Overview and interoduction](https://flat.io/developers/docs/api/)
  * [Authentication (Personal Access Tokens or OAuth2)](https://flat.io/developers/docs/api/authentication.html)
  * [SDKs](https://flat.io/developers/docs/api/sdks.html)
  * [Rate Limits](https://flat.io/developers/docs/api/rate-limits.html)
  * [Changelog](https://flat.io/developers/docs/api/changelog.html)
info.termsOfService: https://flat.io/legal
info.title: Flat
info.version: 2.3.0
info.x-apisguru-categories.length: 2
info.x-apisguru-categories[0]: media
info.x-apisguru-categories[1]: collaboration
info.x-logo.url: https://api.apis.guru/v2/cache/logo/https_flat.io_img_logo-flat.svg
info.x-origin.length: 1
info.x-origin[0].format: swagger
info.x-origin[0].url: https://raw.githubusercontent.com/FlatIO/api-reference/master/spec/swagger.yaml
info.x-origin[0].version: "2.0"
info.x-preferred: true
info.x-providerName: flat.io
parameters.group.description: |
  Unique identifier of a Flat group
parameters.group.in: path
parameters.group.name: group
parameters.group.required: true
parameters.group.type: string
parameters.limit.default: 50
parameters.limit.description: This is the maximum number of objects that may be returned
parameters.limit.in: query
parameters.limit.maximum: 1000
parameters.limit.minimum: 1
parameters.limit.name: limit
parameters.limit.type: integer
parameters.next.description: |
  An opaque string cursor to fetch the next page of data.
  The paginated API URLs are returned in the `Link` header when requesting the API. These URLs will contain a `next` and `previous` cursor based on the available data.
parameters.next.in: query
parameters.next.name: next
parameters.next.type: string
parameters.organizationUser.description: |
  Unique identifier of the Flat account
parameters.organizationUser.in: path
parameters.organizationUser.name: user
parameters.organizationUser.required: true
parameters.organizationUser.type: string
parameters.previous.description: |
  An opaque string cursor to fetch the previous page of data.
  The paginated API URLs are returned in the `Link` header when requesting the API. These URLs will contain a `next` and `previous` cursor based on the available data.
parameters.previous.in: query
parameters.previous.name: previous
parameters.previous.type: string
parameters.score.description: |
  Unique identifier of the score document. This can be a Flat Score unique identifier (i.e. `ScoreDetails.id`) or, if the score is also a Google Drive file, the Drive file unique identifier prefixed with `drive-` (e.g. `drive-0B000000000`).
parameters.score.in: path
parameters.score.name: score
parameters.score.required: true
parameters.score.type: string
parameters.scoreCollaborator.description: |
  Unique identifier of a **collaborator permission**, or unique identifier of a **User**, or unique identifier of a **Group**
parameters.scoreCollaborator.in: path
parameters.scoreCollaborator.name: collaborator
parameters.scoreCollaborator.required: true
parameters.scoreCollaborator.type: string
parameters.scoreComment.description: |
  Unique identifier of a sheet music comment
parameters.scoreComment.in: path
parameters.scoreComment.name: comment
parameters.scoreComment.required: true
parameters.scoreComment.type: string
parameters.scoreRevision.description: |
  Unique identifier of a score revision. You can use `last` to fetch the information related to the last version created.
parameters.scoreRevision.in: path
parameters.scoreRevision.name: revision
parameters.scoreRevision.required: true
parameters.scoreRevision.type: string
parameters.scoreSharingKey.description: |
  This sharing key must be specified to access to a score with a `privacy` mode set to `privateLink` and the current user is not a collaborator of the document.
parameters.scoreSharingKey.in: query
parameters.scoreSharingKey.name: sharingKey
parameters.scoreSharingKey.type: string
parameters.user.description: |
  Unique identifier of a Flat user. If you authenticated, you can use `me` to refer to the current user.
parameters.user.in: path
parameters.user.name: user
parameters.user.required: true
parameters.user.type: string
paths./classes.get.operationId: listClasses
paths./classes.get.parameters.length: 1
paths./classes.get.parameters[0].default: active
paths./classes.get.parameters[0].description: Filter the classes by state
paths./classes.get.parameters[0].enum.length: 3
paths./classes.get.parameters[0].enum[0]: active
paths./classes.get.parameters[0].enum[1]: inactive
paths./classes.get.parameters[0].enum[2]: archived
paths./classes.get.parameters[0].in: query
paths./classes.get.parameters[0].name: state
paths./classes.get.parameters[0].type: string
paths./classes.get.responses.200.description: The list of classes
paths./classes.get.responses.200.schema.items.$ref: '#/definitions/ClassDetails'
paths./classes.get.responses.200.schema.type: array
paths./classes.get.responses.default.description: Error
paths./classes.get.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./classes.get.security.length: 1
paths./classes.get.security[0].OAuth2.length: 2
paths./classes.get.security[0].OAuth2[0]: edu.classes
paths./classes.get.security[0].OAuth2[1]: edu.classes.readonly
paths./classes.get.summary: List the classes available for the current user
paths./classes.get.tags.length: 1
paths./classes.get.tags[0]: Class
paths./classes.post.description: |
  Classrooms on Flat allow you to create activities with assignments and post content to a specific group.

  When creating a class, Flat automatically creates two groups: one for the teachers of the course, one for the students. The creator of this class is automatically added to the teachers group.

  If the classsroom is synchronized with another application like Google Classroom, some of the meta information will automatically be updated.

  You can add users to this class using `POST /classes/{class}/users/{user}`, they will automatically added to the group based on their role on Flat. Users can also enroll themselves to this class using `POST /classes/enroll/{enrollmentCode}` and the `enrollmentCode` returned in the `ClassDetails` response.
paths./classes.post.operationId: createClass
paths./classes.post.parameters.length: 1
paths./classes.post.parameters[0].in: body
paths./classes.post.parameters[0].name: body
paths./classes.post.parameters[0].required: true
paths./classes.post.parameters[0].schema.$ref: '#/definitions/ClassCreation'
paths./classes.post.responses.200.description: The new class details
paths./classes.post.responses.200.schema.$ref: '#/definitions/ClassDetails'
paths./classes.post.responses.402.description: Account overquota
paths./classes.post.responses.402.schema.$ref: '#/definitions/FlatErrorResponse'
paths./classes.post.responses.default.description: Error
paths./classes.post.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./classes.post.security.length: 1
paths./classes.post.security[0].OAuth2.length: 1
paths./classes.post.security[0].OAuth2[0]: edu.classes
paths./classes.post.summary: Create a new class
paths./classes.post.tags.length: 1
paths./classes.post.tags[0]: Class
paths./classes/{class}.get.operationId: getClass
paths./classes/{class}.get.parameters.length: 1
paths./classes/{class}.get.parameters[0].description: Unique identifier of the class
paths./classes/{class}.get.parameters[0].in: path
paths./classes/{class}.get.parameters[0].name: class
paths./classes/{class}.get.parameters[0].required: true
paths./classes/{class}.get.parameters[0].type: string
paths./classes/{class}.get.responses.200.description: The new class details
paths./classes/{class}.get.responses.200.schema.$ref: '#/definitions/ClassDetails'
paths./classes/{class}.get.responses.default.description: Error
paths./classes/{class}.get.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./classes/{class}.get.security.length: 1
paths./classes/{class}.get.security[0].OAuth2.length: 2
paths./classes/{class}.get.security[0].OAuth2[0]: edu.classes
paths./classes/{class}.get.security[0].OAuth2[1]: edu.classes.readonly
paths./classes/{class}.get.summary: Get the details of a single class
paths./classes/{class}.get.tags.length: 1
paths./classes/{class}.get.tags[0]: Class
paths./classes/{class}.put.description: |
  Update the meta information of the class
paths./classes/{class}.put.operationId: updateClass
paths./classes/{class}.put.parameters.length: 2
paths./classes/{class}.put.parameters[0].description: Unique identifier of the class
paths./classes/{class}.put.parameters[0].in: path
paths./classes/{class}.put.parameters[0].name: class
paths./classes/{class}.put.parameters[0].required: true
paths./classes/{class}.put.parameters[0].type: string
paths./classes/{class}.put.parameters[1].description: Details of the Class
paths./classes/{class}.put.parameters[1].in: body
paths./classes/{class}.put.parameters[1].name: body
paths./classes/{class}.put.parameters[1].schema.$ref: '#/definitions/ClassUpdate'
paths./classes/{class}.put.responses.200.description: The new class details
paths./classes/{class}.put.responses.200.schema.$ref: '#/definitions/ClassDetails'
paths./classes/{class}.put.responses.default.description: Error
paths./classes/{class}.put.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./classes/{class}.put.security.length: 1
paths./classes/{class}.put.security[0].OAuth2.length: 1
paths./classes/{class}.put.security[0].OAuth2[0]: edu.classes
paths./classes/{class}.put.summary: Update the class
paths./classes/{class}.put.tags.length: 1
paths./classes/{class}.put.tags[0]: Class
paths./classes/{class}/activate.post.description: |
  Mark the class as `active`. This is mainly used for classes synchronized from Clever that are initially with an `inactive` state and hidden in the UI.
paths./classes/{class}/activate.post.operationId: activateClass
paths./classes/{class}/activate.post.parameters.length: 1
paths./classes/{class}/activate.post.parameters[0].description: Unique identifier
  of the class
paths./classes/{class}/activate.post.parameters[0].in: path
paths./classes/{class}/activate.post.parameters[0].name: class
paths./classes/{class}/activate.post.parameters[0].required: true
paths./classes/{class}/activate.post.parameters[0].type: string
paths./classes/{class}/activate.post.responses.200.description: The class details
paths./classes/{class}/activate.post.responses.200.schema.$ref: '#/definitions/ClassDetails'
paths./classes/{class}/activate.post.responses.default.description: Error
paths./classes/{class}/activate.post.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./classes/{class}/activate.post.security.length: 1
paths./classes/{class}/activate.post.security[0].OAuth2.length: 1
paths./classes/{class}/activate.post.security[0].OAuth2[0]: edu.classes
paths./classes/{class}/activate.post.summary: Activate the class
paths./classes/{class}/activate.post.tags.length: 1
paths./classes/{class}/activate.post.tags[0]: Class
paths./classes/{class}/archive.delete.description: |
  Mark the class as `active`. When this course is synchronized with another app, like Google Classroom, this state will be automatically be updated.
paths./classes/{class}/archive.delete.operationId: unarchiveClass
paths./classes/{class}/archive.delete.parameters.length: 1
paths./classes/{class}/archive.delete.parameters[0].description: Unique identifier
  of the class
paths./classes/{class}/archive.delete.parameters[0].in: path
paths./classes/{class}/archive.delete.parameters[0].name: class
paths./classes/{class}/archive.delete.parameters[0].required: true
paths./classes/{class}/archive.delete.parameters[0].type: string
paths./classes/{class}/archive.delete.responses.200.description: The class details
paths./classes/{class}/archive.delete.responses.200.schema.$ref: '#/definitions/ClassDetails'
paths./classes/{class}/archive.delete.responses.default.description: Error
paths./classes/{class}/archive.delete.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./classes/{class}/archive.delete.security.length: 1
paths./classes/{class}/archive.delete.security[0].OAuth2.length: 1
paths./classes/{class}/archive.delete.security[0].OAuth2[0]: edu.classes
paths./classes/{class}/archive.delete.summary: Unarchive the class
paths./classes/{class}/archive.delete.tags.length: 1
paths./classes/{class}/archive.delete.tags[0]: Class
paths./classes/{class}/archive.post.description: |
  Mark the class as `archived`. When this course is synchronized with another app, like Google Classroom, this state will be automatically be updated.
paths./classes/{class}/archive.post.operationId: archiveClass
paths./classes/{class}/archive.post.parameters.length: 1
paths./classes/{class}/archive.post.parameters[0].description: Unique identifier of
  the class
paths./classes/{class}/archive.post.parameters[0].in: path
paths./classes/{class}/archive.post.parameters[0].name: class
paths./classes/{class}/archive.post.parameters[0].required: true
paths./classes/{class}/archive.post.parameters[0].type: string
paths./classes/{class}/archive.post.responses.200.description: The class details
paths./classes/{class}/archive.post.responses.200.schema.$ref: '#/definitions/ClassDetails'
paths./classes/{class}/archive.post.responses.default.description: Error
paths./classes/{class}/archive.post.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./classes/{class}/archive.post.security.length: 1
paths./classes/{class}/archive.post.security[0].OAuth2.length: 1
paths./classes/{class}/archive.post.security[0].OAuth2[0]: edu.classes
paths./classes/{class}/archive.post.summary: Archive the class
paths./classes/{class}/archive.post.tags.length: 1
paths./classes/{class}/archive.post.tags[0]: Class
paths./classes/{class}/assignments.get.operationId: listAssignments
paths./classes/{class}/assignments.get.parameters.length: 1
paths./classes/{class}/assignments.get.parameters[0].description: Unique identifier
  of the class
paths./classes/{class}/assignments.get.parameters[0].in: path
paths./classes/{class}/assignments.get.parameters[0].name: class
paths./classes/{class}/assignments.get.parameters[0].required: true
paths./classes/{class}/assignments.get.parameters[0].type: string
paths./classes/{class}/assignments.get.responses.200.description: List of assignments
  for the class
paths./classes/{class}/assignments.get.responses.200.schema.items.$ref: '#/definitions/Assignment'
paths./classes/{class}/assignments.get.responses.200.schema.type: array
paths./classes/{class}/assignments.get.responses.default.description: Error
paths./classes/{class}/assignments.get.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./classes/{class}/assignments.get.security.length: 1
paths./classes/{class}/assignments.get.security[0].OAuth2.length: 4
paths./classes/{class}/assignments.get.security[0].OAuth2[0]: edu.classes
paths./classes/{class}/assignments.get.security[0].OAuth2[1]: edu.classes.readonly
paths./classes/{class}/assignments.get.security[0].OAuth2[2]: edu.assignments
paths./classes/{class}/assignments.get.security[0].OAuth2[3]: edu.assignments.readonly
paths./classes/{class}/assignments.get.summary: Assignments listing
paths./classes/{class}/assignments.get.tags.length: 1
paths./classes/{class}/assignments.get.tags[0]: Class
paths./classes/{class}/assignments.post.description: |
  Use this method as a teacher to create and post a new assignment to a class.

  If the class is synchronized with Google Classroom, the assignment will be automatically posted to your Classroom course.
paths./classes/{class}/assignments.post.operationId: createAssignment
paths./classes/{class}/assignments.post.parameters.length: 2
paths./classes/{class}/assignments.post.parameters[0].description: Unique identifier
  of the class
paths./classes/{class}/assignments.post.parameters[0].in: path
paths./classes/{class}/assignments.post.parameters[0].name: class
paths./classes/{class}/assignments.post.parameters[0].required: true
paths./classes/{class}/assignments.post.parameters[0].type: string
paths./classes/{class}/assignments.post.parameters[1].in: body
paths./classes/{class}/assignments.post.parameters[1].name: body
paths./classes/{class}/assignments.post.parameters[1].schema.$ref: '#/definitions/AssignmentCreation'
paths./classes/{class}/assignments.post.responses.200.description: The assignment
  has been created
paths./classes/{class}/assignments.post.responses.200.schema.$ref: '#/definitions/Assignment'
paths./classes/{class}/assignments.post.responses.default.description: Error
paths./classes/{class}/assignments.post.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./classes/{class}/assignments.post.security.length: 1
paths./classes/{class}/assignments.post.security[0].OAuth2.length: 2
paths./classes/{class}/assignments.post.security[0].OAuth2[0]: edu.classes
paths./classes/{class}/assignments.post.security[0].OAuth2[1]: edu.assignments
paths./classes/{class}/assignments.post.summary: Assignment creation
paths./classes/{class}/assignments.post.tags.length: 1
paths./classes/{class}/assignments.post.tags[0]: Class
paths./classes/{class}/assignments/{assignment}/copy.post.description: |
  Copy an assignment to a specified class.

  If the original assignment has a due date in the past, this new assingment will be created without a due date.

  If the new class is synchronized with an external app (e.g. Google Classroom), the copied assignment will also be posted on the external app.
paths./classes/{class}/assignments/{assignment}/copy.post.operationId: copyAssignment
paths./classes/{class}/assignments/{assignment}/copy.post.parameters.length: 3
paths./classes/{class}/assignments/{assignment}/copy.post.parameters[0].description: Unique
  identifier of the class
paths./classes/{class}/assignments/{assignment}/copy.post.parameters[0].in: path
paths./classes/{class}/assignments/{assignment}/copy.post.parameters[0].name: class
paths./classes/{class}/assignments/{assignment}/copy.post.parameters[0].required: true
paths./classes/{class}/assignments/{assignment}/copy.post.parameters[0].type: string
paths./classes/{class}/assignments/{assignment}/copy.post.parameters[1].description: Unique
  identifier of the assignment
paths./classes/{class}/assignments/{assignment}/copy.post.parameters[1].in: path
paths./classes/{class}/assignments/{assignment}/copy.post.parameters[1].name: assignment
paths./classes/{class}/assignments/{assignment}/copy.post.parameters[1].required: true
paths./classes/{class}/assignments/{assignment}/copy.post.parameters[1].type: string
paths./classes/{class}/assignments/{assignment}/copy.post.parameters[2].in: body
paths./classes/{class}/assignments/{assignment}/copy.post.parameters[2].name: body
paths./classes/{class}/assignments/{assignment}/copy.post.parameters[2].required: true
paths./classes/{class}/assignments/{assignment}/copy.post.parameters[2].schema.$ref: '#/definitions/AssignmentCopy'
paths./classes/{class}/assignments/{assignment}/copy.post.responses.200.description: The
  new created assingment
paths./classes/{class}/assignments/{assignment}/copy.post.responses.200.schema.$ref: '#/definitions/Assignment'
paths./classes/{class}/assignments/{assignment}/copy.post.responses.default.description: Error
paths./classes/{class}/assignments/{assignment}/copy.post.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./classes/{class}/assignments/{assignment}/copy.post.security.length: 1
paths./classes/{class}/assignments/{assignment}/copy.post.security[0].OAuth2.length: 2
paths./classes/{class}/assignments/{assignment}/copy.post.security[0].OAuth2[0]: edu.classes
paths./classes/{class}/assignments/{assignment}/copy.post.security[0].OAuth2[1]: edu.assignments
paths./classes/{class}/assignments/{assignment}/copy.post.summary: Copy an assignment
paths./classes/{class}/assignments/{assignment}/copy.post.tags.length: 1
paths./classes/{class}/assignments/{assignment}/copy.post.tags[0]: Class
paths./classes/{class}/assignments/{assignment}/submissions.get.operationId: getSubmissions
paths./classes/{class}/assignments/{assignment}/submissions.get.parameters.length: 2
paths./classes/{class}/assignments/{assignment}/submissions.get.parameters[0].description: Unique
  identifier of the class
paths./classes/{class}/assignments/{assignment}/submissions.get.parameters[0].in: path
paths./classes/{class}/assignments/{assignment}/submissions.get.parameters[0].name: class
paths./classes/{class}/assignments/{assignment}/submissions.get.parameters[0].required: true
paths./classes/{class}/assignments/{assignment}/submissions.get.parameters[0].type: string
paths./classes/{class}/assignments/{assignment}/submissions.get.parameters[1].description: Unique
  identifier of the assignment
paths./classes/{class}/assignments/{assignment}/submissions.get.parameters[1].in: path
paths./classes/{class}/assignments/{assignment}/submissions.get.parameters[1].name: assignment
paths./classes/{class}/assignments/{assignment}/submissions.get.parameters[1].required: true
paths./classes/{class}/assignments/{assignment}/submissions.get.parameters[1].type: string
paths./classes/{class}/assignments/{assignment}/submissions.get.responses.200.description: The
  submissions
paths./classes/{class}/assignments/{assignment}/submissions.get.responses.200.schema.items.$ref: '#/definitions/AssignmentSubmission'
paths./classes/{class}/assignments/{assignment}/submissions.get.responses.200.schema.type: array
paths./classes/{class}/assignments/{assignment}/submissions.get.responses.default.description: Error
paths./classes/{class}/assignments/{assignment}/submissions.get.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./classes/{class}/assignments/{assignment}/submissions.get.security.length: 1
paths./classes/{class}/assignments/{assignment}/submissions.get.security[0].OAuth2.length: 4
paths./classes/{class}/assignments/{assignment}/submissions.get.security[0].OAuth2[0]: edu.classes
paths./classes/{class}/assignments/{assignment}/submissions.get.security[0].OAuth2[1]: edu.classes.readonly
paths./classes/{class}/assignments/{assignment}/submissions.get.security[0].OAuth2[2]: edu.assignments
paths./classes/{class}/assignments/{assignment}/submissions.get.security[0].OAuth2[3]: edu.assignments.readonly
paths./classes/{class}/assignments/{assignment}/submissions.get.summary: List the
  students' submissions
paths./classes/{class}/assignments/{assignment}/submissions.get.tags.length: 1
paths./classes/{class}/assignments/{assignment}/submissions.get.tags[0]: Class
paths./classes/{class}/assignments/{assignment}/submissions.put.description: |
  Use this method as a student to create, update and submit a submission related to an assignment. Students can only set `attachments`, `studentComment` and `submit`.

  Teachers can use `PUT /classes/{class}/assignments/{assignment}/submissions/{submission}` to update a submission by id.
paths./classes/{class}/assignments/{assignment}/submissions.put.operationId: createSubmission
paths./classes/{class}/assignments/{assignment}/submissions.put.parameters.length: 3
paths./classes/{class}/assignments/{assignment}/submissions.put.parameters[0].description: Unique
  identifier of the class
paths./classes/{class}/assignments/{assignment}/submissions.put.parameters[0].in: path
paths./classes/{class}/assignments/{assignment}/submissions.put.parameters[0].name: class
paths./classes/{class}/assignments/{assignment}/submissions.put.parameters[0].required: true
paths./classes/{class}/assignments/{assignment}/submissions.put.parameters[0].type: string
paths./classes/{class}/assignments/{assignment}/submissions.put.parameters[1].description: Unique
  identifier of the assignment
paths./classes/{class}/assignments/{assignment}/submissions.put.parameters[1].in: path
paths./classes/{class}/assignments/{assignment}/submissions.put.parameters[1].name: assignment
paths./classes/{class}/assignments/{assignment}/submissions.put.parameters[1].required: true
paths./classes/{class}/assignments/{assignment}/submissions.put.parameters[1].type: string
paths./classes/{class}/assignments/{assignment}/submissions.put.parameters[2].in: body
paths./classes/{class}/assignments/{assignment}/submissions.put.parameters[2].name: body
paths./classes/{class}/assignments/{assignment}/submissions.put.parameters[2].required: true
paths./classes/{class}/assignments/{assignment}/submissions.put.parameters[2].schema.$ref: '#/definitions/AssignmentSubmissionUpdate'
paths./classes/{class}/assignments/{assignment}/submissions.put.responses.200.description: The
  submission
paths./classes/{class}/assignments/{assignment}/submissions.put.responses.200.schema.$ref: '#/definitions/AssignmentSubmission'
paths./classes/{class}/assignments/{assignment}/submissions.put.responses.default.description: Error
paths./classes/{class}/assignments/{assignment}/submissions.put.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./classes/{class}/assignments/{assignment}/submissions.put.security.length: 1
paths./classes/{class}/assignments/{assignment}/submissions.put.security[0].OAuth2.length: 2
paths./classes/{class}/assignments/{assignment}/submissions.put.security[0].OAuth2[0]: edu.classes
paths./classes/{class}/assignments/{assignment}/submissions.put.security[0].OAuth2[1]: edu.assignments
paths./classes/{class}/assignments/{assignment}/submissions.put.summary: Create or
  edit a submission
paths./classes/{class}/assignments/{assignment}/submissions.put.tags.length: 1
paths./classes/{class}/assignments/{assignment}/submissions.put.tags[0]: Class
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.get.operationId: getSubmission
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.get.parameters.length: 3
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.get.parameters[0].description: Unique
  identifier of the class
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.get.parameters[0].in: path
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.get.parameters[0].name: class
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.get.parameters[0].required: true
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.get.parameters[0].type: string
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.get.parameters[1].description: Unique
  identifier of the assignment
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.get.parameters[1].in: path
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.get.parameters[1].name: assignment
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.get.parameters[1].required: true
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.get.parameters[1].type: string
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.get.parameters[2].description: Unique
  identifier of the submission
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.get.parameters[2].in: path
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.get.parameters[2].name: submission
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.get.parameters[2].required: true
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.get.parameters[2].type: string
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.get.responses.200.description: A
  submission
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.get.responses.200.schema.$ref: '#/definitions/AssignmentSubmission'
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.get.responses.default.description: Error
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.get.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.get.security.length: 1
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.get.security[0].OAuth2.length: 4
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.get.security[0].OAuth2[0]: edu.classes
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.get.security[0].OAuth2[1]: edu.classes.readonly
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.get.security[0].OAuth2[2]: edu.assignments
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.get.security[0].OAuth2[3]: edu.assignments.readonly
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.get.summary: Get
  a student submission
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.get.tags.length: 1
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.get.tags[0]: Class
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.description: |
  Use this method as a teacher to update the different submission and give feedback.
  Teachers can only set `returnFeedback`
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.operationId: editSubmission
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.parameters.length: 4
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.parameters[0].description: Unique
  identifier of the class
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.parameters[0].in: path
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.parameters[0].name: class
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.parameters[0].required: true
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.parameters[0].type: string
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.parameters[1].description: Unique
  identifier of the assignment
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.parameters[1].in: path
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.parameters[1].name: assignment
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.parameters[1].required: true
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.parameters[1].type: string
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.parameters[2].description: Unique
  identifier of the submission
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.parameters[2].in: path
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.parameters[2].name: submission
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.parameters[2].required: true
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.parameters[2].type: string
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.parameters[3].in: body
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.parameters[3].name: body
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.parameters[3].required: true
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.parameters[3].schema.$ref: '#/definitions/AssignmentSubmissionUpdate'
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.responses.200.description: The
  submission
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.responses.200.schema.$ref: '#/definitions/AssignmentSubmission'
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.responses.default.description: Error
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.security.length: 1
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.security[0].OAuth2.length: 2
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.security[0].OAuth2[0]: edu.classes
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.security[0].OAuth2[1]: edu.assignments
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.summary: Edit
  a submission
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.tags.length: 1
paths./classes/{class}/assignments/{assignment}/submissions/{submission}.put.tags[0]: Class
paths./classes/{class}/students/{user}/submissions.get.description: |
  Use this method as a teacher to list all the assignment submissions sent by a student of the class
paths./classes/{class}/students/{user}/submissions.get.operationId: listClassStudentSubmissions
paths./classes/{class}/students/{user}/submissions.get.parameters.length: 2
paths./classes/{class}/students/{user}/submissions.get.parameters[0].description: Unique
  identifier of the class
paths./classes/{class}/students/{user}/submissions.get.parameters[0].in: path
paths./classes/{class}/students/{user}/submissions.get.parameters[0].name: class
paths./classes/{class}/students/{user}/submissions.get.parameters[0].required: true
paths./classes/{class}/students/{user}/submissions.get.parameters[0].type: string
paths./classes/{class}/students/{user}/submissions.get.parameters[1].description: Unique
  identifier of the user
paths./classes/{class}/students/{user}/submissions.get.parameters[1].in: path
paths./classes/{class}/students/{user}/submissions.get.parameters[1].name: user
paths./classes/{class}/students/{user}/submissions.get.parameters[1].required: true
paths./classes/{class}/students/{user}/submissions.get.parameters[1].type: string
paths./classes/{class}/students/{user}/submissions.get.responses.200.description: The
  list of submissions
paths./classes/{class}/students/{user}/submissions.get.responses.200.schema.items.$ref: '#/definitions/AssignmentSubmission'
paths./classes/{class}/students/{user}/submissions.get.responses.200.schema.type: array
paths./classes/{class}/students/{user}/submissions.get.responses.default.description: Error
paths./classes/{class}/students/{user}/submissions.get.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./classes/{class}/students/{user}/submissions.get.security.length: 1
paths./classes/{class}/students/{user}/submissions.get.security[0].OAuth2.length: 4
paths./classes/{class}/students/{user}/submissions.get.security[0].OAuth2[0]: edu.classes
paths./classes/{class}/students/{user}/submissions.get.security[0].OAuth2[1]: edu.classes.readonly
paths./classes/{class}/students/{user}/submissions.get.security[0].OAuth2[2]: edu.assignments
paths./classes/{class}/students/{user}/submissions.get.security[0].OAuth2[3]: edu.assignments.readonly
paths./classes/{class}/students/{user}/submissions.get.summary: List the submissions
  for a student
paths./classes/{class}/students/{user}/submissions.get.tags.length: 1
paths./classes/{class}/students/{user}/submissions.get.tags[0]: Class
paths./classes/{class}/users/{user}.delete.description: |
  This method can be used by a teacher to remove a user from the class, or by a student to leave the classroom.

  Warning: Removing a user from the class will remove the associated resources, including the submissions and feedback related to these submissions.
paths./classes/{class}/users/{user}.delete.operationId: deleteClassUser
paths./classes/{class}/users/{user}.delete.parameters.length: 2
paths./classes/{class}/users/{user}.delete.parameters[0].description: Unique identifier
  of the class
paths./classes/{class}/users/{user}.delete.parameters[0].in: path
paths./classes/{class}/users/{user}.delete.parameters[0].name: class
paths./classes/{class}/users/{user}.delete.parameters[0].required: true
paths./classes/{class}/users/{user}.delete.parameters[0].type: string
paths./classes/{class}/users/{user}.delete.parameters[1].description: Unique identifier
  of the user
paths./classes/{class}/users/{user}.delete.parameters[1].in: path
paths./classes/{class}/users/{user}.delete.parameters[1].name: user
paths./classes/{class}/users/{user}.delete.parameters[1].required: true
paths./classes/{class}/users/{user}.delete.parameters[1].type: string
paths./classes/{class}/users/{user}.delete.responses.204.description: The user has
  been removed from the class
paths./classes/{class}/users/{user}.delete.responses.default.description: Error
paths./classes/{class}/users/{user}.delete.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./classes/{class}/users/{user}.delete.security.length: 1
paths./classes/{class}/users/{user}.delete.security[0].OAuth2.length: 1
paths./classes/{class}/users/{user}.delete.security[0].OAuth2[0]: edu.classes
paths./classes/{class}/users/{user}.delete.summary: Remove a user from the class
paths./classes/{class}/users/{user}.delete.tags.length: 1
paths./classes/{class}/users/{user}.delete.tags[0]: Class
paths./classes/{class}/users/{user}.put.description: |
  This method can be used by a teacher of the class to enroll another Flat user into the class.

  Only users that are part of your Organization can be enrolled in a class of this same Organization.

  When enrolling a user in the class, Flat will automatically add this user to the corresponding Class group, based on this role in the Organization.
paths./classes/{class}/users/{user}.put.operationId: addClassUser
paths./classes/{class}/users/{user}.put.parameters.length: 2
paths./classes/{class}/users/{user}.put.parameters[0].description: Unique identifier
  of the class
paths./classes/{class}/users/{user}.put.parameters[0].in: path
paths./classes/{class}/users/{user}.put.parameters[0].name: class
paths./classes/{class}/users/{user}.put.parameters[0].required: true
paths./classes/{class}/users/{user}.put.parameters[0].type: string
paths./classes/{class}/users/{user}.put.parameters[1].description: Unique identifier
  of the user
paths./classes/{class}/users/{user}.put.parameters[1].in: path
paths./classes/{class}/users/{user}.put.parameters[1].name: user
paths./classes/{class}/users/{user}.put.parameters[1].required: true
paths./classes/{class}/users/{user}.put.parameters[1].type: string
paths./classes/{class}/users/{user}.put.responses.204.description: The user has been
  added to the class
paths./classes/{class}/users/{user}.put.responses.default.description: Error
paths./classes/{class}/users/{user}.put.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./classes/{class}/users/{user}.put.security.length: 1
paths./classes/{class}/users/{user}.put.security[0].OAuth2.length: 1
paths./classes/{class}/users/{user}.put.security[0].OAuth2[0]: edu.classes
paths./classes/{class}/users/{user}.put.summary: Add a user to the class
paths./classes/{class}/users/{user}.put.tags.length: 1
paths./classes/{class}/users/{user}.put.tags[0]: Class
paths./classes/enroll/{enrollmentCode}.post.description: |
  Use this method to join a class using an enrollment code given one of the teacher of this class. This code is also available in the `ClassDetails` returned to the teachers when creating the class or listing / fetching a specific class.

  Flat will automatically add the user to the corresponding class group based on this role in the organization.
paths./classes/enroll/{enrollmentCode}.post.operationId: enrollClass
paths./classes/enroll/{enrollmentCode}.post.parameters.length: 1
paths./classes/enroll/{enrollmentCode}.post.parameters[0].description: |
  The enrollment code, available to the teacher in `ClassDetails`
paths./classes/enroll/{enrollmentCode}.post.parameters[0].in: path
paths./classes/enroll/{enrollmentCode}.post.parameters[0].name: enrollmentCode
paths./classes/enroll/{enrollmentCode}.post.parameters[0].required: true
paths./classes/enroll/{enrollmentCode}.post.parameters[0].type: string
paths./classes/enroll/{enrollmentCode}.post.responses.200.description: The new class
  details
paths./classes/enroll/{enrollmentCode}.post.responses.200.schema.$ref: '#/definitions/ClassDetails'
paths./classes/enroll/{enrollmentCode}.post.responses.default.description: Error
paths./classes/enroll/{enrollmentCode}.post.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./classes/enroll/{enrollmentCode}.post.security.length: 1
paths./classes/enroll/{enrollmentCode}.post.security[0].OAuth2.length: 1
paths./classes/enroll/{enrollmentCode}.post.security[0].OAuth2[0]: edu.classes
paths./classes/enroll/{enrollmentCode}.post.summary: Join a class
paths./classes/enroll/{enrollmentCode}.post.tags.length: 1
paths./classes/enroll/{enrollmentCode}.post.tags[0]: Class
paths./groups/{group}.get.operationId: getGroupDetails
paths./groups/{group}.get.parameters.length: 1
paths./groups/{group}.get.parameters[0].$ref: '#/parameters/group'
paths./groups/{group}.get.responses.200.description: The group details
paths./groups/{group}.get.responses.200.schema.$ref: '#/definitions/GroupDetails'
paths./groups/{group}.get.responses.default.description: Error
paths./groups/{group}.get.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./groups/{group}.get.security.length: 1
paths./groups/{group}.get.security[0].OAuth2.length: 5
paths./groups/{group}.get.security[0].OAuth2[0]: edu.admin
paths./groups/{group}.get.security[0].OAuth2[1]: edu.admin.users
paths./groups/{group}.get.security[0].OAuth2[2]: edu.admin.users.readonly
paths./groups/{group}.get.security[0].OAuth2[3]: edu.classes
paths./groups/{group}.get.security[0].OAuth2[4]: edu.classes.readonly
paths./groups/{group}.get.summary: Get group information
paths./groups/{group}.get.tags.length: 1
paths./groups/{group}.get.tags[0]: Group
paths./groups/{group}/scores.get.description: |
  Get the list of scores shared with a group.
paths./groups/{group}/scores.get.operationId: getGroupScores
paths./groups/{group}/scores.get.parameters.length: 2
paths./groups/{group}/scores.get.parameters[0].$ref: '#/parameters/group'
paths./groups/{group}/scores.get.parameters[1].description: Filter the score forked
  from the score id `parent`
paths./groups/{group}/scores.get.parameters[1].in: query
paths./groups/{group}/scores.get.parameters[1].name: parent
paths./groups/{group}/scores.get.parameters[1].type: string
paths./groups/{group}/scores.get.responses.200.description: The group's scores
paths./groups/{group}/scores.get.responses.200.schema.items.$ref: '#/definitions/ScoreDetails'
paths./groups/{group}/scores.get.responses.200.schema.type: array
paths./groups/{group}/scores.get.responses.default.description: Error
paths./groups/{group}/scores.get.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./groups/{group}/scores.get.security.length: 1
paths./groups/{group}/scores.get.security[0].OAuth2.length: 2
paths./groups/{group}/scores.get.security[0].OAuth2[0]: scores
paths./groups/{group}/scores.get.security[0].OAuth2[1]: scores.readonly
paths./groups/{group}/scores.get.summary: List group's scores
paths./groups/{group}/scores.get.tags.length: 2
paths./groups/{group}/scores.get.tags[0]: Group
paths./groups/{group}/scores.get.tags[1]: Score
paths./groups/{group}/users.get.operationId: listGroupUsers
paths./groups/{group}/users.get.parameters.length: 1
paths./groups/{group}/users.get.parameters[0].$ref: '#/parameters/group'
paths./groups/{group}/users.get.responses.200.description: The list of users member
  of the group
paths./groups/{group}/users.get.responses.200.schema.items.$ref: '#/definitions/UserPublic'
paths./groups/{group}/users.get.responses.200.schema.type: array
paths./groups/{group}/users.get.responses.default.description: Error
paths./groups/{group}/users.get.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./groups/{group}/users.get.security.length: 1
paths./groups/{group}/users.get.security[0].OAuth2.length: 5
paths./groups/{group}/users.get.security[0].OAuth2[0]: edu.admin
paths./groups/{group}/users.get.security[0].OAuth2[1]: edu.admin.users
paths./groups/{group}/users.get.security[0].OAuth2[2]: edu.admin.users.readonly
paths./groups/{group}/users.get.security[0].OAuth2[3]: edu.classes
paths./groups/{group}/users.get.security[0].OAuth2[4]: edu.classes.readonly
paths./groups/{group}/users.get.summary: List group's users
paths./groups/{group}/users.get.tags.length: 1
paths./groups/{group}/users.get.tags[0]: Group
paths./me.get.description: |
  Get details about the current authenticated User.
paths./me.get.operationId: getAuthenticatedUser
paths./me.get.responses.200.description: Current user details
paths./me.get.responses.200.schema.$ref: '#/definitions/UserDetails'
paths./me.get.responses.default.description: Error
paths./me.get.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./me.get.security.length: 1
paths./me.get.security[0].OAuth2.length: 2
paths./me.get.security[0].OAuth2[0]: account.public_profile
paths./me.get.security[0].OAuth2[1]: account.education_profile
paths./me.get.summary: Get current user profile
paths./me.get.tags.length: 1
paths./me.get.tags[0]: Account
paths./organizations/invitations.get.operationId: listOrganizationInvitations
paths./organizations/invitations.get.parameters.length: 4
paths./organizations/invitations.get.parameters[0].description: Filter users by role
paths./organizations/invitations.get.parameters[0].enum.length: 3
paths./organizations/invitations.get.parameters[0].enum[0]: user
paths./organizations/invitations.get.parameters[0].enum[1]: teacher
paths./organizations/invitations.get.parameters[0].enum[2]: admin
paths./organizations/invitations.get.parameters[0].in: query
paths./organizations/invitations.get.parameters[0].name: role
paths./organizations/invitations.get.parameters[0].type: string
paths./organizations/invitations.get.parameters[1].$ref: '#/parameters/limit'
paths./organizations/invitations.get.parameters[2].$ref: '#/parameters/next'
paths./organizations/invitations.get.parameters[3].$ref: '#/parameters/previous'
paths./organizations/invitations.get.responses.200.description: List of invitations
paths./organizations/invitations.get.responses.200.schema.items.$ref: '#/definitions/OrganizationInvitation'
paths./organizations/invitations.get.responses.200.schema.type: array
paths./organizations/invitations.get.responses.default.description: Error
paths./organizations/invitations.get.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./organizations/invitations.get.security.length: 1
paths./organizations/invitations.get.security[0].OAuth2.length: 3
paths./organizations/invitations.get.security[0].OAuth2[0]: edu.admin
paths./organizations/invitations.get.security[0].OAuth2[1]: edu.admin.users
paths./organizations/invitations.get.security[0].OAuth2[2]: edu.admin.users.readonly
paths./organizations/invitations.get.summary: List the organization invitations
paths./organizations/invitations.get.tags.length: 1
paths./organizations/invitations.get.tags[0]: Organization
paths./organizations/invitations.post.description: |
  This method creates and sends invitation for teachers and admins.

  Invitations can only be used by new Flat users or users who are not part of the organization yet.

  If the email of the user is already associated to a user of your organization, the API will simply update the role of the existing user and won't send an invitation. In this case, the property `usedBy` will be directly filled with the uniquer identifier of the corresponding user.
paths./organizations/invitations.post.operationId: createOrganizationInvitation
paths./organizations/invitations.post.parameters.length: 1
paths./organizations/invitations.post.parameters[0].in: body
paths./organizations/invitations.post.parameters[0].name: body
paths./organizations/invitations.post.parameters[0].schema.$ref: '#/definitions/OrganizationInvitationCreation'
paths./organizations/invitations.post.responses.200.description: New invitation created
paths./organizations/invitations.post.responses.200.schema.$ref: '#/definitions/OrganizationInvitation'
paths./organizations/invitations.post.responses.default.description: Error
paths./organizations/invitations.post.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./organizations/invitations.post.security.length: 1
paths./organizations/invitations.post.security[0].OAuth2.length: 2
paths./organizations/invitations.post.security[0].OAuth2[0]: edu.admin
paths./organizations/invitations.post.security[0].OAuth2[1]: edu.admin.users
paths./organizations/invitations.post.summary: Create a new invitation to join the
  organization
paths./organizations/invitations.post.tags.length: 1
paths./organizations/invitations.post.tags[0]: Organization
paths./organizations/invitations/{invitation}.delete.operationId: removeOrganizationInvitation
paths./organizations/invitations/{invitation}.delete.parameters.length: 1
paths./organizations/invitations/{invitation}.delete.parameters[0].description: Unique
  identifier of the invitation
paths./organizations/invitations/{invitation}.delete.parameters[0].in: path
paths./organizations/invitations/{invitation}.delete.parameters[0].name: invitation
paths./organizations/invitations/{invitation}.delete.parameters[0].required: true
paths./organizations/invitations/{invitation}.delete.parameters[0].type: string
paths./organizations/invitations/{invitation}.delete.responses.204.description: The
  invitation has been removed
paths./organizations/invitations/{invitation}.delete.responses.default.description: Error
paths./organizations/invitations/{invitation}.delete.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./organizations/invitations/{invitation}.delete.security.length: 1
paths./organizations/invitations/{invitation}.delete.security[0].OAuth2.length: 2
paths./organizations/invitations/{invitation}.delete.security[0].OAuth2[0]: edu.admin
paths./organizations/invitations/{invitation}.delete.security[0].OAuth2[1]: edu.admin.users
paths./organizations/invitations/{invitation}.delete.summary: Remove an organization
  invitation
paths./organizations/invitations/{invitation}.delete.tags.length: 1
paths./organizations/invitations/{invitation}.delete.tags[0]: Organization
paths./organizations/lti/credentials.get.operationId: listLtiCredentials
paths./organizations/lti/credentials.get.responses.200.description: The list of LTI
  Credentials
paths./organizations/lti/credentials.get.responses.200.schema.items.$ref: '#/definitions/LtiCredentials'
paths./organizations/lti/credentials.get.responses.200.schema.type: array
paths./organizations/lti/credentials.get.responses.403.description: Not admin of an
  organization
paths./organizations/lti/credentials.get.responses.403.schema.$ref: '#/definitions/FlatErrorResponse'
paths./organizations/lti/credentials.get.responses.default.description: Error
paths./organizations/lti/credentials.get.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./organizations/lti/credentials.get.security.length: 1
paths./organizations/lti/credentials.get.security[0].OAuth2.length: 3
paths./organizations/lti/credentials.get.security[0].OAuth2[0]: edu.admin
paths./organizations/lti/credentials.get.security[0].OAuth2[1]: edu.admin.lti
paths./organizations/lti/credentials.get.security[0].OAuth2[2]: edu.admin.lti.readonly
paths./organizations/lti/credentials.get.summary: List LTI 1.x credentials
paths./organizations/lti/credentials.get.tags.length: 1
paths./organizations/lti/credentials.get.tags[0]: Organization
paths./organizations/lti/credentials.post.description: |
  Flat for Education is a Certified LTI Provider. You can use these API methods to automate the creation of LTI credentials. You can read more about our LTI implementation, supported components and LTI Endpoints in our [Developer Documentation](https://flat.io/developers/docs/lti/).
paths./organizations/lti/credentials.post.operationId: createLtiCredentials
paths./organizations/lti/credentials.post.parameters.length: 1
paths./organizations/lti/credentials.post.parameters[0].in: body
paths./organizations/lti/credentials.post.parameters[0].name: body
paths./organizations/lti/credentials.post.parameters[0].required: true
paths./organizations/lti/credentials.post.parameters[0].schema.$ref: '#/definitions/LtiCredentialsCreation'
paths./organizations/lti/credentials.post.responses.200.description: The LTI Credentials
paths./organizations/lti/credentials.post.responses.200.schema.$ref: '#/definitions/LtiCredentials'
paths./organizations/lti/credentials.post.responses.403.description: Not admin of
  an organization
paths./organizations/lti/credentials.post.responses.403.schema.$ref: '#/definitions/FlatErrorResponse'
paths./organizations/lti/credentials.post.responses.default.description: Error
paths./organizations/lti/credentials.post.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./organizations/lti/credentials.post.security.length: 1
paths./organizations/lti/credentials.post.security[0].OAuth2.length: 2
paths./organizations/lti/credentials.post.security[0].OAuth2[0]: edu.admin
paths./organizations/lti/credentials.post.security[0].OAuth2[1]: edu.admin.lti
paths./organizations/lti/credentials.post.summary: Create a new couple of LTI 1.x
  credentials
paths./organizations/lti/credentials.post.tags.length: 1
paths./organizations/lti/credentials.post.tags[0]: Organization
paths./organizations/lti/credentials/{credentials}.delete.operationId: revokeLtiCredentials
paths./organizations/lti/credentials/{credentials}.delete.parameters.length: 1
paths./organizations/lti/credentials/{credentials}.delete.parameters[0].description: |
  Credentials unique identifier
paths./organizations/lti/credentials/{credentials}.delete.parameters[0].in: path
paths./organizations/lti/credentials/{credentials}.delete.parameters[0].name: credentials
paths./organizations/lti/credentials/{credentials}.delete.parameters[0].required: true
paths./organizations/lti/credentials/{credentials}.delete.parameters[0].type: string
paths./organizations/lti/credentials/{credentials}.delete.responses.204.description: Credentials
  revoked
paths./organizations/lti/credentials/{credentials}.delete.responses.403.description: Not
  admin of an organization
paths./organizations/lti/credentials/{credentials}.delete.responses.403.schema.$ref: '#/definitions/FlatErrorResponse'
paths./organizations/lti/credentials/{credentials}.delete.responses.404.description: Credentials
  not found
paths./organizations/lti/credentials/{credentials}.delete.responses.404.schema.$ref: '#/definitions/FlatErrorResponse'
paths./organizations/lti/credentials/{credentials}.delete.responses.default.description: Error
paths./organizations/lti/credentials/{credentials}.delete.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./organizations/lti/credentials/{credentials}.delete.security.length: 1
paths./organizations/lti/credentials/{credentials}.delete.security[0].OAuth2.length: 2
paths./organizations/lti/credentials/{credentials}.delete.security[0].OAuth2[0]: edu.admin
paths./organizations/lti/credentials/{credentials}.delete.security[0].OAuth2[1]: edu.admin.lti
paths./organizations/lti/credentials/{credentials}.delete.summary: Revoke LTI 1.x
  credentials
paths./organizations/lti/credentials/{credentials}.delete.tags.length: 1
paths./organizations/lti/credentials/{credentials}.delete.tags[0]: Organization
paths./organizations/users.get.operationId: listOrganizationUsers
paths./organizations/users.get.parameters.length: 4
paths./organizations/users.get.parameters[0].description: Filter users by role
paths./organizations/users.get.parameters[0].enum.length: 3
paths./organizations/users.get.parameters[0].enum[0]: user
paths./organizations/users.get.parameters[0].enum[1]: teacher
paths./organizations/users.get.parameters[0].enum[2]: admin
paths./organizations/users.get.parameters[0].in: query
paths./organizations/users.get.parameters[0].name: role
paths./organizations/users.get.parameters[0].type: string
paths./organizations/users.get.parameters[1].$ref: '#/parameters/limit'
paths./organizations/users.get.parameters[2].$ref: '#/parameters/next'
paths./organizations/users.get.parameters[3].$ref: '#/parameters/previous'
paths./organizations/users.get.responses.200.description: List of users
paths./organizations/users.get.responses.200.schema.items.$ref: '#/definitions/UserDetailsAdmin'
paths./organizations/users.get.responses.200.schema.type: array
paths./organizations/users.get.responses.default.description: Error
paths./organizations/users.get.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./organizations/users.get.security.length: 1
paths./organizations/users.get.security[0].OAuth2.length: 3
paths./organizations/users.get.security[0].OAuth2[0]: edu.admin
paths./organizations/users.get.security[0].OAuth2[1]: edu.admin.users
paths./organizations/users.get.security[0].OAuth2[2]: edu.admin.users.readonly
paths./organizations/users.get.summary: List the organization users
paths./organizations/users.get.tags.length: 1
paths./organizations/users.get.tags[0]: Organization
paths./organizations/users.post.operationId: createOrganizationUser
paths./organizations/users.post.parameters.length: 1
paths./organizations/users.post.parameters[0].in: body
paths./organizations/users.post.parameters[0].name: body
paths./organizations/users.post.parameters[0].schema.$ref: '#/definitions/UserCreation'
paths./organizations/users.post.responses.200.description: New user created
paths./organizations/users.post.responses.200.schema.$ref: '#/definitions/UserDetailsAdmin'
paths./organizations/users.post.responses.default.description: Error
paths./organizations/users.post.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./organizations/users.post.security.length: 1
paths./organizations/users.post.security[0].OAuth2.length: 2
paths./organizations/users.post.security[0].OAuth2[0]: edu.admin
paths./organizations/users.post.security[0].OAuth2[1]: edu.admin.users
paths./organizations/users.post.summary: Create a new user account
paths./organizations/users.post.tags.length: 1
paths./organizations/users.post.tags[0]: Organization
paths./organizations/users/{user}.delete.description: |
  This operation removes an account from Flat and its data, including:
  * The music scores created by this user (documents, history, comments, collaboration information)
  * Education related data (assignments and classroom information)
paths./organizations/users/{user}.delete.operationId: removeOrganizationUser
paths./organizations/users/{user}.delete.parameters.length: 2
paths./organizations/users/{user}.delete.parameters[0].$ref: '#/parameters/organizationUser'
paths./organizations/users/{user}.delete.parameters[1].description: |
  If `true`, the account will be only removed from the organization and converted into an individual account on our public website, https://flat.io.
  This operation will remove the education-related data from the account.
  Before realizing this operation, you need to be sure that the user is at least 13 years old and that this one has read and agreed to the Individual Terms of Services of Flat available on https://flat.io/legal.
paths./organizations/users/{user}.delete.parameters[1].in: query
paths./organizations/users/{user}.delete.parameters[1].name: convertToIndividual
paths./organizations/users/{user}.delete.parameters[1].type: boolean
paths./organizations/users/{user}.delete.responses.204.description: User deleted
paths./organizations/users/{user}.delete.responses.default.description: Error
paths./organizations/users/{user}.delete.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./organizations/users/{user}.delete.security.length: 1
paths./organizations/users/{user}.delete.security[0].OAuth2.length: 2
paths./organizations/users/{user}.delete.security[0].OAuth2[0]: edu.admin
paths./organizations/users/{user}.delete.security[0].OAuth2[1]: edu.admin.users
paths./organizations/users/{user}.delete.summary: Remove an account from Flat
paths./organizations/users/{user}.delete.tags.length: 1
paths./organizations/users/{user}.delete.tags[0]: Organization
paths./organizations/users/{user}.put.operationId: updateOrganizationUser
paths./organizations/users/{user}.put.parameters.length: 2
paths./organizations/users/{user}.put.parameters[0].$ref: '#/parameters/organizationUser'
paths./organizations/users/{user}.put.parameters[1].in: body
paths./organizations/users/{user}.put.parameters[1].name: body
paths./organizations/users/{user}.put.parameters[1].required: true
paths./organizations/users/{user}.put.parameters[1].schema.$ref: '#/definitions/UserAdminUpdate'
paths./organizations/users/{user}.put.responses.200.description: User updated
paths./organizations/users/{user}.put.responses.200.schema.$ref: '#/definitions/UserDetailsAdmin'
paths./organizations/users/{user}.put.responses.default.description: Error
paths./organizations/users/{user}.put.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./organizations/users/{user}.put.security.length: 1
paths./organizations/users/{user}.put.security[0].OAuth2.length: 2
paths./organizations/users/{user}.put.security[0].OAuth2[0]: edu.admin
paths./organizations/users/{user}.put.security[0].OAuth2[1]: edu.admin.users
paths./organizations/users/{user}.put.summary: Update account information
paths./organizations/users/{user}.put.tags.length: 1
paths./organizations/users/{user}.put.tags[0]: Organization
paths./scores.post.description: |
  Use this API method to **create a new music score in the current User account**. You will need a MusicXML 3 (`vnd.recordare.musicxml` or `vnd.recordare.musicxml+xml`) or a MIDI (`audio/midi`) file to create the new Flat document.

  This API call will automatically create the first revision of the document, the score can be modified by the using our web application or by uploading a new revision of this file (`POST /v2/scores/{score}/revisions/{revision}`).

  The currently authenticated user will be granted owner of the file and will be able to add other collaborators (users and groups).
paths./scores.post.operationId: createScore
paths./scores.post.parameters.length: 1
paths./scores.post.parameters[0].in: body
paths./scores.post.parameters[0].name: body
paths./scores.post.parameters[0].required: true
paths./scores.post.parameters[0].schema.$ref: '#/definitions/ScoreCreation'
paths./scores.post.responses.200.description: Score created
paths./scores.post.responses.200.schema.$ref: '#/definitions/ScoreDetails'
paths./scores.post.responses.400.description: Bad score creation request
paths./scores.post.responses.400.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores.post.responses.402.description: Account overquota
paths./scores.post.responses.402.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores.post.responses.default.description: Error
paths./scores.post.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores.post.security.length: 1
paths./scores.post.security[0].OAuth2.length: 1
paths./scores.post.security[0].OAuth2[0]: scores
paths./scores.post.summary: Create a new score
paths./scores.post.tags.length: 1
paths./scores.post.tags[0]: Score
paths./scores/{score}.delete.description: |
  This API call will schedule the deletion of the score, its revisions, and whole history.
  The user calling this API method must have the `aclAdmin` rights on this document to process this action.
  The score won't be accessible anymore after calling this method and the user's quota will directly be updated.
paths./scores/{score}.delete.operationId: deleteScore
paths./scores/{score}.delete.parameters.length: 1
paths./scores/{score}.delete.parameters[0].$ref: '#/parameters/score'
paths./scores/{score}.delete.responses.204.description: The score has been removed
paths./scores/{score}.delete.responses.403.description: Not granted to manage this
  score
paths./scores/{score}.delete.responses.403.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}.delete.responses.404.description: Score not found
paths./scores/{score}.delete.responses.404.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}.delete.responses.default.description: Error
paths./scores/{score}.delete.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}.delete.security.length: 1
paths./scores/{score}.delete.security[0].OAuth2.length: 1
paths./scores/{score}.delete.security[0].OAuth2[0]: scores
paths./scores/{score}.delete.summary: Delete a score
paths./scores/{score}.delete.tags.length: 1
paths./scores/{score}.delete.tags[0]: Score
paths./scores/{score}.get.description: |
  Get the details of a score identified by the `score` parameter in the URL.
  The currently authenticated user must have at least a read access to the document to use this API call.
paths./scores/{score}.get.operationId: getScore
paths./scores/{score}.get.parameters.length: 2
paths./scores/{score}.get.parameters[0].$ref: '#/parameters/score'
paths./scores/{score}.get.parameters[1].$ref: '#/parameters/scoreSharingKey'
paths./scores/{score}.get.responses.200.description: Score details
paths./scores/{score}.get.responses.200.schema.$ref: '#/definitions/ScoreDetails'
paths./scores/{score}.get.responses.402.description: Account overquota and this document
  is out of the granted quota
paths./scores/{score}.get.responses.402.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}.get.responses.403.description: Not granted to access to this
  score
paths./scores/{score}.get.responses.403.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}.get.responses.404.description: Score not found
paths./scores/{score}.get.responses.404.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}.get.responses.default.description: Error
paths./scores/{score}.get.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}.get.security.length: 1
paths./scores/{score}.get.security[0].OAuth2.length: 2
paths./scores/{score}.get.security[0].OAuth2[0]: scores
paths./scores/{score}.get.security[0].OAuth2[1]: scores.readonly
paths./scores/{score}.get.summary: Get a score's metadata
paths./scores/{score}.get.tags.length: 1
paths./scores/{score}.get.tags[0]: Score
paths./scores/{score}.put.description: |
  This API method allows you to change the metadata of a score document (e.g. its `title` or `privacy`), all the properties are optional.

  To edit the file itself, create a new revision using the appropriate method (`POST /v2/scores/{score}/revisions/{revision}`).
paths./scores/{score}.put.operationId: editScore
paths./scores/{score}.put.parameters.length: 2
paths./scores/{score}.put.parameters[0].$ref: '#/parameters/score'
paths./scores/{score}.put.parameters[1].in: body
paths./scores/{score}.put.parameters[1].name: body
paths./scores/{score}.put.parameters[1].schema.$ref: '#/definitions/ScoreModification'
paths./scores/{score}.put.responses.200.description: Score details
paths./scores/{score}.put.responses.200.schema.$ref: '#/definitions/ScoreDetails'
paths./scores/{score}.put.responses.402.description: Account overquota
paths./scores/{score}.put.responses.402.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}.put.responses.403.description: Not granted to access to this
  score
paths./scores/{score}.put.responses.403.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}.put.responses.404.description: Score not found
paths./scores/{score}.put.responses.404.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}.put.responses.default.description: Error
paths./scores/{score}.put.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}.put.security.length: 1
paths./scores/{score}.put.security[0].OAuth2.length: 1
paths./scores/{score}.put.security[0].OAuth2[0]: scores
paths./scores/{score}.put.summary: Edit a score's metadata
paths./scores/{score}.put.tags.length: 1
paths./scores/{score}.put.tags[0]: Score
paths./scores/{score}/collaborators.get.description: |
  This API call will list the different collaborators of a score and their rights on the document. The returned list will at least contain the owner of the document.

  Collaborators can be a single user (the object `user` will be populated) or a group (the object `group` will be populated).
paths./scores/{score}/collaborators.get.operationId: getScoreCollaborators
paths./scores/{score}/collaborators.get.parameters.length: 2
paths./scores/{score}/collaborators.get.parameters[0].$ref: '#/parameters/score'
paths./scores/{score}/collaborators.get.parameters[1].$ref: '#/parameters/scoreSharingKey'
paths./scores/{score}/collaborators.get.responses.200.description: List of collaborators
paths./scores/{score}/collaborators.get.responses.200.schema.items.$ref: '#/definitions/ScoreCollaborator'
paths./scores/{score}/collaborators.get.responses.200.schema.type: array
paths./scores/{score}/collaborators.get.responses.402.description: Account overquota
paths./scores/{score}/collaborators.get.responses.402.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/collaborators.get.responses.403.description: Not granted to
  access to this score
paths./scores/{score}/collaborators.get.responses.403.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/collaborators.get.responses.404.description: Score not found
paths./scores/{score}/collaborators.get.responses.404.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/collaborators.get.responses.default.description: Error
paths./scores/{score}/collaborators.get.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/collaborators.get.security.length: 1
paths./scores/{score}/collaborators.get.security[0].OAuth2.length: 2
paths./scores/{score}/collaborators.get.security[0].OAuth2[0]: scores.readonly
paths./scores/{score}/collaborators.get.security[0].OAuth2[1]: scores
paths./scores/{score}/collaborators.get.summary: List the collaborators
paths./scores/{score}/collaborators.get.tags.length: 1
paths./scores/{score}/collaborators.get.tags[0]: Score
paths./scores/{score}/collaborators.post.description: |
  Share a score with a single user or a group. This API call allows to add, invite and update the collaborators of a document.
  - To add an existing Flat user to the document, specify its unique identifier in the `user` property.
  - To invite an external user to the document, specify its email in the `userEmail` property.
  - To add a Flat group to the document, specify its unique identifier in the `group` property.
  - To update an existing collaborator, process the same request with different rights.
paths./scores/{score}/collaborators.post.operationId: addScoreCollaborator
paths./scores/{score}/collaborators.post.parameters.length: 2
paths./scores/{score}/collaborators.post.parameters[0].$ref: '#/parameters/score'
paths./scores/{score}/collaborators.post.parameters[1].in: body
paths./scores/{score}/collaborators.post.parameters[1].name: body
paths./scores/{score}/collaborators.post.parameters[1].required: true
paths./scores/{score}/collaborators.post.parameters[1].schema.$ref: '#/definitions/ScoreCollaboratorCreation'
paths./scores/{score}/collaborators.post.responses.200.description: The newly added
  collaborator metadata
paths./scores/{score}/collaborators.post.responses.200.schema.$ref: '#/definitions/ScoreCollaborator'
paths./scores/{score}/collaborators.post.responses.402.description: Account overquota
paths./scores/{score}/collaborators.post.responses.402.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/collaborators.post.responses.403.description: Not granted to
  manage this score
paths./scores/{score}/collaborators.post.responses.403.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/collaborators.post.responses.404.description: Score not found
paths./scores/{score}/collaborators.post.responses.404.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/collaborators.post.responses.default.description: Error
paths./scores/{score}/collaborators.post.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/collaborators.post.security.length: 1
paths./scores/{score}/collaborators.post.security[0].OAuth2.length: 1
paths./scores/{score}/collaborators.post.security[0].OAuth2[0]: scores
paths./scores/{score}/collaborators.post.summary: Add a new collaborator
paths./scores/{score}/collaborators.post.tags.length: 1
paths./scores/{score}/collaborators.post.tags[0]: Score
paths./scores/{score}/collaborators/{collaborator}.delete.description: |
  Remove the specified collaborator from the score
paths./scores/{score}/collaborators/{collaborator}.delete.operationId: removeScoreCollaborator
paths./scores/{score}/collaborators/{collaborator}.delete.parameters.length: 2
paths./scores/{score}/collaborators/{collaborator}.delete.parameters[0].$ref: '#/parameters/score'
paths./scores/{score}/collaborators/{collaborator}.delete.parameters[1].$ref: '#/parameters/scoreCollaborator'
paths./scores/{score}/collaborators/{collaborator}.delete.responses.204.description: The
  collaborator has been removed
paths./scores/{score}/collaborators/{collaborator}.delete.responses.403.description: Not
  granted to manage this score
paths./scores/{score}/collaborators/{collaborator}.delete.responses.403.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/collaborators/{collaborator}.delete.responses.404.description: Score
  or collaborator not found
paths./scores/{score}/collaborators/{collaborator}.delete.responses.404.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/collaborators/{collaborator}.delete.responses.default.description: Error
paths./scores/{score}/collaborators/{collaborator}.delete.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/collaborators/{collaborator}.delete.security.length: 1
paths./scores/{score}/collaborators/{collaborator}.delete.security[0].OAuth2.length: 1
paths./scores/{score}/collaborators/{collaborator}.delete.security[0].OAuth2[0]: scores
paths./scores/{score}/collaborators/{collaborator}.delete.summary: Delete a collaborator
paths./scores/{score}/collaborators/{collaborator}.delete.tags.length: 1
paths./scores/{score}/collaborators/{collaborator}.delete.tags[0]: Score
paths./scores/{score}/collaborators/{collaborator}.get.description: |
  Get the information about a collaborator (User or Group).
paths./scores/{score}/collaborators/{collaborator}.get.operationId: getScoreCollaborator
paths./scores/{score}/collaborators/{collaborator}.get.parameters.length: 3
paths./scores/{score}/collaborators/{collaborator}.get.parameters[0].$ref: '#/parameters/score'
paths./scores/{score}/collaborators/{collaborator}.get.parameters[1].$ref: '#/parameters/scoreCollaborator'
paths./scores/{score}/collaborators/{collaborator}.get.parameters[2].$ref: '#/parameters/scoreSharingKey'
paths./scores/{score}/collaborators/{collaborator}.get.responses.200.description: Collaborator
  information
paths./scores/{score}/collaborators/{collaborator}.get.responses.200.schema.$ref: '#/definitions/ScoreCollaborator'
paths./scores/{score}/collaborators/{collaborator}.get.responses.402.description: Account
  overquota
paths./scores/{score}/collaborators/{collaborator}.get.responses.402.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/collaborators/{collaborator}.get.responses.403.description: Not
  granted to access to this score
paths./scores/{score}/collaborators/{collaborator}.get.responses.403.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/collaborators/{collaborator}.get.responses.404.description: Score
  or collaborator not found
paths./scores/{score}/collaborators/{collaborator}.get.responses.404.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/collaborators/{collaborator}.get.responses.default.description: Error
paths./scores/{score}/collaborators/{collaborator}.get.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/collaborators/{collaborator}.get.security.length: 1
paths./scores/{score}/collaborators/{collaborator}.get.security[0].OAuth2.length: 1
paths./scores/{score}/collaborators/{collaborator}.get.security[0].OAuth2[0]: scores.readonly
paths./scores/{score}/collaborators/{collaborator}.get.summary: Get a collaborator
paths./scores/{score}/collaborators/{collaborator}.get.tags.length: 1
paths./scores/{score}/collaborators/{collaborator}.get.tags[0]: Score
paths./scores/{score}/comments.get.description: This method lists the different comments
  added on a music score (documents and inline) sorted by their post dates.
paths./scores/{score}/comments.get.operationId: getScoreComments
paths./scores/{score}/comments.get.parameters.length: 2
paths./scores/{score}/comments.get.parameters[0].$ref: '#/parameters/score'
paths./scores/{score}/comments.get.parameters[1].$ref: '#/parameters/scoreSharingKey'
paths./scores/{score}/comments.get.responses.200.description: The comments of the
  score
paths./scores/{score}/comments.get.responses.200.schema.items.$ref: '#/definitions/ScoreComment'
paths./scores/{score}/comments.get.responses.200.schema.type: array
paths./scores/{score}/comments.get.responses.402.description: Account overquota
paths./scores/{score}/comments.get.responses.402.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/comments.get.responses.403.description: Not granted to access
  to this score
paths./scores/{score}/comments.get.responses.403.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/comments.get.responses.404.description: Score not found
paths./scores/{score}/comments.get.responses.404.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/comments.get.responses.default.description: Error
paths./scores/{score}/comments.get.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/comments.get.security.length: 1
paths./scores/{score}/comments.get.security[0].OAuth2.length: 3
paths./scores/{score}/comments.get.security[0].OAuth2[0]: scores.readonly
paths./scores/{score}/comments.get.security[0].OAuth2[1]: scores.social
paths./scores/{score}/comments.get.security[0].OAuth2[2]: scores
paths./scores/{score}/comments.get.summary: List comments
paths./scores/{score}/comments.get.tags.length: 1
paths./scores/{score}/comments.get.tags[0]: Score
paths./scores/{score}/comments.post.description: |
  Post a document or a contextualized comment on a document.

  Please note that this method includes an anti-spam system for public scores. We don't guarantee that your comments will be accepted and displayed to end-user. Comments are be blocked by returning a `403` HTTP error and hidden from other users when the `spam` property is `true`.
paths./scores/{score}/comments.post.operationId: postScoreComment
paths./scores/{score}/comments.post.parameters.length: 3
paths./scores/{score}/comments.post.parameters[0].$ref: '#/parameters/score'
paths./scores/{score}/comments.post.parameters[1].$ref: '#/parameters/scoreSharingKey'
paths./scores/{score}/comments.post.parameters[2].in: body
paths./scores/{score}/comments.post.parameters[2].name: body
paths./scores/{score}/comments.post.parameters[2].required: true
paths./scores/{score}/comments.post.parameters[2].schema.$ref: '#/definitions/ScoreCommentCreation'
paths./scores/{score}/comments.post.responses.200.description: The new comment
paths./scores/{score}/comments.post.responses.200.schema.$ref: '#/definitions/ScoreComment'
paths./scores/{score}/comments.post.responses.402.description: Account overquota
paths./scores/{score}/comments.post.responses.402.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/comments.post.responses.403.description: Not granted to access
  to this score, to post a comment, or your API call triggered our spam filter.
paths./scores/{score}/comments.post.responses.403.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/comments.post.responses.404.description: Score not found
paths./scores/{score}/comments.post.responses.404.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/comments.post.responses.default.description: Error
paths./scores/{score}/comments.post.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/comments.post.security.length: 1
paths./scores/{score}/comments.post.security[0].OAuth2.length: 2
paths./scores/{score}/comments.post.security[0].OAuth2[0]: scores.social
paths./scores/{score}/comments.post.security[0].OAuth2[1]: scores
paths./scores/{score}/comments.post.summary: Post a new comment
paths./scores/{score}/comments.post.tags.length: 1
paths./scores/{score}/comments.post.tags[0]: Score
paths./scores/{score}/comments/{comment}.delete.operationId: deleteScoreComment
paths./scores/{score}/comments/{comment}.delete.parameters.length: 3
paths./scores/{score}/comments/{comment}.delete.parameters[0].$ref: '#/parameters/score'
paths./scores/{score}/comments/{comment}.delete.parameters[1].$ref: '#/parameters/scoreComment'
paths./scores/{score}/comments/{comment}.delete.parameters[2].$ref: '#/parameters/scoreSharingKey'
paths./scores/{score}/comments/{comment}.delete.responses.204.description: The comment
  has been deleted
paths./scores/{score}/comments/{comment}.delete.responses.403.description: Not granted
  to access to this score or not the original comment creator
paths./scores/{score}/comments/{comment}.delete.responses.403.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/comments/{comment}.delete.responses.404.description: Score or
  comment not found
paths./scores/{score}/comments/{comment}.delete.responses.404.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/comments/{comment}.delete.responses.default.description: Error
paths./scores/{score}/comments/{comment}.delete.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/comments/{comment}.delete.security.length: 1
paths./scores/{score}/comments/{comment}.delete.security[0].OAuth2.length: 2
paths./scores/{score}/comments/{comment}.delete.security[0].OAuth2[0]: scores.social
paths./scores/{score}/comments/{comment}.delete.security[0].OAuth2[1]: scores
paths./scores/{score}/comments/{comment}.delete.summary: Delete a comment
paths./scores/{score}/comments/{comment}.delete.tags.length: 1
paths./scores/{score}/comments/{comment}.delete.tags[0]: Score
paths./scores/{score}/comments/{comment}.put.operationId: updateScoreComment
paths./scores/{score}/comments/{comment}.put.parameters.length: 4
paths./scores/{score}/comments/{comment}.put.parameters[0].$ref: '#/parameters/score'
paths./scores/{score}/comments/{comment}.put.parameters[1].$ref: '#/parameters/scoreComment'
paths./scores/{score}/comments/{comment}.put.parameters[2].$ref: '#/parameters/scoreSharingKey'
paths./scores/{score}/comments/{comment}.put.parameters[3].in: body
paths./scores/{score}/comments/{comment}.put.parameters[3].name: body
paths./scores/{score}/comments/{comment}.put.parameters[3].required: true
paths./scores/{score}/comments/{comment}.put.parameters[3].schema.$ref: '#/definitions/ScoreCommentUpdate'
paths./scores/{score}/comments/{comment}.put.responses.200.description: The edited
  comment
paths./scores/{score}/comments/{comment}.put.responses.200.schema.$ref: '#/definitions/ScoreComment'
paths./scores/{score}/comments/{comment}.put.responses.402.description: Account overquota
paths./scores/{score}/comments/{comment}.put.responses.402.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/comments/{comment}.put.responses.403.description: Not granted
  to access to this score or not the original comment creator
paths./scores/{score}/comments/{comment}.put.responses.403.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/comments/{comment}.put.responses.404.description: Score not
  found
paths./scores/{score}/comments/{comment}.put.responses.404.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/comments/{comment}.put.responses.default.description: Error
paths./scores/{score}/comments/{comment}.put.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/comments/{comment}.put.security.length: 1
paths./scores/{score}/comments/{comment}.put.security[0].OAuth2.length: 2
paths./scores/{score}/comments/{comment}.put.security[0].OAuth2[0]: scores.social
paths./scores/{score}/comments/{comment}.put.security[0].OAuth2[1]: scores
paths./scores/{score}/comments/{comment}.put.summary: Update an existing comment
paths./scores/{score}/comments/{comment}.put.tags.length: 1
paths./scores/{score}/comments/{comment}.put.tags[0]: Score
paths./scores/{score}/comments/{comment}/resolved.delete.operationId: markScoreCommentUnresolved
paths./scores/{score}/comments/{comment}/resolved.delete.parameters.length: 3
paths./scores/{score}/comments/{comment}/resolved.delete.parameters[0].$ref: '#/parameters/score'
paths./scores/{score}/comments/{comment}/resolved.delete.parameters[1].$ref: '#/parameters/scoreComment'
paths./scores/{score}/comments/{comment}/resolved.delete.parameters[2].$ref: '#/parameters/scoreSharingKey'
paths./scores/{score}/comments/{comment}/resolved.delete.responses.204.description: The
  comment has been unmarked as resolved
paths./scores/{score}/comments/{comment}/resolved.delete.responses.403.description: Not
  granted to unmark this comment as resolved
paths./scores/{score}/comments/{comment}/resolved.delete.responses.404.description: Score
  or comment not found
paths./scores/{score}/comments/{comment}/resolved.delete.responses.404.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/comments/{comment}/resolved.delete.responses.default.description: Error
paths./scores/{score}/comments/{comment}/resolved.delete.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/comments/{comment}/resolved.delete.security.length: 1
paths./scores/{score}/comments/{comment}/resolved.delete.security[0].OAuth2.length: 2
paths./scores/{score}/comments/{comment}/resolved.delete.security[0].OAuth2[0]: scores.social
paths./scores/{score}/comments/{comment}/resolved.delete.security[0].OAuth2[1]: scores
paths./scores/{score}/comments/{comment}/resolved.delete.summary: Mark the comment
  as unresolved
paths./scores/{score}/comments/{comment}/resolved.delete.tags.length: 1
paths./scores/{score}/comments/{comment}/resolved.delete.tags[0]: Score
paths./scores/{score}/comments/{comment}/resolved.put.operationId: markScoreCommentResolved
paths./scores/{score}/comments/{comment}/resolved.put.parameters.length: 3
paths./scores/{score}/comments/{comment}/resolved.put.parameters[0].$ref: '#/parameters/score'
paths./scores/{score}/comments/{comment}/resolved.put.parameters[1].$ref: '#/parameters/scoreComment'
paths./scores/{score}/comments/{comment}/resolved.put.parameters[2].$ref: '#/parameters/scoreSharingKey'
paths./scores/{score}/comments/{comment}/resolved.put.responses.204.description: The
  comment has been marked as resolved
paths./scores/{score}/comments/{comment}/resolved.put.responses.403.description: Not
  granted to mark this comment as resolved
paths./scores/{score}/comments/{comment}/resolved.put.responses.404.description: Score
  or comment not found
paths./scores/{score}/comments/{comment}/resolved.put.responses.404.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/comments/{comment}/resolved.put.responses.default.description: Error
paths./scores/{score}/comments/{comment}/resolved.put.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/comments/{comment}/resolved.put.security.length: 1
paths./scores/{score}/comments/{comment}/resolved.put.security[0].OAuth2.length: 2
paths./scores/{score}/comments/{comment}/resolved.put.security[0].OAuth2[0]: scores.social
paths./scores/{score}/comments/{comment}/resolved.put.security[0].OAuth2[1]: scores
paths./scores/{score}/comments/{comment}/resolved.put.summary: Mark the comment as
  resolved
paths./scores/{score}/comments/{comment}/resolved.put.tags.length: 1
paths./scores/{score}/comments/{comment}/resolved.put.tags[0]: Score
paths./scores/{score}/fork.post.description: |
  This API call will make a copy of the last revision of the specified score and create a new score. The copy of the score will have a privacy set to `private`.

  When using a [Flat for Education](https://flat.io/edu) account, the inline and contextualized comments will be accessible in the child document.
paths./scores/{score}/fork.post.operationId: forkScore
paths./scores/{score}/fork.post.parameters.length: 3
paths./scores/{score}/fork.post.parameters[0].$ref: '#/parameters/score'
paths./scores/{score}/fork.post.parameters[1].$ref: '#/parameters/scoreSharingKey'
paths./scores/{score}/fork.post.parameters[2].in: body
paths./scores/{score}/fork.post.parameters[2].name: body
paths./scores/{score}/fork.post.parameters[2].required: true
paths./scores/{score}/fork.post.parameters[2].schema.$ref: '#/definitions/ScoreFork'
paths./scores/{score}/fork.post.responses.200.description: Score details
paths./scores/{score}/fork.post.responses.200.schema.$ref: '#/definitions/ScoreDetails'
paths./scores/{score}/fork.post.responses.402.description: Account overquota
paths./scores/{score}/fork.post.responses.402.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/fork.post.responses.403.description: Not granted to access to
  this score
paths./scores/{score}/fork.post.responses.403.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/fork.post.responses.404.description: Score not found
paths./scores/{score}/fork.post.responses.404.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/fork.post.responses.default.description: Error
paths./scores/{score}/fork.post.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/fork.post.security.length: 1
paths./scores/{score}/fork.post.security[0].OAuth2.length: 1
paths./scores/{score}/fork.post.security[0].OAuth2[0]: scores
paths./scores/{score}/fork.post.summary: Fork a score
paths./scores/{score}/fork.post.tags.length: 1
paths./scores/{score}/fork.post.tags[0]: Score
paths./scores/{score}/revisions.get.description: |
  When creating a score or saving a new version of a score, a revision is created in our storage. This method allows you to list all of them, sorted by last modification.

  Depending the plan of the account, this list can be trunked to the few last revisions.
paths./scores/{score}/revisions.get.operationId: getScoreRevisions
paths./scores/{score}/revisions.get.parameters.length: 2
paths./scores/{score}/revisions.get.parameters[0].$ref: '#/parameters/score'
paths./scores/{score}/revisions.get.parameters[1].$ref: '#/parameters/scoreSharingKey'
paths./scores/{score}/revisions.get.responses.200.description: List of revisions
paths./scores/{score}/revisions.get.responses.200.schema.items.$ref: '#/definitions/ScoreRevision'
paths./scores/{score}/revisions.get.responses.200.schema.type: array
paths./scores/{score}/revisions.get.responses.402.description: Account overquota
paths./scores/{score}/revisions.get.responses.402.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/revisions.get.responses.403.description: Not granted to access
  to this score
paths./scores/{score}/revisions.get.responses.403.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/revisions.get.responses.404.description: Score not found
paths./scores/{score}/revisions.get.responses.404.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/revisions.get.responses.default.description: Error
paths./scores/{score}/revisions.get.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/revisions.get.security.length: 1
paths./scores/{score}/revisions.get.security[0].OAuth2.length: 2
paths./scores/{score}/revisions.get.security[0].OAuth2[0]: scores
paths./scores/{score}/revisions.get.security[0].OAuth2[1]: scores.readonly
paths./scores/{score}/revisions.get.summary: List the revisions
paths./scores/{score}/revisions.get.tags.length: 1
paths./scores/{score}/revisions.get.tags[0]: Score
paths./scores/{score}/revisions.post.description: |
  Update a score by uploading a new revision for this one.
paths./scores/{score}/revisions.post.operationId: createScoreRevision
paths./scores/{score}/revisions.post.parameters.length: 2
paths./scores/{score}/revisions.post.parameters[0].$ref: '#/parameters/score'
paths./scores/{score}/revisions.post.parameters[1].in: body
paths./scores/{score}/revisions.post.parameters[1].name: body
paths./scores/{score}/revisions.post.parameters[1].required: true
paths./scores/{score}/revisions.post.parameters[1].schema.$ref: '#/definitions/ScoreRevisionCreation'
paths./scores/{score}/revisions.post.responses.200.description: The new created revision
  metadata
paths./scores/{score}/revisions.post.responses.200.schema.$ref: '#/definitions/ScoreRevision'
paths./scores/{score}/revisions.post.responses.402.description: Account overquota
paths./scores/{score}/revisions.post.responses.402.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/revisions.post.responses.403.description: Not granted to modify
  this score
paths./scores/{score}/revisions.post.responses.403.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/revisions.post.responses.404.description: Score not found
paths./scores/{score}/revisions.post.responses.404.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/revisions.post.responses.default.description: Error
paths./scores/{score}/revisions.post.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/revisions.post.security.length: 1
paths./scores/{score}/revisions.post.security[0].OAuth2.length: 1
paths./scores/{score}/revisions.post.security[0].OAuth2[0]: scores
paths./scores/{score}/revisions.post.summary: Create a new revision
paths./scores/{score}/revisions.post.tags.length: 1
paths./scores/{score}/revisions.post.tags[0]: Score
paths./scores/{score}/revisions/{revision}.get.description: |
  When creating a score or saving a new version of a score, a revision is created in our storage. This method allows you to get a specific
  revision metadata.
paths./scores/{score}/revisions/{revision}.get.operationId: getScoreRevision
paths./scores/{score}/revisions/{revision}.get.parameters.length: 3
paths./scores/{score}/revisions/{revision}.get.parameters[0].$ref: '#/parameters/score'
paths./scores/{score}/revisions/{revision}.get.parameters[1].$ref: '#/parameters/scoreRevision'
paths./scores/{score}/revisions/{revision}.get.parameters[2].$ref: '#/parameters/scoreSharingKey'
paths./scores/{score}/revisions/{revision}.get.responses.200.description: Revision
  metadata
paths./scores/{score}/revisions/{revision}.get.responses.200.schema.$ref: '#/definitions/ScoreRevision'
paths./scores/{score}/revisions/{revision}.get.responses.402.description: Account
  overquota
paths./scores/{score}/revisions/{revision}.get.responses.402.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/revisions/{revision}.get.responses.403.description: Not granted
  to access to this score
paths./scores/{score}/revisions/{revision}.get.responses.403.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/revisions/{revision}.get.responses.404.description: Score not
  found
paths./scores/{score}/revisions/{revision}.get.responses.404.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/revisions/{revision}.get.responses.default.description: Error
paths./scores/{score}/revisions/{revision}.get.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/revisions/{revision}.get.security.length: 1
paths./scores/{score}/revisions/{revision}.get.security[0].OAuth2.length: 2
paths./scores/{score}/revisions/{revision}.get.security[0].OAuth2[0]: scores
paths./scores/{score}/revisions/{revision}.get.security[0].OAuth2[1]: scores.readonly
paths./scores/{score}/revisions/{revision}.get.summary: Get a score revision
paths./scores/{score}/revisions/{revision}.get.tags.length: 1
paths./scores/{score}/revisions/{revision}.get.tags[0]: Score
paths./scores/{score}/revisions/{revision}/{format}.get.description: |
  Retrieve the file corresponding to a score revision (the following formats are available: Flat JSON/Adagio JSON `json`, MusicXML
  `mxl`/`xml`, MP3 `mp3`, WAV `wav`, MIDI `midi`, or a tumbnail of the first page `thumbnail.png`).
paths./scores/{score}/revisions/{revision}/{format}.get.operationId: getScoreRevisionData
paths./scores/{score}/revisions/{revision}/{format}.get.parameters.length: 6
paths./scores/{score}/revisions/{revision}/{format}.get.parameters[0].$ref: '#/parameters/score'
paths./scores/{score}/revisions/{revision}/{format}.get.parameters[1].$ref: '#/parameters/scoreRevision'
paths./scores/{score}/revisions/{revision}/{format}.get.parameters[2].$ref: '#/parameters/scoreSharingKey'
paths./scores/{score}/revisions/{revision}/{format}.get.parameters[3].description: The
  format of the file you will retrieve
paths./scores/{score}/revisions/{revision}/{format}.get.parameters[3].enum.length: 7
paths./scores/{score}/revisions/{revision}/{format}.get.parameters[3].enum[0]: json
paths./scores/{score}/revisions/{revision}/{format}.get.parameters[3].enum[1]: mxl
paths./scores/{score}/revisions/{revision}/{format}.get.parameters[3].enum[2]: xml
paths./scores/{score}/revisions/{revision}/{format}.get.parameters[3].enum[3]: mp3
paths./scores/{score}/revisions/{revision}/{format}.get.parameters[3].enum[4]: wav
paths./scores/{score}/revisions/{revision}/{format}.get.parameters[3].enum[5]: midi
paths./scores/{score}/revisions/{revision}/{format}.get.parameters[3].enum[6]: thumbnail.png
paths./scores/{score}/revisions/{revision}/{format}.get.parameters[3].in: path
paths./scores/{score}/revisions/{revision}/{format}.get.parameters[3].name: format
paths./scores/{score}/revisions/{revision}/{format}.get.parameters[3].required: true
paths./scores/{score}/revisions/{revision}/{format}.get.parameters[3].type: string
paths./scores/{score}/revisions/{revision}/{format}.get.parameters[4].description: |
  Only return files already generated and cached in Flat's production
  cache. If the file is not availabe, a 404 will be returned
paths./scores/{score}/revisions/{revision}/{format}.get.parameters[4].in: query
paths./scores/{score}/revisions/{revision}/{format}.get.parameters[4].name: onlyCached
paths./scores/{score}/revisions/{revision}/{format}.get.parameters[4].type: boolean
paths./scores/{score}/revisions/{revision}/{format}.get.parameters[5].description: |
  An optional a set of parts to be exported. This parameter must be
  specified with a list of integers. For example "1,2,5".
paths./scores/{score}/revisions/{revision}/{format}.get.parameters[5].in: query
paths./scores/{score}/revisions/{revision}/{format}.get.parameters[5].name: parts
paths./scores/{score}/revisions/{revision}/{format}.get.parameters[5].type: string
paths./scores/{score}/revisions/{revision}/{format}.get.produces.length: 7
paths./scores/{score}/revisions/{revision}/{format}.get.produces[0]: application/json
paths./scores/{score}/revisions/{revision}/{format}.get.produces[1]: application/vnd.recordare.musicxml+xml
paths./scores/{score}/revisions/{revision}/{format}.get.produces[2]: application/vnd.recordare.musicxml
paths./scores/{score}/revisions/{revision}/{format}.get.produces[3]: audio/mp3
paths./scores/{score}/revisions/{revision}/{format}.get.produces[4]: audio/wav
paths./scores/{score}/revisions/{revision}/{format}.get.produces[5]: audio/midi
paths./scores/{score}/revisions/{revision}/{format}.get.produces[6]: image/png
paths./scores/{score}/revisions/{revision}/{format}.get.responses.200.description: Revision
  metadata
paths./scores/{score}/revisions/{revision}/{format}.get.responses.200.schema.format: binary
paths./scores/{score}/revisions/{revision}/{format}.get.responses.200.schema.type: string
paths./scores/{score}/revisions/{revision}/{format}.get.responses.402.description: Account
  overquota
paths./scores/{score}/revisions/{revision}/{format}.get.responses.402.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/revisions/{revision}/{format}.get.responses.403.description: Not
  granted to access to this score
paths./scores/{score}/revisions/{revision}/{format}.get.responses.403.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/revisions/{revision}/{format}.get.responses.404.description: Score
  or associated file not found
paths./scores/{score}/revisions/{revision}/{format}.get.responses.404.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/revisions/{revision}/{format}.get.responses.default.description: Error
paths./scores/{score}/revisions/{revision}/{format}.get.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/revisions/{revision}/{format}.get.security.length: 1
paths./scores/{score}/revisions/{revision}/{format}.get.security[0].OAuth2.length: 2
paths./scores/{score}/revisions/{revision}/{format}.get.security[0].OAuth2[0]: scores
paths./scores/{score}/revisions/{revision}/{format}.get.security[0].OAuth2[1]: scores.readonly
paths./scores/{score}/revisions/{revision}/{format}.get.summary: Get a score revision
  data
paths./scores/{score}/revisions/{revision}/{format}.get.tags.length: 1
paths./scores/{score}/revisions/{revision}/{format}.get.tags[0]: Score
paths./scores/{score}/submissions.get.description: |
  This API call will list the different assignments submissions where the score is attached. This method can be used by anyone that are part of the organization and have at least read access to the document.
paths./scores/{score}/submissions.get.operationId: getScoreSubmissions
paths./scores/{score}/submissions.get.parameters.length: 1
paths./scores/{score}/submissions.get.parameters[0].$ref: '#/parameters/score'
paths./scores/{score}/submissions.get.responses.200.description: List of submissions
paths./scores/{score}/submissions.get.responses.200.schema.items.$ref: '#/definitions/AssignmentSubmission'
paths./scores/{score}/submissions.get.responses.200.schema.type: array
paths./scores/{score}/submissions.get.responses.default.description: Error
paths./scores/{score}/submissions.get.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./scores/{score}/submissions.get.security.length: 1
paths./scores/{score}/submissions.get.security[0].OAuth2.length: 2
paths./scores/{score}/submissions.get.security[0].OAuth2[0]: scores
paths./scores/{score}/submissions.get.security[0].OAuth2[1]: scores.readonly
paths./scores/{score}/submissions.get.summary: List submissions related to the score
paths./scores/{score}/submissions.get.tags.length: 2
paths./scores/{score}/submissions.get.tags[0]: Score
paths./scores/{score}/submissions.get.tags[1]: Class
paths./users/{user}.get.description: |
  Get a public profile of a Flat User.
paths./users/{user}.get.operationId: getUser
paths./users/{user}.get.parameters.length: 1
paths./users/{user}.get.parameters[0].description: |
  This route parameter is the unique identifier of the user. You can specify an email instead of an unique identifier. If you are executing this request authenticated, you can use `me` as a value instead of the current User unique identifier to work on the current authenticated user.
paths./users/{user}.get.parameters[0].in: path
paths./users/{user}.get.parameters[0].name: user
paths./users/{user}.get.parameters[0].required: true
paths./users/{user}.get.parameters[0].type: string
paths./users/{user}.get.responses.200.description: The user public details
paths./users/{user}.get.responses.200.schema.$ref: '#/definitions/UserPublic'
paths./users/{user}.get.responses.default.description: Error
paths./users/{user}.get.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./users/{user}.get.security.length: 1
paths./users/{user}.get.security[0].OAuth2.length: 2
paths./users/{user}.get.security[0].OAuth2[0]: account.public_profile
paths./users/{user}.get.security[0].OAuth2[1]: account.education_profile
paths./users/{user}.get.summary: Get a public user profile
paths./users/{user}.get.tags.length: 1
paths./users/{user}.get.tags[0]: User
paths./users/{user}/likes.get.operationId: gerUserLikes
paths./users/{user}/likes.get.parameters.length: 2
paths./users/{user}/likes.get.parameters[0].$ref: '#/parameters/user'
paths./users/{user}/likes.get.parameters[1].description: Return only the identifiers
  of the scores
paths./users/{user}/likes.get.parameters[1].in: query
paths./users/{user}/likes.get.parameters[1].name: ids
paths./users/{user}/likes.get.parameters[1].type: boolean
paths./users/{user}/likes.get.responses.200.description: List of liked scores
paths./users/{user}/likes.get.responses.200.schema.items.$ref: '#/definitions/ScoreDetails'
paths./users/{user}/likes.get.responses.200.schema.type: array
paths./users/{user}/likes.get.responses.default.description: Error
paths./users/{user}/likes.get.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./users/{user}/likes.get.security.length: 1
paths./users/{user}/likes.get.security[0].OAuth2.length: 1
paths./users/{user}/likes.get.security[0].OAuth2[0]: account.public_profile
paths./users/{user}/likes.get.summary: List liked scores
paths./users/{user}/likes.get.tags.length: 2
paths./users/{user}/likes.get.tags[0]: User
paths./users/{user}/likes.get.tags[1]: Score
paths./users/{user}/scores.get.description: |
  Get the list of scores owned by the User
paths./users/{user}/scores.get.operationId: getUserScores
paths./users/{user}/scores.get.parameters.length: 2
paths./users/{user}/scores.get.parameters[0].$ref: '#/parameters/user'
paths./users/{user}/scores.get.parameters[1].description: Filter the score forked
  from the score id `parent`
paths./users/{user}/scores.get.parameters[1].in: query
paths./users/{user}/scores.get.parameters[1].name: parent
paths./users/{user}/scores.get.parameters[1].type: string
paths./users/{user}/scores.get.responses.200.description: The user scores
paths./users/{user}/scores.get.responses.200.schema.items.$ref: '#/definitions/ScoreDetails'
paths./users/{user}/scores.get.responses.200.schema.type: array
paths./users/{user}/scores.get.responses.default.description: Error
paths./users/{user}/scores.get.responses.default.schema.$ref: '#/definitions/FlatErrorResponse'
paths./users/{user}/scores.get.security.length: 1
paths./users/{user}/scores.get.security[0].OAuth2.length: 2
paths./users/{user}/scores.get.security[0].OAuth2[0]: scores
paths./users/{user}/scores.get.security[0].OAuth2[1]: scores.readonly
paths./users/{user}/scores.get.summary: List user's scores
paths./users/{user}/scores.get.tags.length: 2
paths./users/{user}/scores.get.tags[0]: User
paths./users/{user}/scores.get.tags[1]: Score
produces.length: 1
produces[0]: application/json
schemes.length: 1
schemes[0]: https
securityDefinitions.OAuth2.authorizationUrl: https://flat.io/auth/oauth
securityDefinitions.OAuth2.description: |
  OAuth 2.0 authentication for your app or. Please only request the most restrictive and needed scopes. Using some of the scopes may require an additional review from our team. The Flat API supports **authorization code** and **implicit** flows.
securityDefinitions.OAuth2.flow: accessCode
securityDefinitions.OAuth2.scopes.account.education_profile: |
  Provides access to the basic person's education profile and public organization information.
securityDefinitions.OAuth2.scopes.account.public_profile: |
  Provides access to the basic person's public profile. Education profiles may be anonymized with this scope, you can request the scope `education_profile` to access to the a basic education account profile.
securityDefinitions.OAuth2.scopes.edu.admin: Full, permissive scope to manage all
  the admin of an organization.
securityDefinitions.OAuth2.scopes.edu.admin.lti: Access and manage the LTI Credentials
  for an organization.
securityDefinitions.OAuth2.scopes.edu.admin.lti.readonly: Read-only access to the
  LTI Credentials of an organization.
securityDefinitions.OAuth2.scopes.edu.admin.users: Access and manage the users and
  invitations of the organization.
securityDefinitions.OAuth2.scopes.edu.admin.users.readonly: Read-only access to the
  users and invitations of the organization.
securityDefinitions.OAuth2.scopes.edu.assignments: Read-write access to the assignments
  and submissions.
securityDefinitions.OAuth2.scopes.edu.assignments.readonly: Read-only access to the
  assignments and submissions.
securityDefinitions.OAuth2.scopes.edu.classes: Full, permissive scope to manage the
  classes.
securityDefinitions.OAuth2.scopes.edu.classes.readonly: Read-only access to the classes.
securityDefinitions.OAuth2.scopes.scores: |
  Full, permissive scope to access all of a user's scores.
securityDefinitions.OAuth2.scopes.scores.readonly: |
  Allows read-only access to all a user's scores. You won't need this scope to read public scores.
securityDefinitions.OAuth2.scopes.scores.social: |
  Allow to post comments and like scores
securityDefinitions.OAuth2.tokenUrl: https://api.flat.io/oauth/access_token
securityDefinitions.OAuth2.type: oauth2
swagger: "2.0"
tags.length: 6
tags[0].description: |
  These API endpoints are related to the Flat account you are currently using. When using an OAuth2 access token, you can use [`GET /me`](#operation/getAuthenticatedUser) to get information about the account.
tags[0].name: Account
tags[0].x-displayName: Flat Account
tags[1].description: |
  Sheet music is the main API object type available for all Flat account.

  Here is a typical lifecycle for a music score document on Flat:
    - An end user can **create a music score** or **import a document** using our [web interface](https://flat.io) or a third-party website/app (e.g. Google Drive) using this API (see [`POST /v2/scores`](#operation/createScore). The creation and import of music scores can be done with this single API endpoint. This one currently supports the [MusicXML](http://www.musicxml.com/) (compressed or not) and [MIDI](https://www.midi.org/specifications).
    - The scores from a single account can **be listed** with [`GET /users/{user}/scores`](#operation/getUserScores) as well of scores shared with a specific group with [`GET /groups/{group}/scores`](#operation/getGroupScores).
    - The metadata of a single score can be retrieved with [`GET /scores/{score}`](#operation/getScore).
    - Scores on Flat have **one or multiple revisions**: creating a new score will create a first revision. These **revisions can be listed** using [`GET /scores/{score}/revisions`](#operation/getScoreRevisions) and a specific **revision data can be downloaded** with [`GET /scores/{score}/revisions/{revision}/{format}`](#operation/getScoreRevisionData). New revisions can be created using our [sheet music editor](https://flat.io) or using [`POST /scores/{score}/revisions`](#operation/createScoreRevision) (this endpoint has similar parameters than during the score creation). The last revision of a document may not directly reflect the really last version of a music score: recent modifications can be made offline or not yet consolidated into a new revision. In average, a new revision is created every 100 modifications made with our editor.
    - Scores can be **shared publicly** by changing the privacy option with [`POST /scores/{score}`](#operation/editScore), or **individually shared** using the different collaborators API endpoints (see [`POST /scores/{score}/collaborators`](#operation/addScoreCollaborator)).
tags[1].name: Score
tags[1].x-displayName: Music scores
tags[2].description: Flat users
tags[2].name: User
tags[3].description: Flat for Education organizations
tags[3].name: Organization
tags[4].description: Flat for Education classes
tags[4].name: Class
tags[5].description: Flat Groups
tags[5].name: Group
