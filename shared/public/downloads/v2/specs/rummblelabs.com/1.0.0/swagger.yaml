swagger: '2.0'
schemes:
  - http
  - https
host: recsvm.rummblelabs.com
info:
  description: Seldon is an Open Predictive Platform that currently allows item recommendations and general predictive models to be deployed based on structured historical data.
  title: Seldon
  version: 1.0.0
  x-apisguru-categories:
    - machine_learning
  x-logo:
    url: 'https://api.apis.guru/v2/cache/logo/http_www.seldon.io_wp-content_uploads_2014_10_Seldon-Logo-trans.png'
  x-origin:
    - format: swagger
      url: 'http://recsvm.rummblelabs.com/api-spec/seldon.json'
      version: '2.0'
  x-preferred: true
  x-providerName: rummblelabs.com
produces:
  - application/json
paths:
  /actions:
    post:
      consumes:
        - application/json
      description: ''
      operationId: postAction
      parameters:
        - description: oauth token
          in: query
          name: oauth_token
          required: false
          type: string
        - description: the json details
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Action'
      responses:
        '400':
          description: Invalid parameters
      summary: post new action between a user and an item
      tags:
        - oauth actions
  /items:
    get:
      description: ''
      operationId: getItems
      parameters:
        - description: oauth token
          in: query
          name: oauth_token
          required: false
          type: string
        - description: get all attributes for item
          in: query
          name: full
          required: false
          type: boolean
        - description: keywords to match
          in: query
          name: name
          required: false
          type: string
        - description: limit items to a particular dimension
          in: query
          name: dimension
          required: false
          type: integer
        - description: limit items to a particular type
          in: query
          name: type
          required: false
          type: integer
        - description: limit number of items returned
          in: query
          name: limit
          required: false
          type: integer
      responses:
        '400':
          description: Invalid parameters
      summary: get items
      tags:
        - oauth items
    post:
      consumes:
        - application/json
      description: ''
      operationId: postItem
      parameters:
        - description: oauth token
          in: query
          name: oauth_token
          required: false
          type: string
        - description: the json details
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Item'
      responses:
        '400':
          description: Invalid parameters
      summary: post new item
      tags:
        - oauth items
    put:
      consumes:
        - application/json
      description: ''
      operationId: putItem
      parameters:
        - description: oauth token
          in: query
          name: oauth_token
          required: false
          type: string
        - description: the json details
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Item'
      responses:
        '400':
          description: Invalid parameters
      summary: update item
      tags:
        - oauth items
  /items/type:
    get:
      description: ''
      operationId: getItemTypes
      parameters:
        - description: oauth token
          in: query
          name: oauth_token
          required: false
          type: string
      responses:
        '400':
          description: Invalid parameters
      summary: get item type
      tags:
        - oauth items
  '/items/{itemId}':
    get:
      description: ''
      operationId: getItem
      parameters:
        - description: oauth token
          in: query
          name: oauth_token
          required: false
          type: string
        - description: the item id to get
          in: path
          name: itemId
          required: true
          type: string
        - description: get all attributes for item
          in: query
          name: full
          required: false
          type: boolean
      responses:
        '400':
          description: Invalid parameters
      summary: get item
      tags:
        - oauth items
  /js/action/new:
    get:
      consumes:
        - application/json
      description: ''
      operationId: addAction
      parameters:
        - default: uggyecofcz
          description: consumer key
          in: query
          name: consumer_key
          required: true
          type: string
        - description: user id
          in: query
          name: user
          required: true
          type: string
        - description: item id
          in: query
          name: item
          required: true
          type: string
        - description: type
          in: query
          name: type
          required: true
          type: string
        - description: JSONP callback
          in: query
          name: jsonpCallback
          required: true
          type: string
        - description: time
          in: query
          name: timestamp
          required: false
          type: integer
      responses:
        '400':
          description: Invalid parameters
      summary: Add a user interaction
      tags:
        - js actions
  /js/recommendations:
    get:
      description: ''
      operationId: getRecommendation
      parameters:
        - default: uggyecofcz
          description: consumer key
          in: query
          name: consumer_key
          required: true
          type: string
        - description: user id
          in: query
          name: user
          required: true
          type: string
        - description: currently viewed item id
          in: query
          name: item
          required: false
          type: string
        - description: max number of recommendations to return
          in: query
          name: limit
          required: false
          type: integer
        - description: 'get recommendations for a particular item dimension (e.g., just sports articles)'
          in: query
          name: dimension
          required: false
          type: integer
        - description: the fields to return
          format: command separated list
          in: query
          name: attributes
          required: false
          type: string
        - description: override default algorithms with specified algorithms
          in: query
          name: algorithms
          required: false
          type: string
        - description: JSONP callback
          in: query
          name: jsonpCallback
          required: true
          type: string
      responses:
        '400':
          description: Invalid parameters
      summary: Get recommendations for a user
      tags:
        - js recommendations
  /token:
    get:
      description: ''
      operationId: getToken
      parameters:
        - description: consumer key
          in: query
          name: consumer_key
          required: true
          type: string
        - description: consumer secret
          in: query
          name: consumer_secret
          required: true
          type: string
      responses:
        '400':
          description: Invalid parameters
      summary: get token
      tags:
        - token
  /users:
    get:
      description: ''
      operationId: getUsers
      parameters:
        - description: oauth token
          in: query
          name: oauth_token
          required: false
          type: string
        - description: get all attributes for user
          in: query
          name: full
          required: false
          type: boolean
        - description: keywords to match
          in: query
          name: name
          required: false
          type: string
        - description: limit number of users returned
          in: query
          name: limit
          required: false
          type: integer
      responses:
        '400':
          description: Invalid parameters
      summary: get users
      tags:
        - oauth users
    post:
      consumes:
        - application/json
      description: ''
      operationId: postUser
      parameters:
        - description: oauth token
          in: query
          name: oauth_token
          required: false
          type: string
        - description: the json details
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '400':
          description: Invalid parameters
      summary: post new user
      tags:
        - oauth users
    put:
      consumes:
        - application/json
      description: ''
      operationId: updateUser
      parameters:
        - description: oauth token
          in: query
          name: oauth_token
          required: false
          type: string
        - description: the json details
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '400':
          description: Invalid parameters
      summary: update user
      tags:
        - oauth users
  '/users/{userId}':
    get:
      description: ''
      operationId: getUser
      parameters:
        - description: oauth token
          in: query
          name: oauth_token
          required: false
          type: string
        - description: the user id to get
          in: path
          name: userId
          required: true
          type: string
        - description: get all attributes for user
          in: query
          name: full
          required: false
          type: boolean
      responses:
        '400':
          description: Invalid parameters
      summary: get a user
      tags:
        - oauth users
  '/users/{userId}/actions':
    get:
      description: ''
      operationId: getUserActions
      parameters:
        - description: oauth token
          in: query
          name: oauth_token
          required: false
          type: string
        - description: the user id to get
          in: path
          name: userId
          required: true
          type: string
        - description: get all attributes for user
          in: query
          name: full
          required: false
          type: boolean
        - description: limit number of actions returned
          in: query
          name: limit
          required: false
          type: integer
      responses:
        '400':
          description: Invalid parameters
      summary: get a user's recent actions
      tags:
        - oauth users
        - oauth actions
  '/users/{userId}/recommendations':
    get:
      description: ''
      operationId: getUserRecommendations
      parameters:
        - description: oauth token
          in: query
          name: oauth_token
          required: false
          type: string
        - description: the user id to get
          in: path
          name: userId
          required: true
          type: string
        - description: get all attributes for user
          in: query
          name: full
          required: false
          type: boolean
        - description: limit number of actions returned
          in: query
          name: limit
          required: false
          type: integer
        - description: 'get recommendations for a particular item dimension (e.g., just sports articles)'
          in: query
          name: dimension
          required: false
          type: integer
        - description: override default algorithms with specified algorithms
          in: query
          name: algorithms
          required: false
          type: string
      responses:
        '400':
          description: Invalid parameters
      summary: get recommendations for a user
      tags:
        - oauth users
        - oauth recommendations
definitions:
  Action:
    properties:
      item:
        example: item1234
        type: string
      type:
        description: action type
        type: integer
      user:
        example: user1234
        type: string
      value:
        description: action value (e.g. a rating)
        type: number
    required:
      - user
      - item
      - type
  AttributesName:
    properties:
      attrName1:
        example: attrValue1
        type: string
      attrName2:
        example: attrValue2
        type: string
  Item:
    properties:
      attributesName:
        $ref: '#/definitions/AttributesName'
      id:
        example: myid1234
        type: string
      type:
        description: type of item
        example: 1
        type: integer
    required:
      - id
  User:
    properties:
      active:
        description: whether user is active
        type: boolean
      attributesName:
        $ref: '#/definitions/AttributesName'
      id:
        example: myid1234
        type: string
      username:
        description: name of user
        example: Joe Bloggs
        type: string
    required:
      - id
