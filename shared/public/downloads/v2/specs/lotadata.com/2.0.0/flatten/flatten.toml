basePath = "/v2"
"definitions.Address.description" = "Physical world addresss"
"definitions.Address.properties.country.type" = "string"
"definitions.Address.properties.formatted.description" = "Address formatted for display as a single string"
"definitions.Address.properties.formatted.type" = "string"
"definitions.Address.properties.locality.description" = "City or town"
"definitions.Address.properties.locality.type" = "string"
"definitions.Address.properties.postalCode.type" = "string"
"definitions.Address.properties.region.type" = "string"
"definitions.Address.properties.street.description" = "Street portion of the address, may sometimes be a common name of the place"
"definitions.Address.properties.street.type" = "string"
"definitions.Address.properties.unit.type" = "string"
"definitions.ContactDetail.properties.displayPhone.type" = "string"
"definitions.ContactDetail.properties.email.type" = "string"
"definitions.ContactDetail.properties.facebookUrl.type" = "string"
"definitions.ContactDetail.properties.instagramName.type" = "string"
"definitions.ContactDetail.properties.lastfmUrl.type" = "string"
"definitions.ContactDetail.properties.soundcloudUrl.type" = "string"
"definitions.ContactDetail.properties.spotifyUrl.type" = "string"
"definitions.ContactDetail.properties.twitterName.type" = "string"
"definitions.ContactDetail.properties.url.type" = "string"
"definitions.ContactDetail.properties.youtubeUrl.type" = "string"
"definitions.Error.properties.cause.properties.expected.type" = "string"
"definitions.Error.properties.cause.properties.path.type" = "string"
"definitions.Error.properties.cause.properties.rule.type" = "string"
"definitions.Error.properties.cause.properties.value.type" = "string"
"definitions.Error.properties.message.type" = "string"
"definitions.Error.properties.status.format" = "int32"
"definitions.Error.properties.status.type" = "integer"
"definitions.Error.properties.tracking.properties.id.type" = "string"
"definitions.Error.properties.tracking.properties.session.type" = "string"
"definitions.EventOccurenceDetail.description" = "Event Occurrence Detail limited to requested fieldset."
"definitions.EventOccurenceDetail.properties.@id.description" = "Unique event id"
"definitions.EventOccurenceDetail.properties.@id.type" = "string"
"definitions.EventOccurenceDetail.properties.@type.description" = "Type of occurrence. You will usually see Organized as the type for most events. While Virtual events will get their own Virtual type."
"definitions.EventOccurenceDetail.properties.@type.enum.length" = 4
"definitions.EventOccurenceDetail.properties.@type.enum[0]" = "Organized"
"definitions.EventOccurenceDetail.properties.@type.enum[1]" = "Screening"
"definitions.EventOccurenceDetail.properties.@type.enum[2]" = "Environmental"
"definitions.EventOccurenceDetail.properties.@type.enum[3]" = "Virtual"
"definitions.EventOccurenceDetail.properties.@type.type" = "string"
"definitions.EventOccurenceDetail.properties.activity.description" = "Associated ActivityType entries"
"definitions.EventOccurenceDetail.properties.activity.items.$ref" = "#/definitions/FeatureReference"
"definitions.EventOccurenceDetail.properties.activity.type" = "array"
"definitions.EventOccurenceDetail.properties.ambience.description" = "expected mood and feel of the event"
"definitions.EventOccurenceDetail.properties.ambience.items.$ref" = "#/definitions/FeatureReference"
"definitions.EventOccurenceDetail.properties.ambience.type" = "array"
"definitions.EventOccurenceDetail.properties.at.$ref" = "#/definitions/PlaceReference"
"definitions.EventOccurenceDetail.properties.at.description" = "Reference to the location where event takes place"
"definitions.EventOccurenceDetail.properties.awayTeam.$ref" = "#/definitions/FeatureReference"
"definitions.EventOccurenceDetail.properties.awayTeam.description" = "other SportsTeam playing"
"definitions.EventOccurenceDetail.properties.category.description" = "Associated EventCategory. May be multiple, such as Charity Music event"
"definitions.EventOccurenceDetail.properties.category.items.$ref" = "#/definitions/FeatureReference"
"definitions.EventOccurenceDetail.properties.category.type" = "array"
"definitions.EventOccurenceDetail.properties.contactPoint.$ref" = "#/definitions/ContactDetail"
"definitions.EventOccurenceDetail.properties.contactPoint.description" = "Social and contact references"
"definitions.EventOccurenceDetail.properties.description.description" = "Full description in plain text"
"definitions.EventOccurenceDetail.properties.description.type" = "string"
"definitions.EventOccurenceDetail.properties.doorTime.description" = "Time when the admission starts"
"definitions.EventOccurenceDetail.properties.doorTime.format" = "date-time"
"definitions.EventOccurenceDetail.properties.doorTime.type" = "string"
"definitions.EventOccurenceDetail.properties.duration.description" = "Duration of the event in ISO-8601 format (PT45M) - 45 minutes"
"definitions.EventOccurenceDetail.properties.duration.type" = "string"
"definitions.EventOccurenceDetail.properties.endApprox.description" = "endDate is approximated based on historical data"
"definitions.EventOccurenceDetail.properties.endApprox.type" = "boolean"
"definitions.EventOccurenceDetail.properties.endDate.description" = "Time when the event ends, if known"
"definitions.EventOccurenceDetail.properties.endDate.format" = "date-time"
"definitions.EventOccurenceDetail.properties.endDate.type" = "string"
"definitions.EventOccurenceDetail.properties.extTaxonomy.description" = "extended taxonomy such as IAB and Google AdWords"
"definitions.EventOccurenceDetail.properties.extTaxonomy.items.$ref" = "#/definitions/FeatureReference"
"definitions.EventOccurenceDetail.properties.extTaxonomy.type" = "array"
"definitions.EventOccurenceDetail.properties.genre.description" = "applicable Genres. (Tier 2 taxonomy). May include related genres from categories, not deemed as primary"
"definitions.EventOccurenceDetail.properties.genre.items.$ref" = "#/definitions/FeatureReference"
"definitions.EventOccurenceDetail.properties.genre.type" = "array"
"definitions.EventOccurenceDetail.properties.headline.description" = "Optional short description in plain text"
"definitions.EventOccurenceDetail.properties.headline.type" = "string"
"definitions.EventOccurenceDetail.properties.homeTeam.$ref" = "#/definitions/FeatureReference"
"definitions.EventOccurenceDetail.properties.homeTeam.description" = "SportsTeam playing at home field"
"definitions.EventOccurenceDetail.properties.htmlDescription.description" = "Full description with HTML formatting, where available"
"definitions.EventOccurenceDetail.properties.htmlDescription.type" = "string"
"definitions.EventOccurenceDetail.properties.image.$ref" = "#/definitions/ImageMeta"
"definitions.EventOccurenceDetail.properties.image.description" = "Primary image"
"definitions.EventOccurenceDetail.properties.inLanguage.$ref" = "#/definitions/FeatureReference"
"definitions.EventOccurenceDetail.properties.inLanguage.description" = "Primary language of the event"
"definitions.EventOccurenceDetail.properties.name.description" = "Name of the event in plain text"
"definitions.EventOccurenceDetail.properties.name.type" = "string"
"definitions.EventOccurenceDetail.properties.noTime.description" = "Specific time of the event is unknown. (shown only when true)"
"definitions.EventOccurenceDetail.properties.noTime.type" = "boolean"
"definitions.EventOccurenceDetail.properties.offers.description" = "Ticketing options"
"definitions.EventOccurenceDetail.properties.offers.items.$ref" = "#/definitions/TicketOffer"
"definitions.EventOccurenceDetail.properties.offers.type" = "array"
"definitions.EventOccurenceDetail.properties.onDemand.description" = "This event can start at any time during specified window"
"definitions.EventOccurenceDetail.properties.onDemand.type" = "boolean"
"definitions.EventOccurenceDetail.properties.performer.description" = "List of Personas significant for this event"
"definitions.EventOccurenceDetail.properties.performer.items.$ref" = "#/definitions/FeatureReference"
"definitions.EventOccurenceDetail.properties.performer.type" = "array"
"definitions.EventOccurenceDetail.properties.photo.description" = "Primary image"
"definitions.EventOccurenceDetail.properties.photo.items.$ref" = "#/definitions/ImageMeta"
"definitions.EventOccurenceDetail.properties.photo.type" = "array"
"definitions.EventOccurenceDetail.properties.startDate.description" = "Time when the event starts"
"definitions.EventOccurenceDetail.properties.startDate.format" = "date-time"
"definitions.EventOccurenceDetail.properties.startDate.type" = "string"
"definitions.EventOccurenceDetail.properties.superEvent.$ref" = "#/definitions/OccurrenceReference"
"definitions.EventOccurenceDetail.properties.superEvent.description" = "Parent id, if this event is part of a series of a group"
"definitions.EventOccurenceDetail.properties.updated.description" = "Timestamp of last modification (UTC)"
"definitions.EventOccurenceDetail.properties.updated.format" = "date-time"
"definitions.EventOccurenceDetail.properties.updated.type" = "string"
"definitions.EventOccurenceDetail.properties.url.description" = "Primary url for published event"
"definitions.EventOccurenceDetail.properties.url.type" = "string"
"definitions.EventOccurenceDetail.properties.workPerformed.description" = "Subject matter of the event"
"definitions.EventOccurenceDetail.properties.workPerformed.items.$ref" = "#/definitions/FeatureReference"
"definitions.EventOccurenceDetail.properties.workPerformed.type" = "array"
"definitions.EventsQuery.description" = "Specific filters understood and executed for this query. If your parameter is not visible here, then consult the documentation for correct usage."
"definitions.EventsQuery.properties.activity.description" = "required activity types"
"definitions.EventsQuery.properties.activity.items.type" = "string"
"definitions.EventsQuery.properties.activity.type" = "array"
"definitions.EventsQuery.properties.category.description" = "required categories"
"definitions.EventsQuery.properties.category.items.type" = "string"
"definitions.EventsQuery.properties.category.type" = "array"
"definitions.EventsQuery.properties.limit.description" = "maximum number of matches to return"
"definitions.EventsQuery.properties.limit.type" = "integer"
"definitions.EventsSearchResponse.properties.events.items.$ref" = "#/definitions/EventOccurenceDetail"
"definitions.EventsSearchResponse.properties.events.type" = "array"
"definitions.EventsSearchResponse.properties.query.$ref" = "#/definitions/EventsQuery"
"definitions.EventsSearchResponse.properties.stats.$ref" = "#/definitions/SearchStatsMetaResult"
"definitions.FeatureReference.description" = "Identifier for a Feature"
"definitions.FeatureReference.properties.@id.description" = "Feature id"
"definitions.FeatureReference.properties.@id.type" = "string"
"definitions.FeatureReference.properties.@type.description" = "Type of specific feature or Taxonomy node such as EventCategory, SportsTeam, Persona."
"definitions.FeatureReference.properties.@type.type" = "string"
"definitions.FeatureReference.properties.name.description" = "Display name of the feature"
"definitions.FeatureReference.properties.name.type" = "string"
"definitions.GeoJsonObject.description" = "Shape defined per GeoJSON spec"
"definitions.GeoPt.properties.lat.type" = "number"
"definitions.GeoPt.properties.lon.type" = "number"
"definitions.ImageMeta.description" = "Image meta data"
"definitions.ImageMeta.properties.@id.type" = "string"
"definitions.ImageMeta.properties.caption.type" = "string"
"definitions.ImageMeta.properties.height.type" = "integer"
"definitions.ImageMeta.properties.url.type" = "string"
"definitions.ImageMeta.properties.width.type" = "integer"
"definitions.OccurrenceReference.properties.@id.type" = "string"
"definitions.OccurrenceReference.properties.name.type" = "string"
"definitions.OccurrenceReference.properties.startDate.description" = "Time when the event starts"
"definitions.OccurrenceReference.properties.startDate.format" = "date-time"
"definitions.OccurrenceReference.properties.startDate.type" = "string"
"definitions.PlaceDetail.allOf.length" = 1
"definitions.PlaceDetail.allOf[0].$ref" = "#/definitions/PlaceReference"
"definitions.PlaceDetail.properties.ambience.description" = "expected mood and feel of the event"
"definitions.PlaceDetail.properties.ambience.items.$ref" = "#/definitions/FeatureReference"
"definitions.PlaceDetail.properties.ambience.type" = "array"
"definitions.PlaceDetail.properties.category.description" = "Associated PlaceCategory. May be multiple (Tier 1)"
"definitions.PlaceDetail.properties.category.items.$ref" = "#/definitions/FeatureReference"
"definitions.PlaceDetail.properties.category.type" = "array"
"definitions.PlaceDetail.properties.contact.$ref" = "#/definitions/ContactDetail"
"definitions.PlaceDetail.properties.function.description" = "PlaceFunction. (Tier 2 taxonomy)"
"definitions.PlaceDetail.properties.function.items.$ref" = "#/definitions/FeatureReference"
"definitions.PlaceDetail.properties.function.type" = "array"
"definitions.PlaceDetail.properties.openingHours.items.$ref" = "#/definitions/Timeframe"
"definitions.PlaceDetail.properties.openingHours.type" = "array"
"definitions.PlaceDetail.properties.photo.items.$ref" = "#/definitions/ImageMeta"
"definitions.PlaceDetail.properties.photo.type" = "array"
"definitions.PlaceReference.description" = "Unique Location"
"definitions.PlaceReference.properties.@id.type" = "string"
"definitions.PlaceReference.properties.@type.description" = "Type of place where Place is a physical address, LocalBusiness is any type of comercial property, AdministrativeArea is a political or colloquial area, and Virtual is out of this world"
"definitions.PlaceReference.properties.@type.enum.length" = 8
"definitions.PlaceReference.properties.@type.enum[0]" = "Place"
"definitions.PlaceReference.properties.@type.enum[1]" = "LocalBusiness"
"definitions.PlaceReference.properties.@type.enum[2]" = "AdministrativeArea"
"definitions.PlaceReference.properties.@type.enum[3]" = "TouristAttraction"
"definitions.PlaceReference.properties.@type.enum[4]" = "Landform"
"definitions.PlaceReference.properties.@type.enum[5]" = "LandmarksOrHistoricalBuildings"
"definitions.PlaceReference.properties.@type.enum[6]" = "Residence"
"definitions.PlaceReference.properties.@type.enum[7]" = "Virtual"
"definitions.PlaceReference.properties.@type.type" = "string"
"definitions.PlaceReference.properties.address.$ref" = "#/definitions/Address"
"definitions.PlaceReference.properties.address.description" = "Address of the physical place"
"definitions.PlaceReference.properties.geo.$ref" = "#/definitions/GeoPt"
"definitions.PlaceReference.properties.geometry.$ref" = "#/definitions/GeoJsonObject"
"definitions.PlaceReference.properties.location.$ref" = "#/definitions/VirtualLocation"
"definitions.PlaceReference.properties.location.description" = "applies to Virtual places"
"definitions.PlaceReference.properties.logo.$ref" = "#/definitions/ImageMeta"
"definitions.PlaceReference.properties.name.type" = "string"
"definitions.PlaceReference.properties.tag.items.$ref" = "#/definitions/FeatureReference"
"definitions.PlaceReference.properties.tag.type" = "array"
"definitions.PlacesQuery.description" = "Specific filters understood and executed for this query. If your parameter is not visible here, then consult the documentation for correct usage."
"definitions.PlacesQuery.properties.address.$ref" = "#/definitions/Address"
"definitions.PlacesQuery.properties.address.description" = "Address filter"
"definitions.PlacesQuery.properties.category.description" = "required categories"
"definitions.PlacesQuery.properties.category.items.type" = "string"
"definitions.PlacesQuery.properties.category.type" = "array"
"definitions.PlacesQuery.properties.limit.description" = "maximum number of matches to return"
"definitions.PlacesQuery.properties.limit.type" = "integer"
"definitions.PlacesSearchResponse.properties.places.items.$ref" = "#/definitions/PlaceDetail"
"definitions.PlacesSearchResponse.properties.places.type" = "array"
"definitions.PlacesSearchResponse.properties.query.$ref" = "#/definitions/PlacesQuery"
"definitions.PlacesSearchResponse.properties.stats.$ref" = "#/definitions/SearchStatsMetaResult"
"definitions.SearchStatsMetaResult.description" = "Shows invocation details about the query. Running query again, could produce different results"
"definitions.SearchStatsMetaResult.properties.count.description" = "Total matches for the query"
"definitions.SearchStatsMetaResult.properties.count.type" = "integer"
"definitions.SearchStatsMetaResult.properties.fieldset.description" = "Specific fields returned by this query"
"definitions.SearchStatsMetaResult.properties.fieldset.type" = "string"
"definitions.SearchStatsMetaResult.properties.runtime.description" = "Server side run time in msec for this request"
"definitions.SearchStatsMetaResult.properties.runtime.type" = "integer"
"definitions.TicketOffer.properties.availability.enum.length" = 8
"definitions.TicketOffer.properties.availability.enum[0]" = "Discontinued"
"definitions.TicketOffer.properties.availability.enum[1]" = "InStock"
"definitions.TicketOffer.properties.availability.enum[2]" = "InStoreOnly"
"definitions.TicketOffer.properties.availability.enum[3]" = "LimitedAvailability"
"definitions.TicketOffer.properties.availability.enum[4]" = "OnlineOnly"
"definitions.TicketOffer.properties.availability.enum[5]" = "OutOfStock"
"definitions.TicketOffer.properties.availability.enum[6]" = "PreOrder"
"definitions.TicketOffer.properties.availability.enum[7]" = "SoldOut"
"definitions.TicketOffer.properties.availability.type" = "string"
"definitions.TicketOffer.properties.category.enum.length" = 6
"definitions.TicketOffer.properties.category.enum[0]" = "primary"
"definitions.TicketOffer.properties.category.enum[1]" = "secondary"
"definitions.TicketOffer.properties.category.enum[2]" = "presale"
"definitions.TicketOffer.properties.category.enum[3]" = "member"
"definitions.TicketOffer.properties.category.enum[4]" = "premium"
"definitions.TicketOffer.properties.category.enum[5]" = "unknown"
"definitions.TicketOffer.properties.category.type" = "string"
"definitions.TicketOffer.properties.donation.type" = "boolean"
"definitions.TicketOffer.properties.fee.type" = "number"
"definitions.TicketOffer.properties.highPrice.type" = "number"
"definitions.TicketOffer.properties.inventory.properties.available.type" = "integer"
"definitions.TicketOffer.properties.inventory.properties.total.type" = "integer"
"definitions.TicketOffer.properties.inventory.type" = "object"
"definitions.TicketOffer.properties.name.type" = "string"
"definitions.TicketOffer.properties.price.type" = "number"
"definitions.TicketOffer.properties.priceCurrency.type" = "string"
"definitions.TicketOffer.properties.priceUnknown.type" = "boolean"
"definitions.TicketOffer.properties.url.type" = "string"
"definitions.Timeframe.properties.closes.description" = "Close time for all days mentioned in the dayOfWeek. If close time is less than open, then it is following day."
"definitions.Timeframe.properties.closes.format" = "date-time"
"definitions.Timeframe.properties.closes.type" = "string"
"definitions.Timeframe.properties.dayOfWeek.description" = "ISO day of the week. 1- Monday, 7- Sunday"
"definitions.Timeframe.properties.dayOfWeek.items.type" = "integer"
"definitions.Timeframe.properties.dayOfWeek.type" = "array"
"definitions.Timeframe.properties.open247.description" = "Open around the clock"
"definitions.Timeframe.properties.open247.type" = "boolean"
"definitions.Timeframe.properties.opens.description" = "Open time for all days mentioned in the dayOfWeek"
"definitions.Timeframe.properties.opens.format" = "date-time"
"definitions.Timeframe.properties.opens.type" = "string"
"definitions.VirtualLocation.description" = "Virtual Address"
"definitions.VirtualLocation.properties.domain.type" = "string"
"definitions.VirtualLocation.properties.platform.type" = "string"
"definitions.VirtualLocation.properties.url.type" = "string"
host = "api2.lotadata.com"
"info.description" = "Access the most exhaustive, accurate and up-to-date collection of global and hyper-local geocoded events and activities across a wide range of categories and genres"
"info.title" = "LotaData"
"info.version" = "2.0.0"
"info.x-apisguru-categories.length" = 1
"info.x-apisguru-categories[0]" = "location"
"info.x-logo.backgroundColor" = "#FFFFFF"
"info.x-logo.url" = "https://api.apis.guru/v2/cache/logo/https_pbs.twimg.com_profile_images_664666044754079744_OtP5eqwm_400x400.png"
"info.x-origin.length" = 1
"info.x-origin[0].format" = "swagger"
"info.x-origin[0].url" = "https://developers.lotadata.com/swagger/spec/apiv2.json"
"info.x-origin[0].version" = "2.0"
"info.x-preferred" = true
"info.x-providerName" = "lotadata.com"
"paths./events.get.parameters.length" = 18
"paths./events.get.parameters[0].collectionFormat" = "multi"
"paths./events.get.parameters[0].description" = "List of required EventCategory ids (Tier 1)"
"paths./events.get.parameters[0].in" = "query"
"paths./events.get.parameters[0].items.type" = "string"
"paths./events.get.parameters[0].name" = "category"
"paths./events.get.parameters[0].type" = "array"
"paths./events.get.parameters[10].description" = "latitude,longitude of the origin point"
"paths./events.get.parameters[10].in" = "query"
"paths./events.get.parameters[10].name" = "center"
"paths./events.get.parameters[10].type" = "string"
"paths./events.get.parameters[11].description" = "Distance from origin in meters"
"paths./events.get.parameters[11].in" = "query"
"paths./events.get.parameters[11].name" = "radius"
"paths./events.get.parameters[11].type" = "integer"
"paths./events.get.parameters[12].collectionFormat" = "multi"
"paths./events.get.parameters[12].description" = "Corner of a bounding box (lat,lng). Requires 0 or 2 pairs"
"paths./events.get.parameters[12].in" = "query"
"paths./events.get.parameters[12].items.type" = "string"
"paths./events.get.parameters[12].name" = "bbox"
"paths./events.get.parameters[12].required" = false
"paths./events.get.parameters[12].type" = "array"
"paths./events.get.parameters[13].collectionFormat" = "multi"
"paths./events.get.parameters[13].description" = "Closed custom polygon. Ordered list of lat,lng pairs"
"paths./events.get.parameters[13].in" = "query"
"paths./events.get.parameters[13].items.type" = "string"
"paths./events.get.parameters[13].name" = "polygon"
"paths./events.get.parameters[13].required" = false
"paths./events.get.parameters[13].type" = "array"
"paths./events.get.parameters[14].description" = "Search within specified geopolitical place id"
"paths./events.get.parameters[14].in" = "query"
"paths./events.get.parameters[14].name" = "within"
"paths./events.get.parameters[14].required" = false
"paths./events.get.parameters[14].type" = "string"
"paths./events.get.parameters[15].description" = "Return results starting at specified offset"
"paths./events.get.parameters[15].in" = "query"
"paths./events.get.parameters[15].name" = "offset"
"paths./events.get.parameters[15].type" = "integer"
"paths./events.get.parameters[16].description" = "Max results to return"
"paths./events.get.parameters[16].in" = "query"
"paths./events.get.parameters[16].name" = "limit"
"paths./events.get.parameters[16].type" = "integer"
"paths./events.get.parameters[17].default" = "context"
"paths./events.get.parameters[17].description" = "Return results starting at specified offset (summary, context, detail)"
"paths./events.get.parameters[17].enum.length" = 4
"paths./events.get.parameters[17].enum[0]" = "summary"
"paths./events.get.parameters[17].enum[1]" = "detail"
"paths./events.get.parameters[17].enum[2]" = "context"
"paths./events.get.parameters[17].enum[3]" = "minicontext"
"paths./events.get.parameters[17].in" = "query"
"paths./events.get.parameters[17].name" = "fieldset"
"paths./events.get.parameters[17].required" = true
"paths./events.get.parameters[17].type" = "string"
"paths./events.get.parameters[1].description" = "List of required activity type ids (compliment to category)"
"paths./events.get.parameters[1].in" = "query"
"paths./events.get.parameters[1].name" = "activity"
"paths./events.get.parameters[1].type" = "string"
"paths./events.get.parameters[2].description" = "List of required ambience ids"
"paths./events.get.parameters[2].in" = "query"
"paths./events.get.parameters[2].name" = "ambience"
"paths./events.get.parameters[2].type" = "string"
"paths./events.get.parameters[3].description" = "List of required genre ids"
"paths./events.get.parameters[3].in" = "query"
"paths./events.get.parameters[3].name" = "genre"
"paths./events.get.parameters[3].type" = "string"
"paths./events.get.parameters[4].description" = "Matching on event and place names"
"paths./events.get.parameters[4].in" = "query"
"paths./events.get.parameters[4].name" = "name"
"paths./events.get.parameters[4].type" = "string"
"paths./events.get.parameters[5].description" = "Text query matching titles, description, various text, tags, category"
"paths./events.get.parameters[5].in" = "query"
"paths./events.get.parameters[5].name" = "q"
"paths./events.get.parameters[5].type" = "string"
"paths./events.get.parameters[6].description" = "Start on or after date specified (2015-10-16)"
"paths./events.get.parameters[6].in" = "query"
"paths./events.get.parameters[6].name" = "from_day"
"paths./events.get.parameters[6].required" = false
"paths./events.get.parameters[6].type" = "string"
"paths./events.get.parameters[7].description" = "Start on or before date specified (2015-10-16)"
"paths./events.get.parameters[7].in" = "query"
"paths./events.get.parameters[7].name" = "to_day"
"paths./events.get.parameters[7].required" = false
"paths./events.get.parameters[7].type" = "string"
"paths./events.get.parameters[8].description" = "Min capacity at location"
"paths./events.get.parameters[8].format" = "integer"
"paths./events.get.parameters[8].in" = "query"
"paths./events.get.parameters[8].name" = "capacity_min"
"paths./events.get.parameters[8].required" = false
"paths./events.get.parameters[8].type" = "number"
"paths./events.get.parameters[9].description" = "Min capacity at location"
"paths./events.get.parameters[9].format" = "integer"
"paths./events.get.parameters[9].in" = "query"
"paths./events.get.parameters[9].name" = "capacity_max"
"paths./events.get.parameters[9].required" = false
"paths./events.get.parameters[9].type" = "number"
"paths./events.get.responses.200.description" = "List of matching events"
"paths./events.get.responses.200.schema.$ref" = "#/definitions/EventsSearchResponse"
"paths./events.get.responses.400.description" = "Unexpected error"
"paths./events.get.responses.400.schema.$ref" = "#/definitions/Error"
"paths./events.get.summary" = "Find event occurrences in the area. Returns results at specific place and time, event groups are expanded for every occurrence."
"paths./events.get.tags.length" = 1
"paths./events.get.tags[0]" = "Events"
"paths./events/{id}.get.parameters.length" = 2
"paths./events/{id}.get.parameters[0].description" = "event @id"
"paths./events/{id}.get.parameters[0].in" = "path"
"paths./events/{id}.get.parameters[0].name" = "id"
"paths./events/{id}.get.parameters[0].required" = true
"paths./events/{id}.get.parameters[0].type" = "string"
"paths./events/{id}.get.parameters[1].default" = "summary"
"paths./events/{id}.get.parameters[1].enum.length" = 4
"paths./events/{id}.get.parameters[1].enum[0]" = "summary"
"paths./events/{id}.get.parameters[1].enum[1]" = "detail"
"paths./events/{id}.get.parameters[1].enum[2]" = "context"
"paths./events/{id}.get.parameters[1].enum[3]" = "minicontext"
"paths./events/{id}.get.parameters[1].in" = "query"
"paths./events/{id}.get.parameters[1].name" = "fieldset"
"paths./events/{id}.get.parameters[1].type" = "string"
"paths./events/{id}.get.responses.200.description" = "Requested event"
"paths./events/{id}.get.responses.200.schema.$ref" = "#/definitions/EventOccurenceDetail"
"paths./events/{id}.get.responses.404.description" = "Unexpected error"
"paths./events/{id}.get.responses.404.schema.$ref" = "#/definitions/Error"
"paths./events/{id}.get.summary" = "Get Specific event details."
"paths./events/{id}.get.tags.length" = 1
"paths./events/{id}.get.tags[0]" = "Events"
"paths./places.get.parameters.length" = 22
"paths./places.get.parameters[0].collectionFormat" = "multi"
"paths./places.get.parameters[0].description" = "List of required PlaceCategory ids (Tier 1)"
"paths./places.get.parameters[0].in" = "query"
"paths./places.get.parameters[0].items.type" = "string"
"paths./places.get.parameters[0].name" = "category"
"paths./places.get.parameters[0].type" = "array"
"paths./places.get.parameters[10].description" = "city, town, or neighborhood of the place"
"paths./places.get.parameters[10].in" = "query"
"paths./places.get.parameters[10].name" = "locality"
"paths./places.get.parameters[10].type" = "string"
"paths./places.get.parameters[11].description" = "region or state"
"paths./places.get.parameters[11].in" = "query"
"paths./places.get.parameters[11].name" = "region"
"paths./places.get.parameters[11].type" = "string"
"paths./places.get.parameters[12].description" = "Postal or zip code"
"paths./places.get.parameters[12].in" = "query"
"paths./places.get.parameters[12].name" = "postal_code"
"paths./places.get.parameters[12].type" = "string"
"paths./places.get.parameters[13].description" = "country component of the address"
"paths./places.get.parameters[13].in" = "query"
"paths./places.get.parameters[13].name" = "country"
"paths./places.get.parameters[13].type" = "string"
"paths./places.get.parameters[14].description" = "latitude,longitude of the origin point"
"paths./places.get.parameters[14].in" = "query"
"paths./places.get.parameters[14].name" = "center"
"paths./places.get.parameters[14].type" = "string"
"paths./places.get.parameters[15].description" = "Distance from origin in meters"
"paths./places.get.parameters[15].in" = "query"
"paths./places.get.parameters[15].name" = "radius"
"paths./places.get.parameters[15].type" = "integer"
"paths./places.get.parameters[16].collectionFormat" = "multi"
"paths./places.get.parameters[16].description" = "Corner of a bounding box (lat,lng). Requires 0 or 2 pairs"
"paths./places.get.parameters[16].in" = "query"
"paths./places.get.parameters[16].items.type" = "string"
"paths./places.get.parameters[16].name" = "bbox"
"paths./places.get.parameters[16].required" = false
"paths./places.get.parameters[16].type" = "array"
"paths./places.get.parameters[17].collectionFormat" = "multi"
"paths./places.get.parameters[17].description" = "Closed custom polygon. Ordered list of lat,lng pairs"
"paths./places.get.parameters[17].in" = "query"
"paths./places.get.parameters[17].items.type" = "string"
"paths./places.get.parameters[17].name" = "polygon"
"paths./places.get.parameters[17].required" = false
"paths./places.get.parameters[17].type" = "array"
"paths./places.get.parameters[18].description" = "Search within specified geopolitical place id"
"paths./places.get.parameters[18].in" = "query"
"paths./places.get.parameters[18].name" = "within"
"paths./places.get.parameters[18].required" = false
"paths./places.get.parameters[18].type" = "string"
"paths./places.get.parameters[19].description" = "Return results starting at specified offset"
"paths./places.get.parameters[19].in" = "query"
"paths./places.get.parameters[19].name" = "offset"
"paths./places.get.parameters[19].type" = "integer"
"paths./places.get.parameters[1].collectionFormat" = "multi"
"paths./places.get.parameters[1].description" = "List of required PlaceFunction ids (Tier 2)"
"paths./places.get.parameters[1].in" = "query"
"paths./places.get.parameters[1].items.type" = "string"
"paths./places.get.parameters[1].name" = "function"
"paths./places.get.parameters[1].type" = "array"
"paths./places.get.parameters[20].description" = "Max results to return"
"paths./places.get.parameters[20].in" = "query"
"paths./places.get.parameters[20].name" = "limit"
"paths./places.get.parameters[20].type" = "integer"
"paths./places.get.parameters[21].default" = "context"
"paths./places.get.parameters[21].description" = "Return results starting at specified offset (summary, context, detail)"
"paths./places.get.parameters[21].enum.length" = 3
"paths./places.get.parameters[21].enum[0]" = "summary"
"paths./places.get.parameters[21].enum[1]" = "detail"
"paths./places.get.parameters[21].enum[2]" = "context"
"paths./places.get.parameters[21].in" = "query"
"paths./places.get.parameters[21].name" = "fieldset"
"paths./places.get.parameters[21].required" = true
"paths./places.get.parameters[21].type" = "string"
"paths./places.get.parameters[2].description" = "List of required ambience ids"
"paths./places.get.parameters[2].in" = "query"
"paths./places.get.parameters[2].items.type" = "string"
"paths./places.get.parameters[2].name" = "ambience"
"paths./places.get.parameters[2].type" = "array"
"paths./places.get.parameters[3].description" = "List of required tags"
"paths./places.get.parameters[3].in" = "query"
"paths./places.get.parameters[3].items.type" = "string"
"paths./places.get.parameters[3].name" = "tag"
"paths./places.get.parameters[3].type" = "array"
"paths./places.get.parameters[4].description" = "Specific PlaceType to return"
"paths./places.get.parameters[4].in" = "query"
"paths./places.get.parameters[4].name" = "type"
"paths./places.get.parameters[4].type" = "string"
"paths./places.get.parameters[5].description" = "Match on place names"
"paths./places.get.parameters[5].in" = "query"
"paths./places.get.parameters[5].name" = "name"
"paths./places.get.parameters[5].type" = "string"
"paths./places.get.parameters[6].description" = "Require an exact name match"
"paths./places.get.parameters[6].in" = "query"
"paths./places.get.parameters[6].name" = "exact"
"paths./places.get.parameters[6].type" = "boolean"
"paths./places.get.parameters[7].description" = "Min capacity at location"
"paths./places.get.parameters[7].format" = "integer"
"paths./places.get.parameters[7].in" = "query"
"paths./places.get.parameters[7].name" = "capacity_min"
"paths./places.get.parameters[7].required" = false
"paths./places.get.parameters[7].type" = "number"
"paths./places.get.parameters[8].description" = "Min capacity at location"
"paths./places.get.parameters[8].format" = "integer"
"paths./places.get.parameters[8].in" = "query"
"paths./places.get.parameters[8].name" = "capacity_max"
"paths./places.get.parameters[8].required" = false
"paths./places.get.parameters[8].type" = "number"
"paths./places.get.parameters[9].description" = "Address of the place or street component of the address"
"paths./places.get.parameters[9].in" = "query"
"paths./places.get.parameters[9].name" = "street"
"paths./places.get.parameters[9].type" = "string"
"paths./places.get.responses.200.description" = "List of matching events"
"paths./places.get.responses.200.schema.$ref" = "#/definitions/PlacesSearchResponse"
"paths./places.get.responses.400.description" = "Unexpected error"
"paths./places.get.responses.400.schema.$ref" = "#/definitions/Error"
"paths./places.get.summary" = "Venues, landmarks, regions, these are all places to search."
"paths./places.get.tags.length" = 1
"paths./places.get.tags[0]" = "Places"
"paths./places/{id}.get.parameters.length" = 2
"paths./places/{id}.get.parameters[0].description" = "place @id"
"paths./places/{id}.get.parameters[0].in" = "path"
"paths./places/{id}.get.parameters[0].name" = "id"
"paths./places/{id}.get.parameters[0].required" = true
"paths./places/{id}.get.parameters[0].type" = "string"
"paths./places/{id}.get.parameters[1].default" = "summary"
"paths./places/{id}.get.parameters[1].enum.length" = 4
"paths./places/{id}.get.parameters[1].enum[0]" = "summary"
"paths./places/{id}.get.parameters[1].enum[1]" = "detail"
"paths./places/{id}.get.parameters[1].enum[2]" = "context"
"paths./places/{id}.get.parameters[1].enum[3]" = "minicontext"
"paths./places/{id}.get.parameters[1].in" = "query"
"paths./places/{id}.get.parameters[1].name" = "fieldset"
"paths./places/{id}.get.parameters[1].type" = "string"
"paths./places/{id}.get.responses.200.description" = "Requested place"
"paths./places/{id}.get.responses.200.schema.$ref" = "#/definitions/PlaceDetail"
"paths./places/{id}.get.responses.404.description" = "Unexpected error"
"paths./places/{id}.get.responses.404.schema.$ref" = "#/definitions/Error"
"paths./places/{id}.get.summary" = "Get specific place details"
"paths./places/{id}.get.tags.length" = 1
"paths./places/{id}.get.tags[0]" = "Places"
"produces.length" = 1
"produces[0]" = "application/json"
"schemes.length" = 1
"schemes[0]" = "https"
"security.length" = 1
"securityDefinitions.api_key.description" = "Your API key"
"securityDefinitions.api_key.in" = "query"
"securityDefinitions.api_key.name" = "api_key"
"securityDefinitions.api_key.type" = "apiKey"
"security[0].api_key.length" = 0
swagger = "2.0"
