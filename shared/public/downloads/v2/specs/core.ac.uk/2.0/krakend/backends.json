{
	"backends": [
		{
			"group": "core-api-v2-2-0",
			"url_pattern": "/api-v2/articles/get",
			"method": "POST",
			"host": [
				"http://core.ac.uk"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "core.ac.uk",
				"description": "\u003cp style=\"text-align: justify;\"\u003eYou can use the CORE API to access the \n    resources harvested and enriched by CORE. If you encounter any problems with the API, please \u003ca href=\"/contact\"\u003ereport them to us\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eOverview\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API is organised by resource type. The resources are \u003cb\u003earticles\u003c/b\u003e, \n    \u003cb\u003ejournals\u003c/b\u003e and \u003cb\u003erepositories\u003c/b\u003e and are represented using JSON data format. Furthermore, \n    each resource has a list of methods. The API also provides two global methods for accessing all resources at once.\u003c/p\u003e\n\n\u003ch2\u003eResponse format\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eResponse for each query contains two fields: \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e.\n    In case of an error status, the data field is empty. The data field contains a single object\n    in case the request is for a specific identifier (e.g. CORE ID, CORE repository ID, etc.), or  \n    contains a list of objects, for example for search queries. In case of batch requests, the response\n    is an array of objects, each of which contains its own \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e fields.\n    For search queries the response contains an additional field \u003cb\u003etotalHits\u003c/b\u003e, which is the \n    total number of items which match the search criteria.\u003c/p\u003e\n\n\u003ch2\u003eSearch query syntax\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify\"\u003eComplex search queries can be used in all of the API search methods.\n    The query can be a simple string or it can be built using terms and operators described in Elasticsearch\n    \u003ca href=\"http://www.elastic.co/guide/en/elasticsearch/reference/1.4/query-dsl-query-string-query.html#query-string-syntax\"\u003edocumentation\u003c/a\u003e.\n    The usable field names are \u003cstrong\u003etitle\u003c/strong\u003e, \u003cstrong\u003edescription\u003c/strong\u003e, \u003cstrong\u003efullText\u003c/strong\u003e, \n    \u003cstrong\u003eauthorsString\u003c/strong\u003e, \u003cstrong\u003epublisher\u003c/strong\u003e, \u003cstrong\u003erepositories.id\u003c/strong\u003e, \u003cstrong\u003erepositories.name\u003c/strong\u003e, \n    \u003cstrong\u003edoi\u003c/strong\u003e, \u003cstrong\u003eoai\u003c/strong\u003e, \u003cstrong\u003eidentifiers\u003c/strong\u003e (which is a list of article identifiers including OAI, URL, etc.), \u003cstrong\u003elanguage.name\u003c/strong\u003e \n    and \u003cstrong\u003eyear\u003c/strong\u003e. Some example queries:\n\u003c/p\u003e\n\n\u003cul style=\"margin-left: 30px;\"\u003e\n    \u003cli\u003e\u003cp\u003etitle:psychology and language.name:English\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003erepositories.id:86 AND year:2014\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003eidentifiers:\"oai:aura.abdn.ac.uk:2164/3837\" OR identifiers:\"oai:aura.abdn.ac.uk:2164/3843\"\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003edoi:\"10.1186/1471-2458-6-309\"\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSort order\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify;\"\u003eFor search queries, the results are ordered by relevance score. For batch \n    requests, the results are retrieved in the order of the requests.\u003c/p\u003e\n\n\u003ch2\u003eParameters\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API methods allow different parameters to be passed. Additionally, there is an API key parameter which is common to all API methods. For all API methods \n    the API key can be provided either as a query parameter or in the request header. If the API key \n    is not provided, the API will return HTTP 401 error. You can register for an API key \u003ca href=\"/services#api\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eAPI methods\u003c/h2\u003e",
				"version": "2.0",
				"slug": "core-api-v2-2-0-api-v2-articles-get",
				"hosts": [
					"http://core.ac.uk"
				],
				"topics": [
					"open-data"
				],
				"schemes": [
					"http"
				]
			}
		},
		{
			"group": "core-api-v2-2-0",
			"url_pattern": "/api-v2/articles/get/{coreId}",
			"method": "GET",
			"host": [
				"http://core.ac.uk"
			],
			"whitelist": [
				"status"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "core.ac.uk",
				"description": "\u003cp style=\"text-align: justify;\"\u003eYou can use the CORE API to access the \n    resources harvested and enriched by CORE. If you encounter any problems with the API, please \u003ca href=\"/contact\"\u003ereport them to us\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eOverview\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API is organised by resource type. The resources are \u003cb\u003earticles\u003c/b\u003e, \n    \u003cb\u003ejournals\u003c/b\u003e and \u003cb\u003erepositories\u003c/b\u003e and are represented using JSON data format. Furthermore, \n    each resource has a list of methods. The API also provides two global methods for accessing all resources at once.\u003c/p\u003e\n\n\u003ch2\u003eResponse format\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eResponse for each query contains two fields: \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e.\n    In case of an error status, the data field is empty. The data field contains a single object\n    in case the request is for a specific identifier (e.g. CORE ID, CORE repository ID, etc.), or  \n    contains a list of objects, for example for search queries. In case of batch requests, the response\n    is an array of objects, each of which contains its own \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e fields.\n    For search queries the response contains an additional field \u003cb\u003etotalHits\u003c/b\u003e, which is the \n    total number of items which match the search criteria.\u003c/p\u003e\n\n\u003ch2\u003eSearch query syntax\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify\"\u003eComplex search queries can be used in all of the API search methods.\n    The query can be a simple string or it can be built using terms and operators described in Elasticsearch\n    \u003ca href=\"http://www.elastic.co/guide/en/elasticsearch/reference/1.4/query-dsl-query-string-query.html#query-string-syntax\"\u003edocumentation\u003c/a\u003e.\n    The usable field names are \u003cstrong\u003etitle\u003c/strong\u003e, \u003cstrong\u003edescription\u003c/strong\u003e, \u003cstrong\u003efullText\u003c/strong\u003e, \n    \u003cstrong\u003eauthorsString\u003c/strong\u003e, \u003cstrong\u003epublisher\u003c/strong\u003e, \u003cstrong\u003erepositories.id\u003c/strong\u003e, \u003cstrong\u003erepositories.name\u003c/strong\u003e, \n    \u003cstrong\u003edoi\u003c/strong\u003e, \u003cstrong\u003eoai\u003c/strong\u003e, \u003cstrong\u003eidentifiers\u003c/strong\u003e (which is a list of article identifiers including OAI, URL, etc.), \u003cstrong\u003elanguage.name\u003c/strong\u003e \n    and \u003cstrong\u003eyear\u003c/strong\u003e. Some example queries:\n\u003c/p\u003e\n\n\u003cul style=\"margin-left: 30px;\"\u003e\n    \u003cli\u003e\u003cp\u003etitle:psychology and language.name:English\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003erepositories.id:86 AND year:2014\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003eidentifiers:\"oai:aura.abdn.ac.uk:2164/3837\" OR identifiers:\"oai:aura.abdn.ac.uk:2164/3843\"\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003edoi:\"10.1186/1471-2458-6-309\"\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSort order\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify;\"\u003eFor search queries, the results are ordered by relevance score. For batch \n    requests, the results are retrieved in the order of the requests.\u003c/p\u003e\n\n\u003ch2\u003eParameters\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API methods allow different parameters to be passed. Additionally, there is an API key parameter which is common to all API methods. For all API methods \n    the API key can be provided either as a query parameter or in the request header. If the API key \n    is not provided, the API will return HTTP 401 error. You can register for an API key \u003ca href=\"/services#api\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eAPI methods\u003c/h2\u003e",
				"version": "2.0",
				"slug": "core-api-v2-2-0-api-v2-articles-get-coreid",
				"mapping": {
					"status": "status"
				},
				"hosts": [
					"http://core.ac.uk"
				],
				"topics": [
					"open-data"
				],
				"schemes": [
					"http"
				]
			}
		},
		{
			"group": "core-api-v2-2-0",
			"url_pattern": "/api-v2/articles/get/{coreId}/download/pdf",
			"method": "GET",
			"host": [
				"http://core.ac.uk"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "core.ac.uk",
				"description": "\u003cp style=\"text-align: justify;\"\u003eYou can use the CORE API to access the \n    resources harvested and enriched by CORE. If you encounter any problems with the API, please \u003ca href=\"/contact\"\u003ereport them to us\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eOverview\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API is organised by resource type. The resources are \u003cb\u003earticles\u003c/b\u003e, \n    \u003cb\u003ejournals\u003c/b\u003e and \u003cb\u003erepositories\u003c/b\u003e and are represented using JSON data format. Furthermore, \n    each resource has a list of methods. The API also provides two global methods for accessing all resources at once.\u003c/p\u003e\n\n\u003ch2\u003eResponse format\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eResponse for each query contains two fields: \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e.\n    In case of an error status, the data field is empty. The data field contains a single object\n    in case the request is for a specific identifier (e.g. CORE ID, CORE repository ID, etc.), or  \n    contains a list of objects, for example for search queries. In case of batch requests, the response\n    is an array of objects, each of which contains its own \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e fields.\n    For search queries the response contains an additional field \u003cb\u003etotalHits\u003c/b\u003e, which is the \n    total number of items which match the search criteria.\u003c/p\u003e\n\n\u003ch2\u003eSearch query syntax\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify\"\u003eComplex search queries can be used in all of the API search methods.\n    The query can be a simple string or it can be built using terms and operators described in Elasticsearch\n    \u003ca href=\"http://www.elastic.co/guide/en/elasticsearch/reference/1.4/query-dsl-query-string-query.html#query-string-syntax\"\u003edocumentation\u003c/a\u003e.\n    The usable field names are \u003cstrong\u003etitle\u003c/strong\u003e, \u003cstrong\u003edescription\u003c/strong\u003e, \u003cstrong\u003efullText\u003c/strong\u003e, \n    \u003cstrong\u003eauthorsString\u003c/strong\u003e, \u003cstrong\u003epublisher\u003c/strong\u003e, \u003cstrong\u003erepositories.id\u003c/strong\u003e, \u003cstrong\u003erepositories.name\u003c/strong\u003e, \n    \u003cstrong\u003edoi\u003c/strong\u003e, \u003cstrong\u003eoai\u003c/strong\u003e, \u003cstrong\u003eidentifiers\u003c/strong\u003e (which is a list of article identifiers including OAI, URL, etc.), \u003cstrong\u003elanguage.name\u003c/strong\u003e \n    and \u003cstrong\u003eyear\u003c/strong\u003e. Some example queries:\n\u003c/p\u003e\n\n\u003cul style=\"margin-left: 30px;\"\u003e\n    \u003cli\u003e\u003cp\u003etitle:psychology and language.name:English\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003erepositories.id:86 AND year:2014\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003eidentifiers:\"oai:aura.abdn.ac.uk:2164/3837\" OR identifiers:\"oai:aura.abdn.ac.uk:2164/3843\"\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003edoi:\"10.1186/1471-2458-6-309\"\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSort order\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify;\"\u003eFor search queries, the results are ordered by relevance score. For batch \n    requests, the results are retrieved in the order of the requests.\u003c/p\u003e\n\n\u003ch2\u003eParameters\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API methods allow different parameters to be passed. Additionally, there is an API key parameter which is common to all API methods. For all API methods \n    the API key can be provided either as a query parameter or in the request header. If the API key \n    is not provided, the API will return HTTP 401 error. You can register for an API key \u003ca href=\"/services#api\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eAPI methods\u003c/h2\u003e",
				"version": "2.0",
				"slug": "core-api-v2-2-0-api-v2-articles-get-coreid-download-pdf",
				"hosts": [
					"http://core.ac.uk"
				],
				"topics": [
					"open-data"
				],
				"schemes": [
					"http"
				]
			}
		},
		{
			"group": "core-api-v2-2-0",
			"url_pattern": "/api-v2/articles/get/{coreId}/history",
			"method": "GET",
			"host": [
				"http://core.ac.uk"
			],
			"whitelist": [
				"data",
				"status"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "core.ac.uk",
				"description": "\u003cp style=\"text-align: justify;\"\u003eYou can use the CORE API to access the \n    resources harvested and enriched by CORE. If you encounter any problems with the API, please \u003ca href=\"/contact\"\u003ereport them to us\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eOverview\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API is organised by resource type. The resources are \u003cb\u003earticles\u003c/b\u003e, \n    \u003cb\u003ejournals\u003c/b\u003e and \u003cb\u003erepositories\u003c/b\u003e and are represented using JSON data format. Furthermore, \n    each resource has a list of methods. The API also provides two global methods for accessing all resources at once.\u003c/p\u003e\n\n\u003ch2\u003eResponse format\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eResponse for each query contains two fields: \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e.\n    In case of an error status, the data field is empty. The data field contains a single object\n    in case the request is for a specific identifier (e.g. CORE ID, CORE repository ID, etc.), or  \n    contains a list of objects, for example for search queries. In case of batch requests, the response\n    is an array of objects, each of which contains its own \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e fields.\n    For search queries the response contains an additional field \u003cb\u003etotalHits\u003c/b\u003e, which is the \n    total number of items which match the search criteria.\u003c/p\u003e\n\n\u003ch2\u003eSearch query syntax\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify\"\u003eComplex search queries can be used in all of the API search methods.\n    The query can be a simple string or it can be built using terms and operators described in Elasticsearch\n    \u003ca href=\"http://www.elastic.co/guide/en/elasticsearch/reference/1.4/query-dsl-query-string-query.html#query-string-syntax\"\u003edocumentation\u003c/a\u003e.\n    The usable field names are \u003cstrong\u003etitle\u003c/strong\u003e, \u003cstrong\u003edescription\u003c/strong\u003e, \u003cstrong\u003efullText\u003c/strong\u003e, \n    \u003cstrong\u003eauthorsString\u003c/strong\u003e, \u003cstrong\u003epublisher\u003c/strong\u003e, \u003cstrong\u003erepositories.id\u003c/strong\u003e, \u003cstrong\u003erepositories.name\u003c/strong\u003e, \n    \u003cstrong\u003edoi\u003c/strong\u003e, \u003cstrong\u003eoai\u003c/strong\u003e, \u003cstrong\u003eidentifiers\u003c/strong\u003e (which is a list of article identifiers including OAI, URL, etc.), \u003cstrong\u003elanguage.name\u003c/strong\u003e \n    and \u003cstrong\u003eyear\u003c/strong\u003e. Some example queries:\n\u003c/p\u003e\n\n\u003cul style=\"margin-left: 30px;\"\u003e\n    \u003cli\u003e\u003cp\u003etitle:psychology and language.name:English\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003erepositories.id:86 AND year:2014\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003eidentifiers:\"oai:aura.abdn.ac.uk:2164/3837\" OR identifiers:\"oai:aura.abdn.ac.uk:2164/3843\"\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003edoi:\"10.1186/1471-2458-6-309\"\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSort order\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify;\"\u003eFor search queries, the results are ordered by relevance score. For batch \n    requests, the results are retrieved in the order of the requests.\u003c/p\u003e\n\n\u003ch2\u003eParameters\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API methods allow different parameters to be passed. Additionally, there is an API key parameter which is common to all API methods. For all API methods \n    the API key can be provided either as a query parameter or in the request header. If the API key \n    is not provided, the API will return HTTP 401 error. You can register for an API key \u003ca href=\"/services#api\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eAPI methods\u003c/h2\u003e",
				"version": "2.0",
				"slug": "core-api-v2-2-0-api-v2-articles-get-coreid-history",
				"mapping": {
					"data": "data",
					"status": "status"
				},
				"hosts": [
					"http://core.ac.uk"
				],
				"topics": [
					"open-data"
				],
				"schemes": [
					"http"
				]
			}
		},
		{
			"group": "core-api-v2-2-0",
			"url_pattern": "/api-v2/articles/search",
			"method": "POST",
			"host": [
				"http://core.ac.uk"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "core.ac.uk",
				"description": "\u003cp style=\"text-align: justify;\"\u003eYou can use the CORE API to access the \n    resources harvested and enriched by CORE. If you encounter any problems with the API, please \u003ca href=\"/contact\"\u003ereport them to us\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eOverview\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API is organised by resource type. The resources are \u003cb\u003earticles\u003c/b\u003e, \n    \u003cb\u003ejournals\u003c/b\u003e and \u003cb\u003erepositories\u003c/b\u003e and are represented using JSON data format. Furthermore, \n    each resource has a list of methods. The API also provides two global methods for accessing all resources at once.\u003c/p\u003e\n\n\u003ch2\u003eResponse format\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eResponse for each query contains two fields: \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e.\n    In case of an error status, the data field is empty. The data field contains a single object\n    in case the request is for a specific identifier (e.g. CORE ID, CORE repository ID, etc.), or  \n    contains a list of objects, for example for search queries. In case of batch requests, the response\n    is an array of objects, each of which contains its own \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e fields.\n    For search queries the response contains an additional field \u003cb\u003etotalHits\u003c/b\u003e, which is the \n    total number of items which match the search criteria.\u003c/p\u003e\n\n\u003ch2\u003eSearch query syntax\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify\"\u003eComplex search queries can be used in all of the API search methods.\n    The query can be a simple string or it can be built using terms and operators described in Elasticsearch\n    \u003ca href=\"http://www.elastic.co/guide/en/elasticsearch/reference/1.4/query-dsl-query-string-query.html#query-string-syntax\"\u003edocumentation\u003c/a\u003e.\n    The usable field names are \u003cstrong\u003etitle\u003c/strong\u003e, \u003cstrong\u003edescription\u003c/strong\u003e, \u003cstrong\u003efullText\u003c/strong\u003e, \n    \u003cstrong\u003eauthorsString\u003c/strong\u003e, \u003cstrong\u003epublisher\u003c/strong\u003e, \u003cstrong\u003erepositories.id\u003c/strong\u003e, \u003cstrong\u003erepositories.name\u003c/strong\u003e, \n    \u003cstrong\u003edoi\u003c/strong\u003e, \u003cstrong\u003eoai\u003c/strong\u003e, \u003cstrong\u003eidentifiers\u003c/strong\u003e (which is a list of article identifiers including OAI, URL, etc.), \u003cstrong\u003elanguage.name\u003c/strong\u003e \n    and \u003cstrong\u003eyear\u003c/strong\u003e. Some example queries:\n\u003c/p\u003e\n\n\u003cul style=\"margin-left: 30px;\"\u003e\n    \u003cli\u003e\u003cp\u003etitle:psychology and language.name:English\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003erepositories.id:86 AND year:2014\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003eidentifiers:\"oai:aura.abdn.ac.uk:2164/3837\" OR identifiers:\"oai:aura.abdn.ac.uk:2164/3843\"\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003edoi:\"10.1186/1471-2458-6-309\"\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSort order\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify;\"\u003eFor search queries, the results are ordered by relevance score. For batch \n    requests, the results are retrieved in the order of the requests.\u003c/p\u003e\n\n\u003ch2\u003eParameters\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API methods allow different parameters to be passed. Additionally, there is an API key parameter which is common to all API methods. For all API methods \n    the API key can be provided either as a query parameter or in the request header. If the API key \n    is not provided, the API will return HTTP 401 error. You can register for an API key \u003ca href=\"/services#api\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eAPI methods\u003c/h2\u003e",
				"version": "2.0",
				"slug": "core-api-v2-2-0-api-v2-articles-search",
				"hosts": [
					"http://core.ac.uk"
				],
				"topics": [
					"open-data"
				],
				"schemes": [
					"http"
				]
			}
		},
		{
			"group": "core-api-v2-2-0",
			"url_pattern": "/api-v2/articles/search/{query}",
			"method": "GET",
			"host": [
				"http://core.ac.uk"
			],
			"whitelist": [
				"data",
				"status",
				"totalHits"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "core.ac.uk",
				"description": "\u003cp style=\"text-align: justify;\"\u003eYou can use the CORE API to access the \n    resources harvested and enriched by CORE. If you encounter any problems with the API, please \u003ca href=\"/contact\"\u003ereport them to us\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eOverview\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API is organised by resource type. The resources are \u003cb\u003earticles\u003c/b\u003e, \n    \u003cb\u003ejournals\u003c/b\u003e and \u003cb\u003erepositories\u003c/b\u003e and are represented using JSON data format. Furthermore, \n    each resource has a list of methods. The API also provides two global methods for accessing all resources at once.\u003c/p\u003e\n\n\u003ch2\u003eResponse format\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eResponse for each query contains two fields: \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e.\n    In case of an error status, the data field is empty. The data field contains a single object\n    in case the request is for a specific identifier (e.g. CORE ID, CORE repository ID, etc.), or  \n    contains a list of objects, for example for search queries. In case of batch requests, the response\n    is an array of objects, each of which contains its own \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e fields.\n    For search queries the response contains an additional field \u003cb\u003etotalHits\u003c/b\u003e, which is the \n    total number of items which match the search criteria.\u003c/p\u003e\n\n\u003ch2\u003eSearch query syntax\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify\"\u003eComplex search queries can be used in all of the API search methods.\n    The query can be a simple string or it can be built using terms and operators described in Elasticsearch\n    \u003ca href=\"http://www.elastic.co/guide/en/elasticsearch/reference/1.4/query-dsl-query-string-query.html#query-string-syntax\"\u003edocumentation\u003c/a\u003e.\n    The usable field names are \u003cstrong\u003etitle\u003c/strong\u003e, \u003cstrong\u003edescription\u003c/strong\u003e, \u003cstrong\u003efullText\u003c/strong\u003e, \n    \u003cstrong\u003eauthorsString\u003c/strong\u003e, \u003cstrong\u003epublisher\u003c/strong\u003e, \u003cstrong\u003erepositories.id\u003c/strong\u003e, \u003cstrong\u003erepositories.name\u003c/strong\u003e, \n    \u003cstrong\u003edoi\u003c/strong\u003e, \u003cstrong\u003eoai\u003c/strong\u003e, \u003cstrong\u003eidentifiers\u003c/strong\u003e (which is a list of article identifiers including OAI, URL, etc.), \u003cstrong\u003elanguage.name\u003c/strong\u003e \n    and \u003cstrong\u003eyear\u003c/strong\u003e. Some example queries:\n\u003c/p\u003e\n\n\u003cul style=\"margin-left: 30px;\"\u003e\n    \u003cli\u003e\u003cp\u003etitle:psychology and language.name:English\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003erepositories.id:86 AND year:2014\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003eidentifiers:\"oai:aura.abdn.ac.uk:2164/3837\" OR identifiers:\"oai:aura.abdn.ac.uk:2164/3843\"\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003edoi:\"10.1186/1471-2458-6-309\"\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSort order\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify;\"\u003eFor search queries, the results are ordered by relevance score. For batch \n    requests, the results are retrieved in the order of the requests.\u003c/p\u003e\n\n\u003ch2\u003eParameters\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API methods allow different parameters to be passed. Additionally, there is an API key parameter which is common to all API methods. For all API methods \n    the API key can be provided either as a query parameter or in the request header. If the API key \n    is not provided, the API will return HTTP 401 error. You can register for an API key \u003ca href=\"/services#api\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eAPI methods\u003c/h2\u003e",
				"version": "2.0",
				"slug": "core-api-v2-2-0-api-v2-articles-search-query",
				"mapping": {
					"data": "data",
					"status": "status",
					"totalHits": "totalHits"
				},
				"hosts": [
					"http://core.ac.uk"
				],
				"topics": [
					"open-data"
				],
				"schemes": [
					"http"
				]
			}
		},
		{
			"group": "core-api-v2-2-0",
			"url_pattern": "/api-v2/articles/similar",
			"method": "POST",
			"host": [
				"http://core.ac.uk"
			],
			"whitelist": [
				"data",
				"status"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "core.ac.uk",
				"description": "\u003cp style=\"text-align: justify;\"\u003eYou can use the CORE API to access the \n    resources harvested and enriched by CORE. If you encounter any problems with the API, please \u003ca href=\"/contact\"\u003ereport them to us\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eOverview\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API is organised by resource type. The resources are \u003cb\u003earticles\u003c/b\u003e, \n    \u003cb\u003ejournals\u003c/b\u003e and \u003cb\u003erepositories\u003c/b\u003e and are represented using JSON data format. Furthermore, \n    each resource has a list of methods. The API also provides two global methods for accessing all resources at once.\u003c/p\u003e\n\n\u003ch2\u003eResponse format\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eResponse for each query contains two fields: \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e.\n    In case of an error status, the data field is empty. The data field contains a single object\n    in case the request is for a specific identifier (e.g. CORE ID, CORE repository ID, etc.), or  \n    contains a list of objects, for example for search queries. In case of batch requests, the response\n    is an array of objects, each of which contains its own \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e fields.\n    For search queries the response contains an additional field \u003cb\u003etotalHits\u003c/b\u003e, which is the \n    total number of items which match the search criteria.\u003c/p\u003e\n\n\u003ch2\u003eSearch query syntax\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify\"\u003eComplex search queries can be used in all of the API search methods.\n    The query can be a simple string or it can be built using terms and operators described in Elasticsearch\n    \u003ca href=\"http://www.elastic.co/guide/en/elasticsearch/reference/1.4/query-dsl-query-string-query.html#query-string-syntax\"\u003edocumentation\u003c/a\u003e.\n    The usable field names are \u003cstrong\u003etitle\u003c/strong\u003e, \u003cstrong\u003edescription\u003c/strong\u003e, \u003cstrong\u003efullText\u003c/strong\u003e, \n    \u003cstrong\u003eauthorsString\u003c/strong\u003e, \u003cstrong\u003epublisher\u003c/strong\u003e, \u003cstrong\u003erepositories.id\u003c/strong\u003e, \u003cstrong\u003erepositories.name\u003c/strong\u003e, \n    \u003cstrong\u003edoi\u003c/strong\u003e, \u003cstrong\u003eoai\u003c/strong\u003e, \u003cstrong\u003eidentifiers\u003c/strong\u003e (which is a list of article identifiers including OAI, URL, etc.), \u003cstrong\u003elanguage.name\u003c/strong\u003e \n    and \u003cstrong\u003eyear\u003c/strong\u003e. Some example queries:\n\u003c/p\u003e\n\n\u003cul style=\"margin-left: 30px;\"\u003e\n    \u003cli\u003e\u003cp\u003etitle:psychology and language.name:English\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003erepositories.id:86 AND year:2014\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003eidentifiers:\"oai:aura.abdn.ac.uk:2164/3837\" OR identifiers:\"oai:aura.abdn.ac.uk:2164/3843\"\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003edoi:\"10.1186/1471-2458-6-309\"\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSort order\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify;\"\u003eFor search queries, the results are ordered by relevance score. For batch \n    requests, the results are retrieved in the order of the requests.\u003c/p\u003e\n\n\u003ch2\u003eParameters\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API methods allow different parameters to be passed. Additionally, there is an API key parameter which is common to all API methods. For all API methods \n    the API key can be provided either as a query parameter or in the request header. If the API key \n    is not provided, the API will return HTTP 401 error. You can register for an API key \u003ca href=\"/services#api\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eAPI methods\u003c/h2\u003e",
				"version": "2.0",
				"slug": "core-api-v2-2-0-api-v2-articles-similar",
				"mapping": {
					"data": "data",
					"status": "status"
				},
				"hosts": [
					"http://core.ac.uk"
				],
				"topics": [
					"open-data"
				],
				"schemes": [
					"http"
				]
			}
		},
		{
			"group": "core-api-v2-2-0",
			"url_pattern": "/api-v2/journals/get",
			"method": "POST",
			"host": [
				"http://core.ac.uk"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "core.ac.uk",
				"description": "\u003cp style=\"text-align: justify;\"\u003eYou can use the CORE API to access the \n    resources harvested and enriched by CORE. If you encounter any problems with the API, please \u003ca href=\"/contact\"\u003ereport them to us\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eOverview\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API is organised by resource type. The resources are \u003cb\u003earticles\u003c/b\u003e, \n    \u003cb\u003ejournals\u003c/b\u003e and \u003cb\u003erepositories\u003c/b\u003e and are represented using JSON data format. Furthermore, \n    each resource has a list of methods. The API also provides two global methods for accessing all resources at once.\u003c/p\u003e\n\n\u003ch2\u003eResponse format\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eResponse for each query contains two fields: \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e.\n    In case of an error status, the data field is empty. The data field contains a single object\n    in case the request is for a specific identifier (e.g. CORE ID, CORE repository ID, etc.), or  \n    contains a list of objects, for example for search queries. In case of batch requests, the response\n    is an array of objects, each of which contains its own \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e fields.\n    For search queries the response contains an additional field \u003cb\u003etotalHits\u003c/b\u003e, which is the \n    total number of items which match the search criteria.\u003c/p\u003e\n\n\u003ch2\u003eSearch query syntax\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify\"\u003eComplex search queries can be used in all of the API search methods.\n    The query can be a simple string or it can be built using terms and operators described in Elasticsearch\n    \u003ca href=\"http://www.elastic.co/guide/en/elasticsearch/reference/1.4/query-dsl-query-string-query.html#query-string-syntax\"\u003edocumentation\u003c/a\u003e.\n    The usable field names are \u003cstrong\u003etitle\u003c/strong\u003e, \u003cstrong\u003edescription\u003c/strong\u003e, \u003cstrong\u003efullText\u003c/strong\u003e, \n    \u003cstrong\u003eauthorsString\u003c/strong\u003e, \u003cstrong\u003epublisher\u003c/strong\u003e, \u003cstrong\u003erepositories.id\u003c/strong\u003e, \u003cstrong\u003erepositories.name\u003c/strong\u003e, \n    \u003cstrong\u003edoi\u003c/strong\u003e, \u003cstrong\u003eoai\u003c/strong\u003e, \u003cstrong\u003eidentifiers\u003c/strong\u003e (which is a list of article identifiers including OAI, URL, etc.), \u003cstrong\u003elanguage.name\u003c/strong\u003e \n    and \u003cstrong\u003eyear\u003c/strong\u003e. Some example queries:\n\u003c/p\u003e\n\n\u003cul style=\"margin-left: 30px;\"\u003e\n    \u003cli\u003e\u003cp\u003etitle:psychology and language.name:English\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003erepositories.id:86 AND year:2014\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003eidentifiers:\"oai:aura.abdn.ac.uk:2164/3837\" OR identifiers:\"oai:aura.abdn.ac.uk:2164/3843\"\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003edoi:\"10.1186/1471-2458-6-309\"\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSort order\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify;\"\u003eFor search queries, the results are ordered by relevance score. For batch \n    requests, the results are retrieved in the order of the requests.\u003c/p\u003e\n\n\u003ch2\u003eParameters\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API methods allow different parameters to be passed. Additionally, there is an API key parameter which is common to all API methods. For all API methods \n    the API key can be provided either as a query parameter or in the request header. If the API key \n    is not provided, the API will return HTTP 401 error. You can register for an API key \u003ca href=\"/services#api\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eAPI methods\u003c/h2\u003e",
				"version": "2.0",
				"slug": "core-api-v2-2-0-api-v2-journals-get",
				"hosts": [
					"http://core.ac.uk"
				],
				"topics": [
					"open-data"
				],
				"schemes": [
					"http"
				]
			}
		},
		{
			"group": "core-api-v2-2-0",
			"url_pattern": "/api-v2/journals/get/{issn}",
			"method": "GET",
			"host": [
				"http://core.ac.uk"
			],
			"whitelist": [
				"status"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "core.ac.uk",
				"description": "\u003cp style=\"text-align: justify;\"\u003eYou can use the CORE API to access the \n    resources harvested and enriched by CORE. If you encounter any problems with the API, please \u003ca href=\"/contact\"\u003ereport them to us\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eOverview\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API is organised by resource type. The resources are \u003cb\u003earticles\u003c/b\u003e, \n    \u003cb\u003ejournals\u003c/b\u003e and \u003cb\u003erepositories\u003c/b\u003e and are represented using JSON data format. Furthermore, \n    each resource has a list of methods. The API also provides two global methods for accessing all resources at once.\u003c/p\u003e\n\n\u003ch2\u003eResponse format\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eResponse for each query contains two fields: \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e.\n    In case of an error status, the data field is empty. The data field contains a single object\n    in case the request is for a specific identifier (e.g. CORE ID, CORE repository ID, etc.), or  \n    contains a list of objects, for example for search queries. In case of batch requests, the response\n    is an array of objects, each of which contains its own \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e fields.\n    For search queries the response contains an additional field \u003cb\u003etotalHits\u003c/b\u003e, which is the \n    total number of items which match the search criteria.\u003c/p\u003e\n\n\u003ch2\u003eSearch query syntax\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify\"\u003eComplex search queries can be used in all of the API search methods.\n    The query can be a simple string or it can be built using terms and operators described in Elasticsearch\n    \u003ca href=\"http://www.elastic.co/guide/en/elasticsearch/reference/1.4/query-dsl-query-string-query.html#query-string-syntax\"\u003edocumentation\u003c/a\u003e.\n    The usable field names are \u003cstrong\u003etitle\u003c/strong\u003e, \u003cstrong\u003edescription\u003c/strong\u003e, \u003cstrong\u003efullText\u003c/strong\u003e, \n    \u003cstrong\u003eauthorsString\u003c/strong\u003e, \u003cstrong\u003epublisher\u003c/strong\u003e, \u003cstrong\u003erepositories.id\u003c/strong\u003e, \u003cstrong\u003erepositories.name\u003c/strong\u003e, \n    \u003cstrong\u003edoi\u003c/strong\u003e, \u003cstrong\u003eoai\u003c/strong\u003e, \u003cstrong\u003eidentifiers\u003c/strong\u003e (which is a list of article identifiers including OAI, URL, etc.), \u003cstrong\u003elanguage.name\u003c/strong\u003e \n    and \u003cstrong\u003eyear\u003c/strong\u003e. Some example queries:\n\u003c/p\u003e\n\n\u003cul style=\"margin-left: 30px;\"\u003e\n    \u003cli\u003e\u003cp\u003etitle:psychology and language.name:English\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003erepositories.id:86 AND year:2014\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003eidentifiers:\"oai:aura.abdn.ac.uk:2164/3837\" OR identifiers:\"oai:aura.abdn.ac.uk:2164/3843\"\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003edoi:\"10.1186/1471-2458-6-309\"\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSort order\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify;\"\u003eFor search queries, the results are ordered by relevance score. For batch \n    requests, the results are retrieved in the order of the requests.\u003c/p\u003e\n\n\u003ch2\u003eParameters\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API methods allow different parameters to be passed. Additionally, there is an API key parameter which is common to all API methods. For all API methods \n    the API key can be provided either as a query parameter or in the request header. If the API key \n    is not provided, the API will return HTTP 401 error. You can register for an API key \u003ca href=\"/services#api\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eAPI methods\u003c/h2\u003e",
				"version": "2.0",
				"slug": "core-api-v2-2-0-api-v2-journals-get-issn",
				"mapping": {
					"status": "status"
				},
				"hosts": [
					"http://core.ac.uk"
				],
				"topics": [
					"open-data"
				],
				"schemes": [
					"http"
				]
			}
		},
		{
			"group": "core-api-v2-2-0",
			"url_pattern": "/api-v2/journals/search",
			"method": "POST",
			"host": [
				"http://core.ac.uk"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "core.ac.uk",
				"description": "\u003cp style=\"text-align: justify;\"\u003eYou can use the CORE API to access the \n    resources harvested and enriched by CORE. If you encounter any problems with the API, please \u003ca href=\"/contact\"\u003ereport them to us\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eOverview\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API is organised by resource type. The resources are \u003cb\u003earticles\u003c/b\u003e, \n    \u003cb\u003ejournals\u003c/b\u003e and \u003cb\u003erepositories\u003c/b\u003e and are represented using JSON data format. Furthermore, \n    each resource has a list of methods. The API also provides two global methods for accessing all resources at once.\u003c/p\u003e\n\n\u003ch2\u003eResponse format\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eResponse for each query contains two fields: \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e.\n    In case of an error status, the data field is empty. The data field contains a single object\n    in case the request is for a specific identifier (e.g. CORE ID, CORE repository ID, etc.), or  \n    contains a list of objects, for example for search queries. In case of batch requests, the response\n    is an array of objects, each of which contains its own \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e fields.\n    For search queries the response contains an additional field \u003cb\u003etotalHits\u003c/b\u003e, which is the \n    total number of items which match the search criteria.\u003c/p\u003e\n\n\u003ch2\u003eSearch query syntax\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify\"\u003eComplex search queries can be used in all of the API search methods.\n    The query can be a simple string or it can be built using terms and operators described in Elasticsearch\n    \u003ca href=\"http://www.elastic.co/guide/en/elasticsearch/reference/1.4/query-dsl-query-string-query.html#query-string-syntax\"\u003edocumentation\u003c/a\u003e.\n    The usable field names are \u003cstrong\u003etitle\u003c/strong\u003e, \u003cstrong\u003edescription\u003c/strong\u003e, \u003cstrong\u003efullText\u003c/strong\u003e, \n    \u003cstrong\u003eauthorsString\u003c/strong\u003e, \u003cstrong\u003epublisher\u003c/strong\u003e, \u003cstrong\u003erepositories.id\u003c/strong\u003e, \u003cstrong\u003erepositories.name\u003c/strong\u003e, \n    \u003cstrong\u003edoi\u003c/strong\u003e, \u003cstrong\u003eoai\u003c/strong\u003e, \u003cstrong\u003eidentifiers\u003c/strong\u003e (which is a list of article identifiers including OAI, URL, etc.), \u003cstrong\u003elanguage.name\u003c/strong\u003e \n    and \u003cstrong\u003eyear\u003c/strong\u003e. Some example queries:\n\u003c/p\u003e\n\n\u003cul style=\"margin-left: 30px;\"\u003e\n    \u003cli\u003e\u003cp\u003etitle:psychology and language.name:English\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003erepositories.id:86 AND year:2014\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003eidentifiers:\"oai:aura.abdn.ac.uk:2164/3837\" OR identifiers:\"oai:aura.abdn.ac.uk:2164/3843\"\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003edoi:\"10.1186/1471-2458-6-309\"\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSort order\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify;\"\u003eFor search queries, the results are ordered by relevance score. For batch \n    requests, the results are retrieved in the order of the requests.\u003c/p\u003e\n\n\u003ch2\u003eParameters\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API methods allow different parameters to be passed. Additionally, there is an API key parameter which is common to all API methods. For all API methods \n    the API key can be provided either as a query parameter or in the request header. If the API key \n    is not provided, the API will return HTTP 401 error. You can register for an API key \u003ca href=\"/services#api\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eAPI methods\u003c/h2\u003e",
				"version": "2.0",
				"slug": "core-api-v2-2-0-api-v2-journals-search",
				"hosts": [
					"http://core.ac.uk"
				],
				"topics": [
					"open-data"
				],
				"schemes": [
					"http"
				]
			}
		},
		{
			"group": "core-api-v2-2-0",
			"url_pattern": "/api-v2/journals/search/{query}",
			"method": "GET",
			"host": [
				"http://core.ac.uk"
			],
			"whitelist": [
				"data",
				"status",
				"totalHits"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "core.ac.uk",
				"description": "\u003cp style=\"text-align: justify;\"\u003eYou can use the CORE API to access the \n    resources harvested and enriched by CORE. If you encounter any problems with the API, please \u003ca href=\"/contact\"\u003ereport them to us\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eOverview\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API is organised by resource type. The resources are \u003cb\u003earticles\u003c/b\u003e, \n    \u003cb\u003ejournals\u003c/b\u003e and \u003cb\u003erepositories\u003c/b\u003e and are represented using JSON data format. Furthermore, \n    each resource has a list of methods. The API also provides two global methods for accessing all resources at once.\u003c/p\u003e\n\n\u003ch2\u003eResponse format\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eResponse for each query contains two fields: \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e.\n    In case of an error status, the data field is empty. The data field contains a single object\n    in case the request is for a specific identifier (e.g. CORE ID, CORE repository ID, etc.), or  \n    contains a list of objects, for example for search queries. In case of batch requests, the response\n    is an array of objects, each of which contains its own \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e fields.\n    For search queries the response contains an additional field \u003cb\u003etotalHits\u003c/b\u003e, which is the \n    total number of items which match the search criteria.\u003c/p\u003e\n\n\u003ch2\u003eSearch query syntax\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify\"\u003eComplex search queries can be used in all of the API search methods.\n    The query can be a simple string or it can be built using terms and operators described in Elasticsearch\n    \u003ca href=\"http://www.elastic.co/guide/en/elasticsearch/reference/1.4/query-dsl-query-string-query.html#query-string-syntax\"\u003edocumentation\u003c/a\u003e.\n    The usable field names are \u003cstrong\u003etitle\u003c/strong\u003e, \u003cstrong\u003edescription\u003c/strong\u003e, \u003cstrong\u003efullText\u003c/strong\u003e, \n    \u003cstrong\u003eauthorsString\u003c/strong\u003e, \u003cstrong\u003epublisher\u003c/strong\u003e, \u003cstrong\u003erepositories.id\u003c/strong\u003e, \u003cstrong\u003erepositories.name\u003c/strong\u003e, \n    \u003cstrong\u003edoi\u003c/strong\u003e, \u003cstrong\u003eoai\u003c/strong\u003e, \u003cstrong\u003eidentifiers\u003c/strong\u003e (which is a list of article identifiers including OAI, URL, etc.), \u003cstrong\u003elanguage.name\u003c/strong\u003e \n    and \u003cstrong\u003eyear\u003c/strong\u003e. Some example queries:\n\u003c/p\u003e\n\n\u003cul style=\"margin-left: 30px;\"\u003e\n    \u003cli\u003e\u003cp\u003etitle:psychology and language.name:English\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003erepositories.id:86 AND year:2014\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003eidentifiers:\"oai:aura.abdn.ac.uk:2164/3837\" OR identifiers:\"oai:aura.abdn.ac.uk:2164/3843\"\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003edoi:\"10.1186/1471-2458-6-309\"\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSort order\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify;\"\u003eFor search queries, the results are ordered by relevance score. For batch \n    requests, the results are retrieved in the order of the requests.\u003c/p\u003e\n\n\u003ch2\u003eParameters\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API methods allow different parameters to be passed. Additionally, there is an API key parameter which is common to all API methods. For all API methods \n    the API key can be provided either as a query parameter or in the request header. If the API key \n    is not provided, the API will return HTTP 401 error. You can register for an API key \u003ca href=\"/services#api\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eAPI methods\u003c/h2\u003e",
				"version": "2.0",
				"slug": "core-api-v2-2-0-api-v2-journals-search-query",
				"mapping": {
					"data": "data",
					"status": "status",
					"totalHits": "totalHits"
				},
				"hosts": [
					"http://core.ac.uk"
				],
				"topics": [
					"open-data"
				],
				"schemes": [
					"http"
				]
			}
		},
		{
			"group": "core-api-v2-2-0",
			"url_pattern": "/api-v2/repositories/get",
			"method": "POST",
			"host": [
				"http://core.ac.uk"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "core.ac.uk",
				"description": "\u003cp style=\"text-align: justify;\"\u003eYou can use the CORE API to access the \n    resources harvested and enriched by CORE. If you encounter any problems with the API, please \u003ca href=\"/contact\"\u003ereport them to us\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eOverview\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API is organised by resource type. The resources are \u003cb\u003earticles\u003c/b\u003e, \n    \u003cb\u003ejournals\u003c/b\u003e and \u003cb\u003erepositories\u003c/b\u003e and are represented using JSON data format. Furthermore, \n    each resource has a list of methods. The API also provides two global methods for accessing all resources at once.\u003c/p\u003e\n\n\u003ch2\u003eResponse format\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eResponse for each query contains two fields: \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e.\n    In case of an error status, the data field is empty. The data field contains a single object\n    in case the request is for a specific identifier (e.g. CORE ID, CORE repository ID, etc.), or  \n    contains a list of objects, for example for search queries. In case of batch requests, the response\n    is an array of objects, each of which contains its own \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e fields.\n    For search queries the response contains an additional field \u003cb\u003etotalHits\u003c/b\u003e, which is the \n    total number of items which match the search criteria.\u003c/p\u003e\n\n\u003ch2\u003eSearch query syntax\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify\"\u003eComplex search queries can be used in all of the API search methods.\n    The query can be a simple string or it can be built using terms and operators described in Elasticsearch\n    \u003ca href=\"http://www.elastic.co/guide/en/elasticsearch/reference/1.4/query-dsl-query-string-query.html#query-string-syntax\"\u003edocumentation\u003c/a\u003e.\n    The usable field names are \u003cstrong\u003etitle\u003c/strong\u003e, \u003cstrong\u003edescription\u003c/strong\u003e, \u003cstrong\u003efullText\u003c/strong\u003e, \n    \u003cstrong\u003eauthorsString\u003c/strong\u003e, \u003cstrong\u003epublisher\u003c/strong\u003e, \u003cstrong\u003erepositories.id\u003c/strong\u003e, \u003cstrong\u003erepositories.name\u003c/strong\u003e, \n    \u003cstrong\u003edoi\u003c/strong\u003e, \u003cstrong\u003eoai\u003c/strong\u003e, \u003cstrong\u003eidentifiers\u003c/strong\u003e (which is a list of article identifiers including OAI, URL, etc.), \u003cstrong\u003elanguage.name\u003c/strong\u003e \n    and \u003cstrong\u003eyear\u003c/strong\u003e. Some example queries:\n\u003c/p\u003e\n\n\u003cul style=\"margin-left: 30px;\"\u003e\n    \u003cli\u003e\u003cp\u003etitle:psychology and language.name:English\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003erepositories.id:86 AND year:2014\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003eidentifiers:\"oai:aura.abdn.ac.uk:2164/3837\" OR identifiers:\"oai:aura.abdn.ac.uk:2164/3843\"\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003edoi:\"10.1186/1471-2458-6-309\"\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSort order\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify;\"\u003eFor search queries, the results are ordered by relevance score. For batch \n    requests, the results are retrieved in the order of the requests.\u003c/p\u003e\n\n\u003ch2\u003eParameters\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API methods allow different parameters to be passed. Additionally, there is an API key parameter which is common to all API methods. For all API methods \n    the API key can be provided either as a query parameter or in the request header. If the API key \n    is not provided, the API will return HTTP 401 error. You can register for an API key \u003ca href=\"/services#api\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eAPI methods\u003c/h2\u003e",
				"version": "2.0",
				"slug": "core-api-v2-2-0-api-v2-repositories-get",
				"hosts": [
					"http://core.ac.uk"
				],
				"topics": [
					"open-data"
				],
				"schemes": [
					"http"
				]
			}
		},
		{
			"group": "core-api-v2-2-0",
			"url_pattern": "/api-v2/repositories/get/{repositoryId}",
			"method": "GET",
			"host": [
				"http://core.ac.uk"
			],
			"whitelist": [
				"status"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "core.ac.uk",
				"description": "\u003cp style=\"text-align: justify;\"\u003eYou can use the CORE API to access the \n    resources harvested and enriched by CORE. If you encounter any problems with the API, please \u003ca href=\"/contact\"\u003ereport them to us\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eOverview\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API is organised by resource type. The resources are \u003cb\u003earticles\u003c/b\u003e, \n    \u003cb\u003ejournals\u003c/b\u003e and \u003cb\u003erepositories\u003c/b\u003e and are represented using JSON data format. Furthermore, \n    each resource has a list of methods. The API also provides two global methods for accessing all resources at once.\u003c/p\u003e\n\n\u003ch2\u003eResponse format\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eResponse for each query contains two fields: \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e.\n    In case of an error status, the data field is empty. The data field contains a single object\n    in case the request is for a specific identifier (e.g. CORE ID, CORE repository ID, etc.), or  \n    contains a list of objects, for example for search queries. In case of batch requests, the response\n    is an array of objects, each of which contains its own \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e fields.\n    For search queries the response contains an additional field \u003cb\u003etotalHits\u003c/b\u003e, which is the \n    total number of items which match the search criteria.\u003c/p\u003e\n\n\u003ch2\u003eSearch query syntax\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify\"\u003eComplex search queries can be used in all of the API search methods.\n    The query can be a simple string or it can be built using terms and operators described in Elasticsearch\n    \u003ca href=\"http://www.elastic.co/guide/en/elasticsearch/reference/1.4/query-dsl-query-string-query.html#query-string-syntax\"\u003edocumentation\u003c/a\u003e.\n    The usable field names are \u003cstrong\u003etitle\u003c/strong\u003e, \u003cstrong\u003edescription\u003c/strong\u003e, \u003cstrong\u003efullText\u003c/strong\u003e, \n    \u003cstrong\u003eauthorsString\u003c/strong\u003e, \u003cstrong\u003epublisher\u003c/strong\u003e, \u003cstrong\u003erepositories.id\u003c/strong\u003e, \u003cstrong\u003erepositories.name\u003c/strong\u003e, \n    \u003cstrong\u003edoi\u003c/strong\u003e, \u003cstrong\u003eoai\u003c/strong\u003e, \u003cstrong\u003eidentifiers\u003c/strong\u003e (which is a list of article identifiers including OAI, URL, etc.), \u003cstrong\u003elanguage.name\u003c/strong\u003e \n    and \u003cstrong\u003eyear\u003c/strong\u003e. Some example queries:\n\u003c/p\u003e\n\n\u003cul style=\"margin-left: 30px;\"\u003e\n    \u003cli\u003e\u003cp\u003etitle:psychology and language.name:English\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003erepositories.id:86 AND year:2014\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003eidentifiers:\"oai:aura.abdn.ac.uk:2164/3837\" OR identifiers:\"oai:aura.abdn.ac.uk:2164/3843\"\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003edoi:\"10.1186/1471-2458-6-309\"\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSort order\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify;\"\u003eFor search queries, the results are ordered by relevance score. For batch \n    requests, the results are retrieved in the order of the requests.\u003c/p\u003e\n\n\u003ch2\u003eParameters\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API methods allow different parameters to be passed. Additionally, there is an API key parameter which is common to all API methods. For all API methods \n    the API key can be provided either as a query parameter or in the request header. If the API key \n    is not provided, the API will return HTTP 401 error. You can register for an API key \u003ca href=\"/services#api\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eAPI methods\u003c/h2\u003e",
				"version": "2.0",
				"slug": "core-api-v2-2-0-api-v2-repositories-get-repositoryid",
				"mapping": {
					"status": "status"
				},
				"hosts": [
					"http://core.ac.uk"
				],
				"topics": [
					"open-data"
				],
				"schemes": [
					"http"
				]
			}
		},
		{
			"group": "core-api-v2-2-0",
			"url_pattern": "/api-v2/repositories/search",
			"method": "POST",
			"host": [
				"http://core.ac.uk"
			],
			"whitelist": [
				"data",
				"status",
				"totalHits"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "core.ac.uk",
				"description": "\u003cp style=\"text-align: justify;\"\u003eYou can use the CORE API to access the \n    resources harvested and enriched by CORE. If you encounter any problems with the API, please \u003ca href=\"/contact\"\u003ereport them to us\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eOverview\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API is organised by resource type. The resources are \u003cb\u003earticles\u003c/b\u003e, \n    \u003cb\u003ejournals\u003c/b\u003e and \u003cb\u003erepositories\u003c/b\u003e and are represented using JSON data format. Furthermore, \n    each resource has a list of methods. The API also provides two global methods for accessing all resources at once.\u003c/p\u003e\n\n\u003ch2\u003eResponse format\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eResponse for each query contains two fields: \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e.\n    In case of an error status, the data field is empty. The data field contains a single object\n    in case the request is for a specific identifier (e.g. CORE ID, CORE repository ID, etc.), or  \n    contains a list of objects, for example for search queries. In case of batch requests, the response\n    is an array of objects, each of which contains its own \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e fields.\n    For search queries the response contains an additional field \u003cb\u003etotalHits\u003c/b\u003e, which is the \n    total number of items which match the search criteria.\u003c/p\u003e\n\n\u003ch2\u003eSearch query syntax\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify\"\u003eComplex search queries can be used in all of the API search methods.\n    The query can be a simple string or it can be built using terms and operators described in Elasticsearch\n    \u003ca href=\"http://www.elastic.co/guide/en/elasticsearch/reference/1.4/query-dsl-query-string-query.html#query-string-syntax\"\u003edocumentation\u003c/a\u003e.\n    The usable field names are \u003cstrong\u003etitle\u003c/strong\u003e, \u003cstrong\u003edescription\u003c/strong\u003e, \u003cstrong\u003efullText\u003c/strong\u003e, \n    \u003cstrong\u003eauthorsString\u003c/strong\u003e, \u003cstrong\u003epublisher\u003c/strong\u003e, \u003cstrong\u003erepositories.id\u003c/strong\u003e, \u003cstrong\u003erepositories.name\u003c/strong\u003e, \n    \u003cstrong\u003edoi\u003c/strong\u003e, \u003cstrong\u003eoai\u003c/strong\u003e, \u003cstrong\u003eidentifiers\u003c/strong\u003e (which is a list of article identifiers including OAI, URL, etc.), \u003cstrong\u003elanguage.name\u003c/strong\u003e \n    and \u003cstrong\u003eyear\u003c/strong\u003e. Some example queries:\n\u003c/p\u003e\n\n\u003cul style=\"margin-left: 30px;\"\u003e\n    \u003cli\u003e\u003cp\u003etitle:psychology and language.name:English\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003erepositories.id:86 AND year:2014\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003eidentifiers:\"oai:aura.abdn.ac.uk:2164/3837\" OR identifiers:\"oai:aura.abdn.ac.uk:2164/3843\"\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003edoi:\"10.1186/1471-2458-6-309\"\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSort order\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify;\"\u003eFor search queries, the results are ordered by relevance score. For batch \n    requests, the results are retrieved in the order of the requests.\u003c/p\u003e\n\n\u003ch2\u003eParameters\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API methods allow different parameters to be passed. Additionally, there is an API key parameter which is common to all API methods. For all API methods \n    the API key can be provided either as a query parameter or in the request header. If the API key \n    is not provided, the API will return HTTP 401 error. You can register for an API key \u003ca href=\"/services#api\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eAPI methods\u003c/h2\u003e",
				"version": "2.0",
				"slug": "core-api-v2-2-0-api-v2-repositories-search",
				"mapping": {
					"data": "data",
					"status": "status",
					"totalHits": "totalHits"
				},
				"hosts": [
					"http://core.ac.uk"
				],
				"topics": [
					"open-data"
				],
				"schemes": [
					"http"
				]
			}
		},
		{
			"group": "core-api-v2-2-0",
			"url_pattern": "/api-v2/repositories/search/{query}",
			"method": "GET",
			"host": [
				"http://core.ac.uk"
			],
			"whitelist": [
				"data",
				"status",
				"totalHits"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "core.ac.uk",
				"description": "\u003cp style=\"text-align: justify;\"\u003eYou can use the CORE API to access the \n    resources harvested and enriched by CORE. If you encounter any problems with the API, please \u003ca href=\"/contact\"\u003ereport them to us\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eOverview\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API is organised by resource type. The resources are \u003cb\u003earticles\u003c/b\u003e, \n    \u003cb\u003ejournals\u003c/b\u003e and \u003cb\u003erepositories\u003c/b\u003e and are represented using JSON data format. Furthermore, \n    each resource has a list of methods. The API also provides two global methods for accessing all resources at once.\u003c/p\u003e\n\n\u003ch2\u003eResponse format\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eResponse for each query contains two fields: \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e.\n    In case of an error status, the data field is empty. The data field contains a single object\n    in case the request is for a specific identifier (e.g. CORE ID, CORE repository ID, etc.), or  \n    contains a list of objects, for example for search queries. In case of batch requests, the response\n    is an array of objects, each of which contains its own \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e fields.\n    For search queries the response contains an additional field \u003cb\u003etotalHits\u003c/b\u003e, which is the \n    total number of items which match the search criteria.\u003c/p\u003e\n\n\u003ch2\u003eSearch query syntax\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify\"\u003eComplex search queries can be used in all of the API search methods.\n    The query can be a simple string or it can be built using terms and operators described in Elasticsearch\n    \u003ca href=\"http://www.elastic.co/guide/en/elasticsearch/reference/1.4/query-dsl-query-string-query.html#query-string-syntax\"\u003edocumentation\u003c/a\u003e.\n    The usable field names are \u003cstrong\u003etitle\u003c/strong\u003e, \u003cstrong\u003edescription\u003c/strong\u003e, \u003cstrong\u003efullText\u003c/strong\u003e, \n    \u003cstrong\u003eauthorsString\u003c/strong\u003e, \u003cstrong\u003epublisher\u003c/strong\u003e, \u003cstrong\u003erepositories.id\u003c/strong\u003e, \u003cstrong\u003erepositories.name\u003c/strong\u003e, \n    \u003cstrong\u003edoi\u003c/strong\u003e, \u003cstrong\u003eoai\u003c/strong\u003e, \u003cstrong\u003eidentifiers\u003c/strong\u003e (which is a list of article identifiers including OAI, URL, etc.), \u003cstrong\u003elanguage.name\u003c/strong\u003e \n    and \u003cstrong\u003eyear\u003c/strong\u003e. Some example queries:\n\u003c/p\u003e\n\n\u003cul style=\"margin-left: 30px;\"\u003e\n    \u003cli\u003e\u003cp\u003etitle:psychology and language.name:English\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003erepositories.id:86 AND year:2014\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003eidentifiers:\"oai:aura.abdn.ac.uk:2164/3837\" OR identifiers:\"oai:aura.abdn.ac.uk:2164/3843\"\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003edoi:\"10.1186/1471-2458-6-309\"\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSort order\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify;\"\u003eFor search queries, the results are ordered by relevance score. For batch \n    requests, the results are retrieved in the order of the requests.\u003c/p\u003e\n\n\u003ch2\u003eParameters\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API methods allow different parameters to be passed. Additionally, there is an API key parameter which is common to all API methods. For all API methods \n    the API key can be provided either as a query parameter or in the request header. If the API key \n    is not provided, the API will return HTTP 401 error. You can register for an API key \u003ca href=\"/services#api\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eAPI methods\u003c/h2\u003e",
				"version": "2.0",
				"slug": "core-api-v2-2-0-api-v2-repositories-search-query",
				"mapping": {
					"data": "data",
					"status": "status",
					"totalHits": "totalHits"
				},
				"hosts": [
					"http://core.ac.uk"
				],
				"topics": [
					"open-data"
				],
				"schemes": [
					"http"
				]
			}
		},
		{
			"group": "core-api-v2-2-0",
			"url_pattern": "/api-v2/search",
			"method": "POST",
			"host": [
				"http://core.ac.uk"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "core.ac.uk",
				"description": "\u003cp style=\"text-align: justify;\"\u003eYou can use the CORE API to access the \n    resources harvested and enriched by CORE. If you encounter any problems with the API, please \u003ca href=\"/contact\"\u003ereport them to us\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eOverview\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API is organised by resource type. The resources are \u003cb\u003earticles\u003c/b\u003e, \n    \u003cb\u003ejournals\u003c/b\u003e and \u003cb\u003erepositories\u003c/b\u003e and are represented using JSON data format. Furthermore, \n    each resource has a list of methods. The API also provides two global methods for accessing all resources at once.\u003c/p\u003e\n\n\u003ch2\u003eResponse format\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eResponse for each query contains two fields: \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e.\n    In case of an error status, the data field is empty. The data field contains a single object\n    in case the request is for a specific identifier (e.g. CORE ID, CORE repository ID, etc.), or  \n    contains a list of objects, for example for search queries. In case of batch requests, the response\n    is an array of objects, each of which contains its own \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e fields.\n    For search queries the response contains an additional field \u003cb\u003etotalHits\u003c/b\u003e, which is the \n    total number of items which match the search criteria.\u003c/p\u003e\n\n\u003ch2\u003eSearch query syntax\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify\"\u003eComplex search queries can be used in all of the API search methods.\n    The query can be a simple string or it can be built using terms and operators described in Elasticsearch\n    \u003ca href=\"http://www.elastic.co/guide/en/elasticsearch/reference/1.4/query-dsl-query-string-query.html#query-string-syntax\"\u003edocumentation\u003c/a\u003e.\n    The usable field names are \u003cstrong\u003etitle\u003c/strong\u003e, \u003cstrong\u003edescription\u003c/strong\u003e, \u003cstrong\u003efullText\u003c/strong\u003e, \n    \u003cstrong\u003eauthorsString\u003c/strong\u003e, \u003cstrong\u003epublisher\u003c/strong\u003e, \u003cstrong\u003erepositories.id\u003c/strong\u003e, \u003cstrong\u003erepositories.name\u003c/strong\u003e, \n    \u003cstrong\u003edoi\u003c/strong\u003e, \u003cstrong\u003eoai\u003c/strong\u003e, \u003cstrong\u003eidentifiers\u003c/strong\u003e (which is a list of article identifiers including OAI, URL, etc.), \u003cstrong\u003elanguage.name\u003c/strong\u003e \n    and \u003cstrong\u003eyear\u003c/strong\u003e. Some example queries:\n\u003c/p\u003e\n\n\u003cul style=\"margin-left: 30px;\"\u003e\n    \u003cli\u003e\u003cp\u003etitle:psychology and language.name:English\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003erepositories.id:86 AND year:2014\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003eidentifiers:\"oai:aura.abdn.ac.uk:2164/3837\" OR identifiers:\"oai:aura.abdn.ac.uk:2164/3843\"\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003edoi:\"10.1186/1471-2458-6-309\"\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSort order\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify;\"\u003eFor search queries, the results are ordered by relevance score. For batch \n    requests, the results are retrieved in the order of the requests.\u003c/p\u003e\n\n\u003ch2\u003eParameters\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API methods allow different parameters to be passed. Additionally, there is an API key parameter which is common to all API methods. For all API methods \n    the API key can be provided either as a query parameter or in the request header. If the API key \n    is not provided, the API will return HTTP 401 error. You can register for an API key \u003ca href=\"/services#api\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eAPI methods\u003c/h2\u003e",
				"version": "2.0",
				"slug": "core-api-v2-2-0-api-v2-search",
				"hosts": [
					"http://core.ac.uk"
				],
				"topics": [
					"open-data"
				],
				"schemes": [
					"http"
				]
			}
		},
		{
			"group": "core-api-v2-2-0",
			"url_pattern": "/api-v2/search/{query}",
			"method": "GET",
			"host": [
				"http://core.ac.uk"
			],
			"whitelist": [
				"data",
				"status",
				"totalHits"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "core.ac.uk",
				"description": "\u003cp style=\"text-align: justify;\"\u003eYou can use the CORE API to access the \n    resources harvested and enriched by CORE. If you encounter any problems with the API, please \u003ca href=\"/contact\"\u003ereport them to us\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eOverview\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API is organised by resource type. The resources are \u003cb\u003earticles\u003c/b\u003e, \n    \u003cb\u003ejournals\u003c/b\u003e and \u003cb\u003erepositories\u003c/b\u003e and are represented using JSON data format. Furthermore, \n    each resource has a list of methods. The API also provides two global methods for accessing all resources at once.\u003c/p\u003e\n\n\u003ch2\u003eResponse format\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eResponse for each query contains two fields: \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e.\n    In case of an error status, the data field is empty. The data field contains a single object\n    in case the request is for a specific identifier (e.g. CORE ID, CORE repository ID, etc.), or  \n    contains a list of objects, for example for search queries. In case of batch requests, the response\n    is an array of objects, each of which contains its own \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e fields.\n    For search queries the response contains an additional field \u003cb\u003etotalHits\u003c/b\u003e, which is the \n    total number of items which match the search criteria.\u003c/p\u003e\n\n\u003ch2\u003eSearch query syntax\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify\"\u003eComplex search queries can be used in all of the API search methods.\n    The query can be a simple string or it can be built using terms and operators described in Elasticsearch\n    \u003ca href=\"http://www.elastic.co/guide/en/elasticsearch/reference/1.4/query-dsl-query-string-query.html#query-string-syntax\"\u003edocumentation\u003c/a\u003e.\n    The usable field names are \u003cstrong\u003etitle\u003c/strong\u003e, \u003cstrong\u003edescription\u003c/strong\u003e, \u003cstrong\u003efullText\u003c/strong\u003e, \n    \u003cstrong\u003eauthorsString\u003c/strong\u003e, \u003cstrong\u003epublisher\u003c/strong\u003e, \u003cstrong\u003erepositories.id\u003c/strong\u003e, \u003cstrong\u003erepositories.name\u003c/strong\u003e, \n    \u003cstrong\u003edoi\u003c/strong\u003e, \u003cstrong\u003eoai\u003c/strong\u003e, \u003cstrong\u003eidentifiers\u003c/strong\u003e (which is a list of article identifiers including OAI, URL, etc.), \u003cstrong\u003elanguage.name\u003c/strong\u003e \n    and \u003cstrong\u003eyear\u003c/strong\u003e. Some example queries:\n\u003c/p\u003e\n\n\u003cul style=\"margin-left: 30px;\"\u003e\n    \u003cli\u003e\u003cp\u003etitle:psychology and language.name:English\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003erepositories.id:86 AND year:2014\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003eidentifiers:\"oai:aura.abdn.ac.uk:2164/3837\" OR identifiers:\"oai:aura.abdn.ac.uk:2164/3843\"\u003c/p\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cp\u003edoi:\"10.1186/1471-2458-6-309\"\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eSort order\u003c/h2\u003e\n\n\u003cp style=\"text-align: justify;\"\u003eFor search queries, the results are ordered by relevance score. For batch \n    requests, the results are retrieved in the order of the requests.\u003c/p\u003e\n\n\u003ch2\u003eParameters\u003c/h2\u003e\n\u003cp style=\"text-align: justify;\"\u003eThe API methods allow different parameters to be passed. Additionally, there is an API key parameter which is common to all API methods. For all API methods \n    the API key can be provided either as a query parameter or in the request header. If the API key \n    is not provided, the API will return HTTP 401 error. You can register for an API key \u003ca href=\"/services#api\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eAPI methods\u003c/h2\u003e",
				"version": "2.0",
				"slug": "core-api-v2-2-0-api-v2-search-query",
				"mapping": {
					"data": "data",
					"status": "status",
					"totalHits": "totalHits"
				},
				"hosts": [
					"http://core.ac.uk"
				],
				"topics": [
					"open-data"
				],
				"schemes": [
					"http"
				]
			}
		}
	]
}