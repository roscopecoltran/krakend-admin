syntax = "proto3";

import "google/api/annotations.proto";

package apitoview&searchforitems;

message GetItemGet_item_by_legacy_idRequest {
    // Specifies either: The legacy item Id of an item that is not part of a group. The legacy item Id of a group, which would be the group parent Id. Note: If you pass in a group Id, you must also use the legacy_variation_id field and pass in the legacy Id of the specific item variation (child Id). Legacy Ids are returned by eBay traditional APIs, such as the Trading API or Finding API. The following is an example of using the value of the ItemID field for a specific item from Trading to get the RESTful itemId value. &nbsp;&nbsp;&nbsp; browse/v1/item/get_item_by_legacy_id?legacy_item_id=110039490209 Maximum: 1
    string legacy_item_id = 1;
    // Specifies the legacy item Id of a specific item in an item group. Legacy Ids are returned by eBay traditional APIs, such as the Trading API or Finding API. Maximum: 1 Requirement: You must always pass in the legacy_item_id with the legacy_variation_id
    string legacy_variation_id = 2;
    // Specifics the legacy SKU of the item. Legacy SKUs are returned by eBay traditional APIs, such as the Trading API or Finding API. The following is an example of using the value of the ItemID and SKU fields, which were returned by the Trading API, to get the RESTful itemId value. &nbsp;&nbsp;&nbsp; browse/v1/item/get_item_by_legacy_id?legacy_item_id=110039490209&amp;legacy_variation_sku=V-00031-WHM Maximum: 1 Requirement: You must always pass in the legacy_item_id with the legacy_variation_sku
    string legacy_variation_sku = 3;
}

message GetItemGet_items_by_item_groupRequest {
    // Identifier of the item group to return. This Id is returned in the itemGroupHref field of the search and getItem calls. For Example: https://api.ebay.com/buy/browse/v1/item/get_items_by_item_group?item_group_id=351825690866
    string item_group_id = 1;
}

message GetItemItem_idRequest {
    // This field lets you control what is returned in the response. If you do not set this field, the call returns all the details of the item. Note: Currently the only value supported is COMPACT. Valid values: COMPACT - This returns the following fields, which let you quickly check if the availability or price of the item has changed, if the item has been revised by the seller, or if an item's top-rated plus status has changed for items you have stored. itemId - The identifier of the item. sellerItemRevision - An identifier generated/incremented when a seller revises the item. There are two types of item revisions; seller changes, such as changing the title, and eBay system changes, such as changing the quantity when an item is purchased. This Id is changed only when the seller makes a change to the item. This means you cannot use this value to determine if the quantity has changed. topRatedBuyingExperience - A boolean value indicating if this item is a top-rated plus item. A change in the item's top rated plus standing is not tracked by the revision Id. See topRatedBuyingExperience for more information. price - This is tracked by the revision Id but is returned here to enable you to quickly verify the price of the item. estimatedAvailabilities - Returns the item availability information, which is based on the item's quantity. Changes in quantity are not tracked by the revision Id. For Example To check if a stored item's information is current, do following. Pass in the item Id and set fieldgroups to COMPACT. item/v1|46566502948|0?fieldgroups=COMPACT Do one of the following: If the sellerItemRevision field is returned and you haven't stored a revision number for this item, record the number and pass in the item Id in the getItem call to get the latest information. If the revision number is different from the value you have stored, update the value and pass in the item Id in the getItem call to get the latest information. If the sellerItemRevision field is not returned or has not changed, where needed, update the item information with the information returned in the response.
    string fieldgroups = 1;
    // The eBay identifier of an item. This Id is returned by the Browse and Feed API calls. The Id must be in RESTful item Id format. For example: v1|262446562346|561248611424 or v1|112330214619|0. For more information about item Id for RESTful APIs, see the Legacy API compatibility section of the Buy APIs Overview.
    string item_id = 2;
}

message GetItem_summarySearchRequest {
    // The aspect name/value pairs and category, which is required, to use to limit the results. For example, in a clothing category one aspect pair would be Color/Red. For example, the call below uses the category Id for Women's Clothing. This will return only items for a woman's red shirt. /buy/browse/v1/item_summary/search?q=shirt&amp;aspect_filter=categoryId:15724,Color:{Red} To get a list of the aspects pairs and the category, which is returned in the dominantCategoryId field, set fieldgroups to ASPECT_REFINEMENTS. /buy/browse/v1/item_summary/search?q=shirt&amp;fieldgroups=ASPECT_REFINEMENTS Required: categoryId:categoryId-value For implementation help, refer to eBay API documentation at https://developer.ebay.com/devzone/rest/api-ref/browse/types/AspectFilter.html
    string aspect_filter = 1;
    // The category Ids to use to limit the results. This field can have one category Id or a comma separated list of Ids. For example: &nbsp;&nbsp;&nbsp;GET https://api.ebay.com/buy/browse/v1/item_summary/search?category_ids=29792 Note: Currently, you can pass in only one category Id. You can also use any combination of the category_Ids, epid, and q fields. This gives you additional control over the result set. For example, let's say you are looking of a toy phone. If you search for &quot;phone&quot;, the result set will be mobile phones because this is the &quot;Best Match&quot; for this search. But if you also include the toy category Id, the results will be what you wanted. For example: &nbsp;&nbsp;&nbsp;GET https://api.ebay.com/buy/browse/v1/item_summary/search?q=phone&amp;category_ids=220 The list of eBay category Ids is not published and category Ids are not the same across all the eBay marketplaces. You can use the following techniques to find a category by site. Use the Category Changes page. Use the Taxonomy API. For details see Categories for Buy API Calls. Submit the following call to get the dominantCategoryId for an item. /buy/browse/v1/item_summary/search?q=keyword&amp;fieldgroups=ASPECT_REFINEMENTS Note: If a top-level (L1) category is specified, you must also include the q query parameter. Required: The call must have category_ids, epid, gtin, or q (or any combination of these)
    string category_ids = 2;
    // The EPID is the eBay product identifier of a product from the eBay product catalog. Only items in the specified EPID are returned. The Marketing API getMerchandisedProducts call and the getItem, getItemByLegacyId, and getItemsByItemGroup calls return the EPID of the product. &nbsp;&nbsp;&nbsp;/buy/browse/v1/item_summary/search?epid:{15032} Maximum: 1 Required: The call must have category_ids, epid, gtin, or q (or any combination of these)
    string epid = 3;
    // This field lets you control what is to be returned in the response. The default is MATCHING_ITEMS, which returns the items that match the keyword or category specified. The other values return data that can be used to create histograms. For code examples see, aspect_filter. Valid Values: ASPECT_REFINEMENTS - This returns the aspectDistributions container, which has the dominantCategoryId, matchCount, and refinementHref for the various aspects of the items found. For example, if you searched for 'Mustang', some of the aspect would be Model Year , Exterior Color , Vehicle Mileage , etc. Note: ASPECT_REFINEMENTS are category specific. BUYING_OPTION_REFINEMENTS - This returns the buyingOptionDistributions container, which has the matchCount and refinementHref for AUCTION and FIXED_PRICE (Buy It Now) items. Note: Classified items are not supported. CATEGORY_REFINEMENTS - This returns the categoryDistributions container, which has the categories that the item is in. CONDITION_REFINEMENTS - This returns the conditionDistributions container, such as NEW, USED, etc. Within these groups are multiple states of the condition. For example, New can be New without tag, New in box, New without box, etc. MATCHING_ITEMS - This is meant to be used with one or more of the refinement values above. You use this to return the specified refinements and all the matching items. FULL - This returns all the refinement containers and all the matching items. Code so that your app gracefully handles any future changes to this list. Default: MATCHING_ITEMS
    string fieldgroups = 4;
    // This field supports multiple field filters that can be used to use to limit/customize the result set. For example: &nbsp;&nbsp;&nbsp;GET https://api.ebay.com/buy/browse/v1/item_summary/search?q=shirt&amp;filter=price:[10..50] You can also combine filters. &nbsp;&nbsp;&nbsp;GET https://api.ebay.com/buy/browse/v1/item_summary/search?q=shirt&amp;filter=price:[10..50],sellers:{rpseller|bigSal} The following are the supported filters. For details and examples for all the filters, see search Call Field Filters. buyingOptions conditionIds conditions deliveryCountry deliveryOptions deliveryPostalCode excludeCategoryIds excludeSellers itemEndDate itemLocationCountry itemStartDate paymentMethods pickupCountry pickupPostalCode pickupRadius pickupRadiusUnit price priceCurrency maxDeliveryCost (free shipping) returnsAccepted sellerAccountTypes sellers For implementation help, refer to eBay API documentation at https://developer.ebay.com/devzone/rest/api-ref/browse/types/FilterField.html
    string filter = 5;
    // This field lets you search by GTIN (other Global Trade Item Number) or UPC (Universal Product Code) value. &nbsp;&nbsp;&nbsp;/buy/browse/v1/item_summary/search?gtin:{099482432621} Maximum: 1 Required: The call must have category_ids, epid, gtin, or q (or any combination of these)
    string gtin = 6;
    // The number of items in a result set. Default: 50 Maximum per result set: 200 Maximum number of items returned: 10,000
    string limit = 7;
    // The number of items to skip in the result set. This is used with the limit field to control the pagination of the output. If offset is 0 and limit is 10, the call will retrieve items 1-10 from the list of items returned, if offset is 10 and limit is 10, the call will retrieve items 11 thru 20 from the list of items returned. Default: 0
    string offset = 8;
    // A string consisting of one or more words that are used for a search of items on eBay. For example: &quot;iphone&quot; or &quot;Harry Potter&quot;. When keywords are separated by a comma, the comma is ignored. So a keyword of &quot;iphone, ipad&quot; is the same as using &quot;iphone ipad&quot;. Both queries return items that have iphone or ipad. Restriction: The * wildcard character is not allowed in this field. Required: The call must have category_ids, epid, gtin, or q (or any combination of these)
    string q = 9;
    // Specifies the order and the field name to use to sort the items. To sort in descending order use - before the field name. Currently, you can only sort by price (in ascending or descending order), or by distance (only applicable if the &quot;pickup&quot; filters are used, and only ascending order is supported). If no sort parameter is submitted, the result set is sorted by &quot;Best Match&quot;. The following are examples of using the sort query parameter. Sort Result &amp;sort=price Sorts by price in ascending order (lowest price first) &amp;sort=-price Sorts by price in descending order (highest price first) &amp;sort=distance Sorts by distance in ascending order (shortest distance first) Default: ascending For implementation help, refer to eBay API documentation at https://developer.ebay.com/devzone/rest/api-ref/browse/types/SortField.html
    string sort = 10;
}

message Address {
    // The first line of the street address.
    string addressLine1 = 1;
    // The second line of the street address. This field is not always used, but can be used for 'Suite Number' or 'Apt Number'.
    string addressLine2 = 2;
    // The city of the address.
    string city = 3;
    // The three-letter ISO 3166-1 standard of the country of the address. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/browse/types/CountryCodeEnum.html'>eBay API documentation</a>
    string country = 4;
    // The county of the address.
    string county = 5;
    // The postal code of the address.
    string postalCode = 6;
    // The state or province of the address.
    string stateOrProvince = 7;
}

message AspectDistribution {
    // An array of containers for the various values of the aspect and the match count and a HATEOAS reference ( refinementHref) for this aspect.
    repeated AspectValueDistribution aspectValueDistributions = 1;
    // Name of an aspect, such as Brand, Color, etc.
    string localizedAspectName = 2;
}

message AspectValueDistribution {
    // The value of an aspect. For example, Red is a value for the aspect Color.
    string localizedAspectValue = 1;
    // The number of items with this aspect.
    int32 matchCount = 2;
    // The URI of the aspect.
    string refinementHref = 3;
}

message BuyingOptionDistribution {
    // Buying option type. This will be either AUCTION or FIXED_PRICE.
    string buyingOption = 1;
    // The number of items having this buying option.
    int32 matchCount = 2;
    // The URI of the buying option.
    string refinementHref = 3;
}

message Category {
    // The unique identifier of the primary listing category of the item (as well as secondary listing category if item was listed in two categories).
    string categoryId = 1;
}

message CategoryDistribution {
    // The identifier of the category.
    string categoryId = 1;
    // The name of the category, such as Baby &amp; Toddler Clothing.
    string categoryName = 2;
    // The number of items having the in this category.
    int32 matchCount = 3;
    // The URI of the category.
    string refinementHref = 4;
}

message CommonDescriptions {
    // The item description that is used by more than one of the item variations.
    string description = 1;
    // A list of item Ids that have this description.
    repeated string itemIds = 2;
}

message ConditionDistribution {
    // The name of the condition.
    string condition = 1;
    // The identifier of the condition. For example, 1000 is the identifier for NEW.
    string conditionId = 2;
    // The number of items having the condition.
    int32 matchCount = 3;
    // The URI of the condition.
    string refinementHref = 4;
}

message ConvertedAmount {
    // A three-letter ISO 4217 code that indicates the currency of the amount in the convertedFromValue field. This value is required or returned only if currency conversion/localization is required, and represents the pre-conversion currency. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/browse/types/CurrencyCodeEnum.html'>eBay API documentation</a>
    string convertedFromCurrency = 1;
    // The monetary amount before any conversion is performed, in the currency specified by the convertedFromCurrency field. This value is required or returned only if currency conversion/localization is required. The value field contains the converted amount of this value, in the currency specified by the currency field.
    string convertedFromValue = 2;
    // A three-letter ISO 4217 code that indicates the currency of the amount in the value field. If currency conversion/localization is required, this is the post-conversion currency of the amount in the value field. Default: The currency of the user's country. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/browse/types/CurrencyCodeEnum.html'>eBay API documentation</a>
    string currency = 3;
    // The dollar value of the currency specified in the currency field. The value of currency defaults to the standard currency used by the country of the eBay site offering the item.
    string value = 4;
}

message Error {
    // This string value indicates the error category. There are three categories of errors: request errors, application errors, and system errors.
    string category = 1;
    // The name of the primary system where the error occurred. This is relevant for application errors.
    string domain = 2;
    // A unique code that identifies the particular error or warning that occurred. Your application can use error codes as identifiers in your customized error-handling algorithms.
    int32 errorId = 3;
    // An array of reference Ids that identify the specific request elements most closely associated to the error or warning, if any.
    repeated string inputRefIds = 4;
    // A detailed description of the condition that caused the error or warning, and information on what to do to correct the problem.
    string longMessage = 5;
    // A description of the condition that caused the error or warning.
    string message = 6;
    // An array of reference Ids that identify the specific response elements most closely associated to the error or warning, if any.
    repeated string outputRefIds = 7;
    // An array of warning and error messages that return one or more variables contextual information about the error or warning. This is often the field or value that triggered the error or warning.
    repeated ErrorParameter parameters = 8;
    // The name of the subdomain in which the error or warning occurred.
    string subdomain = 9;
}

message ErrorParameter {
    // This is the name of input field that caused an issue with the call request.
    string name = 1;
    // This is the actual value that was passed in for the element specified in the name field.
    string value = 2;
}

message EstimatedAvailability {
    // The 'display item quantity' threshold value the seller has set.
    int32 availabilityThreshold = 1;
    // Only returns MORE_THAN, which indicates that the seller has more that the 'quantity display preference' value in stock for this item. This field depends on how the seller has set their item quantity display preference. Let's say the following are the quantity display preferences the seller can choose between. Display &quot;More than 10 available&quot; in your listing (if applicable) If the seller enables this preference, this field is returned as long as there are more than 10 in inventory of this item. If the quantity is equal to 10 or drops below 10, this field is not returned and the actual quantity of the item is returned in the estimatedAvailableQuantity field. Display the exact quantity in your listings If the seller enables this preference, the availabilityThresholdType field is not returned and the actual quantity of the item is returned in the estimatedAvailableQuantity field. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/browse/types/AvailabilityThresholdEnum.html'>eBay API documentation</a>
    string availabilityThresholdType = 2;
    // An array of available delivery options.
    repeated string deliveryOptions = 3;
    // Indicates the estimated availability of this item. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/browse/types/AvailabilityStatusEnum.html'>eBay API documentation</a>
    string estimatedAvailabilityStatus = 4;
    // The estimated number of a specific item that are available for purchase.
    int32 estimatedAvailableQuantity = 5;
    // The estimated number of a specific item that have been sold.
    int32 estimatedSoldQuantity = 6;
}

message Image {
    // Reserved for future use.
    int32 height = 1;
    // The URL of the image of the item.
    string imageUrl = 2;
    // Reserved for future use.
    int32 width = 3;
}

message Item {
    // An array of containers with the URLs for the images that are in addition to the primary image. The primary image is returned in the image field.
    repeated Image additionalImages = 1;
    // (Primary Item Aspect) The age group for which the product is recommended. For example, newborn, infant, toddler, kids, adult, etc. All the item aspects, including this aspect, are returned in the localizedAspects container.
    string ageGroup = 2;
    // This integer value indicates the total number of bids that have been placed against an auction item. This field is returned only for auction listings.
    int32 bidCount = 3;
    // (Primary Item Aspect) The name brand of the item, such as Nike, Apple, etc. All the item aspects, including this aspect, are returned in the localizedAspects container.
    string brand = 4;
    // A list of purchase options available for the item, such as FIXED PRICE.
    repeated string buyingOptions = 5;
    // Text that shows the category hierarchy of the item. For example: Computers/Tablets &amp; Networking, Laptops &amp; Netbooks, PC Laptops &amp; Netbooks
    string categoryPath = 6;
    // (Primary Item Aspect) Text describing the color of the item. All the item aspects, including this aspect, are returned in the localizedAspects container.
    string color = 7;
    // The condition of the item, such as New or Used.
    string condition = 8;
    // The identifier of the condition. For example, 1000 is the identifier for NEW.
    string conditionId = 9;
    ConvertedAmount currentBidPrice = 10;
    // The full description of the item that was created by the seller. This can be plain text or rich content.
    string description = 11;
    // Indicates the European energy efficiency rating (EEK) of the item. This field is returned only if the seller specified the energy efficiency rating. The rating is a set of energy efficiency classes from A to G, where 'A' is the most energy efficient and 'G' is the least efficient. This rating helps buyers choose between various models. When the manufacturer's specifications for this item are available, the link to this information is returned in the productFicheWebUrl field.
    string energyEfficiencyClass = 12;
    // An EPID is the eBay product identifier of a product from the eBay product catalog. This indicates the product in which the item belongs.
    string epid = 13;
    // The container that returns the item availability information. Because the quantity of an item can change several times within a few seconds, it is impossible to return the exact quantity. So instead of returning quantity, this returns the availability of the item based on the threshold the seller has set.
    repeated EstimatedAvailability estimatedAvailabilities = 14;
    // (Primary Item Aspect) The gender for the item. This is used for items that could vary by gender, such as clothing. For example: male, female, or unisex. All the item aspects, including this aspect, are returned in the localizedAspects container.
    string gender = 15;
    // The unique Global Trade Item, (UPC, ISBN, EAN) number of the item as defined by http://www.gtin.info.
    string gtin = 16;
    Image image = 17;
    // The URL of the View Item page of the item, which includes the affiliate tracking Id. This field is only returned if the seller enables affiliate tracking for the listing by including the X-EBAY-C-ENDUSERCTX request header in the call.
    string itemAffiliateWebUrl = 18;
    // The date and time up to which the item(s) can be purchased. This value is returned in UTC format (yyyy-MM-ddThh:mm:ss.sssZ), which you can convert into the local time of the buyer.
    string itemEndDate = 19;
    // The unique identifier of the item. Example: v1|150006693022|450002439078
    string itemId = 20;
    Address itemLocation = 21;
    // The URL of the View Item page of the item.
    string itemWebUrl = 22;
    // An array of containers for the complete list of the name/value pairs that describe the variation of the item.
    repeated TypedNameValue localizedAspects = 23;
    MarketingPrice marketingPrice = 24;
    // (Primary Item Aspect) Text describing what the item is made of. For example, silk. All the item aspects, including this aspect, are returned in the localizedAspects container.
    string material = 25;
    // The manufacturer's part number, which is a unique number that identifies a specific product.
    string mpn = 26;
    // (Primary Item Aspect) Text describing the pattern used on the item. For example, paisley. All the item aspects, including this aspect, are returned in the localizedAspects container.
    string pattern = 27;
    ConvertedAmount price = 28;
    // This enumeration value indicates how item price is displayed. For some items, the prices are so low that they can only be shown to the buyer after they add the item to the cart. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/browse/types/PriceDisplayConditionEnum.html'>eBay API documentation</a>
    string priceDisplayCondition = 29;
    ItemGroupSummary primaryItemGroup = 30;
    ReviewRating primaryProductReviewRating = 31;
    // The URL of a page containing the manufacture's specification of this item, which helps buyers make a purchasing decision. This information is available only for items that include the European energy efficiency rating (EEK) but is not available for all items with an EEK rating. This field is returned only if this information is available. The EEK rating of the item is returned in the energyEfficiencyClass field.
    string productFicheWebUrl = 32;
    // The maximum number for a specific item that one buyer can purchase.
    int32 quantityLimitPerBuyer = 33;
    ItemReturnTerms returnTerms = 34;
    Seller seller = 35;
    // An identifier generated/incremented when a seller revises the item. There are two types of item revisions; seller changes, such as changing the title, and eBay system changes, such as changing the quantity when an item is purchased. This Id is changed only when the seller makes a change to the item. This means you cannot use this value to determine if the quantity has changed.
    string sellerItemRevision = 36;
    ShipToLocations shipToLocations = 37;
    // An array of shipping options containers that have the details about cost, carrier, etc. of one shipping option.
    repeated ShippingOption shippingOptions = 38;
    // A snippet of the full description of the item in plain text.
    string shortDescription = 39;
    // (Primary Item Aspect) The size of the item. For example, '7' for a size 7 shoe. All the item aspects, including this aspect, are returned in the localizedAspects container.
    string size = 40;
    // (Primary Item Aspect) The sizing system of the country. All the item aspects, including this aspect, are returned in the localizedAspects container. Valid Values: &nbsp;&nbsp;US &nbsp;&nbsp;UK &nbsp;&nbsp;EU &nbsp;&nbsp;DE &nbsp;&nbsp;FR &nbsp;&nbsp;JP &nbsp;&nbsp;CN (China) &nbsp;&nbsp;IT &nbsp;&nbsp;BR &nbsp;&nbsp;MEX &nbsp;&nbsp;AU Code so that your app gracefully handles any future changes to this list.
    string sizeSystem = 41;
    // (Primary Item Aspect) Text describing a size group in which the item would be included, such as regular, petite, plus, big-and-tall or maternity. All the item aspects, including this aspect, are returned in the localizedAspects container.
    string sizeType = 42;
    // An additional shorten title for the item that is created by the seller.
    string subtitle = 43;
    // The container for the tax information for item.
    repeated Taxes taxes = 44;
    // The seller-created title of the item.
    string title = 45;
    // Indicates if the item a top-rated plus item. There are three benifits of a top-rated plus item; a minimum 30-day money-back return policy, shipping the items in 1 business day with tracking provided, and the added comfort of knowing this item is from experienced sellers with the highest buyer ratings. See the Top Rated Plus Items and Becoming a Top Rated Seller and qualifying for Top Rated Plus help topics for more information.
    bool topRatedBuyingExperience = 46;
    // This integer value indicates the number of different eBay users who have placed one or more bids on an auction item. This field is only applicable to auction listings.
    int32 uniqueBidderCount = 47;
    // An array of warning messages. These type of errors do not prevent the call from executing but should be checked.
    repeated Error warnings = 48;
}

message ItemGroupSummary {
    // An array of containers with the URLs for images that are in addition to the primary image of the item group The primary image is returned in the itemGroupImage field.
    repeated Image itemGroupAdditionalImages = 1;
    // The URI of the item group.
    string itemGroupHref = 2;
    // The unique identifier for the item group.
    string itemGroupId = 3;
    Image itemGroupImage = 4;
    // The title of the item that appears on the item group page.
    string itemGroupTitle = 5;
    // Indicates the type of the group. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/browse/types/ItemGroupTypeEnum.html'>eBay API documentation</a>
    string itemGroupType = 6;
}

message ItemLocationImpl {
    // The first line of the street address.
    string addressLine1 = 1;
    // The second line of the street address. This field may contain such values as an apartment or suite number.
    string addressLine2 = 2;
    // The city in which the item is located.
    string city = 3;
    // The country in which the item is located. These values are two-digit codes defined by the ISO 3166-1 alpha-2 standard, and also shown in the CountryCodeEnum type. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/browse/types/CountryCodeEnum.html'>eBay API documentation</a>
    string country = 4;
    // The county in which the item is located.
    string county = 5;
    // The postal code (or zip code in US) where the item is located.
    string postalCode = 6;
    // The state or province in which the item is located.
    string stateOrProvince = 7;
}

message ItemReturnTerms {
    // Indicates if the seller has enabled the Extended Holiday Returns feature on the item. Extended Holiday Returns are only applicable during the US holiday season, and gives buyers extra time to return an item. This 'extra time' will typically extend beyond what is set through the returnPeriod value.
    bool extendedHolidayReturnsOffered = 1;
    // This enumeration value indicates how a buyer is refunded when an item is returned. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/browse/types/RefundMethodEnum.html'>eBay API documentation</a>
    string refundMethod = 2;
    // This string field indicates the restocking fee percentage that the seller has set on the item. Sellers have the option of setting no restocking fee for an item, or they can set the percentage to 10, 15, or 20 percent. So, if the cost of the item was $100, and the restocking percentage was 20 percent, the buyer would be charged $20 to return that item, so instead of receiving a $100 refund, they would received $80 due to the restocking fee.
    string restockingFeePercentage = 3;
    // Text written by the seller describing what the buyer should to do in order to return the item.
    string returnInstructions = 4;
    // This field is returned if the seller offers the buyer an item replacement or exchange instead of a monetary refund. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/browse/types/ReturnMethodEnum.html'>eBay API documentation</a>
    string returnMethod = 5;
    TimeDuration returnPeriod = 6;
    // This enumeration value indicates whether the buyer or seller is responsible for return shipping costs when an item is returned. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/browse/types/ReturnShippingCostPayerEnum.html'>eBay API documentation</a>
    string returnShippingCostPayer = 7;
    // Indicates whether or not the seller accepts returns for the item.
    bool returnsAccepted = 8;
}

message ItemSummary {
    // This container is an array of URLs for Gallery Plus images of the item listing.
    repeated Image additionalImages = 1;
    // This integer value indicates the total number of bids that have been placed for an auction item. This field is only returned for auction listings.
    int32 bidCount = 2;
    // The value returned in this field indicates the buying option for the item. FIXED_PRICE is returned for basic fixed-price listings, AUCTION is returned for auction listings without Buy It Now feature, and both FIXED_PRICE and AUCTION are returned for auction listings enabled with the Buy It Now feature.
    repeated string buyingOptions = 3;
    // This container consists of the primary listing category Id of the item (as well as secondary listing category if item was listed in two categories).
    repeated Category categories = 4;
    // The condition of the item, such as New or Used.
    string condition = 5;
    // The identifier of the condition. For example, 1000 is the identifier for NEW.
    string conditionId = 6;
    ConvertedAmount currentBidPrice = 7;
    TargetLocation distanceFromPickupLocation = 8;
    // The value returned in this field indicates the energy efficiency rating of the item. Energy efficiency ratings apply to products listed by commercial vendors in electronics categories only. Currently, this field is only applicable for the Germany site, and this field is only returned if the seller specified the energy efficiency rating through item specifics at listing time. Rating values include A+++, A++, A+, A, B, C, D, E, F, and G.
    string energyEfficiencyClass = 9;
    // An EPID is the eBay product identifier of a product from the eBay product catalog. This indicates the product in which the item belongs.
    string epid = 10;
    Image image = 11;
    // The URL to the View Item page of the item, which includes the affiliate tracking Id. This field is only returned if the seller enables affiliate tracking for the listing by including the X-EBAY-C-ENDUSERCTX request header in the call.
    string itemAffiliateWebUrl = 12;
    // The URI of the parent page of a group of items with varying aspects. Note: This field is returned only for item groups.
    string itemGroupHref = 13;
    // Indicates the item group type. Currently only SELLER_DEFINED_VARIATIONS is supported and indicates this is an item group created by the seller. Note: This field is returned only for item groups.
    string itemGroupType = 14;
    // The URI of the item. This field is always populated.
    string itemHref = 15;
    // The unique identifier of the item. For example: v1|150006693022|450002439078
    string itemId = 16;
    ItemLocationImpl itemLocation = 17;
    // The URL to the View Item page of the item.
    string itemWebUrl = 18;
    MarketingPrice marketingPrice = 19;
    // This container lists the local pickup options available to the buyer. This container is only returned if the user is searching for local pickup items and set the local pickup filters in the call request.
    repeated PickupOptionSummary pickupOptions = 20;
    ConvertedAmount price = 21;
    Seller_0 seller = 22;
    // This container returns the shipping options available to ship the item.
    repeated ShippingOptionSummary shippingOptions = 23;
    // This container is an array of thumbnail images for the item. For each image, the URL to the image is given.
    repeated Image thumbnailImages = 24;
    // The seller-created title of the item. The maximum length is 80 characters.
    string title = 25;
}

message Items {
    // An array of containers for a description and the item Ids of all the items that have this exact description. Often the item variations within an item group all have the same description. Instead of repeating this description in the item details of each item, an description that is shared by at one other item is returned in this container. If the description is unique, it is returned in the items.description field.
    repeated CommonDescriptions commonDescriptions = 1;
    // An array of containers for all the item variations details, excluding the description.
    repeated Item items = 2;
}

message LegalAddress {
    // The first line of the street address.
    string addressLine1 = 1;
    // The second line of the street address. This field is not always used, but can be used for 'Suite Number' or 'Apt Number'.
    string addressLine2 = 2;
    // The city of the address.
    string city = 3;
    // The three-letter ISO 3166-1 standard of the country of the address. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/browse/types/CountryCodeEnum.html'>eBay API documentation</a>
    string country = 4;
    // The name of the country of the address.
    string countryName = 5;
    // The name of the county of the address.
    string county = 6;
    // The postal code of the address.
    string postalCode = 7;
    // The state or province of the address.
    string stateOrProvince = 8;
}

message MarketingPrice {
    ConvertedAmount discountAmount = 1;
    // This field expresses the percentage of the seller discount based on the value in the originalPrice container.
    string discountPercentage = 2;
    ConvertedAmount originalPrice = 3;
}

message PickupOptionSummary {
    // This container returns the local pickup options available to the buyer. Possible values are ARRANGED_LOCATION and STORE.
    string pickupLocationType = 1;
}

message RatingHistogram {
    // The total number of user ratings that the product has received.
    int32 count = 1;
    // This is the average rating for the product. As part of a product review, users rate the product. Products are rated from one star (terrible) to five stars (excellent), with each star having a corresponding point value - one star gets 1 point, two stars get 2 points, and so on. If a product had one four-star rating and one five-star rating, its average rating would be 4.5, and this is the value that would appear in this field.
    string rating = 2;
}

message Refinement {
    // A array of containers for the all the aspect refinements.
    repeated AspectDistribution aspectDistributions = 1;
    // A array of containers for the all the buying option refinements.
    repeated BuyingOptionDistribution buyingOptionDistributions = 2;
    // A array of containers for the all the category refinements.
    repeated CategoryDistribution categoryDistributions = 3;
    // A array of containers for the all the condition refinements.
    repeated ConditionDistribution conditionDistributions = 4;
    // The identifier of the category that most of the items are part of.
    string dominantCategoryId = 5;
}

message Region {
    // A free-form text string that indicates the name of the region. This value can be the name of a world region (such as the &quot;Middle East&quot; or &quot;Southeast Asia&quot;), a country, or a domestic region within a country (such as &quot;Alaska/Hawaii&quot; or &quot;US Protectorates&quot;) depending on the value of regionType. This value should be WORLDWIDE if the regionType value is WORLDWIDE.
    string regionName = 1;
    // Indicates the type of region. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/browse/types/RegionTypeEnum.html'>eBay API documentation</a>
    string regionType = 2;
}

message ReviewRating {
    // The average rating given to a product based on customer reviews.
    string averageRating = 1;
    // An array of containers for the product rating histograms that shows the review counts and the product rating.
    repeated RatingHistogram ratingHistograms = 2;
    // The total number of reviews for the item.
    int32 reviewCount = 3;
}

message SearchPagedCollection {
    // The URI of the current result set. For example: https://api.ebay.com/buy/v1/item/search?q=shirt&amp;price=[20..80]&amp;limit=5 This query is for a shirt, that is priced between 20 and 80 dollars and limit the response to 5 items.
    string href = 1;
    // An array of items in one result set. The items are sorted according to the sorting method specified in the request.
    repeated ItemSummary itemSummaries = 2;
    // The maximum number of items that can be returned in a result set. The limit value is set in the request.
    int32 limit = 3;
    // The URL for the next result set. This is returned if there is a next result set. The following example returns items 11 thru 20 from the list of items. https://api.ebay.com/buy/v1/item/search?query=t-shirts&amp;limit=10&amp;offset=0
    string next = 4;
    // This value indicates the current 'page' of items being displayed. This value is 0 for the first page of data, 1 for the second page of data, and so on.
    int32 offset = 5;
    // The URL for the previous result set. This is returned if there is a previous result set. The following example returns items 1 thru 10 from the list of items. https://api.ebay.com/buy/v1/item/search?query=t-shirts&amp;limit=10&amp;offset=0
    string prev = 6;
    Refinement refinement = 7;
    // The total number of items that match the input criteria.
    int32 total = 8;
    // The container with all the warnings for the input request.
    repeated Error warnings = 9;
}

message Seller {
    // The percentage of the total positive feedback.
    string feedbackPercentage = 1;
    // The feedback score of the seller. This value is based on the ratings from eBay members that bought items from this seller.
    int32 feedbackScore = 2;
    // Indicates if the seller is a business or an individual. This is determined when the seller registers with eBay. If they register for a business account, this value will be BUSINESS. If they register for a private account, this value will be INDIVIDUAL. This designation is required by the tax laws in some countries. This field is returned only on the following sites. EBAY-AT &nbsp;&nbsp;&nbsp;EBAY-BE &nbsp;&nbsp;&nbsp;EBAY-CH &nbsp;&nbsp;&nbsp;EBAY-DE &nbsp;&nbsp;&nbsp;EBAY-ES &nbsp;&nbsp;&nbsp;EBAY-FR &nbsp;&nbsp;&nbsp;EBAY-GB &nbsp;&nbsp;&nbsp;EBAY-IE &nbsp;&nbsp;&nbsp; EBAY-IT &nbsp;&nbsp;&nbsp;EBAY-PL Valid values: BUSINESS INDIVIDUALCode so that your app gracefully handles any future changes to this list.
    string sellerAccountType = 3;
    SellerLegalInfo sellerLegalInfo = 4;
    // The user name created by the seller for use on eBay.
    string username = 5;
}

message SellerLegalInfo {
    // The seller's business email address.
    string email = 1;
    // The seller' business fax number.
    string fax = 2;
    // This is a free-form string created by the seller. This is information often found on business cards, such as address. This is information used by some countries.
    string imprint = 3;
    // The seller's first name.
    string legalContactFirstName = 4;
    // The seller's last name.
    string legalContactLastName = 5;
    // The name of the seller's business.
    string name = 6;
    // The seller's business phone number.
    string phone = 7;
    // The seller's registration number. This is information used by some countries.
    string registrationNumber = 8;
    LegalAddress sellerProvidedLegalAddress = 9;
    // This is a free-form string created by the seller. This is the seller's terms or condition, which is in addition to the seller's return policies.
    string termsOfService = 10;
    // An array of the seller's VAT (value added tax) Ids and the issuing country. VAT is a tax added by some European countries.
    repeated VatDetail vatDetails = 11;
}

message Seller_0 {
    // The percentage of the total positive feedback.
    string feedbackPercentage = 1;
    // The feedback score of the seller. This value is based on the ratings from eBay members that bought items from this seller.
    int32 feedbackScore = 2;
    // Indicates if the seller is a business or an individual. This is determined when the seller registers with eBay. If they register for a business account, this value will be BUSINESS. If they register for a private account, this value will be INDIVIDUAL. This designation is required by the tax laws in some countries. This field is returned only on the following sites. This field is returned only on the following sites. EBAY-AT &nbsp;&nbsp;&nbsp;EBAY-BE &nbsp;&nbsp;&nbsp;EBAY-CH &nbsp;&nbsp;&nbsp;EBAY-DE &nbsp;&nbsp;&nbsp;EBAY-ES &nbsp;&nbsp;&nbsp;EBAY-FR &nbsp;&nbsp;&nbsp;EBAY-GB &nbsp;&nbsp;&nbsp;EBAY-IE &nbsp;&nbsp;&nbsp; EBAY-IT &nbsp;&nbsp;&nbsp;EBAY-PL Valid values: BUSINESS INDIVIDUALCode so that your app gracefully handles any future changes to this list.
    string sellerAccountType = 3;
    // The user name created by the seller for use on eBay.
    string username = 4;
}

message ShipToLocation {
    // The three-letter ISO 3166-1 standard of the country for where the item is to be shipped. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/browse/types/CountryCodeEnum.html'>eBay API documentation</a>
    string country = 1;
    // The zip code (postal code) for where the item is to be shipped.
    string postalCode = 2;
}

message ShipToLocations {
    // A array of containers for regions that are specifically excluded from a region set. You can use this to exclude a specific regionName from a regionType that you specifically include.
    repeated Region regionExcluded = 1;
    // A array of containers for regions that are specifically included in a region set. You can use this to exclude a specific regionName from a regionType that you specifically include.
    repeated Region regionIncluded = 2;
}

message ShippingOption {
    ConvertedAmount additionalShippingCostPerUnit = 1;
    // The deadline date that the item must be purchased by in order to be received by the buyer within the delivery window ( maxEstimatedDeliveryDate and minEstimatedDeliveryDate fields). This field is returned only for items that are eligible for 'Same Day Handling'. For these items, the value of this field is what is displayed in the Delivery line on the View Item page. This value is returned in UTC format (yyyy-MM-ddThh:mm:ss.sssZ), which you can convert into the local time of the buyer.
    string cutOffDateUsedForEstimate = 2;
    // The end date of the delivery window (latest projected delivery date). This value is returned in UTC format (yyyy-MM-ddThh:mm:ss.sssZ), which you can convert into the local time of the buyer. Note: For the best accuracy, always include the location of where the item is be shipped in the contextualLocation values of the X-EBAY-C-ENDUSERCTX request header.
    string maxEstimatedDeliveryDate = 3;
    // The start date of the delivery window (earliest projected delivery date). This value is returned in UTC format (yyyy-MM-ddThh:mm:ss.sssZ), which you can convert into the local time of the buyer. Note: For the best accuracy, always include the location of where the item is be shipped in the contextualLocation values of the X-EBAY-C-ENDUSERCTX request header.
    string minEstimatedDeliveryDate = 4;
    // The number of items used when calculating the estimation information.
    int32 quantityUsedForEstimate = 5;
    ShipToLocation shipToLocationUsedForEstimate = 6;
    // A name of the shipping provider, such as FedEx, or USPS.
    string shippingCarrierCode = 7;
    ConvertedAmount shippingCost = 8;
    // Indicates the class of the shipping cost. Valid Values: Flat or Calculated. Code so that your app gracefully handles any future changes to this list.
    string shippingCostType = 9;
    // The type of shipping service. For example, USPS First Class.
    string shippingServiceCode = 10;
    // Any trademark symbol, such as &trade; or &reg;, that needs to be shown in superscript next to the shipping service name.
    string trademarkSymbol = 11;
    // The type of a shipping option, such as EXPEDITED, ONE_DAY, STANDARD, ECONOMY, PICKUP, etc.
    string type = 12;
}

message ShippingOptionSummary {
    // The end date of the delivery window (latest projected delivery date). This value is returned in UTC format (yyyy-MM-ddThh:mm:ss.sssZ), which you can convert into the local time of the buyer. Note: For the best accuracy, always include the contextualLocation values in the X-EBAY-C-ENDUSERCTX request header.
    string maxEstimatedDeliveryDate = 1;
    // The start date of the delivery window (earliest projected delivery date). This value is returned in UTC format (yyyy-MM-ddThh:mm:ss.sssZ), which you can convert into the local time of the buyer. Note: For the best accuracy, always include the contextualLocation values in the X-EBAY-C-ENDUSERCTX request header.
    string minEstimatedDeliveryDate = 2;
    ConvertedAmount shippingCost = 3;
    // This field indicates the type of shipping used to ship the item. Possible values are FIXED (flat-rate shipping) and CALCULATED (calculated shipping).
    string shippingCostType = 4;
}

message TargetLocation {
    // This value shows the unit of measurement used to measure the distance between the location of the item and the buyer's location. This value is typically mi or km.
    string unitOfMeasure = 1;
    // This value indicates the distance (measured in the measurement unit in the unitOfMeasure field) between the item location and the buyer's location.
    string value = 2;
}

message TaxJurisdiction {
    Region region = 1;
    // The identifier of the tax jurisdiction.
    string taxJurisdictionId = 2;
}

message Taxes {
    // Indicates if tax was applied for the cost of the item.
    bool includedInPrice = 1;
    // Indicates if tax is applied for the shipping cost.
    bool shippingAndHandlingTaxed = 2;
    TaxJurisdiction taxJurisdiction = 3;
    // The percentage of tax.
    string taxPercentage = 4;
    // Container that returns the tax type. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/browse/types/TaxType.html'>eBay API documentation</a>
    string taxType = 5;
}

message TimeDuration {
    // Indicates the period of time being used. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/browse/types/TimeDurationUnitEnum.html'>eBay API documentation</a>
    string unit = 1;
    // Indicates the number of years, months, days, etc. in the defined period. If value is 30, and unit is DAY, the defined period is 30 days.
    int32 value = 2;
}

message TypedNameValue {
    // The text representing the name of the aspect for the name/value pair, such as Color.
    string name = 1;
    // Indicates if the value being returned is a string or an array of values. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/browse/types/ValueTypeEnum.html'>eBay API documentation</a>
    string type = 2;
    // The value of the aspect for the name/value pair, such as Red.
    string value = 3;
}

message VatDetail {
    // The three-letter ISO 3166-1 standard of the country issuing the seller's VAT (value added tax) Id. VAT is a tax added by some European countries. For implementation help, refer to <a href='https://developer.ebay.com/devzone/rest/api-ref/browse/types/CountryCodeEnum.html'>eBay API documentation</a>
    string issuingCountry = 1;
    // The seller's VAT (value added tax) Id. VAT is a tax added by some European countries.
    string vatId = 2;
}

service APIToView&SearchForItemsService {
    // This call is a bridge between the eBay legacy APIs, such as Trading, Shopping, and Finding and the eBay Buy APIs. There are differences between how legacy APIs and RESTful APIs return the identifier of an &quot;item&quot;. There is also a difference in what the item Id represents and in the format of the item Id value returned. This call lets you use the legacy item Ids retrieve the details of a specific item, such as description, price, and other information the buyer needs to make a purchasing decision. It also returns the RESTful item Id, which you can use with all the Buy API calls. For more information about how to use legacy Ids with the Buy APIs, see Legacy API compatibility in the Buying Integration guide. This call returns the item details, so it requires you pass in either the item Id of a non-variation item or the item Ids of both the parent and child of a item group (item with variations). Request headers You will want to use the X-EBAY-C-ENDUSERCTX request header with this call. If you are an eBay Network Partner you must use affiliateCampaignId=ePNCampaignId,affiliateReferenceId=referenceId in the header in order to be paid for selling eBay items on your site and it is strongly recommended you use contextualLocation to improved the estimated delivery window information. For details see, Request headers in the Buy APIs Overview. Restrictions For a list of supported sites and other restrictions, see API Restrictions.
    rpc GetItemGet_item_by_legacy_id(GetItemGet_item_by_legacy_idRequest) returns (Item) {
      option (google.api.http) = {
        get: "/buy/browse/v1/item/get_item_by_legacy_id"
      };
    }
    // This call retrieves the details of the individual items in an item group. You pass in the item group Id as a URI parameter. You use this call to show the item details of items with multiple aspects, such as color, size, storage capacity, etc. This call returns two main containers; items and commonDescriptions. The items container has an array of containers with the details of each item in the group. The commonDescriptions container has an array of containers for a description and the item Ids of all the items that have this exact description. Because items within an item group often have the same description, this decreases the size of the response. Request headers You will want to use the X-EBAY-C-ENDUSERCTX request header with this call. If you are an eBay Network Partner you must use affiliateCampaignId=ePNCampaignId,affiliateReferenceId=referenceId in the header in order to be paid for selling eBay items on your site and it is strongly recommended you use contextualLocation to improved the estimated delivery window information. For details see, Request headers in the Buy APIs Overview. Restrictions For a list of supported sites and other restrictions, see API Restrictions.
    rpc GetItemGet_items_by_item_group(GetItemGet_items_by_item_groupRequest) returns (Items) {
      option (google.api.http) = {
        get: "/buy/browse/v1/item/get_items_by_item_group"
      };
    }
    // This call retrieves the details of a specific item, such as description, price, category, all item aspects, condition, return policies, seller feedback and score, shipping options, shipping costs, estimated delivery, and other information the buyer needs to make a purchasing decision. The Buy APIs are designed to let you create an off-eBay shopping experience, which means you will need to know when something, such as the price, quantity, etc., has changed in any eBay item you are offering. You can do this easily by setting the fieldgroups field to COMPACT. This field lets you control what is returned in the response. Setting it to COMPACT reduces the response to only the fields that you need in order to check if any item detail has changed. For more information, see fieldgroups. Request headers You will want to use the X-EBAY-C-ENDUSERCTX request header with this call. If you are an eBay Network Partner you must use affiliateCampaignId=ePNCampaignId,affiliateReferenceId=referenceId in the header in order to be paid for selling eBay items on your site and it is strongly recommended you use contextualLocation to improved the estimated delivery window information. For details see, Request headers in the Buy APIs Overview. Restrictions For a list of supported sites and other restrictions, see API Restrictions.
    rpc GetItemItem_id(GetItemItem_idRequest) returns (Item) {
      option (google.api.http) = {
        get: "/buy/browse/v1/item/{item_id}"
      };
    }
    // This call performs an advanced search for items. You can search by keyword, category, eBay product Id (EPID), or gtin. Or a combination of these. Note: As with all query parameter values, the fields parameter value must be URL encoded. For better readability, the examples in this document omit the encoding. For example: &nbsp;&nbsp;search?q=world cup soccer ball&amp;aspect_filter=categoryId:20863,Brand:{Nike|Wilson} Encoded example: &nbsp;&nbsp; search?q=world cup soccer ball&amp;aspect_filter=categoryId%3A20863%2CBrand%3A%7BNike%7CWilson%7D/span&gt; The following are examples of using filters: The following call returns 4,330,774 items. &nbsp;&nbsp;&nbsp;/buy/browse/v1/item_summary/search?q=phone This call, which limits the results to the category &quot;Cell Phones &amp; Smartphones&quot;, returns 142,098 items. &nbsp;&nbsp;&nbsp;/buy/browse/v1/item_summary/search?q=phone&amp;category_ids=9355 These calls, which limit results to a Samsung Galaxy S5, returns 97 items. &nbsp;&nbsp;&nbsp;/buy/browse/v1/item_summary/search?q=phone&amp;category_ids=220&amp;epid=182527490 &nbsp;&nbsp;&nbsp;or &nbsp;&nbsp;&nbsp;/buy/browse/v1/item_summary/search?epid=182527490 Controlling what is returned You can also control what is returned by using the fieldgroups field. In addition to returning items, which is the default, you can return refinements (metadata) about an item that enables you to create aspect histograms. A histogram enables users to drill down in each refinement narrowing the search results. You can return: ASPECT_REFINEMENTS - Lets shoppers refine the result set by variation aspects, such as Brand, Color, etc. BUYING_OPTION_REFINEMENT - Lets shoppers refine the result set by either FIXED_PRICE or AUCTION CATEGORY_REFINEMENTS - Lets shoppers refine the result set by items in a category CONDITION_REFINEMENT - Lets shoppers refine the result set by item condition, such as NEW, USED, etc. MATCHING_ITEMS - The default, which returns the items. When used with one or more of the refinement values above the specified refinements and all the matching items are returned. FULL - This returns all the refinement containers and all the matching items. Filtering by aspects You can use the aspect refinements returned to filter the result set using the aspect_filter field. For example: This call gets a list of the aspects pairs for the item and the dominant category (category most of the items are in). /buy/browse/v1/item_summary/search?q=world cup soccer ball&amp;fieldgroups=ASPECT_REFINEMENTS This call filters the items by one of the aspect pairs returned and the dominant category ( categoryId is required when using aspect_filter) /buy/browse/v1/item_summary/search?q=world cup soccer ball&amp;aspect_filter=categoryId:20863,Brand:{adidas} This call filters the items by multiple aspects /buy/browse/v1/item_summary/search?q=world cup soccer ball&amp;aspect_filter=categoryId:20863,Brand:{adidas},Featured Refinements:{Adidas Match Ball} This call filters the items by multiple aspect values /buy/browse/v1/item_summary/search?q=world cup soccer ball&amp;aspect_filter=categoryId:20863,Brand:{Nike|Wilson} Additional filters There are also multiple filters you can use to refine the result set, such as listing format, item condition, price range, UPC value, listing end date, location, and more. You can use multiple filters in a single call. For a list and details of the supported filters, see search Call Field Filters. Pagination and sort controls There are pagination controls (limit and offset fields) and sort query parameter that control/sort the data that is returned. By default, the results are sorted by &quot;Best Match&quot;. For more information about Best Match, see the eBay help page Best Match. Request headers You will want to use the X-EBAY-C-ENDUSERCTX request header with this call. If you are an eBay Network Partner you must use affiliateCampaignId=ePNCampaignId,affiliateReferenceId=referenceId in the header in order to be paid for selling eBay items on your site and it is strongly recommended you use contextualLocation to improved the estimated delivery window information. For details see, Request headers in the Buy APIs Overview. Restrictions For a list of supported sites and other restrictions, see API Restrictions. Limitation This call can return a maximum of 10,000 items.
    rpc GetItem_summarySearch(GetItem_summarySearchRequest) returns (SearchPagedCollection) {
      option (google.api.http) = {
        get: "/buy/browse/v1/item_summary/search"
      };
    }
}
