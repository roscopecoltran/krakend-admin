syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package zalandoshop;

message GetArticleReviewsRequest {
    acceptLanguage Accept_Language = 1;
    // Article IDs. A list of config SKUs for which the article reviews will be returned.
    // Required if articleModelId is empty.
    repeated string articleId = 2;
    // Article model IDs. A list of model SKUs for which the article reviews will be returned.
    // Required if articleId is empty.
    repeated string articleModelId = 3;
    array fields = 4;
    string maxStarRating = 5;
    string minStarRating = 6;
    string page = 7;
    string pageSize = 8;
    articleReviewSort sort = 9;
}

message GetArticleReviewsSummariesRequest {
    acceptLanguage Accept_Language = 1;
    // Article model IDs. A list of model SKUs for which the article review summaries will be returned.
    repeated string articleModelId = 2;
    array fields = 3;
    string page = 4;
    string pageSize = 5;
}

message GetArticleReviewsSummariesArticleModelIdRequest {
    acceptLanguage Accept_Language = 1;
    // To get unique reviews summary from article model Id.
    string articleModelId = 2;
    array fields = 3;
}

message GetArticleReviewsReviewIdRequest {
    acceptLanguage Accept_Language = 1;
    array fields = 2;
    // To get unique review by review Id.
    string reviewId = 3;
}

message GetArticlesRequest {
    acceptLanguage Accept_Language = 1;
    array activationDate = 2;
    array ageGroup = 3;
    array articleId = 4;
    array articleModelId = 5;
    array articleUnitId = 6;
    array assortmentArea = 7;
    array brand = 8;
    array brandfamily = 9;
    array category = 10;
    array color = 11;
    array den = 12;
    array fields = 13;
    array filling = 14;
    string fullText = 15;
    array gender = 16;
    array heelForm = 17;
    array heelHeight = 18;
    string length = 19;
    array occasion = 20;
    string page = 21;
    string pageSize = 22;
    array pattern = 23;
    string price = 24;
    array sale = 25;
    array season = 26;
    array shaftHeight = 27;
    array shaftWidth = 28;
    array shirtCollar = 29;
    array shoeFastener = 30;
    array shoeToecap = 31;
    array shopArea = 32;
    string size = 33;
    sort sort = 34;
    array sports = 35;
    array technology = 36;
    array trouserRise = 37;
    array upperMaterial = 38;
    array volume = 39;
}

message GetArticlesArticleIdRequest {
    acceptLanguage Accept_Language = 1;
    // To get unique article for article Id.
    string articleId = 2;
    array fields = 3;
}

message GetArticlesArticleIdMediaRequest {
    acceptLanguage Accept_Language = 1;
    // To get unique article for article Id media.
    string articleId = 2;
    array fields = 3;
}

message GetArticlesArticleIdReviewsRequest {
    acceptLanguage Accept_Language = 1;
    // To get unique article for article Id reviews.
    string articleId = 2;
    array fields = 3;
    string maxStarRating = 4;
    string minStarRating = 5;
    string page = 6;
    string pageSize = 7;
    articleReviewSort sort = 8;
}

message GetArticlesArticleIdReviewsSummaryRequest {
    acceptLanguage Accept_Language = 1;
    // To get unique article for article Id reviews summary.
    string articleId = 2;
    array fields = 3;
}

message GetArticlesArticleIdUnitsRequest {
    acceptLanguage Accept_Language = 1;
    // To get unique article for article Id units.
    string articleId = 2;
    array fields = 3;
}

message GetArticlesArticleIdUnitsUnitIdRequest {
    acceptLanguage Accept_Language = 1;
    // To get unique article for article Id.
    string articleId = 2;
    array fields = 3;
    // To get unique article for article Id unit.
    string unitId = 4;
}

message GetBrandsRequest {
    acceptLanguage Accept_Language = 1;
    // Request Brand by brandFamilyKey
    repeated string brandFamilyKey = 2;
    // Request Brand by brandFamilyName
    repeated string brandFamilyName = 3;
    array fields = 4;
    // Request Brand by key
    repeated string key = 5;
    // Request Brand by name
    repeated string name = 6;
    string page = 7;
    string pageSize = 8;
}

message GetBrandsKeyRequest {
    acceptLanguage Accept_Language = 1;
    array fields = 2;
    // To get unique Brand by key.
    string key = 3;
}

message GetCategoriesRequest {
    acceptLanguage Accept_Language = 1;
    // Request Categories by child keys
    repeated string childKey = 2;
    array fields = 3;
    // Request Categories by hidden
    string hidden = 4;
    // Request Categories by keys
    repeated string key = 5;
    // Request Categories by names
    repeated string name = 6;
    // Request Categories by outlet
    string outlet = 7;
    string page = 8;
    string pageSize = 9;
    // Request Categories by parent keys
    repeated string parentKey = 10;
    // Request Categories by suggested filters
    repeated string suggestedFilter = 11;
    // Request Categories by target group
    string targetGroup = 12;
    // Request Categories by type
    string type = 13;
}

message GetCategoriesKeyRequest {
    acceptLanguage Accept_Language = 1;
    array fields = 2;
    // To get unique Category by key.
    repeated string key = 3;
}

message GetDomainsResponse {
    // Zalando API Domains Schema
    repeated Domain items = 1;
}

message GetFacetsRequest {
    acceptLanguage Accept_Language = 1;
    array activationDate = 2;
    array ageGroup = 3;
    array articleId = 4;
    array articleModelId = 5;
    array assortmentArea = 6;
    array brand = 7;
    array brandfamily = 8;
    array category = 9;
    array color = 10;
    array den = 11;
    array fields = 12;
    array filling = 13;
    array gender = 14;
    array heelForm = 15;
    array heelHeight = 16;
    string length = 17;
    array occasion = 18;
    array pattern = 19;
    string price = 20;
    array sale = 21;
    array season = 22;
    array shaftHeight = 23;
    array shaftWidth = 24;
    array shirtCollar = 25;
    array shoeFastener = 26;
    array shoeToecap = 27;
    array shopArea = 28;
    string size = 29;
    array sports = 30;
    array technology = 31;
    array trouserRise = 32;
    array upperMaterial = 33;
    array volume = 34;
}

message GetFiltersRequest {
    acceptLanguage Accept_Language = 1;
    array fields = 2;
}

message GetFiltersFilterNameRequest {
    acceptLanguage Accept_Language = 1;
    array fields = 2;
    // To get Filter by filterName.
    string filterName = 3;
}

message GetRecommendationsArticleIdsRequest {
    acceptLanguage Accept_Language = 1;
    // To get Recommendations by articleIds.
    repeated string articleIds = 2;
    array fields = 3;
    // To get maximum results of Recommendations by articleId.
    string maxResults = 4;
}

message Article {
    // timestamp the article was available in the Zalando webshop
    string activationDate = 1;
    // any additional information of the article
    repeated string additionalInfos = 2;
    // age group of the article belongs to
    repeated string ageGroups = 3;
    // article attributes
    repeated Article-Attribute attributes = 4;
    // will be true if at least one article unit is available
    bool available = 5;
    Brand brand = 6;
    // category keys of the article belongs to
    repeated string categoryKeys = 7;
    // the main color of the article
    string color = 8;
    // gender of the article belongs to
    repeated string genders = 9;
    // unique article id
    string id = 10;
    Article-Media media = 11;
    // unique article model id
    string modelId = 12;
    // article name
    string name = 13;
    // collection season the article belongs to
    enum Article_Season {
        ARTICLE_SEASON_SUMMER = 0;
        ARTICLE_SEASON_WINTER = 1;
        ARTICLE_SEASON_ALL = 2;
    }
    Article_Season season = 14;
    // collection year the article belongs to. Could be either a year or 'ALL'
    string seasonYear = 15;
    // url of the article within the Zalando webshop
    string shopUrl = 16;
    repeated string tags = 17;
    // price of the article
    repeated Article-Unit units = 18;
}

message Article_Attribute {
    // name of the article attribute
    string name = 1;
    // value of the article attribute
    repeated string values = 2;
}

message Article_Image {
    // large HD image of the article
    string largeHdUrl = 1;
    // large image of the article
    string largeUrl = 2;
    // medium HD image of the article
    string mediumHdUrl = 3;
    // medium image of the article
    string mediumUrl = 4;
    // sequence of the article images
    int32 orderNumber = 5;
    // small HD image of the article
    string smallHdUrl = 6;
    // small image of the article
    string smallUrl = 7;
    // thumbnail HD url of the article images
    string thumbnailHdUrl = 8;
    // model or non model type article images
    string type = 9;
}

message Article_Media {
    repeated Article-Image images = 1;
}

message Article_Price {
    string currency = 1;
    string formatted = 2;
    int32 value = 3;
}

message Article_Review {
    string articleId = 1;
    string articleModelId = 2;
    message ArticleSizeRatings {
        int32 BOOTLEG_WIDTH = 1;
        int32 CHEST = 2;
        int32 CHEST_GIRTH = 3;
        int32 COLLAR_SIZE = 4;
        int32 CUP_SIZE = 5;
        int32 HIPS_OR_REAR = 6;
        int32 LEG_FIT = 7;
        int32 LENGTH = 8;
        int32 OVERALL = 9;
        int32 SHOE_WIDTH = 10;
        int32 SHOULDERS = 11;
        int32 SLEEVES = 12;
    }
    ArticleSizeRatings articleSizeRatings = 3;
    // article review created date and time
    string created = 4;
    // customer city in the article review
    string customerCity = 5;
    // customer country in the article review
    string customerCountry = 6;
    // Customer short name in the article review
    string customerNickname = 7;
    // description of the article review
    string description = 8;
    // customer review helpful count of the article
    int32 helpfulCount = 9;
    // language in the article review
    string language = 10;
    // customer rating of the article
    int32 rating = 11;
    // customer recommend to the article
    bool recommend = 12;
    // unique article review id
    string reviewId = 13;
    // title in the article review
    string title = 14;
    // customer review unhelpful count of the article
    int32 unhelpfulCount = 15;
}

message Article_Reviews {
}

message Article_Reviews_Summaries {
}

message Article_Reviews_Summary {
    string articleModelId = 1;
    // size rating of the article
    message ArticleSizeRatings {
        int32 BOOTLEG_WIDTH = 1;
        int32 CHEST = 2;
        int32 CHEST_GIRTH = 3;
        int32 COLLAR_SIZE = 4;
        int32 CUP_SIZE = 5;
        int32 HIPS_OR_REAR = 6;
        int32 LEG_FIT = 7;
        int32 LENGTH = 8;
        int32 OVERALL = 9;
        int32 SHOE_WIDTH = 10;
        int32 SHOULDERS = 11;
        int32 SLEEVES = 12;
    }
    ArticleSizeRatings articleSizeRatings = 2;
    // average star rating of the article
    int32 averageStarRating = 3;
    // number of positive recommendations to the article
    int32 numberOfUserPositiveRecommendations = 4;
    // number of users recommended to the article
    int32 numberOfUserRecommendations = 5;
    // number of user reviews of the article
    int32 numberOfUserReviews = 6;
    // start rating distribution of the article
    message StarRatingDistribution {
        int32 1 = 1;
        int32 2 = 2;
        int32 3 = 3;
        int32 4 = 4;
        int32 5 = 5;
    }
    StarRatingDistribution starRatingDistribution = 7;
}

message Article_Unit {
    // availability of the article
    bool available = 1;
    // article id (sku)
    string id = 2;
    Article-Price originalPrice = 3;
    // partner id (vendor id) of the article
    string partnerId = 4;
    Article-Price price = 5;
    // article size
    string size = 6;
    // stock of the article
    int32 stock = 7;
}

repeated Article-Unit Article_Units = 1

message Articles {
}

message Brand {
    BrandFamily brandFamily = 1;
    // The unique key for a brand
    string key = 2;
    // The url of the large brand logo within the Zalando web shop
    string logoLargeUrl = 3;
    // The url of the brand logo within the Zalando web shop
    string logoUrl = 4;
    // Name of the brand
    string name = 5;
    // The url of the brand within the Zalando web shop
    string shopUrl = 6;
}

message BrandFamily {
    // The unique key for a brandFamily
    string key = 1;
    // Name of the brandFamily
    string name = 2;
    // The url of the brandFamily within the Zalando web shop
    string shopUrl = 3;
}

message Brands {
}

message Categories {
}

message Category {
    // The list of keys of the child categories
    repeated string childKeys = 1;
    // The numeric ID for a category.
    int32 cid = 2;
    // The category is hidden and not shown on the Zalando web shop
    bool hidden = 3;
    // The unique key for a category
    string key = 4;
    // Name of the category
    string name = 5;
    // Containing articles are from last seasons
    bool outlet = 6;
    // The key of the parent category
    string parentKey = 7;
    // list of filter names that are reasonable to use within this category
    repeated string suggestedFilters = 8;
    // The target group of the articles from this category
    enum Category_TargetGroup {
        CATEGORY_TARGETGROUP_ALL = 0;
        CATEGORY_TARGETGROUP_WOMEN = 1;
        CATEGORY_TARGETGROUP_MEN = 2;
        CATEGORY_TARGETGROUP_KIDS = 3;
    }
    Category_TargetGroup targetGroup = 9;
    // The type of the category.
    string type = 10;
}

message Domain {
    // domain country code
    string countryCode = 1;
    // domain currency code
    string currencyCode = 2;
    // domain language
    string languageCode = 3;
    // domain root category
    string rootCategoryKey = 4;
    // domain specific url
    string shopUrl = 5;
    // domain tax rate
    int32 taxRate = 6;
}

message ErrorDetail {
    bool invalidName = 1;
    repeated string invalidValues = 2;
    string key = 3;
    string name = 4;
    string value = 5;
}

message ErrorMessage {
    repeated ErrorDetail errors = 1;
    string message = 2;
    int32 status = 3;
}

message Facet {
    // list of the calculated article counts for each filter value
    repeated Facet-Value facets = 1;
    string filter = 2;
}

message Facet_Value {
    // number of articles matching this filter value
    int32 count = 1;
    string displayName = 2;
    string key = 3;
}

repeated Facet Facets = 1

message Filter {
    // can this filter be used multiple times with different values in one search request
    bool multiValue = 1;
    // The unique name for a filter
    string name = 2;
    // filter enum types
    enum Filter_Type {
        FILTER_TYPE_SKU = 0;
        FILTER_TYPE_KEY = 1;
        FILTER_TYPE_ENUM = 2;
        FILTER_TYPE_STRING = 3;
        FILTER_TYPE_RANGE = 4;
    }
    Filter_Type type = 3;
    // only if type is 'enum' this list contains all possible filter values
    repeated Filter-Value values = 4;
}

message Filter_Value {
    // translated display name
    string displayName = 1;
    // The key for a filterValue. Only unique within one filter
    string key = 2;
}

repeated Filter Filters = 1

message Page {
    // page content
    message Content {
    }
    repeated Content content = 1;
    // page number
    int32 page = 2;
    // total number of elements in a page
    int32 size = 3;
    // total elements in the response
    int32 totalElements = 4;
    // total number of pages in the response
    int32 totalPages = 5;
}

repeated Recommendations-Article Recommendations = 1

message Recommendations_Article {
    string id = 1;
    Article-Media media = 2;
    string modelId = 3;
    string name = 4;
    string shopUrl = 5;
}

enum AcceptLanguage {
    DADK = 0;
    DEAT = 1;
    DECH = 2;
    DEDE = 3;
    ENGB = 4;
    ESES = 5;
    FIFI = 6;
    FRBE = 7;
    FRCH = 8;
    FRFR = 9;
    ITIT = 10;
    NLBE = 11;
    NLNL = 12;
    NONO = 13;
    PLPL = 14;
    SVSE = 15;
}

repeated string activationDate = 1

repeated string ageGroup = 1

repeated string articleId = 1

repeated string articleModelId = 1

enum ArticleReviewSort {
    NEWEST = 0;
    BEST = 1;
    WORST = 2;
    MOST_HELPFUL = 3;
}

repeated string articleUnitId = 1

repeated string assortmentArea = 1

repeated string brand = 1

repeated string brandfamily = 1

repeated string category = 1

repeated string color = 1

repeated string den = 1

repeated string fields = 1

repeated string filling = 1



repeated string gender = 1

repeated string heelForm = 1

repeated string heelHeight = 1







repeated string occasion = 1





repeated string pattern = 1



repeated string sale = 1

repeated string season = 1

repeated string shaftHeight = 1

repeated string shaftWidth = 1

repeated string shirtCollar = 1

repeated string shoeFastener = 1

repeated string shoeToecap = 1

repeated string shopArea = 1



enum Sort {
    POPULARITY = 0;
    ACTIVATIONDATE = 1;
    PRICEDESC = 2;
    PRICEASC = 3;
    SALE = 4;
}

repeated string sports = 1

repeated string technology = 1

repeated string trouserRise = 1

repeated string upperMaterial = 1

repeated string volume = 1

service ZalandoShopService {
    // Get Article Reviews
    // 
    // Zalando API Article Reviews Schema
    rpc GetArticleReviews(GetArticleReviewsRequest) returns (Article-Reviews) {
      option (google.api.http) = {
        get: "//article-reviews"
      };
    }
    // Get Article Reviews Summaries
    // 
    // Zalando API Article Reviews Summaries Schema
    rpc GetArticleReviewsSummaries(GetArticleReviewsSummariesRequest) returns (Article-Reviews-Summaries) {
      option (google.api.http) = {
        get: "//article-reviews-summaries"
      };
    }
    // Get Article Reviews Summaries by articleModelId
    // 
    // Zalando API ArticleReviewsSummaries Schema
    rpc GetArticleReviewsSummariesArticleModelId(GetArticleReviewsSummariesArticleModelIdRequest) returns (Article-Reviews-Summary) {
      option (google.api.http) = {
        get: "//article-reviews-summaries/{articleModelId}"
      };
    }
    // Get Article Reviews by reviewId
    // 
    // Zalando API ArticleReviews Schema
    rpc GetArticleReviewsReviewId(GetArticleReviewsReviewIdRequest) returns (Article-Review) {
      option (google.api.http) = {
        get: "//article-reviews/{reviewId}"
      };
    }
    // Search for Articles
    // 
    // Search for articles based on various different possible filter like e.g. the `brandFamily`, the `catagory` or a
    // specific `color`. See [Filters](https://todo) for a list of all available filter options.
    // 
    // The default `pageSize` for responses is set to `20`. You can add a `pageSize` request parameter to adjust that.
    // Please keep in mind that the maximum `pageSize` for this resource is `200`.
    // 
    // The endpoint also supports reducing the fields returned for each article via the `fields` parameter. Please
    // refer to [fields parameter](https://todo) for more details.
    rpc GetArticles(GetArticlesRequest) returns (Articles) {
      option (google.api.http) = {
        get: "//articles"
      };
    }
    // Get Article by articleId
    // 
    // Zalando API Article Schema
    rpc GetArticlesArticleId(GetArticlesArticleIdRequest) returns (Article) {
      option (google.api.http) = {
        get: "//articles/{articleId}"
      };
    }
    // Get Article media by articleId
    // 
    // Zalando API Article Schema
    rpc GetArticlesArticleIdMedia(GetArticlesArticleIdMediaRequest) returns (Article-Media) {
      option (google.api.http) = {
        get: "//articles/{articleId}/media"
      };
    }
    // Get Article reviews by articleId
    // 
    // Zalando API Article Schema
    rpc GetArticlesArticleIdReviews(GetArticlesArticleIdReviewsRequest) returns (Article-Reviews) {
      option (google.api.http) = {
        get: "//articles/{articleId}/reviews"
      };
    }
    // Get Article reviews summary by articleId
    // 
    // Zalando API Article Schema
    rpc GetArticlesArticleIdReviewsSummary(GetArticlesArticleIdReviewsSummaryRequest) returns (Article-Reviews-Summary) {
      option (google.api.http) = {
        get: "//articles/{articleId}/reviews-summary"
      };
    }
    // Get Article units by articleId
    // 
    // Zalando API Article Schema
    rpc GetArticlesArticleIdUnits(GetArticlesArticleIdUnitsRequest) returns (Article-Units) {
      option (google.api.http) = {
        get: "//articles/{articleId}/units"
      };
    }
    // Get Article units by articleId snd unitId
    // 
    // Zalando API Article Schema
    rpc GetArticlesArticleIdUnitsUnitId(GetArticlesArticleIdUnitsUnitIdRequest) returns (Article-Unit) {
      option (google.api.http) = {
        get: "//articles/{articleId}/units/{unitId}"
      };
    }
    // Shop Brands
    // 
    // Zalando API Brands Schema
    rpc GetBrands(GetBrandsRequest) returns (Brands) {
      option (google.api.http) = {
        get: "//brands"
      };
    }
    // Get Single Brand by Key
    // 
    // Zalando API Brand Schema
    rpc GetBrandsKey(GetBrandsKeyRequest) returns (Brand) {
      option (google.api.http) = {
        get: "//brands/{key}"
      };
    }
    // Shop Categories
    // 
    // Zalando API Categories Schema
    rpc GetCategories(GetCategoriesRequest) returns (Categories) {
      option (google.api.http) = {
        get: "//categories"
      };
    }
    // Get Single Category by Key
    // 
    // Zalando API Category Schema
    rpc GetCategoriesKey(GetCategoriesKeyRequest) returns (Category) {
      option (google.api.http) = {
        get: "//categories/{key}"
      };
    }
    // Shop Domains
    // 
    // Zalando API Domains Schema
    rpc GetDomains(google.protobuf.Empty) returns (GetDomainsResponse) {
      option (google.api.http) = {
        get: "//domains"
      };
    }
    // Shop Facets
    // 
    // Zalando API Facets Schema
    rpc GetFacets(GetFacetsRequest) returns (Facets) {
      option (google.api.http) = {
        get: "//facets"
      };
    }
    // Shop Filters
    // 
    // Zalando API Filters Schema
    rpc GetFilters(GetFiltersRequest) returns (Filters) {
      option (google.api.http) = {
        get: "//filters"
      };
    }
    // Get Single Filter by filterName
    // 
    // Zalando API Filters Schema
    rpc GetFiltersFilterName(GetFiltersFilterNameRequest) returns (Filter) {
      option (google.api.http) = {
        get: "//filters/{filterName}"
      };
    }
    // Get Recommendations by articleId
    // 
    // Zalando API Recommendations Schema
    rpc GetRecommendationsArticleIds(GetRecommendationsArticleIdsRequest) returns (Recommendations) {
      option (google.api.http) = {
        get: "//recommendations/{articleIds}"
      };
    }
}
