{
	"basePath": "/",
	"definitions.AckOrResolveByUserRequest.properties.message.type": "string",
	"definitions.AckOrResolveByUserRequest.properties.userName.type": "string",
	"definitions.AckOrResolveByUserRequest.required.length": 1,
	"definitions.AckOrResolveByUserRequest.required[0]": "userName",
	"definitions.AckOrResolveByUserRequest.type": "object",
	"definitions.AckOrResolveRequest.properties.incidentNames.items.type": "string",
	"definitions.AckOrResolveRequest.properties.incidentNames.type": "array",
	"definitions.AckOrResolveRequest.properties.message.type": "string",
	"definitions.AckOrResolveRequest.properties.userName.type": "string",
	"definitions.AckOrResolveRequest.required.length": 2,
	"definitions.AckOrResolveRequest.required[0]": "userName",
	"definitions.AckOrResolveRequest.required[1]": "incidentNames",
	"definitions.AckOrResolveRequest.type": "object",
	"definitions.AckOrResolveResponse.description": "The results of ack/resolve for each incident",
	"definitions.AckOrResolveResponse.properties.results.items.$ref": "#/definitions/AckOrResolveResult",
	"definitions.AckOrResolveResponse.properties.results.type": "array",
	"definitions.AckOrResolveResponse.type": "object",
	"definitions.AckOrResolveResult.description": "The results of ack/resolve for a individual incident",
	"definitions.AckOrResolveResult.properties.cmdAccepted.type": "boolean",
	"definitions.AckOrResolveResult.properties.entityId.type": "string",
	"definitions.AckOrResolveResult.properties.incidentNumber.type": "string",
	"definitions.AckOrResolveResult.properties.message.type": "string",
	"definitions.AckOrResolveResult.type": "object",
	"definitions.AckUser.description": "A JSON object with first/last name and email of the user that acknowledged the incident.",
	"definitions.AckUser.properties.email.type": "string",
	"definitions.AckUser.properties.first.type": "string",
	"definitions.AckUser.properties.last.type": "string",
	"definitions.AckUser.type": "object",
	"definitions.ActiveIncidentInfo.description": "Incidents contain the following fields (all should be considered optional)",
	"definitions.ActiveIncidentInfo.properties.alertCount.description": "The number of alerts received for this incident",
	"definitions.ActiveIncidentInfo.properties.alertCount.type": "number",
	"definitions.ActiveIncidentInfo.properties.currentPhase.description": "The current phase of the incident \"resolved\", \"triggered\" or \"acknowledged\".",
	"definitions.ActiveIncidentInfo.properties.currentPhase.type": "string",
	"definitions.ActiveIncidentInfo.properties.entityId.description": "The unique identification of the entity being monitored that caused the incident",
	"definitions.ActiveIncidentInfo.properties.entityId.type": "string",
	"definitions.ActiveIncidentInfo.properties.host.description": "The host on which the incident occurred",
	"definitions.ActiveIncidentInfo.properties.host.type": "string",
	"definitions.ActiveIncidentInfo.properties.incidentNumber.description": "The VictorOps incident number",
	"definitions.ActiveIncidentInfo.properties.incidentNumber.type": "string",
	"definitions.ActiveIncidentInfo.properties.lastAlertId.description": "The unique id of the last alert for the incident",
	"definitions.ActiveIncidentInfo.properties.lastAlertId.type": "string",
	"definitions.ActiveIncidentInfo.properties.lastAlertTime.description": "The time of the last alert received for the incident",
	"definitions.ActiveIncidentInfo.properties.lastAlertTime.type": "string",
	"definitions.ActiveIncidentInfo.properties.pagedTeams.description": "The teams that were paged for the incident",
	"definitions.ActiveIncidentInfo.properties.pagedTeams.items.type": "string",
	"definitions.ActiveIncidentInfo.properties.pagedTeams.type": "array",
	"definitions.ActiveIncidentInfo.properties.pagedUsers.description": "The users that were paged for the incident.",
	"definitions.ActiveIncidentInfo.properties.pagedUsers.items.type": "string",
	"definitions.ActiveIncidentInfo.properties.pagedUsers.type": "array",
	"definitions.ActiveIncidentInfo.properties.service.description": "The service name causing the incident (if any)",
	"definitions.ActiveIncidentInfo.properties.service.type": "string",
	"definitions.ActiveIncidentInfo.properties.startTime.description": "The time the incident started",
	"definitions.ActiveIncidentInfo.properties.startTime.type": "string",
	"definitions.ActiveIncidentInfo.properties.transitions.description": "Transitions of the incident state over time",
	"definitions.ActiveIncidentInfo.properties.transitions.items.$ref": "#/definitions/IncidentTransition",
	"definitions.ActiveIncidentInfo.properties.transitions.type": "array",
	"definitions.ActiveIncidentInfo.type": "object",
	"definitions.ActiveIncidentList.description": "The list of incidents in various states",
	"definitions.ActiveIncidentList.properties.incidents.description": "The incident data",
	"definitions.ActiveIncidentList.properties.incidents.items.$ref": "#/definitions/ActiveIncidentInfo",
	"definitions.ActiveIncidentList.properties.incidents.type": "array",
	"definitions.ActiveIncidentList.type": "object",
	"definitions.AddTeamMemberPayload.description": "The user information",
	"definitions.AddTeamMemberPayload.properties.username.type": "string",
	"definitions.AddTeamMemberPayload.required.length": 1,
	"definitions.AddTeamMemberPayload.required[0]": "username",
	"definitions.AddTeamMemberPayload.type": "object",
	"definitions.AddTeamPayload.description": "The team information",
	"definitions.AddTeamPayload.properties.name.type": "string",
	"definitions.AddTeamPayload.required.length": 1,
	"definitions.AddTeamPayload.required[0]": "name",
	"definitions.AddTeamPayload.type": "object",
	"definitions.AddTeamResponse.description": "Some info about the team",
	"definitions.AddTeamResponse.properties._membersUrl.type": "string",
	"definitions.AddTeamResponse.properties._selfUrl.type": "string",
	"definitions.AddTeamResponse.properties.isDefaultTeam.type": "boolean",
	"definitions.AddTeamResponse.properties.memberCount.type": "number",
	"definitions.AddTeamResponse.properties.name.type": "string",
	"definitions.AddTeamResponse.properties.slug.type": "string",
	"definitions.AddTeamResponse.properties.version.type": "number",
	"definitions.AddTeamResponse.type": "object",
	"definitions.AddUserPayload.description": "The user information",
	"definitions.AddUserPayload.properties.admin.type": "boolean",
	"definitions.AddUserPayload.properties.email.format": "email",
	"definitions.AddUserPayload.properties.email.type": "string",
	"definitions.AddUserPayload.properties.expirationHours.default": 24,
	"definitions.AddUserPayload.properties.expirationHours.description": "The validity duration for the invitatation/set password link sent to the added user.",
	"definitions.AddUserPayload.properties.expirationHours.type": "number",
	"definitions.AddUserPayload.properties.firstName.type": "string",
	"definitions.AddUserPayload.properties.lastName.type": "string",
	"definitions.AddUserPayload.properties.username.type": "string",
	"definitions.AddUserPayload.required.length": 4,
	"definitions.AddUserPayload.required[0]": "firstName",
	"definitions.AddUserPayload.required[1]": "lastName",
	"definitions.AddUserPayload.required[2]": "username",
	"definitions.AddUserPayload.required[3]": "email",
	"definitions.AddUserPayload.type": "object",
	"definitions.AddUserResponse.$ref": "#/definitions/V1User",
	"definitions.AlertBatchResponse.description": "A collection of requested alerts",
	"definitions.AlertBatchResponse.properties.alerts.items.$ref": "#/definitions/GetAlertResponse",
	"definitions.AlertBatchResponse.properties.alerts.type": "array",
	"definitions.AlertBatchResponse.properties.requestId.type": "string",
	"definitions.AlertBatchResponse.properties.requestSize.type": "integer",
	"definitions.AlertBatchResponse.properties.responseSize.type": "integer",
	"definitions.AlertBatchResponse.type": "object",
	"definitions.AlertId.type": "string",
	"definitions.AlertRequest.properties.alertId.type": "string",
	"definitions.AlertRequest.required.length": 1,
	"definitions.AlertRequest.required[0]": "alertId",
	"definitions.AlertRequest.type": "object",
	"definitions.ContactDevice.properties._selfUrl.type": "string",
	"definitions.ContactDevice.properties.deviceType.type": "string",
	"definitions.ContactDevice.properties.extId.type": "string",
	"definitions.ContactDevice.properties.label.type": "string",
	"definitions.ContactDevice.type": "object",
	"definitions.ContactDeviceAdd.description": "The contact device",
	"definitions.ContactDeviceAdd.properties.chat_escalation_sound.type": "string",
	"definitions.ContactDeviceAdd.properties.device_label.type": "string",
	"definitions.ContactDeviceAdd.properties.escalation_notification_sound.type": "string",
	"definitions.ContactDeviceAdd.properties.resolved_notification_sound.type": "string",
	"definitions.ContactDeviceAdd.type": "object",
	"definitions.ContactEmailAdd.description": "The contact email",
	"definitions.ContactEmailAdd.properties.email.format": "email",
	"definitions.ContactEmailAdd.properties.email.type": "string",
	"definitions.ContactEmailAdd.properties.label.type": "string",
	"definitions.ContactEmailAdd.properties.rank.type": "integer",
	"definitions.ContactEmailAdd.required.length": 2,
	"definitions.ContactEmailAdd.required[0]": "label",
	"definitions.ContactEmailAdd.required[1]": "email",
	"definitions.ContactEmailAdd.type": "object",
	"definitions.ContactPhoneAdd.description": "The contact phone",
	"definitions.ContactPhoneAdd.properties.label.type": "string",
	"definitions.ContactPhoneAdd.properties.phone.type": "string",
	"definitions.ContactPhoneAdd.properties.rank.type": "integer",
	"definitions.ContactPhoneAdd.required.length": 2,
	"definitions.ContactPhoneAdd.required[0]": "label",
	"definitions.ContactPhoneAdd.required[1]": "phone",
	"definitions.ContactPhoneAdd.type": "object",
	"definitions.CreateBatchAlertRequestPayload.description": "A collection of IDs (uuid) for the alerts to be returned",
	"definitions.CreateBatchAlertRequestPayload.properties.alertIds.items.$ref": "#/definitions/AlertId",
	"definitions.CreateBatchAlertRequestPayload.properties.alertIds.type": "array",
	"definitions.CreateBatchAlertRequestPayload.type": "object",
	"definitions.CreateIncidentRequest.properties.details.type": "string",
	"definitions.CreateIncidentRequest.properties.summary.type": "string",
	"definitions.CreateIncidentRequest.properties.targets.items.$ref": "#/definitions/IncidentTarget",
	"definitions.CreateIncidentRequest.properties.targets.type": "array",
	"definitions.CreateIncidentRequest.properties.userName.type": "string",
	"definitions.CreateIncidentRequest.required.length": 4,
	"definitions.CreateIncidentRequest.required[0]": "summary",
	"definitions.CreateIncidentRequest.required[1]": "details",
	"definitions.CreateIncidentRequest.required[2]": "userName",
	"definitions.CreateIncidentRequest.required[3]": "targets",
	"definitions.CreateIncidentRequest.type": "object",
	"definitions.CreatedIncident.properties.error.description": "An error message",
	"definitions.CreatedIncident.properties.error.type": "string",
	"definitions.CreatedIncident.properties.incidentNumber.description": "The VictorOps incident number",
	"definitions.CreatedIncident.properties.incidentNumber.type": "string",
	"definitions.CreatedIncident.type": "object",
	"definitions.DeleteUserPayload.description": "The information about what to do with the deleted user",
	"definitions.DeleteUserPayload.properties.replacement.description": "The user to take the place of the deleted user in escalations",
	"definitions.DeleteUserPayload.properties.replacement.type": "string",
	"definitions.DeleteUserPayload.required.length": 1,
	"definitions.DeleteUserPayload.required[0]": "replacement",
	"definitions.DeleteUserPayload.type": "object",
	"definitions.GetAlertResponse.description": "Alert details. All fields should be considered optional.",
	"definitions.GetAlertResponse.properties.ackAuthor.description": "The user that acknowledged the incident.",
	"definitions.GetAlertResponse.properties.ackAuthor.type": "string",
	"definitions.GetAlertResponse.properties.ackMsg.description": "A user entered comment for the acknowledgment.",
	"definitions.GetAlertResponse.properties.ackMsg.type": "string",
	"definitions.GetAlertResponse.properties.entityDisplayName.description": "Used within VictorOps to display a human-readable name for the entity.",
	"definitions.GetAlertResponse.properties.entityDisplayName.type": "string",
	"definitions.GetAlertResponse.properties.entityId.description": "Identifies the entity (host, service, etc.) this alert was about.\n",
	"definitions.GetAlertResponse.properties.entityId.type": "string",
	"definitions.GetAlertResponse.properties.messageType.description": "The type of alert; INFO, WARNING, ACKNOWLEDGEMENT, CRITICAL, RECOVERY\n",
	"definitions.GetAlertResponse.properties.messageType.type": "string",
	"definitions.GetAlertResponse.properties.monitoringTool.description": "The name of the monitoring system software (eg. nagios, icinga, sensu, etc.)",
	"definitions.GetAlertResponse.properties.monitoringTool.type": "string",
	"definitions.GetAlertResponse.properties.raw.description": "The full, raw alert details JSON string (i.e. parse the string into a JSON object)\n",
	"definitions.GetAlertResponse.properties.raw.type": "string",
	"definitions.GetAlertResponse.properties.stateMessage.description": "Any additional status information from the alert item.",
	"definitions.GetAlertResponse.properties.stateMessage.type": "string",
	"definitions.GetAlertResponse.properties.stateStartTime.description": "The time this entity entered its current state (seconds since epoch).",
	"definitions.GetAlertResponse.properties.stateStartTime.type": "number",
	"definitions.GetAlertResponse.properties.timestamp.description": "Timestamp of the alert in seconds since epoch.",
	"definitions.GetAlertResponse.properties.timestamp.type": "number",
	"definitions.GetAlertResponse.type": "object",
	"definitions.IncidentInfo.description": "Incidents contain the following fields (all should be considered optional)",
	"definitions.IncidentInfo.properties.ackTime.description": "The time of the last acknowledgment of the incident",
	"definitions.IncidentInfo.properties.ackTime.type": "string",
	"definitions.IncidentInfo.properties.ackUser.$ref": "#/definitions/AckUser",
	"definitions.IncidentInfo.properties.ackUserId.description": "The VictorOps user id of the user that acknowledged the incident",
	"definitions.IncidentInfo.properties.ackUserId.type": "string",
	"definitions.IncidentInfo.properties.alertCount.description": "The number of alerts received for this incident",
	"definitions.IncidentInfo.properties.alertCount.type": "number",
	"definitions.IncidentInfo.properties.currentPhase.description": "The current phase of the incident \"resolved\", \"triggered\" or \"acknowledged\".",
	"definitions.IncidentInfo.properties.currentPhase.type": "string",
	"definitions.IncidentInfo.properties.endTime.description": "The time the incident ended",
	"definitions.IncidentInfo.properties.endTime.type": "string",
	"definitions.IncidentInfo.properties.entityDispName.description": "The display name of the entity causing the incident",
	"definitions.IncidentInfo.properties.entityDispName.type": "string",
	"definitions.IncidentInfo.properties.entityId.description": "The unique identification of the entity being monitored that caused the incident",
	"definitions.IncidentInfo.properties.entityId.type": "string",
	"definitions.IncidentInfo.properties.entityType.description": "The type of entity causing the incident (host/service)",
	"definitions.IncidentInfo.properties.entityType.type": "string",
	"definitions.IncidentInfo.properties.host.description": "The host on which the incident occurred",
	"definitions.IncidentInfo.properties.host.type": "string",
	"definitions.IncidentInfo.properties.incidentNumber.description": "The VictorOps incident number",
	"definitions.IncidentInfo.properties.incidentNumber.type": "string",
	"definitions.IncidentInfo.properties.lastAlertID.description": "The unique id of the last alert for the incident",
	"definitions.IncidentInfo.properties.lastAlertID.type": "string",
	"definitions.IncidentInfo.properties.lastAlertTime.description": "The time of the last alert received for the incident",
	"definitions.IncidentInfo.properties.lastAlertTime.type": "string",
	"definitions.IncidentInfo.properties.service.description": "The service name causing the incident (if any)",
	"definitions.IncidentInfo.properties.service.type": "string",
	"definitions.IncidentInfo.properties.startTime.description": "The time the incident started",
	"definitions.IncidentInfo.properties.startTime.type": "string",
	"definitions.IncidentInfo.properties.teams.description": "The teams that were paged for the incident (comma separated).",
	"definitions.IncidentInfo.properties.teams.type": "string",
	"definitions.IncidentInfo.type": "object",
	"definitions.IncidentList.description": "The results of an incident history request",
	"definitions.IncidentList.properties.incidents.description": "An array of incident objects matching the search",
	"definitions.IncidentList.properties.incidents.items.$ref": "#/definitions/IncidentInfo",
	"definitions.IncidentList.properties.incidents.type": "array",
	"definitions.IncidentList.properties.limit.description": "The limit value passed in the request",
	"definitions.IncidentList.properties.limit.type": "number",
	"definitions.IncidentList.properties.offset.description": "The offset passed in the request",
	"definitions.IncidentList.properties.offset.type": "number",
	"definitions.IncidentList.properties.total.description": "The total number of incidents available for this search",
	"definitions.IncidentList.properties.total.type": "number",
	"definitions.IncidentList.type": "object",
	"definitions.IncidentTarget.properties.slug.description": "User name or escalation policy slug",
	"definitions.IncidentTarget.properties.slug.type": "string",
	"definitions.IncidentTarget.properties.type.description": "Type of target",
	"definitions.IncidentTarget.properties.type.enum.length": 2,
	"definitions.IncidentTarget.properties.type.enum[0]": "User",
	"definitions.IncidentTarget.properties.type.enum[1]": "EscalationPolicy",
	"definitions.IncidentTarget.properties.type.type": "string",
	"definitions.IncidentTarget.required.length": 2,
	"definitions.IncidentTarget.required[0]": "type",
	"definitions.IncidentTarget.required[1]": "slug",
	"definitions.IncidentTarget.type": "object",
	"definitions.IncidentTransition.description": "A transition of incident state",
	"definitions.IncidentTransition.properties.alertId.description": "The unique alert ID that caused the transition",
	"definitions.IncidentTransition.properties.alertId.type": "string",
	"definitions.IncidentTransition.properties.alertUrl.description": "A URL to retrieve the details of the alert that caused the transition",
	"definitions.IncidentTransition.properties.alertUrl.type": "string",
	"definitions.IncidentTransition.properties.at.description": "The time of the transition",
	"definitions.IncidentTransition.properties.at.type": "string",
	"definitions.IncidentTransition.properties.by.description": "The user that caused the transition (if any)",
	"definitions.IncidentTransition.properties.by.type": "string",
	"definitions.IncidentTransition.properties.manually.description": "If the incident transition was caused by a person",
	"definitions.IncidentTransition.properties.manually.type": "boolean",
	"definitions.IncidentTransition.properties.message.description": "The message entered by that user (if any)",
	"definitions.IncidentTransition.properties.message.type": "string",
	"definitions.IncidentTransition.properties.name.description": "The transition name",
	"definitions.IncidentTransition.properties.name.type": "string",
	"definitions.IncidentTransition.type": "object",
	"definitions.ListRoutingKeysResponse.description": "Info about routing keys in the org",
	"definitions.ListRoutingKeysResponse.properties._selfUrl.type": "string",
	"definitions.ListRoutingKeysResponse.properties.routingKeys.items.$ref": "#/definitions/RoutingKeyInfo",
	"definitions.ListRoutingKeysResponse.properties.routingKeys.type": "array",
	"definitions.ListRoutingKeysResponse.type": "object",
	"definitions.ListTeamMembersResponse.description": "A list of members for the team",
	"definitions.ListTeamMembersResponse.properties._selfUrl.type": "string",
	"definitions.ListTeamMembersResponse.properties._teamUrl.type": "string",
	"definitions.ListTeamMembersResponse.properties.members.items.$ref": "#/definitions/TeamMember",
	"definitions.ListTeamMembersResponse.properties.members.type": "array",
	"definitions.ListTeamMembersResponse.type": "object",
	"definitions.ListTeamResponse.description": "Some info about teams in the org",
	"definitions.ListTeamResponse.items.properties._membersUrl.type": "string",
	"definitions.ListTeamResponse.items.properties._selfUrl.type": "string",
	"definitions.ListTeamResponse.items.properties.isDefaultTeam.type": "boolean",
	"definitions.ListTeamResponse.items.properties.memberCount.type": "number",
	"definitions.ListTeamResponse.items.properties.name.type": "string",
	"definitions.ListTeamResponse.items.properties.slug.type": "string",
	"definitions.ListTeamResponse.items.properties.version.type": "number",
	"definitions.ListTeamResponse.items.type": "object",
	"definitions.ListTeamResponse.type": "array",
	"definitions.ListUserResponse.description": "Some info about the user",
	"definitions.ListUserResponse.properties._selfUrl.type": "string",
	"definitions.ListUserResponse.properties.users.items.$ref": "#/definitions/V1User",
	"definitions.ListUserResponse.properties.users.type": "array",
	"definitions.ListUserResponse.type": "object",
	"definitions.OnCallAndOverrides.properties.overrides.items.$ref": "#/definitions/TeamScheduleOverlayResource",
	"definitions.OnCallAndOverrides.properties.overrides.type": "array",
	"definitions.OnCallAndOverrides.properties.schedule.items.$ref": "#/definitions/TeamScheduleResource",
	"definitions.OnCallAndOverrides.properties.schedule.type": "array",
	"definitions.OnCallAndOverrides.properties.team.type": "string",
	"definitions.OnCallAndOverrides.type": "object",
	"definitions.OnCallInterval.properties.duration.properties.hours.type": "number",
	"definitions.OnCallInterval.properties.duration.properties.minutes.type": "number",
	"definitions.OnCallInterval.properties.duration.type": "object",
	"definitions.OnCallInterval.properties.off.type": "string",
	"definitions.OnCallInterval.properties.on.type": "string",
	"definitions.OnCallInterval.type": "object",
	"definitions.OnCallLog.properties.end.format": "date-time",
	"definitions.OnCallLog.properties.end.type": "string",
	"definitions.OnCallLog.properties.start.format": "date-time",
	"definitions.OnCallLog.properties.start.type": "string",
	"definitions.OnCallLog.properties.teamSlug.type": "string",
	"definitions.OnCallLog.properties.userLogs.items.$ref": "#/definitions/UserLog",
	"definitions.OnCallLog.properties.userLogs.type": "array",
	"definitions.OnCallLog.type": "object",
	"definitions.PagingPolicy.description": "Paging policy fields",
	"definitions.PagingPolicy.properties.contactType.type": "string",
	"definitions.PagingPolicy.properties.extId.type": "string",
	"definitions.PagingPolicy.properties.order.type": "integer",
	"definitions.PagingPolicy.properties.timeout.type": "integer",
	"definitions.PagingPolicy.type": "object",
	"definitions.Policies.description": "Paging policies accociated which this user",
	"definitions.Policies.properties.policies.items.$ref": "#/definitions/PagingPolicy",
	"definitions.Policies.properties.policies.type": "array",
	"definitions.Policies.properties.userId.type": "integer",
	"definitions.Policies.properties.username.type": "string",
	"definitions.Policies.type": "object",
	"definitions.RelLink.properties.href.type": "string",
	"definitions.RelLink.properties.rel.type": "string",
	"definitions.RelLink.type": "object",
	"definitions.RemoveTeamMemberPayload.description": "The user information",
	"definitions.RemoveTeamMemberPayload.properties.replacement.type": "string",
	"definitions.RemoveTeamMemberPayload.required.length": 1,
	"definitions.RemoveTeamMemberPayload.required[0]": "replacement",
	"definitions.RemoveTeamMemberPayload.type": "object",
	"definitions.RoutingKeyInfo.description": "Routing keys contain the following fields",
	"definitions.RoutingKeyInfo.properties.isDefault.type": "boolean",
	"definitions.RoutingKeyInfo.properties.routingKey.type": "string",
	"definitions.RoutingKeyInfo.properties.targets.items.$ref": "#/definitions/RoutingKeyTarget",
	"definitions.RoutingKeyInfo.properties.targets.type": "array",
	"definitions.RoutingKeyInfo.type": "object",
	"definitions.RoutingKeyTarget.description": "Routing key target",
	"definitions.RoutingKeyTarget.properties._teamUrl.type": "string",
	"definitions.RoutingKeyTarget.properties.policyName.type": "string",
	"definitions.RoutingKeyTarget.properties.policySlug.type": "string",
	"definitions.RoutingKeyTarget.type": "object",
	"definitions.TakeRequest.properties.fromUser.type": "string",
	"definitions.TakeRequest.properties.toUser.type": "string",
	"definitions.TakeRequest.required.length": 2,
	"definitions.TakeRequest.required[0]": "fromUser",
	"definitions.TakeRequest.required[1]": "toUser",
	"definitions.TakeRequest.type": "object",
	"definitions.TakeResult.properties.result.type": "string",
	"definitions.TakeResult.type": "object",
	"definitions.TeamMember.description": "Some info about the user",
	"definitions.TeamMember.properties.firstName.type": "string",
	"definitions.TeamMember.properties.lastName.type": "string",
	"definitions.TeamMember.properties.username.type": "string",
	"definitions.TeamMember.properties.verified.description": "Whether or not this user has set their password (will always be false)",
	"definitions.TeamMember.properties.verified.type": "string",
	"definitions.TeamMember.properties.version.type": "number",
	"definitions.TeamMember.type": "object",
	"definitions.TeamScheduleOverlayResource.properties.end.description": "The time the override is scheduled to end",
	"definitions.TeamScheduleOverlayResource.properties.end.type": "number",
	"definitions.TeamScheduleOverlayResource.properties.orig.description": "The user scheduled on call (if any)",
	"definitions.TeamScheduleOverlayResource.properties.orig.type": "string",
	"definitions.TeamScheduleOverlayResource.properties.over.description": "The user overriding the scheduled on call user (if any)",
	"definitions.TeamScheduleOverlayResource.properties.over.type": "string",
	"definitions.TeamScheduleOverlayResource.properties.start.description": "The time the override is scheduled to start",
	"definitions.TeamScheduleOverlayResource.properties.start.type": "number",
	"definitions.TeamScheduleOverlayResource.type": "object",
	"definitions.TeamScheduleResource.properties.oncall.description": "The user scheduled on call (if any)",
	"definitions.TeamScheduleResource.properties.oncall.type": "string",
	"definitions.TeamScheduleResource.properties.overrideoncall.description": "The user overriding the scheduled on call user (if any)",
	"definitions.TeamScheduleResource.properties.overrideoncall.type": "string",
	"definitions.TeamScheduleResource.properties.policyType.type": "string",
	"definitions.TeamScheduleResource.properties.rolls.items.$ref": "#/definitions/TeamScheduleRollResource",
	"definitions.TeamScheduleResource.properties.rolls.type": "array",
	"definitions.TeamScheduleResource.properties.rotationName.type": "string",
	"definitions.TeamScheduleResource.properties.shiftName.type": "string",
	"definitions.TeamScheduleResource.properties.shiftRoll.type": "number",
	"definitions.TeamScheduleResource.required.length": 2,
	"definitions.TeamScheduleResource.required[0]": "policyType",
	"definitions.TeamScheduleResource.required[1]": "rolls",
	"definitions.TeamScheduleResource.type": "object",
	"definitions.TeamScheduleRollResource.properties.change.description": "The time the period is scheduled to start",
	"definitions.TeamScheduleRollResource.properties.change.type": "number",
	"definitions.TeamScheduleRollResource.properties.isRoll.type": "boolean",
	"definitions.TeamScheduleRollResource.properties.oncall.description": "The user scheduled on call (if any)",
	"definitions.TeamScheduleRollResource.properties.oncall.type": "string",
	"definitions.TeamScheduleRollResource.properties.until.description": "The time the period is scheduled to end",
	"definitions.TeamScheduleRollResource.properties.until.type": "number",
	"definitions.TeamScheduleRollResource.required.length": 3,
	"definitions.TeamScheduleRollResource.required[0]": "change",
	"definitions.TeamScheduleRollResource.required[1]": "until",
	"definitions.TeamScheduleRollResource.required[2]": "isRoll",
	"definitions.TeamScheduleRollResource.type": "object",
	"definitions.UserContact.properties._selfUrl.type": "string",
	"definitions.UserContact.properties.deviceType.type": "string",
	"definitions.UserContact.properties.extId.type": "string",
	"definitions.UserContact.properties.label.type": "string",
	"definitions.UserContact.type": "object",
	"definitions.UserLog.properties.adjustedTotal.properties.hours.type": "number",
	"definitions.UserLog.properties.adjustedTotal.properties.minutes.type": "number",
	"definitions.UserLog.properties.adjustedTotal.type": "object",
	"definitions.UserLog.properties.log.items.$ref": "#/definitions/OnCallInterval",
	"definitions.UserLog.properties.log.type": "array",
	"definitions.UserLog.properties.total.properties.hours.type": "number",
	"definitions.UserLog.properties.total.properties.minutes.type": "number",
	"definitions.UserLog.properties.total.type": "object",
	"definitions.UserLog.properties.userId.type": "string",
	"definitions.UserLog.type": "object",
	"definitions.V1User.description": "Some info about the user",
	"definitions.V1User.properties._selfUrl.type": "string",
	"definitions.V1User.properties.createdAt.type": "string",
	"definitions.V1User.properties.email.type": "string",
	"definitions.V1User.properties.firstName.type": "string",
	"definitions.V1User.properties.lastName.type": "string",
	"definitions.V1User.properties.passwordLastUpdated.type": "string",
	"definitions.V1User.properties.username.type": "string",
	"definitions.V1User.properties.verified.description": "Whether or not this user has set their password (will always be false)",
	"definitions.V1User.properties.verified.type": "boolean",
	"definitions.V1User.type": "object",
	"host": "api.victorops.com",
	"info.description": "This API allows you to interact with the VictorOps platform in various ways. Your account may be limited\nto a total number of API calls per month. Also, some of these API calls have rate limits.\n\nNOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API\nviewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not\nprocess the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before\nsubmitting the curl request.\n",
	"info.title": "VictorOps",
	"info.version": "0.0.1",
	"info.x-apisguru-categories.length": 1,
	"info.x-apisguru-categories[0]": "developer_tools",
	"info.x-logo.url": "https://api.apis.guru/v2/cache/logo/https_pbs.twimg.com_profile_images_618808966001197056_olm2Yd1M.jpg",
	"info.x-origin.length": 1,
	"info.x-origin[0].format": "swagger",
	"info.x-origin[0].url": "https://portal.victorops.com/public/api-docs/victorops-api-v1.yaml",
	"info.x-origin[0].version": "2.0",
	"info.x-preferred": true,
	"info.x-providerName": "victorops.com",
	"parameters.ackResolveByUserPayload.description": "Ack/Resolve payload",
	"parameters.ackResolveByUserPayload.in": "body",
	"parameters.ackResolveByUserPayload.name": "body",
	"parameters.ackResolveByUserPayload.required": true,
	"parameters.ackResolveByUserPayload.schema.$ref": "#/definitions/AckOrResolveByUserRequest",
	"parameters.ackResolvePayload.description": "Ack/Resolve payload",
	"parameters.ackResolvePayload.in": "body",
	"parameters.ackResolvePayload.name": "body",
	"parameters.ackResolvePayload.required": true,
	"parameters.ackResolvePayload.schema.$ref": "#/definitions/AckOrResolveRequest",
	"parameters.addTeamMemberPayload.in": "body",
	"parameters.addTeamMemberPayload.name": "body",
	"parameters.addTeamMemberPayload.required": true,
	"parameters.addTeamMemberPayload.schema.$ref": "#/definitions/AddTeamMemberPayload",
	"parameters.addTeamPayload.description": "The team information",
	"parameters.addTeamPayload.in": "body",
	"parameters.addTeamPayload.name": "body",
	"parameters.addTeamPayload.required": true,
	"parameters.addTeamPayload.schema.$ref": "#/definitions/AddTeamPayload",
	"parameters.addUserPayload.in": "body",
	"parameters.addUserPayload.name": "body",
	"parameters.addUserPayload.required": true,
	"parameters.addUserPayload.schema.$ref": "#/definitions/AddUserPayload",
	"parameters.addUserPayloadV2.description": "The user information",
	"parameters.addUserPayloadV2.in": "body",
	"parameters.addUserPayloadV2.name": "body",
	"parameters.addUserPayloadV2.required": true,
	"parameters.addUserPayloadV2.schema.properties.email.format": "email",
	"parameters.addUserPayloadV2.schema.properties.email.type": "string",
	"parameters.addUserPayloadV2.schema.properties.firstName.type": "string",
	"parameters.addUserPayloadV2.schema.properties.lastName.type": "string",
	"parameters.addUserPayloadV2.schema.properties.username.type": "string",
	"parameters.addUserPayloadV2.schema.required.length": 4,
	"parameters.addUserPayloadV2.schema.required[0]": "firstName",
	"parameters.addUserPayloadV2.schema.required[1]": "lastName",
	"parameters.addUserPayloadV2.schema.required[2]": "username",
	"parameters.addUserPayloadV2.schema.required[3]": "email",
	"parameters.addUserPayloadV2.schema.type": "object",
	"parameters.apiId.description": "Your API ID",
	"parameters.apiId.in": "header",
	"parameters.apiId.name": "X-VO-Api-Id",
	"parameters.apiId.required": true,
	"parameters.apiId.type": "string",
	"parameters.apiKey.description": "Your API Key",
	"parameters.apiKey.in": "header",
	"parameters.apiKey.name": "X-VO-Api-Key",
	"parameters.apiKey.required": true,
	"parameters.apiKey.type": "string",
	"parameters.contactDeviceAdd.description": "The contact device",
	"parameters.contactDeviceAdd.in": "body",
	"parameters.contactDeviceAdd.name": "body",
	"parameters.contactDeviceAdd.required": true,
	"parameters.contactDeviceAdd.schema.$ref": "#/definitions/ContactDeviceAdd",
	"parameters.contactEmailAdd.description": "The contact email",
	"parameters.contactEmailAdd.in": "body",
	"parameters.contactEmailAdd.name": "body",
	"parameters.contactEmailAdd.required": true,
	"parameters.contactEmailAdd.schema.$ref": "#/definitions/ContactEmailAdd",
	"parameters.contactPhoneAdd.description": "The contact phone",
	"parameters.contactPhoneAdd.in": "body",
	"parameters.contactPhoneAdd.name": "body",
	"parameters.contactPhoneAdd.required": true,
	"parameters.contactPhoneAdd.schema.$ref": "#/definitions/ContactPhoneAdd",
	"parameters.createIncidentPayload.description": "The incident details",
	"parameters.createIncidentPayload.in": "body",
	"parameters.createIncidentPayload.name": "body",
	"parameters.createIncidentPayload.required": true,
	"parameters.createIncidentPayload.schema.$ref": "#/definitions/CreateIncidentRequest",
	"parameters.daysFwd.default": 14,
	"parameters.daysFwd.description": "Days to include in returned schedule (30 max)",
	"parameters.daysFwd.in": "query",
	"parameters.daysFwd.maximum": 30,
	"parameters.daysFwd.minimum": 0,
	"parameters.daysFwd.name": "daysForward",
	"parameters.daysFwd.required": false,
	"parameters.daysFwd.type": "number",
	"parameters.daysSkip.default": 0,
	"parameters.daysSkip.description": "Days to skip before computing schedule to return (90 max)",
	"parameters.daysSkip.in": "query",
	"parameters.daysSkip.maximum": 90,
	"parameters.daysSkip.minimum": 0,
	"parameters.daysSkip.name": "daysSkip",
	"parameters.daysSkip.required": false,
	"parameters.daysSkip.type": "number",
	"parameters.deleteUserPayload.in": "body",
	"parameters.deleteUserPayload.name": "body",
	"parameters.deleteUserPayload.required": true,
	"parameters.deleteUserPayload.schema.$ref": "#/definitions/DeleteUserPayload",
	"parameters.limit.default": 20,
	"parameters.limit.description": "The maximum number of matching incidents to return (100 max)",
	"parameters.limit.in": "query",
	"parameters.limit.maximum": 100,
	"parameters.limit.name": "limit",
	"parameters.limit.required": false,
	"parameters.limit.type": "number",
	"parameters.offset.default": 0,
	"parameters.offset.description": "The offset within the set of matching incidents",
	"parameters.offset.in": "query",
	"parameters.offset.name": "offset",
	"parameters.offset.required": false,
	"parameters.offset.type": "number",
	"parameters.removeTeamMemberPayload.description": "The user information",
	"parameters.removeTeamMemberPayload.in": "body",
	"parameters.removeTeamMemberPayload.name": "body",
	"parameters.removeTeamMemberPayload.required": true,
	"parameters.removeTeamMemberPayload.schema.$ref": "#/definitions/RemoveTeamMemberPayload",
	"parameters.step.default": 0,
	"parameters.step.description": "Step of escalation policy (3 max)",
	"parameters.step.in": "query",
	"parameters.step.maximum": 3,
	"parameters.step.minimum": 0,
	"parameters.step.name": "step",
	"parameters.step.required": false,
	"parameters.step.type": "number",
	"parameters.takeRequestPayload.description": "The take on-call payload",
	"parameters.takeRequestPayload.in": "body",
	"parameters.takeRequestPayload.name": "body",
	"parameters.takeRequestPayload.required": true,
	"parameters.takeRequestPayload.schema.$ref": "#/definitions/TakeRequest",
	"paths./api-public/v1/alerts/{uuid}.get.description": "Retrieve the details of an alert that was sent VictorOps by you.\n\nThis API may be called a maximum of 6 times per minute.\n",
	"paths./api-public/v1/alerts/{uuid}.get.parameters.length": 3,
	"paths./api-public/v1/alerts/{uuid}.get.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/alerts/{uuid}.get.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/alerts/{uuid}.get.parameters[2].description": "The VictorOps uuid of the alert",
	"paths./api-public/v1/alerts/{uuid}.get.parameters[2].in": "path",
	"paths./api-public/v1/alerts/{uuid}.get.parameters[2].name": "uuid",
	"paths./api-public/v1/alerts/{uuid}.get.parameters[2].required": true,
	"paths./api-public/v1/alerts/{uuid}.get.parameters[2].type": "string",
	"paths./api-public/v1/alerts/{uuid}.get.responses.200.description": "The alert, if found.\n",
	"paths./api-public/v1/alerts/{uuid}.get.responses.200.schema.$ref": "#/definitions/GetAlertResponse",
	"paths./api-public/v1/alerts/{uuid}.get.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/alerts/{uuid}.get.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/alerts/{uuid}.get.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/alerts/{uuid}.get.responses.404.$ref": "#/responses/user-not-found",
	"paths./api-public/v1/alerts/{uuid}.get.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/alerts/{uuid}.get.summary": "Retrieve alert details.",
	"paths./api-public/v1/alerts/{uuid}.get.tags.length": 1,
	"paths./api-public/v1/alerts/{uuid}.get.tags[0]": "Alerts",
	"paths./api-public/v1/incidents.get.description": "Get a list of the currently open, acknowledged and recently resolved incidents.\nThis API may be called a maximum of 6 times per minute.\n",
	"paths./api-public/v1/incidents.get.parameters.length": 2,
	"paths./api-public/v1/incidents.get.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/incidents.get.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/incidents.get.responses.200.description": "The set of incidents.\n",
	"paths./api-public/v1/incidents.get.responses.200.schema.$ref": "#/definitions/ActiveIncidentList",
	"paths./api-public/v1/incidents.get.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/incidents.get.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/incidents.get.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/incidents.get.responses.404.$ref": "#/responses/404",
	"paths./api-public/v1/incidents.get.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/incidents.get.summary": "Get current incident information",
	"paths./api-public/v1/incidents.get.tags.length": 1,
	"paths./api-public/v1/incidents.get.tags[0]": "Incidents",
	"paths./api-public/v1/incidents.post.description": "Create a new incident.\n\nThis call replicates the function of our\n\u003ca href=\"https://help.victorops.com/knowledge-base/manual-incident-creation/\"\u003emanual incident creation process\u003c/a\u003e.\nMonitoring tools and custom integrations\nshould be configured using our\n\u003ca href=\"https://help.victorops.com/knowledge-base/victorops-restendpoint-integration/\"\u003eREST Endpoint\u003c/a\u003e.\n\nThis API may be called a maximum of 6 times per minute.\n",
	"paths./api-public/v1/incidents.post.parameters.length": 3,
	"paths./api-public/v1/incidents.post.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/incidents.post.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/incidents.post.parameters[2].$ref": "#/parameters/createIncidentPayload",
	"paths./api-public/v1/incidents.post.responses.200.description": "Information about the incident created\n",
	"paths./api-public/v1/incidents.post.responses.200.schema.$ref": "#/definitions/CreatedIncident",
	"paths./api-public/v1/incidents.post.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/incidents.post.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/incidents.post.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/incidents.post.responses.404.$ref": "#/responses/404",
	"paths./api-public/v1/incidents.post.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/incidents.post.summary": "Create a new incident",
	"paths./api-public/v1/incidents.post.tags.length": 1,
	"paths./api-public/v1/incidents.post.tags[0]": "Incidents",
	"paths./api-public/v1/incidents/ack.patch.description": "The incident(s) must be currently open.  The user supplied must be a valid VictorOps user and a member of your organization.\n\nThis API may be called a maximum of 6 times per minute.\n",
	"paths./api-public/v1/incidents/ack.patch.parameters.length": 3,
	"paths./api-public/v1/incidents/ack.patch.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/incidents/ack.patch.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/incidents/ack.patch.parameters[2].$ref": "#/parameters/ackResolvePayload",
	"paths./api-public/v1/incidents/ack.patch.responses.200.description": "The result of each acknowledge incident action.",
	"paths./api-public/v1/incidents/ack.patch.responses.200.schema.$ref": "#/definitions/AckOrResolveResponse",
	"paths./api-public/v1/incidents/ack.patch.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/incidents/ack.patch.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/incidents/ack.patch.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/incidents/ack.patch.responses.404.$ref": "#/responses/user-not-found",
	"paths./api-public/v1/incidents/ack.patch.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/incidents/ack.patch.summary": "Acknowledge an incident or list of incidents",
	"paths./api-public/v1/incidents/ack.patch.tags.length": 1,
	"paths./api-public/v1/incidents/ack.patch.tags[0]": "Incidents",
	"paths./api-public/v1/incidents/byUser/ack.patch.description": "The incident(s) must be currently open.  The user supplied must be a valid VictorOps user and a member of your organization.\n\nThis API may be called a maximum of 6 times per minute.\n",
	"paths./api-public/v1/incidents/byUser/ack.patch.parameters.length": 3,
	"paths./api-public/v1/incidents/byUser/ack.patch.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/incidents/byUser/ack.patch.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/incidents/byUser/ack.patch.parameters[2].$ref": "#/parameters/ackResolveByUserPayload",
	"paths./api-public/v1/incidents/byUser/ack.patch.responses.200.description": "The result of each acknowledge incident action.",
	"paths./api-public/v1/incidents/byUser/ack.patch.responses.200.schema.$ref": "#/definitions/AckOrResolveResponse",
	"paths./api-public/v1/incidents/byUser/ack.patch.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/incidents/byUser/ack.patch.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/incidents/byUser/ack.patch.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/incidents/byUser/ack.patch.responses.404.$ref": "#/responses/user-not-found",
	"paths./api-public/v1/incidents/byUser/ack.patch.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/incidents/byUser/ack.patch.summary": "Acknowledge all incidents for which a user was paged.",
	"paths./api-public/v1/incidents/byUser/ack.patch.tags.length": 1,
	"paths./api-public/v1/incidents/byUser/ack.patch.tags[0]": "Incidents",
	"paths./api-public/v1/incidents/byUser/resolve.patch.description": "The incident(s) must be currently open.  The user supplied must be a valid VictorOps user and a member of your organization.\n\nThis API may be called a maximum of 6 times per minute.\n",
	"paths./api-public/v1/incidents/byUser/resolve.patch.parameters.length": 3,
	"paths./api-public/v1/incidents/byUser/resolve.patch.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/incidents/byUser/resolve.patch.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/incidents/byUser/resolve.patch.parameters[2].$ref": "#/parameters/ackResolveByUserPayload",
	"paths./api-public/v1/incidents/byUser/resolve.patch.responses.200.description": "The result of each resolve incident action.",
	"paths./api-public/v1/incidents/byUser/resolve.patch.responses.200.schema.$ref": "#/definitions/AckOrResolveResponse",
	"paths./api-public/v1/incidents/byUser/resolve.patch.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/incidents/byUser/resolve.patch.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/incidents/byUser/resolve.patch.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/incidents/byUser/resolve.patch.responses.404.$ref": "#/responses/user-not-found",
	"paths./api-public/v1/incidents/byUser/resolve.patch.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/incidents/byUser/resolve.patch.summary": "Resolve all incidents for which a user was paged.",
	"paths./api-public/v1/incidents/byUser/resolve.patch.tags.length": 1,
	"paths./api-public/v1/incidents/byUser/resolve.patch.tags[0]": "Incidents",
	"paths./api-public/v1/incidents/resolve.patch.description": "The incident(s) must be currently open.  The user supplied must be a valid VictorOps user and a member of your organization.\n\nThis API may be called a maximum of 6 times per minute.\n",
	"paths./api-public/v1/incidents/resolve.patch.parameters.length": 3,
	"paths./api-public/v1/incidents/resolve.patch.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/incidents/resolve.patch.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/incidents/resolve.patch.parameters[2].$ref": "#/parameters/ackResolvePayload",
	"paths./api-public/v1/incidents/resolve.patch.responses.200.description": "The result of each resolve incident action.",
	"paths./api-public/v1/incidents/resolve.patch.responses.200.schema.$ref": "#/definitions/AckOrResolveResponse",
	"paths./api-public/v1/incidents/resolve.patch.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/incidents/resolve.patch.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/incidents/resolve.patch.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/incidents/resolve.patch.responses.404.$ref": "#/responses/user-not-found",
	"paths./api-public/v1/incidents/resolve.patch.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/incidents/resolve.patch.summary": "Resolve an incident or list of incidents",
	"paths./api-public/v1/incidents/resolve.patch.tags.length": 1,
	"paths./api-public/v1/incidents/resolve.patch.tags[0]": "Incidents",
	"paths./api-public/v1/org/routing-keys.get.description": "Retrieves a list of routing keys and associated teams.\nThis API may be called a maximum of once a minute.",
	"paths./api-public/v1/org/routing-keys.get.parameters.length": 2,
	"paths./api-public/v1/org/routing-keys.get.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/org/routing-keys.get.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/org/routing-keys.get.responses.200.description": "The list of routing keys and associated teams",
	"paths./api-public/v1/org/routing-keys.get.responses.200.schema.$ref": "#/definitions/ListRoutingKeysResponse",
	"paths./api-public/v1/org/routing-keys.get.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/org/routing-keys.get.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/org/routing-keys.get.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/org/routing-keys.get.responses.404.$ref": "#/responses/404",
	"paths./api-public/v1/org/routing-keys.get.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/org/routing-keys.get.summary": "List routing keys with assoicated teams",
	"paths./api-public/v1/org/routing-keys.get.tags.length": 1,
	"paths./api-public/v1/org/routing-keys.get.tags[0]": "Routing keys",
	"paths./api-public/v1/team.get.description": "Get a list of teams for your organization.\n\nThis API may be called a maximum of 15 times per minute.\n",
	"paths./api-public/v1/team.get.parameters.length": 2,
	"paths./api-public/v1/team.get.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/team.get.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/team.get.responses.200.description": "A list of teams for your organization",
	"paths./api-public/v1/team.get.responses.200.schema.$ref": "#/definitions/ListTeamResponse",
	"paths./api-public/v1/team.get.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/team.get.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/team.get.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/team.get.responses.404.$ref": "#/responses/team-not-found",
	"paths./api-public/v1/team.get.responses.422.description": "You have reached your team limit.\n",
	"paths./api-public/v1/team.get.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/team.get.summary": "List teams",
	"paths./api-public/v1/team.get.tags.length": 1,
	"paths./api-public/v1/team.get.tags[0]": "Teams",
	"paths./api-public/v1/team.post.description": "Add a team to your organization.\n\nThis API may be called a maximum of 15 times per minute.\n",
	"paths./api-public/v1/team.post.parameters.length": 3,
	"paths./api-public/v1/team.post.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/team.post.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/team.post.parameters[2].$ref": "#/parameters/addTeamPayload",
	"paths./api-public/v1/team.post.responses.200.description": "Some details about the team that was added",
	"paths./api-public/v1/team.post.responses.200.schema.$ref": "#/definitions/AddTeamResponse",
	"paths./api-public/v1/team.post.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/team.post.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/team.post.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/team.post.responses.404.$ref": "#/responses/team-not-found",
	"paths./api-public/v1/team.post.responses.422.description": "Team name or email is unavailable, or you have reached your team limit.\n",
	"paths./api-public/v1/team.post.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/team.post.summary": "Add a team",
	"paths./api-public/v1/team.post.tags.length": 1,
	"paths./api-public/v1/team.post.tags[0]": "Teams",
	"paths./api-public/v1/team/{team}.delete.description": "Remove a team from your organization.\n\nThis API may be called a maximum of 15 times per minute.\n",
	"paths./api-public/v1/team/{team}.delete.parameters.length": 3,
	"paths./api-public/v1/team/{team}.delete.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/team/{team}.delete.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/team/{team}.delete.parameters[2].description": "The VictorOps team to be deleted",
	"paths./api-public/v1/team/{team}.delete.parameters[2].in": "path",
	"paths./api-public/v1/team/{team}.delete.parameters[2].name": "team",
	"paths./api-public/v1/team/{team}.delete.parameters[2].required": true,
	"paths./api-public/v1/team/{team}.delete.parameters[2].type": "string",
	"paths./api-public/v1/team/{team}.delete.responses.200.description": "Team was deleted",
	"paths./api-public/v1/team/{team}.delete.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/team/{team}.delete.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/team/{team}.delete.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/team/{team}.delete.responses.404.$ref": "#/responses/team-not-found",
	"paths./api-public/v1/team/{team}.delete.responses.422.description": "There was a problem with the delete such as the replacement team was not found.\n",
	"paths./api-public/v1/team/{team}.delete.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/team/{team}.delete.summary": "Remove a team",
	"paths./api-public/v1/team/{team}.delete.tags.length": 1,
	"paths./api-public/v1/team/{team}.delete.tags[0]": "Teams",
	"paths./api-public/v1/team/{team}.get.description": "Get the information for the specified team.\n\nThis API may be called a maximum of 15 times per minute.\n",
	"paths./api-public/v1/team/{team}.get.parameters.length": 3,
	"paths./api-public/v1/team/{team}.get.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/team/{team}.get.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/team/{team}.get.parameters[2].description": "The VictorOps team to fetch",
	"paths./api-public/v1/team/{team}.get.parameters[2].in": "path",
	"paths./api-public/v1/team/{team}.get.parameters[2].name": "team",
	"paths./api-public/v1/team/{team}.get.parameters[2].required": true,
	"paths./api-public/v1/team/{team}.get.parameters[2].type": "string",
	"paths./api-public/v1/team/{team}.get.responses.200.description": "Some details about the team that was added",
	"paths./api-public/v1/team/{team}.get.responses.200.schema.$ref": "#/definitions/AddTeamResponse",
	"paths./api-public/v1/team/{team}.get.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/team/{team}.get.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/team/{team}.get.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/team/{team}.get.responses.404.$ref": "#/responses/team-not-found",
	"paths./api-public/v1/team/{team}.get.responses.422.description": "Team name or email is unavailable, or you have reached your team limit.\n",
	"paths./api-public/v1/team/{team}.get.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/team/{team}.get.summary": "Retrieve information for a team",
	"paths./api-public/v1/team/{team}.get.tags.length": 1,
	"paths./api-public/v1/team/{team}.get.tags[0]": "Teams",
	"paths./api-public/v1/team/{team}.put.description": "Update the designated team\n\nThis API may be called a maximum of 15 times per minute.\n",
	"paths./api-public/v1/team/{team}.put.parameters.length": 4,
	"paths./api-public/v1/team/{team}.put.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/team/{team}.put.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/team/{team}.put.parameters[2].description": "The VictorOps team to be updated",
	"paths./api-public/v1/team/{team}.put.parameters[2].in": "path",
	"paths./api-public/v1/team/{team}.put.parameters[2].name": "team",
	"paths./api-public/v1/team/{team}.put.parameters[2].required": true,
	"paths./api-public/v1/team/{team}.put.parameters[2].type": "string",
	"paths./api-public/v1/team/{team}.put.parameters[3].$ref": "#/parameters/addTeamPayload",
	"paths./api-public/v1/team/{team}.put.responses.200.description": "Some details about the team that was added",
	"paths./api-public/v1/team/{team}.put.responses.200.schema.$ref": "#/definitions/AddTeamResponse",
	"paths./api-public/v1/team/{team}.put.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/team/{team}.put.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/team/{team}.put.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/team/{team}.put.responses.404.$ref": "#/responses/team-not-found",
	"paths./api-public/v1/team/{team}.put.responses.422.description": "Team name or email is unavailable, or you have reached your team limit.\n",
	"paths./api-public/v1/team/{team}.put.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/team/{team}.put.summary": "Update a team",
	"paths./api-public/v1/team/{team}.put.tags.length": 1,
	"paths./api-public/v1/team/{team}.put.tags[0]": "Teams",
	"paths./api-public/v1/team/{team}/members.get.description": "Get the members for the specified team.\n\nThis API may be called a maximum of 15 times per minute.\n",
	"paths./api-public/v1/team/{team}/members.get.parameters.length": 3,
	"paths./api-public/v1/team/{team}/members.get.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/team/{team}/members.get.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/team/{team}/members.get.parameters[2].description": "The VictorOps team to fetch",
	"paths./api-public/v1/team/{team}/members.get.parameters[2].in": "path",
	"paths./api-public/v1/team/{team}/members.get.parameters[2].name": "team",
	"paths./api-public/v1/team/{team}/members.get.parameters[2].required": true,
	"paths./api-public/v1/team/{team}/members.get.parameters[2].type": "string",
	"paths./api-public/v1/team/{team}/members.get.responses.200.description": "Some details about the team that was added",
	"paths./api-public/v1/team/{team}/members.get.responses.200.schema.$ref": "#/definitions/ListTeamMembersResponse",
	"paths./api-public/v1/team/{team}/members.get.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/team/{team}/members.get.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/team/{team}/members.get.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/team/{team}/members.get.responses.404.$ref": "#/responses/team-not-found",
	"paths./api-public/v1/team/{team}/members.get.responses.422.description": "Team name or email is unavailable, or you have reached your team limit.\n",
	"paths./api-public/v1/team/{team}/members.get.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/team/{team}/members.get.summary": "Retrieve a list of members for a team",
	"paths./api-public/v1/team/{team}/members.get.tags.length": 1,
	"paths./api-public/v1/team/{team}/members.get.tags[0]": "Teams",
	"paths./api-public/v1/team/{team}/members.post.description": "Add a team member to your team.\n\nThis API may be called a maximum of 15 times per minute.\n",
	"paths./api-public/v1/team/{team}/members.post.parameters.length": 4,
	"paths./api-public/v1/team/{team}/members.post.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/team/{team}/members.post.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/team/{team}/members.post.parameters[2].description": "The VictorOps team to fetch",
	"paths./api-public/v1/team/{team}/members.post.parameters[2].in": "path",
	"paths./api-public/v1/team/{team}/members.post.parameters[2].name": "team",
	"paths./api-public/v1/team/{team}/members.post.parameters[2].required": true,
	"paths./api-public/v1/team/{team}/members.post.parameters[2].type": "string",
	"paths./api-public/v1/team/{team}/members.post.parameters[3].$ref": "#/parameters/addTeamMemberPayload",
	"paths./api-public/v1/team/{team}/members.post.responses.200.description": "Some details about the team that was added",
	"paths./api-public/v1/team/{team}/members.post.responses.200.schema.$ref": "#/definitions/ListTeamMembersResponse",
	"paths./api-public/v1/team/{team}/members.post.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/team/{team}/members.post.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/team/{team}/members.post.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/team/{team}/members.post.responses.404.$ref": "#/responses/team-not-found",
	"paths./api-public/v1/team/{team}/members.post.responses.422.description": "Team name or email is unavailable, or you have reached your team limit.\n",
	"paths./api-public/v1/team/{team}/members.post.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/team/{team}/members.post.summary": "Add a team member",
	"paths./api-public/v1/team/{team}/members.post.tags.length": 1,
	"paths./api-public/v1/team/{team}/members.post.tags[0]": "Teams",
	"paths./api-public/v1/team/{team}/members/{user}.delete.description": "Remove a team from your organization.\n\nThis API may be called a maximum of 15 times per minute.\n",
	"paths./api-public/v1/team/{team}/members/{user}.delete.parameters.length": 5,
	"paths./api-public/v1/team/{team}/members/{user}.delete.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/team/{team}/members/{user}.delete.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/team/{team}/members/{user}.delete.parameters[2].description": "The VictorOps team to be deleted",
	"paths./api-public/v1/team/{team}/members/{user}.delete.parameters[2].in": "path",
	"paths./api-public/v1/team/{team}/members/{user}.delete.parameters[2].name": "team",
	"paths./api-public/v1/team/{team}/members/{user}.delete.parameters[2].required": true,
	"paths./api-public/v1/team/{team}/members/{user}.delete.parameters[2].type": "string",
	"paths./api-public/v1/team/{team}/members/{user}.delete.parameters[3].description": "The team member username",
	"paths./api-public/v1/team/{team}/members/{user}.delete.parameters[3].in": "path",
	"paths./api-public/v1/team/{team}/members/{user}.delete.parameters[3].name": "user",
	"paths./api-public/v1/team/{team}/members/{user}.delete.parameters[3].required": true,
	"paths./api-public/v1/team/{team}/members/{user}.delete.parameters[3].type": "string",
	"paths./api-public/v1/team/{team}/members/{user}.delete.parameters[4].$ref": "#/parameters/removeTeamMemberPayload",
	"paths./api-public/v1/team/{team}/members/{user}.delete.responses.200.description": "Team was deleted",
	"paths./api-public/v1/team/{team}/members/{user}.delete.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/team/{team}/members/{user}.delete.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/team/{team}/members/{user}.delete.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/team/{team}/members/{user}.delete.responses.404.$ref": "#/responses/team-not-found",
	"paths./api-public/v1/team/{team}/members/{user}.delete.responses.422.description": "There was a problem with the delete such as the replacement team member was not found.\n",
	"paths./api-public/v1/team/{team}/members/{user}.delete.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/team/{team}/members/{user}.delete.summary": "Remove a team member",
	"paths./api-public/v1/team/{team}/members/{user}.delete.tags.length": 1,
	"paths./api-public/v1/team/{team}/members/{user}.delete.tags[0]": "Teams",
	"paths./api-public/v1/team/{team}/oncall/schedule.get.description": "Get the on-call schedule for a user for all teams, including on-call overrides.\n\nThis API may be called a maximum of 15 times per minute.\n",
	"paths./api-public/v1/team/{team}/oncall/schedule.get.parameters.length": 6,
	"paths./api-public/v1/team/{team}/oncall/schedule.get.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/team/{team}/oncall/schedule.get.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/team/{team}/oncall/schedule.get.parameters[2].description": "The VictorOps team 'slug'",
	"paths./api-public/v1/team/{team}/oncall/schedule.get.parameters[2].in": "path",
	"paths./api-public/v1/team/{team}/oncall/schedule.get.parameters[2].name": "team",
	"paths./api-public/v1/team/{team}/oncall/schedule.get.parameters[2].required": true,
	"paths./api-public/v1/team/{team}/oncall/schedule.get.parameters[2].type": "string",
	"paths./api-public/v1/team/{team}/oncall/schedule.get.parameters[3].$ref": "#/parameters/daysFwd",
	"paths./api-public/v1/team/{team}/oncall/schedule.get.parameters[4].$ref": "#/parameters/daysSkip",
	"paths./api-public/v1/team/{team}/oncall/schedule.get.parameters[5].$ref": "#/parameters/step",
	"paths./api-public/v1/team/{team}/oncall/schedule.get.responses.200.description": "The on-call schedule for the team",
	"paths./api-public/v1/team/{team}/oncall/schedule.get.responses.200.schema.$ref": "#/definitions/OnCallAndOverrides",
	"paths./api-public/v1/team/{team}/oncall/schedule.get.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/team/{team}/oncall/schedule.get.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/team/{team}/oncall/schedule.get.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/team/{team}/oncall/schedule.get.responses.404.$ref": "#/responses/team-not-found",
	"paths./api-public/v1/team/{team}/oncall/schedule.get.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/team/{team}/oncall/schedule.get.summary": "Get a team's on-call schedule",
	"paths./api-public/v1/team/{team}/oncall/schedule.get.tags.length": 1,
	"paths./api-public/v1/team/{team}/oncall/schedule.get.tags[0]": "On-call",
	"paths./api-public/v1/team/{team}/oncall/user.patch.description": "Replaces a currently on-call user on the team with another.\n\nThis API may be called a maximum of 6 times per minute.\n",
	"paths./api-public/v1/team/{team}/oncall/user.patch.parameters.length": 4,
	"paths./api-public/v1/team/{team}/oncall/user.patch.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/team/{team}/oncall/user.patch.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/team/{team}/oncall/user.patch.parameters[2].$ref": "#/parameters/takeRequestPayload",
	"paths./api-public/v1/team/{team}/oncall/user.patch.parameters[3].description": "The VictorOps team 'slug'",
	"paths./api-public/v1/team/{team}/oncall/user.patch.parameters[3].in": "path",
	"paths./api-public/v1/team/{team}/oncall/user.patch.parameters[3].name": "team",
	"paths./api-public/v1/team/{team}/oncall/user.patch.parameters[3].required": true,
	"paths./api-public/v1/team/{team}/oncall/user.patch.parameters[3].type": "string",
	"paths./api-public/v1/team/{team}/oncall/user.patch.responses.200.description": "The result of the take request",
	"paths./api-public/v1/team/{team}/oncall/user.patch.responses.200.schema.$ref": "#/definitions/TakeResult",
	"paths./api-public/v1/team/{team}/oncall/user.patch.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/team/{team}/oncall/user.patch.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/team/{team}/oncall/user.patch.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/team/{team}/oncall/user.patch.responses.404.description": "Team or user(s) not found",
	"paths./api-public/v1/team/{team}/oncall/user.patch.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/team/{team}/oncall/user.patch.summary": "Create an on-call override (take on-call)",
	"paths./api-public/v1/team/{team}/oncall/user.patch.tags.length": 1,
	"paths./api-public/v1/team/{team}/oncall/user.patch.tags[0]": "On-call",
	"paths./api-public/v1/user.get.description": "Get a list of users for your organization.\n\nThis API may be called a maximum of 15 times per minute.\n",
	"paths./api-public/v1/user.get.parameters.length": 2,
	"paths./api-public/v1/user.get.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/user.get.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/user.get.responses.200.description": "A list of users for your organization",
	"paths./api-public/v1/user.get.responses.200.schema.$ref": "#/definitions/ListUserResponse",
	"paths./api-public/v1/user.get.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/user.get.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/user.get.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/user.get.responses.404.$ref": "#/responses/user-not-found",
	"paths./api-public/v1/user.get.responses.422.description": "You have reached your user limit.\n",
	"paths./api-public/v1/user.get.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/user.get.summary": "List users",
	"paths./api-public/v1/user.get.tags.length": 1,
	"paths./api-public/v1/user.get.tags[0]": "Users",
	"paths./api-public/v1/user.post.description": "Add a user to your organization.\n\nThis API may be called a maximum of 15 times per minute.\n",
	"paths./api-public/v1/user.post.parameters.length": 3,
	"paths./api-public/v1/user.post.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/user.post.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/user.post.parameters[2].$ref": "#/parameters/addUserPayload",
	"paths./api-public/v1/user.post.responses.200.description": "Some details about the user that was added",
	"paths./api-public/v1/user.post.responses.200.schema.$ref": "#/definitions/AddUserResponse",
	"paths./api-public/v1/user.post.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/user.post.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/user.post.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/user.post.responses.404.$ref": "#/responses/user-not-found",
	"paths./api-public/v1/user.post.responses.422.description": "Username or email is unavailable, or you have reached your user limit.\n",
	"paths./api-public/v1/user.post.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/user.post.summary": "Add a user",
	"paths./api-public/v1/user.post.tags.length": 1,
	"paths./api-public/v1/user.post.tags[0]": "Users",
	"paths./api-public/v1/user/{user}.delete.description": "Remove a user from your organization.\n\nThis API may be called a maximum of 15 times per minute.\n",
	"paths./api-public/v1/user/{user}.delete.parameters.length": 4,
	"paths./api-public/v1/user/{user}.delete.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/user/{user}.delete.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/user/{user}.delete.parameters[2].description": "The VictorOps user to be deleted",
	"paths./api-public/v1/user/{user}.delete.parameters[2].in": "path",
	"paths./api-public/v1/user/{user}.delete.parameters[2].name": "user",
	"paths./api-public/v1/user/{user}.delete.parameters[2].required": true,
	"paths./api-public/v1/user/{user}.delete.parameters[2].type": "string",
	"paths./api-public/v1/user/{user}.delete.parameters[3].$ref": "#/parameters/deleteUserPayload",
	"paths./api-public/v1/user/{user}.delete.responses.200.description": "User was deleted",
	"paths./api-public/v1/user/{user}.delete.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/user/{user}.delete.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/user/{user}.delete.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/user/{user}.delete.responses.404.$ref": "#/responses/user-not-found",
	"paths./api-public/v1/user/{user}.delete.responses.422.description": "There was a problem with the delete such as the replacement user was not found.\n",
	"paths./api-public/v1/user/{user}.delete.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/user/{user}.delete.summary": "Remove a user",
	"paths./api-public/v1/user/{user}.delete.tags.length": 1,
	"paths./api-public/v1/user/{user}.delete.tags[0]": "Users",
	"paths./api-public/v1/user/{user}.get.description": "Get the information for the specified user.\n\nThis API may be called a maximum of 15 times per minute.\n",
	"paths./api-public/v1/user/{user}.get.parameters.length": 3,
	"paths./api-public/v1/user/{user}.get.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/user/{user}.get.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/user/{user}.get.parameters[2].description": "The VictorOps user to fetch",
	"paths./api-public/v1/user/{user}.get.parameters[2].in": "path",
	"paths./api-public/v1/user/{user}.get.parameters[2].name": "user",
	"paths./api-public/v1/user/{user}.get.parameters[2].required": true,
	"paths./api-public/v1/user/{user}.get.parameters[2].type": "string",
	"paths./api-public/v1/user/{user}.get.responses.200.description": "Some details about the user that was added",
	"paths./api-public/v1/user/{user}.get.responses.200.schema.$ref": "#/definitions/AddUserResponse",
	"paths./api-public/v1/user/{user}.get.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/user/{user}.get.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/user/{user}.get.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/user/{user}.get.responses.404.$ref": "#/responses/user-not-found",
	"paths./api-public/v1/user/{user}.get.responses.422.description": "Username or email is unavailable, or you have reached your user limit.\n",
	"paths./api-public/v1/user/{user}.get.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/user/{user}.get.summary": "Retrieve information for a user",
	"paths./api-public/v1/user/{user}.get.tags.length": 1,
	"paths./api-public/v1/user/{user}.get.tags[0]": "Users",
	"paths./api-public/v1/user/{user}.put.description": "Update the designated user\n\nThis API may be called a maximum of 15 times per minute.\n",
	"paths./api-public/v1/user/{user}.put.parameters.length": 4,
	"paths./api-public/v1/user/{user}.put.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/user/{user}.put.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/user/{user}.put.parameters[2].description": "The VictorOps user to be updated",
	"paths./api-public/v1/user/{user}.put.parameters[2].in": "path",
	"paths./api-public/v1/user/{user}.put.parameters[2].name": "user",
	"paths./api-public/v1/user/{user}.put.parameters[2].required": true,
	"paths./api-public/v1/user/{user}.put.parameters[2].type": "string",
	"paths./api-public/v1/user/{user}.put.parameters[3].$ref": "#/parameters/addUserPayload",
	"paths./api-public/v1/user/{user}.put.responses.200.description": "Some details about the user that was added",
	"paths./api-public/v1/user/{user}.put.responses.200.schema.$ref": "#/definitions/AddUserResponse",
	"paths./api-public/v1/user/{user}.put.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/user/{user}.put.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/user/{user}.put.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/user/{user}.put.responses.404.$ref": "#/responses/user-not-found",
	"paths./api-public/v1/user/{user}.put.responses.422.description": "Username or email is unavailable, or you have reached your user limit.\n",
	"paths./api-public/v1/user/{user}.put.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/user/{user}.put.summary": "Update a user",
	"paths./api-public/v1/user/{user}.put.tags.length": 1,
	"paths./api-public/v1/user/{user}.put.tags[0]": "Users",
	"paths./api-public/v1/user/{user}/contact-methods.get.description": "Get the contact methods for a user\n\nThis API may be called a maximum of 15 times per minute.\n",
	"paths./api-public/v1/user/{user}/contact-methods.get.parameters.length": 3,
	"paths./api-public/v1/user/{user}/contact-methods.get.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/user/{user}/contact-methods.get.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/user/{user}/contact-methods.get.parameters[2].description": "The VictorOps user ID",
	"paths./api-public/v1/user/{user}/contact-methods.get.parameters[2].in": "path",
	"paths./api-public/v1/user/{user}/contact-methods.get.parameters[2].name": "user",
	"paths./api-public/v1/user/{user}/contact-methods.get.parameters[2].required": true,
	"paths./api-public/v1/user/{user}/contact-methods.get.parameters[2].type": "string",
	"paths./api-public/v1/user/{user}/contact-methods.get.responses.200.description": "All available contact methods for the user",
	"paths./api-public/v1/user/{user}/contact-methods.get.responses.200.schema.properties.devices.items.$ref": "#/definitions/ContactDevice",
	"paths./api-public/v1/user/{user}/contact-methods.get.responses.200.schema.properties.devices.type": "array",
	"paths./api-public/v1/user/{user}/contact-methods.get.responses.200.schema.properties.emails.items.$ref": "#/definitions/UserContact",
	"paths./api-public/v1/user/{user}/contact-methods.get.responses.200.schema.properties.emails.type": "array",
	"paths./api-public/v1/user/{user}/contact-methods.get.responses.200.schema.properties.phones.items.$ref": "#/definitions/UserContact",
	"paths./api-public/v1/user/{user}/contact-methods.get.responses.200.schema.properties.phones.type": "array",
	"paths./api-public/v1/user/{user}/contact-methods.get.responses.200.schema.type": "object",
	"paths./api-public/v1/user/{user}/contact-methods.get.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/user/{user}/contact-methods.get.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/user/{user}/contact-methods.get.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/user/{user}/contact-methods.get.responses.404.$ref": "#/responses/user-not-found",
	"paths./api-public/v1/user/{user}/contact-methods.get.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/user/{user}/contact-methods.get.summary": "Get a list of all contact methods for a user",
	"paths./api-public/v1/user/{user}/contact-methods.get.tags.length": 1,
	"paths./api-public/v1/user/{user}/contact-methods.get.tags[0]": "User Contact Methods",
	"paths./api-public/v1/user/{user}/contact-methods/devices.get.description": "Get the contact methods for a user\n\nThis API may be called a maximum of 15 times per minute.\n",
	"paths./api-public/v1/user/{user}/contact-methods/devices.get.parameters.length": 3,
	"paths./api-public/v1/user/{user}/contact-methods/devices.get.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/user/{user}/contact-methods/devices.get.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/user/{user}/contact-methods/devices.get.parameters[2].description": "The VictorOps user ID",
	"paths./api-public/v1/user/{user}/contact-methods/devices.get.parameters[2].in": "path",
	"paths./api-public/v1/user/{user}/contact-methods/devices.get.parameters[2].name": "user",
	"paths./api-public/v1/user/{user}/contact-methods/devices.get.parameters[2].required": true,
	"paths./api-public/v1/user/{user}/contact-methods/devices.get.parameters[2].type": "string",
	"paths./api-public/v1/user/{user}/contact-methods/devices.get.responses.200.description": "The list of contact devices for the user",
	"paths./api-public/v1/user/{user}/contact-methods/devices.get.responses.200.schema.items.$ref": "#/definitions/ContactDevice",
	"paths./api-public/v1/user/{user}/contact-methods/devices.get.responses.200.schema.type": "array",
	"paths./api-public/v1/user/{user}/contact-methods/devices.get.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/user/{user}/contact-methods/devices.get.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/user/{user}/contact-methods/devices.get.responses.404.$ref": "#/responses/user-not-found",
	"paths./api-public/v1/user/{user}/contact-methods/devices.get.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/user/{user}/contact-methods/devices.get.summary": "Get a list of all contact devices for a user",
	"paths./api-public/v1/user/{user}/contact-methods/devices.get.tags.length": 1,
	"paths./api-public/v1/user/{user}/contact-methods/devices.get.tags[0]": "User Contact Methods",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.delete.description": "Delete a contact device for a user\n\nThis API may be called a maximum of 15 times per minute.\n",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.delete.parameters.length": 4,
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.delete.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.delete.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.delete.parameters[2].description": "The VictorOps user ID",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.delete.parameters[2].in": "path",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.delete.parameters[2].name": "user",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.delete.parameters[2].required": true,
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.delete.parameters[2].type": "string",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.delete.parameters[3].description": "The unique contact identifier",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.delete.parameters[3].in": "path",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.delete.parameters[3].name": "contactId",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.delete.parameters[3].required": true,
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.delete.parameters[3].type": "string",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.delete.responses.200.description": "Deleted contact device for the user",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.delete.responses.200.schema.$ref": "#/definitions/ContactDevice",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.delete.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.delete.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.delete.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.delete.responses.404.$ref": "#/responses/user-not-found",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.delete.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.delete.summary": "Delete a contact device for a user",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.delete.tags.length": 1,
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.delete.tags[0]": "User Contact Methods",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.get.description": "Get the indicated contact device for a user\n\nThis API may be called a maximum of 15 times per minute.\n",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.get.parameters.length": 4,
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.get.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.get.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.get.parameters[2].description": "The VictorOps user ID",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.get.parameters[2].in": "path",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.get.parameters[2].name": "user",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.get.parameters[2].required": true,
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.get.parameters[2].type": "string",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.get.parameters[3].description": "The unique contact identifier",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.get.parameters[3].in": "path",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.get.parameters[3].name": "contactId",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.get.parameters[3].required": true,
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.get.parameters[3].type": "string",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.get.responses.200.description": "The list of contact devices for the user",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.get.responses.200.schema.items.$ref": "#/definitions/ContactDevice",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.get.responses.200.schema.type": "array",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.get.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.get.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.get.responses.404.$ref": "#/responses/user-not-found",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.get.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.get.summary": "Get the indicated contact device for a user",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.get.tags.length": 1,
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.get.tags[0]": "User Contact Methods",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.put.description": "Update a contact device for a user\n\nThis API may be called a maximum of 15 times per minute.\n",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.put.parameters.length": 5,
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.put.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.put.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.put.parameters[2].description": "The VictorOps user ID",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.put.parameters[2].in": "path",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.put.parameters[2].name": "user",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.put.parameters[2].required": true,
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.put.parameters[2].type": "string",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.put.parameters[3].description": "The unique contact identifier",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.put.parameters[3].in": "path",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.put.parameters[3].name": "contactId",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.put.parameters[3].required": true,
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.put.parameters[3].type": "string",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.put.parameters[4].$ref": "#/parameters/contactDeviceAdd",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.put.responses.200.description": "The list of contact devices for the user",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.put.responses.200.schema.$ref": "#/definitions/ContactDevice",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.put.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.put.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.put.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.put.responses.404.$ref": "#/responses/user-not-found",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.put.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.put.summary": "Update a contact device for a user",
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.put.tags.length": 1,
	"paths./api-public/v1/user/{user}/contact-methods/devices/{contactId}.put.tags[0]": "User Contact Methods",
	"paths./api-public/v1/user/{user}/contact-methods/emails.get.description": "Get the contact emails for a user\n\nThis API may be called a maximum of 15 times per minute.\n",
	"paths./api-public/v1/user/{user}/contact-methods/emails.get.parameters.length": 3,
	"paths./api-public/v1/user/{user}/contact-methods/emails.get.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/user/{user}/contact-methods/emails.get.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/user/{user}/contact-methods/emails.get.parameters[2].description": "The VictorOps user ID",
	"paths./api-public/v1/user/{user}/contact-methods/emails.get.parameters[2].in": "path",
	"paths./api-public/v1/user/{user}/contact-methods/emails.get.parameters[2].name": "user",
	"paths./api-public/v1/user/{user}/contact-methods/emails.get.parameters[2].required": true,
	"paths./api-public/v1/user/{user}/contact-methods/emails.get.parameters[2].type": "string",
	"paths./api-public/v1/user/{user}/contact-methods/emails.get.responses.200.description": "The list of contact emails for the user",
	"paths./api-public/v1/user/{user}/contact-methods/emails.get.responses.200.schema.items.$ref": "#/definitions/UserContact",
	"paths./api-public/v1/user/{user}/contact-methods/emails.get.responses.200.schema.type": "array",
	"paths./api-public/v1/user/{user}/contact-methods/emails.get.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/user/{user}/contact-methods/emails.get.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/user/{user}/contact-methods/emails.get.responses.404.$ref": "#/responses/user-not-found",
	"paths./api-public/v1/user/{user}/contact-methods/emails.get.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/user/{user}/contact-methods/emails.get.summary": "Get a list of all contact emails for a user",
	"paths./api-public/v1/user/{user}/contact-methods/emails.get.tags.length": 1,
	"paths./api-public/v1/user/{user}/contact-methods/emails.get.tags[0]": "User Contact Methods",
	"paths./api-public/v1/user/{user}/contact-methods/emails.post.description": "Create a contact email for a user\n\nThis API may be called a maximum of 15 times per minute.\n",
	"paths./api-public/v1/user/{user}/contact-methods/emails.post.parameters.length": 4,
	"paths./api-public/v1/user/{user}/contact-methods/emails.post.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/user/{user}/contact-methods/emails.post.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/user/{user}/contact-methods/emails.post.parameters[2].description": "The VictorOps user ID",
	"paths./api-public/v1/user/{user}/contact-methods/emails.post.parameters[2].in": "path",
	"paths./api-public/v1/user/{user}/contact-methods/emails.post.parameters[2].name": "user",
	"paths./api-public/v1/user/{user}/contact-methods/emails.post.parameters[2].required": true,
	"paths./api-public/v1/user/{user}/contact-methods/emails.post.parameters[2].type": "string",
	"paths./api-public/v1/user/{user}/contact-methods/emails.post.parameters[3].$ref": "#/parameters/contactEmailAdd",
	"paths./api-public/v1/user/{user}/contact-methods/emails.post.responses.200.description": "The list of contact emails for the user",
	"paths./api-public/v1/user/{user}/contact-methods/emails.post.responses.200.schema.$ref": "#/definitions/UserContact",
	"paths./api-public/v1/user/{user}/contact-methods/emails.post.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/user/{user}/contact-methods/emails.post.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/user/{user}/contact-methods/emails.post.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/user/{user}/contact-methods/emails.post.responses.404.$ref": "#/responses/user-not-found",
	"paths./api-public/v1/user/{user}/contact-methods/emails.post.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/user/{user}/contact-methods/emails.post.summary": "Create a contact emails for a user",
	"paths./api-public/v1/user/{user}/contact-methods/emails.post.tags.length": 1,
	"paths./api-public/v1/user/{user}/contact-methods/emails.post.tags[0]": "User Contact Methods",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.delete.description": "Delete the indicated contact email for the user\n\nThis API may be called a maximum of 15 times per minute.\n",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.delete.parameters.length": 4,
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.delete.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.delete.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.delete.parameters[2].description": "The VictorOps user ID",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.delete.parameters[2].in": "path",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.delete.parameters[2].name": "user",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.delete.parameters[2].required": true,
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.delete.parameters[2].type": "string",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.delete.parameters[3].description": "The unique contact identifier",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.delete.parameters[3].in": "path",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.delete.parameters[3].name": "contactId",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.delete.parameters[3].required": true,
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.delete.parameters[3].type": "string",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.delete.responses.200.description": "Deleted contact email for the user",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.delete.responses.200.schema.$ref": "#/definitions/UserContact",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.delete.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.delete.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.delete.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.delete.responses.404.$ref": "#/responses/user-not-found",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.delete.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.delete.summary": "Delete a contact email for a user",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.delete.tags.length": 1,
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.delete.tags[0]": "User Contact Methods",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.get.description": "Get the indicated contact email for a user\n\nThis API may be called a maximum of 15 times per minute.\n",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.get.parameters.length": 4,
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.get.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.get.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.get.parameters[2].description": "The VictorOps user ID",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.get.parameters[2].in": "path",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.get.parameters[2].name": "user",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.get.parameters[2].required": true,
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.get.parameters[2].type": "string",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.get.parameters[3].description": "The unique contact identifier",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.get.parameters[3].in": "path",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.get.parameters[3].name": "contactId",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.get.parameters[3].required": true,
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.get.parameters[3].type": "string",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.get.responses.200.description": "The indicated contact email for the user",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.get.responses.200.schema.items.$ref": "#/definitions/UserContact",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.get.responses.200.schema.type": "array",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.get.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.get.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.get.responses.404.$ref": "#/responses/user-not-found",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.get.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.get.summary": "Get the indicate contact email for a user",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.get.tags.length": 1,
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.get.tags[0]": "User Contact Methods",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.put.description": "Update the indicated contact email for a user\n\nThis API may be called a maximum of 15 times per minute.\n",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.put.parameters.length": 5,
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.put.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.put.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.put.parameters[2].description": "The VictorOps user ID",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.put.parameters[2].in": "path",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.put.parameters[2].name": "user",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.put.parameters[2].required": true,
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.put.parameters[2].type": "string",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.put.parameters[3].description": "The unique contact identifier",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.put.parameters[3].in": "path",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.put.parameters[3].name": "contactId",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.put.parameters[3].required": true,
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.put.parameters[3].type": "string",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.put.parameters[4].$ref": "#/parameters/contactEmailAdd",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.put.responses.200.description": "The updated contact email for the user",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.put.responses.200.schema.$ref": "#/definitions/UserContact",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.put.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.put.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.put.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.put.responses.404.$ref": "#/responses/user-not-found",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.put.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.put.summary": "Update a contact email for a user",
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.put.tags.length": 1,
	"paths./api-public/v1/user/{user}/contact-methods/emails/{contactId}.put.tags[0]": "User Contact Methods",
	"paths./api-public/v1/user/{user}/contact-methods/phones.get.description": "Get the contact phones for a user\n\nThis API may be called a maximum of 15 times per minute.\n",
	"paths./api-public/v1/user/{user}/contact-methods/phones.get.parameters.length": 3,
	"paths./api-public/v1/user/{user}/contact-methods/phones.get.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/user/{user}/contact-methods/phones.get.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/user/{user}/contact-methods/phones.get.parameters[2].description": "The VictorOps user ID",
	"paths./api-public/v1/user/{user}/contact-methods/phones.get.parameters[2].in": "path",
	"paths./api-public/v1/user/{user}/contact-methods/phones.get.parameters[2].name": "user",
	"paths./api-public/v1/user/{user}/contact-methods/phones.get.parameters[2].required": true,
	"paths./api-public/v1/user/{user}/contact-methods/phones.get.parameters[2].type": "string",
	"paths./api-public/v1/user/{user}/contact-methods/phones.get.responses.200.description": "The list of contact phones for the user",
	"paths./api-public/v1/user/{user}/contact-methods/phones.get.responses.200.schema.items.$ref": "#/definitions/UserContact",
	"paths./api-public/v1/user/{user}/contact-methods/phones.get.responses.200.schema.type": "array",
	"paths./api-public/v1/user/{user}/contact-methods/phones.get.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/user/{user}/contact-methods/phones.get.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/user/{user}/contact-methods/phones.get.responses.404.$ref": "#/responses/user-not-found",
	"paths./api-public/v1/user/{user}/contact-methods/phones.get.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/user/{user}/contact-methods/phones.get.summary": "Get a list of all contact phones for a user",
	"paths./api-public/v1/user/{user}/contact-methods/phones.get.tags.length": 1,
	"paths./api-public/v1/user/{user}/contact-methods/phones.get.tags[0]": "User Contact Methods",
	"paths./api-public/v1/user/{user}/contact-methods/phones.post.description": "Create a contact phone for a user\n\nThis API may be called a maximum of 15 times per minute.\n",
	"paths./api-public/v1/user/{user}/contact-methods/phones.post.parameters.length": 4,
	"paths./api-public/v1/user/{user}/contact-methods/phones.post.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/user/{user}/contact-methods/phones.post.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/user/{user}/contact-methods/phones.post.parameters[2].description": "The VictorOps user ID",
	"paths./api-public/v1/user/{user}/contact-methods/phones.post.parameters[2].in": "path",
	"paths./api-public/v1/user/{user}/contact-methods/phones.post.parameters[2].name": "user",
	"paths./api-public/v1/user/{user}/contact-methods/phones.post.parameters[2].required": true,
	"paths./api-public/v1/user/{user}/contact-methods/phones.post.parameters[2].type": "string",
	"paths./api-public/v1/user/{user}/contact-methods/phones.post.parameters[3].$ref": "#/parameters/contactPhoneAdd",
	"paths./api-public/v1/user/{user}/contact-methods/phones.post.responses.200.description": "The list of contact phones for the user",
	"paths./api-public/v1/user/{user}/contact-methods/phones.post.responses.200.schema.$ref": "#/definitions/UserContact",
	"paths./api-public/v1/user/{user}/contact-methods/phones.post.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/user/{user}/contact-methods/phones.post.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/user/{user}/contact-methods/phones.post.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/user/{user}/contact-methods/phones.post.responses.404.$ref": "#/responses/user-not-found",
	"paths./api-public/v1/user/{user}/contact-methods/phones.post.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/user/{user}/contact-methods/phones.post.summary": "Create a contact phones for a user",
	"paths./api-public/v1/user/{user}/contact-methods/phones.post.tags.length": 1,
	"paths./api-public/v1/user/{user}/contact-methods/phones.post.tags[0]": "User Contact Methods",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.delete.description": "Delete the indicated contact phone for the user\n\nThis API may be called a maximum of 15 times per minute.\n",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.delete.parameters.length": 4,
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.delete.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.delete.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.delete.parameters[2].description": "The VictorOps user ID",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.delete.parameters[2].in": "path",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.delete.parameters[2].name": "user",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.delete.parameters[2].required": true,
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.delete.parameters[2].type": "string",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.delete.parameters[3].description": "The unique contact identifier",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.delete.parameters[3].in": "path",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.delete.parameters[3].name": "contactId",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.delete.parameters[3].required": true,
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.delete.parameters[3].type": "string",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.delete.responses.200.description": "Deleted contact phone for the user",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.delete.responses.200.schema.$ref": "#/definitions/UserContact",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.delete.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.delete.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.delete.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.delete.responses.404.$ref": "#/responses/user-not-found",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.delete.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.delete.summary": "Delete a contact phone for a user",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.delete.tags.length": 1,
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.delete.tags[0]": "User Contact Methods",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.get.description": "Get the indicated contact phone for a user\n\nThis API may be called a maximum of 15 times per minute.\n",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.get.parameters.length": 4,
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.get.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.get.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.get.parameters[2].description": "The VictorOps user ID",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.get.parameters[2].in": "path",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.get.parameters[2].name": "user",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.get.parameters[2].required": true,
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.get.parameters[2].type": "string",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.get.parameters[3].description": "The unique contact identifier",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.get.parameters[3].in": "path",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.get.parameters[3].name": "contactId",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.get.parameters[3].required": true,
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.get.parameters[3].type": "string",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.get.responses.200.description": "The indicated contact phone for the user",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.get.responses.200.schema.items.$ref": "#/definitions/UserContact",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.get.responses.200.schema.type": "array",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.get.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.get.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.get.responses.404.$ref": "#/responses/user-not-found",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.get.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.get.summary": "Get the indicate contact phone for a user",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.get.tags.length": 1,
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.get.tags[0]": "User Contact Methods",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.put.description": "Update the indicated contact phone for a user\n\nThis API may be called a maximum of 15 times per minute.\n",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.put.parameters.length": 5,
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.put.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.put.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.put.parameters[2].description": "The VictorOps user ID",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.put.parameters[2].in": "path",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.put.parameters[2].name": "user",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.put.parameters[2].required": true,
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.put.parameters[2].type": "string",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.put.parameters[3].description": "The unique contact identifier",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.put.parameters[3].in": "path",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.put.parameters[3].name": "contactId",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.put.parameters[3].required": true,
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.put.parameters[3].type": "string",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.put.parameters[4].$ref": "#/parameters/contactPhoneAdd",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.put.responses.200.description": "The updated contact phone for the user",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.put.responses.200.schema.$ref": "#/definitions/UserContact",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.put.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.put.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.put.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.put.responses.404.$ref": "#/responses/user-not-found",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.put.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.put.summary": "Update a contact phone for a user",
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.put.tags.length": 1,
	"paths./api-public/v1/user/{user}/contact-methods/phones/{contactId}.put.tags[0]": "User Contact Methods",
	"paths./api-public/v1/user/{user}/oncall/schedule.get.description": "Get the on-call schedule for a user for all teams, including on-call overrides.\n\nThis API may be called a maximum of 15 times per minute.\n",
	"paths./api-public/v1/user/{user}/oncall/schedule.get.parameters.length": 6,
	"paths./api-public/v1/user/{user}/oncall/schedule.get.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/user/{user}/oncall/schedule.get.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/user/{user}/oncall/schedule.get.parameters[2].description": "The VictorOps user ID",
	"paths./api-public/v1/user/{user}/oncall/schedule.get.parameters[2].in": "path",
	"paths./api-public/v1/user/{user}/oncall/schedule.get.parameters[2].name": "user",
	"paths./api-public/v1/user/{user}/oncall/schedule.get.parameters[2].required": true,
	"paths./api-public/v1/user/{user}/oncall/schedule.get.parameters[2].type": "string",
	"paths./api-public/v1/user/{user}/oncall/schedule.get.parameters[3].$ref": "#/parameters/daysFwd",
	"paths./api-public/v1/user/{user}/oncall/schedule.get.parameters[4].$ref": "#/parameters/daysSkip",
	"paths./api-public/v1/user/{user}/oncall/schedule.get.parameters[5].$ref": "#/parameters/step",
	"paths./api-public/v1/user/{user}/oncall/schedule.get.responses.200.description": "The on-call schedule for the user",
	"paths./api-public/v1/user/{user}/oncall/schedule.get.responses.200.schema.items.$ref": "#/definitions/OnCallAndOverrides",
	"paths./api-public/v1/user/{user}/oncall/schedule.get.responses.200.schema.type": "array",
	"paths./api-public/v1/user/{user}/oncall/schedule.get.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/user/{user}/oncall/schedule.get.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/user/{user}/oncall/schedule.get.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/user/{user}/oncall/schedule.get.responses.404.$ref": "#/responses/user-not-found",
	"paths./api-public/v1/user/{user}/oncall/schedule.get.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/user/{user}/oncall/schedule.get.summary": "Get a user's on-call schedule",
	"paths./api-public/v1/user/{user}/oncall/schedule.get.tags.length": 1,
	"paths./api-public/v1/user/{user}/oncall/schedule.get.tags[0]": "On-call",
	"paths./api-public/v1/user/{user}/policies.get.description": "Get paging policies for a user\n\nThis API may be called a maximum of 15 times per minute.\n",
	"paths./api-public/v1/user/{user}/policies.get.parameters.length": 3,
	"paths./api-public/v1/user/{user}/policies.get.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-public/v1/user/{user}/policies.get.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-public/v1/user/{user}/policies.get.parameters[2].description": "The VictorOps user ID",
	"paths./api-public/v1/user/{user}/policies.get.parameters[2].in": "path",
	"paths./api-public/v1/user/{user}/policies.get.parameters[2].name": "user",
	"paths./api-public/v1/user/{user}/policies.get.parameters[2].required": true,
	"paths./api-public/v1/user/{user}/policies.get.parameters[2].type": "string",
	"paths./api-public/v1/user/{user}/policies.get.responses.200.description": "All configured paging policies for a user",
	"paths./api-public/v1/user/{user}/policies.get.responses.200.schema.$ref": "#/definitions/Policies",
	"paths./api-public/v1/user/{user}/policies.get.responses.400.$ref": "#/responses/400",
	"paths./api-public/v1/user/{user}/policies.get.responses.401.$ref": "#/responses/401",
	"paths./api-public/v1/user/{user}/policies.get.responses.403.$ref": "#/responses/403",
	"paths./api-public/v1/user/{user}/policies.get.responses.404.$ref": "#/responses/user-not-found",
	"paths./api-public/v1/user/{user}/policies.get.responses.500.$ref": "#/responses/500",
	"paths./api-public/v1/user/{user}/policies.get.summary": "Get a list of paging policies for a user",
	"paths./api-public/v1/user/{user}/policies.get.tags.length": 1,
	"paths./api-public/v1/user/{user}/policies.get.tags[0]": "User Paging Policies",
	"paths./api-reporting/v1/incidents.get.description": "Retrieve incident history for your company, searching over date ranges and with filtering options.  This is historical\ndata, and may be up to 15 minutes behind real-time incident data.  By default, only resolved incidents will be returned.\n\nThis API may be called a maximum of once a minute.\n\nIncident requests are paginated with a offset and limit query string parameters.\n  The query for incidents is run and offset records are skipped, after which limit records will be returned.\n\nThe default offset is 0 and the default limit is 20. The maximum value allowed for limit is 100.\n\nOn return, the total number of records available for that query will be returned in the payload as 'total'.\n",
	"paths./api-reporting/v1/incidents.get.parameters.length": 11,
	"paths./api-reporting/v1/incidents.get.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-reporting/v1/incidents.get.parameters[10].description": "The current phase of the incident \"resolved\", \"triggered\" or \"acknowledged\". Multiple values can be separated with commas.",
	"paths./api-reporting/v1/incidents.get.parameters[10].in": "query",
	"paths./api-reporting/v1/incidents.get.parameters[10].name": "currentPhase",
	"paths./api-reporting/v1/incidents.get.parameters[10].required": false,
	"paths./api-reporting/v1/incidents.get.parameters[10].type": "string",
	"paths./api-reporting/v1/incidents.get.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-reporting/v1/incidents.get.parameters[2].$ref": "#/parameters/offset",
	"paths./api-reporting/v1/incidents.get.parameters[3].$ref": "#/parameters/limit",
	"paths./api-reporting/v1/incidents.get.parameters[4].description": "The entity ID involved  This is the unique identifier for the entity causing the incident.",
	"paths./api-reporting/v1/incidents.get.parameters[4].in": "query",
	"paths./api-reporting/v1/incidents.get.parameters[4].name": "entityId",
	"paths./api-reporting/v1/incidents.get.parameters[4].required": false,
	"paths./api-reporting/v1/incidents.get.parameters[4].type": "string",
	"paths./api-reporting/v1/incidents.get.parameters[5].description": "The incident number as shown in VictorOps Multiple values and ranges are allowed: 4,5,20:50\n",
	"paths./api-reporting/v1/incidents.get.parameters[5].in": "query",
	"paths./api-reporting/v1/incidents.get.parameters[5].name": "incidentNumber",
	"paths./api-reporting/v1/incidents.get.parameters[5].required": false,
	"paths./api-reporting/v1/incidents.get.parameters[5].type": "string",
	"paths./api-reporting/v1/incidents.get.parameters[6].description": "Return incidents started after this timestamp Specify the timestamp in ISO8601 format",
	"paths./api-reporting/v1/incidents.get.parameters[6].in": "query",
	"paths./api-reporting/v1/incidents.get.parameters[6].name": "startedAfter",
	"paths./api-reporting/v1/incidents.get.parameters[6].required": false,
	"paths./api-reporting/v1/incidents.get.parameters[6].type": "string",
	"paths./api-reporting/v1/incidents.get.parameters[7].description": "Find incidents started before this timestamp  Specify the timestamp in ISO8601 format",
	"paths./api-reporting/v1/incidents.get.parameters[7].in": "query",
	"paths./api-reporting/v1/incidents.get.parameters[7].name": "startedBefore",
	"paths./api-reporting/v1/incidents.get.parameters[7].required": false,
	"paths./api-reporting/v1/incidents.get.parameters[7].type": "string",
	"paths./api-reporting/v1/incidents.get.parameters[8].description": "The host involved in the incident Multiple values can be separated with commas.",
	"paths./api-reporting/v1/incidents.get.parameters[8].in": "query",
	"paths./api-reporting/v1/incidents.get.parameters[8].name": "host",
	"paths./api-reporting/v1/incidents.get.parameters[8].required": false,
	"paths./api-reporting/v1/incidents.get.parameters[8].type": "string",
	"paths./api-reporting/v1/incidents.get.parameters[9].description": "The service involved in the incident (if any) Multiple values can be separated with commas.",
	"paths./api-reporting/v1/incidents.get.parameters[9].in": "query",
	"paths./api-reporting/v1/incidents.get.parameters[9].name": "service",
	"paths./api-reporting/v1/incidents.get.parameters[9].required": false,
	"paths./api-reporting/v1/incidents.get.parameters[9].type": "string",
	"paths./api-reporting/v1/incidents.get.responses.200.description": "The list of incidents matching the request filters",
	"paths./api-reporting/v1/incidents.get.responses.200.schema.items.$ref": "#/definitions/IncidentList",
	"paths./api-reporting/v1/incidents.get.responses.200.schema.type": "array",
	"paths./api-reporting/v1/incidents.get.responses.400.$ref": "#/responses/400",
	"paths./api-reporting/v1/incidents.get.responses.401.$ref": "#/responses/401",
	"paths./api-reporting/v1/incidents.get.responses.403.$ref": "#/responses/403",
	"paths./api-reporting/v1/incidents.get.responses.404.$ref": "#/responses/404",
	"paths./api-reporting/v1/incidents.get.responses.500.$ref": "#/responses/500",
	"paths./api-reporting/v1/incidents.get.summary": "Get/search incident history",
	"paths./api-reporting/v1/incidents.get.tags.length": 1,
	"paths./api-reporting/v1/incidents.get.tags[0]": "Reporting",
	"paths./api-reporting/v1/team/{team}/oncall/log.get.description": "Returns a log of user shift changes for the specified team. This is historical\ndata, and may be up to 15 minutes behind real-time log data.\n\nThis API may be called a maximum of 6 times per minute.\n",
	"paths./api-reporting/v1/team/{team}/oncall/log.get.parameters.length": 6,
	"paths./api-reporting/v1/team/{team}/oncall/log.get.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-reporting/v1/team/{team}/oncall/log.get.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-reporting/v1/team/{team}/oncall/log.get.parameters[2].description": "The VictorOps team 'slug'",
	"paths./api-reporting/v1/team/{team}/oncall/log.get.parameters[2].in": "path",
	"paths./api-reporting/v1/team/{team}/oncall/log.get.parameters[2].name": "team",
	"paths./api-reporting/v1/team/{team}/oncall/log.get.parameters[2].required": true,
	"paths./api-reporting/v1/team/{team}/oncall/log.get.parameters[2].type": "string",
	"paths./api-reporting/v1/team/{team}/oncall/log.get.parameters[3].description": "Return shift changes occurring after this timestamp. The default is the start of the day at midnight. Specify the timestamp in ISO8601 format",
	"paths./api-reporting/v1/team/{team}/oncall/log.get.parameters[3].format": "date-time",
	"paths./api-reporting/v1/team/{team}/oncall/log.get.parameters[3].in": "query",
	"paths./api-reporting/v1/team/{team}/oncall/log.get.parameters[3].name": "start",
	"paths./api-reporting/v1/team/{team}/oncall/log.get.parameters[3].required": false,
	"paths./api-reporting/v1/team/{team}/oncall/log.get.parameters[3].type": "string",
	"paths./api-reporting/v1/team/{team}/oncall/log.get.parameters[4].description": "Return shift changes occurring before this timestamp. The default is the end of the day at 11:59:59. Specify the timestamp in ISO8601 format",
	"paths./api-reporting/v1/team/{team}/oncall/log.get.parameters[4].format": "date-time",
	"paths./api-reporting/v1/team/{team}/oncall/log.get.parameters[4].in": "query",
	"paths./api-reporting/v1/team/{team}/oncall/log.get.parameters[4].name": "end",
	"paths./api-reporting/v1/team/{team}/oncall/log.get.parameters[4].required": false,
	"paths./api-reporting/v1/team/{team}/oncall/log.get.parameters[4].type": "string",
	"paths./api-reporting/v1/team/{team}/oncall/log.get.parameters[5].description": "The VictorOps user ID. Return shift changes occurring during the interval specified for this user. Without this parameter, all relevant users (with respect to the specified interval) are returned",
	"paths./api-reporting/v1/team/{team}/oncall/log.get.parameters[5].in": "query",
	"paths./api-reporting/v1/team/{team}/oncall/log.get.parameters[5].name": "userName",
	"paths./api-reporting/v1/team/{team}/oncall/log.get.parameters[5].required": false,
	"paths./api-reporting/v1/team/{team}/oncall/log.get.parameters[5].type": "string",
	"paths./api-reporting/v1/team/{team}/oncall/log.get.responses.200.description": "The result of the take request",
	"paths./api-reporting/v1/team/{team}/oncall/log.get.responses.200.schema.$ref": "#/definitions/OnCallLog",
	"paths./api-reporting/v1/team/{team}/oncall/log.get.responses.400.$ref": "#/responses/400",
	"paths./api-reporting/v1/team/{team}/oncall/log.get.responses.401.$ref": "#/responses/401",
	"paths./api-reporting/v1/team/{team}/oncall/log.get.responses.403.$ref": "#/responses/403",
	"paths./api-reporting/v1/team/{team}/oncall/log.get.responses.404.description": "Team or user(s) not found",
	"paths./api-reporting/v1/team/{team}/oncall/log.get.responses.500.$ref": "#/responses/500",
	"paths./api-reporting/v1/team/{team}/oncall/log.get.summary": "A list of shift changes for a team",
	"paths./api-reporting/v1/team/{team}/oncall/log.get.tags.length": 1,
	"paths./api-reporting/v1/team/{team}/oncall/log.get.tags[0]": "Reporting",
	"paths./api-reporting/v2/incidents.get.description": "Retrieve incident history for your company, searching over date ranges and with filtering options.\n\nThis API may be called a maximum of once a minute.\n\nIncident requests are paginated with a offset and limit query string parameters.\n  The query for incidents is run and offset records are skipped, after which limit records will be returned.\n\nThe default offset is 0 and the default limit is 20. The maximum value allowed for limit is 100.\n\nUnless specified otherwise with the parameter currentPhase, the response will only contain resolved incidents.\n\nOn return, the total number of records available for that query will be returned in the payload as 'total'.\n",
	"paths./api-reporting/v2/incidents.get.parameters.length": 12,
	"paths./api-reporting/v2/incidents.get.parameters[0].$ref": "#/parameters/apiId",
	"paths./api-reporting/v2/incidents.get.parameters[10].description": "The current phase of the incident \"resolved\", \"triggered\" or \"acknowledged\". Multiple values can be separated with commas. By default, response contains only \"resolved\" incidents",
	"paths./api-reporting/v2/incidents.get.parameters[10].in": "query",
	"paths./api-reporting/v2/incidents.get.parameters[10].name": "currentPhase",
	"paths./api-reporting/v2/incidents.get.parameters[10].required": false,
	"paths./api-reporting/v2/incidents.get.parameters[10].type": "string",
	"paths./api-reporting/v2/incidents.get.parameters[11].description": "The original routing of the incident",
	"paths./api-reporting/v2/incidents.get.parameters[11].in": "query",
	"paths./api-reporting/v2/incidents.get.parameters[11].name": "routingKey",
	"paths./api-reporting/v2/incidents.get.parameters[11].required": false,
	"paths./api-reporting/v2/incidents.get.parameters[11].type": "string",
	"paths./api-reporting/v2/incidents.get.parameters[1].$ref": "#/parameters/apiKey",
	"paths./api-reporting/v2/incidents.get.parameters[2].$ref": "#/parameters/offset",
	"paths./api-reporting/v2/incidents.get.parameters[3].$ref": "#/parameters/limit",
	"paths./api-reporting/v2/incidents.get.parameters[4].description": "The entity ID involved  This is the unique identifier for the entity causing the incident.",
	"paths./api-reporting/v2/incidents.get.parameters[4].in": "query",
	"paths./api-reporting/v2/incidents.get.parameters[4].name": "entityId",
	"paths./api-reporting/v2/incidents.get.parameters[4].required": false,
	"paths./api-reporting/v2/incidents.get.parameters[4].type": "string",
	"paths./api-reporting/v2/incidents.get.parameters[5].description": "The incident number as shown in VictorOps Multiple values and ranges are allowed: 4,5,20:50\n",
	"paths./api-reporting/v2/incidents.get.parameters[5].in": "query",
	"paths./api-reporting/v2/incidents.get.parameters[5].name": "incidentNumber",
	"paths./api-reporting/v2/incidents.get.parameters[5].required": false,
	"paths./api-reporting/v2/incidents.get.parameters[5].type": "string",
	"paths./api-reporting/v2/incidents.get.parameters[6].description": "Return incidents started after this timestamp Specify the timestamp in ISO8601 format",
	"paths./api-reporting/v2/incidents.get.parameters[6].in": "query",
	"paths./api-reporting/v2/incidents.get.parameters[6].name": "startedAfter",
	"paths./api-reporting/v2/incidents.get.parameters[6].required": false,
	"paths./api-reporting/v2/incidents.get.parameters[6].type": "string",
	"paths./api-reporting/v2/incidents.get.parameters[7].description": "Find incidents started before this timestamp  Specify the timestamp in ISO8601 format",
	"paths./api-reporting/v2/incidents.get.parameters[7].in": "query",
	"paths./api-reporting/v2/incidents.get.parameters[7].name": "startedBefore",
	"paths./api-reporting/v2/incidents.get.parameters[7].required": false,
	"paths./api-reporting/v2/incidents.get.parameters[7].type": "string",
	"paths./api-reporting/v2/incidents.get.parameters[8].description": "The host involved in the incident Multiple values can be separated with commas.",
	"paths./api-reporting/v2/incidents.get.parameters[8].in": "query",
	"paths./api-reporting/v2/incidents.get.parameters[8].name": "host",
	"paths./api-reporting/v2/incidents.get.parameters[8].required": false,
	"paths./api-reporting/v2/incidents.get.parameters[8].type": "string",
	"paths./api-reporting/v2/incidents.get.parameters[9].description": "The service involved in the incident (if any) Multiple values can be separated with commas.",
	"paths./api-reporting/v2/incidents.get.parameters[9].in": "query",
	"paths./api-reporting/v2/incidents.get.parameters[9].name": "service",
	"paths./api-reporting/v2/incidents.get.parameters[9].required": false,
	"paths./api-reporting/v2/incidents.get.parameters[9].type": "string",
	"paths./api-reporting/v2/incidents.get.responses.200.description": "The list of incidents matching the request filters",
	"paths./api-reporting/v2/incidents.get.responses.200.schema.$ref": "#/definitions/ActiveIncidentList",
	"paths./api-reporting/v2/incidents.get.responses.400.$ref": "#/responses/400",
	"paths./api-reporting/v2/incidents.get.responses.401.$ref": "#/responses/401",
	"paths./api-reporting/v2/incidents.get.responses.403.$ref": "#/responses/403",
	"paths./api-reporting/v2/incidents.get.responses.404.$ref": "#/responses/404",
	"paths./api-reporting/v2/incidents.get.responses.500.$ref": "#/responses/500",
	"paths./api-reporting/v2/incidents.get.summary": "Get/search incident history",
	"paths./api-reporting/v2/incidents.get.tags.length": 1,
	"paths./api-reporting/v2/incidents.get.tags[0]": "Reporting",
	"produces.length": 1,
	"produces[0]": "application/json",
	"responses.400.description": "Problem with the request arguments.  The response payload may include an error message.",
	"responses.401.description": "Authentication parameters missing",
	"responses.403.description": "Authentication failed or rate-limit reached",
	"responses.404.description": "Path not found",
	"responses.500.description": "Internal Server Error",
	"responses.team-not-found.description": "Team not found",
	"responses.user-not-found.description": "User not found",
	"schemes.length": 1,
	"schemes[0]": "https",
	"swagger": "2.0",
	"tags.length": 5,
	"tags[0].name": "On-call",
	"tags[1].name": "Incidents",
	"tags[2].name": "Alerts",
	"tags[3].name": "Reporting",
	"tags[4].name": "Users"
}