{
	"basePath": "/freeplan/v1",
	"consumes.length": 1,
	"consumes[0]": "application/json",
	"definitions.Board.properties.boardId.description": "",
	"definitions.Board.properties.boardId.type": "string",
	"definitions.Board.properties.dateTime.description": "",
	"definitions.Board.properties.dateTime.type": "string",
	"definitions.Board.properties.detailsId.description": "",
	"definitions.Board.properties.detailsId.type": "string",
	"definitions.Board.properties.name.description": "Name of train",
	"definitions.Board.properties.name.type": "string",
	"definitions.Board.properties.origin.description": "",
	"definitions.Board.properties.origin.type": "string",
	"definitions.Board.properties.stopId.description": "",
	"definitions.Board.properties.stopId.type": "string",
	"definitions.Board.properties.stopName.description": "",
	"definitions.Board.properties.stopName.type": "string",
	"definitions.Board.properties.track.description": "",
	"definitions.Board.properties.track.type": "string",
	"definitions.Board.properties.type.description": "",
	"definitions.Board.properties.type.type": "string",
	"definitions.Board.required.length": 9,
	"definitions.Board.required[0]": "name",
	"definitions.Board.required[1]": "type",
	"definitions.Board.required[2]": "boardId",
	"definitions.Board.required[3]": "stopId",
	"definitions.Board.required[4]": "stopName",
	"definitions.Board.required[5]": "dateTime",
	"definitions.Board.required[6]": "origin",
	"definitions.Board.required[7]": "track",
	"definitions.Board.required[8]": "detailsId",
	"definitions.Board.type": "object",
	"definitions.BoardResponse.properties.boards.items.$ref": "#/definitions/Board",
	"definitions.BoardResponse.properties.boards.minItems": 1,
	"definitions.BoardResponse.properties.boards.type": "array",
	"definitions.BoardResponse.properties.boards.uniqueItems": true,
	"definitions.BoardResponse.required.length": 1,
	"definitions.BoardResponse.required[0]": "boards",
	"definitions.BoardResponse.type": "object",
	"definitions.ErrorModel.properties.code.type": "integer",
	"definitions.ErrorModel.properties.internal_code.type": "integer",
	"definitions.ErrorModel.properties.internal_message.type": "string",
	"definitions.ErrorModel.properties.message.type": "string",
	"definitions.ErrorModel.required.length": 2,
	"definitions.ErrorModel.required[0]": "code",
	"definitions.ErrorModel.required[1]": "message",
	"definitions.ErrorModel.type": "object",
	"definitions.JourneyResponse.properties.train_locs.items.$ref": "#/definitions/TrainLocation",
	"definitions.JourneyResponse.properties.train_locs.minItems": 1,
	"definitions.JourneyResponse.properties.train_locs.type": "array",
	"definitions.JourneyResponse.properties.train_locs.uniqueItems": true,
	"definitions.JourneyResponse.required.length": 1,
	"definitions.JourneyResponse.required[0]": "train_locs",
	"definitions.JourneyResponse.type": "object",
	"definitions.Location.properties.id.description": "id of location (eva-number), example: 8000105",
	"definitions.Location.properties.id.type": "string",
	"definitions.Location.properties.lat.description": "latitude, example: 50.107149",
	"definitions.Location.properties.lat.type": "number",
	"definitions.Location.properties.lon.description": "longitude, example: 8.663785",
	"definitions.Location.properties.lon.type": "number",
	"definitions.Location.properties.name.description": "Name of location, example: Frankfurt(Main)Hbf",
	"definitions.Location.properties.name.type": "string",
	"definitions.Location.required.length": 4,
	"definitions.Location.required[0]": "name",
	"definitions.Location.required[1]": "lon",
	"definitions.Location.required[2]": "lat",
	"definitions.Location.required[3]": "id",
	"definitions.Location.type": "object",
	"definitions.LocationResponse.properties.locations.items.$ref": "#/definitions/Location",
	"definitions.LocationResponse.properties.locations.minItems": 1,
	"definitions.LocationResponse.properties.locations.type": "array",
	"definitions.LocationResponse.properties.locations.uniqueItems": true,
	"definitions.LocationResponse.required.length": 1,
	"definitions.LocationResponse.required[0]": "locations",
	"definitions.LocationResponse.type": "object",
	"definitions.TrainLocation.properties.arrTime.description": "",
	"definitions.TrainLocation.properties.arrTime.type": "string",
	"definitions.TrainLocation.properties.depTime.description": "",
	"definitions.TrainLocation.properties.depTime.type": "string",
	"definitions.TrainLocation.properties.lat.description": "",
	"definitions.TrainLocation.properties.lat.type": "number",
	"definitions.TrainLocation.properties.lon.description": "",
	"definitions.TrainLocation.properties.lon.type": "number",
	"definitions.TrainLocation.properties.operator.description": "",
	"definitions.TrainLocation.properties.operator.type": "string",
	"definitions.TrainLocation.properties.stopId.description": "",
	"definitions.TrainLocation.properties.stopId.type": "string",
	"definitions.TrainLocation.properties.stopName.description": "",
	"definitions.TrainLocation.properties.stopName.type": "string",
	"definitions.TrainLocation.properties.train.description": "",
	"definitions.TrainLocation.properties.train.type": "string",
	"definitions.TrainLocation.properties.type.description": "",
	"definitions.TrainLocation.properties.type.type": "string",
	"definitions.TrainLocation.required.length": 9,
	"definitions.TrainLocation.required[0]": "stopId",
	"definitions.TrainLocation.required[1]": "stopName",
	"definitions.TrainLocation.required[2]": "lat",
	"definitions.TrainLocation.required[3]": "lon",
	"definitions.TrainLocation.required[4]": "arrTime",
	"definitions.TrainLocation.required[5]": "depTime",
	"definitions.TrainLocation.required[6]": "train",
	"definitions.TrainLocation.required[7]": "type",
	"definitions.TrainLocation.required[8]": "operator",
	"definitions.TrainLocation.type": "object",
	"host": "api.deutschebahn.com",
	"info.contact.email": "DBOpenData@deutschebahn.com",
	"info.contact.name": "DBOpenData",
	"info.contact.url": "https://developer.deutschebahn.com/store/",
	"info.description": "A RESTful webservice to request a railway journey - FREE plan with restricted access (max. 10 requests per minute). Please ignore the message in the API Console about the access token.\n\nRegister to use an less restricted version, which requires an access token.",
	"info.license.name": "DB Data Portal",
	"info.license.url": "http://data.deutschebahn.com/pages/nutzungsbedingungen",
	"info.termsOfService": "http://data.deutschebahn.com/nutzungsbedingungen.html",
	"info.title": "Fahrplan-Free",
	"info.version": "v1",
	"info.x-apisguru-categories.length": 2,
	"info.x-apisguru-categories[0]": "transport",
	"info.x-apisguru-categories[1]": "open_data",
	"info.x-logo.backgroundColor": "#FFFFFF",
	"info.x-logo.url": "https://api.apis.guru/v2/cache/logo/https_pbs.twimg.com_profile_images_591140150413025280_Cjcqjl2J.png",
	"info.x-origin.length": 1,
	"info.x-origin[0].format": "swagger",
	"info.x-origin[0].url": "https://developer.deutschebahn.com/store/api-docs/DBOpenData/Fahrplan-Free/v1",
	"info.x-origin[0].version": "2.0",
	"info.x-preferred": true,
	"info.x-providerName": "deutschebahn.com",
	"info.x-serviceName": "fahrplan",
	"paths./arrivalBoard/{id}.get.description": "Get arrival board at a given location at a given daten and time.",
	"paths./arrivalBoard/{id}.get.parameters.length": 2,
	"paths./arrivalBoard/{id}.get.parameters[0].description": "Id of location. Use attribute 'id' from the result of 'location'",
	"paths./arrivalBoard/{id}.get.parameters[0].in": "path",
	"paths./arrivalBoard/{id}.get.parameters[0].name": "id",
	"paths./arrivalBoard/{id}.get.parameters[0].required": true,
	"paths./arrivalBoard/{id}.get.parameters[0].type": "string",
	"paths./arrivalBoard/{id}.get.parameters[1].description": "Date and time in ISO-8601 format, yyyy-mm-ddThh:mm:ss, example: 2017-04-01 or 2017-04-01T10:30",
	"paths./arrivalBoard/{id}.get.parameters[1].in": "query",
	"paths./arrivalBoard/{id}.get.parameters[1].name": "date",
	"paths./arrivalBoard/{id}.get.parameters[1].required": true,
	"paths./arrivalBoard/{id}.get.parameters[1].type": "string",
	"paths./arrivalBoard/{id}.get.responses.200.description": "arrival board",
	"paths./arrivalBoard/{id}.get.responses.200.schema.$ref": "#/definitions/BoardResponse",
	"paths./arrivalBoard/{id}.get.responses.400.description": "Invalid date/time specification.",
	"paths./arrivalBoard/{id}.get.responses.400.schema.$ref": "#/definitions/ErrorModel",
	"paths./arrivalBoard/{id}.get.responses.500.description": "Internal Server Error.",
	"paths./arrivalBoard/{id}.get.responses.500.schema.$ref": "#/definitions/ErrorModel",
	"paths./arrivalBoard/{id}.get.responses.503.description": "The service has been disabled temporarily.",
	"paths./arrivalBoard/{id}.get.responses.503.schema.$ref": "#/definitions/ErrorModel",
	"paths./arrivalBoard/{id}.get.summary": "Get arrival board of a location",
	"paths./arrivalBoard/{id}.get.x-auth-type": "None",
	"paths./arrivalBoard/{id}.get.x-throttling-tier": "10_per_minute",
	"paths./departureBoard/{id}.get.description": "Get departure board at a given location at a given daten and time.",
	"paths./departureBoard/{id}.get.parameters.length": 2,
	"paths./departureBoard/{id}.get.parameters[0].description": "Id of a location. Use attribute 'id' from the result of 'location'",
	"paths./departureBoard/{id}.get.parameters[0].in": "path",
	"paths./departureBoard/{id}.get.parameters[0].name": "id",
	"paths./departureBoard/{id}.get.parameters[0].required": true,
	"paths./departureBoard/{id}.get.parameters[0].type": "string",
	"paths./departureBoard/{id}.get.parameters[1].description": "Date and time in ISO-8601 format, yyyy-mm-ddThh:mm:ss, example: 2017-04-01 or 2017-04-01T10:30",
	"paths./departureBoard/{id}.get.parameters[1].in": "query",
	"paths./departureBoard/{id}.get.parameters[1].name": "date",
	"paths./departureBoard/{id}.get.parameters[1].required": true,
	"paths./departureBoard/{id}.get.parameters[1].type": "string",
	"paths./departureBoard/{id}.get.responses.200.description": "departure board",
	"paths./departureBoard/{id}.get.responses.200.schema.$ref": "#/definitions/BoardResponse",
	"paths./departureBoard/{id}.get.responses.400.description": "Invalid date/time specification.",
	"paths./departureBoard/{id}.get.responses.400.schema.$ref": "#/definitions/ErrorModel",
	"paths./departureBoard/{id}.get.responses.500.description": "Internal Server Error.",
	"paths./departureBoard/{id}.get.responses.500.schema.$ref": "#/definitions/ErrorModel",
	"paths./departureBoard/{id}.get.responses.503.description": "The service has been disabled temporarily.",
	"paths./departureBoard/{id}.get.responses.503.schema.$ref": "#/definitions/ErrorModel",
	"paths./departureBoard/{id}.get.summary": "Get departure board of a location",
	"paths./departureBoard/{id}.get.x-auth-type": "None",
	"paths./departureBoard/{id}.get.x-throttling-tier": "10_per_minute",
	"paths./journeyDetails/{id}.get.description": "Retrieve details of a journey. The id of journey should come from an arrival board or a departure board.",
	"paths./journeyDetails/{id}.get.parameters.length": 1,
	"paths./journeyDetails/{id}.get.parameters[0].description": "Id of a journey. Use attribute 'detailsId' from the result of  'arrivalBoard' or 'departureBoard'",
	"paths./journeyDetails/{id}.get.parameters[0].in": "path",
	"paths./journeyDetails/{id}.get.parameters[0].name": "id",
	"paths./journeyDetails/{id}.get.parameters[0].required": true,
	"paths./journeyDetails/{id}.get.parameters[0].type": "string",
	"paths./journeyDetails/{id}.get.responses.200.description": "journey details, locations of a journey",
	"paths./journeyDetails/{id}.get.responses.200.schema.$ref": "#/definitions/JourneyResponse",
	"paths./journeyDetails/{id}.get.responses.500.description": "Internal Server Error.",
	"paths./journeyDetails/{id}.get.responses.500.schema.$ref": "#/definitions/ErrorModel",
	"paths./journeyDetails/{id}.get.responses.503.description": "The service has been disabled temporarily.",
	"paths./journeyDetails/{id}.get.responses.503.schema.$ref": "#/definitions/ErrorModel",
	"paths./journeyDetails/{id}.get.summary": "Get details about a single journey",
	"paths./journeyDetails/{id}.get.x-auth-type": "None",
	"paths./journeyDetails/{id}.get.x-throttling-tier": "10_per_minute",
	"paths./location/{name}.get.description": "Get information about locations matching the given name or name fragment",
	"paths./location/{name}.get.parameters.length": 1,
	"paths./location/{name}.get.parameters[0].description": "Name or name fragment of a location",
	"paths./location/{name}.get.parameters[0].in": "path",
	"paths./location/{name}.get.parameters[0].name": "name",
	"paths./location/{name}.get.parameters[0].required": true,
	"paths./location/{name}.get.parameters[0].type": "string",
	"paths./location/{name}.get.responses.200.description": "location information",
	"paths./location/{name}.get.responses.200.schema.$ref": "#/definitions/LocationResponse",
	"paths./location/{name}.get.responses.500.description": "Internal Server Error.",
	"paths./location/{name}.get.responses.500.schema.$ref": "#/definitions/ErrorModel",
	"paths./location/{name}.get.responses.503.description": "The service has been disabled temporarily.",
	"paths./location/{name}.get.responses.503.schema.$ref": "#/definitions/ErrorModel",
	"paths./location/{name}.get.summary": "Get location information",
	"paths./location/{name}.get.x-auth-type": "None",
	"paths./location/{name}.get.x-throttling-tier": "10_per_minute",
	"produces.length": 1,
	"produces[0]": "application/json",
	"schemes.length": 2,
	"schemes[0]": "https",
	"schemes[1]": "http",
	"swagger": "2.0"
}