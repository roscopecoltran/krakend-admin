syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package nbastats;

message GetAllstarballotpredictorRequest {
    string EastPlayer1 = 1;
    string EastPlayer2 = 2;
    string EastPlayer3 = 3;
    string EastPlayer4 = 4;
    string EastPlayer5 = 5;
    string PointCap = 6;
    string WestPlayer1 = 7;
    string WestPlayer2 = 8;
    string WestPlayer3 = 9;
    string WestPlayer4 = 10;
    string WestPlayer5 = 11;
}

message GetBoxscoreRequest {
    string EndPeriod = 1;
    string EndRange = 2;
    string GameID = 3;
    string RangeType = 4;
    string StartPeriod = 5;
    string StartRange = 6;
}

message GetBoxscoreadvancedRequest {
    string EndPeriod = 1;
    string EndRange = 2;
    string GameID = 3;
    string RangeType = 4;
    string StartPeriod = 5;
    string StartRange = 6;
}

message GetBoxscoreadvancedv2Request {
    string EndPeriod = 1;
    string EndRange = 2;
    string GameID = 3;
    string RangeType = 4;
    string StartPeriod = 5;
    string StartRange = 6;
}

message GetBoxscorefourfactorsRequest {
    string EndPeriod = 1;
    string EndRange = 2;
    string GameID = 3;
    string RangeType = 4;
    string StartPeriod = 5;
    string StartRange = 6;
}

message GetBoxscorefourfactorsv2Request {
    string EndPeriod = 1;
    string EndRange = 2;
    string GameID = 3;
    string RangeType = 4;
    string StartPeriod = 5;
    string StartRange = 6;
}

message GetBoxscoremiscRequest {
    string EndPeriod = 1;
    string EndRange = 2;
    string GameID = 3;
    string RangeType = 4;
    string StartPeriod = 5;
    string StartRange = 6;
}

message GetBoxscoremiscv2Request {
    string EndPeriod = 1;
    string EndRange = 2;
    string GameID = 3;
    string RangeType = 4;
    string StartPeriod = 5;
    string StartRange = 6;
}

message GetBoxscoreplayertrackv2Request {
    string GameID = 1;
}

message GetBoxscorescoringRequest {
    string EndPeriod = 1;
    string EndRange = 2;
    string GameID = 3;
    string RangeType = 4;
    string StartPeriod = 5;
    string StartRange = 6;
}

message GetBoxscorescoringv2Request {
    string EndPeriod = 1;
    string EndRange = 2;
    string GameID = 3;
    string RangeType = 4;
    string StartPeriod = 5;
    string StartRange = 6;
}

message GetBoxscoresummaryv2Request {
    string GameID = 1;
}

message GetBoxscoretraditionalv2Request {
    string EndPeriod = 1;
    string EndRange = 2;
    string GameID = 3;
    string RangeType = 4;
    string StartPeriod = 5;
    string StartRange = 6;
}

message GetBoxscoreusageRequest {
    string EndPeriod = 1;
    string EndRange = 2;
    string GameID = 3;
    string RangeType = 4;
    string StartPeriod = 5;
    string StartRange = 6;
}

message GetBoxscoreusagev2Request {
    string EndPeriod = 1;
    string EndRange = 2;
    string GameID = 3;
    string RangeType = 4;
    string StartPeriod = 5;
    string StartRange = 6;
}

message GetCommonTeamYearsRequest {
    string LeagueID = 1;
}

message GetCommonallplayersRequest {
    string IsOnlyCurrentSeason = 1;
    string LeagueID = 2;
    string Season = 3;
}

message GetCommonplayerinfoRequest {
    string PlayerID = 1;
}

message GetCommonplayoffseriesRequest {
    string LeagueID = 1;
    string Season = 2;
}

message GetCommonteamrosterRequest {
    string Season = 1;
    string TeamID = 2;
}

message GetDraftcombinedrillresultsRequest {
    string LeagueID = 1;
    string SeasonYear = 2;
}

message GetDraftcombinenonstationaryshootingRequest {
    string LeagueID = 1;
    string SeasonYear = 2;
}

message GetDraftcombineplayeranthroRequest {
    string LeagueID = 1;
    string SeasonYear = 2;
}

message GetDraftcombinespotshootingRequest {
    string LeagueID = 1;
    string SeasonYear = 2;
}

message GetDraftcombinestatsRequest {
    string LeagueID = 1;
    string SeasonYear = 2;
}

message GetDrafthistoryRequest {
    string LeagueID = 1;
}

message GetFranchisehistoryRequest {
    string LeagueID = 1;
}

message GetHomepageleadersRequest {
    string Game = 1;
    string GameScope = 2;
    string LeagueID = 3;
    string Player = 4;
    string PlayerOrTeam = 5;
    string PlayerScope = 6;
    string Season = 7;
    string SeasonType = 8;
    string StatCategory = 9;
}

message GetHomepagev2Request {
    string Game = 1;
    string GameScope = 2;
    string LeagueID = 3;
    string Player = 4;
    string PlayerOrTeam = 5;
    string PlayerScope = 6;
    string Season = 7;
    string SeasonType = 8;
    string StatType = 9;
}

message GetLeaderstilesRequest {
    string Game = 1;
    string GameScope = 2;
    string LeagueID = 3;
    string Player = 4;
    string PlayerOrTeam = 5;
    string PlayerScope = 6;
    string Season = 7;
    string SeasonType = 8;
    string Stat = 9;
}

message GetLeaguedashlineupsRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameSegment = 3;
    string GroupQuantity = 4;
    string LastNGames = 5;
    string Location = 6;
    string MeasureType = 7;
    string Month = 8;
    string OpponentTeamID = 9;
    string Outcome = 10;
    string PaceAdjust = 11;
    string PerMode = 12;
    string Period = 13;
    string PlusMinus = 14;
    string Rank = 15;
    string Season = 16;
    string SeasonSegment = 17;
    string SeasonType = 18;
    string VsConference = 19;
    string VsDivision = 20;
}

message GetLeaguedashplayerbiostatsRequest {
    string LeagueID = 1;
    string PerMode = 2;
    string Season = 3;
    string SeasonType = 4;
}

message GetLeaguedashplayerclutchRequest {
    string AheadBehind = 1;
    string ClutchTime = 2;
    string DateFrom = 3;
    string DateTo = 4;
    string GameScope = 5;
    string GameSegment = 6;
    string LastNGames = 7;
    string Location = 8;
    string MeasureType = 9;
    string Month = 10;
    string OpponentTeamID = 11;
    string Outcome = 12;
    string PaceAdjust = 13;
    string PerMode = 14;
    string Period = 15;
    string PlayerExperience = 16;
    string PlayerPosition = 17;
    string PlusMinus = 18;
    string PointDiff = 19;
    string Rank = 20;
    string Season = 21;
    string SeasonSegment = 22;
    string SeasonType = 23;
    string StarterBench = 24;
    string VsConference = 25;
    string VsDivision = 26;
}

message GetLeaguedashplayerptshotRequest {
    string LeagueID = 1;
    string PerMode = 2;
    string Season = 3;
    string SeasonType = 4;
}

message GetLeaguedashplayershotlocationsRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string DistanceRange = 3;
    string GameScope = 4;
    string GameSegment = 5;
    string LastNGames = 6;
    string Location = 7;
    string MeasureType = 8;
    string Month = 9;
    string OpponentTeamID = 10;
    string Outcome = 11;
    string PaceAdjust = 12;
    string PerMode = 13;
    string Period = 14;
    string PlayerExperience = 15;
    string PlayerPosition = 16;
    string PlusMinus = 17;
    string Rank = 18;
    string Season = 19;
    string SeasonSegment = 20;
    string SeasonType = 21;
    string StarterBench = 22;
    string VsConference = 23;
    string VsDivision = 24;
}

message GetLeaguedashplayerstatsRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameScope = 3;
    string GameSegment = 4;
    string LastNGames = 5;
    string Location = 6;
    string MeasureType = 7;
    string Month = 8;
    string OpponentTeamID = 9;
    string Outcome = 10;
    string PaceAdjust = 11;
    string PerMode = 12;
    string Period = 13;
    string PlayerExperience = 14;
    string PlayerPosition = 15;
    string PlusMinus = 16;
    string Rank = 17;
    string Season = 18;
    string SeasonSegment = 19;
    string SeasonType = 20;
    string StarterBench = 21;
    string VsConference = 22;
    string VsDivision = 23;
}

message GetLeaguedashptdefendRequest {
    string DefenseCategory = 1;
    string LeagueID = 2;
    string PerMode = 3;
    string Season = 4;
    string SeasonType = 5;
}

message GetLeaguedashptteamdefendRequest {
    string DefenseCategory = 1;
    string LeagueID = 2;
    string PerMode = 3;
    string Season = 4;
    string SeasonType = 5;
}

message GetLeaguedashteamclutchRequest {
    string AheadBehind = 1;
    string ClutchTime = 2;
    string DateFrom = 3;
    string DateTo = 4;
    string GameScope = 5;
    string GameSegment = 6;
    string LastNGames = 7;
    string Location = 8;
    string MeasureType = 9;
    string Month = 10;
    string OpponentTeamID = 11;
    string Outcome = 12;
    string PaceAdjust = 13;
    string PerMode = 14;
    string Period = 15;
    string PlayerExperience = 16;
    string PlayerPosition = 17;
    string PlusMinus = 18;
    string PointDiff = 19;
    string Rank = 20;
    string Season = 21;
    string SeasonSegment = 22;
    string SeasonType = 23;
    string StarterBench = 24;
    string VsConference = 25;
    string VsDivision = 26;
}

message GetLeaguedashteamptshotRequest {
    string LeagueID = 1;
    string PerMode = 2;
    string Season = 3;
    string SeasonType = 4;
}

message GetLeaguedashteamshotlocationsRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string DistanceRange = 3;
    string GameScope = 4;
    string GameSegment = 5;
    string LastNGames = 6;
    string Location = 7;
    string MeasureType = 8;
    string Month = 9;
    string OpponentTeamID = 10;
    string Outcome = 11;
    string PaceAdjust = 12;
    string PerMode = 13;
    string Period = 14;
    string PlayerExperience = 15;
    string PlayerPosition = 16;
    string PlusMinus = 17;
    string Rank = 18;
    string Season = 19;
    string SeasonSegment = 20;
    string SeasonType = 21;
    string StarterBench = 22;
    string VsConference = 23;
    string VsDivision = 24;
}

message GetLeaguedashteamstatsRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameSegment = 3;
    string LastNGames = 4;
    string Location = 5;
    string MeasureType = 6;
    string Month = 7;
    string OpponentTeamID = 8;
    string Outcome = 9;
    string PaceAdjust = 10;
    string PerMode = 11;
    string Period = 12;
    string PlusMinus = 13;
    string Rank = 14;
    string Season = 15;
    string SeasonSegment = 16;
    string SeasonType = 17;
    string VsConference = 18;
    string VsDivision = 19;
}

message GetLeagueleadersRequest {
    string LeagueID = 1;
    string PerMode = 2;
    string Scope = 3;
    string Season = 4;
    string SeasonType = 5;
    string StatCategory = 6;
}

message GetPlaybyplayRequest {
    string EndPeriod = 1;
    string GameID = 2;
    string StartPeriod = 3;
}

message GetPlaybyplayv2Request {
    string EndPeriod = 1;
    string GameID = 2;
    string StartPeriod = 3;
}

message GetPlayercareerstatsRequest {
    string PerMode = 1;
    string PlayerID = 2;
}

message GetPlayercompareRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameSegment = 3;
    string LastNGames = 4;
    string Location = 5;
    string MeasureType = 6;
    string Month = 7;
    string OpponentTeamID = 8;
    string Outcome = 9;
    string PaceAdjust = 10;
    string PerMode = 11;
    string Period = 12;
    string PlayerIDList = 13;
    string PlusMinus = 14;
    string Rank = 15;
    string Season = 16;
    string SeasonSegment = 17;
    string SeasonType = 18;
    string VsConference = 19;
    string VsDivision = 20;
    string VsPlayerIDList = 21;
}

message GetPlayerdashboardbyclutchRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameSegment = 3;
    string LastNGames = 4;
    string Location = 5;
    string MeasureType = 6;
    string Month = 7;
    string OpponentTeamID = 8;
    string Outcome = 9;
    string PaceAdjust = 10;
    string PerMode = 11;
    string Period = 12;
    string PlayerID = 13;
    string PlusMinus = 14;
    string Rank = 15;
    string Season = 16;
    string SeasonSegment = 17;
    string SeasonType = 18;
    string VsConference = 19;
    string VsDivision = 20;
}

message GetPlayerdashboardbygamesplitsRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameSegment = 3;
    string LastNGames = 4;
    string Location = 5;
    string MeasureType = 6;
    string Month = 7;
    string OpponentTeamID = 8;
    string Outcome = 9;
    string PaceAdjust = 10;
    string PerMode = 11;
    string Period = 12;
    string PlayerID = 13;
    string PlusMinus = 14;
    string Rank = 15;
    string Season = 16;
    string SeasonSegment = 17;
    string SeasonType = 18;
    string VsConference = 19;
    string VsDivision = 20;
}

message GetPlayerdashboardbygeneralsplitsRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameSegment = 3;
    string LastNGames = 4;
    string Location = 5;
    string MeasureType = 6;
    string Month = 7;
    string OpponentTeamID = 8;
    string Outcome = 9;
    string PaceAdjust = 10;
    string PerMode = 11;
    string Period = 12;
    string PlayerID = 13;
    string PlusMinus = 14;
    string Rank = 15;
    string Season = 16;
    string SeasonSegment = 17;
    string SeasonType = 18;
    string VsConference = 19;
    string VsDivision = 20;
}

message GetPlayerdashboardbylastngamesRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameSegment = 3;
    string LastNGames = 4;
    string Location = 5;
    string MeasureType = 6;
    string Month = 7;
    string OpponentTeamID = 8;
    string Outcome = 9;
    string PaceAdjust = 10;
    string PerMode = 11;
    string Period = 12;
    string PlayerID = 13;
    string PlusMinus = 14;
    string Rank = 15;
    string Season = 16;
    string SeasonSegment = 17;
    string SeasonType = 18;
    string VsConference = 19;
    string VsDivision = 20;
}

message GetPlayerdashboardbyopponentRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameSegment = 3;
    string LastNGames = 4;
    string Location = 5;
    string MeasureType = 6;
    string Month = 7;
    string OpponentTeamID = 8;
    string Outcome = 9;
    string PaceAdjust = 10;
    string PerMode = 11;
    string Period = 12;
    string PlayerID = 13;
    string PlusMinus = 14;
    string Rank = 15;
    string Season = 16;
    string SeasonSegment = 17;
    string SeasonType = 18;
    string VsConference = 19;
    string VsDivision = 20;
}

message GetPlayerdashboardbyshootingsplitsRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameSegment = 3;
    string LastNGames = 4;
    string Location = 5;
    string MeasureType = 6;
    string Month = 7;
    string OpponentTeamID = 8;
    string Outcome = 9;
    string PaceAdjust = 10;
    string PerMode = 11;
    string Period = 12;
    string PlayerID = 13;
    string PlusMinus = 14;
    string Rank = 15;
    string Season = 16;
    string SeasonSegment = 17;
    string SeasonType = 18;
    string VsConference = 19;
    string VsDivision = 20;
}

message GetPlayerdashboardbyteamperformanceRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameSegment = 3;
    string LastNGames = 4;
    string Location = 5;
    string MeasureType = 6;
    string Month = 7;
    string OpponentTeamID = 8;
    string Outcome = 9;
    string PaceAdjust = 10;
    string PerMode = 11;
    string Period = 12;
    string PlayerID = 13;
    string PlusMinus = 14;
    string Rank = 15;
    string Season = 16;
    string SeasonSegment = 17;
    string SeasonType = 18;
    string VsConference = 19;
    string VsDivision = 20;
}

message GetPlayerdashboardbyyearoveryearRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameSegment = 3;
    string LastNGames = 4;
    string Location = 5;
    string MeasureType = 6;
    string Month = 7;
    string OpponentTeamID = 8;
    string Outcome = 9;
    string PaceAdjust = 10;
    string PerMode = 11;
    string Period = 12;
    string PlayerID = 13;
    string PlusMinus = 14;
    string Rank = 15;
    string Season = 16;
    string SeasonSegment = 17;
    string SeasonType = 18;
    string VsConference = 19;
    string VsDivision = 20;
}

message GetPlayerdashptpassRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string LastNGames = 3;
    string Location = 4;
    string Month = 5;
    string OpponentTeamID = 6;
    string Outcome = 7;
    string PerMode = 8;
    string PlayerID = 9;
    string Season = 10;
    string SeasonSegment = 11;
    string SeasonType = 12;
    string TeamID = 13;
    string VsConference = 14;
    string VsDivision = 15;
}

message GetPlayerdashptrebRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameSegment = 3;
    string LastNGames = 4;
    string Location = 5;
    string Month = 6;
    string OpponentTeamID = 7;
    string Outcome = 8;
    string PerMode = 9;
    string Period = 10;
    string PlayerID = 11;
    string Season = 12;
    string SeasonSegment = 13;
    string SeasonType = 14;
    string TeamID = 15;
    string VsConference = 16;
    string VsDivision = 17;
}

message GetPlayerdashptreboundlogsRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameSegment = 3;
    string LastNGames = 4;
    string Location = 5;
    string Month = 6;
    string OpponentTeamID = 7;
    string Outcome = 8;
    string Period = 9;
    string PlayerID = 10;
    string Season = 11;
    string SeasonSegment = 12;
    string SeasonType = 13;
    string TeamID = 14;
    string VsConference = 15;
    string VsDivision = 16;
}

message GetPlayerdashptshotdefendRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameSegment = 3;
    string LastNGames = 4;
    string Location = 5;
    string Month = 6;
    string OpponentTeamID = 7;
    string Outcome = 8;
    string PerMode = 9;
    string Period = 10;
    string PlayerID = 11;
    string Season = 12;
    string SeasonSegment = 13;
    string SeasonType = 14;
    string TeamID = 15;
    string VsConference = 16;
    string VsDivision = 17;
}

message GetPlayerdashptshotlogRequest {
    string LeagueID = 1;
    string PlayerID = 2;
    string Season = 3;
    string SeasonType = 4;
    string TeamID = 5;
}

message GetPlayerdashptshotsRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameSegment = 3;
    string LastNGames = 4;
    string Location = 5;
    string Month = 6;
    string OpponentTeamID = 7;
    string Outcome = 8;
    string PerMode = 9;
    string Period = 10;
    string PlayerID = 11;
    string Season = 12;
    string SeasonSegment = 13;
    string SeasonType = 14;
    string TeamID = 15;
    string VsConference = 16;
    string VsDivision = 17;
}

message GetPlayergamelogRequest {
    string PlayerID = 1;
    string Season = 2;
    string SeasonType = 3;
}

message GetPlayerprofileRequest {
    string GraphEndSeason = 1;
    string GraphStartSeason = 2;
    string GraphStat = 3;
    string LeagueID = 4;
    string PlayerID = 5;
    string Season = 6;
    string SeasonType = 7;
}

message GetPlayerprofilev2Request {
    string PerMode = 1;
    string PlayerID = 2;
}

message GetPlayersvsplayersRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameSegment = 3;
    string LastNGames = 4;
    string Location = 5;
    string MeasureType = 6;
    string Month = 7;
    string OpponentTeamID = 8;
    string Outcome = 9;
    string PaceAdjust = 10;
    string PerMode = 11;
    string Period = 12;
    string PlayerID1 = 13;
    string PlayerID2 = 14;
    string PlayerID3 = 15;
    string PlayerID4 = 16;
    string PlayerID5 = 17;
    string PlayerTeamID = 18;
    string PlusMinus = 19;
    string Rank = 20;
    string Season = 21;
    string SeasonSegment = 22;
    string SeasonType = 23;
    string VsConference = 24;
    string VsDivision = 25;
    string VsPlayerID1 = 26;
    string VsPlayerID2 = 27;
    string VsPlayerID3 = 28;
    string VsPlayerID4 = 29;
    string VsPlayerID5 = 30;
    string VsTeamID = 31;
}

message GetPlayervsplayerRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameSegment = 3;
    string LastNGames = 4;
    string Location = 5;
    string MeasureType = 6;
    string Month = 7;
    string OpponentTeamID = 8;
    string Outcome = 9;
    string PaceAdjust = 10;
    string PerMode = 11;
    string Period = 12;
    string PlayerID = 13;
    string PlusMinus = 14;
    string Rank = 15;
    string Season = 16;
    string SeasonSegment = 17;
    string SeasonType = 18;
    string VsConference = 19;
    string VsDivision = 20;
    string VsPlayerID = 21;
}

message GetPlayoffpictureRequest {
    string LeagueID = 1;
    string SeasonID = 2;
}

message GetScoreboardRequest {
    string DayOffset = 1;
    string GameDate = 2;
    string LeagueID = 3;
}

message GetScoreboardV2Request {
    string DayOffset = 1;
    string GameDate = 2;
    string LeagueID = 3;
}

message GetShotchartdetailRequest {
    string ContextMeasure = 1;
    string DateFrom = 2;
    string DateTo = 3;
    string GameID = 4;
    string GameSegment = 5;
    string LastNGames = 6;
    string Location = 7;
    string Month = 8;
    string OpponentTeamID = 9;
    string Outcome = 10;
    string Period = 11;
    string PlayerID = 12;
    string Position = 13;
    string RookieYear = 14;
    string SeasonSegment = 15;
    string SeasonType = 16;
    string TeamID = 17;
    string VsConference = 18;
    string VsDivision = 19;
}

message GetShotchartlineupdetailRequest {
    string ContextFilter = 1;
    string ContextMeasure = 2;
    string DateFrom = 3;
    string DateTo = 4;
    string GROUP_ID = 5;
    string GameID = 6;
    string GameSegment = 7;
    string LastNGames = 8;
    string LeagueID = 9;
    string Location = 10;
    string Month = 11;
    string OpponentTeamID = 12;
    string Outcome = 13;
    string Period = 14;
    string Season = 15;
    string SeasonSegment = 16;
    string SeasonType = 17;
    string TeamID = 18;
    string VsConference = 19;
    string VsDivision = 20;
}

message GetTeamdashboardbyclutchRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameSegment = 3;
    string LastNGames = 4;
    string Location = 5;
    string MeasureType = 6;
    string Month = 7;
    string OpponentTeamID = 8;
    string Outcome = 9;
    string PaceAdjust = 10;
    string PerMode = 11;
    string Period = 12;
    string PlusMinus = 13;
    string Rank = 14;
    string Season = 15;
    string SeasonSegment = 16;
    string SeasonType = 17;
    string TeamID = 18;
    string VsConference = 19;
    string VsDivision = 20;
}

message GetTeamdashboardbygamesplitsRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameSegment = 3;
    string LastNGames = 4;
    string Location = 5;
    string MeasureType = 6;
    string Month = 7;
    string OpponentTeamID = 8;
    string Outcome = 9;
    string PaceAdjust = 10;
    string PerMode = 11;
    string Period = 12;
    string PlusMinus = 13;
    string Rank = 14;
    string Season = 15;
    string SeasonSegment = 16;
    string SeasonType = 17;
    string TeamID = 18;
    string VsConference = 19;
    string VsDivision = 20;
}

message GetTeamdashboardbygeneralsplitsRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameSegment = 3;
    string LastNGames = 4;
    string Location = 5;
    string MeasureType = 6;
    string Month = 7;
    string OpponentTeamID = 8;
    string Outcome = 9;
    string PaceAdjust = 10;
    string PerMode = 11;
    string Period = 12;
    string PlusMinus = 13;
    string Rank = 14;
    string Season = 15;
    string SeasonSegment = 16;
    string SeasonType = 17;
    string TeamID = 18;
    string VsConference = 19;
    string VsDivision = 20;
}

message GetTeamdashboardbylastngamesRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameSegment = 3;
    string LastNGames = 4;
    string Location = 5;
    string MeasureType = 6;
    string Month = 7;
    string OpponentTeamID = 8;
    string Outcome = 9;
    string PaceAdjust = 10;
    string PerMode = 11;
    string Period = 12;
    string PlusMinus = 13;
    string Rank = 14;
    string Season = 15;
    string SeasonSegment = 16;
    string SeasonType = 17;
    string TeamID = 18;
    string VsConference = 19;
    string VsDivision = 20;
}

message GetTeamdashboardbyopponentRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameSegment = 3;
    string LastNGames = 4;
    string Location = 5;
    string MeasureType = 6;
    string Month = 7;
    string OpponentTeamID = 8;
    string Outcome = 9;
    string PaceAdjust = 10;
    string PerMode = 11;
    string Period = 12;
    string PlusMinus = 13;
    string Rank = 14;
    string Season = 15;
    string SeasonSegment = 16;
    string SeasonType = 17;
    string TeamID = 18;
    string VsConference = 19;
    string VsDivision = 20;
}

message GetTeamdashboardbyshootingsplitsRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameSegment = 3;
    string LastNGames = 4;
    string Location = 5;
    string MeasureType = 6;
    string Month = 7;
    string OpponentTeamID = 8;
    string Outcome = 9;
    string PaceAdjust = 10;
    string PerMode = 11;
    string Period = 12;
    string PlusMinus = 13;
    string Rank = 14;
    string Season = 15;
    string SeasonSegment = 16;
    string SeasonType = 17;
    string TeamID = 18;
    string VsConference = 19;
    string VsDivision = 20;
}

message GetTeamdashboardbyteamperformanceRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameSegment = 3;
    string LastNGames = 4;
    string Location = 5;
    string MeasureType = 6;
    string Month = 7;
    string OpponentTeamID = 8;
    string Outcome = 9;
    string PaceAdjust = 10;
    string PerMode = 11;
    string Period = 12;
    string PlusMinus = 13;
    string Rank = 14;
    string Season = 15;
    string SeasonSegment = 16;
    string SeasonType = 17;
    string TeamID = 18;
    string VsConference = 19;
    string VsDivision = 20;
}

message GetTeamdashboardbyyearoveryearRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameSegment = 3;
    string LastNGames = 4;
    string Location = 5;
    string MeasureType = 6;
    string Month = 7;
    string OpponentTeamID = 8;
    string Outcome = 9;
    string PaceAdjust = 10;
    string PerMode = 11;
    string Period = 12;
    string PlusMinus = 13;
    string Rank = 14;
    string Season = 15;
    string SeasonSegment = 16;
    string SeasonType = 17;
    string TeamID = 18;
    string VsConference = 19;
    string VsDivision = 20;
}

message GetTeamdashlineupsRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameID = 3;
    string GameSegment = 4;
    string GroupQuantity = 5;
    string LastNGames = 6;
    string Location = 7;
    string MeasureType = 8;
    string Month = 9;
    string OpponentTeamID = 10;
    string Outcome = 11;
    string PaceAdjust = 12;
    string PerMode = 13;
    string Period = 14;
    string PlusMinus = 15;
    string Rank = 16;
    string Season = 17;
    string SeasonSegment = 18;
    string SeasonType = 19;
    string TeamID = 20;
    string VsConference = 21;
    string VsDivision = 22;
}

message GetTeamdashptpassRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string LastNGames = 3;
    string Location = 4;
    string Month = 5;
    string OpponentTeamID = 6;
    string Outcome = 7;
    string PerMode = 8;
    string Season = 9;
    string SeasonSegment = 10;
    string SeasonType = 11;
    string TeamID = 12;
    string VsConference = 13;
    string VsDivision = 14;
}

message GetTeamdashptrebRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameSegment = 3;
    string LastNGames = 4;
    string Location = 5;
    string Month = 6;
    string OpponentTeamID = 7;
    string Outcome = 8;
    string PerMode = 9;
    string Period = 10;
    string Season = 11;
    string SeasonSegment = 12;
    string SeasonType = 13;
    string TeamID = 14;
    string VsConference = 15;
    string VsDivision = 16;
}

message GetTeamdashptshotsRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameSegment = 3;
    string LastNGames = 4;
    string Location = 5;
    string Month = 6;
    string OpponentTeamID = 7;
    string Outcome = 8;
    string PerMode = 9;
    string Period = 10;
    string Season = 11;
    string SeasonSegment = 12;
    string SeasonType = 13;
    string TeamID = 14;
    string VsConference = 15;
    string VsDivision = 16;
}

message GetTeamgamelogRequest {
    string Season = 1;
    string SeasonType = 2;
    string TeamID = 3;
}

message GetTeaminfocommonRequest {
    string LeagueID = 1;
    string Season = 2;
    string SeasonType = 3;
    string TeamID = 4;
}

message GetTeamplayerdashboardRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameSegment = 3;
    string LastNGames = 4;
    string Location = 5;
    string MeasureType = 6;
    string Month = 7;
    string OpponentTeamID = 8;
    string Outcome = 9;
    string PaceAdjust = 10;
    string PerMode = 11;
    string Period = 12;
    string PlusMinus = 13;
    string Rank = 14;
    string Season = 15;
    string SeasonSegment = 16;
    string SeasonType = 17;
    string TeamID = 18;
    string VsConference = 19;
    string VsDivision = 20;
}

message GetTeamplayeronoffdetailsRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameSegment = 3;
    string LastNGames = 4;
    string Location = 5;
    string MeasureType = 6;
    string Month = 7;
    string OpponentTeamID = 8;
    string Outcome = 9;
    string PaceAdjust = 10;
    string PerMode = 11;
    string Period = 12;
    string PlusMinus = 13;
    string Rank = 14;
    string Season = 15;
    string SeasonSegment = 16;
    string SeasonType = 17;
    string TeamID = 18;
    string VsConference = 19;
    string VsDivision = 20;
}

message GetTeamplayeronoffsummaryRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameSegment = 3;
    string LastNGames = 4;
    string Location = 5;
    string MeasureType = 6;
    string Month = 7;
    string OpponentTeamID = 8;
    string Outcome = 9;
    string PaceAdjust = 10;
    string PerMode = 11;
    string Period = 12;
    string PlusMinus = 13;
    string Rank = 14;
    string Season = 15;
    string SeasonSegment = 16;
    string SeasonType = 17;
    string TeamID = 18;
    string VsConference = 19;
    string VsDivision = 20;
}

message GetTeamvsplayerRequest {
    string DateFrom = 1;
    string DateTo = 2;
    string GameSegment = 3;
    string LastNGames = 4;
    string Location = 5;
    string MeasureType = 6;
    string Month = 7;
    string OpponentTeamID = 8;
    string Outcome = 9;
    string PaceAdjust = 10;
    string PerMode = 11;
    string Period = 12;
    string PlusMinus = 13;
    string Rank = 14;
    string Season = 15;
    string SeasonSegment = 16;
    string SeasonType = 17;
    string TeamID = 18;
    string VsConference = 19;
    string VsDivision = 20;
    string VsPlayerID = 21;
}

message GetTeamyearbyyearstatsRequest {
    string LeagueID = 1;
    string PerMode = 2;
    string SeasonType = 3;
    string TeamID = 4;
}

message GetVideoStatusRequest {
    string GameDate = 1;
    string LeagueID = 2;
}

service NBAStatsService {
    rpc GetAllstarballotpredictor(GetAllstarballotpredictorRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/allstarballotpredictor"
      };
    }
    rpc GetBoxscore(GetBoxscoreRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/boxscore"
      };
    }
    rpc GetBoxscoreadvanced(GetBoxscoreadvancedRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/boxscoreadvanced"
      };
    }
    rpc GetBoxscoreadvancedv2(GetBoxscoreadvancedv2Request) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/boxscoreadvancedv2"
      };
    }
    rpc GetBoxscorefourfactors(GetBoxscorefourfactorsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/boxscorefourfactors"
      };
    }
    rpc GetBoxscorefourfactorsv2(GetBoxscorefourfactorsv2Request) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/boxscorefourfactorsv2"
      };
    }
    rpc GetBoxscoremisc(GetBoxscoremiscRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/boxscoremisc"
      };
    }
    rpc GetBoxscoremiscv2(GetBoxscoremiscv2Request) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/boxscoremiscv2"
      };
    }
    rpc GetBoxscoreplayertrackv2(GetBoxscoreplayertrackv2Request) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/boxscoreplayertrackv2"
      };
    }
    rpc GetBoxscorescoring(GetBoxscorescoringRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/boxscorescoring"
      };
    }
    rpc GetBoxscorescoringv2(GetBoxscorescoringv2Request) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/boxscorescoringv2"
      };
    }
    rpc GetBoxscoresummaryv2(GetBoxscoresummaryv2Request) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/boxscoresummaryv2"
      };
    }
    rpc GetBoxscoretraditionalv2(GetBoxscoretraditionalv2Request) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/boxscoretraditionalv2"
      };
    }
    rpc GetBoxscoreusage(GetBoxscoreusageRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/boxscoreusage"
      };
    }
    rpc GetBoxscoreusagev2(GetBoxscoreusagev2Request) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/boxscoreusagev2"
      };
    }
    rpc GetCommonTeamYears(GetCommonTeamYearsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/commonTeamYears"
      };
    }
    rpc GetCommonallplayers(GetCommonallplayersRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/commonallplayers"
      };
    }
    rpc GetCommonplayerinfo(GetCommonplayerinfoRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/commonplayerinfo"
      };
    }
    rpc GetCommonplayoffseries(GetCommonplayoffseriesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/commonplayoffseries"
      };
    }
    rpc GetCommonteamroster(GetCommonteamrosterRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/commonteamroster"
      };
    }
    rpc GetDraftcombinedrillresults(GetDraftcombinedrillresultsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/draftcombinedrillresults"
      };
    }
    rpc GetDraftcombinenonstationaryshooting(GetDraftcombinenonstationaryshootingRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/draftcombinenonstationaryshooting"
      };
    }
    rpc GetDraftcombineplayeranthro(GetDraftcombineplayeranthroRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/draftcombineplayeranthro"
      };
    }
    rpc GetDraftcombinespotshooting(GetDraftcombinespotshootingRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/draftcombinespotshooting"
      };
    }
    rpc GetDraftcombinestats(GetDraftcombinestatsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/draftcombinestats"
      };
    }
    rpc GetDrafthistory(GetDrafthistoryRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/drafthistory"
      };
    }
    rpc GetFranchisehistory(GetFranchisehistoryRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/franchisehistory"
      };
    }
    rpc GetHomepageleaders(GetHomepageleadersRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/homepageleaders"
      };
    }
    rpc GetHomepagev2(GetHomepagev2Request) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/homepagev2"
      };
    }
    rpc GetLeaderstiles(GetLeaderstilesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/leaderstiles"
      };
    }
    rpc GetLeaguedashlineups(GetLeaguedashlineupsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/leaguedashlineups"
      };
    }
    rpc GetLeaguedashplayerbiostats(GetLeaguedashplayerbiostatsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/leaguedashplayerbiostats"
      };
    }
    rpc GetLeaguedashplayerclutch(GetLeaguedashplayerclutchRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/leaguedashplayerclutch"
      };
    }
    rpc GetLeaguedashplayerptshot(GetLeaguedashplayerptshotRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/leaguedashplayerptshot"
      };
    }
    rpc GetLeaguedashplayershotlocations(GetLeaguedashplayershotlocationsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/leaguedashplayershotlocations"
      };
    }
    rpc GetLeaguedashplayerstats(GetLeaguedashplayerstatsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/leaguedashplayerstats"
      };
    }
    rpc GetLeaguedashptdefend(GetLeaguedashptdefendRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/leaguedashptdefend"
      };
    }
    rpc GetLeaguedashptteamdefend(GetLeaguedashptteamdefendRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/leaguedashptteamdefend"
      };
    }
    rpc GetLeaguedashteamclutch(GetLeaguedashteamclutchRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/leaguedashteamclutch"
      };
    }
    rpc GetLeaguedashteamptshot(GetLeaguedashteamptshotRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/leaguedashteamptshot"
      };
    }
    rpc GetLeaguedashteamshotlocations(GetLeaguedashteamshotlocationsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/leaguedashteamshotlocations"
      };
    }
    rpc GetLeaguedashteamstats(GetLeaguedashteamstatsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/leaguedashteamstats"
      };
    }
    rpc GetLeagueleaders(GetLeagueleadersRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/leagueleaders"
      };
    }
    rpc GetPlaybyplay(GetPlaybyplayRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/playbyplay"
      };
    }
    rpc GetPlaybyplayv2(GetPlaybyplayv2Request) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/playbyplayv2"
      };
    }
    rpc GetPlayercareerstats(GetPlayercareerstatsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/playercareerstats"
      };
    }
    rpc GetPlayercompare(GetPlayercompareRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/playercompare"
      };
    }
    rpc GetPlayerdashboardbyclutch(GetPlayerdashboardbyclutchRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/playerdashboardbyclutch"
      };
    }
    rpc GetPlayerdashboardbygamesplits(GetPlayerdashboardbygamesplitsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/playerdashboardbygamesplits"
      };
    }
    rpc GetPlayerdashboardbygeneralsplits(GetPlayerdashboardbygeneralsplitsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/playerdashboardbygeneralsplits"
      };
    }
    rpc GetPlayerdashboardbylastngames(GetPlayerdashboardbylastngamesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/playerdashboardbylastngames"
      };
    }
    rpc GetPlayerdashboardbyopponent(GetPlayerdashboardbyopponentRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/playerdashboardbyopponent"
      };
    }
    rpc GetPlayerdashboardbyshootingsplits(GetPlayerdashboardbyshootingsplitsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/playerdashboardbyshootingsplits"
      };
    }
    rpc GetPlayerdashboardbyteamperformance(GetPlayerdashboardbyteamperformanceRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/playerdashboardbyteamperformance"
      };
    }
    rpc GetPlayerdashboardbyyearoveryear(GetPlayerdashboardbyyearoveryearRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/playerdashboardbyyearoveryear"
      };
    }
    rpc GetPlayerdashptpass(GetPlayerdashptpassRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/playerdashptpass"
      };
    }
    rpc GetPlayerdashptreb(GetPlayerdashptrebRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/playerdashptreb"
      };
    }
    rpc GetPlayerdashptreboundlogs(GetPlayerdashptreboundlogsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/playerdashptreboundlogs"
      };
    }
    rpc GetPlayerdashptshotdefend(GetPlayerdashptshotdefendRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/playerdashptshotdefend"
      };
    }
    rpc GetPlayerdashptshotlog(GetPlayerdashptshotlogRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/playerdashptshotlog"
      };
    }
    rpc GetPlayerdashptshots(GetPlayerdashptshotsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/playerdashptshots"
      };
    }
    rpc GetPlayergamelog(GetPlayergamelogRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/playergamelog"
      };
    }
    rpc GetPlayerprofile(GetPlayerprofileRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/playerprofile"
      };
    }
    rpc GetPlayerprofilev2(GetPlayerprofilev2Request) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/playerprofilev2"
      };
    }
    rpc GetPlayersvsplayers(GetPlayersvsplayersRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/playersvsplayers"
      };
    }
    rpc GetPlayervsplayer(GetPlayervsplayerRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/playervsplayer"
      };
    }
    rpc GetPlayoffpicture(GetPlayoffpictureRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/playoffpicture"
      };
    }
    rpc GetScoreboard(GetScoreboardRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/scoreboard"
      };
    }
    rpc GetScoreboardV2(GetScoreboardV2Request) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/scoreboardV2"
      };
    }
    rpc GetShotchartdetail(GetShotchartdetailRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/shotchartdetail"
      };
    }
    rpc GetShotchartlineupdetail(GetShotchartlineupdetailRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/shotchartlineupdetail"
      };
    }
    rpc GetTeamdashboardbyclutch(GetTeamdashboardbyclutchRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/teamdashboardbyclutch"
      };
    }
    rpc GetTeamdashboardbygamesplits(GetTeamdashboardbygamesplitsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/teamdashboardbygamesplits"
      };
    }
    rpc GetTeamdashboardbygeneralsplits(GetTeamdashboardbygeneralsplitsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/teamdashboardbygeneralsplits"
      };
    }
    rpc GetTeamdashboardbylastngames(GetTeamdashboardbylastngamesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/teamdashboardbylastngames"
      };
    }
    rpc GetTeamdashboardbyopponent(GetTeamdashboardbyopponentRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/teamdashboardbyopponent"
      };
    }
    rpc GetTeamdashboardbyshootingsplits(GetTeamdashboardbyshootingsplitsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/teamdashboardbyshootingsplits"
      };
    }
    rpc GetTeamdashboardbyteamperformance(GetTeamdashboardbyteamperformanceRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/teamdashboardbyteamperformance"
      };
    }
    rpc GetTeamdashboardbyyearoveryear(GetTeamdashboardbyyearoveryearRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/teamdashboardbyyearoveryear"
      };
    }
    rpc GetTeamdashlineups(GetTeamdashlineupsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/teamdashlineups"
      };
    }
    rpc GetTeamdashptpass(GetTeamdashptpassRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/teamdashptpass"
      };
    }
    rpc GetTeamdashptreb(GetTeamdashptrebRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/teamdashptreb"
      };
    }
    rpc GetTeamdashptshots(GetTeamdashptshotsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/teamdashptshots"
      };
    }
    rpc GetTeamgamelog(GetTeamgamelogRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/teamgamelog"
      };
    }
    rpc GetTeaminfocommon(GetTeaminfocommonRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/teaminfocommon"
      };
    }
    rpc GetTeamplayerdashboard(GetTeamplayerdashboardRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/teamplayerdashboard"
      };
    }
    rpc GetTeamplayeronoffdetails(GetTeamplayeronoffdetailsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/teamplayeronoffdetails"
      };
    }
    rpc GetTeamplayeronoffsummary(GetTeamplayeronoffsummaryRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/teamplayeronoffsummary"
      };
    }
    rpc GetTeamvsplayer(GetTeamvsplayerRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/teamvsplayer"
      };
    }
    rpc GetTeamyearbyyearstats(GetTeamyearbyyearstatsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/teamyearbyyearstats"
      };
    }
    rpc GetVideoStatus(GetVideoStatusRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/stats/videoStatus"
      };
    }
}
