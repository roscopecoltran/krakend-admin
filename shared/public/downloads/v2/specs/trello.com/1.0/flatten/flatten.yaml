basePath: /1
definitions.actions.properties.text.description: a string with a length from 1 to
  16384
definitions.actions.properties.text.type: string
definitions.actions.type: object
definitions.actions.xml.name: action
definitions.actions_comments.properties.text.description: a string with a length from
  1 to 16384
definitions.actions_comments.properties.text.type: string
definitions.actions_comments.type: object
definitions.actions_comments.xml.name: card
definitions.actions_text.properties.value.description: a string with a length from
  1 to 16384
definitions.actions_text.properties.value.type: string
definitions.actions_text.type: object
definitions.actions_text.xml.name: action
definitions.boards.properties.closed.description: ' true or false'
definitions.boards.properties.closed.type: string
definitions.boards.properties.desc.description: a string with a length from 0 to 16384
definitions.boards.properties.desc.type: string
definitions.boards.properties.idBoardSource.description: The id of the board to copy
  into the new board
definitions.boards.properties.idBoardSource.type: string
definitions.boards.properties.idOrganization.description: The id or name of the organization
  to add the board to.
definitions.boards.properties.idOrganization.type: string
definitions.boards.properties.keepFromSource.description: Components of the source
  board to copy.
definitions.boards.properties.keepFromSource.type: string
definitions.boards.properties.labelNames/blue.description: a string with a length
  from 0 to 16384
definitions.boards.properties.labelNames/blue.type: string
definitions.boards.properties.labelNames/green.description: a string with a length
  from 0 to 16384
definitions.boards.properties.labelNames/green.type: string
definitions.boards.properties.labelNames/orange.description: a string with a length
  from 0 to 16384
definitions.boards.properties.labelNames/orange.type: string
definitions.boards.properties.labelNames/purple.description: a string with a length
  from 0 to 16384
definitions.boards.properties.labelNames/purple.type: string
definitions.boards.properties.labelNames/red.description: a string with a length from
  0 to 16384
definitions.boards.properties.labelNames/red.type: string
definitions.boards.properties.labelNames/yellow.description: a string with a length
  from 0 to 16384
definitions.boards.properties.labelNames/yellow.type: string
definitions.boards.properties.name.description: a string with a length from 1 to 16384
definitions.boards.properties.name.type: string
definitions.boards.properties.powerUps.description: 'all or a comma-separated list
  of: calendar, cardAging, recap or voting'
definitions.boards.properties.powerUps.type: string
definitions.boards.properties.prefs/background.description: A standard background
  name, or the id of a custom background
definitions.boards.properties.prefs/background.type: string
definitions.boards.properties.prefs/calendarFeedEnabled.description: ' true or false'
definitions.boards.properties.prefs/calendarFeedEnabled.type: string
definitions.boards.properties.prefs/cardAging.description: 'One of: pirate or regular'
definitions.boards.properties.prefs/cardAging.type: string
definitions.boards.properties.prefs/cardCovers.description: ' true or false'
definitions.boards.properties.prefs/cardCovers.type: string
definitions.boards.properties.prefs/comments.description: 'One of: disabled, members,
  observers, org or public'
definitions.boards.properties.prefs/comments.type: string
definitions.boards.properties.prefs/invitations.description: 'One of: admins or members'
definitions.boards.properties.prefs/invitations.type: string
definitions.boards.properties.prefs/permissionLevel.description: 'One of: org, private
  or public'
definitions.boards.properties.prefs/permissionLevel.type: string
definitions.boards.properties.prefs/selfJoin.description: ' true or false'
definitions.boards.properties.prefs/selfJoin.type: string
definitions.boards.properties.prefs/voting.description: 'One of: disabled, members,
  observers, org or public'
definitions.boards.properties.prefs/voting.type: string
definitions.boards.properties.prefs_background.description: a string with a length
  from 0 to 16384
definitions.boards.properties.prefs_background.type: string
definitions.boards.properties.prefs_cardAging.description: 'One of: pirate or regular'
definitions.boards.properties.prefs_cardAging.type: string
definitions.boards.properties.prefs_cardCovers.description: ' true or false'
definitions.boards.properties.prefs_cardCovers.type: string
definitions.boards.properties.prefs_comments.description: 'One of: disabled, members,
  observers, org or public'
definitions.boards.properties.prefs_comments.type: string
definitions.boards.properties.prefs_invitations.description: 'One of: admins or members'
definitions.boards.properties.prefs_invitations.type: string
definitions.boards.properties.prefs_permissionLevel.description: 'One of: org, private
  or public'
definitions.boards.properties.prefs_permissionLevel.type: string
definitions.boards.properties.prefs_selfJoin.description: ' true or false'
definitions.boards.properties.prefs_selfJoin.type: string
definitions.boards.properties.prefs_voting.description: 'One of: disabled, members,
  observers, org or public'
definitions.boards.properties.prefs_voting.type: string
definitions.boards.properties.subscribed.description: ' true or false'
definitions.boards.properties.subscribed.type: string
definitions.boards.type: object
definitions.boards.xml.name: board
definitions.boards_checklists.properties.name.description: a string with a length
  from 1 to 16384
definitions.boards_checklists.properties.name.type: string
definitions.boards_checklists.type: object
definitions.boards_checklists.xml.name: board
definitions.boards_closed.properties.value.description: ' true or false'
definitions.boards_closed.properties.value.type: string
definitions.boards_closed.type: object
definitions.boards_closed.xml.name: board
definitions.boards_desc.properties.value.description: a string with a length from
  0 to 16384
definitions.boards_desc.properties.value.type: string
definitions.boards_desc.type: object
definitions.boards_desc.xml.name: board
definitions.boards_idOrganization.properties.value.description: a string with a length
  from 0 to 16384
definitions.boards_idOrganization.properties.value.type: string
definitions.boards_idOrganization.type: object
definitions.boards_idOrganization.xml.name: board
definitions.boards_labels.properties.color.description: A valid label color or null
definitions.boards_labels.properties.color.type: string
definitions.boards_labels.properties.name.description: a string with a length from
  0 to 16384
definitions.boards_labels.properties.name.type: string
definitions.boards_labels.type: object
definitions.boards_labels.xml.name: board
definitions.boards_lists.properties.name.description: a string with a length from
  1 to 16384
definitions.boards_lists.properties.name.type: string
definitions.boards_lists.properties.pos.description: A position. top , bottom , or
  a positive number.
definitions.boards_lists.properties.pos.type: string
definitions.boards_lists.type: object
definitions.boards_lists.xml.name: board
definitions.boards_members.properties.email.description: An email address
definitions.boards_members.properties.email.type: string
definitions.boards_members.properties.fullName.description: A string with a length
  of at least 1.  Cannot begin or end with a space.
definitions.boards_members.properties.fullName.type: string
definitions.boards_members.properties.type.description: 'One of: admin, normal or
  observer'
definitions.boards_members.properties.type.type: string
definitions.boards_members.type: object
definitions.boards_members.xml.name: board
definitions.boards_memberships.properties.member_fields.description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
definitions.boards_memberships.properties.member_fields.type: string
definitions.boards_memberships.properties.type.description: 'One of: admin, normal
  or observer'
definitions.boards_memberships.properties.type.type: string
definitions.boards_memberships.type: object
definitions.boards_memberships.xml.name: board
definitions.boards_name.properties.value.description: a string with a length from
  1 to 16384
definitions.boards_name.properties.value.type: string
definitions.boards_name.type: object
definitions.boards_name.xml.name: board
definitions.boards_powerUps.properties.value.description: 'One of: calendar, cardAging,
  recap or voting'
definitions.boards_powerUps.properties.value.type: string
definitions.boards_powerUps.type: object
definitions.boards_powerUps.xml.name: board
definitions.boards_subscribed.properties.value.description: ' true or false'
definitions.boards_subscribed.properties.value.type: string
definitions.boards_subscribed.type: object
definitions.boards_subscribed.xml.name: board
definitions.cards.properties.closed.description: ' true or false'
definitions.cards.properties.closed.type: string
definitions.cards.properties.desc.description: a string with a length from 0 to 16384
definitions.cards.properties.desc.type: string
definitions.cards.properties.due.description: A date, or null
definitions.cards.properties.due.type: string
definitions.cards.properties.fileSource.description: A file
definitions.cards.properties.fileSource.type: string
definitions.cards.properties.idAttachmentCover.description: Id of the image attachment
  of this card to use as its cover, or null for no cover
definitions.cards.properties.idAttachmentCover.type: string
definitions.cards.properties.idBoard.description: id of the board the card should
  be moved to
definitions.cards.properties.idBoard.type: string
definitions.cards.properties.idCardSource.description: The id of the card to copy
  into a new card.
definitions.cards.properties.idCardSource.type: string
definitions.cards.properties.idLabels.description: A comma-separated list of objectIds,
  24-character hex strings
definitions.cards.properties.idLabels.type: string
definitions.cards.properties.idList.description: id of the list that the card should
  be added to
definitions.cards.properties.idList.type: string
definitions.cards.properties.idMembers.description: A comma-separated list of objectIds,
  24-character hex strings
definitions.cards.properties.idMembers.type: string
definitions.cards.properties.keepFromSource.description: Properties of the card to
  copy over from the source.
definitions.cards.properties.keepFromSource.type: string
definitions.cards.properties.labels.description: 'all or a comma-separated list of:
  blue, green, orange, purple, red or yellow'
definitions.cards.properties.labels.type: string
definitions.cards.properties.name.description: The name of the new card.  It isn&#39;t
  required if the name is being copied from provided by a URL, file or card that is
  being copied.
definitions.cards.properties.name.type: string
definitions.cards.properties.pos.description: A position. top , bottom , or a positive
  number.
definitions.cards.properties.pos.type: string
definitions.cards.properties.subscribed.description: ' true or false'
definitions.cards.properties.subscribed.type: string
definitions.cards.properties.urlSource.description: A URL starting with http:// or
  https:// or null
definitions.cards.properties.urlSource.type: string
definitions.cards.type: object
definitions.cards.xml.name: card
definitions.cards_actions_comments.properties.text.description: a string with a length
  from 1 to 16384
definitions.cards_actions_comments.properties.text.type: string
definitions.cards_actions_comments.type: object
definitions.cards_actions_comments.xml.name: card
definitions.cards_attachments.properties.file.description: A file
definitions.cards_attachments.properties.file.type: string
definitions.cards_attachments.properties.mimeType.description: a string with a length
  from 0 to 256
definitions.cards_attachments.properties.mimeType.type: string
definitions.cards_attachments.properties.name.description: a string with a length
  from 0 to 256
definitions.cards_attachments.properties.name.type: string
definitions.cards_attachments.properties.url.description: A URL starting with http://
  or https:// or null
definitions.cards_attachments.properties.url.type: string
definitions.cards_attachments.type: object
definitions.cards_attachments.xml.name: card
definitions.cards_checklist_checkItem.properties.name.description: a string with a
  length from 1 to 16384
definitions.cards_checklist_checkItem.properties.name.type: string
definitions.cards_checklist_checkItem.properties.pos.description: A position. top
  , bottom , or a positive number.
definitions.cards_checklist_checkItem.properties.pos.type: string
definitions.cards_checklist_checkItem.type: object
definitions.cards_checklist_checkItem.xml.name: card
definitions.cards_checklist_checkItem_name.properties.value.description: a string
  with a length from 1 to 16384
definitions.cards_checklist_checkItem_name.properties.value.type: string
definitions.cards_checklist_checkItem_name.type: object
definitions.cards_checklist_checkItem_name.xml.name: card
definitions.cards_checklist_checkItem_pos.properties.value.description: A position.
  top , bottom , or a positive number.
definitions.cards_checklist_checkItem_pos.properties.value.type: string
definitions.cards_checklist_checkItem_pos.type: object
definitions.cards_checklist_checkItem_pos.xml.name: card
definitions.cards_checklist_checkItem_state.properties.value.description: 'One of:
  complete, false, incomplete or true'
definitions.cards_checklist_checkItem_state.properties.value.type: string
definitions.cards_checklist_checkItem_state.type: object
definitions.cards_checklist_checkItem_state.xml.name: card
definitions.cards_checklist_idChecklistCurrent_checkItem.properties.idChecklist.description: An
  id, or null
definitions.cards_checklist_idChecklistCurrent_checkItem.properties.idChecklist.type: string
definitions.cards_checklist_idChecklistCurrent_checkItem.properties.name.description: a
  string with a length from 1 to 16384
definitions.cards_checklist_idChecklistCurrent_checkItem.properties.name.type: string
definitions.cards_checklist_idChecklistCurrent_checkItem.properties.pos.description: A
  position. top , bottom , or a positive number.
definitions.cards_checklist_idChecklistCurrent_checkItem.properties.pos.type: string
definitions.cards_checklist_idChecklistCurrent_checkItem.properties.state.description: 'One
  of: complete, false, incomplete or true'
definitions.cards_checklist_idChecklistCurrent_checkItem.properties.state.type: string
definitions.cards_checklist_idChecklistCurrent_checkItem.type: object
definitions.cards_checklist_idChecklistCurrent_checkItem.xml.name: card
definitions.cards_checklists.properties.idChecklistSource.description: The id of the
  source checklist to copy into a new checklist.
definitions.cards_checklists.properties.idChecklistSource.type: string
definitions.cards_checklists.properties.name.description: a string with a length from
  0 to 16384
definitions.cards_checklists.properties.name.type: string
definitions.cards_checklists.properties.value.description: The id of the checklist
  to add to the card, or null to create a new one.
definitions.cards_checklists.properties.value.type: string
definitions.cards_checklists.type: object
definitions.cards_checklists.xml.name: card
definitions.cards_closed.properties.value.description: ' true or false'
definitions.cards_closed.properties.value.type: string
definitions.cards_closed.type: object
definitions.cards_closed.xml.name: card
definitions.cards_desc.properties.value.description: a string with a length from 0
  to 16384
definitions.cards_desc.properties.value.type: string
definitions.cards_desc.type: object
definitions.cards_desc.xml.name: card
definitions.cards_due.properties.value.description: A date, or null
definitions.cards_due.properties.value.type: string
definitions.cards_due.type: object
definitions.cards_due.xml.name: card
definitions.cards_idAttachmentCover.properties.value.description: Id of the image
  attachment of this card to use as its cover, or null for no cover
definitions.cards_idAttachmentCover.properties.value.type: string
definitions.cards_idAttachmentCover.type: object
definitions.cards_idAttachmentCover.xml.name: card
definitions.cards_idBoard.properties.idList.description: id of the list that the card
  should be moved to on the new board
definitions.cards_idBoard.properties.idList.type: string
definitions.cards_idBoard.properties.value.description: id of the board the card should
  be moved to
definitions.cards_idBoard.properties.value.type: string
definitions.cards_idBoard.type: object
definitions.cards_idBoard.xml.name: card
definitions.cards_idLabels.properties.value.description: The id of the label to add
definitions.cards_idLabels.properties.value.type: string
definitions.cards_idLabels.type: object
definitions.cards_idLabels.xml.name: card
definitions.cards_idList.properties.value.description: id of the list the card should
  be moved to
definitions.cards_idList.properties.value.type: string
definitions.cards_idList.type: object
definitions.cards_idList.xml.name: card
definitions.cards_idMembers.properties.value.description: The id of the member to
  add to the card
definitions.cards_idMembers.properties.value.type: string
definitions.cards_idMembers.type: object
definitions.cards_idMembers.xml.name: card
definitions.cards_labels.properties.color.description: A valid label color or null
definitions.cards_labels.properties.color.type: string
definitions.cards_labels.properties.name.description: a string with a length from
  0 to 16384
definitions.cards_labels.properties.name.type: string
definitions.cards_labels.properties.value.description: 'all or a comma-separated list
  of: blue, green, orange, purple, red or yellow'
definitions.cards_labels.properties.value.type: string
definitions.cards_labels.type: object
definitions.cards_labels.xml.name: card
definitions.cards_membersVoted.properties.value.description: The id of the member
  to vote &#39;yes&#39; on the card
definitions.cards_membersVoted.properties.value.type: string
definitions.cards_membersVoted.type: object
definitions.cards_membersVoted.xml.name: card
definitions.cards_name.properties.value.description: a string with a length from 1
  to 16384
definitions.cards_name.properties.value.type: string
definitions.cards_name.type: object
definitions.cards_name.xml.name: card
definitions.cards_pos.properties.value.description: A position. top , bottom , or
  a positive number.
definitions.cards_pos.properties.value.type: string
definitions.cards_pos.type: object
definitions.cards_pos.xml.name: card
definitions.cards_stickers.properties.image.description: a string with a length from
  0 to 16384
definitions.cards_stickers.properties.image.type: string
definitions.cards_stickers.properties.left.description: undefined
definitions.cards_stickers.properties.left.type: string
definitions.cards_stickers.properties.rotate.description: undefined
definitions.cards_stickers.properties.rotate.type: string
definitions.cards_stickers.properties.top.description: undefined
definitions.cards_stickers.properties.top.type: string
definitions.cards_stickers.properties.zIndex.description: Valid Z values for stickers,
  must be an integer
definitions.cards_stickers.properties.zIndex.type: string
definitions.cards_stickers.type: object
definitions.cards_stickers.xml.name: card
definitions.cards_subscribed.properties.value.description: ' true or false'
definitions.cards_subscribed.properties.value.type: string
definitions.cards_subscribed.type: object
definitions.cards_subscribed.xml.name: card
definitions.checklists.properties.idBoard.description: id of the board that the checklist
  should be added to
definitions.checklists.properties.idBoard.type: string
definitions.checklists.properties.idCard.description: id of the card that the checklist
  should be added to
definitions.checklists.properties.idCard.type: string
definitions.checklists.properties.idChecklistSource.description: The id of the source
  checklist to copy into a new checklist.
definitions.checklists.properties.idChecklistSource.type: string
definitions.checklists.properties.name.description: a string with a length from 0
  to 16384
definitions.checklists.properties.name.type: string
definitions.checklists.properties.pos.description: A position. top , bottom , or a
  positive number.
definitions.checklists.properties.pos.type: string
definitions.checklists.type: object
definitions.checklists.xml.name: checklist
definitions.checklists_checkItems.properties.checked.description: ' true or false'
definitions.checklists_checkItems.properties.checked.type: string
definitions.checklists_checkItems.properties.name.description: a string with a length
  from 1 to 16384
definitions.checklists_checkItems.properties.name.type: string
definitions.checklists_checkItems.properties.pos.description: A position. top , bottom
  , or a positive number.
definitions.checklists_checkItems.properties.pos.type: string
definitions.checklists_checkItems.type: object
definitions.checklists_checkItems.xml.name: checklist
definitions.checklists_idCard.properties.value.description: The id of the card that
  the checklist is on
definitions.checklists_idCard.properties.value.type: string
definitions.checklists_idCard.type: object
definitions.checklists_idCard.xml.name: checklist
definitions.checklists_name.properties.value.description: a string with a length from
  1 to 16384
definitions.checklists_name.properties.value.type: string
definitions.checklists_name.type: object
definitions.checklists_name.xml.name: checklist
definitions.checklists_pos.properties.value.description: A position. top , bottom
  , or a positive number.
definitions.checklists_pos.properties.value.type: string
definitions.checklists_pos.type: object
definitions.checklists_pos.xml.name: checklist
definitions.labelNames_blue.properties.value.description: a string with a length from
  0 to 16384
definitions.labelNames_blue.properties.value.type: string
definitions.labelNames_blue.type: object
definitions.labelNames_blue.xml.name: board
definitions.labelNames_green.properties.value.description: a string with a length
  from 0 to 16384
definitions.labelNames_green.properties.value.type: string
definitions.labelNames_green.type: object
definitions.labelNames_green.xml.name: board
definitions.labelNames_orange.properties.value.description: a string with a length
  from 0 to 16384
definitions.labelNames_orange.properties.value.type: string
definitions.labelNames_orange.type: object
definitions.labelNames_orange.xml.name: board
definitions.labelNames_purple.properties.value.description: a string with a length
  from 0 to 16384
definitions.labelNames_purple.properties.value.type: string
definitions.labelNames_purple.type: object
definitions.labelNames_purple.xml.name: board
definitions.labelNames_red.properties.value.description: a string with a length from
  0 to 16384
definitions.labelNames_red.properties.value.type: string
definitions.labelNames_red.type: object
definitions.labelNames_red.xml.name: board
definitions.labelNames_yellow.properties.value.description: a string with a length
  from 0 to 16384
definitions.labelNames_yellow.properties.value.type: string
definitions.labelNames_yellow.type: object
definitions.labelNames_yellow.xml.name: board
definitions.labels.properties.color.description: A valid label color or null
definitions.labels.properties.color.type: string
definitions.labels.properties.idBoard.description: An id
definitions.labels.properties.idBoard.type: string
definitions.labels.properties.name.description: a string with a length from 0 to 16384
definitions.labels.properties.name.type: string
definitions.labels.type: object
definitions.labels.xml.name: label
definitions.labels_color.properties.value.description: A valid label color or null
definitions.labels_color.properties.value.type: string
definitions.labels_color.type: object
definitions.labels_color.xml.name: label
definitions.labels_name.properties.value.description: a string with a length from
  0 to 16384
definitions.labels_name.properties.value.type: string
definitions.labels_name.type: object
definitions.labels_name.xml.name: label
definitions.lists.properties.closed.description: ' true or false'
definitions.lists.properties.closed.type: string
definitions.lists.properties.idBoard.description: id of the board that the list should
  be added to
definitions.lists.properties.idBoard.type: string
definitions.lists.properties.idListSource.description: The id of the list to copy
  into a new list.
definitions.lists.properties.idListSource.type: string
definitions.lists.properties.name.description: a string with a length from 1 to 16384
definitions.lists.properties.name.type: string
definitions.lists.properties.pos.description: A position. top , bottom , or a positive
  number.
definitions.lists.properties.pos.type: string
definitions.lists.properties.subscribed.description: ' true or false'
definitions.lists.properties.subscribed.type: string
definitions.lists.type: object
definitions.lists.xml.name: list
definitions.lists_cards.properties.desc.description: a string with a length from 0
  to 16384
definitions.lists_cards.properties.desc.type: string
definitions.lists_cards.properties.due.description: A date, or null
definitions.lists_cards.properties.due.type: string
definitions.lists_cards.properties.idMembers.description: A comma-separated list of
  objectIds, 24-character hex strings
definitions.lists_cards.properties.idMembers.type: string
definitions.lists_cards.properties.labels.description: 'all or a comma-separated list
  of: blue, green, orange, purple, red or yellow'
definitions.lists_cards.properties.labels.type: string
definitions.lists_cards.properties.name.description: a string with a length from 1
  to 16384
definitions.lists_cards.properties.name.type: string
definitions.lists_cards.type: object
definitions.lists_cards.xml.name: list
definitions.lists_closed.properties.value.description: ' true or false'
definitions.lists_closed.properties.value.type: string
definitions.lists_closed.type: object
definitions.lists_closed.xml.name: list
definitions.lists_idBoard.properties.pos.description: position of the list on the
  new board
definitions.lists_idBoard.properties.pos.type: string
definitions.lists_idBoard.properties.value.description: id of the board the list should
  be moved to
definitions.lists_idBoard.properties.value.type: string
definitions.lists_idBoard.type: object
definitions.lists_idBoard.xml.name: list
definitions.lists_moveAllCards.properties.idBoard.description: id of the board that
  the cards should be moved to
definitions.lists_moveAllCards.properties.idBoard.type: string
definitions.lists_moveAllCards.type: object
definitions.lists_moveAllCards.xml.name: list
definitions.lists_name.properties.value.description: a string with a length from 1
  to 16384
definitions.lists_name.properties.value.type: string
definitions.lists_name.type: object
definitions.lists_name.xml.name: list
definitions.lists_pos.properties.value.description: A position. top , bottom , or
  a positive number.
definitions.lists_pos.properties.value.type: string
definitions.lists_pos.type: object
definitions.lists_pos.xml.name: list
definitions.lists_subscribed.properties.value.description: ' true or false'
definitions.lists_subscribed.properties.value.type: string
definitions.lists_subscribed.type: object
definitions.lists_subscribed.xml.name: list
definitions.members.properties.avatarSource.description: 'One of: gravatar, none or
  upload'
definitions.members.properties.avatarSource.type: string
definitions.members.properties.bio.description: a string with a length from 0 to 16384
definitions.members.properties.bio.type: string
definitions.members.properties.fullName.description: A string with a length of at
  least 1.  Cannot begin or end with a space.
definitions.members.properties.fullName.type: string
definitions.members.properties.initials.description: A string with a length from 1
  to 4.  Cannot begin or end with a space
definitions.members.properties.initials.type: string
definitions.members.properties.prefs/colorBlind.description: ' true or false'
definitions.members.properties.prefs/colorBlind.type: string
definitions.members.properties.prefs/locale.description: a string with a length from
  0 to 255
definitions.members.properties.prefs/locale.type: string
definitions.members.properties.prefs/minutesBetweenSummaries.description: -1 (disabled),
  1 or 60
definitions.members.properties.prefs/minutesBetweenSummaries.type: string
definitions.members.properties.username.description: A string with a length of at
  least 3.  Only lowercase letters, underscores, and numbers are allowed.  Must be
  unique.
definitions.members.properties.username.type: string
definitions.members.type: object
definitions.members.xml.name: member
definitions.members_avatar.properties.file.description: A file
definitions.members_avatar.properties.file.type: string
definitions.members_avatar.type: object
definitions.members_avatar.xml.name: member
definitions.members_avatarSource.properties.value.description: 'One of: gravatar,
  none or upload'
definitions.members_avatarSource.properties.value.type: string
definitions.members_avatarSource.type: object
definitions.members_avatarSource.xml.name: member
definitions.members_bio.properties.value.description: a string with a length from
  0 to 16384
definitions.members_bio.properties.value.type: string
definitions.members_bio.type: object
definitions.members_bio.xml.name: member
definitions.members_boardBackgrounds.properties.brightness.description: 'One of: dark,
  light or unknown'
definitions.members_boardBackgrounds.properties.brightness.type: string
definitions.members_boardBackgrounds.properties.file.description: A file
definitions.members_boardBackgrounds.properties.file.type: string
definitions.members_boardBackgrounds.properties.tile.description: ' true or false'
definitions.members_boardBackgrounds.properties.tile.type: string
definitions.members_boardBackgrounds.type: object
definitions.members_boardBackgrounds.xml.name: member
definitions.members_boardStars.properties.idBoard.description: The id of the board
  to star
definitions.members_boardStars.properties.idBoard.type: string
definitions.members_boardStars.properties.pos.description: A position. top , bottom
  , or a positive number.
definitions.members_boardStars.properties.pos.type: string
definitions.members_boardStars.type: object
definitions.members_boardStars.xml.name: member
definitions.members_boardStars_idBoard.properties.value.description: An id
definitions.members_boardStars_idBoard.properties.value.type: string
definitions.members_boardStars_idBoard.type: object
definitions.members_boardStars_idBoard.xml.name: member
definitions.members_boardStars_pos.properties.value.description: A position. top ,
  bottom , or a positive number.
definitions.members_boardStars_pos.properties.value.type: string
definitions.members_boardStars_pos.type: object
definitions.members_boardStars_pos.xml.name: member
definitions.members_customBoardBackgrounds.properties.brightness.description: 'One
  of: dark, light or unknown'
definitions.members_customBoardBackgrounds.properties.brightness.type: string
definitions.members_customBoardBackgrounds.properties.file.description: A file
definitions.members_customBoardBackgrounds.properties.file.type: string
definitions.members_customBoardBackgrounds.properties.tile.description: ' true or
  false'
definitions.members_customBoardBackgrounds.properties.tile.type: string
definitions.members_customBoardBackgrounds.type: object
definitions.members_customBoardBackgrounds.xml.name: member
definitions.members_customEmoji.properties.file.description: A file
definitions.members_customEmoji.properties.file.type: string
definitions.members_customEmoji.properties.name.description: a string with a length
  from 2 to 64
definitions.members_customEmoji.properties.name.type: string
definitions.members_customEmoji.type: object
definitions.members_customEmoji.xml.name: member
definitions.members_customStickers.properties.file.description: A file
definitions.members_customStickers.properties.file.type: string
definitions.members_customStickers.type: object
definitions.members_customStickers.xml.name: member
definitions.members_fullName.properties.value.description: A string with a length
  of at least 1.  Cannot begin or end with a space.
definitions.members_fullName.properties.value.type: string
definitions.members_fullName.type: object
definitions.members_fullName.xml.name: member
definitions.members_initials.properties.value.description: A string with a length
  from 1 to 4.  Cannot begin or end with a space
definitions.members_initials.properties.value.type: string
definitions.members_initials.type: object
definitions.members_initials.xml.name: member
definitions.members_oneTimeMessagesDismissed.properties.value.description: Type of
  message dismissed
definitions.members_oneTimeMessagesDismissed.properties.value.type: string
definitions.members_oneTimeMessagesDismissed.type: object
definitions.members_oneTimeMessagesDismissed.xml.name: member
definitions.members_savedSearches.properties.name.description: A non-empty string
  with at least one non-space character
definitions.members_savedSearches.properties.name.type: string
definitions.members_savedSearches.properties.pos.description: A position. top , bottom
  , or a positive number.
definitions.members_savedSearches.properties.pos.type: string
definitions.members_savedSearches.properties.query.description: a string with a length
  from 1 to 16384
definitions.members_savedSearches.properties.query.type: string
definitions.members_savedSearches.type: object
definitions.members_savedSearches.xml.name: member
definitions.members_savedSearches_name.properties.value.description: A non-empty string
  with at least one non-space character
definitions.members_savedSearches_name.properties.value.type: string
definitions.members_savedSearches_name.type: object
definitions.members_savedSearches_name.xml.name: member
definitions.members_savedSearches_pos.properties.value.description: A position. top
  , bottom , or a positive number.
definitions.members_savedSearches_pos.properties.value.type: string
definitions.members_savedSearches_pos.type: object
definitions.members_savedSearches_pos.xml.name: member
definitions.members_savedSearches_query.properties.value.description: a string with
  a length from 1 to 16384
definitions.members_savedSearches_query.properties.value.type: string
definitions.members_savedSearches_query.type: object
definitions.members_savedSearches_query.xml.name: member
definitions.members_username.properties.value.description: A string with a length
  of at least 3.  Only lowercase letters, underscores, and numbers are allowed.  Must
  be unique.
definitions.members_username.properties.value.type: string
definitions.members_username.type: object
definitions.members_username.xml.name: member
definitions.myPrefs_emailPosition.properties.value.description: 'One of: bottom or
  top'
definitions.myPrefs_emailPosition.properties.value.type: string
definitions.myPrefs_emailPosition.type: object
definitions.myPrefs_emailPosition.xml.name: board
definitions.myPrefs_idEmailList.properties.value.description: An id
definitions.myPrefs_idEmailList.properties.value.type: string
definitions.myPrefs_idEmailList.type: object
definitions.myPrefs_idEmailList.xml.name: board
definitions.myPrefs_showListGuide.properties.value.description: ' true or false'
definitions.myPrefs_showListGuide.properties.value.type: string
definitions.myPrefs_showListGuide.type: object
definitions.myPrefs_showListGuide.xml.name: board
definitions.myPrefs_showSidebar.properties.value.description: ' true or false'
definitions.myPrefs_showSidebar.properties.value.type: string
definitions.myPrefs_showSidebar.type: object
definitions.myPrefs_showSidebar.xml.name: board
definitions.myPrefs_showSidebarActivity.properties.value.description: ' true or false'
definitions.myPrefs_showSidebarActivity.properties.value.type: string
definitions.myPrefs_showSidebarActivity.type: object
definitions.myPrefs_showSidebarActivity.xml.name: board
definitions.myPrefs_showSidebarBoardActions.properties.value.description: ' true or
  false'
definitions.myPrefs_showSidebarBoardActions.properties.value.type: string
definitions.myPrefs_showSidebarBoardActions.type: object
definitions.myPrefs_showSidebarBoardActions.xml.name: board
definitions.myPrefs_showSidebarMembers.properties.value.description: ' true or false'
definitions.myPrefs_showSidebarMembers.properties.value.type: string
definitions.myPrefs_showSidebarMembers.type: object
definitions.myPrefs_showSidebarMembers.xml.name: board
definitions.notifications.properties.unread.description: ' true or false'
definitions.notifications.properties.unread.type: string
definitions.notifications.type: object
definitions.notifications.xml.name: notification
definitions.notifications_unread.properties.value.description: ' true or false'
definitions.notifications_unread.properties.value.type: string
definitions.notifications_unread.type: object
definitions.notifications_unread.xml.name: notification
definitions.organizations.properties.desc.description: a string with a length from
  0 to 16384
definitions.organizations.properties.desc.type: string
definitions.organizations.properties.displayName.description: A string with a length
  of at least 1.  Cannot begin or end with a space.
definitions.organizations.properties.displayName.type: string
definitions.organizations.properties.name.description: a string with a length from
  0 to 16384
definitions.organizations.properties.name.type: string
definitions.organizations.properties.prefs/associatedDomain.description: The google
  apps domain to link this org to.
definitions.organizations.properties.prefs/associatedDomain.type: string
definitions.organizations.properties.prefs/boardVisibilityRestrict/org.description: 'One
  of: admin, none or org'
definitions.organizations.properties.prefs/boardVisibilityRestrict/org.type: string
definitions.organizations.properties.prefs/boardVisibilityRestrict/private.description: 'One
  of: admin, none or org'
definitions.organizations.properties.prefs/boardVisibilityRestrict/private.type: string
definitions.organizations.properties.prefs/boardVisibilityRestrict/public.description: 'One
  of: admin, none or org'
definitions.organizations.properties.prefs/boardVisibilityRestrict/public.type: string
definitions.organizations.properties.prefs/externalMembersDisabled.description: ' true
  or false'
definitions.organizations.properties.prefs/externalMembersDisabled.type: string
definitions.organizations.properties.prefs/googleAppsVersion.description: a number
  from 1 to 2
definitions.organizations.properties.prefs/googleAppsVersion.type: string
definitions.organizations.properties.prefs/orgInviteRestrict.description: An email
  address with optional expansion tokens
definitions.organizations.properties.prefs/orgInviteRestrict.type: string
definitions.organizations.properties.prefs/permissionLevel.description: 'One of: private
  or public'
definitions.organizations.properties.prefs/permissionLevel.type: string
definitions.organizations.properties.website.description: A URL starting with http://
  or https:// or null
definitions.organizations.properties.website.type: string
definitions.organizations.type: object
definitions.organizations.xml.name: organization
definitions.organizations_desc.properties.value.description: a string with a length
  from 0 to 16384
definitions.organizations_desc.properties.value.type: string
definitions.organizations_desc.type: object
definitions.organizations_desc.xml.name: organization
definitions.organizations_displayName.properties.value.description: A string with
  a length of at least 1.  Cannot begin or end with a space.
definitions.organizations_displayName.properties.value.type: string
definitions.organizations_displayName.type: object
definitions.organizations_displayName.xml.name: organization
definitions.organizations_logo.properties.file.description: A file
definitions.organizations_logo.properties.file.type: string
definitions.organizations_logo.type: object
definitions.organizations_logo.xml.name: organization
definitions.organizations_members.properties.email.description: An email address
definitions.organizations_members.properties.email.type: string
definitions.organizations_members.properties.fullName.description: A string with a
  length of at least 1.  Cannot begin or end with a space.
definitions.organizations_members.properties.fullName.type: string
definitions.organizations_members.properties.type.description: 'One of: admin, normal
  or observer'
definitions.organizations_members.properties.type.type: string
definitions.organizations_members.type: object
definitions.organizations_members.xml.name: organization
definitions.organizations_members_deactivated.properties.value.description: ' true
  or false'
definitions.organizations_members_deactivated.properties.value.type: string
definitions.organizations_members_deactivated.type: object
definitions.organizations_members_deactivated.xml.name: organization
definitions.organizations_memberships.properties.member_fields.description: 'all or
  a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin,
  initials, memberType, products, status, url or username'
definitions.organizations_memberships.properties.member_fields.type: string
definitions.organizations_memberships.properties.type.description: 'One of: admin,
  normal or observer'
definitions.organizations_memberships.properties.type.type: string
definitions.organizations_memberships.type: object
definitions.organizations_memberships.xml.name: organization
definitions.organizations_name.properties.value.description: A string with a length
  of at least 3.  Only lowercase letters, underscores, and numbers are allowed.  Must
  be unique.
definitions.organizations_name.properties.value.type: string
definitions.organizations_name.type: object
definitions.organizations_name.xml.name: organization
definitions.organizations_website.properties.value.description: A URL starting with
  http:// or https:// or null
definitions.organizations_website.properties.value.type: string
definitions.organizations_website.type: object
definitions.organizations_website.xml.name: organization
definitions.prefs_associatedDomain.properties.value.description: The google apps domain
  to link this org to.
definitions.prefs_associatedDomain.properties.value.type: string
definitions.prefs_associatedDomain.type: object
definitions.prefs_associatedDomain.xml.name: organization
definitions.prefs_background.properties.value.description: A standard background name,
  or the id of a custom background
definitions.prefs_background.properties.value.type: string
definitions.prefs_background.type: object
definitions.prefs_background.xml.name: board
definitions.prefs_boardVisibilityRestrict.properties.value.description: 'One of: admin,
  none or org'
definitions.prefs_boardVisibilityRestrict.properties.value.type: string
definitions.prefs_boardVisibilityRestrict.type: object
definitions.prefs_boardVisibilityRestrict.xml.name: organization
definitions.prefs_calendarFeedEnabled.properties.value.description: ' true or false'
definitions.prefs_calendarFeedEnabled.properties.value.type: string
definitions.prefs_calendarFeedEnabled.type: object
definitions.prefs_calendarFeedEnabled.xml.name: board
definitions.prefs_cardAging.properties.value.description: 'One of: pirate or regular'
definitions.prefs_cardAging.properties.value.type: string
definitions.prefs_cardAging.type: object
definitions.prefs_cardAging.xml.name: board
definitions.prefs_cardCovers.properties.value.description: ' true or false'
definitions.prefs_cardCovers.properties.value.type: string
definitions.prefs_cardCovers.type: object
definitions.prefs_cardCovers.xml.name: board
definitions.prefs_colorBlind.properties.value.description: ' true or false'
definitions.prefs_colorBlind.properties.value.type: string
definitions.prefs_colorBlind.type: object
definitions.prefs_colorBlind.xml.name: member
definitions.prefs_comments.properties.value.description: 'One of: disabled, members,
  observers, org or public'
definitions.prefs_comments.properties.value.type: string
definitions.prefs_comments.type: object
definitions.prefs_comments.xml.name: board
definitions.prefs_externalMembersDisabled.properties.value.description: ' true or
  false'
definitions.prefs_externalMembersDisabled.properties.value.type: string
definitions.prefs_externalMembersDisabled.type: object
definitions.prefs_externalMembersDisabled.xml.name: organization
definitions.prefs_googleAppsVersion.properties.value.description: a number from 1
  to 2
definitions.prefs_googleAppsVersion.properties.value.type: string
definitions.prefs_googleAppsVersion.type: object
definitions.prefs_googleAppsVersion.xml.name: organization
definitions.prefs_invitations.properties.value.description: 'One of: admins or members'
definitions.prefs_invitations.properties.value.type: string
definitions.prefs_invitations.type: object
definitions.prefs_invitations.xml.name: board
definitions.prefs_locale.properties.value.description: a string with a length from
  0 to 255
definitions.prefs_locale.properties.value.type: string
definitions.prefs_locale.type: object
definitions.prefs_locale.xml.name: member
definitions.prefs_minutesBetweenSummaries.properties.value.description: -1 (disabled),
  1 or 60
definitions.prefs_minutesBetweenSummaries.properties.value.type: string
definitions.prefs_minutesBetweenSummaries.type: object
definitions.prefs_minutesBetweenSummaries.xml.name: member
definitions.prefs_orgInviteRestrict.properties.value.description: An email address
  with optional expansion tokens
definitions.prefs_orgInviteRestrict.properties.value.type: string
definitions.prefs_orgInviteRestrict.type: object
definitions.prefs_orgInviteRestrict.xml.name: organization
definitions.prefs_permissionLevel.properties.value.description: 'One of: private or
  public'
definitions.prefs_permissionLevel.properties.value.type: string
definitions.prefs_permissionLevel.type: object
definitions.prefs_permissionLevel.xml.name: board
definitions.prefs_selfJoin.properties.value.description: ' true or false'
definitions.prefs_selfJoin.properties.value.type: string
definitions.prefs_selfJoin.type: object
definitions.prefs_selfJoin.xml.name: board
definitions.prefs_voting.properties.value.description: 'One of: disabled, members,
  observers, org or public'
definitions.prefs_voting.properties.value.type: string
definitions.prefs_voting.type: object
definitions.prefs_voting.xml.name: board
definitions.sessions.properties.idBoard.description: The id of the board you&#39;re
  viewing.  Boards with no viewers will not get updates about members&#39; statuses.
definitions.sessions.properties.idBoard.type: string
definitions.sessions.properties.status.description: 'One of: active, disconnected
  or idle'
definitions.sessions.properties.status.type: string
definitions.sessions.type: object
definitions.sessions.xml.name: session
definitions.sessions_status.properties.value.description: 'One of: active, disconnected
  or idle'
definitions.sessions_status.properties.value.type: string
definitions.sessions_status.type: object
definitions.sessions_status.xml.name: session
definitions.tokens_webhooks.properties.callbackURL.description: A valid URL that is
  reachable with a HEAD request
definitions.tokens_webhooks.properties.callbackURL.type: string
definitions.tokens_webhooks.properties.description.description: a string with a length
  from 0 to 16384
definitions.tokens_webhooks.properties.description.type: string
definitions.tokens_webhooks.properties.idModel.description: id of the model to be
  monitored
definitions.tokens_webhooks.properties.idModel.type: string
definitions.tokens_webhooks.type: object
definitions.tokens_webhooks.xml.name: token
definitions.webhooks.properties.active.description: ' true or false'
definitions.webhooks.properties.active.type: string
definitions.webhooks.properties.callbackURL.description: A valid URL that is reachable
  with a HEAD request
definitions.webhooks.properties.callbackURL.type: string
definitions.webhooks.properties.description.description: a string with a length from
  0 to 16384
definitions.webhooks.properties.description.type: string
definitions.webhooks.properties.idModel.description: id of the model that should be
  hooked
definitions.webhooks.properties.idModel.type: string
definitions.webhooks.type: object
definitions.webhooks.xml.name: webhook
definitions.webhooks_active.properties.value.description: ' true or false'
definitions.webhooks_active.properties.value.type: string
definitions.webhooks_active.type: object
definitions.webhooks_active.xml.name: webhook
definitions.webhooks_callbackURL.properties.value.description: A valid URL that is
  reachable with a HEAD request
definitions.webhooks_callbackURL.properties.value.type: string
definitions.webhooks_callbackURL.type: object
definitions.webhooks_callbackURL.xml.name: webhook
definitions.webhooks_description.properties.value.description: a string with a length
  from 0 to 16384
definitions.webhooks_description.properties.value.type: string
definitions.webhooks_description.type: object
definitions.webhooks_description.xml.name: webhook
definitions.webhooks_idModel.properties.value.description: id of the model to be monitored
definitions.webhooks_idModel.properties.value.type: string
definitions.webhooks_idModel.type: object
definitions.webhooks_idModel.xml.name: webhook
externalDocs.url: https://developers.trello.com
host: trello.com
info.contact.name: Trello
info.contact.url: https://trello.com/home
info.description: |-
  This document describes the REST API of Trello as published by Trello.com.
   - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>
   - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
info.license.name: 'Trello : Terms of Service'
info.license.url: https://trello.com/legal
info.termsOfService: https://trello.com/legal
info.title: Trello
info.version: "1.0"
info.x-apisguru-categories.length: 1
info.x-apisguru-categories[0]: collaboration
info.x-logo.url: https://api.apis.guru/v2/cache/logo/https_d2k1ftgv7pobq7.cloudfront.net_meta_p_res_images_c13d1cd96a2cff30f0460a5e1860c5ea_header-logo-blue.svg
info.x-origin.length: 1
info.x-origin[0].format: swagger
info.x-origin[0].url: https://raw.githubusercontent.com/APIs-guru/unofficial_openapi_specs/master/trello.com/1.0/swagger.yaml
info.x-origin[0].version: "2.0"
info.x-preferred: true
info.x-providerName: trello.com
info.x-unofficialSpec: true
paths./actions/{idAction}.delete.operationId: deleteActionsByIdAction
paths./actions/{idAction}.delete.parameters.length: 3
paths./actions/{idAction}.delete.parameters[0].description: idAction
paths./actions/{idAction}.delete.parameters[0].in: path
paths./actions/{idAction}.delete.parameters[0].name: idAction
paths./actions/{idAction}.delete.parameters[0].required: true
paths./actions/{idAction}.delete.parameters[0].type: string
paths./actions/{idAction}.delete.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./actions/{idAction}.delete.parameters[1].in: query
paths./actions/{idAction}.delete.parameters[1].name: key
paths./actions/{idAction}.delete.parameters[1].required: true
paths./actions/{idAction}.delete.parameters[1].type: string
paths./actions/{idAction}.delete.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./actions/{idAction}.delete.parameters[2].in: query
paths./actions/{idAction}.delete.parameters[2].name: token
paths./actions/{idAction}.delete.parameters[2].required: true
paths./actions/{idAction}.delete.parameters[2].type: string
paths./actions/{idAction}.delete.responses.200.description: Success
paths./actions/{idAction}.delete.responses.400.description: Server rejection
paths./actions/{idAction}.delete.security.length: 2
paths./actions/{idAction}.delete.security[0].api_key.length: 0
paths./actions/{idAction}.delete.security[1].api_token.length: 0
paths./actions/{idAction}.delete.summary: deleteActionsByIdAction()
paths./actions/{idAction}.delete.tags.length: 1
paths./actions/{idAction}.delete.tags[0]: action
paths./actions/{idAction}.get.operationId: getActionsByIdAction
paths./actions/{idAction}.get.parameters.length: 10
paths./actions/{idAction}.get.parameters[0].description: idAction
paths./actions/{idAction}.get.parameters[0].in: path
paths./actions/{idAction}.get.parameters[0].name: idAction
paths./actions/{idAction}.get.parameters[0].required: true
paths./actions/{idAction}.get.parameters[0].type: string
paths./actions/{idAction}.get.parameters[1].description: ' true or false'
paths./actions/{idAction}.get.parameters[1].in: query
paths./actions/{idAction}.get.parameters[1].name: display
paths./actions/{idAction}.get.parameters[1].required: false
paths./actions/{idAction}.get.parameters[1].type: string
paths./actions/{idAction}.get.parameters[2].description: ' true or false'
paths./actions/{idAction}.get.parameters[2].in: query
paths./actions/{idAction}.get.parameters[2].name: entities
paths./actions/{idAction}.get.parameters[2].required: false
paths./actions/{idAction}.get.parameters[2].type: string
paths./actions/{idAction}.get.parameters[3].default: all
paths./actions/{idAction}.get.parameters[3].description: 'all or a comma-separated
  list of: data, date, idMemberCreator or type'
paths./actions/{idAction}.get.parameters[3].in: query
paths./actions/{idAction}.get.parameters[3].name: fields
paths./actions/{idAction}.get.parameters[3].required: false
paths./actions/{idAction}.get.parameters[3].type: string
paths./actions/{idAction}.get.parameters[4].description: ' true or false'
paths./actions/{idAction}.get.parameters[4].in: query
paths./actions/{idAction}.get.parameters[4].name: member
paths./actions/{idAction}.get.parameters[4].required: false
paths./actions/{idAction}.get.parameters[4].type: string
paths./actions/{idAction}.get.parameters[5].default: avatarHash, fullName, initials
  and username
paths./actions/{idAction}.get.parameters[5].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./actions/{idAction}.get.parameters[5].in: query
paths./actions/{idAction}.get.parameters[5].name: member_fields
paths./actions/{idAction}.get.parameters[5].required: false
paths./actions/{idAction}.get.parameters[5].type: string
paths./actions/{idAction}.get.parameters[6].description: ' true or false'
paths./actions/{idAction}.get.parameters[6].in: query
paths./actions/{idAction}.get.parameters[6].name: memberCreator
paths./actions/{idAction}.get.parameters[6].required: false
paths./actions/{idAction}.get.parameters[6].type: string
paths./actions/{idAction}.get.parameters[7].default: avatarHash, fullName, initials
  and username
paths./actions/{idAction}.get.parameters[7].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./actions/{idAction}.get.parameters[7].in: query
paths./actions/{idAction}.get.parameters[7].name: memberCreator_fields
paths./actions/{idAction}.get.parameters[7].required: false
paths./actions/{idAction}.get.parameters[7].type: string
paths./actions/{idAction}.get.parameters[8].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./actions/{idAction}.get.parameters[8].in: query
paths./actions/{idAction}.get.parameters[8].name: key
paths./actions/{idAction}.get.parameters[8].required: true
paths./actions/{idAction}.get.parameters[8].type: string
paths./actions/{idAction}.get.parameters[9].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./actions/{idAction}.get.parameters[9].in: query
paths./actions/{idAction}.get.parameters[9].name: token
paths./actions/{idAction}.get.parameters[9].required: true
paths./actions/{idAction}.get.parameters[9].type: string
paths./actions/{idAction}.get.responses.200.description: Success
paths./actions/{idAction}.get.responses.400.description: Server rejection
paths./actions/{idAction}.get.security.length: 2
paths./actions/{idAction}.get.security[0].api_key.length: 0
paths./actions/{idAction}.get.security[1].api_token.length: 0
paths./actions/{idAction}.get.summary: getActionsByIdAction()
paths./actions/{idAction}.get.tags.length: 1
paths./actions/{idAction}.get.tags[0]: action
paths./actions/{idAction}.put.operationId: updateActionsByIdAction
paths./actions/{idAction}.put.parameters.length: 4
paths./actions/{idAction}.put.parameters[0].description: idAction
paths./actions/{idAction}.put.parameters[0].in: path
paths./actions/{idAction}.put.parameters[0].name: idAction
paths./actions/{idAction}.put.parameters[0].required: true
paths./actions/{idAction}.put.parameters[0].type: string
paths./actions/{idAction}.put.parameters[1].description: Attributes of "Actions" to
  be updated.
paths./actions/{idAction}.put.parameters[1].in: body
paths./actions/{idAction}.put.parameters[1].name: body
paths./actions/{idAction}.put.parameters[1].required: true
paths./actions/{idAction}.put.parameters[1].schema.$ref: '#/definitions/actions'
paths./actions/{idAction}.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./actions/{idAction}.put.parameters[2].in: query
paths./actions/{idAction}.put.parameters[2].name: key
paths./actions/{idAction}.put.parameters[2].required: true
paths./actions/{idAction}.put.parameters[2].type: string
paths./actions/{idAction}.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./actions/{idAction}.put.parameters[3].in: query
paths./actions/{idAction}.put.parameters[3].name: token
paths./actions/{idAction}.put.parameters[3].required: true
paths./actions/{idAction}.put.parameters[3].type: string
paths./actions/{idAction}.put.responses.200.description: Success
paths./actions/{idAction}.put.responses.400.description: Server rejection
paths./actions/{idAction}.put.security.length: 2
paths./actions/{idAction}.put.security[0].api_key.length: 0
paths./actions/{idAction}.put.security[1].api_token.length: 0
paths./actions/{idAction}.put.summary: updateActionsByIdAction()
paths./actions/{idAction}.put.tags.length: 1
paths./actions/{idAction}.put.tags[0]: action
paths./actions/{idAction}/{field}.get.operationId: getActionsByIdActionByField
paths./actions/{idAction}/{field}.get.parameters.length: 4
paths./actions/{idAction}/{field}.get.parameters[0].description: idAction
paths./actions/{idAction}/{field}.get.parameters[0].in: path
paths./actions/{idAction}/{field}.get.parameters[0].name: idAction
paths./actions/{idAction}/{field}.get.parameters[0].required: true
paths./actions/{idAction}/{field}.get.parameters[0].type: string
paths./actions/{idAction}/{field}.get.parameters[1].description: field
paths./actions/{idAction}/{field}.get.parameters[1].in: path
paths./actions/{idAction}/{field}.get.parameters[1].name: field
paths./actions/{idAction}/{field}.get.parameters[1].required: true
paths./actions/{idAction}/{field}.get.parameters[1].type: string
paths./actions/{idAction}/{field}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./actions/{idAction}/{field}.get.parameters[2].in: query
paths./actions/{idAction}/{field}.get.parameters[2].name: key
paths./actions/{idAction}/{field}.get.parameters[2].required: true
paths./actions/{idAction}/{field}.get.parameters[2].type: string
paths./actions/{idAction}/{field}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./actions/{idAction}/{field}.get.parameters[3].in: query
paths./actions/{idAction}/{field}.get.parameters[3].name: token
paths./actions/{idAction}/{field}.get.parameters[3].required: true
paths./actions/{idAction}/{field}.get.parameters[3].type: string
paths./actions/{idAction}/{field}.get.responses.200.description: Success
paths./actions/{idAction}/{field}.get.responses.400.description: Server rejection
paths./actions/{idAction}/{field}.get.summary: getActionsByIdActionByField()
paths./actions/{idAction}/{field}.get.tags.length: 1
paths./actions/{idAction}/{field}.get.tags[0]: action
paths./actions/{idAction}/board.get.operationId: getActionsBoardByIdAction
paths./actions/{idAction}/board.get.parameters.length: 4
paths./actions/{idAction}/board.get.parameters[0].description: idAction
paths./actions/{idAction}/board.get.parameters[0].in: path
paths./actions/{idAction}/board.get.parameters[0].name: idAction
paths./actions/{idAction}/board.get.parameters[0].required: true
paths./actions/{idAction}/board.get.parameters[0].type: string
paths./actions/{idAction}/board.get.parameters[1].default: all
paths./actions/{idAction}/board.get.parameters[1].description: 'all or a comma-separated
  list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization,
  invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
  shortUrl, starred, subscribed or url'
paths./actions/{idAction}/board.get.parameters[1].in: query
paths./actions/{idAction}/board.get.parameters[1].name: fields
paths./actions/{idAction}/board.get.parameters[1].required: false
paths./actions/{idAction}/board.get.parameters[1].type: string
paths./actions/{idAction}/board.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./actions/{idAction}/board.get.parameters[2].in: query
paths./actions/{idAction}/board.get.parameters[2].name: key
paths./actions/{idAction}/board.get.parameters[2].required: true
paths./actions/{idAction}/board.get.parameters[2].type: string
paths./actions/{idAction}/board.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./actions/{idAction}/board.get.parameters[3].in: query
paths./actions/{idAction}/board.get.parameters[3].name: token
paths./actions/{idAction}/board.get.parameters[3].required: true
paths./actions/{idAction}/board.get.parameters[3].type: string
paths./actions/{idAction}/board.get.responses.200.description: Success
paths./actions/{idAction}/board.get.responses.400.description: Server rejection
paths./actions/{idAction}/board.get.security.length: 2
paths./actions/{idAction}/board.get.security[0].api_key.length: 0
paths./actions/{idAction}/board.get.security[1].api_token.length: 0
paths./actions/{idAction}/board.get.summary: getActionsBoardByIdAction()
paths./actions/{idAction}/board.get.tags.length: 1
paths./actions/{idAction}/board.get.tags[0]: action
paths./actions/{idAction}/board/{field}.get.operationId: getActionsBoardByIdActionByField
paths./actions/{idAction}/board/{field}.get.parameters.length: 4
paths./actions/{idAction}/board/{field}.get.parameters[0].description: idAction
paths./actions/{idAction}/board/{field}.get.parameters[0].in: path
paths./actions/{idAction}/board/{field}.get.parameters[0].name: idAction
paths./actions/{idAction}/board/{field}.get.parameters[0].required: true
paths./actions/{idAction}/board/{field}.get.parameters[0].type: string
paths./actions/{idAction}/board/{field}.get.parameters[1].description: field
paths./actions/{idAction}/board/{field}.get.parameters[1].in: path
paths./actions/{idAction}/board/{field}.get.parameters[1].name: field
paths./actions/{idAction}/board/{field}.get.parameters[1].required: true
paths./actions/{idAction}/board/{field}.get.parameters[1].type: string
paths./actions/{idAction}/board/{field}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./actions/{idAction}/board/{field}.get.parameters[2].in: query
paths./actions/{idAction}/board/{field}.get.parameters[2].name: key
paths./actions/{idAction}/board/{field}.get.parameters[2].required: true
paths./actions/{idAction}/board/{field}.get.parameters[2].type: string
paths./actions/{idAction}/board/{field}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./actions/{idAction}/board/{field}.get.parameters[3].in: query
paths./actions/{idAction}/board/{field}.get.parameters[3].name: token
paths./actions/{idAction}/board/{field}.get.parameters[3].required: true
paths./actions/{idAction}/board/{field}.get.parameters[3].type: string
paths./actions/{idAction}/board/{field}.get.responses.200.description: Success
paths./actions/{idAction}/board/{field}.get.responses.400.description: Server rejection
paths./actions/{idAction}/board/{field}.get.security.length: 2
paths./actions/{idAction}/board/{field}.get.security[0].api_key.length: 0
paths./actions/{idAction}/board/{field}.get.security[1].api_token.length: 0
paths./actions/{idAction}/board/{field}.get.summary: getActionsBoardByIdActionByField()
paths./actions/{idAction}/board/{field}.get.tags.length: 1
paths./actions/{idAction}/board/{field}.get.tags[0]: action
paths./actions/{idAction}/card.get.operationId: getActionsCardByIdAction
paths./actions/{idAction}/card.get.parameters.length: 4
paths./actions/{idAction}/card.get.parameters[0].description: idAction
paths./actions/{idAction}/card.get.parameters[0].in: path
paths./actions/{idAction}/card.get.parameters[0].name: idAction
paths./actions/{idAction}/card.get.parameters[0].required: true
paths./actions/{idAction}/card.get.parameters[0].type: string
paths./actions/{idAction}/card.get.parameters[1].default: all
paths./actions/{idAction}/card.get.parameters[1].description: 'all or a comma-separated
  list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due,
  email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
  idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed
  or url'
paths./actions/{idAction}/card.get.parameters[1].in: query
paths./actions/{idAction}/card.get.parameters[1].name: fields
paths./actions/{idAction}/card.get.parameters[1].required: false
paths./actions/{idAction}/card.get.parameters[1].type: string
paths./actions/{idAction}/card.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./actions/{idAction}/card.get.parameters[2].in: query
paths./actions/{idAction}/card.get.parameters[2].name: key
paths./actions/{idAction}/card.get.parameters[2].required: true
paths./actions/{idAction}/card.get.parameters[2].type: string
paths./actions/{idAction}/card.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./actions/{idAction}/card.get.parameters[3].in: query
paths./actions/{idAction}/card.get.parameters[3].name: token
paths./actions/{idAction}/card.get.parameters[3].required: true
paths./actions/{idAction}/card.get.parameters[3].type: string
paths./actions/{idAction}/card.get.responses.200.description: Success
paths./actions/{idAction}/card.get.responses.400.description: Server rejection
paths./actions/{idAction}/card.get.security.length: 2
paths./actions/{idAction}/card.get.security[0].api_key.length: 0
paths./actions/{idAction}/card.get.security[1].api_token.length: 0
paths./actions/{idAction}/card.get.summary: getActionsCardByIdAction()
paths./actions/{idAction}/card.get.tags.length: 1
paths./actions/{idAction}/card.get.tags[0]: action
paths./actions/{idAction}/card/{field}.get.operationId: getActionsCardByIdActionByField
paths./actions/{idAction}/card/{field}.get.parameters.length: 4
paths./actions/{idAction}/card/{field}.get.parameters[0].description: idAction
paths./actions/{idAction}/card/{field}.get.parameters[0].in: path
paths./actions/{idAction}/card/{field}.get.parameters[0].name: idAction
paths./actions/{idAction}/card/{field}.get.parameters[0].required: true
paths./actions/{idAction}/card/{field}.get.parameters[0].type: string
paths./actions/{idAction}/card/{field}.get.parameters[1].description: field
paths./actions/{idAction}/card/{field}.get.parameters[1].in: path
paths./actions/{idAction}/card/{field}.get.parameters[1].name: field
paths./actions/{idAction}/card/{field}.get.parameters[1].required: true
paths./actions/{idAction}/card/{field}.get.parameters[1].type: string
paths./actions/{idAction}/card/{field}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./actions/{idAction}/card/{field}.get.parameters[2].in: query
paths./actions/{idAction}/card/{field}.get.parameters[2].name: key
paths./actions/{idAction}/card/{field}.get.parameters[2].required: true
paths./actions/{idAction}/card/{field}.get.parameters[2].type: string
paths./actions/{idAction}/card/{field}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./actions/{idAction}/card/{field}.get.parameters[3].in: query
paths./actions/{idAction}/card/{field}.get.parameters[3].name: token
paths./actions/{idAction}/card/{field}.get.parameters[3].required: true
paths./actions/{idAction}/card/{field}.get.parameters[3].type: string
paths./actions/{idAction}/card/{field}.get.responses.200.description: Success
paths./actions/{idAction}/card/{field}.get.responses.400.description: Server rejection
paths./actions/{idAction}/card/{field}.get.security.length: 2
paths./actions/{idAction}/card/{field}.get.security[0].api_key.length: 0
paths./actions/{idAction}/card/{field}.get.security[1].api_token.length: 0
paths./actions/{idAction}/card/{field}.get.summary: getActionsCardByIdActionByField()
paths./actions/{idAction}/card/{field}.get.tags.length: 1
paths./actions/{idAction}/card/{field}.get.tags[0]: action
paths./actions/{idAction}/display.get.operationId: getActionsDisplayByIdAction
paths./actions/{idAction}/display.get.parameters.length: 3
paths./actions/{idAction}/display.get.parameters[0].description: idAction
paths./actions/{idAction}/display.get.parameters[0].in: path
paths./actions/{idAction}/display.get.parameters[0].name: idAction
paths./actions/{idAction}/display.get.parameters[0].required: true
paths./actions/{idAction}/display.get.parameters[0].type: string
paths./actions/{idAction}/display.get.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./actions/{idAction}/display.get.parameters[1].in: query
paths./actions/{idAction}/display.get.parameters[1].name: key
paths./actions/{idAction}/display.get.parameters[1].required: true
paths./actions/{idAction}/display.get.parameters[1].type: string
paths./actions/{idAction}/display.get.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./actions/{idAction}/display.get.parameters[2].in: query
paths./actions/{idAction}/display.get.parameters[2].name: token
paths./actions/{idAction}/display.get.parameters[2].required: true
paths./actions/{idAction}/display.get.parameters[2].type: string
paths./actions/{idAction}/display.get.responses.200.description: Success
paths./actions/{idAction}/display.get.responses.400.description: Server rejection
paths./actions/{idAction}/display.get.security.length: 2
paths./actions/{idAction}/display.get.security[0].api_key.length: 0
paths./actions/{idAction}/display.get.security[1].api_token.length: 0
paths./actions/{idAction}/display.get.summary: getActionsDisplayByIdAction()
paths./actions/{idAction}/display.get.tags.length: 1
paths./actions/{idAction}/display.get.tags[0]: action
paths./actions/{idAction}/entities.get.operationId: getActionsEntitiesByIdAction
paths./actions/{idAction}/entities.get.parameters.length: 3
paths./actions/{idAction}/entities.get.parameters[0].description: idAction
paths./actions/{idAction}/entities.get.parameters[0].in: path
paths./actions/{idAction}/entities.get.parameters[0].name: idAction
paths./actions/{idAction}/entities.get.parameters[0].required: true
paths./actions/{idAction}/entities.get.parameters[0].type: string
paths./actions/{idAction}/entities.get.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./actions/{idAction}/entities.get.parameters[1].in: query
paths./actions/{idAction}/entities.get.parameters[1].name: key
paths./actions/{idAction}/entities.get.parameters[1].required: true
paths./actions/{idAction}/entities.get.parameters[1].type: string
paths./actions/{idAction}/entities.get.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./actions/{idAction}/entities.get.parameters[2].in: query
paths./actions/{idAction}/entities.get.parameters[2].name: token
paths./actions/{idAction}/entities.get.parameters[2].required: true
paths./actions/{idAction}/entities.get.parameters[2].type: string
paths./actions/{idAction}/entities.get.responses.200.description: Success
paths./actions/{idAction}/entities.get.responses.400.description: Server rejection
paths./actions/{idAction}/entities.get.security.length: 2
paths./actions/{idAction}/entities.get.security[0].api_key.length: 0
paths./actions/{idAction}/entities.get.security[1].api_token.length: 0
paths./actions/{idAction}/entities.get.summary: getActionsEntitiesByIdAction()
paths./actions/{idAction}/entities.get.tags.length: 1
paths./actions/{idAction}/entities.get.tags[0]: action
paths./actions/{idAction}/list.get.operationId: getActionsListByIdAction
paths./actions/{idAction}/list.get.parameters.length: 4
paths./actions/{idAction}/list.get.parameters[0].description: idAction
paths./actions/{idAction}/list.get.parameters[0].in: path
paths./actions/{idAction}/list.get.parameters[0].name: idAction
paths./actions/{idAction}/list.get.parameters[0].required: true
paths./actions/{idAction}/list.get.parameters[0].type: string
paths./actions/{idAction}/list.get.parameters[1].default: all
paths./actions/{idAction}/list.get.parameters[1].description: 'all or a comma-separated
  list of: closed, idBoard, name, pos or subscribed'
paths./actions/{idAction}/list.get.parameters[1].in: query
paths./actions/{idAction}/list.get.parameters[1].name: fields
paths./actions/{idAction}/list.get.parameters[1].required: false
paths./actions/{idAction}/list.get.parameters[1].type: string
paths./actions/{idAction}/list.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./actions/{idAction}/list.get.parameters[2].in: query
paths./actions/{idAction}/list.get.parameters[2].name: key
paths./actions/{idAction}/list.get.parameters[2].required: true
paths./actions/{idAction}/list.get.parameters[2].type: string
paths./actions/{idAction}/list.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./actions/{idAction}/list.get.parameters[3].in: query
paths./actions/{idAction}/list.get.parameters[3].name: token
paths./actions/{idAction}/list.get.parameters[3].required: true
paths./actions/{idAction}/list.get.parameters[3].type: string
paths./actions/{idAction}/list.get.responses.200.description: Success
paths./actions/{idAction}/list.get.responses.400.description: Server rejection
paths./actions/{idAction}/list.get.security.length: 2
paths./actions/{idAction}/list.get.security[0].api_key.length: 0
paths./actions/{idAction}/list.get.security[1].api_token.length: 0
paths./actions/{idAction}/list.get.summary: getActionsListByIdAction()
paths./actions/{idAction}/list.get.tags.length: 1
paths./actions/{idAction}/list.get.tags[0]: action
paths./actions/{idAction}/list/{field}.get.operationId: getActionsListByIdActionByField
paths./actions/{idAction}/list/{field}.get.parameters.length: 4
paths./actions/{idAction}/list/{field}.get.parameters[0].description: idAction
paths./actions/{idAction}/list/{field}.get.parameters[0].in: path
paths./actions/{idAction}/list/{field}.get.parameters[0].name: idAction
paths./actions/{idAction}/list/{field}.get.parameters[0].required: true
paths./actions/{idAction}/list/{field}.get.parameters[0].type: string
paths./actions/{idAction}/list/{field}.get.parameters[1].description: field
paths./actions/{idAction}/list/{field}.get.parameters[1].in: path
paths./actions/{idAction}/list/{field}.get.parameters[1].name: field
paths./actions/{idAction}/list/{field}.get.parameters[1].required: true
paths./actions/{idAction}/list/{field}.get.parameters[1].type: string
paths./actions/{idAction}/list/{field}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./actions/{idAction}/list/{field}.get.parameters[2].in: query
paths./actions/{idAction}/list/{field}.get.parameters[2].name: key
paths./actions/{idAction}/list/{field}.get.parameters[2].required: true
paths./actions/{idAction}/list/{field}.get.parameters[2].type: string
paths./actions/{idAction}/list/{field}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./actions/{idAction}/list/{field}.get.parameters[3].in: query
paths./actions/{idAction}/list/{field}.get.parameters[3].name: token
paths./actions/{idAction}/list/{field}.get.parameters[3].required: true
paths./actions/{idAction}/list/{field}.get.parameters[3].type: string
paths./actions/{idAction}/list/{field}.get.responses.200.description: Success
paths./actions/{idAction}/list/{field}.get.responses.400.description: Server rejection
paths./actions/{idAction}/list/{field}.get.security.length: 2
paths./actions/{idAction}/list/{field}.get.security[0].api_key.length: 0
paths./actions/{idAction}/list/{field}.get.security[1].api_token.length: 0
paths./actions/{idAction}/list/{field}.get.summary: getActionsListByIdActionByField()
paths./actions/{idAction}/list/{field}.get.tags.length: 1
paths./actions/{idAction}/list/{field}.get.tags[0]: action
paths./actions/{idAction}/member.get.operationId: getActionsMemberByIdAction
paths./actions/{idAction}/member.get.parameters.length: 4
paths./actions/{idAction}/member.get.parameters[0].description: idAction
paths./actions/{idAction}/member.get.parameters[0].in: path
paths./actions/{idAction}/member.get.parameters[0].name: idAction
paths./actions/{idAction}/member.get.parameters[0].required: true
paths./actions/{idAction}/member.get.parameters[0].type: string
paths./actions/{idAction}/member.get.parameters[1].default: all
paths./actions/{idAction}/member.get.parameters[1].description: 'all or a comma-separated
  list of: avatarHash, avatarSource, bio, bioData, confirmed, email, fullName, gravatarHash,
  idBoards, idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials, loginTypes,
  memberType, oneTimeMessagesDismissed, prefs, premiumFeatures, products, status,
  status, trophies, uploadedAvatarHash, url or username'
paths./actions/{idAction}/member.get.parameters[1].in: query
paths./actions/{idAction}/member.get.parameters[1].name: fields
paths./actions/{idAction}/member.get.parameters[1].required: false
paths./actions/{idAction}/member.get.parameters[1].type: string
paths./actions/{idAction}/member.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./actions/{idAction}/member.get.parameters[2].in: query
paths./actions/{idAction}/member.get.parameters[2].name: key
paths./actions/{idAction}/member.get.parameters[2].required: true
paths./actions/{idAction}/member.get.parameters[2].type: string
paths./actions/{idAction}/member.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./actions/{idAction}/member.get.parameters[3].in: query
paths./actions/{idAction}/member.get.parameters[3].name: token
paths./actions/{idAction}/member.get.parameters[3].required: true
paths./actions/{idAction}/member.get.parameters[3].type: string
paths./actions/{idAction}/member.get.responses.200.description: Success
paths./actions/{idAction}/member.get.responses.400.description: Server rejection
paths./actions/{idAction}/member.get.security.length: 2
paths./actions/{idAction}/member.get.security[0].api_key.length: 0
paths./actions/{idAction}/member.get.security[1].api_token.length: 0
paths./actions/{idAction}/member.get.summary: getActionsMemberByIdAction()
paths./actions/{idAction}/member.get.tags.length: 1
paths./actions/{idAction}/member.get.tags[0]: action
paths./actions/{idAction}/member/{field}.get.operationId: getActionsMemberByIdActionByField
paths./actions/{idAction}/member/{field}.get.parameters.length: 4
paths./actions/{idAction}/member/{field}.get.parameters[0].description: idAction
paths./actions/{idAction}/member/{field}.get.parameters[0].in: path
paths./actions/{idAction}/member/{field}.get.parameters[0].name: idAction
paths./actions/{idAction}/member/{field}.get.parameters[0].required: true
paths./actions/{idAction}/member/{field}.get.parameters[0].type: string
paths./actions/{idAction}/member/{field}.get.parameters[1].description: field
paths./actions/{idAction}/member/{field}.get.parameters[1].in: path
paths./actions/{idAction}/member/{field}.get.parameters[1].name: field
paths./actions/{idAction}/member/{field}.get.parameters[1].required: true
paths./actions/{idAction}/member/{field}.get.parameters[1].type: string
paths./actions/{idAction}/member/{field}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./actions/{idAction}/member/{field}.get.parameters[2].in: query
paths./actions/{idAction}/member/{field}.get.parameters[2].name: key
paths./actions/{idAction}/member/{field}.get.parameters[2].required: true
paths./actions/{idAction}/member/{field}.get.parameters[2].type: string
paths./actions/{idAction}/member/{field}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./actions/{idAction}/member/{field}.get.parameters[3].in: query
paths./actions/{idAction}/member/{field}.get.parameters[3].name: token
paths./actions/{idAction}/member/{field}.get.parameters[3].required: true
paths./actions/{idAction}/member/{field}.get.parameters[3].type: string
paths./actions/{idAction}/member/{field}.get.responses.200.description: Success
paths./actions/{idAction}/member/{field}.get.responses.400.description: Server rejection
paths./actions/{idAction}/member/{field}.get.security.length: 2
paths./actions/{idAction}/member/{field}.get.security[0].api_key.length: 0
paths./actions/{idAction}/member/{field}.get.security[1].api_token.length: 0
paths./actions/{idAction}/member/{field}.get.summary: getActionsMemberByIdActionByField()
paths./actions/{idAction}/member/{field}.get.tags.length: 1
paths./actions/{idAction}/member/{field}.get.tags[0]: action
paths./actions/{idAction}/memberCreator.get.operationId: getActionsMemberCreatorByIdAction
paths./actions/{idAction}/memberCreator.get.parameters.length: 4
paths./actions/{idAction}/memberCreator.get.parameters[0].description: idAction
paths./actions/{idAction}/memberCreator.get.parameters[0].in: path
paths./actions/{idAction}/memberCreator.get.parameters[0].name: idAction
paths./actions/{idAction}/memberCreator.get.parameters[0].required: true
paths./actions/{idAction}/memberCreator.get.parameters[0].type: string
paths./actions/{idAction}/memberCreator.get.parameters[1].default: all
paths./actions/{idAction}/memberCreator.get.parameters[1].description: 'all or a comma-separated
  list of: avatarHash, avatarSource, bio, bioData, confirmed, email, fullName, gravatarHash,
  idBoards, idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials, loginTypes,
  memberType, oneTimeMessagesDismissed, prefs, premiumFeatures, products, status,
  status, trophies, uploadedAvatarHash, url or username'
paths./actions/{idAction}/memberCreator.get.parameters[1].in: query
paths./actions/{idAction}/memberCreator.get.parameters[1].name: fields
paths./actions/{idAction}/memberCreator.get.parameters[1].required: false
paths./actions/{idAction}/memberCreator.get.parameters[1].type: string
paths./actions/{idAction}/memberCreator.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./actions/{idAction}/memberCreator.get.parameters[2].in: query
paths./actions/{idAction}/memberCreator.get.parameters[2].name: key
paths./actions/{idAction}/memberCreator.get.parameters[2].required: true
paths./actions/{idAction}/memberCreator.get.parameters[2].type: string
paths./actions/{idAction}/memberCreator.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./actions/{idAction}/memberCreator.get.parameters[3].in: query
paths./actions/{idAction}/memberCreator.get.parameters[3].name: token
paths./actions/{idAction}/memberCreator.get.parameters[3].required: true
paths./actions/{idAction}/memberCreator.get.parameters[3].type: string
paths./actions/{idAction}/memberCreator.get.responses.200.description: Success
paths./actions/{idAction}/memberCreator.get.responses.400.description: Server rejection
paths./actions/{idAction}/memberCreator.get.security.length: 2
paths./actions/{idAction}/memberCreator.get.security[0].api_key.length: 0
paths./actions/{idAction}/memberCreator.get.security[1].api_token.length: 0
paths./actions/{idAction}/memberCreator.get.summary: getActionsMemberCreatorByIdAction()
paths./actions/{idAction}/memberCreator.get.tags.length: 1
paths./actions/{idAction}/memberCreator.get.tags[0]: action
paths./actions/{idAction}/memberCreator/{field}.get.operationId: getActionsMemberCreatorByIdActionByField
paths./actions/{idAction}/memberCreator/{field}.get.parameters.length: 4
paths./actions/{idAction}/memberCreator/{field}.get.parameters[0].description: idAction
paths./actions/{idAction}/memberCreator/{field}.get.parameters[0].in: path
paths./actions/{idAction}/memberCreator/{field}.get.parameters[0].name: idAction
paths./actions/{idAction}/memberCreator/{field}.get.parameters[0].required: true
paths./actions/{idAction}/memberCreator/{field}.get.parameters[0].type: string
paths./actions/{idAction}/memberCreator/{field}.get.parameters[1].description: field
paths./actions/{idAction}/memberCreator/{field}.get.parameters[1].in: path
paths./actions/{idAction}/memberCreator/{field}.get.parameters[1].name: field
paths./actions/{idAction}/memberCreator/{field}.get.parameters[1].required: true
paths./actions/{idAction}/memberCreator/{field}.get.parameters[1].type: string
paths./actions/{idAction}/memberCreator/{field}.get.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./actions/{idAction}/memberCreator/{field}.get.parameters[2].in: query
paths./actions/{idAction}/memberCreator/{field}.get.parameters[2].name: key
paths./actions/{idAction}/memberCreator/{field}.get.parameters[2].required: true
paths./actions/{idAction}/memberCreator/{field}.get.parameters[2].type: string
paths./actions/{idAction}/memberCreator/{field}.get.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./actions/{idAction}/memberCreator/{field}.get.parameters[3].in: query
paths./actions/{idAction}/memberCreator/{field}.get.parameters[3].name: token
paths./actions/{idAction}/memberCreator/{field}.get.parameters[3].required: true
paths./actions/{idAction}/memberCreator/{field}.get.parameters[3].type: string
paths./actions/{idAction}/memberCreator/{field}.get.responses.200.description: Success
paths./actions/{idAction}/memberCreator/{field}.get.responses.400.description: Server
  rejection
paths./actions/{idAction}/memberCreator/{field}.get.security.length: 2
paths./actions/{idAction}/memberCreator/{field}.get.security[0].api_key.length: 0
paths./actions/{idAction}/memberCreator/{field}.get.security[1].api_token.length: 0
paths./actions/{idAction}/memberCreator/{field}.get.summary: getActionsMemberCreatorByIdActionByField()
paths./actions/{idAction}/memberCreator/{field}.get.tags.length: 1
paths./actions/{idAction}/memberCreator/{field}.get.tags[0]: action
paths./actions/{idAction}/organization.get.operationId: getActionsOrganizationByIdAction
paths./actions/{idAction}/organization.get.parameters.length: 4
paths./actions/{idAction}/organization.get.parameters[0].description: idAction
paths./actions/{idAction}/organization.get.parameters[0].in: path
paths./actions/{idAction}/organization.get.parameters[0].name: idAction
paths./actions/{idAction}/organization.get.parameters[0].required: true
paths./actions/{idAction}/organization.get.parameters[0].type: string
paths./actions/{idAction}/organization.get.parameters[1].default: all
paths./actions/{idAction}/organization.get.parameters[1].description: 'all or a comma-separated
  list of: billableMemberCount, desc, descData, displayName, idBoards, invitations,
  invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products,
  url or website'
paths./actions/{idAction}/organization.get.parameters[1].in: query
paths./actions/{idAction}/organization.get.parameters[1].name: fields
paths./actions/{idAction}/organization.get.parameters[1].required: false
paths./actions/{idAction}/organization.get.parameters[1].type: string
paths./actions/{idAction}/organization.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./actions/{idAction}/organization.get.parameters[2].in: query
paths./actions/{idAction}/organization.get.parameters[2].name: key
paths./actions/{idAction}/organization.get.parameters[2].required: true
paths./actions/{idAction}/organization.get.parameters[2].type: string
paths./actions/{idAction}/organization.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./actions/{idAction}/organization.get.parameters[3].in: query
paths./actions/{idAction}/organization.get.parameters[3].name: token
paths./actions/{idAction}/organization.get.parameters[3].required: true
paths./actions/{idAction}/organization.get.parameters[3].type: string
paths./actions/{idAction}/organization.get.responses.200.description: Success
paths./actions/{idAction}/organization.get.responses.400.description: Server rejection
paths./actions/{idAction}/organization.get.security.length: 2
paths./actions/{idAction}/organization.get.security[0].api_key.length: 0
paths./actions/{idAction}/organization.get.security[1].api_token.length: 0
paths./actions/{idAction}/organization.get.summary: getActionsOrganizationByIdAction()
paths./actions/{idAction}/organization.get.tags.length: 1
paths./actions/{idAction}/organization.get.tags[0]: action
paths./actions/{idAction}/organization/{field}.get.operationId: getActionsOrganizationByIdActionByField
paths./actions/{idAction}/organization/{field}.get.parameters.length: 4
paths./actions/{idAction}/organization/{field}.get.parameters[0].description: idAction
paths./actions/{idAction}/organization/{field}.get.parameters[0].in: path
paths./actions/{idAction}/organization/{field}.get.parameters[0].name: idAction
paths./actions/{idAction}/organization/{field}.get.parameters[0].required: true
paths./actions/{idAction}/organization/{field}.get.parameters[0].type: string
paths./actions/{idAction}/organization/{field}.get.parameters[1].description: field
paths./actions/{idAction}/organization/{field}.get.parameters[1].in: path
paths./actions/{idAction}/organization/{field}.get.parameters[1].name: field
paths./actions/{idAction}/organization/{field}.get.parameters[1].required: true
paths./actions/{idAction}/organization/{field}.get.parameters[1].type: string
paths./actions/{idAction}/organization/{field}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./actions/{idAction}/organization/{field}.get.parameters[2].in: query
paths./actions/{idAction}/organization/{field}.get.parameters[2].name: key
paths./actions/{idAction}/organization/{field}.get.parameters[2].required: true
paths./actions/{idAction}/organization/{field}.get.parameters[2].type: string
paths./actions/{idAction}/organization/{field}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./actions/{idAction}/organization/{field}.get.parameters[3].in: query
paths./actions/{idAction}/organization/{field}.get.parameters[3].name: token
paths./actions/{idAction}/organization/{field}.get.parameters[3].required: true
paths./actions/{idAction}/organization/{field}.get.parameters[3].type: string
paths./actions/{idAction}/organization/{field}.get.responses.200.description: Success
paths./actions/{idAction}/organization/{field}.get.responses.400.description: Server
  rejection
paths./actions/{idAction}/organization/{field}.get.security.length: 2
paths./actions/{idAction}/organization/{field}.get.security[0].api_key.length: 0
paths./actions/{idAction}/organization/{field}.get.security[1].api_token.length: 0
paths./actions/{idAction}/organization/{field}.get.summary: getActionsOrganizationByIdActionByField()
paths./actions/{idAction}/organization/{field}.get.tags.length: 1
paths./actions/{idAction}/organization/{field}.get.tags[0]: action
paths./actions/{idAction}/text.put.operationId: updateActionsTextByIdAction
paths./actions/{idAction}/text.put.parameters.length: 4
paths./actions/{idAction}/text.put.parameters[0].description: idAction
paths./actions/{idAction}/text.put.parameters[0].in: path
paths./actions/{idAction}/text.put.parameters[0].name: idAction
paths./actions/{idAction}/text.put.parameters[0].required: true
paths./actions/{idAction}/text.put.parameters[0].type: string
paths./actions/{idAction}/text.put.parameters[1].description: Attributes of "Actions
  Text" to be updated.
paths./actions/{idAction}/text.put.parameters[1].in: body
paths./actions/{idAction}/text.put.parameters[1].name: body
paths./actions/{idAction}/text.put.parameters[1].required: true
paths./actions/{idAction}/text.put.parameters[1].schema.$ref: '#/definitions/actions_text'
paths./actions/{idAction}/text.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./actions/{idAction}/text.put.parameters[2].in: query
paths./actions/{idAction}/text.put.parameters[2].name: key
paths./actions/{idAction}/text.put.parameters[2].required: true
paths./actions/{idAction}/text.put.parameters[2].type: string
paths./actions/{idAction}/text.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./actions/{idAction}/text.put.parameters[3].in: query
paths./actions/{idAction}/text.put.parameters[3].name: token
paths./actions/{idAction}/text.put.parameters[3].required: true
paths./actions/{idAction}/text.put.parameters[3].type: string
paths./actions/{idAction}/text.put.responses.200.description: Success
paths./actions/{idAction}/text.put.responses.400.description: Server rejection
paths./actions/{idAction}/text.put.security.length: 2
paths./actions/{idAction}/text.put.security[0].api_key.length: 0
paths./actions/{idAction}/text.put.security[1].api_token.length: 0
paths./actions/{idAction}/text.put.summary: updateActionsTextByIdAction()
paths./actions/{idAction}/text.put.tags.length: 1
paths./actions/{idAction}/text.put.tags[0]: action
paths./batch.get.operationId: getBatch
paths./batch.get.parameters.length: 3
paths./batch.get.parameters[0].description: list of API v1 GET routes, not including
  the version prefix
paths./batch.get.parameters[0].in: query
paths./batch.get.parameters[0].name: urls
paths./batch.get.parameters[0].required: true
paths./batch.get.parameters[0].type: string
paths./batch.get.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./batch.get.parameters[1].in: query
paths./batch.get.parameters[1].name: key
paths./batch.get.parameters[1].required: true
paths./batch.get.parameters[1].type: string
paths./batch.get.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./batch.get.parameters[2].in: query
paths./batch.get.parameters[2].name: token
paths./batch.get.parameters[2].required: true
paths./batch.get.parameters[2].type: string
paths./batch.get.responses.200.description: Success
paths./batch.get.responses.400.description: Server rejection
paths./batch.get.summary: getBatch()
paths./batch.get.tags.length: 1
paths./batch.get.tags[0]: batch
paths./boards.post.operationId: addBoards
paths./boards.post.parameters.length: 3
paths./boards.post.parameters[0].description: Attributes of "Boards" to be added.
paths./boards.post.parameters[0].in: body
paths./boards.post.parameters[0].name: body
paths./boards.post.parameters[0].required: true
paths./boards.post.parameters[0].schema.$ref: '#/definitions/boards'
paths./boards.post.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards.post.parameters[1].in: query
paths./boards.post.parameters[1].name: key
paths./boards.post.parameters[1].required: true
paths./boards.post.parameters[1].type: string
paths./boards.post.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards.post.parameters[2].in: query
paths./boards.post.parameters[2].name: token
paths./boards.post.parameters[2].required: true
paths./boards.post.parameters[2].type: string
paths./boards.post.responses.200.description: Success
paths./boards.post.responses.400.description: Server rejection
paths./boards.post.security.length: 2
paths./boards.post.security[0].api_key.length: 0
paths./boards.post.security[1].api_token.length: 0
paths./boards.post.summary: addBoards()
paths./boards.post.tags.length: 1
paths./boards.post.tags[0]: board
paths./boards/{idBoard}.get.operationId: getBoardsByIdBoard
paths./boards/{idBoard}.get.parameters.length: 40
paths./boards/{idBoard}.get.parameters[0].description: board_id
paths./boards/{idBoard}.get.parameters[0].in: path
paths./boards/{idBoard}.get.parameters[0].name: idBoard
paths./boards/{idBoard}.get.parameters[0].required: true
paths./boards/{idBoard}.get.parameters[0].type: string
paths./boards/{idBoard}.get.parameters[1].description: 'all or a comma-separated list
  of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard,
  addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem,
  copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization,
  deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation,
  disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
  makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard,
  moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,
  removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
  updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,
  updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed,
  updateList:name, updateMember or updateOrganization'
paths./boards/{idBoard}.get.parameters[1].in: query
paths./boards/{idBoard}.get.parameters[1].name: actions
paths./boards/{idBoard}.get.parameters[1].required: false
paths./boards/{idBoard}.get.parameters[1].type: string
paths./boards/{idBoard}.get.parameters[2].description: ' true or false'
paths./boards/{idBoard}.get.parameters[2].in: query
paths./boards/{idBoard}.get.parameters[2].name: actions_entities
paths./boards/{idBoard}.get.parameters[2].required: false
paths./boards/{idBoard}.get.parameters[2].type: string
paths./boards/{idBoard}.get.parameters[3].description: ' true or false'
paths./boards/{idBoard}.get.parameters[3].in: query
paths./boards/{idBoard}.get.parameters[3].name: actions_display
paths./boards/{idBoard}.get.parameters[3].required: false
paths./boards/{idBoard}.get.parameters[3].type: string
paths./boards/{idBoard}.get.parameters[4].default: list
paths./boards/{idBoard}.get.parameters[4].description: 'One of: count, list or minimal'
paths./boards/{idBoard}.get.parameters[4].in: query
paths./boards/{idBoard}.get.parameters[4].name: actions_format
paths./boards/{idBoard}.get.parameters[4].required: false
paths./boards/{idBoard}.get.parameters[4].type: string
paths./boards/{idBoard}.get.parameters[5].description: A date, null or lastView
paths./boards/{idBoard}.get.parameters[5].in: query
paths./boards/{idBoard}.get.parameters[5].name: actions_since
paths./boards/{idBoard}.get.parameters[5].required: false
paths./boards/{idBoard}.get.parameters[5].type: string
paths./boards/{idBoard}.get.parameters[6].default: "50"
paths./boards/{idBoard}.get.parameters[6].description: a number from 0 to 1000
paths./boards/{idBoard}.get.parameters[6].in: query
paths./boards/{idBoard}.get.parameters[6].name: actions_limit
paths./boards/{idBoard}.get.parameters[6].required: false
paths./boards/{idBoard}.get.parameters[6].type: string
paths./boards/{idBoard}.get.parameters[7].default: all
paths./boards/{idBoard}.get.parameters[7].description: 'all or a comma-separated list
  of: data, date, idMemberCreator or type'
paths./boards/{idBoard}.get.parameters[7].in: query
paths./boards/{idBoard}.get.parameters[7].name: action_fields
paths./boards/{idBoard}.get.parameters[7].required: false
paths./boards/{idBoard}.get.parameters[7].type: string
paths./boards/{idBoard}.get.parameters[8].description: ' true or false'
paths./boards/{idBoard}.get.parameters[8].in: query
paths./boards/{idBoard}.get.parameters[8].name: action_member
paths./boards/{idBoard}.get.parameters[8].required: false
paths./boards/{idBoard}.get.parameters[8].type: string
paths./boards/{idBoard}.get.parameters[9].default: avatarHash, fullName, initials
  and username
paths./boards/{idBoard}.get.parameters[9].description: 'all or a comma-separated list
  of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType,
  products, status, url or username'
paths./boards/{idBoard}.get.parameters[9].in: query
paths./boards/{idBoard}.get.parameters[9].name: action_member_fields
paths./boards/{idBoard}.get.parameters[9].required: false
paths./boards/{idBoard}.get.parameters[9].type: string
paths./boards/{idBoard}.get.parameters[10].description: ' true or false'
paths./boards/{idBoard}.get.parameters[10].in: query
paths./boards/{idBoard}.get.parameters[10].name: action_memberCreator
paths./boards/{idBoard}.get.parameters[10].required: false
paths./boards/{idBoard}.get.parameters[10].type: string
paths./boards/{idBoard}.get.parameters[11].default: avatarHash, fullName, initials
  and username
paths./boards/{idBoard}.get.parameters[11].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./boards/{idBoard}.get.parameters[11].in: query
paths./boards/{idBoard}.get.parameters[11].name: action_memberCreator_fields
paths./boards/{idBoard}.get.parameters[11].required: false
paths./boards/{idBoard}.get.parameters[11].type: string
paths./boards/{idBoard}.get.parameters[12].default: none
paths./boards/{idBoard}.get.parameters[12].description: 'One of: all, closed, none,
  open or visible'
paths./boards/{idBoard}.get.parameters[12].in: query
paths./boards/{idBoard}.get.parameters[12].name: cards
paths./boards/{idBoard}.get.parameters[12].required: false
paths./boards/{idBoard}.get.parameters[12].type: string
paths./boards/{idBoard}.get.parameters[13].default: all
paths./boards/{idBoard}.get.parameters[13].description: 'all or a comma-separated
  list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due,
  email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
  idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed
  or url'
paths./boards/{idBoard}.get.parameters[13].in: query
paths./boards/{idBoard}.get.parameters[13].name: card_fields
paths./boards/{idBoard}.get.parameters[13].required: false
paths./boards/{idBoard}.get.parameters[13].type: string
paths./boards/{idBoard}.get.parameters[14].description: A boolean value or &quot;cover&quot;
  for only card cover attachments
paths./boards/{idBoard}.get.parameters[14].in: query
paths./boards/{idBoard}.get.parameters[14].name: card_attachments
paths./boards/{idBoard}.get.parameters[14].required: false
paths./boards/{idBoard}.get.parameters[14].type: string
paths./boards/{idBoard}.get.parameters[15].default: all
paths./boards/{idBoard}.get.parameters[15].description: 'all or a comma-separated
  list of: bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews or
  url'
paths./boards/{idBoard}.get.parameters[15].in: query
paths./boards/{idBoard}.get.parameters[15].name: card_attachment_fields
paths./boards/{idBoard}.get.parameters[15].required: false
paths./boards/{idBoard}.get.parameters[15].type: string
paths./boards/{idBoard}.get.parameters[16].default: none
paths./boards/{idBoard}.get.parameters[16].description: 'One of: all or none'
paths./boards/{idBoard}.get.parameters[16].in: query
paths./boards/{idBoard}.get.parameters[16].name: card_checklists
paths./boards/{idBoard}.get.parameters[16].required: false
paths./boards/{idBoard}.get.parameters[16].type: string
paths./boards/{idBoard}.get.parameters[17].description: ' true or false'
paths./boards/{idBoard}.get.parameters[17].in: query
paths./boards/{idBoard}.get.parameters[17].name: card_stickers
paths./boards/{idBoard}.get.parameters[17].required: false
paths./boards/{idBoard}.get.parameters[17].type: string
paths./boards/{idBoard}.get.parameters[18].default: none
paths./boards/{idBoard}.get.parameters[18].description: 'One of: mine or none'
paths./boards/{idBoard}.get.parameters[18].in: query
paths./boards/{idBoard}.get.parameters[18].name: boardStars
paths./boards/{idBoard}.get.parameters[18].required: false
paths./boards/{idBoard}.get.parameters[18].type: string
paths./boards/{idBoard}.get.parameters[19].default: none
paths./boards/{idBoard}.get.parameters[19].description: 'One of: all or none'
paths./boards/{idBoard}.get.parameters[19].in: query
paths./boards/{idBoard}.get.parameters[19].name: labels
paths./boards/{idBoard}.get.parameters[19].required: false
paths./boards/{idBoard}.get.parameters[19].type: string
paths./boards/{idBoard}.get.parameters[20].default: all
paths./boards/{idBoard}.get.parameters[20].description: 'all or a comma-separated
  list of: color, idBoard, name or uses'
paths./boards/{idBoard}.get.parameters[20].in: query
paths./boards/{idBoard}.get.parameters[20].name: label_fields
paths./boards/{idBoard}.get.parameters[20].required: false
paths./boards/{idBoard}.get.parameters[20].type: string
paths./boards/{idBoard}.get.parameters[21].default: "50"
paths./boards/{idBoard}.get.parameters[21].description: a number from 0 to 1000
paths./boards/{idBoard}.get.parameters[21].in: query
paths./boards/{idBoard}.get.parameters[21].name: labels_limit
paths./boards/{idBoard}.get.parameters[21].required: false
paths./boards/{idBoard}.get.parameters[21].type: string
paths./boards/{idBoard}.get.parameters[22].default: none
paths./boards/{idBoard}.get.parameters[22].description: 'One of: all, closed, none
  or open'
paths./boards/{idBoard}.get.parameters[22].in: query
paths./boards/{idBoard}.get.parameters[22].name: lists
paths./boards/{idBoard}.get.parameters[22].required: false
paths./boards/{idBoard}.get.parameters[22].type: string
paths./boards/{idBoard}.get.parameters[23].default: all
paths./boards/{idBoard}.get.parameters[23].description: 'all or a comma-separated
  list of: closed, idBoard, name, pos or subscribed'
paths./boards/{idBoard}.get.parameters[23].in: query
paths./boards/{idBoard}.get.parameters[23].name: list_fields
paths./boards/{idBoard}.get.parameters[23].required: false
paths./boards/{idBoard}.get.parameters[23].type: string
paths./boards/{idBoard}.get.parameters[24].default: none
paths./boards/{idBoard}.get.parameters[24].description: 'all or a comma-separated
  list of: active, admin, deactivated, me or normal'
paths./boards/{idBoard}.get.parameters[24].in: query
paths./boards/{idBoard}.get.parameters[24].name: memberships
paths./boards/{idBoard}.get.parameters[24].required: false
paths./boards/{idBoard}.get.parameters[24].type: string
paths./boards/{idBoard}.get.parameters[25].description: ' true or false'
paths./boards/{idBoard}.get.parameters[25].in: query
paths./boards/{idBoard}.get.parameters[25].name: memberships_member
paths./boards/{idBoard}.get.parameters[25].required: false
paths./boards/{idBoard}.get.parameters[25].type: string
paths./boards/{idBoard}.get.parameters[26].default: fullName and username
paths./boards/{idBoard}.get.parameters[26].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./boards/{idBoard}.get.parameters[26].in: query
paths./boards/{idBoard}.get.parameters[26].name: memberships_member_fields
paths./boards/{idBoard}.get.parameters[26].required: false
paths./boards/{idBoard}.get.parameters[26].type: string
paths./boards/{idBoard}.get.parameters[27].default: none
paths./boards/{idBoard}.get.parameters[27].description: 'One of: admins, all, none,
  normal or owners'
paths./boards/{idBoard}.get.parameters[27].in: query
paths./boards/{idBoard}.get.parameters[27].name: members
paths./boards/{idBoard}.get.parameters[27].required: false
paths./boards/{idBoard}.get.parameters[27].type: string
paths./boards/{idBoard}.get.parameters[28].default: avatarHash, initials, fullName,
  username and confirmed
paths./boards/{idBoard}.get.parameters[28].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./boards/{idBoard}.get.parameters[28].in: query
paths./boards/{idBoard}.get.parameters[28].name: member_fields
paths./boards/{idBoard}.get.parameters[28].required: false
paths./boards/{idBoard}.get.parameters[28].type: string
paths./boards/{idBoard}.get.parameters[29].default: none
paths./boards/{idBoard}.get.parameters[29].description: 'One of: admins, all, none,
  normal or owners'
paths./boards/{idBoard}.get.parameters[29].in: query
paths./boards/{idBoard}.get.parameters[29].name: membersInvited
paths./boards/{idBoard}.get.parameters[29].required: false
paths./boards/{idBoard}.get.parameters[29].type: string
paths./boards/{idBoard}.get.parameters[30].default: avatarHash, initials, fullName
  and username
paths./boards/{idBoard}.get.parameters[30].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./boards/{idBoard}.get.parameters[30].in: query
paths./boards/{idBoard}.get.parameters[30].name: membersInvited_fields
paths./boards/{idBoard}.get.parameters[30].required: false
paths./boards/{idBoard}.get.parameters[30].type: string
paths./boards/{idBoard}.get.parameters[31].default: none
paths./boards/{idBoard}.get.parameters[31].description: 'One of: all or none'
paths./boards/{idBoard}.get.parameters[31].in: query
paths./boards/{idBoard}.get.parameters[31].name: checklists
paths./boards/{idBoard}.get.parameters[31].required: false
paths./boards/{idBoard}.get.parameters[31].type: string
paths./boards/{idBoard}.get.parameters[32].default: all
paths./boards/{idBoard}.get.parameters[32].description: 'all or a comma-separated
  list of: idBoard, idCard, name or pos'
paths./boards/{idBoard}.get.parameters[32].in: query
paths./boards/{idBoard}.get.parameters[32].name: checklist_fields
paths./boards/{idBoard}.get.parameters[32].required: false
paths./boards/{idBoard}.get.parameters[32].type: string
paths./boards/{idBoard}.get.parameters[33].description: ' true or false'
paths./boards/{idBoard}.get.parameters[33].in: query
paths./boards/{idBoard}.get.parameters[33].name: organization
paths./boards/{idBoard}.get.parameters[33].required: false
paths./boards/{idBoard}.get.parameters[33].type: string
paths./boards/{idBoard}.get.parameters[34].default: name and displayName
paths./boards/{idBoard}.get.parameters[34].description: 'all or a comma-separated
  list of: billableMemberCount, desc, descData, displayName, idBoards, invitations,
  invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products,
  url or website'
paths./boards/{idBoard}.get.parameters[34].in: query
paths./boards/{idBoard}.get.parameters[34].name: organization_fields
paths./boards/{idBoard}.get.parameters[34].required: false
paths./boards/{idBoard}.get.parameters[34].type: string
paths./boards/{idBoard}.get.parameters[35].default: none
paths./boards/{idBoard}.get.parameters[35].description: 'all or a comma-separated
  list of: active, admin, deactivated, me or normal'
paths./boards/{idBoard}.get.parameters[35].in: query
paths./boards/{idBoard}.get.parameters[35].name: organization_memberships
paths./boards/{idBoard}.get.parameters[35].required: false
paths./boards/{idBoard}.get.parameters[35].type: string
paths./boards/{idBoard}.get.parameters[36].description: ' true or false'
paths./boards/{idBoard}.get.parameters[36].in: query
paths./boards/{idBoard}.get.parameters[36].name: myPrefs
paths./boards/{idBoard}.get.parameters[36].required: false
paths./boards/{idBoard}.get.parameters[36].type: string
paths./boards/{idBoard}.get.parameters[37].default: name, desc, descData, closed,
  idOrganization, pinned, url, shortUrl, prefs and labelNames
paths./boards/{idBoard}.get.parameters[37].description: 'all or a comma-separated
  list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization,
  invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
  shortUrl, starred, subscribed or url'
paths./boards/{idBoard}.get.parameters[37].in: query
paths./boards/{idBoard}.get.parameters[37].name: fields
paths./boards/{idBoard}.get.parameters[37].required: false
paths./boards/{idBoard}.get.parameters[37].type: string
paths./boards/{idBoard}.get.parameters[38].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}.get.parameters[38].in: query
paths./boards/{idBoard}.get.parameters[38].name: key
paths./boards/{idBoard}.get.parameters[38].required: true
paths./boards/{idBoard}.get.parameters[38].type: string
paths./boards/{idBoard}.get.parameters[39].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}.get.parameters[39].in: query
paths./boards/{idBoard}.get.parameters[39].name: token
paths./boards/{idBoard}.get.parameters[39].required: true
paths./boards/{idBoard}.get.parameters[39].type: string
paths./boards/{idBoard}.get.responses.200.description: Success
paths./boards/{idBoard}.get.responses.400.description: Server rejection
paths./boards/{idBoard}.get.security.length: 2
paths./boards/{idBoard}.get.security[0].api_key.length: 0
paths./boards/{idBoard}.get.security[1].api_token.length: 0
paths./boards/{idBoard}.get.summary: getBoardsByIdBoard()
paths./boards/{idBoard}.get.tags.length: 1
paths./boards/{idBoard}.get.tags[0]: board
paths./boards/{idBoard}.put.operationId: updateBoardsByIdBoard
paths./boards/{idBoard}.put.parameters.length: 4
paths./boards/{idBoard}.put.parameters[0].description: board_id
paths./boards/{idBoard}.put.parameters[0].in: path
paths./boards/{idBoard}.put.parameters[0].name: idBoard
paths./boards/{idBoard}.put.parameters[0].required: true
paths./boards/{idBoard}.put.parameters[0].type: string
paths./boards/{idBoard}.put.parameters[1].description: Attributes of "Boards" to be
  updated.
paths./boards/{idBoard}.put.parameters[1].in: body
paths./boards/{idBoard}.put.parameters[1].name: body
paths./boards/{idBoard}.put.parameters[1].required: true
paths./boards/{idBoard}.put.parameters[1].schema.$ref: '#/definitions/boards'
paths./boards/{idBoard}.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}.put.parameters[2].in: query
paths./boards/{idBoard}.put.parameters[2].name: key
paths./boards/{idBoard}.put.parameters[2].required: true
paths./boards/{idBoard}.put.parameters[2].type: string
paths./boards/{idBoard}.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}.put.parameters[3].in: query
paths./boards/{idBoard}.put.parameters[3].name: token
paths./boards/{idBoard}.put.parameters[3].required: true
paths./boards/{idBoard}.put.parameters[3].type: string
paths./boards/{idBoard}.put.responses.200.description: Success
paths./boards/{idBoard}.put.responses.400.description: Server rejection
paths./boards/{idBoard}.put.security.length: 2
paths./boards/{idBoard}.put.security[0].api_key.length: 0
paths./boards/{idBoard}.put.security[1].api_token.length: 0
paths./boards/{idBoard}.put.summary: updateBoardsByIdBoard()
paths./boards/{idBoard}.put.tags.length: 1
paths./boards/{idBoard}.put.tags[0]: board
paths./boards/{idBoard}/{field}.get.operationId: getBoardsByIdBoardByField
paths./boards/{idBoard}/{field}.get.parameters.length: 4
paths./boards/{idBoard}/{field}.get.parameters[0].description: board_id
paths./boards/{idBoard}/{field}.get.parameters[0].in: path
paths./boards/{idBoard}/{field}.get.parameters[0].name: idBoard
paths./boards/{idBoard}/{field}.get.parameters[0].required: true
paths./boards/{idBoard}/{field}.get.parameters[0].type: string
paths./boards/{idBoard}/{field}.get.parameters[1].description: field
paths./boards/{idBoard}/{field}.get.parameters[1].in: path
paths./boards/{idBoard}/{field}.get.parameters[1].name: field
paths./boards/{idBoard}/{field}.get.parameters[1].required: true
paths./boards/{idBoard}/{field}.get.parameters[1].type: string
paths./boards/{idBoard}/{field}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/{field}.get.parameters[2].in: query
paths./boards/{idBoard}/{field}.get.parameters[2].name: key
paths./boards/{idBoard}/{field}.get.parameters[2].required: true
paths./boards/{idBoard}/{field}.get.parameters[2].type: string
paths./boards/{idBoard}/{field}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/{field}.get.parameters[3].in: query
paths./boards/{idBoard}/{field}.get.parameters[3].name: token
paths./boards/{idBoard}/{field}.get.parameters[3].required: true
paths./boards/{idBoard}/{field}.get.parameters[3].type: string
paths./boards/{idBoard}/{field}.get.responses.200.description: Success
paths./boards/{idBoard}/{field}.get.responses.400.description: Server rejection
paths./boards/{idBoard}/{field}.get.summary: getBoardsByIdBoardByField()
paths./boards/{idBoard}/{field}.get.tags.length: 1
paths./boards/{idBoard}/{field}.get.tags[0]: board
paths./boards/{idBoard}/actions.get.operationId: getBoardsActionsByIdBoard
paths./boards/{idBoard}/actions.get.parameters.length: 17
paths./boards/{idBoard}/actions.get.parameters[0].description: board_id
paths./boards/{idBoard}/actions.get.parameters[0].in: path
paths./boards/{idBoard}/actions.get.parameters[0].name: idBoard
paths./boards/{idBoard}/actions.get.parameters[0].required: true
paths./boards/{idBoard}/actions.get.parameters[0].type: string
paths./boards/{idBoard}/actions.get.parameters[1].description: ' true or false'
paths./boards/{idBoard}/actions.get.parameters[1].in: query
paths./boards/{idBoard}/actions.get.parameters[1].name: entities
paths./boards/{idBoard}/actions.get.parameters[1].required: false
paths./boards/{idBoard}/actions.get.parameters[1].type: string
paths./boards/{idBoard}/actions.get.parameters[2].description: ' true or false'
paths./boards/{idBoard}/actions.get.parameters[2].in: query
paths./boards/{idBoard}/actions.get.parameters[2].name: display
paths./boards/{idBoard}/actions.get.parameters[2].required: false
paths./boards/{idBoard}/actions.get.parameters[2].type: string
paths./boards/{idBoard}/actions.get.parameters[3].default: all
paths./boards/{idBoard}/actions.get.parameters[3].description: 'all or a comma-separated
  list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard,
  addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem,
  copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization,
  deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation,
  disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
  makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard,
  moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,
  removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
  updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,
  updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed,
  updateList:name, updateMember or updateOrganization'
paths./boards/{idBoard}/actions.get.parameters[3].in: query
paths./boards/{idBoard}/actions.get.parameters[3].name: filter
paths./boards/{idBoard}/actions.get.parameters[3].required: false
paths./boards/{idBoard}/actions.get.parameters[3].type: string
paths./boards/{idBoard}/actions.get.parameters[4].default: all
paths./boards/{idBoard}/actions.get.parameters[4].description: 'all or a comma-separated
  list of: data, date, idMemberCreator or type'
paths./boards/{idBoard}/actions.get.parameters[4].in: query
paths./boards/{idBoard}/actions.get.parameters[4].name: fields
paths./boards/{idBoard}/actions.get.parameters[4].required: false
paths./boards/{idBoard}/actions.get.parameters[4].type: string
paths./boards/{idBoard}/actions.get.parameters[5].default: "50"
paths./boards/{idBoard}/actions.get.parameters[5].description: a number from 0 to
  1000
paths./boards/{idBoard}/actions.get.parameters[5].in: query
paths./boards/{idBoard}/actions.get.parameters[5].name: limit
paths./boards/{idBoard}/actions.get.parameters[5].required: false
paths./boards/{idBoard}/actions.get.parameters[5].type: string
paths./boards/{idBoard}/actions.get.parameters[6].default: list
paths./boards/{idBoard}/actions.get.parameters[6].description: 'One of: count, list
  or minimal'
paths./boards/{idBoard}/actions.get.parameters[6].in: query
paths./boards/{idBoard}/actions.get.parameters[6].name: format
paths./boards/{idBoard}/actions.get.parameters[6].required: false
paths./boards/{idBoard}/actions.get.parameters[6].type: string
paths./boards/{idBoard}/actions.get.parameters[7].description: A date, null or lastView
paths./boards/{idBoard}/actions.get.parameters[7].in: query
paths./boards/{idBoard}/actions.get.parameters[7].name: since
paths./boards/{idBoard}/actions.get.parameters[7].required: false
paths./boards/{idBoard}/actions.get.parameters[7].type: string
paths./boards/{idBoard}/actions.get.parameters[8].description: A date, or null
paths./boards/{idBoard}/actions.get.parameters[8].in: query
paths./boards/{idBoard}/actions.get.parameters[8].name: before
paths./boards/{idBoard}/actions.get.parameters[8].required: false
paths./boards/{idBoard}/actions.get.parameters[8].type: string
paths./boards/{idBoard}/actions.get.parameters[9].default: "0"
paths./boards/{idBoard}/actions.get.parameters[9].description: Page * limit must be
  less than 1000
paths./boards/{idBoard}/actions.get.parameters[9].in: query
paths./boards/{idBoard}/actions.get.parameters[9].name: page
paths./boards/{idBoard}/actions.get.parameters[9].required: false
paths./boards/{idBoard}/actions.get.parameters[9].type: string
paths./boards/{idBoard}/actions.get.parameters[10].description: Only return actions
  related to these model ids
paths./boards/{idBoard}/actions.get.parameters[10].in: query
paths./boards/{idBoard}/actions.get.parameters[10].name: idModels
paths./boards/{idBoard}/actions.get.parameters[10].required: false
paths./boards/{idBoard}/actions.get.parameters[10].type: string
paths./boards/{idBoard}/actions.get.parameters[11].description: ' true or false'
paths./boards/{idBoard}/actions.get.parameters[11].in: query
paths./boards/{idBoard}/actions.get.parameters[11].name: member
paths./boards/{idBoard}/actions.get.parameters[11].required: false
paths./boards/{idBoard}/actions.get.parameters[11].type: string
paths./boards/{idBoard}/actions.get.parameters[12].default: avatarHash, fullName,
  initials and username
paths./boards/{idBoard}/actions.get.parameters[12].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./boards/{idBoard}/actions.get.parameters[12].in: query
paths./boards/{idBoard}/actions.get.parameters[12].name: member_fields
paths./boards/{idBoard}/actions.get.parameters[12].required: false
paths./boards/{idBoard}/actions.get.parameters[12].type: string
paths./boards/{idBoard}/actions.get.parameters[13].description: ' true or false'
paths./boards/{idBoard}/actions.get.parameters[13].in: query
paths./boards/{idBoard}/actions.get.parameters[13].name: memberCreator
paths./boards/{idBoard}/actions.get.parameters[13].required: false
paths./boards/{idBoard}/actions.get.parameters[13].type: string
paths./boards/{idBoard}/actions.get.parameters[14].default: avatarHash, fullName,
  initials and username
paths./boards/{idBoard}/actions.get.parameters[14].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./boards/{idBoard}/actions.get.parameters[14].in: query
paths./boards/{idBoard}/actions.get.parameters[14].name: memberCreator_fields
paths./boards/{idBoard}/actions.get.parameters[14].required: false
paths./boards/{idBoard}/actions.get.parameters[14].type: string
paths./boards/{idBoard}/actions.get.parameters[15].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/actions.get.parameters[15].in: query
paths./boards/{idBoard}/actions.get.parameters[15].name: key
paths./boards/{idBoard}/actions.get.parameters[15].required: true
paths./boards/{idBoard}/actions.get.parameters[15].type: string
paths./boards/{idBoard}/actions.get.parameters[16].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/actions.get.parameters[16].in: query
paths./boards/{idBoard}/actions.get.parameters[16].name: token
paths./boards/{idBoard}/actions.get.parameters[16].required: true
paths./boards/{idBoard}/actions.get.parameters[16].type: string
paths./boards/{idBoard}/actions.get.responses.200.description: Success
paths./boards/{idBoard}/actions.get.responses.400.description: Server rejection
paths./boards/{idBoard}/actions.get.security.length: 2
paths./boards/{idBoard}/actions.get.security[0].api_key.length: 0
paths./boards/{idBoard}/actions.get.security[1].api_token.length: 0
paths./boards/{idBoard}/actions.get.summary: getBoardsActionsByIdBoard()
paths./boards/{idBoard}/actions.get.tags.length: 1
paths./boards/{idBoard}/actions.get.tags[0]: board
paths./boards/{idBoard}/boardStars.get.operationId: getBoardsBoardStarsByIdBoard
paths./boards/{idBoard}/boardStars.get.parameters.length: 4
paths./boards/{idBoard}/boardStars.get.parameters[0].description: board_id
paths./boards/{idBoard}/boardStars.get.parameters[0].in: path
paths./boards/{idBoard}/boardStars.get.parameters[0].name: idBoard
paths./boards/{idBoard}/boardStars.get.parameters[0].required: true
paths./boards/{idBoard}/boardStars.get.parameters[0].type: string
paths./boards/{idBoard}/boardStars.get.parameters[1].default: mine
paths./boards/{idBoard}/boardStars.get.parameters[1].description: 'One of: mine or
  none'
paths./boards/{idBoard}/boardStars.get.parameters[1].in: query
paths./boards/{idBoard}/boardStars.get.parameters[1].name: filter
paths./boards/{idBoard}/boardStars.get.parameters[1].required: false
paths./boards/{idBoard}/boardStars.get.parameters[1].type: string
paths./boards/{idBoard}/boardStars.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/boardStars.get.parameters[2].in: query
paths./boards/{idBoard}/boardStars.get.parameters[2].name: key
paths./boards/{idBoard}/boardStars.get.parameters[2].required: true
paths./boards/{idBoard}/boardStars.get.parameters[2].type: string
paths./boards/{idBoard}/boardStars.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/boardStars.get.parameters[3].in: query
paths./boards/{idBoard}/boardStars.get.parameters[3].name: token
paths./boards/{idBoard}/boardStars.get.parameters[3].required: true
paths./boards/{idBoard}/boardStars.get.parameters[3].type: string
paths./boards/{idBoard}/boardStars.get.responses.200.description: Success
paths./boards/{idBoard}/boardStars.get.responses.400.description: Server rejection
paths./boards/{idBoard}/boardStars.get.security.length: 2
paths./boards/{idBoard}/boardStars.get.security[0].api_key.length: 0
paths./boards/{idBoard}/boardStars.get.security[1].api_token.length: 0
paths./boards/{idBoard}/boardStars.get.summary: getBoardsBoardStarsByIdBoard()
paths./boards/{idBoard}/boardStars.get.tags.length: 1
paths./boards/{idBoard}/boardStars.get.tags[0]: board
paths./boards/{idBoard}/calendarKey/generate.post.operationId: addBoardsCalendarKeyGenerateByIdBoard
paths./boards/{idBoard}/calendarKey/generate.post.parameters.length: 3
paths./boards/{idBoard}/calendarKey/generate.post.parameters[0].description: board_id
paths./boards/{idBoard}/calendarKey/generate.post.parameters[0].in: path
paths./boards/{idBoard}/calendarKey/generate.post.parameters[0].name: idBoard
paths./boards/{idBoard}/calendarKey/generate.post.parameters[0].required: true
paths./boards/{idBoard}/calendarKey/generate.post.parameters[0].type: string
paths./boards/{idBoard}/calendarKey/generate.post.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/calendarKey/generate.post.parameters[1].in: query
paths./boards/{idBoard}/calendarKey/generate.post.parameters[1].name: key
paths./boards/{idBoard}/calendarKey/generate.post.parameters[1].required: true
paths./boards/{idBoard}/calendarKey/generate.post.parameters[1].type: string
paths./boards/{idBoard}/calendarKey/generate.post.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/calendarKey/generate.post.parameters[2].in: query
paths./boards/{idBoard}/calendarKey/generate.post.parameters[2].name: token
paths./boards/{idBoard}/calendarKey/generate.post.parameters[2].required: true
paths./boards/{idBoard}/calendarKey/generate.post.parameters[2].type: string
paths./boards/{idBoard}/calendarKey/generate.post.responses.200.description: Success
paths./boards/{idBoard}/calendarKey/generate.post.responses.400.description: Server
  rejection
paths./boards/{idBoard}/calendarKey/generate.post.security.length: 2
paths./boards/{idBoard}/calendarKey/generate.post.security[0].api_key.length: 0
paths./boards/{idBoard}/calendarKey/generate.post.security[1].api_token.length: 0
paths./boards/{idBoard}/calendarKey/generate.post.summary: addBoardsCalendarKeyGenerateByIdBoard()
paths./boards/{idBoard}/calendarKey/generate.post.tags.length: 1
paths./boards/{idBoard}/calendarKey/generate.post.tags[0]: board
paths./boards/{idBoard}/cards.get.operationId: getBoardsCardsByIdBoard
paths./boards/{idBoard}/cards.get.parameters.length: 16
paths./boards/{idBoard}/cards.get.parameters[0].description: board_id
paths./boards/{idBoard}/cards.get.parameters[0].in: path
paths./boards/{idBoard}/cards.get.parameters[0].name: idBoard
paths./boards/{idBoard}/cards.get.parameters[0].required: true
paths./boards/{idBoard}/cards.get.parameters[0].type: string
paths./boards/{idBoard}/cards.get.parameters[1].description: 'all or a comma-separated
  list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard,
  addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem,
  copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization,
  deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation,
  disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
  makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard,
  moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,
  removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
  updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,
  updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed,
  updateList:name, updateMember or updateOrganization'
paths./boards/{idBoard}/cards.get.parameters[1].in: query
paths./boards/{idBoard}/cards.get.parameters[1].name: actions
paths./boards/{idBoard}/cards.get.parameters[1].required: false
paths./boards/{idBoard}/cards.get.parameters[1].type: string
paths./boards/{idBoard}/cards.get.parameters[2].description: A boolean value or &quot;cover&quot;
  for only card cover attachments
paths./boards/{idBoard}/cards.get.parameters[2].in: query
paths./boards/{idBoard}/cards.get.parameters[2].name: attachments
paths./boards/{idBoard}/cards.get.parameters[2].required: false
paths./boards/{idBoard}/cards.get.parameters[2].type: string
paths./boards/{idBoard}/cards.get.parameters[3].default: all
paths./boards/{idBoard}/cards.get.parameters[3].description: 'all or a comma-separated
  list of: bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews or
  url'
paths./boards/{idBoard}/cards.get.parameters[3].in: query
paths./boards/{idBoard}/cards.get.parameters[3].name: attachment_fields
paths./boards/{idBoard}/cards.get.parameters[3].required: false
paths./boards/{idBoard}/cards.get.parameters[3].type: string
paths./boards/{idBoard}/cards.get.parameters[4].description: ' true or false'
paths./boards/{idBoard}/cards.get.parameters[4].in: query
paths./boards/{idBoard}/cards.get.parameters[4].name: stickers
paths./boards/{idBoard}/cards.get.parameters[4].required: false
paths./boards/{idBoard}/cards.get.parameters[4].type: string
paths./boards/{idBoard}/cards.get.parameters[5].description: ' true or false'
paths./boards/{idBoard}/cards.get.parameters[5].in: query
paths./boards/{idBoard}/cards.get.parameters[5].name: members
paths./boards/{idBoard}/cards.get.parameters[5].required: false
paths./boards/{idBoard}/cards.get.parameters[5].type: string
paths./boards/{idBoard}/cards.get.parameters[6].default: avatarHash, fullName, initials
  and username
paths./boards/{idBoard}/cards.get.parameters[6].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./boards/{idBoard}/cards.get.parameters[6].in: query
paths./boards/{idBoard}/cards.get.parameters[6].name: member_fields
paths./boards/{idBoard}/cards.get.parameters[6].required: false
paths./boards/{idBoard}/cards.get.parameters[6].type: string
paths./boards/{idBoard}/cards.get.parameters[7].description: ' true or false'
paths./boards/{idBoard}/cards.get.parameters[7].in: query
paths./boards/{idBoard}/cards.get.parameters[7].name: checkItemStates
paths./boards/{idBoard}/cards.get.parameters[7].required: false
paths./boards/{idBoard}/cards.get.parameters[7].type: string
paths./boards/{idBoard}/cards.get.parameters[8].default: none
paths./boards/{idBoard}/cards.get.parameters[8].description: 'One of: all or none'
paths./boards/{idBoard}/cards.get.parameters[8].in: query
paths./boards/{idBoard}/cards.get.parameters[8].name: checklists
paths./boards/{idBoard}/cards.get.parameters[8].required: false
paths./boards/{idBoard}/cards.get.parameters[8].type: string
paths./boards/{idBoard}/cards.get.parameters[9].description: a number from 1 to 1000
paths./boards/{idBoard}/cards.get.parameters[9].in: query
paths./boards/{idBoard}/cards.get.parameters[9].name: limit
paths./boards/{idBoard}/cards.get.parameters[9].required: false
paths./boards/{idBoard}/cards.get.parameters[9].type: string
paths./boards/{idBoard}/cards.get.parameters[10].description: A date, or null
paths./boards/{idBoard}/cards.get.parameters[10].in: query
paths./boards/{idBoard}/cards.get.parameters[10].name: since
paths./boards/{idBoard}/cards.get.parameters[10].required: false
paths./boards/{idBoard}/cards.get.parameters[10].type: string
paths./boards/{idBoard}/cards.get.parameters[11].description: A date, or null
paths./boards/{idBoard}/cards.get.parameters[11].in: query
paths./boards/{idBoard}/cards.get.parameters[11].name: before
paths./boards/{idBoard}/cards.get.parameters[11].required: false
paths./boards/{idBoard}/cards.get.parameters[11].type: string
paths./boards/{idBoard}/cards.get.parameters[12].default: visible
paths./boards/{idBoard}/cards.get.parameters[12].description: 'One of: all, closed,
  none, open or visible'
paths./boards/{idBoard}/cards.get.parameters[12].in: query
paths./boards/{idBoard}/cards.get.parameters[12].name: filter
paths./boards/{idBoard}/cards.get.parameters[12].required: false
paths./boards/{idBoard}/cards.get.parameters[12].type: string
paths./boards/{idBoard}/cards.get.parameters[13].default: all
paths./boards/{idBoard}/cards.get.parameters[13].description: 'all or a comma-separated
  list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due,
  email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
  idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed
  or url'
paths./boards/{idBoard}/cards.get.parameters[13].in: query
paths./boards/{idBoard}/cards.get.parameters[13].name: fields
paths./boards/{idBoard}/cards.get.parameters[13].required: false
paths./boards/{idBoard}/cards.get.parameters[13].type: string
paths./boards/{idBoard}/cards.get.parameters[14].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/cards.get.parameters[14].in: query
paths./boards/{idBoard}/cards.get.parameters[14].name: key
paths./boards/{idBoard}/cards.get.parameters[14].required: true
paths./boards/{idBoard}/cards.get.parameters[14].type: string
paths./boards/{idBoard}/cards.get.parameters[15].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/cards.get.parameters[15].in: query
paths./boards/{idBoard}/cards.get.parameters[15].name: token
paths./boards/{idBoard}/cards.get.parameters[15].required: true
paths./boards/{idBoard}/cards.get.parameters[15].type: string
paths./boards/{idBoard}/cards.get.responses.200.description: Success
paths./boards/{idBoard}/cards.get.responses.400.description: Server rejection
paths./boards/{idBoard}/cards.get.security.length: 2
paths./boards/{idBoard}/cards.get.security[0].api_key.length: 0
paths./boards/{idBoard}/cards.get.security[1].api_token.length: 0
paths./boards/{idBoard}/cards.get.summary: getBoardsCardsByIdBoard()
paths./boards/{idBoard}/cards.get.tags.length: 1
paths./boards/{idBoard}/cards.get.tags[0]: board
paths./boards/{idBoard}/cards/{filter}.get.operationId: getBoardsCardsByIdBoardByFilter
paths./boards/{idBoard}/cards/{filter}.get.parameters.length: 4
paths./boards/{idBoard}/cards/{filter}.get.parameters[0].description: board_id
paths./boards/{idBoard}/cards/{filter}.get.parameters[0].in: path
paths./boards/{idBoard}/cards/{filter}.get.parameters[0].name: idBoard
paths./boards/{idBoard}/cards/{filter}.get.parameters[0].required: true
paths./boards/{idBoard}/cards/{filter}.get.parameters[0].type: string
paths./boards/{idBoard}/cards/{filter}.get.parameters[1].description: filter
paths./boards/{idBoard}/cards/{filter}.get.parameters[1].in: path
paths./boards/{idBoard}/cards/{filter}.get.parameters[1].name: filter
paths./boards/{idBoard}/cards/{filter}.get.parameters[1].required: true
paths./boards/{idBoard}/cards/{filter}.get.parameters[1].type: string
paths./boards/{idBoard}/cards/{filter}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/cards/{filter}.get.parameters[2].in: query
paths./boards/{idBoard}/cards/{filter}.get.parameters[2].name: key
paths./boards/{idBoard}/cards/{filter}.get.parameters[2].required: true
paths./boards/{idBoard}/cards/{filter}.get.parameters[2].type: string
paths./boards/{idBoard}/cards/{filter}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/cards/{filter}.get.parameters[3].in: query
paths./boards/{idBoard}/cards/{filter}.get.parameters[3].name: token
paths./boards/{idBoard}/cards/{filter}.get.parameters[3].required: true
paths./boards/{idBoard}/cards/{filter}.get.parameters[3].type: string
paths./boards/{idBoard}/cards/{filter}.get.responses.200.description: Success
paths./boards/{idBoard}/cards/{filter}.get.responses.400.description: Server rejection
paths./boards/{idBoard}/cards/{filter}.get.summary: getBoardsCardsByIdBoardByFilter()
paths./boards/{idBoard}/cards/{filter}.get.tags.length: 1
paths./boards/{idBoard}/cards/{filter}.get.tags[0]: board
paths./boards/{idBoard}/cards/{idCard}.get.operationId: getBoardsCardsByIdBoardByIdCard
paths./boards/{idBoard}/cards/{idCard}.get.parameters.length: 20
paths./boards/{idBoard}/cards/{idCard}.get.parameters[0].description: board_id
paths./boards/{idBoard}/cards/{idCard}.get.parameters[0].in: path
paths./boards/{idBoard}/cards/{idCard}.get.parameters[0].name: idBoard
paths./boards/{idBoard}/cards/{idCard}.get.parameters[0].required: true
paths./boards/{idBoard}/cards/{idCard}.get.parameters[0].type: string
paths./boards/{idBoard}/cards/{idCard}.get.parameters[1].description: idCard
paths./boards/{idBoard}/cards/{idCard}.get.parameters[1].in: path
paths./boards/{idBoard}/cards/{idCard}.get.parameters[1].name: idCard
paths./boards/{idBoard}/cards/{idCard}.get.parameters[1].required: true
paths./boards/{idBoard}/cards/{idCard}.get.parameters[1].type: string
paths./boards/{idBoard}/cards/{idCard}.get.parameters[2].description: A boolean value
  or &quot;cover&quot; for only card cover attachments
paths./boards/{idBoard}/cards/{idCard}.get.parameters[2].in: query
paths./boards/{idBoard}/cards/{idCard}.get.parameters[2].name: attachments
paths./boards/{idBoard}/cards/{idCard}.get.parameters[2].required: false
paths./boards/{idBoard}/cards/{idCard}.get.parameters[2].type: string
paths./boards/{idBoard}/cards/{idCard}.get.parameters[3].default: all
paths./boards/{idBoard}/cards/{idCard}.get.parameters[3].description: 'all or a comma-separated
  list of: bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews or
  url'
paths./boards/{idBoard}/cards/{idCard}.get.parameters[3].in: query
paths./boards/{idBoard}/cards/{idCard}.get.parameters[3].name: attachment_fields
paths./boards/{idBoard}/cards/{idCard}.get.parameters[3].required: false
paths./boards/{idBoard}/cards/{idCard}.get.parameters[3].type: string
paths./boards/{idBoard}/cards/{idCard}.get.parameters[4].description: 'all or a comma-separated
  list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard,
  addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem,
  copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization,
  deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation,
  disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
  makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard,
  moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,
  removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
  updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,
  updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed,
  updateList:name, updateMember or updateOrganization'
paths./boards/{idBoard}/cards/{idCard}.get.parameters[4].in: query
paths./boards/{idBoard}/cards/{idCard}.get.parameters[4].name: actions
paths./boards/{idBoard}/cards/{idCard}.get.parameters[4].required: false
paths./boards/{idBoard}/cards/{idCard}.get.parameters[4].type: string
paths./boards/{idBoard}/cards/{idCard}.get.parameters[5].description: ' true or false'
paths./boards/{idBoard}/cards/{idCard}.get.parameters[5].in: query
paths./boards/{idBoard}/cards/{idCard}.get.parameters[5].name: actions_entities
paths./boards/{idBoard}/cards/{idCard}.get.parameters[5].required: false
paths./boards/{idBoard}/cards/{idCard}.get.parameters[5].type: string
paths./boards/{idBoard}/cards/{idCard}.get.parameters[6].description: ' true or false'
paths./boards/{idBoard}/cards/{idCard}.get.parameters[6].in: query
paths./boards/{idBoard}/cards/{idCard}.get.parameters[6].name: actions_display
paths./boards/{idBoard}/cards/{idCard}.get.parameters[6].required: false
paths./boards/{idBoard}/cards/{idCard}.get.parameters[6].type: string
paths./boards/{idBoard}/cards/{idCard}.get.parameters[7].default: "50"
paths./boards/{idBoard}/cards/{idCard}.get.parameters[7].description: a number from
  0 to 1000
paths./boards/{idBoard}/cards/{idCard}.get.parameters[7].in: query
paths./boards/{idBoard}/cards/{idCard}.get.parameters[7].name: actions_limit
paths./boards/{idBoard}/cards/{idCard}.get.parameters[7].required: false
paths./boards/{idBoard}/cards/{idCard}.get.parameters[7].type: string
paths./boards/{idBoard}/cards/{idCard}.get.parameters[8].default: all
paths./boards/{idBoard}/cards/{idCard}.get.parameters[8].description: 'all or a comma-separated
  list of: data, date, idMemberCreator or type'
paths./boards/{idBoard}/cards/{idCard}.get.parameters[8].in: query
paths./boards/{idBoard}/cards/{idCard}.get.parameters[8].name: action_fields
paths./boards/{idBoard}/cards/{idCard}.get.parameters[8].required: false
paths./boards/{idBoard}/cards/{idCard}.get.parameters[8].type: string
paths./boards/{idBoard}/cards/{idCard}.get.parameters[9].default: avatarHash, fullName,
  initials and username
paths./boards/{idBoard}/cards/{idCard}.get.parameters[9].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./boards/{idBoard}/cards/{idCard}.get.parameters[9].in: query
paths./boards/{idBoard}/cards/{idCard}.get.parameters[9].name: action_memberCreator_fields
paths./boards/{idBoard}/cards/{idCard}.get.parameters[9].required: false
paths./boards/{idBoard}/cards/{idCard}.get.parameters[9].type: string
paths./boards/{idBoard}/cards/{idCard}.get.parameters[10].description: ' true or false'
paths./boards/{idBoard}/cards/{idCard}.get.parameters[10].in: query
paths./boards/{idBoard}/cards/{idCard}.get.parameters[10].name: members
paths./boards/{idBoard}/cards/{idCard}.get.parameters[10].required: false
paths./boards/{idBoard}/cards/{idCard}.get.parameters[10].type: string
paths./boards/{idBoard}/cards/{idCard}.get.parameters[11].default: avatarHash, initials,
  fullName and username
paths./boards/{idBoard}/cards/{idCard}.get.parameters[11].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./boards/{idBoard}/cards/{idCard}.get.parameters[11].in: query
paths./boards/{idBoard}/cards/{idCard}.get.parameters[11].name: member_fields
paths./boards/{idBoard}/cards/{idCard}.get.parameters[11].required: false
paths./boards/{idBoard}/cards/{idCard}.get.parameters[11].type: string
paths./boards/{idBoard}/cards/{idCard}.get.parameters[12].description: ' true or false'
paths./boards/{idBoard}/cards/{idCard}.get.parameters[12].in: query
paths./boards/{idBoard}/cards/{idCard}.get.parameters[12].name: checkItemStates
paths./boards/{idBoard}/cards/{idCard}.get.parameters[12].required: false
paths./boards/{idBoard}/cards/{idCard}.get.parameters[12].type: string
paths./boards/{idBoard}/cards/{idCard}.get.parameters[13].default: all
paths./boards/{idBoard}/cards/{idCard}.get.parameters[13].description: 'all or a comma-separated
  list of: idCheckItem or state'
paths./boards/{idBoard}/cards/{idCard}.get.parameters[13].in: query
paths./boards/{idBoard}/cards/{idCard}.get.parameters[13].name: checkItemState_fields
paths./boards/{idBoard}/cards/{idCard}.get.parameters[13].required: false
paths./boards/{idBoard}/cards/{idCard}.get.parameters[13].type: string
paths./boards/{idBoard}/cards/{idCard}.get.parameters[14].description: ' true or false'
paths./boards/{idBoard}/cards/{idCard}.get.parameters[14].in: query
paths./boards/{idBoard}/cards/{idCard}.get.parameters[14].name: labels
paths./boards/{idBoard}/cards/{idCard}.get.parameters[14].required: false
paths./boards/{idBoard}/cards/{idCard}.get.parameters[14].type: string
paths./boards/{idBoard}/cards/{idCard}.get.parameters[15].default: none
paths./boards/{idBoard}/cards/{idCard}.get.parameters[15].description: 'One of: all
  or none'
paths./boards/{idBoard}/cards/{idCard}.get.parameters[15].in: query
paths./boards/{idBoard}/cards/{idCard}.get.parameters[15].name: checklists
paths./boards/{idBoard}/cards/{idCard}.get.parameters[15].required: false
paths./boards/{idBoard}/cards/{idCard}.get.parameters[15].type: string
paths./boards/{idBoard}/cards/{idCard}.get.parameters[16].default: all
paths./boards/{idBoard}/cards/{idCard}.get.parameters[16].description: 'all or a comma-separated
  list of: idBoard, idCard, name or pos'
paths./boards/{idBoard}/cards/{idCard}.get.parameters[16].in: query
paths./boards/{idBoard}/cards/{idCard}.get.parameters[16].name: checklist_fields
paths./boards/{idBoard}/cards/{idCard}.get.parameters[16].required: false
paths./boards/{idBoard}/cards/{idCard}.get.parameters[16].type: string
paths./boards/{idBoard}/cards/{idCard}.get.parameters[17].default: all
paths./boards/{idBoard}/cards/{idCard}.get.parameters[17].description: 'all or a comma-separated
  list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due,
  email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
  idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed
  or url'
paths./boards/{idBoard}/cards/{idCard}.get.parameters[17].in: query
paths./boards/{idBoard}/cards/{idCard}.get.parameters[17].name: fields
paths./boards/{idBoard}/cards/{idCard}.get.parameters[17].required: false
paths./boards/{idBoard}/cards/{idCard}.get.parameters[17].type: string
paths./boards/{idBoard}/cards/{idCard}.get.parameters[18].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/cards/{idCard}.get.parameters[18].in: query
paths./boards/{idBoard}/cards/{idCard}.get.parameters[18].name: key
paths./boards/{idBoard}/cards/{idCard}.get.parameters[18].required: true
paths./boards/{idBoard}/cards/{idCard}.get.parameters[18].type: string
paths./boards/{idBoard}/cards/{idCard}.get.parameters[19].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/cards/{idCard}.get.parameters[19].in: query
paths./boards/{idBoard}/cards/{idCard}.get.parameters[19].name: token
paths./boards/{idBoard}/cards/{idCard}.get.parameters[19].required: true
paths./boards/{idBoard}/cards/{idCard}.get.parameters[19].type: string
paths./boards/{idBoard}/cards/{idCard}.get.responses.200.description: Success
paths./boards/{idBoard}/cards/{idCard}.get.responses.400.description: Server rejection
paths./boards/{idBoard}/cards/{idCard}.get.security.length: 2
paths./boards/{idBoard}/cards/{idCard}.get.security[0].api_key.length: 0
paths./boards/{idBoard}/cards/{idCard}.get.security[1].api_token.length: 0
paths./boards/{idBoard}/cards/{idCard}.get.summary: getBoardsCardsByIdBoardByIdCard()
paths./boards/{idBoard}/cards/{idCard}.get.tags.length: 1
paths./boards/{idBoard}/cards/{idCard}.get.tags[0]: board
paths./boards/{idBoard}/checklists.get.operationId: getBoardsChecklistsByIdBoard
paths./boards/{idBoard}/checklists.get.parameters.length: 9
paths./boards/{idBoard}/checklists.get.parameters[0].description: board_id
paths./boards/{idBoard}/checklists.get.parameters[0].in: path
paths./boards/{idBoard}/checklists.get.parameters[0].name: idBoard
paths./boards/{idBoard}/checklists.get.parameters[0].required: true
paths./boards/{idBoard}/checklists.get.parameters[0].type: string
paths./boards/{idBoard}/checklists.get.parameters[1].default: none
paths./boards/{idBoard}/checklists.get.parameters[1].description: 'One of: all, closed,
  none, open or visible'
paths./boards/{idBoard}/checklists.get.parameters[1].in: query
paths./boards/{idBoard}/checklists.get.parameters[1].name: cards
paths./boards/{idBoard}/checklists.get.parameters[1].required: false
paths./boards/{idBoard}/checklists.get.parameters[1].type: string
paths./boards/{idBoard}/checklists.get.parameters[2].default: all
paths./boards/{idBoard}/checklists.get.parameters[2].description: 'all or a comma-separated
  list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due,
  email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
  idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed
  or url'
paths./boards/{idBoard}/checklists.get.parameters[2].in: query
paths./boards/{idBoard}/checklists.get.parameters[2].name: card_fields
paths./boards/{idBoard}/checklists.get.parameters[2].required: false
paths./boards/{idBoard}/checklists.get.parameters[2].type: string
paths./boards/{idBoard}/checklists.get.parameters[3].default: all
paths./boards/{idBoard}/checklists.get.parameters[3].description: 'One of: all or
  none'
paths./boards/{idBoard}/checklists.get.parameters[3].in: query
paths./boards/{idBoard}/checklists.get.parameters[3].name: checkItems
paths./boards/{idBoard}/checklists.get.parameters[3].required: false
paths./boards/{idBoard}/checklists.get.parameters[3].type: string
paths./boards/{idBoard}/checklists.get.parameters[4].default: name, nameData, pos
  and state
paths./boards/{idBoard}/checklists.get.parameters[4].description: 'all or a comma-separated
  list of: name, nameData, pos, state or type'
paths./boards/{idBoard}/checklists.get.parameters[4].in: query
paths./boards/{idBoard}/checklists.get.parameters[4].name: checkItem_fields
paths./boards/{idBoard}/checklists.get.parameters[4].required: false
paths./boards/{idBoard}/checklists.get.parameters[4].type: string
paths./boards/{idBoard}/checklists.get.parameters[5].default: all
paths./boards/{idBoard}/checklists.get.parameters[5].description: 'One of: all or
  none'
paths./boards/{idBoard}/checklists.get.parameters[5].in: query
paths./boards/{idBoard}/checklists.get.parameters[5].name: filter
paths./boards/{idBoard}/checklists.get.parameters[5].required: false
paths./boards/{idBoard}/checklists.get.parameters[5].type: string
paths./boards/{idBoard}/checklists.get.parameters[6].default: all
paths./boards/{idBoard}/checklists.get.parameters[6].description: 'all or a comma-separated
  list of: idBoard, idCard, name or pos'
paths./boards/{idBoard}/checklists.get.parameters[6].in: query
paths./boards/{idBoard}/checklists.get.parameters[6].name: fields
paths./boards/{idBoard}/checklists.get.parameters[6].required: false
paths./boards/{idBoard}/checklists.get.parameters[6].type: string
paths./boards/{idBoard}/checklists.get.parameters[7].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/checklists.get.parameters[7].in: query
paths./boards/{idBoard}/checklists.get.parameters[7].name: key
paths./boards/{idBoard}/checklists.get.parameters[7].required: true
paths./boards/{idBoard}/checklists.get.parameters[7].type: string
paths./boards/{idBoard}/checklists.get.parameters[8].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/checklists.get.parameters[8].in: query
paths./boards/{idBoard}/checklists.get.parameters[8].name: token
paths./boards/{idBoard}/checklists.get.parameters[8].required: true
paths./boards/{idBoard}/checklists.get.parameters[8].type: string
paths./boards/{idBoard}/checklists.get.responses.200.description: Success
paths./boards/{idBoard}/checklists.get.responses.400.description: Server rejection
paths./boards/{idBoard}/checklists.get.security.length: 2
paths./boards/{idBoard}/checklists.get.security[0].api_key.length: 0
paths./boards/{idBoard}/checklists.get.security[1].api_token.length: 0
paths./boards/{idBoard}/checklists.get.summary: getBoardsChecklistsByIdBoard()
paths./boards/{idBoard}/checklists.get.tags.length: 1
paths./boards/{idBoard}/checklists.get.tags[0]: board
paths./boards/{idBoard}/checklists.post.operationId: addBoardsChecklistsByIdBoard
paths./boards/{idBoard}/checklists.post.parameters.length: 4
paths./boards/{idBoard}/checklists.post.parameters[0].description: board_id
paths./boards/{idBoard}/checklists.post.parameters[0].in: path
paths./boards/{idBoard}/checklists.post.parameters[0].name: idBoard
paths./boards/{idBoard}/checklists.post.parameters[0].required: true
paths./boards/{idBoard}/checklists.post.parameters[0].type: string
paths./boards/{idBoard}/checklists.post.parameters[1].description: Attributes of "Boards
  Checklists" to be added.
paths./boards/{idBoard}/checklists.post.parameters[1].in: body
paths./boards/{idBoard}/checklists.post.parameters[1].name: body
paths./boards/{idBoard}/checklists.post.parameters[1].required: true
paths./boards/{idBoard}/checklists.post.parameters[1].schema.$ref: '#/definitions/boards_checklists'
paths./boards/{idBoard}/checklists.post.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/checklists.post.parameters[2].in: query
paths./boards/{idBoard}/checklists.post.parameters[2].name: key
paths./boards/{idBoard}/checklists.post.parameters[2].required: true
paths./boards/{idBoard}/checklists.post.parameters[2].type: string
paths./boards/{idBoard}/checklists.post.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/checklists.post.parameters[3].in: query
paths./boards/{idBoard}/checklists.post.parameters[3].name: token
paths./boards/{idBoard}/checklists.post.parameters[3].required: true
paths./boards/{idBoard}/checklists.post.parameters[3].type: string
paths./boards/{idBoard}/checklists.post.responses.200.description: Success
paths./boards/{idBoard}/checklists.post.responses.400.description: Server rejection
paths./boards/{idBoard}/checklists.post.security.length: 2
paths./boards/{idBoard}/checklists.post.security[0].api_key.length: 0
paths./boards/{idBoard}/checklists.post.security[1].api_token.length: 0
paths./boards/{idBoard}/checklists.post.summary: addBoardsChecklistsByIdBoard()
paths./boards/{idBoard}/checklists.post.tags.length: 1
paths./boards/{idBoard}/checklists.post.tags[0]: board
paths./boards/{idBoard}/closed.put.operationId: updateBoardsClosedByIdBoard
paths./boards/{idBoard}/closed.put.parameters.length: 4
paths./boards/{idBoard}/closed.put.parameters[0].description: board_id
paths./boards/{idBoard}/closed.put.parameters[0].in: path
paths./boards/{idBoard}/closed.put.parameters[0].name: idBoard
paths./boards/{idBoard}/closed.put.parameters[0].required: true
paths./boards/{idBoard}/closed.put.parameters[0].type: string
paths./boards/{idBoard}/closed.put.parameters[1].description: Attributes of "Boards
  Closed" to be updated.
paths./boards/{idBoard}/closed.put.parameters[1].in: body
paths./boards/{idBoard}/closed.put.parameters[1].name: body
paths./boards/{idBoard}/closed.put.parameters[1].required: true
paths./boards/{idBoard}/closed.put.parameters[1].schema.$ref: '#/definitions/boards_closed'
paths./boards/{idBoard}/closed.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/closed.put.parameters[2].in: query
paths./boards/{idBoard}/closed.put.parameters[2].name: key
paths./boards/{idBoard}/closed.put.parameters[2].required: true
paths./boards/{idBoard}/closed.put.parameters[2].type: string
paths./boards/{idBoard}/closed.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/closed.put.parameters[3].in: query
paths./boards/{idBoard}/closed.put.parameters[3].name: token
paths./boards/{idBoard}/closed.put.parameters[3].required: true
paths./boards/{idBoard}/closed.put.parameters[3].type: string
paths./boards/{idBoard}/closed.put.responses.200.description: Success
paths./boards/{idBoard}/closed.put.responses.400.description: Server rejection
paths./boards/{idBoard}/closed.put.security.length: 2
paths./boards/{idBoard}/closed.put.security[0].api_key.length: 0
paths./boards/{idBoard}/closed.put.security[1].api_token.length: 0
paths./boards/{idBoard}/closed.put.summary: updateBoardsClosedByIdBoard()
paths./boards/{idBoard}/closed.put.tags.length: 1
paths./boards/{idBoard}/closed.put.tags[0]: board
paths./boards/{idBoard}/deltas.get.operationId: getBoardsDeltasByIdBoard
paths./boards/{idBoard}/deltas.get.parameters.length: 5
paths./boards/{idBoard}/deltas.get.parameters[0].description: board_id
paths./boards/{idBoard}/deltas.get.parameters[0].in: path
paths./boards/{idBoard}/deltas.get.parameters[0].name: idBoard
paths./boards/{idBoard}/deltas.get.parameters[0].required: true
paths./boards/{idBoard}/deltas.get.parameters[0].type: string
paths./boards/{idBoard}/deltas.get.parameters[1].description: A valid tag for subscribing
paths./boards/{idBoard}/deltas.get.parameters[1].in: query
paths./boards/{idBoard}/deltas.get.parameters[1].name: tags
paths./boards/{idBoard}/deltas.get.parameters[1].required: true
paths./boards/{idBoard}/deltas.get.parameters[1].type: string
paths./boards/{idBoard}/deltas.get.parameters[2].description: a number from -1 to
  Infinity
paths./boards/{idBoard}/deltas.get.parameters[2].in: query
paths./boards/{idBoard}/deltas.get.parameters[2].name: ixLastUpdate
paths./boards/{idBoard}/deltas.get.parameters[2].required: true
paths./boards/{idBoard}/deltas.get.parameters[2].type: string
paths./boards/{idBoard}/deltas.get.parameters[3].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/deltas.get.parameters[3].in: query
paths./boards/{idBoard}/deltas.get.parameters[3].name: key
paths./boards/{idBoard}/deltas.get.parameters[3].required: true
paths./boards/{idBoard}/deltas.get.parameters[3].type: string
paths./boards/{idBoard}/deltas.get.parameters[4].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/deltas.get.parameters[4].in: query
paths./boards/{idBoard}/deltas.get.parameters[4].name: token
paths./boards/{idBoard}/deltas.get.parameters[4].required: true
paths./boards/{idBoard}/deltas.get.parameters[4].type: string
paths./boards/{idBoard}/deltas.get.responses.200.description: Success
paths./boards/{idBoard}/deltas.get.responses.400.description: Server rejection
paths./boards/{idBoard}/deltas.get.security.length: 2
paths./boards/{idBoard}/deltas.get.security[0].api_key.length: 0
paths./boards/{idBoard}/deltas.get.security[1].api_token.length: 0
paths./boards/{idBoard}/deltas.get.summary: getBoardsDeltasByIdBoard()
paths./boards/{idBoard}/deltas.get.tags.length: 1
paths./boards/{idBoard}/deltas.get.tags[0]: board
paths./boards/{idBoard}/desc.put.operationId: updateBoardsDescByIdBoard
paths./boards/{idBoard}/desc.put.parameters.length: 4
paths./boards/{idBoard}/desc.put.parameters[0].description: board_id
paths./boards/{idBoard}/desc.put.parameters[0].in: path
paths./boards/{idBoard}/desc.put.parameters[0].name: idBoard
paths./boards/{idBoard}/desc.put.parameters[0].required: true
paths./boards/{idBoard}/desc.put.parameters[0].type: string
paths./boards/{idBoard}/desc.put.parameters[1].description: Attributes of "Boards
  Desc" to be updated.
paths./boards/{idBoard}/desc.put.parameters[1].in: body
paths./boards/{idBoard}/desc.put.parameters[1].name: body
paths./boards/{idBoard}/desc.put.parameters[1].required: true
paths./boards/{idBoard}/desc.put.parameters[1].schema.$ref: '#/definitions/boards_desc'
paths./boards/{idBoard}/desc.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/desc.put.parameters[2].in: query
paths./boards/{idBoard}/desc.put.parameters[2].name: key
paths./boards/{idBoard}/desc.put.parameters[2].required: true
paths./boards/{idBoard}/desc.put.parameters[2].type: string
paths./boards/{idBoard}/desc.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/desc.put.parameters[3].in: query
paths./boards/{idBoard}/desc.put.parameters[3].name: token
paths./boards/{idBoard}/desc.put.parameters[3].required: true
paths./boards/{idBoard}/desc.put.parameters[3].type: string
paths./boards/{idBoard}/desc.put.responses.200.description: Success
paths./boards/{idBoard}/desc.put.responses.400.description: Server rejection
paths./boards/{idBoard}/desc.put.security.length: 2
paths./boards/{idBoard}/desc.put.security[0].api_key.length: 0
paths./boards/{idBoard}/desc.put.security[1].api_token.length: 0
paths./boards/{idBoard}/desc.put.summary: updateBoardsDescByIdBoard()
paths./boards/{idBoard}/desc.put.tags.length: 1
paths./boards/{idBoard}/desc.put.tags[0]: board
paths./boards/{idBoard}/emailKey/generate.post.operationId: addBoardsEmailKeyGenerateByIdBoard
paths./boards/{idBoard}/emailKey/generate.post.parameters.length: 3
paths./boards/{idBoard}/emailKey/generate.post.parameters[0].description: board_id
paths./boards/{idBoard}/emailKey/generate.post.parameters[0].in: path
paths./boards/{idBoard}/emailKey/generate.post.parameters[0].name: idBoard
paths./boards/{idBoard}/emailKey/generate.post.parameters[0].required: true
paths./boards/{idBoard}/emailKey/generate.post.parameters[0].type: string
paths./boards/{idBoard}/emailKey/generate.post.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/emailKey/generate.post.parameters[1].in: query
paths./boards/{idBoard}/emailKey/generate.post.parameters[1].name: key
paths./boards/{idBoard}/emailKey/generate.post.parameters[1].required: true
paths./boards/{idBoard}/emailKey/generate.post.parameters[1].type: string
paths./boards/{idBoard}/emailKey/generate.post.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/emailKey/generate.post.parameters[2].in: query
paths./boards/{idBoard}/emailKey/generate.post.parameters[2].name: token
paths./boards/{idBoard}/emailKey/generate.post.parameters[2].required: true
paths./boards/{idBoard}/emailKey/generate.post.parameters[2].type: string
paths./boards/{idBoard}/emailKey/generate.post.responses.200.description: Success
paths./boards/{idBoard}/emailKey/generate.post.responses.400.description: Server rejection
paths./boards/{idBoard}/emailKey/generate.post.security.length: 2
paths./boards/{idBoard}/emailKey/generate.post.security[0].api_key.length: 0
paths./boards/{idBoard}/emailKey/generate.post.security[1].api_token.length: 0
paths./boards/{idBoard}/emailKey/generate.post.summary: addBoardsEmailKeyGenerateByIdBoard()
paths./boards/{idBoard}/emailKey/generate.post.tags.length: 1
paths./boards/{idBoard}/emailKey/generate.post.tags[0]: board
paths./boards/{idBoard}/idOrganization.put.operationId: updateBoardsIdOrganizationByIdBoard
paths./boards/{idBoard}/idOrganization.put.parameters.length: 4
paths./boards/{idBoard}/idOrganization.put.parameters[0].description: board_id
paths./boards/{idBoard}/idOrganization.put.parameters[0].in: path
paths./boards/{idBoard}/idOrganization.put.parameters[0].name: idBoard
paths./boards/{idBoard}/idOrganization.put.parameters[0].required: true
paths./boards/{idBoard}/idOrganization.put.parameters[0].type: string
paths./boards/{idBoard}/idOrganization.put.parameters[1].description: Attributes of
  "Boards Id Organization" to be updated.
paths./boards/{idBoard}/idOrganization.put.parameters[1].in: body
paths./boards/{idBoard}/idOrganization.put.parameters[1].name: body
paths./boards/{idBoard}/idOrganization.put.parameters[1].required: true
paths./boards/{idBoard}/idOrganization.put.parameters[1].schema.$ref: '#/definitions/boards_idOrganization'
paths./boards/{idBoard}/idOrganization.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/idOrganization.put.parameters[2].in: query
paths./boards/{idBoard}/idOrganization.put.parameters[2].name: key
paths./boards/{idBoard}/idOrganization.put.parameters[2].required: true
paths./boards/{idBoard}/idOrganization.put.parameters[2].type: string
paths./boards/{idBoard}/idOrganization.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/idOrganization.put.parameters[3].in: query
paths./boards/{idBoard}/idOrganization.put.parameters[3].name: token
paths./boards/{idBoard}/idOrganization.put.parameters[3].required: true
paths./boards/{idBoard}/idOrganization.put.parameters[3].type: string
paths./boards/{idBoard}/idOrganization.put.responses.200.description: Success
paths./boards/{idBoard}/idOrganization.put.responses.400.description: Server rejection
paths./boards/{idBoard}/idOrganization.put.security.length: 2
paths./boards/{idBoard}/idOrganization.put.security[0].api_key.length: 0
paths./boards/{idBoard}/idOrganization.put.security[1].api_token.length: 0
paths./boards/{idBoard}/idOrganization.put.summary: updateBoardsIdOrganizationByIdBoard()
paths./boards/{idBoard}/idOrganization.put.tags.length: 1
paths./boards/{idBoard}/idOrganization.put.tags[0]: board
paths./boards/{idBoard}/labelNames/blue.put.operationId: updateBoardsLabelNamesBlueByIdBoard
paths./boards/{idBoard}/labelNames/blue.put.parameters.length: 4
paths./boards/{idBoard}/labelNames/blue.put.parameters[0].description: board_id
paths./boards/{idBoard}/labelNames/blue.put.parameters[0].in: path
paths./boards/{idBoard}/labelNames/blue.put.parameters[0].name: idBoard
paths./boards/{idBoard}/labelNames/blue.put.parameters[0].required: true
paths./boards/{idBoard}/labelNames/blue.put.parameters[0].type: string
paths./boards/{idBoard}/labelNames/blue.put.parameters[1].description: Attributes
  of "Label Names Blue" to be updated.
paths./boards/{idBoard}/labelNames/blue.put.parameters[1].in: body
paths./boards/{idBoard}/labelNames/blue.put.parameters[1].name: body
paths./boards/{idBoard}/labelNames/blue.put.parameters[1].required: true
paths./boards/{idBoard}/labelNames/blue.put.parameters[1].schema.$ref: '#/definitions/labelNames_blue'
paths./boards/{idBoard}/labelNames/blue.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/labelNames/blue.put.parameters[2].in: query
paths./boards/{idBoard}/labelNames/blue.put.parameters[2].name: key
paths./boards/{idBoard}/labelNames/blue.put.parameters[2].required: true
paths./boards/{idBoard}/labelNames/blue.put.parameters[2].type: string
paths./boards/{idBoard}/labelNames/blue.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/labelNames/blue.put.parameters[3].in: query
paths./boards/{idBoard}/labelNames/blue.put.parameters[3].name: token
paths./boards/{idBoard}/labelNames/blue.put.parameters[3].required: true
paths./boards/{idBoard}/labelNames/blue.put.parameters[3].type: string
paths./boards/{idBoard}/labelNames/blue.put.responses.200.description: Success
paths./boards/{idBoard}/labelNames/blue.put.responses.400.description: Server rejection
paths./boards/{idBoard}/labelNames/blue.put.security.length: 2
paths./boards/{idBoard}/labelNames/blue.put.security[0].api_key.length: 0
paths./boards/{idBoard}/labelNames/blue.put.security[1].api_token.length: 0
paths./boards/{idBoard}/labelNames/blue.put.summary: updateBoardsLabelNamesBlueByIdBoard()
paths./boards/{idBoard}/labelNames/blue.put.tags.length: 1
paths./boards/{idBoard}/labelNames/blue.put.tags[0]: board
paths./boards/{idBoard}/labelNames/green.put.operationId: updateBoardsLabelNamesGreenByIdBoard
paths./boards/{idBoard}/labelNames/green.put.parameters.length: 4
paths./boards/{idBoard}/labelNames/green.put.parameters[0].description: board_id
paths./boards/{idBoard}/labelNames/green.put.parameters[0].in: path
paths./boards/{idBoard}/labelNames/green.put.parameters[0].name: idBoard
paths./boards/{idBoard}/labelNames/green.put.parameters[0].required: true
paths./boards/{idBoard}/labelNames/green.put.parameters[0].type: string
paths./boards/{idBoard}/labelNames/green.put.parameters[1].description: Attributes
  of "Label Names Green" to be updated.
paths./boards/{idBoard}/labelNames/green.put.parameters[1].in: body
paths./boards/{idBoard}/labelNames/green.put.parameters[1].name: body
paths./boards/{idBoard}/labelNames/green.put.parameters[1].required: true
paths./boards/{idBoard}/labelNames/green.put.parameters[1].schema.$ref: '#/definitions/labelNames_green'
paths./boards/{idBoard}/labelNames/green.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/labelNames/green.put.parameters[2].in: query
paths./boards/{idBoard}/labelNames/green.put.parameters[2].name: key
paths./boards/{idBoard}/labelNames/green.put.parameters[2].required: true
paths./boards/{idBoard}/labelNames/green.put.parameters[2].type: string
paths./boards/{idBoard}/labelNames/green.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/labelNames/green.put.parameters[3].in: query
paths./boards/{idBoard}/labelNames/green.put.parameters[3].name: token
paths./boards/{idBoard}/labelNames/green.put.parameters[3].required: true
paths./boards/{idBoard}/labelNames/green.put.parameters[3].type: string
paths./boards/{idBoard}/labelNames/green.put.responses.200.description: Success
paths./boards/{idBoard}/labelNames/green.put.responses.400.description: Server rejection
paths./boards/{idBoard}/labelNames/green.put.security.length: 2
paths./boards/{idBoard}/labelNames/green.put.security[0].api_key.length: 0
paths./boards/{idBoard}/labelNames/green.put.security[1].api_token.length: 0
paths./boards/{idBoard}/labelNames/green.put.summary: updateBoardsLabelNamesGreenByIdBoard()
paths./boards/{idBoard}/labelNames/green.put.tags.length: 1
paths./boards/{idBoard}/labelNames/green.put.tags[0]: board
paths./boards/{idBoard}/labelNames/orange.put.operationId: updateBoardsLabelNamesOrangeByIdBoard
paths./boards/{idBoard}/labelNames/orange.put.parameters.length: 4
paths./boards/{idBoard}/labelNames/orange.put.parameters[0].description: board_id
paths./boards/{idBoard}/labelNames/orange.put.parameters[0].in: path
paths./boards/{idBoard}/labelNames/orange.put.parameters[0].name: idBoard
paths./boards/{idBoard}/labelNames/orange.put.parameters[0].required: true
paths./boards/{idBoard}/labelNames/orange.put.parameters[0].type: string
paths./boards/{idBoard}/labelNames/orange.put.parameters[1].description: Attributes
  of "Label Names Orange" to be updated.
paths./boards/{idBoard}/labelNames/orange.put.parameters[1].in: body
paths./boards/{idBoard}/labelNames/orange.put.parameters[1].name: body
paths./boards/{idBoard}/labelNames/orange.put.parameters[1].required: true
paths./boards/{idBoard}/labelNames/orange.put.parameters[1].schema.$ref: '#/definitions/labelNames_orange'
paths./boards/{idBoard}/labelNames/orange.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/labelNames/orange.put.parameters[2].in: query
paths./boards/{idBoard}/labelNames/orange.put.parameters[2].name: key
paths./boards/{idBoard}/labelNames/orange.put.parameters[2].required: true
paths./boards/{idBoard}/labelNames/orange.put.parameters[2].type: string
paths./boards/{idBoard}/labelNames/orange.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/labelNames/orange.put.parameters[3].in: query
paths./boards/{idBoard}/labelNames/orange.put.parameters[3].name: token
paths./boards/{idBoard}/labelNames/orange.put.parameters[3].required: true
paths./boards/{idBoard}/labelNames/orange.put.parameters[3].type: string
paths./boards/{idBoard}/labelNames/orange.put.responses.200.description: Success
paths./boards/{idBoard}/labelNames/orange.put.responses.400.description: Server rejection
paths./boards/{idBoard}/labelNames/orange.put.security.length: 2
paths./boards/{idBoard}/labelNames/orange.put.security[0].api_key.length: 0
paths./boards/{idBoard}/labelNames/orange.put.security[1].api_token.length: 0
paths./boards/{idBoard}/labelNames/orange.put.summary: updateBoardsLabelNamesOrangeByIdBoard()
paths./boards/{idBoard}/labelNames/orange.put.tags.length: 1
paths./boards/{idBoard}/labelNames/orange.put.tags[0]: board
paths./boards/{idBoard}/labelNames/purple.put.operationId: updateBoardsLabelNamesPurpleByIdBoard
paths./boards/{idBoard}/labelNames/purple.put.parameters.length: 4
paths./boards/{idBoard}/labelNames/purple.put.parameters[0].description: board_id
paths./boards/{idBoard}/labelNames/purple.put.parameters[0].in: path
paths./boards/{idBoard}/labelNames/purple.put.parameters[0].name: idBoard
paths./boards/{idBoard}/labelNames/purple.put.parameters[0].required: true
paths./boards/{idBoard}/labelNames/purple.put.parameters[0].type: string
paths./boards/{idBoard}/labelNames/purple.put.parameters[1].description: Attributes
  of "Label Names Purple" to be updated.
paths./boards/{idBoard}/labelNames/purple.put.parameters[1].in: body
paths./boards/{idBoard}/labelNames/purple.put.parameters[1].name: body
paths./boards/{idBoard}/labelNames/purple.put.parameters[1].required: true
paths./boards/{idBoard}/labelNames/purple.put.parameters[1].schema.$ref: '#/definitions/labelNames_purple'
paths./boards/{idBoard}/labelNames/purple.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/labelNames/purple.put.parameters[2].in: query
paths./boards/{idBoard}/labelNames/purple.put.parameters[2].name: key
paths./boards/{idBoard}/labelNames/purple.put.parameters[2].required: true
paths./boards/{idBoard}/labelNames/purple.put.parameters[2].type: string
paths./boards/{idBoard}/labelNames/purple.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/labelNames/purple.put.parameters[3].in: query
paths./boards/{idBoard}/labelNames/purple.put.parameters[3].name: token
paths./boards/{idBoard}/labelNames/purple.put.parameters[3].required: true
paths./boards/{idBoard}/labelNames/purple.put.parameters[3].type: string
paths./boards/{idBoard}/labelNames/purple.put.responses.200.description: Success
paths./boards/{idBoard}/labelNames/purple.put.responses.400.description: Server rejection
paths./boards/{idBoard}/labelNames/purple.put.security.length: 2
paths./boards/{idBoard}/labelNames/purple.put.security[0].api_key.length: 0
paths./boards/{idBoard}/labelNames/purple.put.security[1].api_token.length: 0
paths./boards/{idBoard}/labelNames/purple.put.summary: updateBoardsLabelNamesPurpleByIdBoard()
paths./boards/{idBoard}/labelNames/purple.put.tags.length: 1
paths./boards/{idBoard}/labelNames/purple.put.tags[0]: board
paths./boards/{idBoard}/labelNames/red.put.operationId: updateBoardsLabelNamesRedByIdBoard
paths./boards/{idBoard}/labelNames/red.put.parameters.length: 4
paths./boards/{idBoard}/labelNames/red.put.parameters[0].description: board_id
paths./boards/{idBoard}/labelNames/red.put.parameters[0].in: path
paths./boards/{idBoard}/labelNames/red.put.parameters[0].name: idBoard
paths./boards/{idBoard}/labelNames/red.put.parameters[0].required: true
paths./boards/{idBoard}/labelNames/red.put.parameters[0].type: string
paths./boards/{idBoard}/labelNames/red.put.parameters[1].description: Attributes of
  "Label Names Red" to be updated.
paths./boards/{idBoard}/labelNames/red.put.parameters[1].in: body
paths./boards/{idBoard}/labelNames/red.put.parameters[1].name: body
paths./boards/{idBoard}/labelNames/red.put.parameters[1].required: true
paths./boards/{idBoard}/labelNames/red.put.parameters[1].schema.$ref: '#/definitions/labelNames_red'
paths./boards/{idBoard}/labelNames/red.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/labelNames/red.put.parameters[2].in: query
paths./boards/{idBoard}/labelNames/red.put.parameters[2].name: key
paths./boards/{idBoard}/labelNames/red.put.parameters[2].required: true
paths./boards/{idBoard}/labelNames/red.put.parameters[2].type: string
paths./boards/{idBoard}/labelNames/red.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/labelNames/red.put.parameters[3].in: query
paths./boards/{idBoard}/labelNames/red.put.parameters[3].name: token
paths./boards/{idBoard}/labelNames/red.put.parameters[3].required: true
paths./boards/{idBoard}/labelNames/red.put.parameters[3].type: string
paths./boards/{idBoard}/labelNames/red.put.responses.200.description: Success
paths./boards/{idBoard}/labelNames/red.put.responses.400.description: Server rejection
paths./boards/{idBoard}/labelNames/red.put.security.length: 2
paths./boards/{idBoard}/labelNames/red.put.security[0].api_key.length: 0
paths./boards/{idBoard}/labelNames/red.put.security[1].api_token.length: 0
paths./boards/{idBoard}/labelNames/red.put.summary: updateBoardsLabelNamesRedByIdBoard()
paths./boards/{idBoard}/labelNames/red.put.tags.length: 1
paths./boards/{idBoard}/labelNames/red.put.tags[0]: board
paths./boards/{idBoard}/labelNames/yellow.put.operationId: updateBoardsLabelNamesYellowByIdBoard
paths./boards/{idBoard}/labelNames/yellow.put.parameters.length: 4
paths./boards/{idBoard}/labelNames/yellow.put.parameters[0].description: board_id
paths./boards/{idBoard}/labelNames/yellow.put.parameters[0].in: path
paths./boards/{idBoard}/labelNames/yellow.put.parameters[0].name: idBoard
paths./boards/{idBoard}/labelNames/yellow.put.parameters[0].required: true
paths./boards/{idBoard}/labelNames/yellow.put.parameters[0].type: string
paths./boards/{idBoard}/labelNames/yellow.put.parameters[1].description: Attributes
  of "Label Names Yellow" to be updated.
paths./boards/{idBoard}/labelNames/yellow.put.parameters[1].in: body
paths./boards/{idBoard}/labelNames/yellow.put.parameters[1].name: body
paths./boards/{idBoard}/labelNames/yellow.put.parameters[1].required: true
paths./boards/{idBoard}/labelNames/yellow.put.parameters[1].schema.$ref: '#/definitions/labelNames_yellow'
paths./boards/{idBoard}/labelNames/yellow.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/labelNames/yellow.put.parameters[2].in: query
paths./boards/{idBoard}/labelNames/yellow.put.parameters[2].name: key
paths./boards/{idBoard}/labelNames/yellow.put.parameters[2].required: true
paths./boards/{idBoard}/labelNames/yellow.put.parameters[2].type: string
paths./boards/{idBoard}/labelNames/yellow.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/labelNames/yellow.put.parameters[3].in: query
paths./boards/{idBoard}/labelNames/yellow.put.parameters[3].name: token
paths./boards/{idBoard}/labelNames/yellow.put.parameters[3].required: true
paths./boards/{idBoard}/labelNames/yellow.put.parameters[3].type: string
paths./boards/{idBoard}/labelNames/yellow.put.responses.200.description: Success
paths./boards/{idBoard}/labelNames/yellow.put.responses.400.description: Server rejection
paths./boards/{idBoard}/labelNames/yellow.put.security.length: 2
paths./boards/{idBoard}/labelNames/yellow.put.security[0].api_key.length: 0
paths./boards/{idBoard}/labelNames/yellow.put.security[1].api_token.length: 0
paths./boards/{idBoard}/labelNames/yellow.put.summary: updateBoardsLabelNamesYellowByIdBoard()
paths./boards/{idBoard}/labelNames/yellow.put.tags.length: 1
paths./boards/{idBoard}/labelNames/yellow.put.tags[0]: board
paths./boards/{idBoard}/labels.get.operationId: getBoardsLabelsByIdBoard
paths./boards/{idBoard}/labels.get.parameters.length: 5
paths./boards/{idBoard}/labels.get.parameters[0].description: board_id
paths./boards/{idBoard}/labels.get.parameters[0].in: path
paths./boards/{idBoard}/labels.get.parameters[0].name: idBoard
paths./boards/{idBoard}/labels.get.parameters[0].required: true
paths./boards/{idBoard}/labels.get.parameters[0].type: string
paths./boards/{idBoard}/labels.get.parameters[1].default: all
paths./boards/{idBoard}/labels.get.parameters[1].description: 'all or a comma-separated
  list of: color, idBoard, name or uses'
paths./boards/{idBoard}/labels.get.parameters[1].in: query
paths./boards/{idBoard}/labels.get.parameters[1].name: fields
paths./boards/{idBoard}/labels.get.parameters[1].required: false
paths./boards/{idBoard}/labels.get.parameters[1].type: string
paths./boards/{idBoard}/labels.get.parameters[2].default: "50"
paths./boards/{idBoard}/labels.get.parameters[2].description: a number from 0 to 1000
paths./boards/{idBoard}/labels.get.parameters[2].in: query
paths./boards/{idBoard}/labels.get.parameters[2].name: limit
paths./boards/{idBoard}/labels.get.parameters[2].required: false
paths./boards/{idBoard}/labels.get.parameters[2].type: string
paths./boards/{idBoard}/labels.get.parameters[3].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/labels.get.parameters[3].in: query
paths./boards/{idBoard}/labels.get.parameters[3].name: key
paths./boards/{idBoard}/labels.get.parameters[3].required: true
paths./boards/{idBoard}/labels.get.parameters[3].type: string
paths./boards/{idBoard}/labels.get.parameters[4].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/labels.get.parameters[4].in: query
paths./boards/{idBoard}/labels.get.parameters[4].name: token
paths./boards/{idBoard}/labels.get.parameters[4].required: true
paths./boards/{idBoard}/labels.get.parameters[4].type: string
paths./boards/{idBoard}/labels.get.responses.200.description: Success
paths./boards/{idBoard}/labels.get.responses.400.description: Server rejection
paths./boards/{idBoard}/labels.get.security.length: 2
paths./boards/{idBoard}/labels.get.security[0].api_key.length: 0
paths./boards/{idBoard}/labels.get.security[1].api_token.length: 0
paths./boards/{idBoard}/labels.get.summary: getBoardsLabelsByIdBoard()
paths./boards/{idBoard}/labels.get.tags.length: 1
paths./boards/{idBoard}/labels.get.tags[0]: board
paths./boards/{idBoard}/labels.post.operationId: addBoardsLabelsByIdBoard
paths./boards/{idBoard}/labels.post.parameters.length: 4
paths./boards/{idBoard}/labels.post.parameters[0].description: board_id
paths./boards/{idBoard}/labels.post.parameters[0].in: path
paths./boards/{idBoard}/labels.post.parameters[0].name: idBoard
paths./boards/{idBoard}/labels.post.parameters[0].required: true
paths./boards/{idBoard}/labels.post.parameters[0].type: string
paths./boards/{idBoard}/labels.post.parameters[1].description: Attributes of "Boards
  Labels" to be added.
paths./boards/{idBoard}/labels.post.parameters[1].in: body
paths./boards/{idBoard}/labels.post.parameters[1].name: body
paths./boards/{idBoard}/labels.post.parameters[1].required: true
paths./boards/{idBoard}/labels.post.parameters[1].schema.$ref: '#/definitions/boards_labels'
paths./boards/{idBoard}/labels.post.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/labels.post.parameters[2].in: query
paths./boards/{idBoard}/labels.post.parameters[2].name: key
paths./boards/{idBoard}/labels.post.parameters[2].required: true
paths./boards/{idBoard}/labels.post.parameters[2].type: string
paths./boards/{idBoard}/labels.post.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/labels.post.parameters[3].in: query
paths./boards/{idBoard}/labels.post.parameters[3].name: token
paths./boards/{idBoard}/labels.post.parameters[3].required: true
paths./boards/{idBoard}/labels.post.parameters[3].type: string
paths./boards/{idBoard}/labels.post.responses.200.description: Success
paths./boards/{idBoard}/labels.post.responses.400.description: Server rejection
paths./boards/{idBoard}/labels.post.security.length: 2
paths./boards/{idBoard}/labels.post.security[0].api_key.length: 0
paths./boards/{idBoard}/labels.post.security[1].api_token.length: 0
paths./boards/{idBoard}/labels.post.summary: addBoardsLabelsByIdBoard()
paths./boards/{idBoard}/labels.post.tags.length: 1
paths./boards/{idBoard}/labels.post.tags[0]: board
paths./boards/{idBoard}/labels/{idLabel}.get.operationId: getBoardsLabelsByIdBoardByIdLabel
paths./boards/{idBoard}/labels/{idLabel}.get.parameters.length: 5
paths./boards/{idBoard}/labels/{idLabel}.get.parameters[0].description: board_id
paths./boards/{idBoard}/labels/{idLabel}.get.parameters[0].in: path
paths./boards/{idBoard}/labels/{idLabel}.get.parameters[0].name: idBoard
paths./boards/{idBoard}/labels/{idLabel}.get.parameters[0].required: true
paths./boards/{idBoard}/labels/{idLabel}.get.parameters[0].type: string
paths./boards/{idBoard}/labels/{idLabel}.get.parameters[1].description: idLabel
paths./boards/{idBoard}/labels/{idLabel}.get.parameters[1].in: path
paths./boards/{idBoard}/labels/{idLabel}.get.parameters[1].name: idLabel
paths./boards/{idBoard}/labels/{idLabel}.get.parameters[1].required: true
paths./boards/{idBoard}/labels/{idLabel}.get.parameters[1].type: string
paths./boards/{idBoard}/labels/{idLabel}.get.parameters[2].default: all
paths./boards/{idBoard}/labels/{idLabel}.get.parameters[2].description: 'all or a
  comma-separated list of: color, idBoard, name or uses'
paths./boards/{idBoard}/labels/{idLabel}.get.parameters[2].in: query
paths./boards/{idBoard}/labels/{idLabel}.get.parameters[2].name: fields
paths./boards/{idBoard}/labels/{idLabel}.get.parameters[2].required: false
paths./boards/{idBoard}/labels/{idLabel}.get.parameters[2].type: string
paths./boards/{idBoard}/labels/{idLabel}.get.parameters[3].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/labels/{idLabel}.get.parameters[3].in: query
paths./boards/{idBoard}/labels/{idLabel}.get.parameters[3].name: key
paths./boards/{idBoard}/labels/{idLabel}.get.parameters[3].required: true
paths./boards/{idBoard}/labels/{idLabel}.get.parameters[3].type: string
paths./boards/{idBoard}/labels/{idLabel}.get.parameters[4].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/labels/{idLabel}.get.parameters[4].in: query
paths./boards/{idBoard}/labels/{idLabel}.get.parameters[4].name: token
paths./boards/{idBoard}/labels/{idLabel}.get.parameters[4].required: true
paths./boards/{idBoard}/labels/{idLabel}.get.parameters[4].type: string
paths./boards/{idBoard}/labels/{idLabel}.get.responses.200.description: Success
paths./boards/{idBoard}/labels/{idLabel}.get.responses.400.description: Server rejection
paths./boards/{idBoard}/labels/{idLabel}.get.security.length: 2
paths./boards/{idBoard}/labels/{idLabel}.get.security[0].api_key.length: 0
paths./boards/{idBoard}/labels/{idLabel}.get.security[1].api_token.length: 0
paths./boards/{idBoard}/labels/{idLabel}.get.summary: getBoardsLabelsByIdBoardByIdLabel()
paths./boards/{idBoard}/labels/{idLabel}.get.tags.length: 1
paths./boards/{idBoard}/labels/{idLabel}.get.tags[0]: board
paths./boards/{idBoard}/lists.get.operationId: getBoardsListsByIdBoard
paths./boards/{idBoard}/lists.get.parameters.length: 7
paths./boards/{idBoard}/lists.get.parameters[0].description: board_id
paths./boards/{idBoard}/lists.get.parameters[0].in: path
paths./boards/{idBoard}/lists.get.parameters[0].name: idBoard
paths./boards/{idBoard}/lists.get.parameters[0].required: true
paths./boards/{idBoard}/lists.get.parameters[0].type: string
paths./boards/{idBoard}/lists.get.parameters[1].default: none
paths./boards/{idBoard}/lists.get.parameters[1].description: 'One of: all, closed,
  none, open or visible'
paths./boards/{idBoard}/lists.get.parameters[1].in: query
paths./boards/{idBoard}/lists.get.parameters[1].name: cards
paths./boards/{idBoard}/lists.get.parameters[1].required: false
paths./boards/{idBoard}/lists.get.parameters[1].type: string
paths./boards/{idBoard}/lists.get.parameters[2].default: all
paths./boards/{idBoard}/lists.get.parameters[2].description: 'all or a comma-separated
  list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due,
  email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
  idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed
  or url'
paths./boards/{idBoard}/lists.get.parameters[2].in: query
paths./boards/{idBoard}/lists.get.parameters[2].name: card_fields
paths./boards/{idBoard}/lists.get.parameters[2].required: false
paths./boards/{idBoard}/lists.get.parameters[2].type: string
paths./boards/{idBoard}/lists.get.parameters[3].default: open
paths./boards/{idBoard}/lists.get.parameters[3].description: 'One of: all, closed,
  none or open'
paths./boards/{idBoard}/lists.get.parameters[3].in: query
paths./boards/{idBoard}/lists.get.parameters[3].name: filter
paths./boards/{idBoard}/lists.get.parameters[3].required: false
paths./boards/{idBoard}/lists.get.parameters[3].type: string
paths./boards/{idBoard}/lists.get.parameters[4].default: all
paths./boards/{idBoard}/lists.get.parameters[4].description: 'all or a comma-separated
  list of: closed, idBoard, name, pos or subscribed'
paths./boards/{idBoard}/lists.get.parameters[4].in: query
paths./boards/{idBoard}/lists.get.parameters[4].name: fields
paths./boards/{idBoard}/lists.get.parameters[4].required: false
paths./boards/{idBoard}/lists.get.parameters[4].type: string
paths./boards/{idBoard}/lists.get.parameters[5].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/lists.get.parameters[5].in: query
paths./boards/{idBoard}/lists.get.parameters[5].name: key
paths./boards/{idBoard}/lists.get.parameters[5].required: true
paths./boards/{idBoard}/lists.get.parameters[5].type: string
paths./boards/{idBoard}/lists.get.parameters[6].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/lists.get.parameters[6].in: query
paths./boards/{idBoard}/lists.get.parameters[6].name: token
paths./boards/{idBoard}/lists.get.parameters[6].required: true
paths./boards/{idBoard}/lists.get.parameters[6].type: string
paths./boards/{idBoard}/lists.get.responses.200.description: Success
paths./boards/{idBoard}/lists.get.responses.400.description: Server rejection
paths./boards/{idBoard}/lists.get.security.length: 2
paths./boards/{idBoard}/lists.get.security[0].api_key.length: 0
paths./boards/{idBoard}/lists.get.security[1].api_token.length: 0
paths./boards/{idBoard}/lists.get.summary: getBoardsListsByIdBoard()
paths./boards/{idBoard}/lists.get.tags.length: 1
paths./boards/{idBoard}/lists.get.tags[0]: board
paths./boards/{idBoard}/lists.post.operationId: addBoardsListsByIdBoard
paths./boards/{idBoard}/lists.post.parameters.length: 4
paths./boards/{idBoard}/lists.post.parameters[0].description: board_id
paths./boards/{idBoard}/lists.post.parameters[0].in: path
paths./boards/{idBoard}/lists.post.parameters[0].name: idBoard
paths./boards/{idBoard}/lists.post.parameters[0].required: true
paths./boards/{idBoard}/lists.post.parameters[0].type: string
paths./boards/{idBoard}/lists.post.parameters[1].description: Attributes of "Boards
  Lists" to be added.
paths./boards/{idBoard}/lists.post.parameters[1].in: body
paths./boards/{idBoard}/lists.post.parameters[1].name: body
paths./boards/{idBoard}/lists.post.parameters[1].required: true
paths./boards/{idBoard}/lists.post.parameters[1].schema.$ref: '#/definitions/boards_lists'
paths./boards/{idBoard}/lists.post.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/lists.post.parameters[2].in: query
paths./boards/{idBoard}/lists.post.parameters[2].name: key
paths./boards/{idBoard}/lists.post.parameters[2].required: true
paths./boards/{idBoard}/lists.post.parameters[2].type: string
paths./boards/{idBoard}/lists.post.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/lists.post.parameters[3].in: query
paths./boards/{idBoard}/lists.post.parameters[3].name: token
paths./boards/{idBoard}/lists.post.parameters[3].required: true
paths./boards/{idBoard}/lists.post.parameters[3].type: string
paths./boards/{idBoard}/lists.post.responses.200.description: Success
paths./boards/{idBoard}/lists.post.responses.400.description: Server rejection
paths./boards/{idBoard}/lists.post.security.length: 2
paths./boards/{idBoard}/lists.post.security[0].api_key.length: 0
paths./boards/{idBoard}/lists.post.security[1].api_token.length: 0
paths./boards/{idBoard}/lists.post.summary: addBoardsListsByIdBoard()
paths./boards/{idBoard}/lists.post.tags.length: 1
paths./boards/{idBoard}/lists.post.tags[0]: board
paths./boards/{idBoard}/lists/{filter}.get.operationId: getBoardsListsByIdBoardByFilter
paths./boards/{idBoard}/lists/{filter}.get.parameters.length: 4
paths./boards/{idBoard}/lists/{filter}.get.parameters[0].description: board_id
paths./boards/{idBoard}/lists/{filter}.get.parameters[0].in: path
paths./boards/{idBoard}/lists/{filter}.get.parameters[0].name: idBoard
paths./boards/{idBoard}/lists/{filter}.get.parameters[0].required: true
paths./boards/{idBoard}/lists/{filter}.get.parameters[0].type: string
paths./boards/{idBoard}/lists/{filter}.get.parameters[1].description: filter
paths./boards/{idBoard}/lists/{filter}.get.parameters[1].in: path
paths./boards/{idBoard}/lists/{filter}.get.parameters[1].name: filter
paths./boards/{idBoard}/lists/{filter}.get.parameters[1].required: true
paths./boards/{idBoard}/lists/{filter}.get.parameters[1].type: string
paths./boards/{idBoard}/lists/{filter}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/lists/{filter}.get.parameters[2].in: query
paths./boards/{idBoard}/lists/{filter}.get.parameters[2].name: key
paths./boards/{idBoard}/lists/{filter}.get.parameters[2].required: true
paths./boards/{idBoard}/lists/{filter}.get.parameters[2].type: string
paths./boards/{idBoard}/lists/{filter}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/lists/{filter}.get.parameters[3].in: query
paths./boards/{idBoard}/lists/{filter}.get.parameters[3].name: token
paths./boards/{idBoard}/lists/{filter}.get.parameters[3].required: true
paths./boards/{idBoard}/lists/{filter}.get.parameters[3].type: string
paths./boards/{idBoard}/lists/{filter}.get.responses.200.description: Success
paths./boards/{idBoard}/lists/{filter}.get.responses.400.description: Server rejection
paths./boards/{idBoard}/lists/{filter}.get.summary: getBoardsListsByIdBoardByFilter()
paths./boards/{idBoard}/lists/{filter}.get.tags.length: 1
paths./boards/{idBoard}/lists/{filter}.get.tags[0]: board
paths./boards/{idBoard}/markAsViewed.post.operationId: addBoardsMarkAsViewedByIdBoard
paths./boards/{idBoard}/markAsViewed.post.parameters.length: 3
paths./boards/{idBoard}/markAsViewed.post.parameters[0].description: board_id
paths./boards/{idBoard}/markAsViewed.post.parameters[0].in: path
paths./boards/{idBoard}/markAsViewed.post.parameters[0].name: idBoard
paths./boards/{idBoard}/markAsViewed.post.parameters[0].required: true
paths./boards/{idBoard}/markAsViewed.post.parameters[0].type: string
paths./boards/{idBoard}/markAsViewed.post.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/markAsViewed.post.parameters[1].in: query
paths./boards/{idBoard}/markAsViewed.post.parameters[1].name: key
paths./boards/{idBoard}/markAsViewed.post.parameters[1].required: true
paths./boards/{idBoard}/markAsViewed.post.parameters[1].type: string
paths./boards/{idBoard}/markAsViewed.post.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/markAsViewed.post.parameters[2].in: query
paths./boards/{idBoard}/markAsViewed.post.parameters[2].name: token
paths./boards/{idBoard}/markAsViewed.post.parameters[2].required: true
paths./boards/{idBoard}/markAsViewed.post.parameters[2].type: string
paths./boards/{idBoard}/markAsViewed.post.responses.200.description: Success
paths./boards/{idBoard}/markAsViewed.post.responses.400.description: Server rejection
paths./boards/{idBoard}/markAsViewed.post.security.length: 2
paths./boards/{idBoard}/markAsViewed.post.security[0].api_key.length: 0
paths./boards/{idBoard}/markAsViewed.post.security[1].api_token.length: 0
paths./boards/{idBoard}/markAsViewed.post.summary: addBoardsMarkAsViewedByIdBoard()
paths./boards/{idBoard}/markAsViewed.post.tags.length: 1
paths./boards/{idBoard}/markAsViewed.post.tags[0]: board
paths./boards/{idBoard}/members.get.operationId: getBoardsMembersByIdBoard
paths./boards/{idBoard}/members.get.parameters.length: 6
paths./boards/{idBoard}/members.get.parameters[0].description: board_id
paths./boards/{idBoard}/members.get.parameters[0].in: path
paths./boards/{idBoard}/members.get.parameters[0].name: idBoard
paths./boards/{idBoard}/members.get.parameters[0].required: true
paths./boards/{idBoard}/members.get.parameters[0].type: string
paths./boards/{idBoard}/members.get.parameters[1].default: all
paths./boards/{idBoard}/members.get.parameters[1].description: 'One of: admins, all,
  none, normal or owners'
paths./boards/{idBoard}/members.get.parameters[1].in: query
paths./boards/{idBoard}/members.get.parameters[1].name: filter
paths./boards/{idBoard}/members.get.parameters[1].required: false
paths./boards/{idBoard}/members.get.parameters[1].type: string
paths./boards/{idBoard}/members.get.parameters[2].default: fullName and username
paths./boards/{idBoard}/members.get.parameters[2].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./boards/{idBoard}/members.get.parameters[2].in: query
paths./boards/{idBoard}/members.get.parameters[2].name: fields
paths./boards/{idBoard}/members.get.parameters[2].required: false
paths./boards/{idBoard}/members.get.parameters[2].type: string
paths./boards/{idBoard}/members.get.parameters[3].description: true or false ; works
  for premium organizations only.
paths./boards/{idBoard}/members.get.parameters[3].in: query
paths./boards/{idBoard}/members.get.parameters[3].name: activity
paths./boards/{idBoard}/members.get.parameters[3].required: false
paths./boards/{idBoard}/members.get.parameters[3].type: string
paths./boards/{idBoard}/members.get.parameters[4].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/members.get.parameters[4].in: query
paths./boards/{idBoard}/members.get.parameters[4].name: key
paths./boards/{idBoard}/members.get.parameters[4].required: true
paths./boards/{idBoard}/members.get.parameters[4].type: string
paths./boards/{idBoard}/members.get.parameters[5].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/members.get.parameters[5].in: query
paths./boards/{idBoard}/members.get.parameters[5].name: token
paths./boards/{idBoard}/members.get.parameters[5].required: true
paths./boards/{idBoard}/members.get.parameters[5].type: string
paths./boards/{idBoard}/members.get.responses.200.description: Success
paths./boards/{idBoard}/members.get.responses.400.description: Server rejection
paths./boards/{idBoard}/members.get.security.length: 2
paths./boards/{idBoard}/members.get.security[0].api_key.length: 0
paths./boards/{idBoard}/members.get.security[1].api_token.length: 0
paths./boards/{idBoard}/members.get.summary: getBoardsMembersByIdBoard()
paths./boards/{idBoard}/members.get.tags.length: 1
paths./boards/{idBoard}/members.get.tags[0]: board
paths./boards/{idBoard}/members.put.operationId: updateBoardsMembersByIdBoard
paths./boards/{idBoard}/members.put.parameters.length: 4
paths./boards/{idBoard}/members.put.parameters[0].description: board_id
paths./boards/{idBoard}/members.put.parameters[0].in: path
paths./boards/{idBoard}/members.put.parameters[0].name: idBoard
paths./boards/{idBoard}/members.put.parameters[0].required: true
paths./boards/{idBoard}/members.put.parameters[0].type: string
paths./boards/{idBoard}/members.put.parameters[1].description: Attributes of "Boards
  Members" to be updated.
paths./boards/{idBoard}/members.put.parameters[1].in: body
paths./boards/{idBoard}/members.put.parameters[1].name: body
paths./boards/{idBoard}/members.put.parameters[1].required: true
paths./boards/{idBoard}/members.put.parameters[1].schema.$ref: '#/definitions/boards_members'
paths./boards/{idBoard}/members.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/members.put.parameters[2].in: query
paths./boards/{idBoard}/members.put.parameters[2].name: key
paths./boards/{idBoard}/members.put.parameters[2].required: true
paths./boards/{idBoard}/members.put.parameters[2].type: string
paths./boards/{idBoard}/members.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/members.put.parameters[3].in: query
paths./boards/{idBoard}/members.put.parameters[3].name: token
paths./boards/{idBoard}/members.put.parameters[3].required: true
paths./boards/{idBoard}/members.put.parameters[3].type: string
paths./boards/{idBoard}/members.put.responses.200.description: Success
paths./boards/{idBoard}/members.put.responses.400.description: Server rejection
paths./boards/{idBoard}/members.put.security.length: 2
paths./boards/{idBoard}/members.put.security[0].api_key.length: 0
paths./boards/{idBoard}/members.put.security[1].api_token.length: 0
paths./boards/{idBoard}/members.put.summary: updateBoardsMembersByIdBoard()
paths./boards/{idBoard}/members.put.tags.length: 1
paths./boards/{idBoard}/members.put.tags[0]: board
paths./boards/{idBoard}/members/{filter}.get.operationId: getBoardsMembersByIdBoardByFilter
paths./boards/{idBoard}/members/{filter}.get.parameters.length: 4
paths./boards/{idBoard}/members/{filter}.get.parameters[0].description: board_id
paths./boards/{idBoard}/members/{filter}.get.parameters[0].in: path
paths./boards/{idBoard}/members/{filter}.get.parameters[0].name: idBoard
paths./boards/{idBoard}/members/{filter}.get.parameters[0].required: true
paths./boards/{idBoard}/members/{filter}.get.parameters[0].type: string
paths./boards/{idBoard}/members/{filter}.get.parameters[1].description: filter
paths./boards/{idBoard}/members/{filter}.get.parameters[1].in: path
paths./boards/{idBoard}/members/{filter}.get.parameters[1].name: filter
paths./boards/{idBoard}/members/{filter}.get.parameters[1].required: true
paths./boards/{idBoard}/members/{filter}.get.parameters[1].type: string
paths./boards/{idBoard}/members/{filter}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/members/{filter}.get.parameters[2].in: query
paths./boards/{idBoard}/members/{filter}.get.parameters[2].name: key
paths./boards/{idBoard}/members/{filter}.get.parameters[2].required: true
paths./boards/{idBoard}/members/{filter}.get.parameters[2].type: string
paths./boards/{idBoard}/members/{filter}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/members/{filter}.get.parameters[3].in: query
paths./boards/{idBoard}/members/{filter}.get.parameters[3].name: token
paths./boards/{idBoard}/members/{filter}.get.parameters[3].required: true
paths./boards/{idBoard}/members/{filter}.get.parameters[3].type: string
paths./boards/{idBoard}/members/{filter}.get.responses.200.description: Success
paths./boards/{idBoard}/members/{filter}.get.responses.400.description: Server rejection
paths./boards/{idBoard}/members/{filter}.get.summary: getBoardsMembersByIdBoardByFilter()
paths./boards/{idBoard}/members/{filter}.get.tags.length: 1
paths./boards/{idBoard}/members/{filter}.get.tags[0]: board
paths./boards/{idBoard}/members/{idMember}.delete.operationId: deleteBoardsMembersByIdBoardByIdMember
paths./boards/{idBoard}/members/{idMember}.delete.parameters.length: 4
paths./boards/{idBoard}/members/{idMember}.delete.parameters[0].description: board_id
paths./boards/{idBoard}/members/{idMember}.delete.parameters[0].in: path
paths./boards/{idBoard}/members/{idMember}.delete.parameters[0].name: idBoard
paths./boards/{idBoard}/members/{idMember}.delete.parameters[0].required: true
paths./boards/{idBoard}/members/{idMember}.delete.parameters[0].type: string
paths./boards/{idBoard}/members/{idMember}.delete.parameters[1].description: idMember
paths./boards/{idBoard}/members/{idMember}.delete.parameters[1].in: path
paths./boards/{idBoard}/members/{idMember}.delete.parameters[1].name: idMember
paths./boards/{idBoard}/members/{idMember}.delete.parameters[1].required: true
paths./boards/{idBoard}/members/{idMember}.delete.parameters[1].type: string
paths./boards/{idBoard}/members/{idMember}.delete.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/members/{idMember}.delete.parameters[2].in: query
paths./boards/{idBoard}/members/{idMember}.delete.parameters[2].name: key
paths./boards/{idBoard}/members/{idMember}.delete.parameters[2].required: true
paths./boards/{idBoard}/members/{idMember}.delete.parameters[2].type: string
paths./boards/{idBoard}/members/{idMember}.delete.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/members/{idMember}.delete.parameters[3].in: query
paths./boards/{idBoard}/members/{idMember}.delete.parameters[3].name: token
paths./boards/{idBoard}/members/{idMember}.delete.parameters[3].required: true
paths./boards/{idBoard}/members/{idMember}.delete.parameters[3].type: string
paths./boards/{idBoard}/members/{idMember}.delete.responses.200.description: Success
paths./boards/{idBoard}/members/{idMember}.delete.responses.400.description: Server
  rejection
paths./boards/{idBoard}/members/{idMember}.delete.security.length: 2
paths./boards/{idBoard}/members/{idMember}.delete.security[0].api_key.length: 0
paths./boards/{idBoard}/members/{idMember}.delete.security[1].api_token.length: 0
paths./boards/{idBoard}/members/{idMember}.delete.summary: deleteBoardsMembersByIdBoardByIdMember()
paths./boards/{idBoard}/members/{idMember}.delete.tags.length: 1
paths./boards/{idBoard}/members/{idMember}.delete.tags[0]: board
paths./boards/{idBoard}/members/{idMember}.put.operationId: updateBoardsMembersByIdBoardByIdMember
paths./boards/{idBoard}/members/{idMember}.put.parameters.length: 5
paths./boards/{idBoard}/members/{idMember}.put.parameters[0].description: board_id
paths./boards/{idBoard}/members/{idMember}.put.parameters[0].in: path
paths./boards/{idBoard}/members/{idMember}.put.parameters[0].name: idBoard
paths./boards/{idBoard}/members/{idMember}.put.parameters[0].required: true
paths./boards/{idBoard}/members/{idMember}.put.parameters[0].type: string
paths./boards/{idBoard}/members/{idMember}.put.parameters[1].description: idMember
paths./boards/{idBoard}/members/{idMember}.put.parameters[1].in: path
paths./boards/{idBoard}/members/{idMember}.put.parameters[1].name: idMember
paths./boards/{idBoard}/members/{idMember}.put.parameters[1].required: true
paths./boards/{idBoard}/members/{idMember}.put.parameters[1].type: string
paths./boards/{idBoard}/members/{idMember}.put.parameters[2].description: Attributes
  of "Boards Members" to be updated.
paths./boards/{idBoard}/members/{idMember}.put.parameters[2].in: body
paths./boards/{idBoard}/members/{idMember}.put.parameters[2].name: body
paths./boards/{idBoard}/members/{idMember}.put.parameters[2].required: true
paths./boards/{idBoard}/members/{idMember}.put.parameters[2].schema.$ref: '#/definitions/boards_members'
paths./boards/{idBoard}/members/{idMember}.put.parameters[3].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/members/{idMember}.put.parameters[3].in: query
paths./boards/{idBoard}/members/{idMember}.put.parameters[3].name: key
paths./boards/{idBoard}/members/{idMember}.put.parameters[3].required: true
paths./boards/{idBoard}/members/{idMember}.put.parameters[3].type: string
paths./boards/{idBoard}/members/{idMember}.put.parameters[4].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/members/{idMember}.put.parameters[4].in: query
paths./boards/{idBoard}/members/{idMember}.put.parameters[4].name: token
paths./boards/{idBoard}/members/{idMember}.put.parameters[4].required: true
paths./boards/{idBoard}/members/{idMember}.put.parameters[4].type: string
paths./boards/{idBoard}/members/{idMember}.put.responses.200.description: Success
paths./boards/{idBoard}/members/{idMember}.put.responses.400.description: Server rejection
paths./boards/{idBoard}/members/{idMember}.put.security.length: 2
paths./boards/{idBoard}/members/{idMember}.put.security[0].api_key.length: 0
paths./boards/{idBoard}/members/{idMember}.put.security[1].api_token.length: 0
paths./boards/{idBoard}/members/{idMember}.put.summary: updateBoardsMembersByIdBoardByIdMember()
paths./boards/{idBoard}/members/{idMember}.put.tags.length: 1
paths./boards/{idBoard}/members/{idMember}.put.tags[0]: board
paths./boards/{idBoard}/members/{idMember}/cards.get.operationId: getBoardsMembersCardsByIdBoardByIdMember
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters.length: 17
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[0].description: board_id
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[0].in: path
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[0].name: idBoard
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[0].required: true
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[0].type: string
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[1].description: idMember
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[1].in: path
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[1].name: idMember
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[1].required: true
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[1].type: string
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[2].description: 'all
  or a comma-separated list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard,
  addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem,
  copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization,
  deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation,
  disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
  makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard,
  moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,
  removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
  updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,
  updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed,
  updateList:name, updateMember or updateOrganization'
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[2].in: query
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[2].name: actions
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[2].required: false
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[2].type: string
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[3].description: A
  boolean value or &quot;cover&quot; for only card cover attachments
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[3].in: query
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[3].name: attachments
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[3].required: false
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[3].type: string
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[4].default: all
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[4].description: 'all
  or a comma-separated list of: bytes, date, edgeColor, idMember, isUpload, mimeType,
  name, previews or url'
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[4].in: query
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[4].name: attachment_fields
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[4].required: false
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[4].type: string
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[5].description: ' true
  or false'
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[5].in: query
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[5].name: members
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[5].required: false
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[5].type: string
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[6].default: avatarHash,
  fullName, initials and username
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[6].description: 'all
  or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin,
  initials, memberType, products, status, url or username'
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[6].in: query
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[6].name: member_fields
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[6].required: false
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[6].type: string
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[7].description: ' true
  or false'
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[7].in: query
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[7].name: checkItemStates
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[7].required: false
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[7].type: string
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[8].default: none
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[8].description: 'One
  of: all or none'
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[8].in: query
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[8].name: checklists
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[8].required: false
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[8].type: string
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[9].description: ' true
  or false'
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[9].in: query
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[9].name: board
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[9].required: false
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[9].type: string
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[10].default: name,
  desc, closed, idOrganization, pinned, url and prefs
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[10].description: 'all
  or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData,
  idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps,
  prefs, shortLink, shortUrl, starred, subscribed or url'
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[10].in: query
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[10].name: board_fields
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[10].required: false
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[10].type: string
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[11].description: ' true
  or false'
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[11].in: query
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[11].name: list
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[11].required: false
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[11].type: string
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[12].default: all
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[12].description: 'all
  or a comma-separated list of: closed, idBoard, name, pos or subscribed'
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[12].in: query
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[12].name: list_fields
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[12].required: false
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[12].type: string
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[13].default: visible
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[13].description: 'One
  of: all, closed, none, open or visible'
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[13].in: query
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[13].name: filter
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[13].required: false
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[13].type: string
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[14].default: all
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[14].description: 'all
  or a comma-separated list of: badges, checkItemStates, closed, dateLastActivity,
  desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels,
  idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name,
  pos, shortLink, shortUrl, subscribed or url'
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[14].in: query
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[14].name: fields
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[14].required: false
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[14].type: string
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[15].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[15].in: query
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[15].name: key
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[15].required: true
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[15].type: string
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[16].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[16].in: query
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[16].name: token
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[16].required: true
paths./boards/{idBoard}/members/{idMember}/cards.get.parameters[16].type: string
paths./boards/{idBoard}/members/{idMember}/cards.get.responses.200.description: Success
paths./boards/{idBoard}/members/{idMember}/cards.get.responses.400.description: Server
  rejection
paths./boards/{idBoard}/members/{idMember}/cards.get.security.length: 2
paths./boards/{idBoard}/members/{idMember}/cards.get.security[0].api_key.length: 0
paths./boards/{idBoard}/members/{idMember}/cards.get.security[1].api_token.length: 0
paths./boards/{idBoard}/members/{idMember}/cards.get.summary: getBoardsMembersCardsByIdBoardByIdMember()
paths./boards/{idBoard}/members/{idMember}/cards.get.tags.length: 1
paths./boards/{idBoard}/members/{idMember}/cards.get.tags[0]: board
paths./boards/{idBoard}/membersInvited.get.operationId: getBoardsMembersInvitedByIdBoard
paths./boards/{idBoard}/membersInvited.get.parameters.length: 4
paths./boards/{idBoard}/membersInvited.get.parameters[0].description: board_id
paths./boards/{idBoard}/membersInvited.get.parameters[0].in: path
paths./boards/{idBoard}/membersInvited.get.parameters[0].name: idBoard
paths./boards/{idBoard}/membersInvited.get.parameters[0].required: true
paths./boards/{idBoard}/membersInvited.get.parameters[0].type: string
paths./boards/{idBoard}/membersInvited.get.parameters[1].default: all
paths./boards/{idBoard}/membersInvited.get.parameters[1].description: 'all or a comma-separated
  list of: avatarHash, avatarSource, bio, bioData, confirmed, email, fullName, gravatarHash,
  idBoards, idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials, loginTypes,
  memberType, oneTimeMessagesDismissed, prefs, premiumFeatures, products, status,
  status, trophies, uploadedAvatarHash, url or username'
paths./boards/{idBoard}/membersInvited.get.parameters[1].in: query
paths./boards/{idBoard}/membersInvited.get.parameters[1].name: fields
paths./boards/{idBoard}/membersInvited.get.parameters[1].required: false
paths./boards/{idBoard}/membersInvited.get.parameters[1].type: string
paths./boards/{idBoard}/membersInvited.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/membersInvited.get.parameters[2].in: query
paths./boards/{idBoard}/membersInvited.get.parameters[2].name: key
paths./boards/{idBoard}/membersInvited.get.parameters[2].required: true
paths./boards/{idBoard}/membersInvited.get.parameters[2].type: string
paths./boards/{idBoard}/membersInvited.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/membersInvited.get.parameters[3].in: query
paths./boards/{idBoard}/membersInvited.get.parameters[3].name: token
paths./boards/{idBoard}/membersInvited.get.parameters[3].required: true
paths./boards/{idBoard}/membersInvited.get.parameters[3].type: string
paths./boards/{idBoard}/membersInvited.get.responses.200.description: Success
paths./boards/{idBoard}/membersInvited.get.responses.400.description: Server rejection
paths./boards/{idBoard}/membersInvited.get.security.length: 2
paths./boards/{idBoard}/membersInvited.get.security[0].api_key.length: 0
paths./boards/{idBoard}/membersInvited.get.security[1].api_token.length: 0
paths./boards/{idBoard}/membersInvited.get.summary: getBoardsMembersInvitedByIdBoard()
paths./boards/{idBoard}/membersInvited.get.tags.length: 1
paths./boards/{idBoard}/membersInvited.get.tags[0]: board
paths./boards/{idBoard}/membersInvited/{field}.get.operationId: getBoardsMembersInvitedByIdBoardByField
paths./boards/{idBoard}/membersInvited/{field}.get.parameters.length: 4
paths./boards/{idBoard}/membersInvited/{field}.get.parameters[0].description: board_id
paths./boards/{idBoard}/membersInvited/{field}.get.parameters[0].in: path
paths./boards/{idBoard}/membersInvited/{field}.get.parameters[0].name: idBoard
paths./boards/{idBoard}/membersInvited/{field}.get.parameters[0].required: true
paths./boards/{idBoard}/membersInvited/{field}.get.parameters[0].type: string
paths./boards/{idBoard}/membersInvited/{field}.get.parameters[1].description: field
paths./boards/{idBoard}/membersInvited/{field}.get.parameters[1].in: path
paths./boards/{idBoard}/membersInvited/{field}.get.parameters[1].name: field
paths./boards/{idBoard}/membersInvited/{field}.get.parameters[1].required: true
paths./boards/{idBoard}/membersInvited/{field}.get.parameters[1].type: string
paths./boards/{idBoard}/membersInvited/{field}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/membersInvited/{field}.get.parameters[2].in: query
paths./boards/{idBoard}/membersInvited/{field}.get.parameters[2].name: key
paths./boards/{idBoard}/membersInvited/{field}.get.parameters[2].required: true
paths./boards/{idBoard}/membersInvited/{field}.get.parameters[2].type: string
paths./boards/{idBoard}/membersInvited/{field}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/membersInvited/{field}.get.parameters[3].in: query
paths./boards/{idBoard}/membersInvited/{field}.get.parameters[3].name: token
paths./boards/{idBoard}/membersInvited/{field}.get.parameters[3].required: true
paths./boards/{idBoard}/membersInvited/{field}.get.parameters[3].type: string
paths./boards/{idBoard}/membersInvited/{field}.get.responses.200.description: Success
paths./boards/{idBoard}/membersInvited/{field}.get.responses.400.description: Server
  rejection
paths./boards/{idBoard}/membersInvited/{field}.get.security.length: 2
paths./boards/{idBoard}/membersInvited/{field}.get.security[0].api_key.length: 0
paths./boards/{idBoard}/membersInvited/{field}.get.security[1].api_token.length: 0
paths./boards/{idBoard}/membersInvited/{field}.get.summary: getBoardsMembersInvitedByIdBoardByField()
paths./boards/{idBoard}/membersInvited/{field}.get.tags.length: 1
paths./boards/{idBoard}/membersInvited/{field}.get.tags[0]: board
paths./boards/{idBoard}/memberships.get.operationId: getBoardsMembershipsByIdBoard
paths./boards/{idBoard}/memberships.get.parameters.length: 6
paths./boards/{idBoard}/memberships.get.parameters[0].description: board_id
paths./boards/{idBoard}/memberships.get.parameters[0].in: path
paths./boards/{idBoard}/memberships.get.parameters[0].name: idBoard
paths./boards/{idBoard}/memberships.get.parameters[0].required: true
paths./boards/{idBoard}/memberships.get.parameters[0].type: string
paths./boards/{idBoard}/memberships.get.parameters[1].default: all
paths./boards/{idBoard}/memberships.get.parameters[1].description: 'all or a comma-separated
  list of: active, admin, deactivated, me or normal'
paths./boards/{idBoard}/memberships.get.parameters[1].in: query
paths./boards/{idBoard}/memberships.get.parameters[1].name: filter
paths./boards/{idBoard}/memberships.get.parameters[1].required: false
paths./boards/{idBoard}/memberships.get.parameters[1].type: string
paths./boards/{idBoard}/memberships.get.parameters[2].description: ' true or false'
paths./boards/{idBoard}/memberships.get.parameters[2].in: query
paths./boards/{idBoard}/memberships.get.parameters[2].name: member
paths./boards/{idBoard}/memberships.get.parameters[2].required: false
paths./boards/{idBoard}/memberships.get.parameters[2].type: string
paths./boards/{idBoard}/memberships.get.parameters[3].default: fullName and username
paths./boards/{idBoard}/memberships.get.parameters[3].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./boards/{idBoard}/memberships.get.parameters[3].in: query
paths./boards/{idBoard}/memberships.get.parameters[3].name: member_fields
paths./boards/{idBoard}/memberships.get.parameters[3].required: false
paths./boards/{idBoard}/memberships.get.parameters[3].type: string
paths./boards/{idBoard}/memberships.get.parameters[4].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/memberships.get.parameters[4].in: query
paths./boards/{idBoard}/memberships.get.parameters[4].name: key
paths./boards/{idBoard}/memberships.get.parameters[4].required: true
paths./boards/{idBoard}/memberships.get.parameters[4].type: string
paths./boards/{idBoard}/memberships.get.parameters[5].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/memberships.get.parameters[5].in: query
paths./boards/{idBoard}/memberships.get.parameters[5].name: token
paths./boards/{idBoard}/memberships.get.parameters[5].required: true
paths./boards/{idBoard}/memberships.get.parameters[5].type: string
paths./boards/{idBoard}/memberships.get.responses.200.description: Success
paths./boards/{idBoard}/memberships.get.responses.400.description: Server rejection
paths./boards/{idBoard}/memberships.get.security.length: 2
paths./boards/{idBoard}/memberships.get.security[0].api_key.length: 0
paths./boards/{idBoard}/memberships.get.security[1].api_token.length: 0
paths./boards/{idBoard}/memberships.get.summary: getBoardsMembershipsByIdBoard()
paths./boards/{idBoard}/memberships.get.tags.length: 1
paths./boards/{idBoard}/memberships.get.tags[0]: board
paths./boards/{idBoard}/memberships/{idMembership}.get.operationId: getBoardsMembershipsByIdBoardByIdMembership
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters.length: 6
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters[0].description: board_id
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters[0].in: path
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters[0].name: idBoard
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters[0].required: true
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters[0].type: string
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters[1].description: idMembership
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters[1].in: path
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters[1].name: idMembership
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters[1].required: true
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters[1].type: string
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters[2].description: ' true
  or false'
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters[2].in: query
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters[2].name: member
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters[2].required: false
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters[2].type: string
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters[3].default: fullName
  and username
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters[3].description: 'all
  or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin,
  initials, memberType, products, status, url or username'
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters[3].in: query
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters[3].name: member_fields
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters[3].required: false
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters[3].type: string
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters[4].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters[4].in: query
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters[4].name: key
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters[4].required: true
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters[4].type: string
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters[5].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters[5].in: query
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters[5].name: token
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters[5].required: true
paths./boards/{idBoard}/memberships/{idMembership}.get.parameters[5].type: string
paths./boards/{idBoard}/memberships/{idMembership}.get.responses.200.description: Success
paths./boards/{idBoard}/memberships/{idMembership}.get.responses.400.description: Server
  rejection
paths./boards/{idBoard}/memberships/{idMembership}.get.security.length: 2
paths./boards/{idBoard}/memberships/{idMembership}.get.security[0].api_key.length: 0
paths./boards/{idBoard}/memberships/{idMembership}.get.security[1].api_token.length: 0
paths./boards/{idBoard}/memberships/{idMembership}.get.summary: getBoardsMembershipsByIdBoardByIdMembership()
paths./boards/{idBoard}/memberships/{idMembership}.get.tags.length: 1
paths./boards/{idBoard}/memberships/{idMembership}.get.tags[0]: board
paths./boards/{idBoard}/memberships/{idMembership}.put.operationId: updateBoardsMembershipsByIdBoardByIdMembership
paths./boards/{idBoard}/memberships/{idMembership}.put.parameters.length: 5
paths./boards/{idBoard}/memberships/{idMembership}.put.parameters[0].description: board_id
paths./boards/{idBoard}/memberships/{idMembership}.put.parameters[0].in: path
paths./boards/{idBoard}/memberships/{idMembership}.put.parameters[0].name: idBoard
paths./boards/{idBoard}/memberships/{idMembership}.put.parameters[0].required: true
paths./boards/{idBoard}/memberships/{idMembership}.put.parameters[0].type: string
paths./boards/{idBoard}/memberships/{idMembership}.put.parameters[1].description: idMembership
paths./boards/{idBoard}/memberships/{idMembership}.put.parameters[1].in: path
paths./boards/{idBoard}/memberships/{idMembership}.put.parameters[1].name: idMembership
paths./boards/{idBoard}/memberships/{idMembership}.put.parameters[1].required: true
paths./boards/{idBoard}/memberships/{idMembership}.put.parameters[1].type: string
paths./boards/{idBoard}/memberships/{idMembership}.put.parameters[2].description: Attributes
  of "Boards Memberships" to be updated.
paths./boards/{idBoard}/memberships/{idMembership}.put.parameters[2].in: body
paths./boards/{idBoard}/memberships/{idMembership}.put.parameters[2].name: body
paths./boards/{idBoard}/memberships/{idMembership}.put.parameters[2].required: true
paths./boards/{idBoard}/memberships/{idMembership}.put.parameters[2].schema.$ref: '#/definitions/boards_memberships'
paths./boards/{idBoard}/memberships/{idMembership}.put.parameters[3].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./boards/{idBoard}/memberships/{idMembership}.put.parameters[3].in: query
paths./boards/{idBoard}/memberships/{idMembership}.put.parameters[3].name: key
paths./boards/{idBoard}/memberships/{idMembership}.put.parameters[3].required: true
paths./boards/{idBoard}/memberships/{idMembership}.put.parameters[3].type: string
paths./boards/{idBoard}/memberships/{idMembership}.put.parameters[4].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/memberships/{idMembership}.put.parameters[4].in: query
paths./boards/{idBoard}/memberships/{idMembership}.put.parameters[4].name: token
paths./boards/{idBoard}/memberships/{idMembership}.put.parameters[4].required: true
paths./boards/{idBoard}/memberships/{idMembership}.put.parameters[4].type: string
paths./boards/{idBoard}/memberships/{idMembership}.put.responses.200.description: Success
paths./boards/{idBoard}/memberships/{idMembership}.put.responses.400.description: Server
  rejection
paths./boards/{idBoard}/memberships/{idMembership}.put.security.length: 2
paths./boards/{idBoard}/memberships/{idMembership}.put.security[0].api_key.length: 0
paths./boards/{idBoard}/memberships/{idMembership}.put.security[1].api_token.length: 0
paths./boards/{idBoard}/memberships/{idMembership}.put.summary: updateBoardsMembershipsByIdBoardByIdMembership()
paths./boards/{idBoard}/memberships/{idMembership}.put.tags.length: 1
paths./boards/{idBoard}/memberships/{idMembership}.put.tags[0]: board
paths./boards/{idBoard}/myPrefs.get.operationId: getBoardsMyPrefsByIdBoard
paths./boards/{idBoard}/myPrefs.get.parameters.length: 3
paths./boards/{idBoard}/myPrefs.get.parameters[0].description: board_id
paths./boards/{idBoard}/myPrefs.get.parameters[0].in: path
paths./boards/{idBoard}/myPrefs.get.parameters[0].name: idBoard
paths./boards/{idBoard}/myPrefs.get.parameters[0].required: true
paths./boards/{idBoard}/myPrefs.get.parameters[0].type: string
paths./boards/{idBoard}/myPrefs.get.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/myPrefs.get.parameters[1].in: query
paths./boards/{idBoard}/myPrefs.get.parameters[1].name: key
paths./boards/{idBoard}/myPrefs.get.parameters[1].required: true
paths./boards/{idBoard}/myPrefs.get.parameters[1].type: string
paths./boards/{idBoard}/myPrefs.get.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/myPrefs.get.parameters[2].in: query
paths./boards/{idBoard}/myPrefs.get.parameters[2].name: token
paths./boards/{idBoard}/myPrefs.get.parameters[2].required: true
paths./boards/{idBoard}/myPrefs.get.parameters[2].type: string
paths./boards/{idBoard}/myPrefs.get.responses.200.description: Success
paths./boards/{idBoard}/myPrefs.get.responses.400.description: Server rejection
paths./boards/{idBoard}/myPrefs.get.security.length: 2
paths./boards/{idBoard}/myPrefs.get.security[0].api_key.length: 0
paths./boards/{idBoard}/myPrefs.get.security[1].api_token.length: 0
paths./boards/{idBoard}/myPrefs.get.summary: getBoardsMyPrefsByIdBoard()
paths./boards/{idBoard}/myPrefs.get.tags.length: 1
paths./boards/{idBoard}/myPrefs.get.tags[0]: board
paths./boards/{idBoard}/myPrefs/emailPosition.put.operationId: updateBoardsMyPrefsEmailPositionByIdBoard
paths./boards/{idBoard}/myPrefs/emailPosition.put.parameters.length: 4
paths./boards/{idBoard}/myPrefs/emailPosition.put.parameters[0].description: board_id
paths./boards/{idBoard}/myPrefs/emailPosition.put.parameters[0].in: path
paths./boards/{idBoard}/myPrefs/emailPosition.put.parameters[0].name: idBoard
paths./boards/{idBoard}/myPrefs/emailPosition.put.parameters[0].required: true
paths./boards/{idBoard}/myPrefs/emailPosition.put.parameters[0].type: string
paths./boards/{idBoard}/myPrefs/emailPosition.put.parameters[1].description: Attributes
  of "My Prefs Email Position" to be updated.
paths./boards/{idBoard}/myPrefs/emailPosition.put.parameters[1].in: body
paths./boards/{idBoard}/myPrefs/emailPosition.put.parameters[1].name: body
paths./boards/{idBoard}/myPrefs/emailPosition.put.parameters[1].required: true
paths./boards/{idBoard}/myPrefs/emailPosition.put.parameters[1].schema.$ref: '#/definitions/myPrefs_emailPosition'
paths./boards/{idBoard}/myPrefs/emailPosition.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/myPrefs/emailPosition.put.parameters[2].in: query
paths./boards/{idBoard}/myPrefs/emailPosition.put.parameters[2].name: key
paths./boards/{idBoard}/myPrefs/emailPosition.put.parameters[2].required: true
paths./boards/{idBoard}/myPrefs/emailPosition.put.parameters[2].type: string
paths./boards/{idBoard}/myPrefs/emailPosition.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/myPrefs/emailPosition.put.parameters[3].in: query
paths./boards/{idBoard}/myPrefs/emailPosition.put.parameters[3].name: token
paths./boards/{idBoard}/myPrefs/emailPosition.put.parameters[3].required: true
paths./boards/{idBoard}/myPrefs/emailPosition.put.parameters[3].type: string
paths./boards/{idBoard}/myPrefs/emailPosition.put.responses.200.description: Success
paths./boards/{idBoard}/myPrefs/emailPosition.put.responses.400.description: Server
  rejection
paths./boards/{idBoard}/myPrefs/emailPosition.put.security.length: 2
paths./boards/{idBoard}/myPrefs/emailPosition.put.security[0].api_key.length: 0
paths./boards/{idBoard}/myPrefs/emailPosition.put.security[1].api_token.length: 0
paths./boards/{idBoard}/myPrefs/emailPosition.put.summary: updateBoardsMyPrefsEmailPositionByIdBoard()
paths./boards/{idBoard}/myPrefs/emailPosition.put.tags.length: 1
paths./boards/{idBoard}/myPrefs/emailPosition.put.tags[0]: board
paths./boards/{idBoard}/myPrefs/idEmailList.put.operationId: updateBoardsMyPrefsIdEmailListByIdBoard
paths./boards/{idBoard}/myPrefs/idEmailList.put.parameters.length: 4
paths./boards/{idBoard}/myPrefs/idEmailList.put.parameters[0].description: board_id
paths./boards/{idBoard}/myPrefs/idEmailList.put.parameters[0].in: path
paths./boards/{idBoard}/myPrefs/idEmailList.put.parameters[0].name: idBoard
paths./boards/{idBoard}/myPrefs/idEmailList.put.parameters[0].required: true
paths./boards/{idBoard}/myPrefs/idEmailList.put.parameters[0].type: string
paths./boards/{idBoard}/myPrefs/idEmailList.put.parameters[1].description: Attributes
  of "My Prefs Id Email List" to be updated.
paths./boards/{idBoard}/myPrefs/idEmailList.put.parameters[1].in: body
paths./boards/{idBoard}/myPrefs/idEmailList.put.parameters[1].name: body
paths./boards/{idBoard}/myPrefs/idEmailList.put.parameters[1].required: true
paths./boards/{idBoard}/myPrefs/idEmailList.put.parameters[1].schema.$ref: '#/definitions/myPrefs_idEmailList'
paths./boards/{idBoard}/myPrefs/idEmailList.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/myPrefs/idEmailList.put.parameters[2].in: query
paths./boards/{idBoard}/myPrefs/idEmailList.put.parameters[2].name: key
paths./boards/{idBoard}/myPrefs/idEmailList.put.parameters[2].required: true
paths./boards/{idBoard}/myPrefs/idEmailList.put.parameters[2].type: string
paths./boards/{idBoard}/myPrefs/idEmailList.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/myPrefs/idEmailList.put.parameters[3].in: query
paths./boards/{idBoard}/myPrefs/idEmailList.put.parameters[3].name: token
paths./boards/{idBoard}/myPrefs/idEmailList.put.parameters[3].required: true
paths./boards/{idBoard}/myPrefs/idEmailList.put.parameters[3].type: string
paths./boards/{idBoard}/myPrefs/idEmailList.put.responses.200.description: Success
paths./boards/{idBoard}/myPrefs/idEmailList.put.responses.400.description: Server
  rejection
paths./boards/{idBoard}/myPrefs/idEmailList.put.security.length: 2
paths./boards/{idBoard}/myPrefs/idEmailList.put.security[0].api_key.length: 0
paths./boards/{idBoard}/myPrefs/idEmailList.put.security[1].api_token.length: 0
paths./boards/{idBoard}/myPrefs/idEmailList.put.summary: updateBoardsMyPrefsIdEmailListByIdBoard()
paths./boards/{idBoard}/myPrefs/idEmailList.put.tags.length: 1
paths./boards/{idBoard}/myPrefs/idEmailList.put.tags[0]: board
paths./boards/{idBoard}/myPrefs/showListGuide.put.operationId: updateBoardsMyPrefsShowListGuideByIdBoard
paths./boards/{idBoard}/myPrefs/showListGuide.put.parameters.length: 4
paths./boards/{idBoard}/myPrefs/showListGuide.put.parameters[0].description: board_id
paths./boards/{idBoard}/myPrefs/showListGuide.put.parameters[0].in: path
paths./boards/{idBoard}/myPrefs/showListGuide.put.parameters[0].name: idBoard
paths./boards/{idBoard}/myPrefs/showListGuide.put.parameters[0].required: true
paths./boards/{idBoard}/myPrefs/showListGuide.put.parameters[0].type: string
paths./boards/{idBoard}/myPrefs/showListGuide.put.parameters[1].description: Attributes
  of "My Prefs Show List Guide" to be updated.
paths./boards/{idBoard}/myPrefs/showListGuide.put.parameters[1].in: body
paths./boards/{idBoard}/myPrefs/showListGuide.put.parameters[1].name: body
paths./boards/{idBoard}/myPrefs/showListGuide.put.parameters[1].required: true
paths./boards/{idBoard}/myPrefs/showListGuide.put.parameters[1].schema.$ref: '#/definitions/myPrefs_showListGuide'
paths./boards/{idBoard}/myPrefs/showListGuide.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/myPrefs/showListGuide.put.parameters[2].in: query
paths./boards/{idBoard}/myPrefs/showListGuide.put.parameters[2].name: key
paths./boards/{idBoard}/myPrefs/showListGuide.put.parameters[2].required: true
paths./boards/{idBoard}/myPrefs/showListGuide.put.parameters[2].type: string
paths./boards/{idBoard}/myPrefs/showListGuide.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/myPrefs/showListGuide.put.parameters[3].in: query
paths./boards/{idBoard}/myPrefs/showListGuide.put.parameters[3].name: token
paths./boards/{idBoard}/myPrefs/showListGuide.put.parameters[3].required: true
paths./boards/{idBoard}/myPrefs/showListGuide.put.parameters[3].type: string
paths./boards/{idBoard}/myPrefs/showListGuide.put.responses.200.description: Success
paths./boards/{idBoard}/myPrefs/showListGuide.put.responses.400.description: Server
  rejection
paths./boards/{idBoard}/myPrefs/showListGuide.put.security.length: 2
paths./boards/{idBoard}/myPrefs/showListGuide.put.security[0].api_key.length: 0
paths./boards/{idBoard}/myPrefs/showListGuide.put.security[1].api_token.length: 0
paths./boards/{idBoard}/myPrefs/showListGuide.put.summary: updateBoardsMyPrefsShowListGuideByIdBoard()
paths./boards/{idBoard}/myPrefs/showListGuide.put.tags.length: 1
paths./boards/{idBoard}/myPrefs/showListGuide.put.tags[0]: board
paths./boards/{idBoard}/myPrefs/showSidebar.put.operationId: updateBoardsMyPrefsShowSidebarByIdBoard
paths./boards/{idBoard}/myPrefs/showSidebar.put.parameters.length: 4
paths./boards/{idBoard}/myPrefs/showSidebar.put.parameters[0].description: board_id
paths./boards/{idBoard}/myPrefs/showSidebar.put.parameters[0].in: path
paths./boards/{idBoard}/myPrefs/showSidebar.put.parameters[0].name: idBoard
paths./boards/{idBoard}/myPrefs/showSidebar.put.parameters[0].required: true
paths./boards/{idBoard}/myPrefs/showSidebar.put.parameters[0].type: string
paths./boards/{idBoard}/myPrefs/showSidebar.put.parameters[1].description: Attributes
  of "My Prefs Show Sidebar" to be updated.
paths./boards/{idBoard}/myPrefs/showSidebar.put.parameters[1].in: body
paths./boards/{idBoard}/myPrefs/showSidebar.put.parameters[1].name: body
paths./boards/{idBoard}/myPrefs/showSidebar.put.parameters[1].required: true
paths./boards/{idBoard}/myPrefs/showSidebar.put.parameters[1].schema.$ref: '#/definitions/myPrefs_showSidebar'
paths./boards/{idBoard}/myPrefs/showSidebar.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/myPrefs/showSidebar.put.parameters[2].in: query
paths./boards/{idBoard}/myPrefs/showSidebar.put.parameters[2].name: key
paths./boards/{idBoard}/myPrefs/showSidebar.put.parameters[2].required: true
paths./boards/{idBoard}/myPrefs/showSidebar.put.parameters[2].type: string
paths./boards/{idBoard}/myPrefs/showSidebar.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/myPrefs/showSidebar.put.parameters[3].in: query
paths./boards/{idBoard}/myPrefs/showSidebar.put.parameters[3].name: token
paths./boards/{idBoard}/myPrefs/showSidebar.put.parameters[3].required: true
paths./boards/{idBoard}/myPrefs/showSidebar.put.parameters[3].type: string
paths./boards/{idBoard}/myPrefs/showSidebar.put.responses.200.description: Success
paths./boards/{idBoard}/myPrefs/showSidebar.put.responses.400.description: Server
  rejection
paths./boards/{idBoard}/myPrefs/showSidebar.put.security.length: 2
paths./boards/{idBoard}/myPrefs/showSidebar.put.security[0].api_key.length: 0
paths./boards/{idBoard}/myPrefs/showSidebar.put.security[1].api_token.length: 0
paths./boards/{idBoard}/myPrefs/showSidebar.put.summary: updateBoardsMyPrefsShowSidebarByIdBoard()
paths./boards/{idBoard}/myPrefs/showSidebar.put.tags.length: 1
paths./boards/{idBoard}/myPrefs/showSidebar.put.tags[0]: board
paths./boards/{idBoard}/myPrefs/showSidebarActivity.put.operationId: updateBoardsMyPrefsShowSidebarActivityByIdBoard
paths./boards/{idBoard}/myPrefs/showSidebarActivity.put.parameters.length: 4
paths./boards/{idBoard}/myPrefs/showSidebarActivity.put.parameters[0].description: board_id
paths./boards/{idBoard}/myPrefs/showSidebarActivity.put.parameters[0].in: path
paths./boards/{idBoard}/myPrefs/showSidebarActivity.put.parameters[0].name: idBoard
paths./boards/{idBoard}/myPrefs/showSidebarActivity.put.parameters[0].required: true
paths./boards/{idBoard}/myPrefs/showSidebarActivity.put.parameters[0].type: string
paths./boards/{idBoard}/myPrefs/showSidebarActivity.put.parameters[1].description: Attributes
  of "My Prefs Show Sidebar Activity" to be updated.
paths./boards/{idBoard}/myPrefs/showSidebarActivity.put.parameters[1].in: body
paths./boards/{idBoard}/myPrefs/showSidebarActivity.put.parameters[1].name: body
paths./boards/{idBoard}/myPrefs/showSidebarActivity.put.parameters[1].required: true
paths./boards/{idBoard}/myPrefs/showSidebarActivity.put.parameters[1].schema.$ref: '#/definitions/myPrefs_showSidebarActivity'
paths./boards/{idBoard}/myPrefs/showSidebarActivity.put.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./boards/{idBoard}/myPrefs/showSidebarActivity.put.parameters[2].in: query
paths./boards/{idBoard}/myPrefs/showSidebarActivity.put.parameters[2].name: key
paths./boards/{idBoard}/myPrefs/showSidebarActivity.put.parameters[2].required: true
paths./boards/{idBoard}/myPrefs/showSidebarActivity.put.parameters[2].type: string
paths./boards/{idBoard}/myPrefs/showSidebarActivity.put.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/myPrefs/showSidebarActivity.put.parameters[3].in: query
paths./boards/{idBoard}/myPrefs/showSidebarActivity.put.parameters[3].name: token
paths./boards/{idBoard}/myPrefs/showSidebarActivity.put.parameters[3].required: true
paths./boards/{idBoard}/myPrefs/showSidebarActivity.put.parameters[3].type: string
paths./boards/{idBoard}/myPrefs/showSidebarActivity.put.responses.200.description: Success
paths./boards/{idBoard}/myPrefs/showSidebarActivity.put.responses.400.description: Server
  rejection
paths./boards/{idBoard}/myPrefs/showSidebarActivity.put.security.length: 2
paths./boards/{idBoard}/myPrefs/showSidebarActivity.put.security[0].api_key.length: 0
paths./boards/{idBoard}/myPrefs/showSidebarActivity.put.security[1].api_token.length: 0
paths./boards/{idBoard}/myPrefs/showSidebarActivity.put.summary: updateBoardsMyPrefsShowSidebarActivityByIdBoard()
paths./boards/{idBoard}/myPrefs/showSidebarActivity.put.tags.length: 1
paths./boards/{idBoard}/myPrefs/showSidebarActivity.put.tags[0]: board
paths./boards/{idBoard}/myPrefs/showSidebarBoardActions.put.operationId: updateBoardsMyPrefsShowSidebarBoardActionsByIdBoard
paths./boards/{idBoard}/myPrefs/showSidebarBoardActions.put.parameters.length: 4
paths./boards/{idBoard}/myPrefs/showSidebarBoardActions.put.parameters[0].description: board_id
paths./boards/{idBoard}/myPrefs/showSidebarBoardActions.put.parameters[0].in: path
paths./boards/{idBoard}/myPrefs/showSidebarBoardActions.put.parameters[0].name: idBoard
paths./boards/{idBoard}/myPrefs/showSidebarBoardActions.put.parameters[0].required: true
paths./boards/{idBoard}/myPrefs/showSidebarBoardActions.put.parameters[0].type: string
paths./boards/{idBoard}/myPrefs/showSidebarBoardActions.put.parameters[1].description: Attributes
  of "My Prefs Show Sidebar Board Actions" to be updated.
paths./boards/{idBoard}/myPrefs/showSidebarBoardActions.put.parameters[1].in: body
paths./boards/{idBoard}/myPrefs/showSidebarBoardActions.put.parameters[1].name: body
paths./boards/{idBoard}/myPrefs/showSidebarBoardActions.put.parameters[1].required: true
paths./boards/{idBoard}/myPrefs/showSidebarBoardActions.put.parameters[1].schema.$ref: '#/definitions/myPrefs_showSidebarBoardActions'
paths./boards/{idBoard}/myPrefs/showSidebarBoardActions.put.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./boards/{idBoard}/myPrefs/showSidebarBoardActions.put.parameters[2].in: query
paths./boards/{idBoard}/myPrefs/showSidebarBoardActions.put.parameters[2].name: key
paths./boards/{idBoard}/myPrefs/showSidebarBoardActions.put.parameters[2].required: true
paths./boards/{idBoard}/myPrefs/showSidebarBoardActions.put.parameters[2].type: string
paths./boards/{idBoard}/myPrefs/showSidebarBoardActions.put.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/myPrefs/showSidebarBoardActions.put.parameters[3].in: query
paths./boards/{idBoard}/myPrefs/showSidebarBoardActions.put.parameters[3].name: token
paths./boards/{idBoard}/myPrefs/showSidebarBoardActions.put.parameters[3].required: true
paths./boards/{idBoard}/myPrefs/showSidebarBoardActions.put.parameters[3].type: string
paths./boards/{idBoard}/myPrefs/showSidebarBoardActions.put.responses.200.description: Success
paths./boards/{idBoard}/myPrefs/showSidebarBoardActions.put.responses.400.description: Server
  rejection
paths./boards/{idBoard}/myPrefs/showSidebarBoardActions.put.security.length: 2
paths./boards/{idBoard}/myPrefs/showSidebarBoardActions.put.security[0].api_key.length: 0
paths./boards/{idBoard}/myPrefs/showSidebarBoardActions.put.security[1].api_token.length: 0
paths./boards/{idBoard}/myPrefs/showSidebarBoardActions.put.summary: updateBoardsMyPrefsShowSidebarBoardActionsByIdBoard()
paths./boards/{idBoard}/myPrefs/showSidebarBoardActions.put.tags.length: 1
paths./boards/{idBoard}/myPrefs/showSidebarBoardActions.put.tags[0]: board
paths./boards/{idBoard}/myPrefs/showSidebarMembers.put.operationId: updateBoardsMyPrefsShowSidebarMembersByIdBoard
paths./boards/{idBoard}/myPrefs/showSidebarMembers.put.parameters.length: 4
paths./boards/{idBoard}/myPrefs/showSidebarMembers.put.parameters[0].description: board_id
paths./boards/{idBoard}/myPrefs/showSidebarMembers.put.parameters[0].in: path
paths./boards/{idBoard}/myPrefs/showSidebarMembers.put.parameters[0].name: idBoard
paths./boards/{idBoard}/myPrefs/showSidebarMembers.put.parameters[0].required: true
paths./boards/{idBoard}/myPrefs/showSidebarMembers.put.parameters[0].type: string
paths./boards/{idBoard}/myPrefs/showSidebarMembers.put.parameters[1].description: Attributes
  of "My Prefs Show Sidebar Members" to be updated.
paths./boards/{idBoard}/myPrefs/showSidebarMembers.put.parameters[1].in: body
paths./boards/{idBoard}/myPrefs/showSidebarMembers.put.parameters[1].name: body
paths./boards/{idBoard}/myPrefs/showSidebarMembers.put.parameters[1].required: true
paths./boards/{idBoard}/myPrefs/showSidebarMembers.put.parameters[1].schema.$ref: '#/definitions/myPrefs_showSidebarMembers'
paths./boards/{idBoard}/myPrefs/showSidebarMembers.put.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./boards/{idBoard}/myPrefs/showSidebarMembers.put.parameters[2].in: query
paths./boards/{idBoard}/myPrefs/showSidebarMembers.put.parameters[2].name: key
paths./boards/{idBoard}/myPrefs/showSidebarMembers.put.parameters[2].required: true
paths./boards/{idBoard}/myPrefs/showSidebarMembers.put.parameters[2].type: string
paths./boards/{idBoard}/myPrefs/showSidebarMembers.put.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/myPrefs/showSidebarMembers.put.parameters[3].in: query
paths./boards/{idBoard}/myPrefs/showSidebarMembers.put.parameters[3].name: token
paths./boards/{idBoard}/myPrefs/showSidebarMembers.put.parameters[3].required: true
paths./boards/{idBoard}/myPrefs/showSidebarMembers.put.parameters[3].type: string
paths./boards/{idBoard}/myPrefs/showSidebarMembers.put.responses.200.description: Success
paths./boards/{idBoard}/myPrefs/showSidebarMembers.put.responses.400.description: Server
  rejection
paths./boards/{idBoard}/myPrefs/showSidebarMembers.put.security.length: 2
paths./boards/{idBoard}/myPrefs/showSidebarMembers.put.security[0].api_key.length: 0
paths./boards/{idBoard}/myPrefs/showSidebarMembers.put.security[1].api_token.length: 0
paths./boards/{idBoard}/myPrefs/showSidebarMembers.put.summary: updateBoardsMyPrefsShowSidebarMembersByIdBoard()
paths./boards/{idBoard}/myPrefs/showSidebarMembers.put.tags.length: 1
paths./boards/{idBoard}/myPrefs/showSidebarMembers.put.tags[0]: board
paths./boards/{idBoard}/name.put.operationId: updateBoardsNameByIdBoard
paths./boards/{idBoard}/name.put.parameters.length: 4
paths./boards/{idBoard}/name.put.parameters[0].description: board_id
paths./boards/{idBoard}/name.put.parameters[0].in: path
paths./boards/{idBoard}/name.put.parameters[0].name: idBoard
paths./boards/{idBoard}/name.put.parameters[0].required: true
paths./boards/{idBoard}/name.put.parameters[0].type: string
paths./boards/{idBoard}/name.put.parameters[1].description: Attributes of "Boards
  Name" to be updated.
paths./boards/{idBoard}/name.put.parameters[1].in: body
paths./boards/{idBoard}/name.put.parameters[1].name: body
paths./boards/{idBoard}/name.put.parameters[1].required: true
paths./boards/{idBoard}/name.put.parameters[1].schema.$ref: '#/definitions/boards_name'
paths./boards/{idBoard}/name.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/name.put.parameters[2].in: query
paths./boards/{idBoard}/name.put.parameters[2].name: key
paths./boards/{idBoard}/name.put.parameters[2].required: true
paths./boards/{idBoard}/name.put.parameters[2].type: string
paths./boards/{idBoard}/name.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/name.put.parameters[3].in: query
paths./boards/{idBoard}/name.put.parameters[3].name: token
paths./boards/{idBoard}/name.put.parameters[3].required: true
paths./boards/{idBoard}/name.put.parameters[3].type: string
paths./boards/{idBoard}/name.put.responses.200.description: Success
paths./boards/{idBoard}/name.put.responses.400.description: Server rejection
paths./boards/{idBoard}/name.put.security.length: 2
paths./boards/{idBoard}/name.put.security[0].api_key.length: 0
paths./boards/{idBoard}/name.put.security[1].api_token.length: 0
paths./boards/{idBoard}/name.put.summary: updateBoardsNameByIdBoard()
paths./boards/{idBoard}/name.put.tags.length: 1
paths./boards/{idBoard}/name.put.tags[0]: board
paths./boards/{idBoard}/organization.get.operationId: getBoardsOrganizationByIdBoard
paths./boards/{idBoard}/organization.get.parameters.length: 4
paths./boards/{idBoard}/organization.get.parameters[0].description: board_id
paths./boards/{idBoard}/organization.get.parameters[0].in: path
paths./boards/{idBoard}/organization.get.parameters[0].name: idBoard
paths./boards/{idBoard}/organization.get.parameters[0].required: true
paths./boards/{idBoard}/organization.get.parameters[0].type: string
paths./boards/{idBoard}/organization.get.parameters[1].default: all
paths./boards/{idBoard}/organization.get.parameters[1].description: 'all or a comma-separated
  list of: billableMemberCount, desc, descData, displayName, idBoards, invitations,
  invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products,
  url or website'
paths./boards/{idBoard}/organization.get.parameters[1].in: query
paths./boards/{idBoard}/organization.get.parameters[1].name: fields
paths./boards/{idBoard}/organization.get.parameters[1].required: false
paths./boards/{idBoard}/organization.get.parameters[1].type: string
paths./boards/{idBoard}/organization.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/organization.get.parameters[2].in: query
paths./boards/{idBoard}/organization.get.parameters[2].name: key
paths./boards/{idBoard}/organization.get.parameters[2].required: true
paths./boards/{idBoard}/organization.get.parameters[2].type: string
paths./boards/{idBoard}/organization.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/organization.get.parameters[3].in: query
paths./boards/{idBoard}/organization.get.parameters[3].name: token
paths./boards/{idBoard}/organization.get.parameters[3].required: true
paths./boards/{idBoard}/organization.get.parameters[3].type: string
paths./boards/{idBoard}/organization.get.responses.200.description: Success
paths./boards/{idBoard}/organization.get.responses.400.description: Server rejection
paths./boards/{idBoard}/organization.get.security.length: 2
paths./boards/{idBoard}/organization.get.security[0].api_key.length: 0
paths./boards/{idBoard}/organization.get.security[1].api_token.length: 0
paths./boards/{idBoard}/organization.get.summary: getBoardsOrganizationByIdBoard()
paths./boards/{idBoard}/organization.get.tags.length: 1
paths./boards/{idBoard}/organization.get.tags[0]: board
paths./boards/{idBoard}/organization/{field}.get.operationId: getBoardsOrganizationByIdBoardByField
paths./boards/{idBoard}/organization/{field}.get.parameters.length: 4
paths./boards/{idBoard}/organization/{field}.get.parameters[0].description: board_id
paths./boards/{idBoard}/organization/{field}.get.parameters[0].in: path
paths./boards/{idBoard}/organization/{field}.get.parameters[0].name: idBoard
paths./boards/{idBoard}/organization/{field}.get.parameters[0].required: true
paths./boards/{idBoard}/organization/{field}.get.parameters[0].type: string
paths./boards/{idBoard}/organization/{field}.get.parameters[1].description: field
paths./boards/{idBoard}/organization/{field}.get.parameters[1].in: path
paths./boards/{idBoard}/organization/{field}.get.parameters[1].name: field
paths./boards/{idBoard}/organization/{field}.get.parameters[1].required: true
paths./boards/{idBoard}/organization/{field}.get.parameters[1].type: string
paths./boards/{idBoard}/organization/{field}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/organization/{field}.get.parameters[2].in: query
paths./boards/{idBoard}/organization/{field}.get.parameters[2].name: key
paths./boards/{idBoard}/organization/{field}.get.parameters[2].required: true
paths./boards/{idBoard}/organization/{field}.get.parameters[2].type: string
paths./boards/{idBoard}/organization/{field}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/organization/{field}.get.parameters[3].in: query
paths./boards/{idBoard}/organization/{field}.get.parameters[3].name: token
paths./boards/{idBoard}/organization/{field}.get.parameters[3].required: true
paths./boards/{idBoard}/organization/{field}.get.parameters[3].type: string
paths./boards/{idBoard}/organization/{field}.get.responses.200.description: Success
paths./boards/{idBoard}/organization/{field}.get.responses.400.description: Server
  rejection
paths./boards/{idBoard}/organization/{field}.get.security.length: 2
paths./boards/{idBoard}/organization/{field}.get.security[0].api_key.length: 0
paths./boards/{idBoard}/organization/{field}.get.security[1].api_token.length: 0
paths./boards/{idBoard}/organization/{field}.get.summary: getBoardsOrganizationByIdBoardByField()
paths./boards/{idBoard}/organization/{field}.get.tags.length: 1
paths./boards/{idBoard}/organization/{field}.get.tags[0]: board
paths./boards/{idBoard}/powerUps.post.operationId: addBoardsPowerUpsByIdBoard
paths./boards/{idBoard}/powerUps.post.parameters.length: 4
paths./boards/{idBoard}/powerUps.post.parameters[0].description: board_id
paths./boards/{idBoard}/powerUps.post.parameters[0].in: path
paths./boards/{idBoard}/powerUps.post.parameters[0].name: idBoard
paths./boards/{idBoard}/powerUps.post.parameters[0].required: true
paths./boards/{idBoard}/powerUps.post.parameters[0].type: string
paths./boards/{idBoard}/powerUps.post.parameters[1].description: Attributes of "Boards
  Power Ups" to be added.
paths./boards/{idBoard}/powerUps.post.parameters[1].in: body
paths./boards/{idBoard}/powerUps.post.parameters[1].name: body
paths./boards/{idBoard}/powerUps.post.parameters[1].required: true
paths./boards/{idBoard}/powerUps.post.parameters[1].schema.$ref: '#/definitions/boards_powerUps'
paths./boards/{idBoard}/powerUps.post.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/powerUps.post.parameters[2].in: query
paths./boards/{idBoard}/powerUps.post.parameters[2].name: key
paths./boards/{idBoard}/powerUps.post.parameters[2].required: true
paths./boards/{idBoard}/powerUps.post.parameters[2].type: string
paths./boards/{idBoard}/powerUps.post.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/powerUps.post.parameters[3].in: query
paths./boards/{idBoard}/powerUps.post.parameters[3].name: token
paths./boards/{idBoard}/powerUps.post.parameters[3].required: true
paths./boards/{idBoard}/powerUps.post.parameters[3].type: string
paths./boards/{idBoard}/powerUps.post.responses.200.description: Success
paths./boards/{idBoard}/powerUps.post.responses.400.description: Server rejection
paths./boards/{idBoard}/powerUps.post.security.length: 2
paths./boards/{idBoard}/powerUps.post.security[0].api_key.length: 0
paths./boards/{idBoard}/powerUps.post.security[1].api_token.length: 0
paths./boards/{idBoard}/powerUps.post.summary: addBoardsPowerUpsByIdBoard()
paths./boards/{idBoard}/powerUps.post.tags.length: 1
paths./boards/{idBoard}/powerUps.post.tags[0]: board
paths./boards/{idBoard}/powerUps/{powerUp}.delete.operationId: deleteBoardsPowerUpsByIdBoardByPowerUp
paths./boards/{idBoard}/powerUps/{powerUp}.delete.parameters.length: 4
paths./boards/{idBoard}/powerUps/{powerUp}.delete.parameters[0].description: board_id
paths./boards/{idBoard}/powerUps/{powerUp}.delete.parameters[0].in: path
paths./boards/{idBoard}/powerUps/{powerUp}.delete.parameters[0].name: idBoard
paths./boards/{idBoard}/powerUps/{powerUp}.delete.parameters[0].required: true
paths./boards/{idBoard}/powerUps/{powerUp}.delete.parameters[0].type: string
paths./boards/{idBoard}/powerUps/{powerUp}.delete.parameters[1].description: powerUp
paths./boards/{idBoard}/powerUps/{powerUp}.delete.parameters[1].in: path
paths./boards/{idBoard}/powerUps/{powerUp}.delete.parameters[1].name: powerUp
paths./boards/{idBoard}/powerUps/{powerUp}.delete.parameters[1].required: true
paths./boards/{idBoard}/powerUps/{powerUp}.delete.parameters[1].type: string
paths./boards/{idBoard}/powerUps/{powerUp}.delete.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/powerUps/{powerUp}.delete.parameters[2].in: query
paths./boards/{idBoard}/powerUps/{powerUp}.delete.parameters[2].name: key
paths./boards/{idBoard}/powerUps/{powerUp}.delete.parameters[2].required: true
paths./boards/{idBoard}/powerUps/{powerUp}.delete.parameters[2].type: string
paths./boards/{idBoard}/powerUps/{powerUp}.delete.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/powerUps/{powerUp}.delete.parameters[3].in: query
paths./boards/{idBoard}/powerUps/{powerUp}.delete.parameters[3].name: token
paths./boards/{idBoard}/powerUps/{powerUp}.delete.parameters[3].required: true
paths./boards/{idBoard}/powerUps/{powerUp}.delete.parameters[3].type: string
paths./boards/{idBoard}/powerUps/{powerUp}.delete.responses.200.description: Success
paths./boards/{idBoard}/powerUps/{powerUp}.delete.responses.400.description: Server
  rejection
paths./boards/{idBoard}/powerUps/{powerUp}.delete.security.length: 2
paths./boards/{idBoard}/powerUps/{powerUp}.delete.security[0].api_key.length: 0
paths./boards/{idBoard}/powerUps/{powerUp}.delete.security[1].api_token.length: 0
paths./boards/{idBoard}/powerUps/{powerUp}.delete.summary: deleteBoardsPowerUpsByIdBoardByPowerUp()
paths./boards/{idBoard}/powerUps/{powerUp}.delete.tags.length: 1
paths./boards/{idBoard}/powerUps/{powerUp}.delete.tags[0]: board
paths./boards/{idBoard}/prefs/background.put.operationId: updateBoardsPrefsBackgroundByIdBoard
paths./boards/{idBoard}/prefs/background.put.parameters.length: 4
paths./boards/{idBoard}/prefs/background.put.parameters[0].description: board_id
paths./boards/{idBoard}/prefs/background.put.parameters[0].in: path
paths./boards/{idBoard}/prefs/background.put.parameters[0].name: idBoard
paths./boards/{idBoard}/prefs/background.put.parameters[0].required: true
paths./boards/{idBoard}/prefs/background.put.parameters[0].type: string
paths./boards/{idBoard}/prefs/background.put.parameters[1].description: Attributes
  of "Prefs Background" to be updated.
paths./boards/{idBoard}/prefs/background.put.parameters[1].in: body
paths./boards/{idBoard}/prefs/background.put.parameters[1].name: body
paths./boards/{idBoard}/prefs/background.put.parameters[1].required: true
paths./boards/{idBoard}/prefs/background.put.parameters[1].schema.$ref: '#/definitions/prefs_background'
paths./boards/{idBoard}/prefs/background.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/prefs/background.put.parameters[2].in: query
paths./boards/{idBoard}/prefs/background.put.parameters[2].name: key
paths./boards/{idBoard}/prefs/background.put.parameters[2].required: true
paths./boards/{idBoard}/prefs/background.put.parameters[2].type: string
paths./boards/{idBoard}/prefs/background.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/prefs/background.put.parameters[3].in: query
paths./boards/{idBoard}/prefs/background.put.parameters[3].name: token
paths./boards/{idBoard}/prefs/background.put.parameters[3].required: true
paths./boards/{idBoard}/prefs/background.put.parameters[3].type: string
paths./boards/{idBoard}/prefs/background.put.responses.200.description: Success
paths./boards/{idBoard}/prefs/background.put.responses.400.description: Server rejection
paths./boards/{idBoard}/prefs/background.put.security.length: 2
paths./boards/{idBoard}/prefs/background.put.security[0].api_key.length: 0
paths./boards/{idBoard}/prefs/background.put.security[1].api_token.length: 0
paths./boards/{idBoard}/prefs/background.put.summary: updateBoardsPrefsBackgroundByIdBoard()
paths./boards/{idBoard}/prefs/background.put.tags.length: 1
paths./boards/{idBoard}/prefs/background.put.tags[0]: board
paths./boards/{idBoard}/prefs/calendarFeedEnabled.put.operationId: updateBoardsPrefsCalendarFeedEnabledByIdBoard
paths./boards/{idBoard}/prefs/calendarFeedEnabled.put.parameters.length: 4
paths./boards/{idBoard}/prefs/calendarFeedEnabled.put.parameters[0].description: board_id
paths./boards/{idBoard}/prefs/calendarFeedEnabled.put.parameters[0].in: path
paths./boards/{idBoard}/prefs/calendarFeedEnabled.put.parameters[0].name: idBoard
paths./boards/{idBoard}/prefs/calendarFeedEnabled.put.parameters[0].required: true
paths./boards/{idBoard}/prefs/calendarFeedEnabled.put.parameters[0].type: string
paths./boards/{idBoard}/prefs/calendarFeedEnabled.put.parameters[1].description: Attributes
  of "Prefs Calendar Feed Enabled" to be updated.
paths./boards/{idBoard}/prefs/calendarFeedEnabled.put.parameters[1].in: body
paths./boards/{idBoard}/prefs/calendarFeedEnabled.put.parameters[1].name: body
paths./boards/{idBoard}/prefs/calendarFeedEnabled.put.parameters[1].required: true
paths./boards/{idBoard}/prefs/calendarFeedEnabled.put.parameters[1].schema.$ref: '#/definitions/prefs_calendarFeedEnabled'
paths./boards/{idBoard}/prefs/calendarFeedEnabled.put.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./boards/{idBoard}/prefs/calendarFeedEnabled.put.parameters[2].in: query
paths./boards/{idBoard}/prefs/calendarFeedEnabled.put.parameters[2].name: key
paths./boards/{idBoard}/prefs/calendarFeedEnabled.put.parameters[2].required: true
paths./boards/{idBoard}/prefs/calendarFeedEnabled.put.parameters[2].type: string
paths./boards/{idBoard}/prefs/calendarFeedEnabled.put.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/prefs/calendarFeedEnabled.put.parameters[3].in: query
paths./boards/{idBoard}/prefs/calendarFeedEnabled.put.parameters[3].name: token
paths./boards/{idBoard}/prefs/calendarFeedEnabled.put.parameters[3].required: true
paths./boards/{idBoard}/prefs/calendarFeedEnabled.put.parameters[3].type: string
paths./boards/{idBoard}/prefs/calendarFeedEnabled.put.responses.200.description: Success
paths./boards/{idBoard}/prefs/calendarFeedEnabled.put.responses.400.description: Server
  rejection
paths./boards/{idBoard}/prefs/calendarFeedEnabled.put.security.length: 2
paths./boards/{idBoard}/prefs/calendarFeedEnabled.put.security[0].api_key.length: 0
paths./boards/{idBoard}/prefs/calendarFeedEnabled.put.security[1].api_token.length: 0
paths./boards/{idBoard}/prefs/calendarFeedEnabled.put.summary: updateBoardsPrefsCalendarFeedEnabledByIdBoard()
paths./boards/{idBoard}/prefs/calendarFeedEnabled.put.tags.length: 1
paths./boards/{idBoard}/prefs/calendarFeedEnabled.put.tags[0]: board
paths./boards/{idBoard}/prefs/cardAging.put.operationId: updateBoardsPrefsCardAgingByIdBoard
paths./boards/{idBoard}/prefs/cardAging.put.parameters.length: 4
paths./boards/{idBoard}/prefs/cardAging.put.parameters[0].description: board_id
paths./boards/{idBoard}/prefs/cardAging.put.parameters[0].in: path
paths./boards/{idBoard}/prefs/cardAging.put.parameters[0].name: idBoard
paths./boards/{idBoard}/prefs/cardAging.put.parameters[0].required: true
paths./boards/{idBoard}/prefs/cardAging.put.parameters[0].type: string
paths./boards/{idBoard}/prefs/cardAging.put.parameters[1].description: Attributes
  of "Prefs Card Aging" to be updated.
paths./boards/{idBoard}/prefs/cardAging.put.parameters[1].in: body
paths./boards/{idBoard}/prefs/cardAging.put.parameters[1].name: body
paths./boards/{idBoard}/prefs/cardAging.put.parameters[1].required: true
paths./boards/{idBoard}/prefs/cardAging.put.parameters[1].schema.$ref: '#/definitions/prefs_cardAging'
paths./boards/{idBoard}/prefs/cardAging.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/prefs/cardAging.put.parameters[2].in: query
paths./boards/{idBoard}/prefs/cardAging.put.parameters[2].name: key
paths./boards/{idBoard}/prefs/cardAging.put.parameters[2].required: true
paths./boards/{idBoard}/prefs/cardAging.put.parameters[2].type: string
paths./boards/{idBoard}/prefs/cardAging.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/prefs/cardAging.put.parameters[3].in: query
paths./boards/{idBoard}/prefs/cardAging.put.parameters[3].name: token
paths./boards/{idBoard}/prefs/cardAging.put.parameters[3].required: true
paths./boards/{idBoard}/prefs/cardAging.put.parameters[3].type: string
paths./boards/{idBoard}/prefs/cardAging.put.responses.200.description: Success
paths./boards/{idBoard}/prefs/cardAging.put.responses.400.description: Server rejection
paths./boards/{idBoard}/prefs/cardAging.put.security.length: 2
paths./boards/{idBoard}/prefs/cardAging.put.security[0].api_key.length: 0
paths./boards/{idBoard}/prefs/cardAging.put.security[1].api_token.length: 0
paths./boards/{idBoard}/prefs/cardAging.put.summary: updateBoardsPrefsCardAgingByIdBoard()
paths./boards/{idBoard}/prefs/cardAging.put.tags.length: 1
paths./boards/{idBoard}/prefs/cardAging.put.tags[0]: board
paths./boards/{idBoard}/prefs/cardCovers.put.operationId: updateBoardsPrefsCardCoversByIdBoard
paths./boards/{idBoard}/prefs/cardCovers.put.parameters.length: 4
paths./boards/{idBoard}/prefs/cardCovers.put.parameters[0].description: board_id
paths./boards/{idBoard}/prefs/cardCovers.put.parameters[0].in: path
paths./boards/{idBoard}/prefs/cardCovers.put.parameters[0].name: idBoard
paths./boards/{idBoard}/prefs/cardCovers.put.parameters[0].required: true
paths./boards/{idBoard}/prefs/cardCovers.put.parameters[0].type: string
paths./boards/{idBoard}/prefs/cardCovers.put.parameters[1].description: Attributes
  of "Prefs Card Covers" to be updated.
paths./boards/{idBoard}/prefs/cardCovers.put.parameters[1].in: body
paths./boards/{idBoard}/prefs/cardCovers.put.parameters[1].name: body
paths./boards/{idBoard}/prefs/cardCovers.put.parameters[1].required: true
paths./boards/{idBoard}/prefs/cardCovers.put.parameters[1].schema.$ref: '#/definitions/prefs_cardCovers'
paths./boards/{idBoard}/prefs/cardCovers.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/prefs/cardCovers.put.parameters[2].in: query
paths./boards/{idBoard}/prefs/cardCovers.put.parameters[2].name: key
paths./boards/{idBoard}/prefs/cardCovers.put.parameters[2].required: true
paths./boards/{idBoard}/prefs/cardCovers.put.parameters[2].type: string
paths./boards/{idBoard}/prefs/cardCovers.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/prefs/cardCovers.put.parameters[3].in: query
paths./boards/{idBoard}/prefs/cardCovers.put.parameters[3].name: token
paths./boards/{idBoard}/prefs/cardCovers.put.parameters[3].required: true
paths./boards/{idBoard}/prefs/cardCovers.put.parameters[3].type: string
paths./boards/{idBoard}/prefs/cardCovers.put.responses.200.description: Success
paths./boards/{idBoard}/prefs/cardCovers.put.responses.400.description: Server rejection
paths./boards/{idBoard}/prefs/cardCovers.put.security.length: 2
paths./boards/{idBoard}/prefs/cardCovers.put.security[0].api_key.length: 0
paths./boards/{idBoard}/prefs/cardCovers.put.security[1].api_token.length: 0
paths./boards/{idBoard}/prefs/cardCovers.put.summary: updateBoardsPrefsCardCoversByIdBoard()
paths./boards/{idBoard}/prefs/cardCovers.put.tags.length: 1
paths./boards/{idBoard}/prefs/cardCovers.put.tags[0]: board
paths./boards/{idBoard}/prefs/comments.put.operationId: updateBoardsPrefsCommentsByIdBoard
paths./boards/{idBoard}/prefs/comments.put.parameters.length: 4
paths./boards/{idBoard}/prefs/comments.put.parameters[0].description: board_id
paths./boards/{idBoard}/prefs/comments.put.parameters[0].in: path
paths./boards/{idBoard}/prefs/comments.put.parameters[0].name: idBoard
paths./boards/{idBoard}/prefs/comments.put.parameters[0].required: true
paths./boards/{idBoard}/prefs/comments.put.parameters[0].type: string
paths./boards/{idBoard}/prefs/comments.put.parameters[1].description: Attributes of
  "Prefs Comments" to be updated.
paths./boards/{idBoard}/prefs/comments.put.parameters[1].in: body
paths./boards/{idBoard}/prefs/comments.put.parameters[1].name: body
paths./boards/{idBoard}/prefs/comments.put.parameters[1].required: true
paths./boards/{idBoard}/prefs/comments.put.parameters[1].schema.$ref: '#/definitions/prefs_comments'
paths./boards/{idBoard}/prefs/comments.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/prefs/comments.put.parameters[2].in: query
paths./boards/{idBoard}/prefs/comments.put.parameters[2].name: key
paths./boards/{idBoard}/prefs/comments.put.parameters[2].required: true
paths./boards/{idBoard}/prefs/comments.put.parameters[2].type: string
paths./boards/{idBoard}/prefs/comments.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/prefs/comments.put.parameters[3].in: query
paths./boards/{idBoard}/prefs/comments.put.parameters[3].name: token
paths./boards/{idBoard}/prefs/comments.put.parameters[3].required: true
paths./boards/{idBoard}/prefs/comments.put.parameters[3].type: string
paths./boards/{idBoard}/prefs/comments.put.responses.200.description: Success
paths./boards/{idBoard}/prefs/comments.put.responses.400.description: Server rejection
paths./boards/{idBoard}/prefs/comments.put.security.length: 2
paths./boards/{idBoard}/prefs/comments.put.security[0].api_key.length: 0
paths./boards/{idBoard}/prefs/comments.put.security[1].api_token.length: 0
paths./boards/{idBoard}/prefs/comments.put.summary: updateBoardsPrefsCommentsByIdBoard()
paths./boards/{idBoard}/prefs/comments.put.tags.length: 1
paths./boards/{idBoard}/prefs/comments.put.tags[0]: board
paths./boards/{idBoard}/prefs/invitations.put.operationId: updateBoardsPrefsInvitationsByIdBoard
paths./boards/{idBoard}/prefs/invitations.put.parameters.length: 4
paths./boards/{idBoard}/prefs/invitations.put.parameters[0].description: board_id
paths./boards/{idBoard}/prefs/invitations.put.parameters[0].in: path
paths./boards/{idBoard}/prefs/invitations.put.parameters[0].name: idBoard
paths./boards/{idBoard}/prefs/invitations.put.parameters[0].required: true
paths./boards/{idBoard}/prefs/invitations.put.parameters[0].type: string
paths./boards/{idBoard}/prefs/invitations.put.parameters[1].description: Attributes
  of "Prefs Invitations" to be updated.
paths./boards/{idBoard}/prefs/invitations.put.parameters[1].in: body
paths./boards/{idBoard}/prefs/invitations.put.parameters[1].name: body
paths./boards/{idBoard}/prefs/invitations.put.parameters[1].required: true
paths./boards/{idBoard}/prefs/invitations.put.parameters[1].schema.$ref: '#/definitions/prefs_invitations'
paths./boards/{idBoard}/prefs/invitations.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/prefs/invitations.put.parameters[2].in: query
paths./boards/{idBoard}/prefs/invitations.put.parameters[2].name: key
paths./boards/{idBoard}/prefs/invitations.put.parameters[2].required: true
paths./boards/{idBoard}/prefs/invitations.put.parameters[2].type: string
paths./boards/{idBoard}/prefs/invitations.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/prefs/invitations.put.parameters[3].in: query
paths./boards/{idBoard}/prefs/invitations.put.parameters[3].name: token
paths./boards/{idBoard}/prefs/invitations.put.parameters[3].required: true
paths./boards/{idBoard}/prefs/invitations.put.parameters[3].type: string
paths./boards/{idBoard}/prefs/invitations.put.responses.200.description: Success
paths./boards/{idBoard}/prefs/invitations.put.responses.400.description: Server rejection
paths./boards/{idBoard}/prefs/invitations.put.security.length: 2
paths./boards/{idBoard}/prefs/invitations.put.security[0].api_key.length: 0
paths./boards/{idBoard}/prefs/invitations.put.security[1].api_token.length: 0
paths./boards/{idBoard}/prefs/invitations.put.summary: updateBoardsPrefsInvitationsByIdBoard()
paths./boards/{idBoard}/prefs/invitations.put.tags.length: 1
paths./boards/{idBoard}/prefs/invitations.put.tags[0]: board
paths./boards/{idBoard}/prefs/permissionLevel.put.operationId: updateBoardsPrefsPermissionLevelByIdBoard
paths./boards/{idBoard}/prefs/permissionLevel.put.parameters.length: 4
paths./boards/{idBoard}/prefs/permissionLevel.put.parameters[0].description: board_id
paths./boards/{idBoard}/prefs/permissionLevel.put.parameters[0].in: path
paths./boards/{idBoard}/prefs/permissionLevel.put.parameters[0].name: idBoard
paths./boards/{idBoard}/prefs/permissionLevel.put.parameters[0].required: true
paths./boards/{idBoard}/prefs/permissionLevel.put.parameters[0].type: string
paths./boards/{idBoard}/prefs/permissionLevel.put.parameters[1].description: Attributes
  of "Prefs Permission Level" to be updated.
paths./boards/{idBoard}/prefs/permissionLevel.put.parameters[1].in: body
paths./boards/{idBoard}/prefs/permissionLevel.put.parameters[1].name: body
paths./boards/{idBoard}/prefs/permissionLevel.put.parameters[1].required: true
paths./boards/{idBoard}/prefs/permissionLevel.put.parameters[1].schema.$ref: '#/definitions/prefs_permissionLevel'
paths./boards/{idBoard}/prefs/permissionLevel.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/prefs/permissionLevel.put.parameters[2].in: query
paths./boards/{idBoard}/prefs/permissionLevel.put.parameters[2].name: key
paths./boards/{idBoard}/prefs/permissionLevel.put.parameters[2].required: true
paths./boards/{idBoard}/prefs/permissionLevel.put.parameters[2].type: string
paths./boards/{idBoard}/prefs/permissionLevel.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/prefs/permissionLevel.put.parameters[3].in: query
paths./boards/{idBoard}/prefs/permissionLevel.put.parameters[3].name: token
paths./boards/{idBoard}/prefs/permissionLevel.put.parameters[3].required: true
paths./boards/{idBoard}/prefs/permissionLevel.put.parameters[3].type: string
paths./boards/{idBoard}/prefs/permissionLevel.put.responses.200.description: Success
paths./boards/{idBoard}/prefs/permissionLevel.put.responses.400.description: Server
  rejection
paths./boards/{idBoard}/prefs/permissionLevel.put.security.length: 2
paths./boards/{idBoard}/prefs/permissionLevel.put.security[0].api_key.length: 0
paths./boards/{idBoard}/prefs/permissionLevel.put.security[1].api_token.length: 0
paths./boards/{idBoard}/prefs/permissionLevel.put.summary: updateBoardsPrefsPermissionLevelByIdBoard()
paths./boards/{idBoard}/prefs/permissionLevel.put.tags.length: 1
paths./boards/{idBoard}/prefs/permissionLevel.put.tags[0]: board
paths./boards/{idBoard}/prefs/selfJoin.put.operationId: updateBoardsPrefsSelfJoinByIdBoard
paths./boards/{idBoard}/prefs/selfJoin.put.parameters.length: 4
paths./boards/{idBoard}/prefs/selfJoin.put.parameters[0].description: board_id
paths./boards/{idBoard}/prefs/selfJoin.put.parameters[0].in: path
paths./boards/{idBoard}/prefs/selfJoin.put.parameters[0].name: idBoard
paths./boards/{idBoard}/prefs/selfJoin.put.parameters[0].required: true
paths./boards/{idBoard}/prefs/selfJoin.put.parameters[0].type: string
paths./boards/{idBoard}/prefs/selfJoin.put.parameters[1].description: Attributes of
  "Prefs Self Join" to be updated.
paths./boards/{idBoard}/prefs/selfJoin.put.parameters[1].in: body
paths./boards/{idBoard}/prefs/selfJoin.put.parameters[1].name: body
paths./boards/{idBoard}/prefs/selfJoin.put.parameters[1].required: true
paths./boards/{idBoard}/prefs/selfJoin.put.parameters[1].schema.$ref: '#/definitions/prefs_selfJoin'
paths./boards/{idBoard}/prefs/selfJoin.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/prefs/selfJoin.put.parameters[2].in: query
paths./boards/{idBoard}/prefs/selfJoin.put.parameters[2].name: key
paths./boards/{idBoard}/prefs/selfJoin.put.parameters[2].required: true
paths./boards/{idBoard}/prefs/selfJoin.put.parameters[2].type: string
paths./boards/{idBoard}/prefs/selfJoin.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/prefs/selfJoin.put.parameters[3].in: query
paths./boards/{idBoard}/prefs/selfJoin.put.parameters[3].name: token
paths./boards/{idBoard}/prefs/selfJoin.put.parameters[3].required: true
paths./boards/{idBoard}/prefs/selfJoin.put.parameters[3].type: string
paths./boards/{idBoard}/prefs/selfJoin.put.responses.200.description: Success
paths./boards/{idBoard}/prefs/selfJoin.put.responses.400.description: Server rejection
paths./boards/{idBoard}/prefs/selfJoin.put.security.length: 2
paths./boards/{idBoard}/prefs/selfJoin.put.security[0].api_key.length: 0
paths./boards/{idBoard}/prefs/selfJoin.put.security[1].api_token.length: 0
paths./boards/{idBoard}/prefs/selfJoin.put.summary: updateBoardsPrefsSelfJoinByIdBoard()
paths./boards/{idBoard}/prefs/selfJoin.put.tags.length: 1
paths./boards/{idBoard}/prefs/selfJoin.put.tags[0]: board
paths./boards/{idBoard}/prefs/voting.put.operationId: updateBoardsPrefsVotingByIdBoard
paths./boards/{idBoard}/prefs/voting.put.parameters.length: 4
paths./boards/{idBoard}/prefs/voting.put.parameters[0].description: board_id
paths./boards/{idBoard}/prefs/voting.put.parameters[0].in: path
paths./boards/{idBoard}/prefs/voting.put.parameters[0].name: idBoard
paths./boards/{idBoard}/prefs/voting.put.parameters[0].required: true
paths./boards/{idBoard}/prefs/voting.put.parameters[0].type: string
paths./boards/{idBoard}/prefs/voting.put.parameters[1].description: Attributes of
  "Prefs Voting" to be updated.
paths./boards/{idBoard}/prefs/voting.put.parameters[1].in: body
paths./boards/{idBoard}/prefs/voting.put.parameters[1].name: body
paths./boards/{idBoard}/prefs/voting.put.parameters[1].required: true
paths./boards/{idBoard}/prefs/voting.put.parameters[1].schema.$ref: '#/definitions/prefs_voting'
paths./boards/{idBoard}/prefs/voting.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/prefs/voting.put.parameters[2].in: query
paths./boards/{idBoard}/prefs/voting.put.parameters[2].name: key
paths./boards/{idBoard}/prefs/voting.put.parameters[2].required: true
paths./boards/{idBoard}/prefs/voting.put.parameters[2].type: string
paths./boards/{idBoard}/prefs/voting.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/prefs/voting.put.parameters[3].in: query
paths./boards/{idBoard}/prefs/voting.put.parameters[3].name: token
paths./boards/{idBoard}/prefs/voting.put.parameters[3].required: true
paths./boards/{idBoard}/prefs/voting.put.parameters[3].type: string
paths./boards/{idBoard}/prefs/voting.put.responses.200.description: Success
paths./boards/{idBoard}/prefs/voting.put.responses.400.description: Server rejection
paths./boards/{idBoard}/prefs/voting.put.security.length: 2
paths./boards/{idBoard}/prefs/voting.put.security[0].api_key.length: 0
paths./boards/{idBoard}/prefs/voting.put.security[1].api_token.length: 0
paths./boards/{idBoard}/prefs/voting.put.summary: updateBoardsPrefsVotingByIdBoard()
paths./boards/{idBoard}/prefs/voting.put.tags.length: 1
paths./boards/{idBoard}/prefs/voting.put.tags[0]: board
paths./boards/{idBoard}/subscribed.put.operationId: updateBoardsSubscribedByIdBoard
paths./boards/{idBoard}/subscribed.put.parameters.length: 4
paths./boards/{idBoard}/subscribed.put.parameters[0].description: board_id
paths./boards/{idBoard}/subscribed.put.parameters[0].in: path
paths./boards/{idBoard}/subscribed.put.parameters[0].name: idBoard
paths./boards/{idBoard}/subscribed.put.parameters[0].required: true
paths./boards/{idBoard}/subscribed.put.parameters[0].type: string
paths./boards/{idBoard}/subscribed.put.parameters[1].description: Attributes of "Boards
  Subscribed" to be updated.
paths./boards/{idBoard}/subscribed.put.parameters[1].in: body
paths./boards/{idBoard}/subscribed.put.parameters[1].name: body
paths./boards/{idBoard}/subscribed.put.parameters[1].required: true
paths./boards/{idBoard}/subscribed.put.parameters[1].schema.$ref: '#/definitions/boards_subscribed'
paths./boards/{idBoard}/subscribed.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./boards/{idBoard}/subscribed.put.parameters[2].in: query
paths./boards/{idBoard}/subscribed.put.parameters[2].name: key
paths./boards/{idBoard}/subscribed.put.parameters[2].required: true
paths./boards/{idBoard}/subscribed.put.parameters[2].type: string
paths./boards/{idBoard}/subscribed.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./boards/{idBoard}/subscribed.put.parameters[3].in: query
paths./boards/{idBoard}/subscribed.put.parameters[3].name: token
paths./boards/{idBoard}/subscribed.put.parameters[3].required: true
paths./boards/{idBoard}/subscribed.put.parameters[3].type: string
paths./boards/{idBoard}/subscribed.put.responses.200.description: Success
paths./boards/{idBoard}/subscribed.put.responses.400.description: Server rejection
paths./boards/{idBoard}/subscribed.put.security.length: 2
paths./boards/{idBoard}/subscribed.put.security[0].api_key.length: 0
paths./boards/{idBoard}/subscribed.put.security[1].api_token.length: 0
paths./boards/{idBoard}/subscribed.put.summary: updateBoardsSubscribedByIdBoard()
paths./boards/{idBoard}/subscribed.put.tags.length: 1
paths./boards/{idBoard}/subscribed.put.tags[0]: board
paths./cards.post.operationId: addCards
paths./cards.post.parameters.length: 3
paths./cards.post.parameters[0].description: Attributes of "Cards" to be added.
paths./cards.post.parameters[0].in: body
paths./cards.post.parameters[0].name: body
paths./cards.post.parameters[0].required: true
paths./cards.post.parameters[0].schema.$ref: '#/definitions/cards'
paths./cards.post.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards.post.parameters[1].in: query
paths./cards.post.parameters[1].name: key
paths./cards.post.parameters[1].required: true
paths./cards.post.parameters[1].type: string
paths./cards.post.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards.post.parameters[2].in: query
paths./cards.post.parameters[2].name: token
paths./cards.post.parameters[2].required: true
paths./cards.post.parameters[2].type: string
paths./cards.post.responses.200.description: Success
paths./cards.post.responses.400.description: Server rejection
paths./cards.post.security.length: 2
paths./cards.post.security[0].api_key.length: 0
paths./cards.post.security[1].api_token.length: 0
paths./cards.post.summary: addCards()
paths./cards.post.tags.length: 1
paths./cards.post.tags[0]: card
paths./cards/{idCard}.delete.operationId: deleteCardsByIdCard
paths./cards/{idCard}.delete.parameters.length: 3
paths./cards/{idCard}.delete.parameters[0].description: card id or shortlink
paths./cards/{idCard}.delete.parameters[0].in: path
paths./cards/{idCard}.delete.parameters[0].name: idCard
paths./cards/{idCard}.delete.parameters[0].required: true
paths./cards/{idCard}.delete.parameters[0].type: string
paths./cards/{idCard}.delete.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}.delete.parameters[1].in: query
paths./cards/{idCard}.delete.parameters[1].name: key
paths./cards/{idCard}.delete.parameters[1].required: true
paths./cards/{idCard}.delete.parameters[1].type: string
paths./cards/{idCard}.delete.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}.delete.parameters[2].in: query
paths./cards/{idCard}.delete.parameters[2].name: token
paths./cards/{idCard}.delete.parameters[2].required: true
paths./cards/{idCard}.delete.parameters[2].type: string
paths./cards/{idCard}.delete.responses.200.description: Success
paths./cards/{idCard}.delete.responses.400.description: Server rejection
paths./cards/{idCard}.delete.security.length: 2
paths./cards/{idCard}.delete.security[0].api_key.length: 0
paths./cards/{idCard}.delete.security[1].api_token.length: 0
paths./cards/{idCard}.delete.summary: deleteCardsByIdCard()
paths./cards/{idCard}.delete.tags.length: 1
paths./cards/{idCard}.delete.tags[0]: card
paths./cards/{idCard}.get.operationId: getCardsByIdCard
paths./cards/{idCard}.get.parameters.length: 26
paths./cards/{idCard}.get.parameters[0].description: card id or shortlink
paths./cards/{idCard}.get.parameters[0].in: path
paths./cards/{idCard}.get.parameters[0].name: idCard
paths./cards/{idCard}.get.parameters[0].required: true
paths./cards/{idCard}.get.parameters[0].type: string
paths./cards/{idCard}.get.parameters[1].description: 'all or a comma-separated list
  of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard,
  addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem,
  copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization,
  deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation,
  disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
  makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard,
  moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,
  removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
  updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,
  updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed,
  updateList:name, updateMember or updateOrganization'
paths./cards/{idCard}.get.parameters[1].in: query
paths./cards/{idCard}.get.parameters[1].name: actions
paths./cards/{idCard}.get.parameters[1].required: false
paths./cards/{idCard}.get.parameters[1].type: string
paths./cards/{idCard}.get.parameters[2].description: ' true or false'
paths./cards/{idCard}.get.parameters[2].in: query
paths./cards/{idCard}.get.parameters[2].name: actions_entities
paths./cards/{idCard}.get.parameters[2].required: false
paths./cards/{idCard}.get.parameters[2].type: string
paths./cards/{idCard}.get.parameters[3].description: ' true or false'
paths./cards/{idCard}.get.parameters[3].in: query
paths./cards/{idCard}.get.parameters[3].name: actions_display
paths./cards/{idCard}.get.parameters[3].required: false
paths./cards/{idCard}.get.parameters[3].type: string
paths./cards/{idCard}.get.parameters[4].default: "50"
paths./cards/{idCard}.get.parameters[4].description: a number from 0 to 1000
paths./cards/{idCard}.get.parameters[4].in: query
paths./cards/{idCard}.get.parameters[4].name: actions_limit
paths./cards/{idCard}.get.parameters[4].required: false
paths./cards/{idCard}.get.parameters[4].type: string
paths./cards/{idCard}.get.parameters[5].default: all
paths./cards/{idCard}.get.parameters[5].description: 'all or a comma-separated list
  of: data, date, idMemberCreator or type'
paths./cards/{idCard}.get.parameters[5].in: query
paths./cards/{idCard}.get.parameters[5].name: action_fields
paths./cards/{idCard}.get.parameters[5].required: false
paths./cards/{idCard}.get.parameters[5].type: string
paths./cards/{idCard}.get.parameters[6].default: avatarHash, fullName, initials and
  username
paths./cards/{idCard}.get.parameters[6].description: 'all or a comma-separated list
  of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType,
  products, status, url or username'
paths./cards/{idCard}.get.parameters[6].in: query
paths./cards/{idCard}.get.parameters[6].name: action_memberCreator_fields
paths./cards/{idCard}.get.parameters[6].required: false
paths./cards/{idCard}.get.parameters[6].type: string
paths./cards/{idCard}.get.parameters[7].description: A boolean value or &quot;cover&quot;
  for only card cover attachments
paths./cards/{idCard}.get.parameters[7].in: query
paths./cards/{idCard}.get.parameters[7].name: attachments
paths./cards/{idCard}.get.parameters[7].required: false
paths./cards/{idCard}.get.parameters[7].type: string
paths./cards/{idCard}.get.parameters[8].default: all
paths./cards/{idCard}.get.parameters[8].description: 'all or a comma-separated list
  of: bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews or url'
paths./cards/{idCard}.get.parameters[8].in: query
paths./cards/{idCard}.get.parameters[8].name: attachment_fields
paths./cards/{idCard}.get.parameters[8].required: false
paths./cards/{idCard}.get.parameters[8].type: string
paths./cards/{idCard}.get.parameters[9].description: ' true or false'
paths./cards/{idCard}.get.parameters[9].in: query
paths./cards/{idCard}.get.parameters[9].name: members
paths./cards/{idCard}.get.parameters[9].required: false
paths./cards/{idCard}.get.parameters[9].type: string
paths./cards/{idCard}.get.parameters[10].default: avatarHash, fullName, initials and
  username
paths./cards/{idCard}.get.parameters[10].description: 'all or a comma-separated list
  of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType,
  products, status, url or username'
paths./cards/{idCard}.get.parameters[10].in: query
paths./cards/{idCard}.get.parameters[10].name: member_fields
paths./cards/{idCard}.get.parameters[10].required: false
paths./cards/{idCard}.get.parameters[10].type: string
paths./cards/{idCard}.get.parameters[11].description: ' true or false'
paths./cards/{idCard}.get.parameters[11].in: query
paths./cards/{idCard}.get.parameters[11].name: membersVoted
paths./cards/{idCard}.get.parameters[11].required: false
paths./cards/{idCard}.get.parameters[11].type: string
paths./cards/{idCard}.get.parameters[12].default: avatarHash, fullName, initials and
  username
paths./cards/{idCard}.get.parameters[12].description: 'all or a comma-separated list
  of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType,
  products, status, url or username'
paths./cards/{idCard}.get.parameters[12].in: query
paths./cards/{idCard}.get.parameters[12].name: memberVoted_fields
paths./cards/{idCard}.get.parameters[12].required: false
paths./cards/{idCard}.get.parameters[12].type: string
paths./cards/{idCard}.get.parameters[13].description: ' true or false'
paths./cards/{idCard}.get.parameters[13].in: query
paths./cards/{idCard}.get.parameters[13].name: checkItemStates
paths./cards/{idCard}.get.parameters[13].required: false
paths./cards/{idCard}.get.parameters[13].type: string
paths./cards/{idCard}.get.parameters[14].default: all
paths./cards/{idCard}.get.parameters[14].description: 'all or a comma-separated list
  of: idCheckItem or state'
paths./cards/{idCard}.get.parameters[14].in: query
paths./cards/{idCard}.get.parameters[14].name: checkItemState_fields
paths./cards/{idCard}.get.parameters[14].required: false
paths./cards/{idCard}.get.parameters[14].type: string
paths./cards/{idCard}.get.parameters[15].default: none
paths./cards/{idCard}.get.parameters[15].description: 'One of: all or none'
paths./cards/{idCard}.get.parameters[15].in: query
paths./cards/{idCard}.get.parameters[15].name: checklists
paths./cards/{idCard}.get.parameters[15].required: false
paths./cards/{idCard}.get.parameters[15].type: string
paths./cards/{idCard}.get.parameters[16].default: all
paths./cards/{idCard}.get.parameters[16].description: 'all or a comma-separated list
  of: idBoard, idCard, name or pos'
paths./cards/{idCard}.get.parameters[16].in: query
paths./cards/{idCard}.get.parameters[16].name: checklist_fields
paths./cards/{idCard}.get.parameters[16].required: false
paths./cards/{idCard}.get.parameters[16].type: string
paths./cards/{idCard}.get.parameters[17].description: ' true or false'
paths./cards/{idCard}.get.parameters[17].in: query
paths./cards/{idCard}.get.parameters[17].name: board
paths./cards/{idCard}.get.parameters[17].required: false
paths./cards/{idCard}.get.parameters[17].type: string
paths./cards/{idCard}.get.parameters[18].default: name, desc, descData, closed, idOrganization,
  pinned, url and prefs
paths./cards/{idCard}.get.parameters[18].description: 'all or a comma-separated list
  of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations,
  invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl,
  starred, subscribed or url'
paths./cards/{idCard}.get.parameters[18].in: query
paths./cards/{idCard}.get.parameters[18].name: board_fields
paths./cards/{idCard}.get.parameters[18].required: false
paths./cards/{idCard}.get.parameters[18].type: string
paths./cards/{idCard}.get.parameters[19].description: ' true or false'
paths./cards/{idCard}.get.parameters[19].in: query
paths./cards/{idCard}.get.parameters[19].name: list
paths./cards/{idCard}.get.parameters[19].required: false
paths./cards/{idCard}.get.parameters[19].type: string
paths./cards/{idCard}.get.parameters[20].default: all
paths./cards/{idCard}.get.parameters[20].description: 'all or a comma-separated list
  of: closed, idBoard, name, pos or subscribed'
paths./cards/{idCard}.get.parameters[20].in: query
paths./cards/{idCard}.get.parameters[20].name: list_fields
paths./cards/{idCard}.get.parameters[20].required: false
paths./cards/{idCard}.get.parameters[20].type: string
paths./cards/{idCard}.get.parameters[21].description: ' true or false'
paths./cards/{idCard}.get.parameters[21].in: query
paths./cards/{idCard}.get.parameters[21].name: stickers
paths./cards/{idCard}.get.parameters[21].required: false
paths./cards/{idCard}.get.parameters[21].type: string
paths./cards/{idCard}.get.parameters[22].default: all
paths./cards/{idCard}.get.parameters[22].description: 'all or a comma-separated list
  of: image, imageScaled, imageUrl, left, rotate, top or zIndex'
paths./cards/{idCard}.get.parameters[22].in: query
paths./cards/{idCard}.get.parameters[22].name: sticker_fields
paths./cards/{idCard}.get.parameters[22].required: false
paths./cards/{idCard}.get.parameters[22].type: string
paths./cards/{idCard}.get.parameters[23].default: badges, checkItemStates, closed,
  dateLastActivity, desc, descData, due, email, idBoard, idChecklists, idLabels, idList,
  idMembers, idShort, idAttachmentCover, manualCoverAttachment, labels, name, pos,
  shortUrl and url
paths./cards/{idCard}.get.parameters[23].description: 'all or a comma-separated list
  of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email,
  idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
  idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed
  or url'
paths./cards/{idCard}.get.parameters[23].in: query
paths./cards/{idCard}.get.parameters[23].name: fields
paths./cards/{idCard}.get.parameters[23].required: false
paths./cards/{idCard}.get.parameters[23].type: string
paths./cards/{idCard}.get.parameters[24].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}.get.parameters[24].in: query
paths./cards/{idCard}.get.parameters[24].name: key
paths./cards/{idCard}.get.parameters[24].required: true
paths./cards/{idCard}.get.parameters[24].type: string
paths./cards/{idCard}.get.parameters[25].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}.get.parameters[25].in: query
paths./cards/{idCard}.get.parameters[25].name: token
paths./cards/{idCard}.get.parameters[25].required: true
paths./cards/{idCard}.get.parameters[25].type: string
paths./cards/{idCard}.get.responses.200.description: Success
paths./cards/{idCard}.get.responses.400.description: Server rejection
paths./cards/{idCard}.get.security.length: 2
paths./cards/{idCard}.get.security[0].api_key.length: 0
paths./cards/{idCard}.get.security[1].api_token.length: 0
paths./cards/{idCard}.get.summary: getCardsByIdCard()
paths./cards/{idCard}.get.tags.length: 1
paths./cards/{idCard}.get.tags[0]: card
paths./cards/{idCard}.put.operationId: updateCardsByIdCard
paths./cards/{idCard}.put.parameters.length: 4
paths./cards/{idCard}.put.parameters[0].description: card id or shortlink
paths./cards/{idCard}.put.parameters[0].in: path
paths./cards/{idCard}.put.parameters[0].name: idCard
paths./cards/{idCard}.put.parameters[0].required: true
paths./cards/{idCard}.put.parameters[0].type: string
paths./cards/{idCard}.put.parameters[1].description: Attributes of "Cards" to be updated.
paths./cards/{idCard}.put.parameters[1].in: body
paths./cards/{idCard}.put.parameters[1].name: body
paths./cards/{idCard}.put.parameters[1].required: true
paths./cards/{idCard}.put.parameters[1].schema.$ref: '#/definitions/cards'
paths./cards/{idCard}.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}.put.parameters[2].in: query
paths./cards/{idCard}.put.parameters[2].name: key
paths./cards/{idCard}.put.parameters[2].required: true
paths./cards/{idCard}.put.parameters[2].type: string
paths./cards/{idCard}.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}.put.parameters[3].in: query
paths./cards/{idCard}.put.parameters[3].name: token
paths./cards/{idCard}.put.parameters[3].required: true
paths./cards/{idCard}.put.parameters[3].type: string
paths./cards/{idCard}.put.responses.200.description: Success
paths./cards/{idCard}.put.responses.400.description: Server rejection
paths./cards/{idCard}.put.security.length: 2
paths./cards/{idCard}.put.security[0].api_key.length: 0
paths./cards/{idCard}.put.security[1].api_token.length: 0
paths./cards/{idCard}.put.summary: updateCardsByIdCard()
paths./cards/{idCard}.put.tags.length: 1
paths./cards/{idCard}.put.tags[0]: card
paths./cards/{idCard}/{field}.get.operationId: getCardsByIdCardByField
paths./cards/{idCard}/{field}.get.parameters.length: 4
paths./cards/{idCard}/{field}.get.parameters[0].description: card id or shortlink
paths./cards/{idCard}/{field}.get.parameters[0].in: path
paths./cards/{idCard}/{field}.get.parameters[0].name: idCard
paths./cards/{idCard}/{field}.get.parameters[0].required: true
paths./cards/{idCard}/{field}.get.parameters[0].type: string
paths./cards/{idCard}/{field}.get.parameters[1].description: field
paths./cards/{idCard}/{field}.get.parameters[1].in: path
paths./cards/{idCard}/{field}.get.parameters[1].name: field
paths./cards/{idCard}/{field}.get.parameters[1].required: true
paths./cards/{idCard}/{field}.get.parameters[1].type: string
paths./cards/{idCard}/{field}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/{field}.get.parameters[2].in: query
paths./cards/{idCard}/{field}.get.parameters[2].name: key
paths./cards/{idCard}/{field}.get.parameters[2].required: true
paths./cards/{idCard}/{field}.get.parameters[2].type: string
paths./cards/{idCard}/{field}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/{field}.get.parameters[3].in: query
paths./cards/{idCard}/{field}.get.parameters[3].name: token
paths./cards/{idCard}/{field}.get.parameters[3].required: true
paths./cards/{idCard}/{field}.get.parameters[3].type: string
paths./cards/{idCard}/{field}.get.responses.200.description: Success
paths./cards/{idCard}/{field}.get.responses.400.description: Server rejection
paths./cards/{idCard}/{field}.get.summary: getCardsByIdCardByField()
paths./cards/{idCard}/{field}.get.tags.length: 1
paths./cards/{idCard}/{field}.get.tags[0]: card
paths./cards/{idCard}/actions.get.operationId: getCardsActionsByIdCard
paths./cards/{idCard}/actions.get.parameters.length: 17
paths./cards/{idCard}/actions.get.parameters[0].description: card id or shortlink
paths./cards/{idCard}/actions.get.parameters[0].in: path
paths./cards/{idCard}/actions.get.parameters[0].name: idCard
paths./cards/{idCard}/actions.get.parameters[0].required: true
paths./cards/{idCard}/actions.get.parameters[0].type: string
paths./cards/{idCard}/actions.get.parameters[1].description: ' true or false'
paths./cards/{idCard}/actions.get.parameters[1].in: query
paths./cards/{idCard}/actions.get.parameters[1].name: entities
paths./cards/{idCard}/actions.get.parameters[1].required: false
paths./cards/{idCard}/actions.get.parameters[1].type: string
paths./cards/{idCard}/actions.get.parameters[2].description: ' true or false'
paths./cards/{idCard}/actions.get.parameters[2].in: query
paths./cards/{idCard}/actions.get.parameters[2].name: display
paths./cards/{idCard}/actions.get.parameters[2].required: false
paths./cards/{idCard}/actions.get.parameters[2].type: string
paths./cards/{idCard}/actions.get.parameters[3].default: commentCard and updateCard:idList
paths./cards/{idCard}/actions.get.parameters[3].description: 'all or a comma-separated
  list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard,
  addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem,
  copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization,
  deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation,
  disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
  makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard,
  moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,
  removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
  updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,
  updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed,
  updateList:name, updateMember or updateOrganization'
paths./cards/{idCard}/actions.get.parameters[3].in: query
paths./cards/{idCard}/actions.get.parameters[3].name: filter
paths./cards/{idCard}/actions.get.parameters[3].required: false
paths./cards/{idCard}/actions.get.parameters[3].type: string
paths./cards/{idCard}/actions.get.parameters[4].default: all
paths./cards/{idCard}/actions.get.parameters[4].description: 'all or a comma-separated
  list of: data, date, idMemberCreator or type'
paths./cards/{idCard}/actions.get.parameters[4].in: query
paths./cards/{idCard}/actions.get.parameters[4].name: fields
paths./cards/{idCard}/actions.get.parameters[4].required: false
paths./cards/{idCard}/actions.get.parameters[4].type: string
paths./cards/{idCard}/actions.get.parameters[5].default: "50"
paths./cards/{idCard}/actions.get.parameters[5].description: a number from 0 to 1000
paths./cards/{idCard}/actions.get.parameters[5].in: query
paths./cards/{idCard}/actions.get.parameters[5].name: limit
paths./cards/{idCard}/actions.get.parameters[5].required: false
paths./cards/{idCard}/actions.get.parameters[5].type: string
paths./cards/{idCard}/actions.get.parameters[6].default: list
paths./cards/{idCard}/actions.get.parameters[6].description: 'One of: count, list
  or minimal'
paths./cards/{idCard}/actions.get.parameters[6].in: query
paths./cards/{idCard}/actions.get.parameters[6].name: format
paths./cards/{idCard}/actions.get.parameters[6].required: false
paths./cards/{idCard}/actions.get.parameters[6].type: string
paths./cards/{idCard}/actions.get.parameters[7].description: A date, null or lastView
paths./cards/{idCard}/actions.get.parameters[7].in: query
paths./cards/{idCard}/actions.get.parameters[7].name: since
paths./cards/{idCard}/actions.get.parameters[7].required: false
paths./cards/{idCard}/actions.get.parameters[7].type: string
paths./cards/{idCard}/actions.get.parameters[8].description: A date, or null
paths./cards/{idCard}/actions.get.parameters[8].in: query
paths./cards/{idCard}/actions.get.parameters[8].name: before
paths./cards/{idCard}/actions.get.parameters[8].required: false
paths./cards/{idCard}/actions.get.parameters[8].type: string
paths./cards/{idCard}/actions.get.parameters[9].default: "0"
paths./cards/{idCard}/actions.get.parameters[9].description: Page * limit must be
  less than 1000
paths./cards/{idCard}/actions.get.parameters[9].in: query
paths./cards/{idCard}/actions.get.parameters[9].name: page
paths./cards/{idCard}/actions.get.parameters[9].required: false
paths./cards/{idCard}/actions.get.parameters[9].type: string
paths./cards/{idCard}/actions.get.parameters[10].description: Only return actions
  related to these model ids
paths./cards/{idCard}/actions.get.parameters[10].in: query
paths./cards/{idCard}/actions.get.parameters[10].name: idModels
paths./cards/{idCard}/actions.get.parameters[10].required: false
paths./cards/{idCard}/actions.get.parameters[10].type: string
paths./cards/{idCard}/actions.get.parameters[11].description: ' true or false'
paths./cards/{idCard}/actions.get.parameters[11].in: query
paths./cards/{idCard}/actions.get.parameters[11].name: member
paths./cards/{idCard}/actions.get.parameters[11].required: false
paths./cards/{idCard}/actions.get.parameters[11].type: string
paths./cards/{idCard}/actions.get.parameters[12].default: avatarHash, fullName, initials
  and username
paths./cards/{idCard}/actions.get.parameters[12].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./cards/{idCard}/actions.get.parameters[12].in: query
paths./cards/{idCard}/actions.get.parameters[12].name: member_fields
paths./cards/{idCard}/actions.get.parameters[12].required: false
paths./cards/{idCard}/actions.get.parameters[12].type: string
paths./cards/{idCard}/actions.get.parameters[13].description: ' true or false'
paths./cards/{idCard}/actions.get.parameters[13].in: query
paths./cards/{idCard}/actions.get.parameters[13].name: memberCreator
paths./cards/{idCard}/actions.get.parameters[13].required: false
paths./cards/{idCard}/actions.get.parameters[13].type: string
paths./cards/{idCard}/actions.get.parameters[14].default: avatarHash, fullName, initials
  and username
paths./cards/{idCard}/actions.get.parameters[14].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./cards/{idCard}/actions.get.parameters[14].in: query
paths./cards/{idCard}/actions.get.parameters[14].name: memberCreator_fields
paths./cards/{idCard}/actions.get.parameters[14].required: false
paths./cards/{idCard}/actions.get.parameters[14].type: string
paths./cards/{idCard}/actions.get.parameters[15].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/actions.get.parameters[15].in: query
paths./cards/{idCard}/actions.get.parameters[15].name: key
paths./cards/{idCard}/actions.get.parameters[15].required: true
paths./cards/{idCard}/actions.get.parameters[15].type: string
paths./cards/{idCard}/actions.get.parameters[16].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/actions.get.parameters[16].in: query
paths./cards/{idCard}/actions.get.parameters[16].name: token
paths./cards/{idCard}/actions.get.parameters[16].required: true
paths./cards/{idCard}/actions.get.parameters[16].type: string
paths./cards/{idCard}/actions.get.responses.200.description: Success
paths./cards/{idCard}/actions.get.responses.400.description: Server rejection
paths./cards/{idCard}/actions.get.security.length: 2
paths./cards/{idCard}/actions.get.security[0].api_key.length: 0
paths./cards/{idCard}/actions.get.security[1].api_token.length: 0
paths./cards/{idCard}/actions.get.summary: getCardsActionsByIdCard()
paths./cards/{idCard}/actions.get.tags.length: 1
paths./cards/{idCard}/actions.get.tags[0]: card
paths./cards/{idCard}/actions/{idAction}/comments.delete.description: This can only
  be done by the original author of the comment, or someone with higher permissions
  than the original author.
paths./cards/{idCard}/actions/{idAction}/comments.delete.operationId: deleteCardsActionsCommentsByIdCardByIdAction
paths./cards/{idCard}/actions/{idAction}/comments.delete.parameters.length: 4
paths./cards/{idCard}/actions/{idAction}/comments.delete.parameters[0].description: card
  id or shortlink
paths./cards/{idCard}/actions/{idAction}/comments.delete.parameters[0].in: path
paths./cards/{idCard}/actions/{idAction}/comments.delete.parameters[0].name: idCard
paths./cards/{idCard}/actions/{idAction}/comments.delete.parameters[0].required: true
paths./cards/{idCard}/actions/{idAction}/comments.delete.parameters[0].type: string
paths./cards/{idCard}/actions/{idAction}/comments.delete.parameters[1].description: idAction
paths./cards/{idCard}/actions/{idAction}/comments.delete.parameters[1].in: path
paths./cards/{idCard}/actions/{idAction}/comments.delete.parameters[1].name: idAction
paths./cards/{idCard}/actions/{idAction}/comments.delete.parameters[1].required: true
paths./cards/{idCard}/actions/{idAction}/comments.delete.parameters[1].type: string
paths./cards/{idCard}/actions/{idAction}/comments.delete.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./cards/{idCard}/actions/{idAction}/comments.delete.parameters[2].in: query
paths./cards/{idCard}/actions/{idAction}/comments.delete.parameters[2].name: key
paths./cards/{idCard}/actions/{idAction}/comments.delete.parameters[2].required: true
paths./cards/{idCard}/actions/{idAction}/comments.delete.parameters[2].type: string
paths./cards/{idCard}/actions/{idAction}/comments.delete.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/actions/{idAction}/comments.delete.parameters[3].in: query
paths./cards/{idCard}/actions/{idAction}/comments.delete.parameters[3].name: token
paths./cards/{idCard}/actions/{idAction}/comments.delete.parameters[3].required: true
paths./cards/{idCard}/actions/{idAction}/comments.delete.parameters[3].type: string
paths./cards/{idCard}/actions/{idAction}/comments.delete.responses.200.description: Success
paths./cards/{idCard}/actions/{idAction}/comments.delete.responses.400.description: Server
  rejection
paths./cards/{idCard}/actions/{idAction}/comments.delete.security.length: 2
paths./cards/{idCard}/actions/{idAction}/comments.delete.security[0].api_key.length: 0
paths./cards/{idCard}/actions/{idAction}/comments.delete.security[1].api_token.length: 0
paths./cards/{idCard}/actions/{idAction}/comments.delete.summary: deleteCardsActionsCommentsByIdCardByIdAction()
paths./cards/{idCard}/actions/{idAction}/comments.delete.tags.length: 1
paths./cards/{idCard}/actions/{idAction}/comments.delete.tags[0]: card
paths./cards/{idCard}/actions/{idAction}/comments.put.description: This can only be
  done by the original author of the comment.
paths./cards/{idCard}/actions/{idAction}/comments.put.operationId: updateCardsActionsCommentsByIdCardByIdAction
paths./cards/{idCard}/actions/{idAction}/comments.put.parameters.length: 5
paths./cards/{idCard}/actions/{idAction}/comments.put.parameters[0].description: card
  id or shortlink
paths./cards/{idCard}/actions/{idAction}/comments.put.parameters[0].in: path
paths./cards/{idCard}/actions/{idAction}/comments.put.parameters[0].name: idCard
paths./cards/{idCard}/actions/{idAction}/comments.put.parameters[0].required: true
paths./cards/{idCard}/actions/{idAction}/comments.put.parameters[0].type: string
paths./cards/{idCard}/actions/{idAction}/comments.put.parameters[1].description: idAction
paths./cards/{idCard}/actions/{idAction}/comments.put.parameters[1].in: path
paths./cards/{idCard}/actions/{idAction}/comments.put.parameters[1].name: idAction
paths./cards/{idCard}/actions/{idAction}/comments.put.parameters[1].required: true
paths./cards/{idCard}/actions/{idAction}/comments.put.parameters[1].type: string
paths./cards/{idCard}/actions/{idAction}/comments.put.parameters[2].description: Attributes
  of "Cards Actions Comments" to be updated.
paths./cards/{idCard}/actions/{idAction}/comments.put.parameters[2].in: body
paths./cards/{idCard}/actions/{idAction}/comments.put.parameters[2].name: body
paths./cards/{idCard}/actions/{idAction}/comments.put.parameters[2].required: true
paths./cards/{idCard}/actions/{idAction}/comments.put.parameters[2].schema.$ref: '#/definitions/cards_actions_comments'
paths./cards/{idCard}/actions/{idAction}/comments.put.parameters[3].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./cards/{idCard}/actions/{idAction}/comments.put.parameters[3].in: query
paths./cards/{idCard}/actions/{idAction}/comments.put.parameters[3].name: key
paths./cards/{idCard}/actions/{idAction}/comments.put.parameters[3].required: true
paths./cards/{idCard}/actions/{idAction}/comments.put.parameters[3].type: string
paths./cards/{idCard}/actions/{idAction}/comments.put.parameters[4].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/actions/{idAction}/comments.put.parameters[4].in: query
paths./cards/{idCard}/actions/{idAction}/comments.put.parameters[4].name: token
paths./cards/{idCard}/actions/{idAction}/comments.put.parameters[4].required: true
paths./cards/{idCard}/actions/{idAction}/comments.put.parameters[4].type: string
paths./cards/{idCard}/actions/{idAction}/comments.put.responses.200.description: Success
paths./cards/{idCard}/actions/{idAction}/comments.put.responses.400.description: Server
  rejection
paths./cards/{idCard}/actions/{idAction}/comments.put.security.length: 2
paths./cards/{idCard}/actions/{idAction}/comments.put.security[0].api_key.length: 0
paths./cards/{idCard}/actions/{idAction}/comments.put.security[1].api_token.length: 0
paths./cards/{idCard}/actions/{idAction}/comments.put.summary: updateCardsActionsCommentsByIdCardByIdAction()
paths./cards/{idCard}/actions/{idAction}/comments.put.tags.length: 1
paths./cards/{idCard}/actions/{idAction}/comments.put.tags[0]: card
paths./cards/{idCard}/actions/comments.post.operationId: addCardsActionsCommentsByIdCard
paths./cards/{idCard}/actions/comments.post.parameters.length: 4
paths./cards/{idCard}/actions/comments.post.parameters[0].description: card id or
  shortlink
paths./cards/{idCard}/actions/comments.post.parameters[0].in: path
paths./cards/{idCard}/actions/comments.post.parameters[0].name: idCard
paths./cards/{idCard}/actions/comments.post.parameters[0].required: true
paths./cards/{idCard}/actions/comments.post.parameters[0].type: string
paths./cards/{idCard}/actions/comments.post.parameters[1].description: Attributes
  of "Actions Comments" to be added.
paths./cards/{idCard}/actions/comments.post.parameters[1].in: body
paths./cards/{idCard}/actions/comments.post.parameters[1].name: body
paths./cards/{idCard}/actions/comments.post.parameters[1].required: true
paths./cards/{idCard}/actions/comments.post.parameters[1].schema.$ref: '#/definitions/actions_comments'
paths./cards/{idCard}/actions/comments.post.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/actions/comments.post.parameters[2].in: query
paths./cards/{idCard}/actions/comments.post.parameters[2].name: key
paths./cards/{idCard}/actions/comments.post.parameters[2].required: true
paths./cards/{idCard}/actions/comments.post.parameters[2].type: string
paths./cards/{idCard}/actions/comments.post.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/actions/comments.post.parameters[3].in: query
paths./cards/{idCard}/actions/comments.post.parameters[3].name: token
paths./cards/{idCard}/actions/comments.post.parameters[3].required: true
paths./cards/{idCard}/actions/comments.post.parameters[3].type: string
paths./cards/{idCard}/actions/comments.post.responses.200.description: Success
paths./cards/{idCard}/actions/comments.post.responses.400.description: Server rejection
paths./cards/{idCard}/actions/comments.post.security.length: 2
paths./cards/{idCard}/actions/comments.post.security[0].api_key.length: 0
paths./cards/{idCard}/actions/comments.post.security[1].api_token.length: 0
paths./cards/{idCard}/actions/comments.post.summary: addCardsActionsCommentsByIdCard()
paths./cards/{idCard}/actions/comments.post.tags.length: 1
paths./cards/{idCard}/actions/comments.post.tags[0]: card
paths./cards/{idCard}/attachments.get.operationId: getCardsAttachmentsByIdCard
paths./cards/{idCard}/attachments.get.parameters.length: 5
paths./cards/{idCard}/attachments.get.parameters[0].description: card id or shortlink
paths./cards/{idCard}/attachments.get.parameters[0].in: path
paths./cards/{idCard}/attachments.get.parameters[0].name: idCard
paths./cards/{idCard}/attachments.get.parameters[0].required: true
paths./cards/{idCard}/attachments.get.parameters[0].type: string
paths./cards/{idCard}/attachments.get.parameters[1].default: all
paths./cards/{idCard}/attachments.get.parameters[1].description: 'all or a comma-separated
  list of: bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews or
  url'
paths./cards/{idCard}/attachments.get.parameters[1].in: query
paths./cards/{idCard}/attachments.get.parameters[1].name: fields
paths./cards/{idCard}/attachments.get.parameters[1].required: false
paths./cards/{idCard}/attachments.get.parameters[1].type: string
paths./cards/{idCard}/attachments.get.parameters[2].description: A boolean value or
  &quot;cover&quot; for only card cover attachments
paths./cards/{idCard}/attachments.get.parameters[2].in: query
paths./cards/{idCard}/attachments.get.parameters[2].name: filter
paths./cards/{idCard}/attachments.get.parameters[2].required: false
paths./cards/{idCard}/attachments.get.parameters[2].type: string
paths./cards/{idCard}/attachments.get.parameters[3].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/attachments.get.parameters[3].in: query
paths./cards/{idCard}/attachments.get.parameters[3].name: key
paths./cards/{idCard}/attachments.get.parameters[3].required: true
paths./cards/{idCard}/attachments.get.parameters[3].type: string
paths./cards/{idCard}/attachments.get.parameters[4].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/attachments.get.parameters[4].in: query
paths./cards/{idCard}/attachments.get.parameters[4].name: token
paths./cards/{idCard}/attachments.get.parameters[4].required: true
paths./cards/{idCard}/attachments.get.parameters[4].type: string
paths./cards/{idCard}/attachments.get.responses.200.description: Success
paths./cards/{idCard}/attachments.get.responses.400.description: Server rejection
paths./cards/{idCard}/attachments.get.security.length: 2
paths./cards/{idCard}/attachments.get.security[0].api_key.length: 0
paths./cards/{idCard}/attachments.get.security[1].api_token.length: 0
paths./cards/{idCard}/attachments.get.summary: getCardsAttachmentsByIdCard()
paths./cards/{idCard}/attachments.get.tags.length: 1
paths./cards/{idCard}/attachments.get.tags[0]: card
paths./cards/{idCard}/attachments.post.operationId: addCardsAttachmentsByIdCard
paths./cards/{idCard}/attachments.post.parameters.length: 4
paths./cards/{idCard}/attachments.post.parameters[0].description: card id or shortlink
paths./cards/{idCard}/attachments.post.parameters[0].in: path
paths./cards/{idCard}/attachments.post.parameters[0].name: idCard
paths./cards/{idCard}/attachments.post.parameters[0].required: true
paths./cards/{idCard}/attachments.post.parameters[0].type: string
paths./cards/{idCard}/attachments.post.parameters[1].description: Attributes of "Cards
  Attachments" to be added.
paths./cards/{idCard}/attachments.post.parameters[1].in: body
paths./cards/{idCard}/attachments.post.parameters[1].name: body
paths./cards/{idCard}/attachments.post.parameters[1].required: true
paths./cards/{idCard}/attachments.post.parameters[1].schema.$ref: '#/definitions/cards_attachments'
paths./cards/{idCard}/attachments.post.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/attachments.post.parameters[2].in: query
paths./cards/{idCard}/attachments.post.parameters[2].name: key
paths./cards/{idCard}/attachments.post.parameters[2].required: true
paths./cards/{idCard}/attachments.post.parameters[2].type: string
paths./cards/{idCard}/attachments.post.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/attachments.post.parameters[3].in: query
paths./cards/{idCard}/attachments.post.parameters[3].name: token
paths./cards/{idCard}/attachments.post.parameters[3].required: true
paths./cards/{idCard}/attachments.post.parameters[3].type: string
paths./cards/{idCard}/attachments.post.responses.200.description: Success
paths./cards/{idCard}/attachments.post.responses.400.description: Server rejection
paths./cards/{idCard}/attachments.post.security.length: 2
paths./cards/{idCard}/attachments.post.security[0].api_key.length: 0
paths./cards/{idCard}/attachments.post.security[1].api_token.length: 0
paths./cards/{idCard}/attachments.post.summary: addCardsAttachmentsByIdCard()
paths./cards/{idCard}/attachments.post.tags.length: 1
paths./cards/{idCard}/attachments.post.tags[0]: card
paths./cards/{idCard}/attachments/{idAttachment}.delete.operationId: deleteCardsAttachmentsByIdCardByIdAttachment
paths./cards/{idCard}/attachments/{idAttachment}.delete.parameters.length: 4
paths./cards/{idCard}/attachments/{idAttachment}.delete.parameters[0].description: card
  id or shortlink
paths./cards/{idCard}/attachments/{idAttachment}.delete.parameters[0].in: path
paths./cards/{idCard}/attachments/{idAttachment}.delete.parameters[0].name: idCard
paths./cards/{idCard}/attachments/{idAttachment}.delete.parameters[0].required: true
paths./cards/{idCard}/attachments/{idAttachment}.delete.parameters[0].type: string
paths./cards/{idCard}/attachments/{idAttachment}.delete.parameters[1].description: idAttachment
paths./cards/{idCard}/attachments/{idAttachment}.delete.parameters[1].in: path
paths./cards/{idCard}/attachments/{idAttachment}.delete.parameters[1].name: idAttachment
paths./cards/{idCard}/attachments/{idAttachment}.delete.parameters[1].required: true
paths./cards/{idCard}/attachments/{idAttachment}.delete.parameters[1].type: string
paths./cards/{idCard}/attachments/{idAttachment}.delete.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./cards/{idCard}/attachments/{idAttachment}.delete.parameters[2].in: query
paths./cards/{idCard}/attachments/{idAttachment}.delete.parameters[2].name: key
paths./cards/{idCard}/attachments/{idAttachment}.delete.parameters[2].required: true
paths./cards/{idCard}/attachments/{idAttachment}.delete.parameters[2].type: string
paths./cards/{idCard}/attachments/{idAttachment}.delete.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/attachments/{idAttachment}.delete.parameters[3].in: query
paths./cards/{idCard}/attachments/{idAttachment}.delete.parameters[3].name: token
paths./cards/{idCard}/attachments/{idAttachment}.delete.parameters[3].required: true
paths./cards/{idCard}/attachments/{idAttachment}.delete.parameters[3].type: string
paths./cards/{idCard}/attachments/{idAttachment}.delete.responses.200.description: Success
paths./cards/{idCard}/attachments/{idAttachment}.delete.responses.400.description: Server
  rejection
paths./cards/{idCard}/attachments/{idAttachment}.delete.security.length: 2
paths./cards/{idCard}/attachments/{idAttachment}.delete.security[0].api_key.length: 0
paths./cards/{idCard}/attachments/{idAttachment}.delete.security[1].api_token.length: 0
paths./cards/{idCard}/attachments/{idAttachment}.delete.summary: deleteCardsAttachmentsByIdCardByIdAttachment()
paths./cards/{idCard}/attachments/{idAttachment}.delete.tags.length: 1
paths./cards/{idCard}/attachments/{idAttachment}.delete.tags[0]: card
paths./cards/{idCard}/attachments/{idAttachment}.get.operationId: getCardsAttachmentsByIdCardByIdAttachment
paths./cards/{idCard}/attachments/{idAttachment}.get.parameters.length: 5
paths./cards/{idCard}/attachments/{idAttachment}.get.parameters[0].description: card
  id or shortlink
paths./cards/{idCard}/attachments/{idAttachment}.get.parameters[0].in: path
paths./cards/{idCard}/attachments/{idAttachment}.get.parameters[0].name: idCard
paths./cards/{idCard}/attachments/{idAttachment}.get.parameters[0].required: true
paths./cards/{idCard}/attachments/{idAttachment}.get.parameters[0].type: string
paths./cards/{idCard}/attachments/{idAttachment}.get.parameters[1].description: idAttachment
paths./cards/{idCard}/attachments/{idAttachment}.get.parameters[1].in: path
paths./cards/{idCard}/attachments/{idAttachment}.get.parameters[1].name: idAttachment
paths./cards/{idCard}/attachments/{idAttachment}.get.parameters[1].required: true
paths./cards/{idCard}/attachments/{idAttachment}.get.parameters[1].type: string
paths./cards/{idCard}/attachments/{idAttachment}.get.parameters[2].default: all
paths./cards/{idCard}/attachments/{idAttachment}.get.parameters[2].description: 'all
  or a comma-separated list of: bytes, date, edgeColor, idMember, isUpload, mimeType,
  name, previews or url'
paths./cards/{idCard}/attachments/{idAttachment}.get.parameters[2].in: query
paths./cards/{idCard}/attachments/{idAttachment}.get.parameters[2].name: fields
paths./cards/{idCard}/attachments/{idAttachment}.get.parameters[2].required: false
paths./cards/{idCard}/attachments/{idAttachment}.get.parameters[2].type: string
paths./cards/{idCard}/attachments/{idAttachment}.get.parameters[3].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./cards/{idCard}/attachments/{idAttachment}.get.parameters[3].in: query
paths./cards/{idCard}/attachments/{idAttachment}.get.parameters[3].name: key
paths./cards/{idCard}/attachments/{idAttachment}.get.parameters[3].required: true
paths./cards/{idCard}/attachments/{idAttachment}.get.parameters[3].type: string
paths./cards/{idCard}/attachments/{idAttachment}.get.parameters[4].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/attachments/{idAttachment}.get.parameters[4].in: query
paths./cards/{idCard}/attachments/{idAttachment}.get.parameters[4].name: token
paths./cards/{idCard}/attachments/{idAttachment}.get.parameters[4].required: true
paths./cards/{idCard}/attachments/{idAttachment}.get.parameters[4].type: string
paths./cards/{idCard}/attachments/{idAttachment}.get.responses.200.description: Success
paths./cards/{idCard}/attachments/{idAttachment}.get.responses.400.description: Server
  rejection
paths./cards/{idCard}/attachments/{idAttachment}.get.security.length: 2
paths./cards/{idCard}/attachments/{idAttachment}.get.security[0].api_key.length: 0
paths./cards/{idCard}/attachments/{idAttachment}.get.security[1].api_token.length: 0
paths./cards/{idCard}/attachments/{idAttachment}.get.summary: getCardsAttachmentsByIdCardByIdAttachment()
paths./cards/{idCard}/attachments/{idAttachment}.get.tags.length: 1
paths./cards/{idCard}/attachments/{idAttachment}.get.tags[0]: card
paths./cards/{idCard}/board.get.operationId: getCardsBoardByIdCard
paths./cards/{idCard}/board.get.parameters.length: 4
paths./cards/{idCard}/board.get.parameters[0].description: card id or shortlink
paths./cards/{idCard}/board.get.parameters[0].in: path
paths./cards/{idCard}/board.get.parameters[0].name: idCard
paths./cards/{idCard}/board.get.parameters[0].required: true
paths./cards/{idCard}/board.get.parameters[0].type: string
paths./cards/{idCard}/board.get.parameters[1].default: all
paths./cards/{idCard}/board.get.parameters[1].description: 'all or a comma-separated
  list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization,
  invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
  shortUrl, starred, subscribed or url'
paths./cards/{idCard}/board.get.parameters[1].in: query
paths./cards/{idCard}/board.get.parameters[1].name: fields
paths./cards/{idCard}/board.get.parameters[1].required: false
paths./cards/{idCard}/board.get.parameters[1].type: string
paths./cards/{idCard}/board.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/board.get.parameters[2].in: query
paths./cards/{idCard}/board.get.parameters[2].name: key
paths./cards/{idCard}/board.get.parameters[2].required: true
paths./cards/{idCard}/board.get.parameters[2].type: string
paths./cards/{idCard}/board.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/board.get.parameters[3].in: query
paths./cards/{idCard}/board.get.parameters[3].name: token
paths./cards/{idCard}/board.get.parameters[3].required: true
paths./cards/{idCard}/board.get.parameters[3].type: string
paths./cards/{idCard}/board.get.responses.200.description: Success
paths./cards/{idCard}/board.get.responses.400.description: Server rejection
paths./cards/{idCard}/board.get.security.length: 2
paths./cards/{idCard}/board.get.security[0].api_key.length: 0
paths./cards/{idCard}/board.get.security[1].api_token.length: 0
paths./cards/{idCard}/board.get.summary: getCardsBoardByIdCard()
paths./cards/{idCard}/board.get.tags.length: 1
paths./cards/{idCard}/board.get.tags[0]: card
paths./cards/{idCard}/board/{field}.get.operationId: getCardsBoardByIdCardByField
paths./cards/{idCard}/board/{field}.get.parameters.length: 4
paths./cards/{idCard}/board/{field}.get.parameters[0].description: card id or shortlink
paths./cards/{idCard}/board/{field}.get.parameters[0].in: path
paths./cards/{idCard}/board/{field}.get.parameters[0].name: idCard
paths./cards/{idCard}/board/{field}.get.parameters[0].required: true
paths./cards/{idCard}/board/{field}.get.parameters[0].type: string
paths./cards/{idCard}/board/{field}.get.parameters[1].description: field
paths./cards/{idCard}/board/{field}.get.parameters[1].in: path
paths./cards/{idCard}/board/{field}.get.parameters[1].name: field
paths./cards/{idCard}/board/{field}.get.parameters[1].required: true
paths./cards/{idCard}/board/{field}.get.parameters[1].type: string
paths./cards/{idCard}/board/{field}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/board/{field}.get.parameters[2].in: query
paths./cards/{idCard}/board/{field}.get.parameters[2].name: key
paths./cards/{idCard}/board/{field}.get.parameters[2].required: true
paths./cards/{idCard}/board/{field}.get.parameters[2].type: string
paths./cards/{idCard}/board/{field}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/board/{field}.get.parameters[3].in: query
paths./cards/{idCard}/board/{field}.get.parameters[3].name: token
paths./cards/{idCard}/board/{field}.get.parameters[3].required: true
paths./cards/{idCard}/board/{field}.get.parameters[3].type: string
paths./cards/{idCard}/board/{field}.get.responses.200.description: Success
paths./cards/{idCard}/board/{field}.get.responses.400.description: Server rejection
paths./cards/{idCard}/board/{field}.get.security.length: 2
paths./cards/{idCard}/board/{field}.get.security[0].api_key.length: 0
paths./cards/{idCard}/board/{field}.get.security[1].api_token.length: 0
paths./cards/{idCard}/board/{field}.get.summary: getCardsBoardByIdCardByField()
paths./cards/{idCard}/board/{field}.get.tags.length: 1
paths./cards/{idCard}/board/{field}.get.tags[0]: card
paths./cards/{idCard}/checkItemStates.get.operationId: getCardsCheckItemStatesByIdCard
paths./cards/{idCard}/checkItemStates.get.parameters.length: 4
paths./cards/{idCard}/checkItemStates.get.parameters[0].description: card id or shortlink
paths./cards/{idCard}/checkItemStates.get.parameters[0].in: path
paths./cards/{idCard}/checkItemStates.get.parameters[0].name: idCard
paths./cards/{idCard}/checkItemStates.get.parameters[0].required: true
paths./cards/{idCard}/checkItemStates.get.parameters[0].type: string
paths./cards/{idCard}/checkItemStates.get.parameters[1].default: all
paths./cards/{idCard}/checkItemStates.get.parameters[1].description: 'all or a comma-separated
  list of: idCheckItem or state'
paths./cards/{idCard}/checkItemStates.get.parameters[1].in: query
paths./cards/{idCard}/checkItemStates.get.parameters[1].name: fields
paths./cards/{idCard}/checkItemStates.get.parameters[1].required: false
paths./cards/{idCard}/checkItemStates.get.parameters[1].type: string
paths./cards/{idCard}/checkItemStates.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/checkItemStates.get.parameters[2].in: query
paths./cards/{idCard}/checkItemStates.get.parameters[2].name: key
paths./cards/{idCard}/checkItemStates.get.parameters[2].required: true
paths./cards/{idCard}/checkItemStates.get.parameters[2].type: string
paths./cards/{idCard}/checkItemStates.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/checkItemStates.get.parameters[3].in: query
paths./cards/{idCard}/checkItemStates.get.parameters[3].name: token
paths./cards/{idCard}/checkItemStates.get.parameters[3].required: true
paths./cards/{idCard}/checkItemStates.get.parameters[3].type: string
paths./cards/{idCard}/checkItemStates.get.responses.200.description: Success
paths./cards/{idCard}/checkItemStates.get.responses.400.description: Server rejection
paths./cards/{idCard}/checkItemStates.get.security.length: 2
paths./cards/{idCard}/checkItemStates.get.security[0].api_key.length: 0
paths./cards/{idCard}/checkItemStates.get.security[1].api_token.length: 0
paths./cards/{idCard}/checkItemStates.get.summary: getCardsCheckItemStatesByIdCard()
paths./cards/{idCard}/checkItemStates.get.tags.length: 1
paths./cards/{idCard}/checkItemStates.get.tags[0]: card
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.operationId: addCardsChecklistCheckItemByIdCardByIdChecklist
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.parameters.length: 5
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.parameters[0].description: card
  id or shortlink
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.parameters[0].in: path
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.parameters[0].name: idCard
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.parameters[0].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.parameters[0].type: string
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.parameters[1].description: idChecklist
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.parameters[1].in: path
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.parameters[1].name: idChecklist
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.parameters[1].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.parameters[1].type: string
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.parameters[2].description: Attributes
  of "Cards Checklist Check Item" to be added.
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.parameters[2].in: body
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.parameters[2].name: body
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.parameters[2].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.parameters[2].schema.$ref: '#/definitions/cards_checklist_checkItem'
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.parameters[3].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.parameters[3].in: query
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.parameters[3].name: key
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.parameters[3].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.parameters[3].type: string
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.parameters[4].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.parameters[4].in: query
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.parameters[4].name: token
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.parameters[4].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.parameters[4].type: string
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.responses.200.description: Success
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.responses.400.description: Server
  rejection
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.security.length: 2
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.security[0].api_key.length: 0
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.security[1].api_token.length: 0
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.summary: addCardsChecklistCheckItemByIdCardByIdChecklist()
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.tags.length: 1
paths./cards/{idCard}/checklist/{idChecklist}/checkItem.post.tags[0]: card
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.operationId: deleteCardsChecklistCheckItemByIdCardByIdChecklistByIdCheckItem
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.parameters.length: 5
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.parameters[0].description: card
  id or shortlink
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.parameters[0].in: path
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.parameters[0].name: idCard
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.parameters[0].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.parameters[0].type: string
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.parameters[1].description: idChecklist
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.parameters[1].in: path
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.parameters[1].name: idChecklist
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.parameters[1].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.parameters[1].type: string
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.parameters[2].description: idCheckItem
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.parameters[2].in: path
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.parameters[2].name: idCheckItem
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.parameters[2].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.parameters[2].type: string
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.parameters[3].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.parameters[3].in: query
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.parameters[3].name: key
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.parameters[3].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.parameters[3].type: string
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.parameters[4].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.parameters[4].in: query
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.parameters[4].name: token
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.parameters[4].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.parameters[4].type: string
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.responses.200.description: Success
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.responses.400.description: Server
  rejection
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.security.length: 2
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.security[0].api_key.length: 0
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.security[1].api_token.length: 0
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.summary: deleteCardsChecklistCheckItemByIdCardByIdChecklistByIdCheckItem()
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.tags.length: 1
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}.delete.tags[0]: card
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.operationId: addCardsChecklistCheckItemConvertToCardByIdCardByIdChecklistByIdCheckItem
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.parameters.length: 5
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.parameters[0].description: card
  id or shortlink
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.parameters[0].in: path
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.parameters[0].name: idCard
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.parameters[0].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.parameters[0].type: string
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.parameters[1].description: idChecklist
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.parameters[1].in: path
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.parameters[1].name: idChecklist
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.parameters[1].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.parameters[1].type: string
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.parameters[2].description: idCheckItem
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.parameters[2].in: path
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.parameters[2].name: idCheckItem
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.parameters[2].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.parameters[2].type: string
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.parameters[3].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.parameters[3].in: query
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.parameters[3].name: key
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.parameters[3].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.parameters[3].type: string
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.parameters[4].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.parameters[4].in: query
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.parameters[4].name: token
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.parameters[4].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.parameters[4].type: string
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.responses.200.description: Success
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.responses.400.description: Server
  rejection
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.security.length: 2
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.security[0].api_key.length: 0
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.security[1].api_token.length: 0
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.summary: addCardsChecklistCheckItemConvertToCardByIdCardByIdChecklistByIdCheckItem()
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.tags.length: 1
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard.post.tags[0]: card
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.operationId: updateCardsChecklistCheckItemNameByIdCardByIdChecklistByIdCheckItem
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.parameters.length: 6
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.parameters[0].description: card
  id or shortlink
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.parameters[0].in: path
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.parameters[0].name: idCard
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.parameters[0].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.parameters[0].type: string
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.parameters[1].description: idChecklist
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.parameters[1].in: path
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.parameters[1].name: idChecklist
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.parameters[1].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.parameters[1].type: string
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.parameters[2].description: idCheckItem
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.parameters[2].in: path
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.parameters[2].name: idCheckItem
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.parameters[2].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.parameters[2].type: string
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.parameters[3].description: Attributes
  of "Cards Checklist Check Item Name" to be updated.
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.parameters[3].in: body
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.parameters[3].name: body
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.parameters[3].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.parameters[3].schema.$ref: '#/definitions/cards_checklist_checkItem_name'
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.parameters[4].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.parameters[4].in: query
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.parameters[4].name: key
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.parameters[4].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.parameters[4].type: string
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.parameters[5].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.parameters[5].in: query
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.parameters[5].name: token
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.parameters[5].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.parameters[5].type: string
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.responses.200.description: Success
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.responses.400.description: Server
  rejection
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.security.length: 2
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.security[0].api_key.length: 0
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.security[1].api_token.length: 0
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.summary: updateCardsChecklistCheckItemNameByIdCardByIdChecklistByIdCheckItem()
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.tags.length: 1
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name.put.tags[0]: card
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.operationId: updateCardsChecklistCheckItemPosByIdCardByIdChecklistByIdCheckItem
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.parameters.length: 6
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.parameters[0].description: card
  id or shortlink
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.parameters[0].in: path
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.parameters[0].name: idCard
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.parameters[0].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.parameters[0].type: string
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.parameters[1].description: idChecklist
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.parameters[1].in: path
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.parameters[1].name: idChecklist
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.parameters[1].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.parameters[1].type: string
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.parameters[2].description: idCheckItem
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.parameters[2].in: path
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.parameters[2].name: idCheckItem
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.parameters[2].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.parameters[2].type: string
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.parameters[3].description: Attributes
  of "Cards Checklist Check Item Pos" to be updated.
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.parameters[3].in: body
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.parameters[3].name: body
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.parameters[3].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.parameters[3].schema.$ref: '#/definitions/cards_checklist_checkItem_pos'
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.parameters[4].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.parameters[4].in: query
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.parameters[4].name: key
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.parameters[4].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.parameters[4].type: string
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.parameters[5].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.parameters[5].in: query
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.parameters[5].name: token
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.parameters[5].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.parameters[5].type: string
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.responses.200.description: Success
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.responses.400.description: Server
  rejection
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.security.length: 2
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.security[0].api_key.length: 0
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.security[1].api_token.length: 0
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.summary: updateCardsChecklistCheckItemPosByIdCardByIdChecklistByIdCheckItem()
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.tags.length: 1
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos.put.tags[0]: card
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.operationId: updateCardsChecklistCheckItemStateByIdCardByIdChecklistByIdCheckItem
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.parameters.length: 6
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.parameters[0].description: card
  id or shortlink
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.parameters[0].in: path
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.parameters[0].name: idCard
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.parameters[0].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.parameters[0].type: string
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.parameters[1].description: idChecklist
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.parameters[1].in: path
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.parameters[1].name: idChecklist
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.parameters[1].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.parameters[1].type: string
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.parameters[2].description: idCheckItem
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.parameters[2].in: path
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.parameters[2].name: idCheckItem
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.parameters[2].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.parameters[2].type: string
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.parameters[3].description: Attributes
  of "Cards Checklist Check Item State" to be updated.
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.parameters[3].in: body
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.parameters[3].name: body
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.parameters[3].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.parameters[3].schema.$ref: '#/definitions/cards_checklist_checkItem_state'
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.parameters[4].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.parameters[4].in: query
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.parameters[4].name: key
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.parameters[4].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.parameters[4].type: string
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.parameters[5].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.parameters[5].in: query
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.parameters[5].name: token
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.parameters[5].required: true
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.parameters[5].type: string
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.responses.200.description: Success
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.responses.400.description: Server
  rejection
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.security.length: 2
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.security[0].api_key.length: 0
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.security[1].api_token.length: 0
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.summary: updateCardsChecklistCheckItemStateByIdCardByIdChecklistByIdCheckItem()
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.tags.length: 1
paths./cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state.put.tags[0]: card
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.operationId: updateCardsChecklistCheckItemByIdCardByIdChecklistCurrentByIdCheckItem
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.parameters.length: 6
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.parameters[0].description: card
  id or shortlink
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.parameters[0].in: path
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.parameters[0].name: idCard
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.parameters[0].required: true
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.parameters[0].type: string
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.parameters[1].description: idChecklistCurrent
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.parameters[1].in: path
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.parameters[1].name: idChecklistCurrent
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.parameters[1].required: true
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.parameters[1].type: string
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.parameters[2].description: idCheckItem
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.parameters[2].in: path
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.parameters[2].name: idCheckItem
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.parameters[2].required: true
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.parameters[2].type: string
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.parameters[3].description: Attributes
  of "Cards Checklist Id Checklist Current Check Item" to be updated.
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.parameters[3].in: body
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.parameters[3].name: body
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.parameters[3].required: true
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.parameters[3].schema.$ref: '#/definitions/cards_checklist_idChecklistCurrent_checkItem'
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.parameters[4].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.parameters[4].in: query
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.parameters[4].name: key
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.parameters[4].required: true
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.parameters[4].type: string
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.parameters[5].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.parameters[5].in: query
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.parameters[5].name: token
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.parameters[5].required: true
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.parameters[5].type: string
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.responses.200.description: Success
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.responses.400.description: Server
  rejection
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.security.length: 2
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.security[0].api_key.length: 0
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.security[1].api_token.length: 0
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.summary: updateCardsChecklistCheckItemByIdCardByIdChecklistCurrentByIdCheckItem()
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.tags.length: 1
paths./cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}.put.tags[0]: card
paths./cards/{idCard}/checklists.get.operationId: getCardsChecklistsByIdCard
paths./cards/{idCard}/checklists.get.parameters.length: 9
paths./cards/{idCard}/checklists.get.parameters[0].description: card id or shortlink
paths./cards/{idCard}/checklists.get.parameters[0].in: path
paths./cards/{idCard}/checklists.get.parameters[0].name: idCard
paths./cards/{idCard}/checklists.get.parameters[0].required: true
paths./cards/{idCard}/checklists.get.parameters[0].type: string
paths./cards/{idCard}/checklists.get.parameters[1].default: none
paths./cards/{idCard}/checklists.get.parameters[1].description: 'One of: all, closed,
  none, open or visible'
paths./cards/{idCard}/checklists.get.parameters[1].in: query
paths./cards/{idCard}/checklists.get.parameters[1].name: cards
paths./cards/{idCard}/checklists.get.parameters[1].required: false
paths./cards/{idCard}/checklists.get.parameters[1].type: string
paths./cards/{idCard}/checklists.get.parameters[2].default: all
paths./cards/{idCard}/checklists.get.parameters[2].description: 'all or a comma-separated
  list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due,
  email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
  idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed
  or url'
paths./cards/{idCard}/checklists.get.parameters[2].in: query
paths./cards/{idCard}/checklists.get.parameters[2].name: card_fields
paths./cards/{idCard}/checklists.get.parameters[2].required: false
paths./cards/{idCard}/checklists.get.parameters[2].type: string
paths./cards/{idCard}/checklists.get.parameters[3].default: all
paths./cards/{idCard}/checklists.get.parameters[3].description: 'One of: all or none'
paths./cards/{idCard}/checklists.get.parameters[3].in: query
paths./cards/{idCard}/checklists.get.parameters[3].name: checkItems
paths./cards/{idCard}/checklists.get.parameters[3].required: false
paths./cards/{idCard}/checklists.get.parameters[3].type: string
paths./cards/{idCard}/checklists.get.parameters[4].default: name, nameData, pos and
  state
paths./cards/{idCard}/checklists.get.parameters[4].description: 'all or a comma-separated
  list of: name, nameData, pos, state or type'
paths./cards/{idCard}/checklists.get.parameters[4].in: query
paths./cards/{idCard}/checklists.get.parameters[4].name: checkItem_fields
paths./cards/{idCard}/checklists.get.parameters[4].required: false
paths./cards/{idCard}/checklists.get.parameters[4].type: string
paths./cards/{idCard}/checklists.get.parameters[5].default: all
paths./cards/{idCard}/checklists.get.parameters[5].description: 'One of: all or none'
paths./cards/{idCard}/checklists.get.parameters[5].in: query
paths./cards/{idCard}/checklists.get.parameters[5].name: filter
paths./cards/{idCard}/checklists.get.parameters[5].required: false
paths./cards/{idCard}/checklists.get.parameters[5].type: string
paths./cards/{idCard}/checklists.get.parameters[6].default: all
paths./cards/{idCard}/checklists.get.parameters[6].description: 'all or a comma-separated
  list of: idBoard, idCard, name or pos'
paths./cards/{idCard}/checklists.get.parameters[6].in: query
paths./cards/{idCard}/checklists.get.parameters[6].name: fields
paths./cards/{idCard}/checklists.get.parameters[6].required: false
paths./cards/{idCard}/checklists.get.parameters[6].type: string
paths./cards/{idCard}/checklists.get.parameters[7].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/checklists.get.parameters[7].in: query
paths./cards/{idCard}/checklists.get.parameters[7].name: key
paths./cards/{idCard}/checklists.get.parameters[7].required: true
paths./cards/{idCard}/checklists.get.parameters[7].type: string
paths./cards/{idCard}/checklists.get.parameters[8].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/checklists.get.parameters[8].in: query
paths./cards/{idCard}/checklists.get.parameters[8].name: token
paths./cards/{idCard}/checklists.get.parameters[8].required: true
paths./cards/{idCard}/checklists.get.parameters[8].type: string
paths./cards/{idCard}/checklists.get.responses.200.description: Success
paths./cards/{idCard}/checklists.get.responses.400.description: Server rejection
paths./cards/{idCard}/checklists.get.security.length: 2
paths./cards/{idCard}/checklists.get.security[0].api_key.length: 0
paths./cards/{idCard}/checklists.get.security[1].api_token.length: 0
paths./cards/{idCard}/checklists.get.summary: getCardsChecklistsByIdCard()
paths./cards/{idCard}/checklists.get.tags.length: 1
paths./cards/{idCard}/checklists.get.tags[0]: card
paths./cards/{idCard}/checklists.post.operationId: addCardsChecklistsByIdCard
paths./cards/{idCard}/checklists.post.parameters.length: 4
paths./cards/{idCard}/checklists.post.parameters[0].description: card id or shortlink
paths./cards/{idCard}/checklists.post.parameters[0].in: path
paths./cards/{idCard}/checklists.post.parameters[0].name: idCard
paths./cards/{idCard}/checklists.post.parameters[0].required: true
paths./cards/{idCard}/checklists.post.parameters[0].type: string
paths./cards/{idCard}/checklists.post.parameters[1].description: Attributes of "Cards
  Checklists" to be added.
paths./cards/{idCard}/checklists.post.parameters[1].in: body
paths./cards/{idCard}/checklists.post.parameters[1].name: body
paths./cards/{idCard}/checklists.post.parameters[1].required: true
paths./cards/{idCard}/checklists.post.parameters[1].schema.$ref: '#/definitions/cards_checklists'
paths./cards/{idCard}/checklists.post.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/checklists.post.parameters[2].in: query
paths./cards/{idCard}/checklists.post.parameters[2].name: key
paths./cards/{idCard}/checklists.post.parameters[2].required: true
paths./cards/{idCard}/checklists.post.parameters[2].type: string
paths./cards/{idCard}/checklists.post.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/checklists.post.parameters[3].in: query
paths./cards/{idCard}/checklists.post.parameters[3].name: token
paths./cards/{idCard}/checklists.post.parameters[3].required: true
paths./cards/{idCard}/checklists.post.parameters[3].type: string
paths./cards/{idCard}/checklists.post.responses.200.description: Success
paths./cards/{idCard}/checklists.post.responses.400.description: Server rejection
paths./cards/{idCard}/checklists.post.security.length: 2
paths./cards/{idCard}/checklists.post.security[0].api_key.length: 0
paths./cards/{idCard}/checklists.post.security[1].api_token.length: 0
paths./cards/{idCard}/checklists.post.summary: addCardsChecklistsByIdCard()
paths./cards/{idCard}/checklists.post.tags.length: 1
paths./cards/{idCard}/checklists.post.tags[0]: card
paths./cards/{idCard}/checklists/{idChecklist}.delete.operationId: deleteCardsChecklistsByIdCardByIdChecklist
paths./cards/{idCard}/checklists/{idChecklist}.delete.parameters.length: 4
paths./cards/{idCard}/checklists/{idChecklist}.delete.parameters[0].description: card
  id or shortlink
paths./cards/{idCard}/checklists/{idChecklist}.delete.parameters[0].in: path
paths./cards/{idCard}/checklists/{idChecklist}.delete.parameters[0].name: idCard
paths./cards/{idCard}/checklists/{idChecklist}.delete.parameters[0].required: true
paths./cards/{idCard}/checklists/{idChecklist}.delete.parameters[0].type: string
paths./cards/{idCard}/checklists/{idChecklist}.delete.parameters[1].description: idChecklist
paths./cards/{idCard}/checklists/{idChecklist}.delete.parameters[1].in: path
paths./cards/{idCard}/checklists/{idChecklist}.delete.parameters[1].name: idChecklist
paths./cards/{idCard}/checklists/{idChecklist}.delete.parameters[1].required: true
paths./cards/{idCard}/checklists/{idChecklist}.delete.parameters[1].type: string
paths./cards/{idCard}/checklists/{idChecklist}.delete.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./cards/{idCard}/checklists/{idChecklist}.delete.parameters[2].in: query
paths./cards/{idCard}/checklists/{idChecklist}.delete.parameters[2].name: key
paths./cards/{idCard}/checklists/{idChecklist}.delete.parameters[2].required: true
paths./cards/{idCard}/checklists/{idChecklist}.delete.parameters[2].type: string
paths./cards/{idCard}/checklists/{idChecklist}.delete.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/checklists/{idChecklist}.delete.parameters[3].in: query
paths./cards/{idCard}/checklists/{idChecklist}.delete.parameters[3].name: token
paths./cards/{idCard}/checklists/{idChecklist}.delete.parameters[3].required: true
paths./cards/{idCard}/checklists/{idChecklist}.delete.parameters[3].type: string
paths./cards/{idCard}/checklists/{idChecklist}.delete.responses.200.description: Success
paths./cards/{idCard}/checklists/{idChecklist}.delete.responses.400.description: Server
  rejection
paths./cards/{idCard}/checklists/{idChecklist}.delete.security.length: 2
paths./cards/{idCard}/checklists/{idChecklist}.delete.security[0].api_key.length: 0
paths./cards/{idCard}/checklists/{idChecklist}.delete.security[1].api_token.length: 0
paths./cards/{idCard}/checklists/{idChecklist}.delete.summary: deleteCardsChecklistsByIdCardByIdChecklist()
paths./cards/{idCard}/checklists/{idChecklist}.delete.tags.length: 1
paths./cards/{idCard}/checklists/{idChecklist}.delete.tags[0]: card
paths./cards/{idCard}/closed.put.operationId: updateCardsClosedByIdCard
paths./cards/{idCard}/closed.put.parameters.length: 4
paths./cards/{idCard}/closed.put.parameters[0].description: card id or shortlink
paths./cards/{idCard}/closed.put.parameters[0].in: path
paths./cards/{idCard}/closed.put.parameters[0].name: idCard
paths./cards/{idCard}/closed.put.parameters[0].required: true
paths./cards/{idCard}/closed.put.parameters[0].type: string
paths./cards/{idCard}/closed.put.parameters[1].description: Attributes of "Cards Closed"
  to be updated.
paths./cards/{idCard}/closed.put.parameters[1].in: body
paths./cards/{idCard}/closed.put.parameters[1].name: body
paths./cards/{idCard}/closed.put.parameters[1].required: true
paths./cards/{idCard}/closed.put.parameters[1].schema.$ref: '#/definitions/cards_closed'
paths./cards/{idCard}/closed.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/closed.put.parameters[2].in: query
paths./cards/{idCard}/closed.put.parameters[2].name: key
paths./cards/{idCard}/closed.put.parameters[2].required: true
paths./cards/{idCard}/closed.put.parameters[2].type: string
paths./cards/{idCard}/closed.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/closed.put.parameters[3].in: query
paths./cards/{idCard}/closed.put.parameters[3].name: token
paths./cards/{idCard}/closed.put.parameters[3].required: true
paths./cards/{idCard}/closed.put.parameters[3].type: string
paths./cards/{idCard}/closed.put.responses.200.description: Success
paths./cards/{idCard}/closed.put.responses.400.description: Server rejection
paths./cards/{idCard}/closed.put.security.length: 2
paths./cards/{idCard}/closed.put.security[0].api_key.length: 0
paths./cards/{idCard}/closed.put.security[1].api_token.length: 0
paths./cards/{idCard}/closed.put.summary: updateCardsClosedByIdCard()
paths./cards/{idCard}/closed.put.tags.length: 1
paths./cards/{idCard}/closed.put.tags[0]: card
paths./cards/{idCard}/desc.put.operationId: updateCardsDescByIdCard
paths./cards/{idCard}/desc.put.parameters.length: 4
paths./cards/{idCard}/desc.put.parameters[0].description: card id or shortlink
paths./cards/{idCard}/desc.put.parameters[0].in: path
paths./cards/{idCard}/desc.put.parameters[0].name: idCard
paths./cards/{idCard}/desc.put.parameters[0].required: true
paths./cards/{idCard}/desc.put.parameters[0].type: string
paths./cards/{idCard}/desc.put.parameters[1].description: Attributes of "Cards Desc"
  to be updated.
paths./cards/{idCard}/desc.put.parameters[1].in: body
paths./cards/{idCard}/desc.put.parameters[1].name: body
paths./cards/{idCard}/desc.put.parameters[1].required: true
paths./cards/{idCard}/desc.put.parameters[1].schema.$ref: '#/definitions/cards_desc'
paths./cards/{idCard}/desc.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/desc.put.parameters[2].in: query
paths./cards/{idCard}/desc.put.parameters[2].name: key
paths./cards/{idCard}/desc.put.parameters[2].required: true
paths./cards/{idCard}/desc.put.parameters[2].type: string
paths./cards/{idCard}/desc.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/desc.put.parameters[3].in: query
paths./cards/{idCard}/desc.put.parameters[3].name: token
paths./cards/{idCard}/desc.put.parameters[3].required: true
paths./cards/{idCard}/desc.put.parameters[3].type: string
paths./cards/{idCard}/desc.put.responses.200.description: Success
paths./cards/{idCard}/desc.put.responses.400.description: Server rejection
paths./cards/{idCard}/desc.put.security.length: 2
paths./cards/{idCard}/desc.put.security[0].api_key.length: 0
paths./cards/{idCard}/desc.put.security[1].api_token.length: 0
paths./cards/{idCard}/desc.put.summary: updateCardsDescByIdCard()
paths./cards/{idCard}/desc.put.tags.length: 1
paths./cards/{idCard}/desc.put.tags[0]: card
paths./cards/{idCard}/due.put.operationId: updateCardsDueByIdCard
paths./cards/{idCard}/due.put.parameters.length: 4
paths./cards/{idCard}/due.put.parameters[0].description: card id or shortlink
paths./cards/{idCard}/due.put.parameters[0].in: path
paths./cards/{idCard}/due.put.parameters[0].name: idCard
paths./cards/{idCard}/due.put.parameters[0].required: true
paths./cards/{idCard}/due.put.parameters[0].type: string
paths./cards/{idCard}/due.put.parameters[1].description: Attributes of "Cards Due"
  to be updated.
paths./cards/{idCard}/due.put.parameters[1].in: body
paths./cards/{idCard}/due.put.parameters[1].name: body
paths./cards/{idCard}/due.put.parameters[1].required: true
paths./cards/{idCard}/due.put.parameters[1].schema.$ref: '#/definitions/cards_due'
paths./cards/{idCard}/due.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/due.put.parameters[2].in: query
paths./cards/{idCard}/due.put.parameters[2].name: key
paths./cards/{idCard}/due.put.parameters[2].required: true
paths./cards/{idCard}/due.put.parameters[2].type: string
paths./cards/{idCard}/due.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/due.put.parameters[3].in: query
paths./cards/{idCard}/due.put.parameters[3].name: token
paths./cards/{idCard}/due.put.parameters[3].required: true
paths./cards/{idCard}/due.put.parameters[3].type: string
paths./cards/{idCard}/due.put.responses.200.description: Success
paths./cards/{idCard}/due.put.responses.400.description: Server rejection
paths./cards/{idCard}/due.put.security.length: 2
paths./cards/{idCard}/due.put.security[0].api_key.length: 0
paths./cards/{idCard}/due.put.security[1].api_token.length: 0
paths./cards/{idCard}/due.put.summary: updateCardsDueByIdCard()
paths./cards/{idCard}/due.put.tags.length: 1
paths./cards/{idCard}/due.put.tags[0]: card
paths./cards/{idCard}/idAttachmentCover.put.operationId: updateCardsIdAttachmentCoverByIdCard
paths./cards/{idCard}/idAttachmentCover.put.parameters.length: 4
paths./cards/{idCard}/idAttachmentCover.put.parameters[0].description: card id or
  shortlink
paths./cards/{idCard}/idAttachmentCover.put.parameters[0].in: path
paths./cards/{idCard}/idAttachmentCover.put.parameters[0].name: idCard
paths./cards/{idCard}/idAttachmentCover.put.parameters[0].required: true
paths./cards/{idCard}/idAttachmentCover.put.parameters[0].type: string
paths./cards/{idCard}/idAttachmentCover.put.parameters[1].description: Attributes
  of "Cards Id Attachment Cover" to be updated.
paths./cards/{idCard}/idAttachmentCover.put.parameters[1].in: body
paths./cards/{idCard}/idAttachmentCover.put.parameters[1].name: body
paths./cards/{idCard}/idAttachmentCover.put.parameters[1].required: true
paths./cards/{idCard}/idAttachmentCover.put.parameters[1].schema.$ref: '#/definitions/cards_idAttachmentCover'
paths./cards/{idCard}/idAttachmentCover.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/idAttachmentCover.put.parameters[2].in: query
paths./cards/{idCard}/idAttachmentCover.put.parameters[2].name: key
paths./cards/{idCard}/idAttachmentCover.put.parameters[2].required: true
paths./cards/{idCard}/idAttachmentCover.put.parameters[2].type: string
paths./cards/{idCard}/idAttachmentCover.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/idAttachmentCover.put.parameters[3].in: query
paths./cards/{idCard}/idAttachmentCover.put.parameters[3].name: token
paths./cards/{idCard}/idAttachmentCover.put.parameters[3].required: true
paths./cards/{idCard}/idAttachmentCover.put.parameters[3].type: string
paths./cards/{idCard}/idAttachmentCover.put.responses.200.description: Success
paths./cards/{idCard}/idAttachmentCover.put.responses.400.description: Server rejection
paths./cards/{idCard}/idAttachmentCover.put.security.length: 2
paths./cards/{idCard}/idAttachmentCover.put.security[0].api_key.length: 0
paths./cards/{idCard}/idAttachmentCover.put.security[1].api_token.length: 0
paths./cards/{idCard}/idAttachmentCover.put.summary: updateCardsIdAttachmentCoverByIdCard()
paths./cards/{idCard}/idAttachmentCover.put.tags.length: 1
paths./cards/{idCard}/idAttachmentCover.put.tags[0]: card
paths./cards/{idCard}/idBoard.put.operationId: updateCardsIdBoardByIdCard
paths./cards/{idCard}/idBoard.put.parameters.length: 4
paths./cards/{idCard}/idBoard.put.parameters[0].description: card id or shortlink
paths./cards/{idCard}/idBoard.put.parameters[0].in: path
paths./cards/{idCard}/idBoard.put.parameters[0].name: idCard
paths./cards/{idCard}/idBoard.put.parameters[0].required: true
paths./cards/{idCard}/idBoard.put.parameters[0].type: string
paths./cards/{idCard}/idBoard.put.parameters[1].description: Attributes of "Cards
  Id Board" to be updated.
paths./cards/{idCard}/idBoard.put.parameters[1].in: body
paths./cards/{idCard}/idBoard.put.parameters[1].name: body
paths./cards/{idCard}/idBoard.put.parameters[1].required: true
paths./cards/{idCard}/idBoard.put.parameters[1].schema.$ref: '#/definitions/cards_idBoard'
paths./cards/{idCard}/idBoard.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/idBoard.put.parameters[2].in: query
paths./cards/{idCard}/idBoard.put.parameters[2].name: key
paths./cards/{idCard}/idBoard.put.parameters[2].required: true
paths./cards/{idCard}/idBoard.put.parameters[2].type: string
paths./cards/{idCard}/idBoard.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/idBoard.put.parameters[3].in: query
paths./cards/{idCard}/idBoard.put.parameters[3].name: token
paths./cards/{idCard}/idBoard.put.parameters[3].required: true
paths./cards/{idCard}/idBoard.put.parameters[3].type: string
paths./cards/{idCard}/idBoard.put.responses.200.description: Success
paths./cards/{idCard}/idBoard.put.responses.400.description: Server rejection
paths./cards/{idCard}/idBoard.put.security.length: 2
paths./cards/{idCard}/idBoard.put.security[0].api_key.length: 0
paths./cards/{idCard}/idBoard.put.security[1].api_token.length: 0
paths./cards/{idCard}/idBoard.put.summary: updateCardsIdBoardByIdCard()
paths./cards/{idCard}/idBoard.put.tags.length: 1
paths./cards/{idCard}/idBoard.put.tags[0]: card
paths./cards/{idCard}/idLabels.post.operationId: addCardsIdLabelsByIdCard
paths./cards/{idCard}/idLabels.post.parameters.length: 4
paths./cards/{idCard}/idLabels.post.parameters[0].description: card id or shortlink
paths./cards/{idCard}/idLabels.post.parameters[0].in: path
paths./cards/{idCard}/idLabels.post.parameters[0].name: idCard
paths./cards/{idCard}/idLabels.post.parameters[0].required: true
paths./cards/{idCard}/idLabels.post.parameters[0].type: string
paths./cards/{idCard}/idLabels.post.parameters[1].description: Attributes of "Cards
  Id Labels" to be added.
paths./cards/{idCard}/idLabels.post.parameters[1].in: body
paths./cards/{idCard}/idLabels.post.parameters[1].name: body
paths./cards/{idCard}/idLabels.post.parameters[1].required: true
paths./cards/{idCard}/idLabels.post.parameters[1].schema.$ref: '#/definitions/cards_idLabels'
paths./cards/{idCard}/idLabels.post.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/idLabels.post.parameters[2].in: query
paths./cards/{idCard}/idLabels.post.parameters[2].name: key
paths./cards/{idCard}/idLabels.post.parameters[2].required: true
paths./cards/{idCard}/idLabels.post.parameters[2].type: string
paths./cards/{idCard}/idLabels.post.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/idLabels.post.parameters[3].in: query
paths./cards/{idCard}/idLabels.post.parameters[3].name: token
paths./cards/{idCard}/idLabels.post.parameters[3].required: true
paths./cards/{idCard}/idLabels.post.parameters[3].type: string
paths./cards/{idCard}/idLabels.post.responses.200.description: Success
paths./cards/{idCard}/idLabels.post.responses.400.description: Server rejection
paths./cards/{idCard}/idLabels.post.security.length: 2
paths./cards/{idCard}/idLabels.post.security[0].api_key.length: 0
paths./cards/{idCard}/idLabels.post.security[1].api_token.length: 0
paths./cards/{idCard}/idLabels.post.summary: addCardsIdLabelsByIdCard()
paths./cards/{idCard}/idLabels.post.tags.length: 1
paths./cards/{idCard}/idLabels.post.tags[0]: card
paths./cards/{idCard}/idLabels/{idLabel}.delete.operationId: deleteCardsIdLabelsByIdCardByIdLabel
paths./cards/{idCard}/idLabels/{idLabel}.delete.parameters.length: 4
paths./cards/{idCard}/idLabels/{idLabel}.delete.parameters[0].description: card id
  or shortlink
paths./cards/{idCard}/idLabels/{idLabel}.delete.parameters[0].in: path
paths./cards/{idCard}/idLabels/{idLabel}.delete.parameters[0].name: idCard
paths./cards/{idCard}/idLabels/{idLabel}.delete.parameters[0].required: true
paths./cards/{idCard}/idLabels/{idLabel}.delete.parameters[0].type: string
paths./cards/{idCard}/idLabels/{idLabel}.delete.parameters[1].description: idLabel
paths./cards/{idCard}/idLabels/{idLabel}.delete.parameters[1].in: path
paths./cards/{idCard}/idLabels/{idLabel}.delete.parameters[1].name: idLabel
paths./cards/{idCard}/idLabels/{idLabel}.delete.parameters[1].required: true
paths./cards/{idCard}/idLabels/{idLabel}.delete.parameters[1].type: string
paths./cards/{idCard}/idLabels/{idLabel}.delete.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/idLabels/{idLabel}.delete.parameters[2].in: query
paths./cards/{idCard}/idLabels/{idLabel}.delete.parameters[2].name: key
paths./cards/{idCard}/idLabels/{idLabel}.delete.parameters[2].required: true
paths./cards/{idCard}/idLabels/{idLabel}.delete.parameters[2].type: string
paths./cards/{idCard}/idLabels/{idLabel}.delete.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/idLabels/{idLabel}.delete.parameters[3].in: query
paths./cards/{idCard}/idLabels/{idLabel}.delete.parameters[3].name: token
paths./cards/{idCard}/idLabels/{idLabel}.delete.parameters[3].required: true
paths./cards/{idCard}/idLabels/{idLabel}.delete.parameters[3].type: string
paths./cards/{idCard}/idLabels/{idLabel}.delete.responses.200.description: Success
paths./cards/{idCard}/idLabels/{idLabel}.delete.responses.400.description: Server
  rejection
paths./cards/{idCard}/idLabels/{idLabel}.delete.security.length: 2
paths./cards/{idCard}/idLabels/{idLabel}.delete.security[0].api_key.length: 0
paths./cards/{idCard}/idLabels/{idLabel}.delete.security[1].api_token.length: 0
paths./cards/{idCard}/idLabels/{idLabel}.delete.summary: deleteCardsIdLabelsByIdCardByIdLabel()
paths./cards/{idCard}/idLabels/{idLabel}.delete.tags.length: 1
paths./cards/{idCard}/idLabels/{idLabel}.delete.tags[0]: card
paths./cards/{idCard}/idList.put.operationId: updateCardsIdListByIdCard
paths./cards/{idCard}/idList.put.parameters.length: 4
paths./cards/{idCard}/idList.put.parameters[0].description: card id or shortlink
paths./cards/{idCard}/idList.put.parameters[0].in: path
paths./cards/{idCard}/idList.put.parameters[0].name: idCard
paths./cards/{idCard}/idList.put.parameters[0].required: true
paths./cards/{idCard}/idList.put.parameters[0].type: string
paths./cards/{idCard}/idList.put.parameters[1].description: Attributes of "Cards Id
  List" to be updated.
paths./cards/{idCard}/idList.put.parameters[1].in: body
paths./cards/{idCard}/idList.put.parameters[1].name: body
paths./cards/{idCard}/idList.put.parameters[1].required: true
paths./cards/{idCard}/idList.put.parameters[1].schema.$ref: '#/definitions/cards_idList'
paths./cards/{idCard}/idList.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/idList.put.parameters[2].in: query
paths./cards/{idCard}/idList.put.parameters[2].name: key
paths./cards/{idCard}/idList.put.parameters[2].required: true
paths./cards/{idCard}/idList.put.parameters[2].type: string
paths./cards/{idCard}/idList.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/idList.put.parameters[3].in: query
paths./cards/{idCard}/idList.put.parameters[3].name: token
paths./cards/{idCard}/idList.put.parameters[3].required: true
paths./cards/{idCard}/idList.put.parameters[3].type: string
paths./cards/{idCard}/idList.put.responses.200.description: Success
paths./cards/{idCard}/idList.put.responses.400.description: Server rejection
paths./cards/{idCard}/idList.put.security.length: 2
paths./cards/{idCard}/idList.put.security[0].api_key.length: 0
paths./cards/{idCard}/idList.put.security[1].api_token.length: 0
paths./cards/{idCard}/idList.put.summary: updateCardsIdListByIdCard()
paths./cards/{idCard}/idList.put.tags.length: 1
paths./cards/{idCard}/idList.put.tags[0]: card
paths./cards/{idCard}/idMembers.post.operationId: addCardsIdMembersByIdCard
paths./cards/{idCard}/idMembers.post.parameters.length: 4
paths./cards/{idCard}/idMembers.post.parameters[0].description: card id or shortlink
paths./cards/{idCard}/idMembers.post.parameters[0].in: path
paths./cards/{idCard}/idMembers.post.parameters[0].name: idCard
paths./cards/{idCard}/idMembers.post.parameters[0].required: true
paths./cards/{idCard}/idMembers.post.parameters[0].type: string
paths./cards/{idCard}/idMembers.post.parameters[1].description: Attributes of "Cards
  Id Members" to be added.
paths./cards/{idCard}/idMembers.post.parameters[1].in: body
paths./cards/{idCard}/idMembers.post.parameters[1].name: body
paths./cards/{idCard}/idMembers.post.parameters[1].required: true
paths./cards/{idCard}/idMembers.post.parameters[1].schema.$ref: '#/definitions/cards_idMembers'
paths./cards/{idCard}/idMembers.post.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/idMembers.post.parameters[2].in: query
paths./cards/{idCard}/idMembers.post.parameters[2].name: key
paths./cards/{idCard}/idMembers.post.parameters[2].required: true
paths./cards/{idCard}/idMembers.post.parameters[2].type: string
paths./cards/{idCard}/idMembers.post.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/idMembers.post.parameters[3].in: query
paths./cards/{idCard}/idMembers.post.parameters[3].name: token
paths./cards/{idCard}/idMembers.post.parameters[3].required: true
paths./cards/{idCard}/idMembers.post.parameters[3].type: string
paths./cards/{idCard}/idMembers.post.responses.200.description: Success
paths./cards/{idCard}/idMembers.post.responses.400.description: Server rejection
paths./cards/{idCard}/idMembers.post.security.length: 2
paths./cards/{idCard}/idMembers.post.security[0].api_key.length: 0
paths./cards/{idCard}/idMembers.post.security[1].api_token.length: 0
paths./cards/{idCard}/idMembers.post.summary: addCardsIdMembersByIdCard()
paths./cards/{idCard}/idMembers.post.tags.length: 1
paths./cards/{idCard}/idMembers.post.tags[0]: card
paths./cards/{idCard}/idMembers.put.operationId: updateCardsIdMembersByIdCard
paths./cards/{idCard}/idMembers.put.parameters.length: 4
paths./cards/{idCard}/idMembers.put.parameters[0].description: card id or shortlink
paths./cards/{idCard}/idMembers.put.parameters[0].in: path
paths./cards/{idCard}/idMembers.put.parameters[0].name: idCard
paths./cards/{idCard}/idMembers.put.parameters[0].required: true
paths./cards/{idCard}/idMembers.put.parameters[0].type: string
paths./cards/{idCard}/idMembers.put.parameters[1].description: Attributes of "Cards
  Id Members" to be updated.
paths./cards/{idCard}/idMembers.put.parameters[1].in: body
paths./cards/{idCard}/idMembers.put.parameters[1].name: body
paths./cards/{idCard}/idMembers.put.parameters[1].required: true
paths./cards/{idCard}/idMembers.put.parameters[1].schema.$ref: '#/definitions/cards_idMembers'
paths./cards/{idCard}/idMembers.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/idMembers.put.parameters[2].in: query
paths./cards/{idCard}/idMembers.put.parameters[2].name: key
paths./cards/{idCard}/idMembers.put.parameters[2].required: true
paths./cards/{idCard}/idMembers.put.parameters[2].type: string
paths./cards/{idCard}/idMembers.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/idMembers.put.parameters[3].in: query
paths./cards/{idCard}/idMembers.put.parameters[3].name: token
paths./cards/{idCard}/idMembers.put.parameters[3].required: true
paths./cards/{idCard}/idMembers.put.parameters[3].type: string
paths./cards/{idCard}/idMembers.put.responses.200.description: Success
paths./cards/{idCard}/idMembers.put.responses.400.description: Server rejection
paths./cards/{idCard}/idMembers.put.security.length: 2
paths./cards/{idCard}/idMembers.put.security[0].api_key.length: 0
paths./cards/{idCard}/idMembers.put.security[1].api_token.length: 0
paths./cards/{idCard}/idMembers.put.summary: updateCardsIdMembersByIdCard()
paths./cards/{idCard}/idMembers.put.tags.length: 1
paths./cards/{idCard}/idMembers.put.tags[0]: card
paths./cards/{idCard}/idMembers/{idMember}.delete.operationId: deleteCardsIdMembersByIdCardByIdMember
paths./cards/{idCard}/idMembers/{idMember}.delete.parameters.length: 4
paths./cards/{idCard}/idMembers/{idMember}.delete.parameters[0].description: card
  id or shortlink
paths./cards/{idCard}/idMembers/{idMember}.delete.parameters[0].in: path
paths./cards/{idCard}/idMembers/{idMember}.delete.parameters[0].name: idCard
paths./cards/{idCard}/idMembers/{idMember}.delete.parameters[0].required: true
paths./cards/{idCard}/idMembers/{idMember}.delete.parameters[0].type: string
paths./cards/{idCard}/idMembers/{idMember}.delete.parameters[1].description: idMember
paths./cards/{idCard}/idMembers/{idMember}.delete.parameters[1].in: path
paths./cards/{idCard}/idMembers/{idMember}.delete.parameters[1].name: idMember
paths./cards/{idCard}/idMembers/{idMember}.delete.parameters[1].required: true
paths./cards/{idCard}/idMembers/{idMember}.delete.parameters[1].type: string
paths./cards/{idCard}/idMembers/{idMember}.delete.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/idMembers/{idMember}.delete.parameters[2].in: query
paths./cards/{idCard}/idMembers/{idMember}.delete.parameters[2].name: key
paths./cards/{idCard}/idMembers/{idMember}.delete.parameters[2].required: true
paths./cards/{idCard}/idMembers/{idMember}.delete.parameters[2].type: string
paths./cards/{idCard}/idMembers/{idMember}.delete.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/idMembers/{idMember}.delete.parameters[3].in: query
paths./cards/{idCard}/idMembers/{idMember}.delete.parameters[3].name: token
paths./cards/{idCard}/idMembers/{idMember}.delete.parameters[3].required: true
paths./cards/{idCard}/idMembers/{idMember}.delete.parameters[3].type: string
paths./cards/{idCard}/idMembers/{idMember}.delete.responses.200.description: Success
paths./cards/{idCard}/idMembers/{idMember}.delete.responses.400.description: Server
  rejection
paths./cards/{idCard}/idMembers/{idMember}.delete.security.length: 2
paths./cards/{idCard}/idMembers/{idMember}.delete.security[0].api_key.length: 0
paths./cards/{idCard}/idMembers/{idMember}.delete.security[1].api_token.length: 0
paths./cards/{idCard}/idMembers/{idMember}.delete.summary: deleteCardsIdMembersByIdCardByIdMember()
paths./cards/{idCard}/idMembers/{idMember}.delete.tags.length: 1
paths./cards/{idCard}/idMembers/{idMember}.delete.tags[0]: card
paths./cards/{idCard}/labels.post.operationId: addCardsLabelsByIdCard
paths./cards/{idCard}/labels.post.parameters.length: 4
paths./cards/{idCard}/labels.post.parameters[0].description: card id or shortlink
paths./cards/{idCard}/labels.post.parameters[0].in: path
paths./cards/{idCard}/labels.post.parameters[0].name: idCard
paths./cards/{idCard}/labels.post.parameters[0].required: true
paths./cards/{idCard}/labels.post.parameters[0].type: string
paths./cards/{idCard}/labels.post.parameters[1].description: Attributes of "Cards
  Labels" to be added.
paths./cards/{idCard}/labels.post.parameters[1].in: body
paths./cards/{idCard}/labels.post.parameters[1].name: body
paths./cards/{idCard}/labels.post.parameters[1].required: true
paths./cards/{idCard}/labels.post.parameters[1].schema.$ref: '#/definitions/cards_labels'
paths./cards/{idCard}/labels.post.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/labels.post.parameters[2].in: query
paths./cards/{idCard}/labels.post.parameters[2].name: key
paths./cards/{idCard}/labels.post.parameters[2].required: true
paths./cards/{idCard}/labels.post.parameters[2].type: string
paths./cards/{idCard}/labels.post.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/labels.post.parameters[3].in: query
paths./cards/{idCard}/labels.post.parameters[3].name: token
paths./cards/{idCard}/labels.post.parameters[3].required: true
paths./cards/{idCard}/labels.post.parameters[3].type: string
paths./cards/{idCard}/labels.post.responses.200.description: Success
paths./cards/{idCard}/labels.post.responses.400.description: Server rejection
paths./cards/{idCard}/labels.post.security.length: 2
paths./cards/{idCard}/labels.post.security[0].api_key.length: 0
paths./cards/{idCard}/labels.post.security[1].api_token.length: 0
paths./cards/{idCard}/labels.post.summary: addCardsLabelsByIdCard()
paths./cards/{idCard}/labels.post.tags.length: 1
paths./cards/{idCard}/labels.post.tags[0]: card
paths./cards/{idCard}/labels.put.operationId: updateCardsLabelsByIdCard
paths./cards/{idCard}/labels.put.parameters.length: 4
paths./cards/{idCard}/labels.put.parameters[0].description: card id or shortlink
paths./cards/{idCard}/labels.put.parameters[0].in: path
paths./cards/{idCard}/labels.put.parameters[0].name: idCard
paths./cards/{idCard}/labels.put.parameters[0].required: true
paths./cards/{idCard}/labels.put.parameters[0].type: string
paths./cards/{idCard}/labels.put.parameters[1].description: Attributes of "Cards Labels"
  to be updated.
paths./cards/{idCard}/labels.put.parameters[1].in: body
paths./cards/{idCard}/labels.put.parameters[1].name: body
paths./cards/{idCard}/labels.put.parameters[1].required: true
paths./cards/{idCard}/labels.put.parameters[1].schema.$ref: '#/definitions/cards_labels'
paths./cards/{idCard}/labels.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/labels.put.parameters[2].in: query
paths./cards/{idCard}/labels.put.parameters[2].name: key
paths./cards/{idCard}/labels.put.parameters[2].required: true
paths./cards/{idCard}/labels.put.parameters[2].type: string
paths./cards/{idCard}/labels.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/labels.put.parameters[3].in: query
paths./cards/{idCard}/labels.put.parameters[3].name: token
paths./cards/{idCard}/labels.put.parameters[3].required: true
paths./cards/{idCard}/labels.put.parameters[3].type: string
paths./cards/{idCard}/labels.put.responses.200.description: Success
paths./cards/{idCard}/labels.put.responses.400.description: Server rejection
paths./cards/{idCard}/labels.put.security.length: 2
paths./cards/{idCard}/labels.put.security[0].api_key.length: 0
paths./cards/{idCard}/labels.put.security[1].api_token.length: 0
paths./cards/{idCard}/labels.put.summary: updateCardsLabelsByIdCard()
paths./cards/{idCard}/labels.put.tags.length: 1
paths./cards/{idCard}/labels.put.tags[0]: card
paths./cards/{idCard}/labels/{color}.delete.operationId: deleteCardsLabelsByIdCardByColor
paths./cards/{idCard}/labels/{color}.delete.parameters.length: 4
paths./cards/{idCard}/labels/{color}.delete.parameters[0].description: card id or
  shortlink
paths./cards/{idCard}/labels/{color}.delete.parameters[0].in: path
paths./cards/{idCard}/labels/{color}.delete.parameters[0].name: idCard
paths./cards/{idCard}/labels/{color}.delete.parameters[0].required: true
paths./cards/{idCard}/labels/{color}.delete.parameters[0].type: string
paths./cards/{idCard}/labels/{color}.delete.parameters[1].description: color
paths./cards/{idCard}/labels/{color}.delete.parameters[1].in: path
paths./cards/{idCard}/labels/{color}.delete.parameters[1].name: color
paths./cards/{idCard}/labels/{color}.delete.parameters[1].required: true
paths./cards/{idCard}/labels/{color}.delete.parameters[1].type: string
paths./cards/{idCard}/labels/{color}.delete.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/labels/{color}.delete.parameters[2].in: query
paths./cards/{idCard}/labels/{color}.delete.parameters[2].name: key
paths./cards/{idCard}/labels/{color}.delete.parameters[2].required: true
paths./cards/{idCard}/labels/{color}.delete.parameters[2].type: string
paths./cards/{idCard}/labels/{color}.delete.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/labels/{color}.delete.parameters[3].in: query
paths./cards/{idCard}/labels/{color}.delete.parameters[3].name: token
paths./cards/{idCard}/labels/{color}.delete.parameters[3].required: true
paths./cards/{idCard}/labels/{color}.delete.parameters[3].type: string
paths./cards/{idCard}/labels/{color}.delete.responses.200.description: Success
paths./cards/{idCard}/labels/{color}.delete.responses.400.description: Server rejection
paths./cards/{idCard}/labels/{color}.delete.security.length: 2
paths./cards/{idCard}/labels/{color}.delete.security[0].api_key.length: 0
paths./cards/{idCard}/labels/{color}.delete.security[1].api_token.length: 0
paths./cards/{idCard}/labels/{color}.delete.summary: deleteCardsLabelsByIdCardByColor()
paths./cards/{idCard}/labels/{color}.delete.tags.length: 1
paths./cards/{idCard}/labels/{color}.delete.tags[0]: card
paths./cards/{idCard}/list.get.operationId: getCardsListByIdCard
paths./cards/{idCard}/list.get.parameters.length: 4
paths./cards/{idCard}/list.get.parameters[0].description: card id or shortlink
paths./cards/{idCard}/list.get.parameters[0].in: path
paths./cards/{idCard}/list.get.parameters[0].name: idCard
paths./cards/{idCard}/list.get.parameters[0].required: true
paths./cards/{idCard}/list.get.parameters[0].type: string
paths./cards/{idCard}/list.get.parameters[1].default: all
paths./cards/{idCard}/list.get.parameters[1].description: 'all or a comma-separated
  list of: closed, idBoard, name, pos or subscribed'
paths./cards/{idCard}/list.get.parameters[1].in: query
paths./cards/{idCard}/list.get.parameters[1].name: fields
paths./cards/{idCard}/list.get.parameters[1].required: false
paths./cards/{idCard}/list.get.parameters[1].type: string
paths./cards/{idCard}/list.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/list.get.parameters[2].in: query
paths./cards/{idCard}/list.get.parameters[2].name: key
paths./cards/{idCard}/list.get.parameters[2].required: true
paths./cards/{idCard}/list.get.parameters[2].type: string
paths./cards/{idCard}/list.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/list.get.parameters[3].in: query
paths./cards/{idCard}/list.get.parameters[3].name: token
paths./cards/{idCard}/list.get.parameters[3].required: true
paths./cards/{idCard}/list.get.parameters[3].type: string
paths./cards/{idCard}/list.get.responses.200.description: Success
paths./cards/{idCard}/list.get.responses.400.description: Server rejection
paths./cards/{idCard}/list.get.security.length: 2
paths./cards/{idCard}/list.get.security[0].api_key.length: 0
paths./cards/{idCard}/list.get.security[1].api_token.length: 0
paths./cards/{idCard}/list.get.summary: getCardsListByIdCard()
paths./cards/{idCard}/list.get.tags.length: 1
paths./cards/{idCard}/list.get.tags[0]: card
paths./cards/{idCard}/list/{field}.get.operationId: getCardsListByIdCardByField
paths./cards/{idCard}/list/{field}.get.parameters.length: 4
paths./cards/{idCard}/list/{field}.get.parameters[0].description: card id or shortlink
paths./cards/{idCard}/list/{field}.get.parameters[0].in: path
paths./cards/{idCard}/list/{field}.get.parameters[0].name: idCard
paths./cards/{idCard}/list/{field}.get.parameters[0].required: true
paths./cards/{idCard}/list/{field}.get.parameters[0].type: string
paths./cards/{idCard}/list/{field}.get.parameters[1].description: field
paths./cards/{idCard}/list/{field}.get.parameters[1].in: path
paths./cards/{idCard}/list/{field}.get.parameters[1].name: field
paths./cards/{idCard}/list/{field}.get.parameters[1].required: true
paths./cards/{idCard}/list/{field}.get.parameters[1].type: string
paths./cards/{idCard}/list/{field}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/list/{field}.get.parameters[2].in: query
paths./cards/{idCard}/list/{field}.get.parameters[2].name: key
paths./cards/{idCard}/list/{field}.get.parameters[2].required: true
paths./cards/{idCard}/list/{field}.get.parameters[2].type: string
paths./cards/{idCard}/list/{field}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/list/{field}.get.parameters[3].in: query
paths./cards/{idCard}/list/{field}.get.parameters[3].name: token
paths./cards/{idCard}/list/{field}.get.parameters[3].required: true
paths./cards/{idCard}/list/{field}.get.parameters[3].type: string
paths./cards/{idCard}/list/{field}.get.responses.200.description: Success
paths./cards/{idCard}/list/{field}.get.responses.400.description: Server rejection
paths./cards/{idCard}/list/{field}.get.security.length: 2
paths./cards/{idCard}/list/{field}.get.security[0].api_key.length: 0
paths./cards/{idCard}/list/{field}.get.security[1].api_token.length: 0
paths./cards/{idCard}/list/{field}.get.summary: getCardsListByIdCardByField()
paths./cards/{idCard}/list/{field}.get.tags.length: 1
paths./cards/{idCard}/list/{field}.get.tags[0]: card
paths./cards/{idCard}/markAssociatedNotificationsRead.post.operationId: addCardsMarkAssociatedNotificationsReadByIdCard
paths./cards/{idCard}/markAssociatedNotificationsRead.post.parameters.length: 3
paths./cards/{idCard}/markAssociatedNotificationsRead.post.parameters[0].description: card
  id or shortlink
paths./cards/{idCard}/markAssociatedNotificationsRead.post.parameters[0].in: path
paths./cards/{idCard}/markAssociatedNotificationsRead.post.parameters[0].name: idCard
paths./cards/{idCard}/markAssociatedNotificationsRead.post.parameters[0].required: true
paths./cards/{idCard}/markAssociatedNotificationsRead.post.parameters[0].type: string
paths./cards/{idCard}/markAssociatedNotificationsRead.post.parameters[1].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./cards/{idCard}/markAssociatedNotificationsRead.post.parameters[1].in: query
paths./cards/{idCard}/markAssociatedNotificationsRead.post.parameters[1].name: key
paths./cards/{idCard}/markAssociatedNotificationsRead.post.parameters[1].required: true
paths./cards/{idCard}/markAssociatedNotificationsRead.post.parameters[1].type: string
paths./cards/{idCard}/markAssociatedNotificationsRead.post.parameters[2].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/markAssociatedNotificationsRead.post.parameters[2].in: query
paths./cards/{idCard}/markAssociatedNotificationsRead.post.parameters[2].name: token
paths./cards/{idCard}/markAssociatedNotificationsRead.post.parameters[2].required: true
paths./cards/{idCard}/markAssociatedNotificationsRead.post.parameters[2].type: string
paths./cards/{idCard}/markAssociatedNotificationsRead.post.responses.200.description: Success
paths./cards/{idCard}/markAssociatedNotificationsRead.post.responses.400.description: Server
  rejection
paths./cards/{idCard}/markAssociatedNotificationsRead.post.security.length: 2
paths./cards/{idCard}/markAssociatedNotificationsRead.post.security[0].api_key.length: 0
paths./cards/{idCard}/markAssociatedNotificationsRead.post.security[1].api_token.length: 0
paths./cards/{idCard}/markAssociatedNotificationsRead.post.summary: addCardsMarkAssociatedNotificationsReadByIdCard()
paths./cards/{idCard}/markAssociatedNotificationsRead.post.tags.length: 1
paths./cards/{idCard}/markAssociatedNotificationsRead.post.tags[0]: card
paths./cards/{idCard}/members.get.operationId: getCardsMembersByIdCard
paths./cards/{idCard}/members.get.parameters.length: 4
paths./cards/{idCard}/members.get.parameters[0].description: card id or shortlink
paths./cards/{idCard}/members.get.parameters[0].in: path
paths./cards/{idCard}/members.get.parameters[0].name: idCard
paths./cards/{idCard}/members.get.parameters[0].required: true
paths./cards/{idCard}/members.get.parameters[0].type: string
paths./cards/{idCard}/members.get.parameters[1].default: avatarHash, fullName, initials
  and username
paths./cards/{idCard}/members.get.parameters[1].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./cards/{idCard}/members.get.parameters[1].in: query
paths./cards/{idCard}/members.get.parameters[1].name: fields
paths./cards/{idCard}/members.get.parameters[1].required: false
paths./cards/{idCard}/members.get.parameters[1].type: string
paths./cards/{idCard}/members.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/members.get.parameters[2].in: query
paths./cards/{idCard}/members.get.parameters[2].name: key
paths./cards/{idCard}/members.get.parameters[2].required: true
paths./cards/{idCard}/members.get.parameters[2].type: string
paths./cards/{idCard}/members.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/members.get.parameters[3].in: query
paths./cards/{idCard}/members.get.parameters[3].name: token
paths./cards/{idCard}/members.get.parameters[3].required: true
paths./cards/{idCard}/members.get.parameters[3].type: string
paths./cards/{idCard}/members.get.responses.200.description: Success
paths./cards/{idCard}/members.get.responses.400.description: Server rejection
paths./cards/{idCard}/members.get.security.length: 2
paths./cards/{idCard}/members.get.security[0].api_key.length: 0
paths./cards/{idCard}/members.get.security[1].api_token.length: 0
paths./cards/{idCard}/members.get.summary: getCardsMembersByIdCard()
paths./cards/{idCard}/members.get.tags.length: 1
paths./cards/{idCard}/members.get.tags[0]: card
paths./cards/{idCard}/membersVoted.get.operationId: getCardsMembersVotedByIdCard
paths./cards/{idCard}/membersVoted.get.parameters.length: 4
paths./cards/{idCard}/membersVoted.get.parameters[0].description: card id or shortlink
paths./cards/{idCard}/membersVoted.get.parameters[0].in: path
paths./cards/{idCard}/membersVoted.get.parameters[0].name: idCard
paths./cards/{idCard}/membersVoted.get.parameters[0].required: true
paths./cards/{idCard}/membersVoted.get.parameters[0].type: string
paths./cards/{idCard}/membersVoted.get.parameters[1].default: avatarHash, fullName,
  initials and username
paths./cards/{idCard}/membersVoted.get.parameters[1].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./cards/{idCard}/membersVoted.get.parameters[1].in: query
paths./cards/{idCard}/membersVoted.get.parameters[1].name: fields
paths./cards/{idCard}/membersVoted.get.parameters[1].required: false
paths./cards/{idCard}/membersVoted.get.parameters[1].type: string
paths./cards/{idCard}/membersVoted.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/membersVoted.get.parameters[2].in: query
paths./cards/{idCard}/membersVoted.get.parameters[2].name: key
paths./cards/{idCard}/membersVoted.get.parameters[2].required: true
paths./cards/{idCard}/membersVoted.get.parameters[2].type: string
paths./cards/{idCard}/membersVoted.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/membersVoted.get.parameters[3].in: query
paths./cards/{idCard}/membersVoted.get.parameters[3].name: token
paths./cards/{idCard}/membersVoted.get.parameters[3].required: true
paths./cards/{idCard}/membersVoted.get.parameters[3].type: string
paths./cards/{idCard}/membersVoted.get.responses.200.description: Success
paths./cards/{idCard}/membersVoted.get.responses.400.description: Server rejection
paths./cards/{idCard}/membersVoted.get.security.length: 2
paths./cards/{idCard}/membersVoted.get.security[0].api_key.length: 0
paths./cards/{idCard}/membersVoted.get.security[1].api_token.length: 0
paths./cards/{idCard}/membersVoted.get.summary: getCardsMembersVotedByIdCard()
paths./cards/{idCard}/membersVoted.get.tags.length: 1
paths./cards/{idCard}/membersVoted.get.tags[0]: card
paths./cards/{idCard}/membersVoted.post.operationId: addCardsMembersVotedByIdCard
paths./cards/{idCard}/membersVoted.post.parameters.length: 4
paths./cards/{idCard}/membersVoted.post.parameters[0].description: card id or shortlink
paths./cards/{idCard}/membersVoted.post.parameters[0].in: path
paths./cards/{idCard}/membersVoted.post.parameters[0].name: idCard
paths./cards/{idCard}/membersVoted.post.parameters[0].required: true
paths./cards/{idCard}/membersVoted.post.parameters[0].type: string
paths./cards/{idCard}/membersVoted.post.parameters[1].description: Attributes of "Cards
  Members Voted" to be added.
paths./cards/{idCard}/membersVoted.post.parameters[1].in: body
paths./cards/{idCard}/membersVoted.post.parameters[1].name: body
paths./cards/{idCard}/membersVoted.post.parameters[1].required: true
paths./cards/{idCard}/membersVoted.post.parameters[1].schema.$ref: '#/definitions/cards_membersVoted'
paths./cards/{idCard}/membersVoted.post.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/membersVoted.post.parameters[2].in: query
paths./cards/{idCard}/membersVoted.post.parameters[2].name: key
paths./cards/{idCard}/membersVoted.post.parameters[2].required: true
paths./cards/{idCard}/membersVoted.post.parameters[2].type: string
paths./cards/{idCard}/membersVoted.post.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/membersVoted.post.parameters[3].in: query
paths./cards/{idCard}/membersVoted.post.parameters[3].name: token
paths./cards/{idCard}/membersVoted.post.parameters[3].required: true
paths./cards/{idCard}/membersVoted.post.parameters[3].type: string
paths./cards/{idCard}/membersVoted.post.responses.200.description: Success
paths./cards/{idCard}/membersVoted.post.responses.400.description: Server rejection
paths./cards/{idCard}/membersVoted.post.security.length: 2
paths./cards/{idCard}/membersVoted.post.security[0].api_key.length: 0
paths./cards/{idCard}/membersVoted.post.security[1].api_token.length: 0
paths./cards/{idCard}/membersVoted.post.summary: addCardsMembersVotedByIdCard()
paths./cards/{idCard}/membersVoted.post.tags.length: 1
paths./cards/{idCard}/membersVoted.post.tags[0]: card
paths./cards/{idCard}/membersVoted/{idMember}.delete.operationId: deleteCardsMembersVotedByIdCardByIdMember
paths./cards/{idCard}/membersVoted/{idMember}.delete.parameters.length: 4
paths./cards/{idCard}/membersVoted/{idMember}.delete.parameters[0].description: card
  id or shortlink
paths./cards/{idCard}/membersVoted/{idMember}.delete.parameters[0].in: path
paths./cards/{idCard}/membersVoted/{idMember}.delete.parameters[0].name: idCard
paths./cards/{idCard}/membersVoted/{idMember}.delete.parameters[0].required: true
paths./cards/{idCard}/membersVoted/{idMember}.delete.parameters[0].type: string
paths./cards/{idCard}/membersVoted/{idMember}.delete.parameters[1].description: idMember
paths./cards/{idCard}/membersVoted/{idMember}.delete.parameters[1].in: path
paths./cards/{idCard}/membersVoted/{idMember}.delete.parameters[1].name: idMember
paths./cards/{idCard}/membersVoted/{idMember}.delete.parameters[1].required: true
paths./cards/{idCard}/membersVoted/{idMember}.delete.parameters[1].type: string
paths./cards/{idCard}/membersVoted/{idMember}.delete.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./cards/{idCard}/membersVoted/{idMember}.delete.parameters[2].in: query
paths./cards/{idCard}/membersVoted/{idMember}.delete.parameters[2].name: key
paths./cards/{idCard}/membersVoted/{idMember}.delete.parameters[2].required: true
paths./cards/{idCard}/membersVoted/{idMember}.delete.parameters[2].type: string
paths./cards/{idCard}/membersVoted/{idMember}.delete.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/membersVoted/{idMember}.delete.parameters[3].in: query
paths./cards/{idCard}/membersVoted/{idMember}.delete.parameters[3].name: token
paths./cards/{idCard}/membersVoted/{idMember}.delete.parameters[3].required: true
paths./cards/{idCard}/membersVoted/{idMember}.delete.parameters[3].type: string
paths./cards/{idCard}/membersVoted/{idMember}.delete.responses.200.description: Success
paths./cards/{idCard}/membersVoted/{idMember}.delete.responses.400.description: Server
  rejection
paths./cards/{idCard}/membersVoted/{idMember}.delete.security.length: 2
paths./cards/{idCard}/membersVoted/{idMember}.delete.security[0].api_key.length: 0
paths./cards/{idCard}/membersVoted/{idMember}.delete.security[1].api_token.length: 0
paths./cards/{idCard}/membersVoted/{idMember}.delete.summary: deleteCardsMembersVotedByIdCardByIdMember()
paths./cards/{idCard}/membersVoted/{idMember}.delete.tags.length: 1
paths./cards/{idCard}/membersVoted/{idMember}.delete.tags[0]: card
paths./cards/{idCard}/name.put.operationId: updateCardsNameByIdCard
paths./cards/{idCard}/name.put.parameters.length: 4
paths./cards/{idCard}/name.put.parameters[0].description: card id or shortlink
paths./cards/{idCard}/name.put.parameters[0].in: path
paths./cards/{idCard}/name.put.parameters[0].name: idCard
paths./cards/{idCard}/name.put.parameters[0].required: true
paths./cards/{idCard}/name.put.parameters[0].type: string
paths./cards/{idCard}/name.put.parameters[1].description: Attributes of "Cards Name"
  to be updated.
paths./cards/{idCard}/name.put.parameters[1].in: body
paths./cards/{idCard}/name.put.parameters[1].name: body
paths./cards/{idCard}/name.put.parameters[1].required: true
paths./cards/{idCard}/name.put.parameters[1].schema.$ref: '#/definitions/cards_name'
paths./cards/{idCard}/name.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/name.put.parameters[2].in: query
paths./cards/{idCard}/name.put.parameters[2].name: key
paths./cards/{idCard}/name.put.parameters[2].required: true
paths./cards/{idCard}/name.put.parameters[2].type: string
paths./cards/{idCard}/name.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/name.put.parameters[3].in: query
paths./cards/{idCard}/name.put.parameters[3].name: token
paths./cards/{idCard}/name.put.parameters[3].required: true
paths./cards/{idCard}/name.put.parameters[3].type: string
paths./cards/{idCard}/name.put.responses.200.description: Success
paths./cards/{idCard}/name.put.responses.400.description: Server rejection
paths./cards/{idCard}/name.put.security.length: 2
paths./cards/{idCard}/name.put.security[0].api_key.length: 0
paths./cards/{idCard}/name.put.security[1].api_token.length: 0
paths./cards/{idCard}/name.put.summary: updateCardsNameByIdCard()
paths./cards/{idCard}/name.put.tags.length: 1
paths./cards/{idCard}/name.put.tags[0]: card
paths./cards/{idCard}/pos.put.operationId: updateCardsPosByIdCard
paths./cards/{idCard}/pos.put.parameters.length: 4
paths./cards/{idCard}/pos.put.parameters[0].description: card id or shortlink
paths./cards/{idCard}/pos.put.parameters[0].in: path
paths./cards/{idCard}/pos.put.parameters[0].name: idCard
paths./cards/{idCard}/pos.put.parameters[0].required: true
paths./cards/{idCard}/pos.put.parameters[0].type: string
paths./cards/{idCard}/pos.put.parameters[1].description: Attributes of "Cards Pos"
  to be updated.
paths./cards/{idCard}/pos.put.parameters[1].in: body
paths./cards/{idCard}/pos.put.parameters[1].name: body
paths./cards/{idCard}/pos.put.parameters[1].required: true
paths./cards/{idCard}/pos.put.parameters[1].schema.$ref: '#/definitions/cards_pos'
paths./cards/{idCard}/pos.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/pos.put.parameters[2].in: query
paths./cards/{idCard}/pos.put.parameters[2].name: key
paths./cards/{idCard}/pos.put.parameters[2].required: true
paths./cards/{idCard}/pos.put.parameters[2].type: string
paths./cards/{idCard}/pos.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/pos.put.parameters[3].in: query
paths./cards/{idCard}/pos.put.parameters[3].name: token
paths./cards/{idCard}/pos.put.parameters[3].required: true
paths./cards/{idCard}/pos.put.parameters[3].type: string
paths./cards/{idCard}/pos.put.responses.200.description: Success
paths./cards/{idCard}/pos.put.responses.400.description: Server rejection
paths./cards/{idCard}/pos.put.security.length: 2
paths./cards/{idCard}/pos.put.security[0].api_key.length: 0
paths./cards/{idCard}/pos.put.security[1].api_token.length: 0
paths./cards/{idCard}/pos.put.summary: updateCardsPosByIdCard()
paths./cards/{idCard}/pos.put.tags.length: 1
paths./cards/{idCard}/pos.put.tags[0]: card
paths./cards/{idCard}/stickers.get.operationId: getCardsStickersByIdCard
paths./cards/{idCard}/stickers.get.parameters.length: 4
paths./cards/{idCard}/stickers.get.parameters[0].description: card id or shortlink
paths./cards/{idCard}/stickers.get.parameters[0].in: path
paths./cards/{idCard}/stickers.get.parameters[0].name: idCard
paths./cards/{idCard}/stickers.get.parameters[0].required: true
paths./cards/{idCard}/stickers.get.parameters[0].type: string
paths./cards/{idCard}/stickers.get.parameters[1].default: all
paths./cards/{idCard}/stickers.get.parameters[1].description: 'all or a comma-separated
  list of: image, imageScaled, imageUrl, left, rotate, top or zIndex'
paths./cards/{idCard}/stickers.get.parameters[1].in: query
paths./cards/{idCard}/stickers.get.parameters[1].name: fields
paths./cards/{idCard}/stickers.get.parameters[1].required: false
paths./cards/{idCard}/stickers.get.parameters[1].type: string
paths./cards/{idCard}/stickers.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/stickers.get.parameters[2].in: query
paths./cards/{idCard}/stickers.get.parameters[2].name: key
paths./cards/{idCard}/stickers.get.parameters[2].required: true
paths./cards/{idCard}/stickers.get.parameters[2].type: string
paths./cards/{idCard}/stickers.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/stickers.get.parameters[3].in: query
paths./cards/{idCard}/stickers.get.parameters[3].name: token
paths./cards/{idCard}/stickers.get.parameters[3].required: true
paths./cards/{idCard}/stickers.get.parameters[3].type: string
paths./cards/{idCard}/stickers.get.responses.200.description: Success
paths./cards/{idCard}/stickers.get.responses.400.description: Server rejection
paths./cards/{idCard}/stickers.get.security.length: 2
paths./cards/{idCard}/stickers.get.security[0].api_key.length: 0
paths./cards/{idCard}/stickers.get.security[1].api_token.length: 0
paths./cards/{idCard}/stickers.get.summary: getCardsStickersByIdCard()
paths./cards/{idCard}/stickers.get.tags.length: 1
paths./cards/{idCard}/stickers.get.tags[0]: card
paths./cards/{idCard}/stickers.post.operationId: addCardsStickersByIdCard
paths./cards/{idCard}/stickers.post.parameters.length: 4
paths./cards/{idCard}/stickers.post.parameters[0].description: card id or shortlink
paths./cards/{idCard}/stickers.post.parameters[0].in: path
paths./cards/{idCard}/stickers.post.parameters[0].name: idCard
paths./cards/{idCard}/stickers.post.parameters[0].required: true
paths./cards/{idCard}/stickers.post.parameters[0].type: string
paths./cards/{idCard}/stickers.post.parameters[1].description: Attributes of "Cards
  Stickers" to be added.
paths./cards/{idCard}/stickers.post.parameters[1].in: body
paths./cards/{idCard}/stickers.post.parameters[1].name: body
paths./cards/{idCard}/stickers.post.parameters[1].required: true
paths./cards/{idCard}/stickers.post.parameters[1].schema.$ref: '#/definitions/cards_stickers'
paths./cards/{idCard}/stickers.post.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/stickers.post.parameters[2].in: query
paths./cards/{idCard}/stickers.post.parameters[2].name: key
paths./cards/{idCard}/stickers.post.parameters[2].required: true
paths./cards/{idCard}/stickers.post.parameters[2].type: string
paths./cards/{idCard}/stickers.post.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/stickers.post.parameters[3].in: query
paths./cards/{idCard}/stickers.post.parameters[3].name: token
paths./cards/{idCard}/stickers.post.parameters[3].required: true
paths./cards/{idCard}/stickers.post.parameters[3].type: string
paths./cards/{idCard}/stickers.post.responses.200.description: Success
paths./cards/{idCard}/stickers.post.responses.400.description: Server rejection
paths./cards/{idCard}/stickers.post.security.length: 2
paths./cards/{idCard}/stickers.post.security[0].api_key.length: 0
paths./cards/{idCard}/stickers.post.security[1].api_token.length: 0
paths./cards/{idCard}/stickers.post.summary: addCardsStickersByIdCard()
paths./cards/{idCard}/stickers.post.tags.length: 1
paths./cards/{idCard}/stickers.post.tags[0]: card
paths./cards/{idCard}/stickers/{idSticker}.delete.operationId: deleteCardsStickersByIdCardByIdSticker
paths./cards/{idCard}/stickers/{idSticker}.delete.parameters.length: 4
paths./cards/{idCard}/stickers/{idSticker}.delete.parameters[0].description: card
  id or shortlink
paths./cards/{idCard}/stickers/{idSticker}.delete.parameters[0].in: path
paths./cards/{idCard}/stickers/{idSticker}.delete.parameters[0].name: idCard
paths./cards/{idCard}/stickers/{idSticker}.delete.parameters[0].required: true
paths./cards/{idCard}/stickers/{idSticker}.delete.parameters[0].type: string
paths./cards/{idCard}/stickers/{idSticker}.delete.parameters[1].description: idSticker
paths./cards/{idCard}/stickers/{idSticker}.delete.parameters[1].in: path
paths./cards/{idCard}/stickers/{idSticker}.delete.parameters[1].name: idSticker
paths./cards/{idCard}/stickers/{idSticker}.delete.parameters[1].required: true
paths./cards/{idCard}/stickers/{idSticker}.delete.parameters[1].type: string
paths./cards/{idCard}/stickers/{idSticker}.delete.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/stickers/{idSticker}.delete.parameters[2].in: query
paths./cards/{idCard}/stickers/{idSticker}.delete.parameters[2].name: key
paths./cards/{idCard}/stickers/{idSticker}.delete.parameters[2].required: true
paths./cards/{idCard}/stickers/{idSticker}.delete.parameters[2].type: string
paths./cards/{idCard}/stickers/{idSticker}.delete.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/stickers/{idSticker}.delete.parameters[3].in: query
paths./cards/{idCard}/stickers/{idSticker}.delete.parameters[3].name: token
paths./cards/{idCard}/stickers/{idSticker}.delete.parameters[3].required: true
paths./cards/{idCard}/stickers/{idSticker}.delete.parameters[3].type: string
paths./cards/{idCard}/stickers/{idSticker}.delete.responses.200.description: Success
paths./cards/{idCard}/stickers/{idSticker}.delete.responses.400.description: Server
  rejection
paths./cards/{idCard}/stickers/{idSticker}.delete.security.length: 2
paths./cards/{idCard}/stickers/{idSticker}.delete.security[0].api_key.length: 0
paths./cards/{idCard}/stickers/{idSticker}.delete.security[1].api_token.length: 0
paths./cards/{idCard}/stickers/{idSticker}.delete.summary: deleteCardsStickersByIdCardByIdSticker()
paths./cards/{idCard}/stickers/{idSticker}.delete.tags.length: 1
paths./cards/{idCard}/stickers/{idSticker}.delete.tags[0]: card
paths./cards/{idCard}/stickers/{idSticker}.get.operationId: getCardsStickersByIdCardByIdSticker
paths./cards/{idCard}/stickers/{idSticker}.get.parameters.length: 5
paths./cards/{idCard}/stickers/{idSticker}.get.parameters[0].description: card id
  or shortlink
paths./cards/{idCard}/stickers/{idSticker}.get.parameters[0].in: path
paths./cards/{idCard}/stickers/{idSticker}.get.parameters[0].name: idCard
paths./cards/{idCard}/stickers/{idSticker}.get.parameters[0].required: true
paths./cards/{idCard}/stickers/{idSticker}.get.parameters[0].type: string
paths./cards/{idCard}/stickers/{idSticker}.get.parameters[1].description: idSticker
paths./cards/{idCard}/stickers/{idSticker}.get.parameters[1].in: path
paths./cards/{idCard}/stickers/{idSticker}.get.parameters[1].name: idSticker
paths./cards/{idCard}/stickers/{idSticker}.get.parameters[1].required: true
paths./cards/{idCard}/stickers/{idSticker}.get.parameters[1].type: string
paths./cards/{idCard}/stickers/{idSticker}.get.parameters[2].default: all
paths./cards/{idCard}/stickers/{idSticker}.get.parameters[2].description: 'all or
  a comma-separated list of: image, imageScaled, imageUrl, left, rotate, top or zIndex'
paths./cards/{idCard}/stickers/{idSticker}.get.parameters[2].in: query
paths./cards/{idCard}/stickers/{idSticker}.get.parameters[2].name: fields
paths./cards/{idCard}/stickers/{idSticker}.get.parameters[2].required: false
paths./cards/{idCard}/stickers/{idSticker}.get.parameters[2].type: string
paths./cards/{idCard}/stickers/{idSticker}.get.parameters[3].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/stickers/{idSticker}.get.parameters[3].in: query
paths./cards/{idCard}/stickers/{idSticker}.get.parameters[3].name: key
paths./cards/{idCard}/stickers/{idSticker}.get.parameters[3].required: true
paths./cards/{idCard}/stickers/{idSticker}.get.parameters[3].type: string
paths./cards/{idCard}/stickers/{idSticker}.get.parameters[4].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/stickers/{idSticker}.get.parameters[4].in: query
paths./cards/{idCard}/stickers/{idSticker}.get.parameters[4].name: token
paths./cards/{idCard}/stickers/{idSticker}.get.parameters[4].required: true
paths./cards/{idCard}/stickers/{idSticker}.get.parameters[4].type: string
paths./cards/{idCard}/stickers/{idSticker}.get.responses.200.description: Success
paths./cards/{idCard}/stickers/{idSticker}.get.responses.400.description: Server rejection
paths./cards/{idCard}/stickers/{idSticker}.get.security.length: 2
paths./cards/{idCard}/stickers/{idSticker}.get.security[0].api_key.length: 0
paths./cards/{idCard}/stickers/{idSticker}.get.security[1].api_token.length: 0
paths./cards/{idCard}/stickers/{idSticker}.get.summary: getCardsStickersByIdCardByIdSticker()
paths./cards/{idCard}/stickers/{idSticker}.get.tags.length: 1
paths./cards/{idCard}/stickers/{idSticker}.get.tags[0]: card
paths./cards/{idCard}/stickers/{idSticker}.put.operationId: updateCardsStickersByIdCardByIdSticker
paths./cards/{idCard}/stickers/{idSticker}.put.parameters.length: 5
paths./cards/{idCard}/stickers/{idSticker}.put.parameters[0].description: card id
  or shortlink
paths./cards/{idCard}/stickers/{idSticker}.put.parameters[0].in: path
paths./cards/{idCard}/stickers/{idSticker}.put.parameters[0].name: idCard
paths./cards/{idCard}/stickers/{idSticker}.put.parameters[0].required: true
paths./cards/{idCard}/stickers/{idSticker}.put.parameters[0].type: string
paths./cards/{idCard}/stickers/{idSticker}.put.parameters[1].description: idSticker
paths./cards/{idCard}/stickers/{idSticker}.put.parameters[1].in: path
paths./cards/{idCard}/stickers/{idSticker}.put.parameters[1].name: idSticker
paths./cards/{idCard}/stickers/{idSticker}.put.parameters[1].required: true
paths./cards/{idCard}/stickers/{idSticker}.put.parameters[1].type: string
paths./cards/{idCard}/stickers/{idSticker}.put.parameters[2].description: Attributes
  of "Cards Stickers" to be updated.
paths./cards/{idCard}/stickers/{idSticker}.put.parameters[2].in: body
paths./cards/{idCard}/stickers/{idSticker}.put.parameters[2].name: body
paths./cards/{idCard}/stickers/{idSticker}.put.parameters[2].required: true
paths./cards/{idCard}/stickers/{idSticker}.put.parameters[2].schema.$ref: '#/definitions/cards_stickers'
paths./cards/{idCard}/stickers/{idSticker}.put.parameters[3].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/stickers/{idSticker}.put.parameters[3].in: query
paths./cards/{idCard}/stickers/{idSticker}.put.parameters[3].name: key
paths./cards/{idCard}/stickers/{idSticker}.put.parameters[3].required: true
paths./cards/{idCard}/stickers/{idSticker}.put.parameters[3].type: string
paths./cards/{idCard}/stickers/{idSticker}.put.parameters[4].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/stickers/{idSticker}.put.parameters[4].in: query
paths./cards/{idCard}/stickers/{idSticker}.put.parameters[4].name: token
paths./cards/{idCard}/stickers/{idSticker}.put.parameters[4].required: true
paths./cards/{idCard}/stickers/{idSticker}.put.parameters[4].type: string
paths./cards/{idCard}/stickers/{idSticker}.put.responses.200.description: Success
paths./cards/{idCard}/stickers/{idSticker}.put.responses.400.description: Server rejection
paths./cards/{idCard}/stickers/{idSticker}.put.security.length: 2
paths./cards/{idCard}/stickers/{idSticker}.put.security[0].api_key.length: 0
paths./cards/{idCard}/stickers/{idSticker}.put.security[1].api_token.length: 0
paths./cards/{idCard}/stickers/{idSticker}.put.summary: updateCardsStickersByIdCardByIdSticker()
paths./cards/{idCard}/stickers/{idSticker}.put.tags.length: 1
paths./cards/{idCard}/stickers/{idSticker}.put.tags[0]: card
paths./cards/{idCard}/subscribed.put.operationId: updateCardsSubscribedByIdCard
paths./cards/{idCard}/subscribed.put.parameters.length: 4
paths./cards/{idCard}/subscribed.put.parameters[0].description: card id or shortlink
paths./cards/{idCard}/subscribed.put.parameters[0].in: path
paths./cards/{idCard}/subscribed.put.parameters[0].name: idCard
paths./cards/{idCard}/subscribed.put.parameters[0].required: true
paths./cards/{idCard}/subscribed.put.parameters[0].type: string
paths./cards/{idCard}/subscribed.put.parameters[1].description: Attributes of "Cards
  Subscribed" to be updated.
paths./cards/{idCard}/subscribed.put.parameters[1].in: body
paths./cards/{idCard}/subscribed.put.parameters[1].name: body
paths./cards/{idCard}/subscribed.put.parameters[1].required: true
paths./cards/{idCard}/subscribed.put.parameters[1].schema.$ref: '#/definitions/cards_subscribed'
paths./cards/{idCard}/subscribed.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./cards/{idCard}/subscribed.put.parameters[2].in: query
paths./cards/{idCard}/subscribed.put.parameters[2].name: key
paths./cards/{idCard}/subscribed.put.parameters[2].required: true
paths./cards/{idCard}/subscribed.put.parameters[2].type: string
paths./cards/{idCard}/subscribed.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./cards/{idCard}/subscribed.put.parameters[3].in: query
paths./cards/{idCard}/subscribed.put.parameters[3].name: token
paths./cards/{idCard}/subscribed.put.parameters[3].required: true
paths./cards/{idCard}/subscribed.put.parameters[3].type: string
paths./cards/{idCard}/subscribed.put.responses.200.description: Success
paths./cards/{idCard}/subscribed.put.responses.400.description: Server rejection
paths./cards/{idCard}/subscribed.put.security.length: 2
paths./cards/{idCard}/subscribed.put.security[0].api_key.length: 0
paths./cards/{idCard}/subscribed.put.security[1].api_token.length: 0
paths./cards/{idCard}/subscribed.put.summary: updateCardsSubscribedByIdCard()
paths./cards/{idCard}/subscribed.put.tags.length: 1
paths./cards/{idCard}/subscribed.put.tags[0]: card
paths./checklists.post.operationId: addChecklists
paths./checklists.post.parameters.length: 3
paths./checklists.post.parameters[0].description: Attributes of "Checklists" to be
  added.
paths./checklists.post.parameters[0].in: body
paths./checklists.post.parameters[0].name: body
paths./checklists.post.parameters[0].required: true
paths./checklists.post.parameters[0].schema.$ref: '#/definitions/checklists'
paths./checklists.post.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./checklists.post.parameters[1].in: query
paths./checklists.post.parameters[1].name: key
paths./checklists.post.parameters[1].required: true
paths./checklists.post.parameters[1].type: string
paths./checklists.post.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./checklists.post.parameters[2].in: query
paths./checklists.post.parameters[2].name: token
paths./checklists.post.parameters[2].required: true
paths./checklists.post.parameters[2].type: string
paths./checklists.post.responses.200.description: Success
paths./checklists.post.responses.400.description: Server rejection
paths./checklists.post.security.length: 2
paths./checklists.post.security[0].api_key.length: 0
paths./checklists.post.security[1].api_token.length: 0
paths./checklists.post.summary: addChecklists()
paths./checklists.post.tags.length: 1
paths./checklists.post.tags[0]: checklist
paths./checklists/{idChecklist}.delete.operationId: deleteChecklistsByIdChecklist
paths./checklists/{idChecklist}.delete.parameters.length: 3
paths./checklists/{idChecklist}.delete.parameters[0].description: idChecklist
paths./checklists/{idChecklist}.delete.parameters[0].in: path
paths./checklists/{idChecklist}.delete.parameters[0].name: idChecklist
paths./checklists/{idChecklist}.delete.parameters[0].required: true
paths./checklists/{idChecklist}.delete.parameters[0].type: string
paths./checklists/{idChecklist}.delete.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./checklists/{idChecklist}.delete.parameters[1].in: query
paths./checklists/{idChecklist}.delete.parameters[1].name: key
paths./checklists/{idChecklist}.delete.parameters[1].required: true
paths./checklists/{idChecklist}.delete.parameters[1].type: string
paths./checklists/{idChecklist}.delete.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./checklists/{idChecklist}.delete.parameters[2].in: query
paths./checklists/{idChecklist}.delete.parameters[2].name: token
paths./checklists/{idChecklist}.delete.parameters[2].required: true
paths./checklists/{idChecklist}.delete.parameters[2].type: string
paths./checklists/{idChecklist}.delete.responses.200.description: Success
paths./checklists/{idChecklist}.delete.responses.400.description: Server rejection
paths./checklists/{idChecklist}.delete.security.length: 2
paths./checklists/{idChecklist}.delete.security[0].api_key.length: 0
paths./checklists/{idChecklist}.delete.security[1].api_token.length: 0
paths./checklists/{idChecklist}.delete.summary: deleteChecklistsByIdChecklist()
paths./checklists/{idChecklist}.delete.tags.length: 1
paths./checklists/{idChecklist}.delete.tags[0]: checklist
paths./checklists/{idChecklist}.get.operationId: getChecklistsByIdChecklist
paths./checklists/{idChecklist}.get.parameters.length: 8
paths./checklists/{idChecklist}.get.parameters[0].description: idChecklist
paths./checklists/{idChecklist}.get.parameters[0].in: path
paths./checklists/{idChecklist}.get.parameters[0].name: idChecklist
paths./checklists/{idChecklist}.get.parameters[0].required: true
paths./checklists/{idChecklist}.get.parameters[0].type: string
paths./checklists/{idChecklist}.get.parameters[1].default: none
paths./checklists/{idChecklist}.get.parameters[1].description: 'One of: all, closed,
  none, open or visible'
paths./checklists/{idChecklist}.get.parameters[1].in: query
paths./checklists/{idChecklist}.get.parameters[1].name: cards
paths./checklists/{idChecklist}.get.parameters[1].required: false
paths./checklists/{idChecklist}.get.parameters[1].type: string
paths./checklists/{idChecklist}.get.parameters[2].default: all
paths./checklists/{idChecklist}.get.parameters[2].description: 'all or a comma-separated
  list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due,
  email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
  idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed
  or url'
paths./checklists/{idChecklist}.get.parameters[2].in: query
paths./checklists/{idChecklist}.get.parameters[2].name: card_fields
paths./checklists/{idChecklist}.get.parameters[2].required: false
paths./checklists/{idChecklist}.get.parameters[2].type: string
paths./checklists/{idChecklist}.get.parameters[3].default: all
paths./checklists/{idChecklist}.get.parameters[3].description: 'One of: all or none'
paths./checklists/{idChecklist}.get.parameters[3].in: query
paths./checklists/{idChecklist}.get.parameters[3].name: checkItems
paths./checklists/{idChecklist}.get.parameters[3].required: false
paths./checklists/{idChecklist}.get.parameters[3].type: string
paths./checklists/{idChecklist}.get.parameters[4].default: name, nameData, pos and
  state
paths./checklists/{idChecklist}.get.parameters[4].description: 'all or a comma-separated
  list of: name, nameData, pos, state or type'
paths./checklists/{idChecklist}.get.parameters[4].in: query
paths./checklists/{idChecklist}.get.parameters[4].name: checkItem_fields
paths./checklists/{idChecklist}.get.parameters[4].required: false
paths./checklists/{idChecklist}.get.parameters[4].type: string
paths./checklists/{idChecklist}.get.parameters[5].default: all
paths./checklists/{idChecklist}.get.parameters[5].description: 'all or a comma-separated
  list of: idBoard, idCard, name or pos'
paths./checklists/{idChecklist}.get.parameters[5].in: query
paths./checklists/{idChecklist}.get.parameters[5].name: fields
paths./checklists/{idChecklist}.get.parameters[5].required: false
paths./checklists/{idChecklist}.get.parameters[5].type: string
paths./checklists/{idChecklist}.get.parameters[6].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./checklists/{idChecklist}.get.parameters[6].in: query
paths./checklists/{idChecklist}.get.parameters[6].name: key
paths./checklists/{idChecklist}.get.parameters[6].required: true
paths./checklists/{idChecklist}.get.parameters[6].type: string
paths./checklists/{idChecklist}.get.parameters[7].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./checklists/{idChecklist}.get.parameters[7].in: query
paths./checklists/{idChecklist}.get.parameters[7].name: token
paths./checklists/{idChecklist}.get.parameters[7].required: true
paths./checklists/{idChecklist}.get.parameters[7].type: string
paths./checklists/{idChecklist}.get.responses.200.description: Success
paths./checklists/{idChecklist}.get.responses.400.description: Server rejection
paths./checklists/{idChecklist}.get.security.length: 2
paths./checklists/{idChecklist}.get.security[0].api_key.length: 0
paths./checklists/{idChecklist}.get.security[1].api_token.length: 0
paths./checklists/{idChecklist}.get.summary: getChecklistsByIdChecklist()
paths./checklists/{idChecklist}.get.tags.length: 1
paths./checklists/{idChecklist}.get.tags[0]: checklist
paths./checklists/{idChecklist}.put.operationId: updateChecklistsByIdChecklist
paths./checklists/{idChecklist}.put.parameters.length: 4
paths./checklists/{idChecklist}.put.parameters[0].description: idChecklist
paths./checklists/{idChecklist}.put.parameters[0].in: path
paths./checklists/{idChecklist}.put.parameters[0].name: idChecklist
paths./checklists/{idChecklist}.put.parameters[0].required: true
paths./checklists/{idChecklist}.put.parameters[0].type: string
paths./checklists/{idChecklist}.put.parameters[1].description: Attributes of "Checklists"
  to be updated.
paths./checklists/{idChecklist}.put.parameters[1].in: body
paths./checklists/{idChecklist}.put.parameters[1].name: body
paths./checklists/{idChecklist}.put.parameters[1].required: true
paths./checklists/{idChecklist}.put.parameters[1].schema.$ref: '#/definitions/checklists'
paths./checklists/{idChecklist}.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./checklists/{idChecklist}.put.parameters[2].in: query
paths./checklists/{idChecklist}.put.parameters[2].name: key
paths./checklists/{idChecklist}.put.parameters[2].required: true
paths./checklists/{idChecklist}.put.parameters[2].type: string
paths./checklists/{idChecklist}.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./checklists/{idChecklist}.put.parameters[3].in: query
paths./checklists/{idChecklist}.put.parameters[3].name: token
paths./checklists/{idChecklist}.put.parameters[3].required: true
paths./checklists/{idChecklist}.put.parameters[3].type: string
paths./checklists/{idChecklist}.put.responses.200.description: Success
paths./checklists/{idChecklist}.put.responses.400.description: Server rejection
paths./checklists/{idChecklist}.put.security.length: 2
paths./checklists/{idChecklist}.put.security[0].api_key.length: 0
paths./checklists/{idChecklist}.put.security[1].api_token.length: 0
paths./checklists/{idChecklist}.put.summary: updateChecklistsByIdChecklist()
paths./checklists/{idChecklist}.put.tags.length: 1
paths./checklists/{idChecklist}.put.tags[0]: checklist
paths./checklists/{idChecklist}/{field}.get.operationId: getChecklistsByIdChecklistByField
paths./checklists/{idChecklist}/{field}.get.parameters.length: 4
paths./checklists/{idChecklist}/{field}.get.parameters[0].description: idChecklist
paths./checklists/{idChecklist}/{field}.get.parameters[0].in: path
paths./checklists/{idChecklist}/{field}.get.parameters[0].name: idChecklist
paths./checklists/{idChecklist}/{field}.get.parameters[0].required: true
paths./checklists/{idChecklist}/{field}.get.parameters[0].type: string
paths./checklists/{idChecklist}/{field}.get.parameters[1].description: field
paths./checklists/{idChecklist}/{field}.get.parameters[1].in: path
paths./checklists/{idChecklist}/{field}.get.parameters[1].name: field
paths./checklists/{idChecklist}/{field}.get.parameters[1].required: true
paths./checklists/{idChecklist}/{field}.get.parameters[1].type: string
paths./checklists/{idChecklist}/{field}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./checklists/{idChecklist}/{field}.get.parameters[2].in: query
paths./checklists/{idChecklist}/{field}.get.parameters[2].name: key
paths./checklists/{idChecklist}/{field}.get.parameters[2].required: true
paths./checklists/{idChecklist}/{field}.get.parameters[2].type: string
paths./checklists/{idChecklist}/{field}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./checklists/{idChecklist}/{field}.get.parameters[3].in: query
paths./checklists/{idChecklist}/{field}.get.parameters[3].name: token
paths./checklists/{idChecklist}/{field}.get.parameters[3].required: true
paths./checklists/{idChecklist}/{field}.get.parameters[3].type: string
paths./checklists/{idChecklist}/{field}.get.responses.200.description: Success
paths./checklists/{idChecklist}/{field}.get.responses.400.description: Server rejection
paths./checklists/{idChecklist}/{field}.get.summary: getChecklistsByIdChecklistByField()
paths./checklists/{idChecklist}/{field}.get.tags.length: 1
paths./checklists/{idChecklist}/{field}.get.tags[0]: checklist
paths./checklists/{idChecklist}/board.get.operationId: getChecklistsBoardByIdChecklist
paths./checklists/{idChecklist}/board.get.parameters.length: 4
paths./checklists/{idChecklist}/board.get.parameters[0].description: idChecklist
paths./checklists/{idChecklist}/board.get.parameters[0].in: path
paths./checklists/{idChecklist}/board.get.parameters[0].name: idChecklist
paths./checklists/{idChecklist}/board.get.parameters[0].required: true
paths./checklists/{idChecklist}/board.get.parameters[0].type: string
paths./checklists/{idChecklist}/board.get.parameters[1].default: all
paths./checklists/{idChecklist}/board.get.parameters[1].description: 'all or a comma-separated
  list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization,
  invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
  shortUrl, starred, subscribed or url'
paths./checklists/{idChecklist}/board.get.parameters[1].in: query
paths./checklists/{idChecklist}/board.get.parameters[1].name: fields
paths./checklists/{idChecklist}/board.get.parameters[1].required: false
paths./checklists/{idChecklist}/board.get.parameters[1].type: string
paths./checklists/{idChecklist}/board.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./checklists/{idChecklist}/board.get.parameters[2].in: query
paths./checklists/{idChecklist}/board.get.parameters[2].name: key
paths./checklists/{idChecklist}/board.get.parameters[2].required: true
paths./checklists/{idChecklist}/board.get.parameters[2].type: string
paths./checklists/{idChecklist}/board.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./checklists/{idChecklist}/board.get.parameters[3].in: query
paths./checklists/{idChecklist}/board.get.parameters[3].name: token
paths./checklists/{idChecklist}/board.get.parameters[3].required: true
paths./checklists/{idChecklist}/board.get.parameters[3].type: string
paths./checklists/{idChecklist}/board.get.responses.200.description: Success
paths./checklists/{idChecklist}/board.get.responses.400.description: Server rejection
paths./checklists/{idChecklist}/board.get.security.length: 2
paths./checklists/{idChecklist}/board.get.security[0].api_key.length: 0
paths./checklists/{idChecklist}/board.get.security[1].api_token.length: 0
paths./checklists/{idChecklist}/board.get.summary: getChecklistsBoardByIdChecklist()
paths./checklists/{idChecklist}/board.get.tags.length: 1
paths./checklists/{idChecklist}/board.get.tags[0]: checklist
paths./checklists/{idChecklist}/board/{field}.get.operationId: getChecklistsBoardByIdChecklistByField
paths./checklists/{idChecklist}/board/{field}.get.parameters.length: 4
paths./checklists/{idChecklist}/board/{field}.get.parameters[0].description: idChecklist
paths./checklists/{idChecklist}/board/{field}.get.parameters[0].in: path
paths./checklists/{idChecklist}/board/{field}.get.parameters[0].name: idChecklist
paths./checklists/{idChecklist}/board/{field}.get.parameters[0].required: true
paths./checklists/{idChecklist}/board/{field}.get.parameters[0].type: string
paths./checklists/{idChecklist}/board/{field}.get.parameters[1].description: field
paths./checklists/{idChecklist}/board/{field}.get.parameters[1].in: path
paths./checklists/{idChecklist}/board/{field}.get.parameters[1].name: field
paths./checklists/{idChecklist}/board/{field}.get.parameters[1].required: true
paths./checklists/{idChecklist}/board/{field}.get.parameters[1].type: string
paths./checklists/{idChecklist}/board/{field}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./checklists/{idChecklist}/board/{field}.get.parameters[2].in: query
paths./checklists/{idChecklist}/board/{field}.get.parameters[2].name: key
paths./checklists/{idChecklist}/board/{field}.get.parameters[2].required: true
paths./checklists/{idChecklist}/board/{field}.get.parameters[2].type: string
paths./checklists/{idChecklist}/board/{field}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./checklists/{idChecklist}/board/{field}.get.parameters[3].in: query
paths./checklists/{idChecklist}/board/{field}.get.parameters[3].name: token
paths./checklists/{idChecklist}/board/{field}.get.parameters[3].required: true
paths./checklists/{idChecklist}/board/{field}.get.parameters[3].type: string
paths./checklists/{idChecklist}/board/{field}.get.responses.200.description: Success
paths./checklists/{idChecklist}/board/{field}.get.responses.400.description: Server
  rejection
paths./checklists/{idChecklist}/board/{field}.get.security.length: 2
paths./checklists/{idChecklist}/board/{field}.get.security[0].api_key.length: 0
paths./checklists/{idChecklist}/board/{field}.get.security[1].api_token.length: 0
paths./checklists/{idChecklist}/board/{field}.get.summary: getChecklistsBoardByIdChecklistByField()
paths./checklists/{idChecklist}/board/{field}.get.tags.length: 1
paths./checklists/{idChecklist}/board/{field}.get.tags[0]: checklist
paths./checklists/{idChecklist}/cards.get.operationId: getChecklistsCardsByIdChecklist
paths./checklists/{idChecklist}/cards.get.parameters.length: 16
paths./checklists/{idChecklist}/cards.get.parameters[0].description: idChecklist
paths./checklists/{idChecklist}/cards.get.parameters[0].in: path
paths./checklists/{idChecklist}/cards.get.parameters[0].name: idChecklist
paths./checklists/{idChecklist}/cards.get.parameters[0].required: true
paths./checklists/{idChecklist}/cards.get.parameters[0].type: string
paths./checklists/{idChecklist}/cards.get.parameters[1].description: 'all or a comma-separated
  list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard,
  addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem,
  copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization,
  deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation,
  disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
  makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard,
  moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,
  removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
  updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,
  updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed,
  updateList:name, updateMember or updateOrganization'
paths./checklists/{idChecklist}/cards.get.parameters[1].in: query
paths./checklists/{idChecklist}/cards.get.parameters[1].name: actions
paths./checklists/{idChecklist}/cards.get.parameters[1].required: false
paths./checklists/{idChecklist}/cards.get.parameters[1].type: string
paths./checklists/{idChecklist}/cards.get.parameters[2].description: A boolean value
  or &quot;cover&quot; for only card cover attachments
paths./checklists/{idChecklist}/cards.get.parameters[2].in: query
paths./checklists/{idChecklist}/cards.get.parameters[2].name: attachments
paths./checklists/{idChecklist}/cards.get.parameters[2].required: false
paths./checklists/{idChecklist}/cards.get.parameters[2].type: string
paths./checklists/{idChecklist}/cards.get.parameters[3].default: all
paths./checklists/{idChecklist}/cards.get.parameters[3].description: 'all or a comma-separated
  list of: bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews or
  url'
paths./checklists/{idChecklist}/cards.get.parameters[3].in: query
paths./checklists/{idChecklist}/cards.get.parameters[3].name: attachment_fields
paths./checklists/{idChecklist}/cards.get.parameters[3].required: false
paths./checklists/{idChecklist}/cards.get.parameters[3].type: string
paths./checklists/{idChecklist}/cards.get.parameters[4].description: ' true or false'
paths./checklists/{idChecklist}/cards.get.parameters[4].in: query
paths./checklists/{idChecklist}/cards.get.parameters[4].name: stickers
paths./checklists/{idChecklist}/cards.get.parameters[4].required: false
paths./checklists/{idChecklist}/cards.get.parameters[4].type: string
paths./checklists/{idChecklist}/cards.get.parameters[5].description: ' true or false'
paths./checklists/{idChecklist}/cards.get.parameters[5].in: query
paths./checklists/{idChecklist}/cards.get.parameters[5].name: members
paths./checklists/{idChecklist}/cards.get.parameters[5].required: false
paths./checklists/{idChecklist}/cards.get.parameters[5].type: string
paths./checklists/{idChecklist}/cards.get.parameters[6].default: avatarHash, fullName,
  initials and username
paths./checklists/{idChecklist}/cards.get.parameters[6].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./checklists/{idChecklist}/cards.get.parameters[6].in: query
paths./checklists/{idChecklist}/cards.get.parameters[6].name: member_fields
paths./checklists/{idChecklist}/cards.get.parameters[6].required: false
paths./checklists/{idChecklist}/cards.get.parameters[6].type: string
paths./checklists/{idChecklist}/cards.get.parameters[7].description: ' true or false'
paths./checklists/{idChecklist}/cards.get.parameters[7].in: query
paths./checklists/{idChecklist}/cards.get.parameters[7].name: checkItemStates
paths./checklists/{idChecklist}/cards.get.parameters[7].required: false
paths./checklists/{idChecklist}/cards.get.parameters[7].type: string
paths./checklists/{idChecklist}/cards.get.parameters[8].default: none
paths./checklists/{idChecklist}/cards.get.parameters[8].description: 'One of: all
  or none'
paths./checklists/{idChecklist}/cards.get.parameters[8].in: query
paths./checklists/{idChecklist}/cards.get.parameters[8].name: checklists
paths./checklists/{idChecklist}/cards.get.parameters[8].required: false
paths./checklists/{idChecklist}/cards.get.parameters[8].type: string
paths./checklists/{idChecklist}/cards.get.parameters[9].description: a number from
  1 to 1000
paths./checklists/{idChecklist}/cards.get.parameters[9].in: query
paths./checklists/{idChecklist}/cards.get.parameters[9].name: limit
paths./checklists/{idChecklist}/cards.get.parameters[9].required: false
paths./checklists/{idChecklist}/cards.get.parameters[9].type: string
paths./checklists/{idChecklist}/cards.get.parameters[10].description: A date, or null
paths./checklists/{idChecklist}/cards.get.parameters[10].in: query
paths./checklists/{idChecklist}/cards.get.parameters[10].name: since
paths./checklists/{idChecklist}/cards.get.parameters[10].required: false
paths./checklists/{idChecklist}/cards.get.parameters[10].type: string
paths./checklists/{idChecklist}/cards.get.parameters[11].description: A date, or null
paths./checklists/{idChecklist}/cards.get.parameters[11].in: query
paths./checklists/{idChecklist}/cards.get.parameters[11].name: before
paths./checklists/{idChecklist}/cards.get.parameters[11].required: false
paths./checklists/{idChecklist}/cards.get.parameters[11].type: string
paths./checklists/{idChecklist}/cards.get.parameters[12].default: open
paths./checklists/{idChecklist}/cards.get.parameters[12].description: 'One of: all,
  closed, none or open'
paths./checklists/{idChecklist}/cards.get.parameters[12].in: query
paths./checklists/{idChecklist}/cards.get.parameters[12].name: filter
paths./checklists/{idChecklist}/cards.get.parameters[12].required: false
paths./checklists/{idChecklist}/cards.get.parameters[12].type: string
paths./checklists/{idChecklist}/cards.get.parameters[13].default: all
paths./checklists/{idChecklist}/cards.get.parameters[13].description: 'all or a comma-separated
  list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due,
  email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
  idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed
  or url'
paths./checklists/{idChecklist}/cards.get.parameters[13].in: query
paths./checklists/{idChecklist}/cards.get.parameters[13].name: fields
paths./checklists/{idChecklist}/cards.get.parameters[13].required: false
paths./checklists/{idChecklist}/cards.get.parameters[13].type: string
paths./checklists/{idChecklist}/cards.get.parameters[14].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./checklists/{idChecklist}/cards.get.parameters[14].in: query
paths./checklists/{idChecklist}/cards.get.parameters[14].name: key
paths./checklists/{idChecklist}/cards.get.parameters[14].required: true
paths./checklists/{idChecklist}/cards.get.parameters[14].type: string
paths./checklists/{idChecklist}/cards.get.parameters[15].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./checklists/{idChecklist}/cards.get.parameters[15].in: query
paths./checklists/{idChecklist}/cards.get.parameters[15].name: token
paths./checklists/{idChecklist}/cards.get.parameters[15].required: true
paths./checklists/{idChecklist}/cards.get.parameters[15].type: string
paths./checklists/{idChecklist}/cards.get.responses.200.description: Success
paths./checklists/{idChecklist}/cards.get.responses.400.description: Server rejection
paths./checklists/{idChecklist}/cards.get.security.length: 2
paths./checklists/{idChecklist}/cards.get.security[0].api_key.length: 0
paths./checklists/{idChecklist}/cards.get.security[1].api_token.length: 0
paths./checklists/{idChecklist}/cards.get.summary: getChecklistsCardsByIdChecklist()
paths./checklists/{idChecklist}/cards.get.tags.length: 1
paths./checklists/{idChecklist}/cards.get.tags[0]: checklist
paths./checklists/{idChecklist}/cards/{filter}.get.operationId: getChecklistsCardsByIdChecklistByFilter
paths./checklists/{idChecklist}/cards/{filter}.get.parameters.length: 4
paths./checklists/{idChecklist}/cards/{filter}.get.parameters[0].description: idChecklist
paths./checklists/{idChecklist}/cards/{filter}.get.parameters[0].in: path
paths./checklists/{idChecklist}/cards/{filter}.get.parameters[0].name: idChecklist
paths./checklists/{idChecklist}/cards/{filter}.get.parameters[0].required: true
paths./checklists/{idChecklist}/cards/{filter}.get.parameters[0].type: string
paths./checklists/{idChecklist}/cards/{filter}.get.parameters[1].description: filter
paths./checklists/{idChecklist}/cards/{filter}.get.parameters[1].in: path
paths./checklists/{idChecklist}/cards/{filter}.get.parameters[1].name: filter
paths./checklists/{idChecklist}/cards/{filter}.get.parameters[1].required: true
paths./checklists/{idChecklist}/cards/{filter}.get.parameters[1].type: string
paths./checklists/{idChecklist}/cards/{filter}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./checklists/{idChecklist}/cards/{filter}.get.parameters[2].in: query
paths./checklists/{idChecklist}/cards/{filter}.get.parameters[2].name: key
paths./checklists/{idChecklist}/cards/{filter}.get.parameters[2].required: true
paths./checklists/{idChecklist}/cards/{filter}.get.parameters[2].type: string
paths./checklists/{idChecklist}/cards/{filter}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./checklists/{idChecklist}/cards/{filter}.get.parameters[3].in: query
paths./checklists/{idChecklist}/cards/{filter}.get.parameters[3].name: token
paths./checklists/{idChecklist}/cards/{filter}.get.parameters[3].required: true
paths./checklists/{idChecklist}/cards/{filter}.get.parameters[3].type: string
paths./checklists/{idChecklist}/cards/{filter}.get.responses.200.description: Success
paths./checklists/{idChecklist}/cards/{filter}.get.responses.400.description: Server
  rejection
paths./checklists/{idChecklist}/cards/{filter}.get.summary: getChecklistsCardsByIdChecklistByFilter()
paths./checklists/{idChecklist}/cards/{filter}.get.tags.length: 1
paths./checklists/{idChecklist}/cards/{filter}.get.tags[0]: checklist
paths./checklists/{idChecklist}/checkItems.get.operationId: getChecklistsCheckItemsByIdChecklist
paths./checklists/{idChecklist}/checkItems.get.parameters.length: 5
paths./checklists/{idChecklist}/checkItems.get.parameters[0].description: idChecklist
paths./checklists/{idChecklist}/checkItems.get.parameters[0].in: path
paths./checklists/{idChecklist}/checkItems.get.parameters[0].name: idChecklist
paths./checklists/{idChecklist}/checkItems.get.parameters[0].required: true
paths./checklists/{idChecklist}/checkItems.get.parameters[0].type: string
paths./checklists/{idChecklist}/checkItems.get.parameters[1].default: all
paths./checklists/{idChecklist}/checkItems.get.parameters[1].description: 'One of:
  all or none'
paths./checklists/{idChecklist}/checkItems.get.parameters[1].in: query
paths./checklists/{idChecklist}/checkItems.get.parameters[1].name: filter
paths./checklists/{idChecklist}/checkItems.get.parameters[1].required: false
paths./checklists/{idChecklist}/checkItems.get.parameters[1].type: string
paths./checklists/{idChecklist}/checkItems.get.parameters[2].default: name, nameData,
  pos and state
paths./checklists/{idChecklist}/checkItems.get.parameters[2].description: 'all or
  a comma-separated list of: name, nameData, pos, state or type'
paths./checklists/{idChecklist}/checkItems.get.parameters[2].in: query
paths./checklists/{idChecklist}/checkItems.get.parameters[2].name: fields
paths./checklists/{idChecklist}/checkItems.get.parameters[2].required: false
paths./checklists/{idChecklist}/checkItems.get.parameters[2].type: string
paths./checklists/{idChecklist}/checkItems.get.parameters[3].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./checklists/{idChecklist}/checkItems.get.parameters[3].in: query
paths./checklists/{idChecklist}/checkItems.get.parameters[3].name: key
paths./checklists/{idChecklist}/checkItems.get.parameters[3].required: true
paths./checklists/{idChecklist}/checkItems.get.parameters[3].type: string
paths./checklists/{idChecklist}/checkItems.get.parameters[4].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./checklists/{idChecklist}/checkItems.get.parameters[4].in: query
paths./checklists/{idChecklist}/checkItems.get.parameters[4].name: token
paths./checklists/{idChecklist}/checkItems.get.parameters[4].required: true
paths./checklists/{idChecklist}/checkItems.get.parameters[4].type: string
paths./checklists/{idChecklist}/checkItems.get.responses.200.description: Success
paths./checklists/{idChecklist}/checkItems.get.responses.400.description: Server rejection
paths./checklists/{idChecklist}/checkItems.get.security.length: 2
paths./checklists/{idChecklist}/checkItems.get.security[0].api_key.length: 0
paths./checklists/{idChecklist}/checkItems.get.security[1].api_token.length: 0
paths./checklists/{idChecklist}/checkItems.get.summary: getChecklistsCheckItemsByIdChecklist()
paths./checklists/{idChecklist}/checkItems.get.tags.length: 1
paths./checklists/{idChecklist}/checkItems.get.tags[0]: checklist
paths./checklists/{idChecklist}/checkItems.post.operationId: addChecklistsCheckItemsByIdChecklist
paths./checklists/{idChecklist}/checkItems.post.parameters.length: 4
paths./checklists/{idChecklist}/checkItems.post.parameters[0].description: idChecklist
paths./checklists/{idChecklist}/checkItems.post.parameters[0].in: path
paths./checklists/{idChecklist}/checkItems.post.parameters[0].name: idChecklist
paths./checklists/{idChecklist}/checkItems.post.parameters[0].required: true
paths./checklists/{idChecklist}/checkItems.post.parameters[0].type: string
paths./checklists/{idChecklist}/checkItems.post.parameters[1].description: Attributes
  of "Checklists Check Items" to be added.
paths./checklists/{idChecklist}/checkItems.post.parameters[1].in: body
paths./checklists/{idChecklist}/checkItems.post.parameters[1].name: body
paths./checklists/{idChecklist}/checkItems.post.parameters[1].required: true
paths./checklists/{idChecklist}/checkItems.post.parameters[1].schema.$ref: '#/definitions/checklists_checkItems'
paths./checklists/{idChecklist}/checkItems.post.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./checklists/{idChecklist}/checkItems.post.parameters[2].in: query
paths./checklists/{idChecklist}/checkItems.post.parameters[2].name: key
paths./checklists/{idChecklist}/checkItems.post.parameters[2].required: true
paths./checklists/{idChecklist}/checkItems.post.parameters[2].type: string
paths./checklists/{idChecklist}/checkItems.post.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./checklists/{idChecklist}/checkItems.post.parameters[3].in: query
paths./checklists/{idChecklist}/checkItems.post.parameters[3].name: token
paths./checklists/{idChecklist}/checkItems.post.parameters[3].required: true
paths./checklists/{idChecklist}/checkItems.post.parameters[3].type: string
paths./checklists/{idChecklist}/checkItems.post.responses.200.description: Success
paths./checklists/{idChecklist}/checkItems.post.responses.400.description: Server
  rejection
paths./checklists/{idChecklist}/checkItems.post.security.length: 2
paths./checklists/{idChecklist}/checkItems.post.security[0].api_key.length: 0
paths./checklists/{idChecklist}/checkItems.post.security[1].api_token.length: 0
paths./checklists/{idChecklist}/checkItems.post.summary: addChecklistsCheckItemsByIdChecklist()
paths./checklists/{idChecklist}/checkItems.post.tags.length: 1
paths./checklists/{idChecklist}/checkItems.post.tags[0]: checklist
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.delete.operationId: deleteChecklistsCheckItemsByIdChecklistByIdCheckItem
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.delete.parameters.length: 4
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.delete.parameters[0].description: idChecklist
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.delete.parameters[0].in: path
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.delete.parameters[0].name: idChecklist
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.delete.parameters[0].required: true
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.delete.parameters[0].type: string
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.delete.parameters[1].description: idCheckItem
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.delete.parameters[1].in: path
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.delete.parameters[1].name: idCheckItem
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.delete.parameters[1].required: true
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.delete.parameters[1].type: string
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.delete.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.delete.parameters[2].in: query
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.delete.parameters[2].name: key
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.delete.parameters[2].required: true
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.delete.parameters[2].type: string
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.delete.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.delete.parameters[3].in: query
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.delete.parameters[3].name: token
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.delete.parameters[3].required: true
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.delete.parameters[3].type: string
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.delete.responses.200.description: Success
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.delete.responses.400.description: Server
  rejection
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.delete.security.length: 2
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.delete.security[0].api_key.length: 0
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.delete.security[1].api_token.length: 0
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.delete.summary: deleteChecklistsCheckItemsByIdChecklistByIdCheckItem()
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.delete.tags.length: 1
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.delete.tags[0]: checklist
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.operationId: getChecklistsCheckItemsByIdChecklistByIdCheckItem
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.parameters.length: 5
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.parameters[0].description: idChecklist
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.parameters[0].in: path
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.parameters[0].name: idChecklist
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.parameters[0].required: true
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.parameters[0].type: string
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.parameters[1].description: idCheckItem
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.parameters[1].in: path
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.parameters[1].name: idCheckItem
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.parameters[1].required: true
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.parameters[1].type: string
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.parameters[2].default: name,
  nameData, pos and state
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.parameters[2].description: 'all
  or a comma-separated list of: name, nameData, pos, state or type'
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.parameters[2].in: query
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.parameters[2].name: fields
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.parameters[2].required: false
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.parameters[2].type: string
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.parameters[3].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.parameters[3].in: query
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.parameters[3].name: key
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.parameters[3].required: true
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.parameters[3].type: string
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.parameters[4].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.parameters[4].in: query
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.parameters[4].name: token
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.parameters[4].required: true
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.parameters[4].type: string
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.responses.200.description: Success
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.responses.400.description: Server
  rejection
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.security.length: 2
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.security[0].api_key.length: 0
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.security[1].api_token.length: 0
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.summary: getChecklistsCheckItemsByIdChecklistByIdCheckItem()
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.tags.length: 1
paths./checklists/{idChecklist}/checkItems/{idCheckItem}.get.tags[0]: checklist
paths./checklists/{idChecklist}/idCard.put.operationId: updateChecklistsIdCardByIdChecklist
paths./checklists/{idChecklist}/idCard.put.parameters.length: 4
paths./checklists/{idChecklist}/idCard.put.parameters[0].description: idChecklist
paths./checklists/{idChecklist}/idCard.put.parameters[0].in: path
paths./checklists/{idChecklist}/idCard.put.parameters[0].name: idChecklist
paths./checklists/{idChecklist}/idCard.put.parameters[0].required: true
paths./checklists/{idChecklist}/idCard.put.parameters[0].type: string
paths./checklists/{idChecklist}/idCard.put.parameters[1].description: Attributes of
  "Checklists Id Card" to be updated.
paths./checklists/{idChecklist}/idCard.put.parameters[1].in: body
paths./checklists/{idChecklist}/idCard.put.parameters[1].name: body
paths./checklists/{idChecklist}/idCard.put.parameters[1].required: true
paths./checklists/{idChecklist}/idCard.put.parameters[1].schema.$ref: '#/definitions/checklists_idCard'
paths./checklists/{idChecklist}/idCard.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./checklists/{idChecklist}/idCard.put.parameters[2].in: query
paths./checklists/{idChecklist}/idCard.put.parameters[2].name: key
paths./checklists/{idChecklist}/idCard.put.parameters[2].required: true
paths./checklists/{idChecklist}/idCard.put.parameters[2].type: string
paths./checklists/{idChecklist}/idCard.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./checklists/{idChecklist}/idCard.put.parameters[3].in: query
paths./checklists/{idChecklist}/idCard.put.parameters[3].name: token
paths./checklists/{idChecklist}/idCard.put.parameters[3].required: true
paths./checklists/{idChecklist}/idCard.put.parameters[3].type: string
paths./checklists/{idChecklist}/idCard.put.responses.200.description: Success
paths./checklists/{idChecklist}/idCard.put.responses.400.description: Server rejection
paths./checklists/{idChecklist}/idCard.put.security.length: 2
paths./checklists/{idChecklist}/idCard.put.security[0].api_key.length: 0
paths./checklists/{idChecklist}/idCard.put.security[1].api_token.length: 0
paths./checklists/{idChecklist}/idCard.put.summary: updateChecklistsIdCardByIdChecklist()
paths./checklists/{idChecklist}/idCard.put.tags.length: 1
paths./checklists/{idChecklist}/idCard.put.tags[0]: checklist
paths./checklists/{idChecklist}/name.put.operationId: updateChecklistsNameByIdChecklist
paths./checklists/{idChecklist}/name.put.parameters.length: 4
paths./checklists/{idChecklist}/name.put.parameters[0].description: idChecklist
paths./checklists/{idChecklist}/name.put.parameters[0].in: path
paths./checklists/{idChecklist}/name.put.parameters[0].name: idChecklist
paths./checklists/{idChecklist}/name.put.parameters[0].required: true
paths./checklists/{idChecklist}/name.put.parameters[0].type: string
paths./checklists/{idChecklist}/name.put.parameters[1].description: Attributes of
  "Checklists Name" to be updated.
paths./checklists/{idChecklist}/name.put.parameters[1].in: body
paths./checklists/{idChecklist}/name.put.parameters[1].name: body
paths./checklists/{idChecklist}/name.put.parameters[1].required: true
paths./checklists/{idChecklist}/name.put.parameters[1].schema.$ref: '#/definitions/checklists_name'
paths./checklists/{idChecklist}/name.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./checklists/{idChecklist}/name.put.parameters[2].in: query
paths./checklists/{idChecklist}/name.put.parameters[2].name: key
paths./checklists/{idChecklist}/name.put.parameters[2].required: true
paths./checklists/{idChecklist}/name.put.parameters[2].type: string
paths./checklists/{idChecklist}/name.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./checklists/{idChecklist}/name.put.parameters[3].in: query
paths./checklists/{idChecklist}/name.put.parameters[3].name: token
paths./checklists/{idChecklist}/name.put.parameters[3].required: true
paths./checklists/{idChecklist}/name.put.parameters[3].type: string
paths./checklists/{idChecklist}/name.put.responses.200.description: Success
paths./checklists/{idChecklist}/name.put.responses.400.description: Server rejection
paths./checklists/{idChecklist}/name.put.security.length: 2
paths./checklists/{idChecklist}/name.put.security[0].api_key.length: 0
paths./checklists/{idChecklist}/name.put.security[1].api_token.length: 0
paths./checklists/{idChecklist}/name.put.summary: updateChecklistsNameByIdChecklist()
paths./checklists/{idChecklist}/name.put.tags.length: 1
paths./checklists/{idChecklist}/name.put.tags[0]: checklist
paths./checklists/{idChecklist}/pos.put.operationId: updateChecklistsPosByIdChecklist
paths./checklists/{idChecklist}/pos.put.parameters.length: 4
paths./checklists/{idChecklist}/pos.put.parameters[0].description: idChecklist
paths./checklists/{idChecklist}/pos.put.parameters[0].in: path
paths./checklists/{idChecklist}/pos.put.parameters[0].name: idChecklist
paths./checklists/{idChecklist}/pos.put.parameters[0].required: true
paths./checklists/{idChecklist}/pos.put.parameters[0].type: string
paths./checklists/{idChecklist}/pos.put.parameters[1].description: Attributes of "Checklists
  Pos" to be updated.
paths./checklists/{idChecklist}/pos.put.parameters[1].in: body
paths./checklists/{idChecklist}/pos.put.parameters[1].name: body
paths./checklists/{idChecklist}/pos.put.parameters[1].required: true
paths./checklists/{idChecklist}/pos.put.parameters[1].schema.$ref: '#/definitions/checklists_pos'
paths./checklists/{idChecklist}/pos.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./checklists/{idChecklist}/pos.put.parameters[2].in: query
paths./checklists/{idChecklist}/pos.put.parameters[2].name: key
paths./checklists/{idChecklist}/pos.put.parameters[2].required: true
paths./checklists/{idChecklist}/pos.put.parameters[2].type: string
paths./checklists/{idChecklist}/pos.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./checklists/{idChecklist}/pos.put.parameters[3].in: query
paths./checklists/{idChecklist}/pos.put.parameters[3].name: token
paths./checklists/{idChecklist}/pos.put.parameters[3].required: true
paths./checklists/{idChecklist}/pos.put.parameters[3].type: string
paths./checklists/{idChecklist}/pos.put.responses.200.description: Success
paths./checklists/{idChecklist}/pos.put.responses.400.description: Server rejection
paths./checklists/{idChecklist}/pos.put.security.length: 2
paths./checklists/{idChecklist}/pos.put.security[0].api_key.length: 0
paths./checklists/{idChecklist}/pos.put.security[1].api_token.length: 0
paths./checklists/{idChecklist}/pos.put.summary: updateChecklistsPosByIdChecklist()
paths./checklists/{idChecklist}/pos.put.tags.length: 1
paths./checklists/{idChecklist}/pos.put.tags[0]: checklist
paths./labels.post.operationId: addLabels
paths./labels.post.parameters.length: 3
paths./labels.post.parameters[0].description: Attributes of "Labels" to be added.
paths./labels.post.parameters[0].in: body
paths./labels.post.parameters[0].name: body
paths./labels.post.parameters[0].required: true
paths./labels.post.parameters[0].schema.$ref: '#/definitions/labels'
paths./labels.post.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./labels.post.parameters[1].in: query
paths./labels.post.parameters[1].name: key
paths./labels.post.parameters[1].required: true
paths./labels.post.parameters[1].type: string
paths./labels.post.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./labels.post.parameters[2].in: query
paths./labels.post.parameters[2].name: token
paths./labels.post.parameters[2].required: true
paths./labels.post.parameters[2].type: string
paths./labels.post.responses.200.description: Success
paths./labels.post.responses.400.description: Server rejection
paths./labels.post.security.length: 2
paths./labels.post.security[0].api_key.length: 0
paths./labels.post.security[1].api_token.length: 0
paths./labels.post.summary: addLabels()
paths./labels.post.tags.length: 1
paths./labels.post.tags[0]: label
paths./labels/{idLabel}.delete.operationId: deleteLabelsByIdLabel
paths./labels/{idLabel}.delete.parameters.length: 3
paths./labels/{idLabel}.delete.parameters[0].description: idLabel
paths./labels/{idLabel}.delete.parameters[0].in: path
paths./labels/{idLabel}.delete.parameters[0].name: idLabel
paths./labels/{idLabel}.delete.parameters[0].required: true
paths./labels/{idLabel}.delete.parameters[0].type: string
paths./labels/{idLabel}.delete.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./labels/{idLabel}.delete.parameters[1].in: query
paths./labels/{idLabel}.delete.parameters[1].name: key
paths./labels/{idLabel}.delete.parameters[1].required: true
paths./labels/{idLabel}.delete.parameters[1].type: string
paths./labels/{idLabel}.delete.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./labels/{idLabel}.delete.parameters[2].in: query
paths./labels/{idLabel}.delete.parameters[2].name: token
paths./labels/{idLabel}.delete.parameters[2].required: true
paths./labels/{idLabel}.delete.parameters[2].type: string
paths./labels/{idLabel}.delete.responses.200.description: Success
paths./labels/{idLabel}.delete.responses.400.description: Server rejection
paths./labels/{idLabel}.delete.security.length: 2
paths./labels/{idLabel}.delete.security[0].api_key.length: 0
paths./labels/{idLabel}.delete.security[1].api_token.length: 0
paths./labels/{idLabel}.delete.summary: deleteLabelsByIdLabel()
paths./labels/{idLabel}.delete.tags.length: 1
paths./labels/{idLabel}.delete.tags[0]: label
paths./labels/{idLabel}.get.operationId: getLabelsByIdLabel
paths./labels/{idLabel}.get.parameters.length: 4
paths./labels/{idLabel}.get.parameters[0].description: idLabel
paths./labels/{idLabel}.get.parameters[0].in: path
paths./labels/{idLabel}.get.parameters[0].name: idLabel
paths./labels/{idLabel}.get.parameters[0].required: true
paths./labels/{idLabel}.get.parameters[0].type: string
paths./labels/{idLabel}.get.parameters[1].default: all
paths./labels/{idLabel}.get.parameters[1].description: 'all or a comma-separated list
  of: color, idBoard, name or uses'
paths./labels/{idLabel}.get.parameters[1].in: query
paths./labels/{idLabel}.get.parameters[1].name: fields
paths./labels/{idLabel}.get.parameters[1].required: false
paths./labels/{idLabel}.get.parameters[1].type: string
paths./labels/{idLabel}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./labels/{idLabel}.get.parameters[2].in: query
paths./labels/{idLabel}.get.parameters[2].name: key
paths./labels/{idLabel}.get.parameters[2].required: true
paths./labels/{idLabel}.get.parameters[2].type: string
paths./labels/{idLabel}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./labels/{idLabel}.get.parameters[3].in: query
paths./labels/{idLabel}.get.parameters[3].name: token
paths./labels/{idLabel}.get.parameters[3].required: true
paths./labels/{idLabel}.get.parameters[3].type: string
paths./labels/{idLabel}.get.responses.200.description: Success
paths./labels/{idLabel}.get.responses.400.description: Server rejection
paths./labels/{idLabel}.get.security.length: 2
paths./labels/{idLabel}.get.security[0].api_key.length: 0
paths./labels/{idLabel}.get.security[1].api_token.length: 0
paths./labels/{idLabel}.get.summary: getLabelsByIdLabel()
paths./labels/{idLabel}.get.tags.length: 1
paths./labels/{idLabel}.get.tags[0]: label
paths./labels/{idLabel}.put.operationId: updateLabelsByIdLabel
paths./labels/{idLabel}.put.parameters.length: 4
paths./labels/{idLabel}.put.parameters[0].description: idLabel
paths./labels/{idLabel}.put.parameters[0].in: path
paths./labels/{idLabel}.put.parameters[0].name: idLabel
paths./labels/{idLabel}.put.parameters[0].required: true
paths./labels/{idLabel}.put.parameters[0].type: string
paths./labels/{idLabel}.put.parameters[1].description: Attributes of "Labels" to be
  updated.
paths./labels/{idLabel}.put.parameters[1].in: body
paths./labels/{idLabel}.put.parameters[1].name: body
paths./labels/{idLabel}.put.parameters[1].required: true
paths./labels/{idLabel}.put.parameters[1].schema.$ref: '#/definitions/labels'
paths./labels/{idLabel}.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./labels/{idLabel}.put.parameters[2].in: query
paths./labels/{idLabel}.put.parameters[2].name: key
paths./labels/{idLabel}.put.parameters[2].required: true
paths./labels/{idLabel}.put.parameters[2].type: string
paths./labels/{idLabel}.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./labels/{idLabel}.put.parameters[3].in: query
paths./labels/{idLabel}.put.parameters[3].name: token
paths./labels/{idLabel}.put.parameters[3].required: true
paths./labels/{idLabel}.put.parameters[3].type: string
paths./labels/{idLabel}.put.responses.200.description: Success
paths./labels/{idLabel}.put.responses.400.description: Server rejection
paths./labels/{idLabel}.put.security.length: 2
paths./labels/{idLabel}.put.security[0].api_key.length: 0
paths./labels/{idLabel}.put.security[1].api_token.length: 0
paths./labels/{idLabel}.put.summary: updateLabelsByIdLabel()
paths./labels/{idLabel}.put.tags.length: 1
paths./labels/{idLabel}.put.tags[0]: label
paths./labels/{idLabel}/board.get.operationId: getLabelsBoardByIdLabel
paths./labels/{idLabel}/board.get.parameters.length: 4
paths./labels/{idLabel}/board.get.parameters[0].description: idLabel
paths./labels/{idLabel}/board.get.parameters[0].in: path
paths./labels/{idLabel}/board.get.parameters[0].name: idLabel
paths./labels/{idLabel}/board.get.parameters[0].required: true
paths./labels/{idLabel}/board.get.parameters[0].type: string
paths./labels/{idLabel}/board.get.parameters[1].default: all
paths./labels/{idLabel}/board.get.parameters[1].description: 'all or a comma-separated
  list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization,
  invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
  shortUrl, starred, subscribed or url'
paths./labels/{idLabel}/board.get.parameters[1].in: query
paths./labels/{idLabel}/board.get.parameters[1].name: fields
paths./labels/{idLabel}/board.get.parameters[1].required: false
paths./labels/{idLabel}/board.get.parameters[1].type: string
paths./labels/{idLabel}/board.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./labels/{idLabel}/board.get.parameters[2].in: query
paths./labels/{idLabel}/board.get.parameters[2].name: key
paths./labels/{idLabel}/board.get.parameters[2].required: true
paths./labels/{idLabel}/board.get.parameters[2].type: string
paths./labels/{idLabel}/board.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./labels/{idLabel}/board.get.parameters[3].in: query
paths./labels/{idLabel}/board.get.parameters[3].name: token
paths./labels/{idLabel}/board.get.parameters[3].required: true
paths./labels/{idLabel}/board.get.parameters[3].type: string
paths./labels/{idLabel}/board.get.responses.200.description: Success
paths./labels/{idLabel}/board.get.responses.400.description: Server rejection
paths./labels/{idLabel}/board.get.security.length: 2
paths./labels/{idLabel}/board.get.security[0].api_key.length: 0
paths./labels/{idLabel}/board.get.security[1].api_token.length: 0
paths./labels/{idLabel}/board.get.summary: getLabelsBoardByIdLabel()
paths./labels/{idLabel}/board.get.tags.length: 1
paths./labels/{idLabel}/board.get.tags[0]: label
paths./labels/{idLabel}/board/{field}.get.operationId: getLabelsBoardByIdLabelByField
paths./labels/{idLabel}/board/{field}.get.parameters.length: 4
paths./labels/{idLabel}/board/{field}.get.parameters[0].description: idLabel
paths./labels/{idLabel}/board/{field}.get.parameters[0].in: path
paths./labels/{idLabel}/board/{field}.get.parameters[0].name: idLabel
paths./labels/{idLabel}/board/{field}.get.parameters[0].required: true
paths./labels/{idLabel}/board/{field}.get.parameters[0].type: string
paths./labels/{idLabel}/board/{field}.get.parameters[1].description: field
paths./labels/{idLabel}/board/{field}.get.parameters[1].in: path
paths./labels/{idLabel}/board/{field}.get.parameters[1].name: field
paths./labels/{idLabel}/board/{field}.get.parameters[1].required: true
paths./labels/{idLabel}/board/{field}.get.parameters[1].type: string
paths./labels/{idLabel}/board/{field}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./labels/{idLabel}/board/{field}.get.parameters[2].in: query
paths./labels/{idLabel}/board/{field}.get.parameters[2].name: key
paths./labels/{idLabel}/board/{field}.get.parameters[2].required: true
paths./labels/{idLabel}/board/{field}.get.parameters[2].type: string
paths./labels/{idLabel}/board/{field}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./labels/{idLabel}/board/{field}.get.parameters[3].in: query
paths./labels/{idLabel}/board/{field}.get.parameters[3].name: token
paths./labels/{idLabel}/board/{field}.get.parameters[3].required: true
paths./labels/{idLabel}/board/{field}.get.parameters[3].type: string
paths./labels/{idLabel}/board/{field}.get.responses.200.description: Success
paths./labels/{idLabel}/board/{field}.get.responses.400.description: Server rejection
paths./labels/{idLabel}/board/{field}.get.security.length: 2
paths./labels/{idLabel}/board/{field}.get.security[0].api_key.length: 0
paths./labels/{idLabel}/board/{field}.get.security[1].api_token.length: 0
paths./labels/{idLabel}/board/{field}.get.summary: getLabelsBoardByIdLabelByField()
paths./labels/{idLabel}/board/{field}.get.tags.length: 1
paths./labels/{idLabel}/board/{field}.get.tags[0]: label
paths./labels/{idLabel}/color.put.operationId: updateLabelsColorByIdLabel
paths./labels/{idLabel}/color.put.parameters.length: 4
paths./labels/{idLabel}/color.put.parameters[0].description: idLabel
paths./labels/{idLabel}/color.put.parameters[0].in: path
paths./labels/{idLabel}/color.put.parameters[0].name: idLabel
paths./labels/{idLabel}/color.put.parameters[0].required: true
paths./labels/{idLabel}/color.put.parameters[0].type: string
paths./labels/{idLabel}/color.put.parameters[1].description: Attributes of "Labels
  Color" to be updated.
paths./labels/{idLabel}/color.put.parameters[1].in: body
paths./labels/{idLabel}/color.put.parameters[1].name: body
paths./labels/{idLabel}/color.put.parameters[1].required: true
paths./labels/{idLabel}/color.put.parameters[1].schema.$ref: '#/definitions/labels_color'
paths./labels/{idLabel}/color.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./labels/{idLabel}/color.put.parameters[2].in: query
paths./labels/{idLabel}/color.put.parameters[2].name: key
paths./labels/{idLabel}/color.put.parameters[2].required: true
paths./labels/{idLabel}/color.put.parameters[2].type: string
paths./labels/{idLabel}/color.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./labels/{idLabel}/color.put.parameters[3].in: query
paths./labels/{idLabel}/color.put.parameters[3].name: token
paths./labels/{idLabel}/color.put.parameters[3].required: true
paths./labels/{idLabel}/color.put.parameters[3].type: string
paths./labels/{idLabel}/color.put.responses.200.description: Success
paths./labels/{idLabel}/color.put.responses.400.description: Server rejection
paths./labels/{idLabel}/color.put.security.length: 2
paths./labels/{idLabel}/color.put.security[0].api_key.length: 0
paths./labels/{idLabel}/color.put.security[1].api_token.length: 0
paths./labels/{idLabel}/color.put.summary: updateLabelsColorByIdLabel()
paths./labels/{idLabel}/color.put.tags.length: 1
paths./labels/{idLabel}/color.put.tags[0]: label
paths./labels/{idLabel}/name.put.operationId: updateLabelsNameByIdLabel
paths./labels/{idLabel}/name.put.parameters.length: 4
paths./labels/{idLabel}/name.put.parameters[0].description: idLabel
paths./labels/{idLabel}/name.put.parameters[0].in: path
paths./labels/{idLabel}/name.put.parameters[0].name: idLabel
paths./labels/{idLabel}/name.put.parameters[0].required: true
paths./labels/{idLabel}/name.put.parameters[0].type: string
paths./labels/{idLabel}/name.put.parameters[1].description: Attributes of "Labels
  Name" to be updated.
paths./labels/{idLabel}/name.put.parameters[1].in: body
paths./labels/{idLabel}/name.put.parameters[1].name: body
paths./labels/{idLabel}/name.put.parameters[1].required: true
paths./labels/{idLabel}/name.put.parameters[1].schema.$ref: '#/definitions/labels_name'
paths./labels/{idLabel}/name.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./labels/{idLabel}/name.put.parameters[2].in: query
paths./labels/{idLabel}/name.put.parameters[2].name: key
paths./labels/{idLabel}/name.put.parameters[2].required: true
paths./labels/{idLabel}/name.put.parameters[2].type: string
paths./labels/{idLabel}/name.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./labels/{idLabel}/name.put.parameters[3].in: query
paths./labels/{idLabel}/name.put.parameters[3].name: token
paths./labels/{idLabel}/name.put.parameters[3].required: true
paths./labels/{idLabel}/name.put.parameters[3].type: string
paths./labels/{idLabel}/name.put.responses.200.description: Success
paths./labels/{idLabel}/name.put.responses.400.description: Server rejection
paths./labels/{idLabel}/name.put.security.length: 2
paths./labels/{idLabel}/name.put.security[0].api_key.length: 0
paths./labels/{idLabel}/name.put.security[1].api_token.length: 0
paths./labels/{idLabel}/name.put.summary: updateLabelsNameByIdLabel()
paths./labels/{idLabel}/name.put.tags.length: 1
paths./labels/{idLabel}/name.put.tags[0]: label
paths./lists.post.operationId: addLists
paths./lists.post.parameters.length: 3
paths./lists.post.parameters[0].description: Attributes of "Lists" to be added.
paths./lists.post.parameters[0].in: body
paths./lists.post.parameters[0].name: body
paths./lists.post.parameters[0].required: true
paths./lists.post.parameters[0].schema.$ref: '#/definitions/lists'
paths./lists.post.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./lists.post.parameters[1].in: query
paths./lists.post.parameters[1].name: key
paths./lists.post.parameters[1].required: true
paths./lists.post.parameters[1].type: string
paths./lists.post.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./lists.post.parameters[2].in: query
paths./lists.post.parameters[2].name: token
paths./lists.post.parameters[2].required: true
paths./lists.post.parameters[2].type: string
paths./lists.post.responses.200.description: Success
paths./lists.post.responses.400.description: Server rejection
paths./lists.post.security.length: 2
paths./lists.post.security[0].api_key.length: 0
paths./lists.post.security[1].api_token.length: 0
paths./lists.post.summary: addLists()
paths./lists.post.tags.length: 1
paths./lists.post.tags[0]: list
paths./lists/{idList}.get.operationId: getListsByIdList
paths./lists/{idList}.get.parameters.length: 8
paths./lists/{idList}.get.parameters[0].description: idList
paths./lists/{idList}.get.parameters[0].in: path
paths./lists/{idList}.get.parameters[0].name: idList
paths./lists/{idList}.get.parameters[0].required: true
paths./lists/{idList}.get.parameters[0].type: string
paths./lists/{idList}.get.parameters[1].default: none
paths./lists/{idList}.get.parameters[1].description: 'One of: all, closed, none or
  open'
paths./lists/{idList}.get.parameters[1].in: query
paths./lists/{idList}.get.parameters[1].name: cards
paths./lists/{idList}.get.parameters[1].required: false
paths./lists/{idList}.get.parameters[1].type: string
paths./lists/{idList}.get.parameters[2].default: all
paths./lists/{idList}.get.parameters[2].description: 'all or a comma-separated list
  of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email,
  idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
  idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed
  or url'
paths./lists/{idList}.get.parameters[2].in: query
paths./lists/{idList}.get.parameters[2].name: card_fields
paths./lists/{idList}.get.parameters[2].required: false
paths./lists/{idList}.get.parameters[2].type: string
paths./lists/{idList}.get.parameters[3].description: ' true or false'
paths./lists/{idList}.get.parameters[3].in: query
paths./lists/{idList}.get.parameters[3].name: board
paths./lists/{idList}.get.parameters[3].required: false
paths./lists/{idList}.get.parameters[3].type: string
paths./lists/{idList}.get.parameters[4].default: name, desc, descData, closed, idOrganization,
  pinned, url and prefs
paths./lists/{idList}.get.parameters[4].description: 'all or a comma-separated list
  of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations,
  invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl,
  starred, subscribed or url'
paths./lists/{idList}.get.parameters[4].in: query
paths./lists/{idList}.get.parameters[4].name: board_fields
paths./lists/{idList}.get.parameters[4].required: false
paths./lists/{idList}.get.parameters[4].type: string
paths./lists/{idList}.get.parameters[5].default: name, closed, idBoard and pos
paths./lists/{idList}.get.parameters[5].description: 'all or a comma-separated list
  of: closed, idBoard, name, pos or subscribed'
paths./lists/{idList}.get.parameters[5].in: query
paths./lists/{idList}.get.parameters[5].name: fields
paths./lists/{idList}.get.parameters[5].required: false
paths./lists/{idList}.get.parameters[5].type: string
paths./lists/{idList}.get.parameters[6].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./lists/{idList}.get.parameters[6].in: query
paths./lists/{idList}.get.parameters[6].name: key
paths./lists/{idList}.get.parameters[6].required: true
paths./lists/{idList}.get.parameters[6].type: string
paths./lists/{idList}.get.parameters[7].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./lists/{idList}.get.parameters[7].in: query
paths./lists/{idList}.get.parameters[7].name: token
paths./lists/{idList}.get.parameters[7].required: true
paths./lists/{idList}.get.parameters[7].type: string
paths./lists/{idList}.get.responses.200.description: Success
paths./lists/{idList}.get.responses.400.description: Server rejection
paths./lists/{idList}.get.security.length: 2
paths./lists/{idList}.get.security[0].api_key.length: 0
paths./lists/{idList}.get.security[1].api_token.length: 0
paths./lists/{idList}.get.summary: getListsByIdList()
paths./lists/{idList}.get.tags.length: 1
paths./lists/{idList}.get.tags[0]: list
paths./lists/{idList}.put.operationId: updateListsByIdList
paths./lists/{idList}.put.parameters.length: 4
paths./lists/{idList}.put.parameters[0].description: idList
paths./lists/{idList}.put.parameters[0].in: path
paths./lists/{idList}.put.parameters[0].name: idList
paths./lists/{idList}.put.parameters[0].required: true
paths./lists/{idList}.put.parameters[0].type: string
paths./lists/{idList}.put.parameters[1].description: Attributes of "Lists" to be updated.
paths./lists/{idList}.put.parameters[1].in: body
paths./lists/{idList}.put.parameters[1].name: body
paths./lists/{idList}.put.parameters[1].required: true
paths./lists/{idList}.put.parameters[1].schema.$ref: '#/definitions/lists'
paths./lists/{idList}.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./lists/{idList}.put.parameters[2].in: query
paths./lists/{idList}.put.parameters[2].name: key
paths./lists/{idList}.put.parameters[2].required: true
paths./lists/{idList}.put.parameters[2].type: string
paths./lists/{idList}.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./lists/{idList}.put.parameters[3].in: query
paths./lists/{idList}.put.parameters[3].name: token
paths./lists/{idList}.put.parameters[3].required: true
paths./lists/{idList}.put.parameters[3].type: string
paths./lists/{idList}.put.responses.200.description: Success
paths./lists/{idList}.put.responses.400.description: Server rejection
paths./lists/{idList}.put.security.length: 2
paths./lists/{idList}.put.security[0].api_key.length: 0
paths./lists/{idList}.put.security[1].api_token.length: 0
paths./lists/{idList}.put.summary: updateListsByIdList()
paths./lists/{idList}.put.tags.length: 1
paths./lists/{idList}.put.tags[0]: list
paths./lists/{idList}/{field}.get.operationId: getListsByIdListByField
paths./lists/{idList}/{field}.get.parameters.length: 4
paths./lists/{idList}/{field}.get.parameters[0].description: idList
paths./lists/{idList}/{field}.get.parameters[0].in: path
paths./lists/{idList}/{field}.get.parameters[0].name: idList
paths./lists/{idList}/{field}.get.parameters[0].required: true
paths./lists/{idList}/{field}.get.parameters[0].type: string
paths./lists/{idList}/{field}.get.parameters[1].description: field
paths./lists/{idList}/{field}.get.parameters[1].in: path
paths./lists/{idList}/{field}.get.parameters[1].name: field
paths./lists/{idList}/{field}.get.parameters[1].required: true
paths./lists/{idList}/{field}.get.parameters[1].type: string
paths./lists/{idList}/{field}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./lists/{idList}/{field}.get.parameters[2].in: query
paths./lists/{idList}/{field}.get.parameters[2].name: key
paths./lists/{idList}/{field}.get.parameters[2].required: true
paths./lists/{idList}/{field}.get.parameters[2].type: string
paths./lists/{idList}/{field}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./lists/{idList}/{field}.get.parameters[3].in: query
paths./lists/{idList}/{field}.get.parameters[3].name: token
paths./lists/{idList}/{field}.get.parameters[3].required: true
paths./lists/{idList}/{field}.get.parameters[3].type: string
paths./lists/{idList}/{field}.get.responses.200.description: Success
paths./lists/{idList}/{field}.get.responses.400.description: Server rejection
paths./lists/{idList}/{field}.get.summary: getListsByIdListByField()
paths./lists/{idList}/{field}.get.tags.length: 1
paths./lists/{idList}/{field}.get.tags[0]: list
paths./lists/{idList}/actions.get.operationId: getListsActionsByIdList
paths./lists/{idList}/actions.get.parameters.length: 17
paths./lists/{idList}/actions.get.parameters[0].description: idList
paths./lists/{idList}/actions.get.parameters[0].in: path
paths./lists/{idList}/actions.get.parameters[0].name: idList
paths./lists/{idList}/actions.get.parameters[0].required: true
paths./lists/{idList}/actions.get.parameters[0].type: string
paths./lists/{idList}/actions.get.parameters[1].description: ' true or false'
paths./lists/{idList}/actions.get.parameters[1].in: query
paths./lists/{idList}/actions.get.parameters[1].name: entities
paths./lists/{idList}/actions.get.parameters[1].required: false
paths./lists/{idList}/actions.get.parameters[1].type: string
paths./lists/{idList}/actions.get.parameters[2].description: ' true or false'
paths./lists/{idList}/actions.get.parameters[2].in: query
paths./lists/{idList}/actions.get.parameters[2].name: display
paths./lists/{idList}/actions.get.parameters[2].required: false
paths./lists/{idList}/actions.get.parameters[2].type: string
paths./lists/{idList}/actions.get.parameters[3].default: all
paths./lists/{idList}/actions.get.parameters[3].description: 'all or a comma-separated
  list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard,
  addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem,
  copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization,
  deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation,
  disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
  makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard,
  moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,
  removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
  updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,
  updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed,
  updateList:name, updateMember or updateOrganization'
paths./lists/{idList}/actions.get.parameters[3].in: query
paths./lists/{idList}/actions.get.parameters[3].name: filter
paths./lists/{idList}/actions.get.parameters[3].required: false
paths./lists/{idList}/actions.get.parameters[3].type: string
paths./lists/{idList}/actions.get.parameters[4].default: all
paths./lists/{idList}/actions.get.parameters[4].description: 'all or a comma-separated
  list of: data, date, idMemberCreator or type'
paths./lists/{idList}/actions.get.parameters[4].in: query
paths./lists/{idList}/actions.get.parameters[4].name: fields
paths./lists/{idList}/actions.get.parameters[4].required: false
paths./lists/{idList}/actions.get.parameters[4].type: string
paths./lists/{idList}/actions.get.parameters[5].default: "50"
paths./lists/{idList}/actions.get.parameters[5].description: a number from 0 to 1000
paths./lists/{idList}/actions.get.parameters[5].in: query
paths./lists/{idList}/actions.get.parameters[5].name: limit
paths./lists/{idList}/actions.get.parameters[5].required: false
paths./lists/{idList}/actions.get.parameters[5].type: string
paths./lists/{idList}/actions.get.parameters[6].default: list
paths./lists/{idList}/actions.get.parameters[6].description: 'One of: count, list
  or minimal'
paths./lists/{idList}/actions.get.parameters[6].in: query
paths./lists/{idList}/actions.get.parameters[6].name: format
paths./lists/{idList}/actions.get.parameters[6].required: false
paths./lists/{idList}/actions.get.parameters[6].type: string
paths./lists/{idList}/actions.get.parameters[7].description: A date, null or lastView
paths./lists/{idList}/actions.get.parameters[7].in: query
paths./lists/{idList}/actions.get.parameters[7].name: since
paths./lists/{idList}/actions.get.parameters[7].required: false
paths./lists/{idList}/actions.get.parameters[7].type: string
paths./lists/{idList}/actions.get.parameters[8].description: A date, or null
paths./lists/{idList}/actions.get.parameters[8].in: query
paths./lists/{idList}/actions.get.parameters[8].name: before
paths./lists/{idList}/actions.get.parameters[8].required: false
paths./lists/{idList}/actions.get.parameters[8].type: string
paths./lists/{idList}/actions.get.parameters[9].default: "0"
paths./lists/{idList}/actions.get.parameters[9].description: Page * limit must be
  less than 1000
paths./lists/{idList}/actions.get.parameters[9].in: query
paths./lists/{idList}/actions.get.parameters[9].name: page
paths./lists/{idList}/actions.get.parameters[9].required: false
paths./lists/{idList}/actions.get.parameters[9].type: string
paths./lists/{idList}/actions.get.parameters[10].description: Only return actions
  related to these model ids
paths./lists/{idList}/actions.get.parameters[10].in: query
paths./lists/{idList}/actions.get.parameters[10].name: idModels
paths./lists/{idList}/actions.get.parameters[10].required: false
paths./lists/{idList}/actions.get.parameters[10].type: string
paths./lists/{idList}/actions.get.parameters[11].description: ' true or false'
paths./lists/{idList}/actions.get.parameters[11].in: query
paths./lists/{idList}/actions.get.parameters[11].name: member
paths./lists/{idList}/actions.get.parameters[11].required: false
paths./lists/{idList}/actions.get.parameters[11].type: string
paths./lists/{idList}/actions.get.parameters[12].default: avatarHash, fullName, initials
  and username
paths./lists/{idList}/actions.get.parameters[12].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./lists/{idList}/actions.get.parameters[12].in: query
paths./lists/{idList}/actions.get.parameters[12].name: member_fields
paths./lists/{idList}/actions.get.parameters[12].required: false
paths./lists/{idList}/actions.get.parameters[12].type: string
paths./lists/{idList}/actions.get.parameters[13].description: ' true or false'
paths./lists/{idList}/actions.get.parameters[13].in: query
paths./lists/{idList}/actions.get.parameters[13].name: memberCreator
paths./lists/{idList}/actions.get.parameters[13].required: false
paths./lists/{idList}/actions.get.parameters[13].type: string
paths./lists/{idList}/actions.get.parameters[14].default: avatarHash, fullName, initials
  and username
paths./lists/{idList}/actions.get.parameters[14].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./lists/{idList}/actions.get.parameters[14].in: query
paths./lists/{idList}/actions.get.parameters[14].name: memberCreator_fields
paths./lists/{idList}/actions.get.parameters[14].required: false
paths./lists/{idList}/actions.get.parameters[14].type: string
paths./lists/{idList}/actions.get.parameters[15].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./lists/{idList}/actions.get.parameters[15].in: query
paths./lists/{idList}/actions.get.parameters[15].name: key
paths./lists/{idList}/actions.get.parameters[15].required: true
paths./lists/{idList}/actions.get.parameters[15].type: string
paths./lists/{idList}/actions.get.parameters[16].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./lists/{idList}/actions.get.parameters[16].in: query
paths./lists/{idList}/actions.get.parameters[16].name: token
paths./lists/{idList}/actions.get.parameters[16].required: true
paths./lists/{idList}/actions.get.parameters[16].type: string
paths./lists/{idList}/actions.get.responses.200.description: Success
paths./lists/{idList}/actions.get.responses.400.description: Server rejection
paths./lists/{idList}/actions.get.security.length: 2
paths./lists/{idList}/actions.get.security[0].api_key.length: 0
paths./lists/{idList}/actions.get.security[1].api_token.length: 0
paths./lists/{idList}/actions.get.summary: getListsActionsByIdList()
paths./lists/{idList}/actions.get.tags.length: 1
paths./lists/{idList}/actions.get.tags[0]: list
paths./lists/{idList}/archiveAllCards.post.operationId: addListsArchiveAllCardsByIdList
paths./lists/{idList}/archiveAllCards.post.parameters.length: 3
paths./lists/{idList}/archiveAllCards.post.parameters[0].description: idList
paths./lists/{idList}/archiveAllCards.post.parameters[0].in: path
paths./lists/{idList}/archiveAllCards.post.parameters[0].name: idList
paths./lists/{idList}/archiveAllCards.post.parameters[0].required: true
paths./lists/{idList}/archiveAllCards.post.parameters[0].type: string
paths./lists/{idList}/archiveAllCards.post.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./lists/{idList}/archiveAllCards.post.parameters[1].in: query
paths./lists/{idList}/archiveAllCards.post.parameters[1].name: key
paths./lists/{idList}/archiveAllCards.post.parameters[1].required: true
paths./lists/{idList}/archiveAllCards.post.parameters[1].type: string
paths./lists/{idList}/archiveAllCards.post.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./lists/{idList}/archiveAllCards.post.parameters[2].in: query
paths./lists/{idList}/archiveAllCards.post.parameters[2].name: token
paths./lists/{idList}/archiveAllCards.post.parameters[2].required: true
paths./lists/{idList}/archiveAllCards.post.parameters[2].type: string
paths./lists/{idList}/archiveAllCards.post.responses.200.description: Success
paths./lists/{idList}/archiveAllCards.post.responses.400.description: Server rejection
paths./lists/{idList}/archiveAllCards.post.security.length: 2
paths./lists/{idList}/archiveAllCards.post.security[0].api_key.length: 0
paths./lists/{idList}/archiveAllCards.post.security[1].api_token.length: 0
paths./lists/{idList}/archiveAllCards.post.summary: addListsArchiveAllCardsByIdList()
paths./lists/{idList}/archiveAllCards.post.tags.length: 1
paths./lists/{idList}/archiveAllCards.post.tags[0]: list
paths./lists/{idList}/board.get.operationId: getListsBoardByIdList
paths./lists/{idList}/board.get.parameters.length: 4
paths./lists/{idList}/board.get.parameters[0].description: idList
paths./lists/{idList}/board.get.parameters[0].in: path
paths./lists/{idList}/board.get.parameters[0].name: idList
paths./lists/{idList}/board.get.parameters[0].required: true
paths./lists/{idList}/board.get.parameters[0].type: string
paths./lists/{idList}/board.get.parameters[1].default: all
paths./lists/{idList}/board.get.parameters[1].description: 'all or a comma-separated
  list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization,
  invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
  shortUrl, starred, subscribed or url'
paths./lists/{idList}/board.get.parameters[1].in: query
paths./lists/{idList}/board.get.parameters[1].name: fields
paths./lists/{idList}/board.get.parameters[1].required: false
paths./lists/{idList}/board.get.parameters[1].type: string
paths./lists/{idList}/board.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./lists/{idList}/board.get.parameters[2].in: query
paths./lists/{idList}/board.get.parameters[2].name: key
paths./lists/{idList}/board.get.parameters[2].required: true
paths./lists/{idList}/board.get.parameters[2].type: string
paths./lists/{idList}/board.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./lists/{idList}/board.get.parameters[3].in: query
paths./lists/{idList}/board.get.parameters[3].name: token
paths./lists/{idList}/board.get.parameters[3].required: true
paths./lists/{idList}/board.get.parameters[3].type: string
paths./lists/{idList}/board.get.responses.200.description: Success
paths./lists/{idList}/board.get.responses.400.description: Server rejection
paths./lists/{idList}/board.get.security.length: 2
paths./lists/{idList}/board.get.security[0].api_key.length: 0
paths./lists/{idList}/board.get.security[1].api_token.length: 0
paths./lists/{idList}/board.get.summary: getListsBoardByIdList()
paths./lists/{idList}/board.get.tags.length: 1
paths./lists/{idList}/board.get.tags[0]: list
paths./lists/{idList}/board/{field}.get.operationId: getListsBoardByIdListByField
paths./lists/{idList}/board/{field}.get.parameters.length: 4
paths./lists/{idList}/board/{field}.get.parameters[0].description: idList
paths./lists/{idList}/board/{field}.get.parameters[0].in: path
paths./lists/{idList}/board/{field}.get.parameters[0].name: idList
paths./lists/{idList}/board/{field}.get.parameters[0].required: true
paths./lists/{idList}/board/{field}.get.parameters[0].type: string
paths./lists/{idList}/board/{field}.get.parameters[1].description: field
paths./lists/{idList}/board/{field}.get.parameters[1].in: path
paths./lists/{idList}/board/{field}.get.parameters[1].name: field
paths./lists/{idList}/board/{field}.get.parameters[1].required: true
paths./lists/{idList}/board/{field}.get.parameters[1].type: string
paths./lists/{idList}/board/{field}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./lists/{idList}/board/{field}.get.parameters[2].in: query
paths./lists/{idList}/board/{field}.get.parameters[2].name: key
paths./lists/{idList}/board/{field}.get.parameters[2].required: true
paths./lists/{idList}/board/{field}.get.parameters[2].type: string
paths./lists/{idList}/board/{field}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./lists/{idList}/board/{field}.get.parameters[3].in: query
paths./lists/{idList}/board/{field}.get.parameters[3].name: token
paths./lists/{idList}/board/{field}.get.parameters[3].required: true
paths./lists/{idList}/board/{field}.get.parameters[3].type: string
paths./lists/{idList}/board/{field}.get.responses.200.description: Success
paths./lists/{idList}/board/{field}.get.responses.400.description: Server rejection
paths./lists/{idList}/board/{field}.get.security.length: 2
paths./lists/{idList}/board/{field}.get.security[0].api_key.length: 0
paths./lists/{idList}/board/{field}.get.security[1].api_token.length: 0
paths./lists/{idList}/board/{field}.get.summary: getListsBoardByIdListByField()
paths./lists/{idList}/board/{field}.get.tags.length: 1
paths./lists/{idList}/board/{field}.get.tags[0]: list
paths./lists/{idList}/cards.get.operationId: getListsCardsByIdList
paths./lists/{idList}/cards.get.parameters.length: 16
paths./lists/{idList}/cards.get.parameters[0].description: idList
paths./lists/{idList}/cards.get.parameters[0].in: path
paths./lists/{idList}/cards.get.parameters[0].name: idList
paths./lists/{idList}/cards.get.parameters[0].required: true
paths./lists/{idList}/cards.get.parameters[0].type: string
paths./lists/{idList}/cards.get.parameters[1].description: 'all or a comma-separated
  list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard,
  addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem,
  copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization,
  deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation,
  disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
  makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard,
  moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,
  removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
  updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,
  updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed,
  updateList:name, updateMember or updateOrganization'
paths./lists/{idList}/cards.get.parameters[1].in: query
paths./lists/{idList}/cards.get.parameters[1].name: actions
paths./lists/{idList}/cards.get.parameters[1].required: false
paths./lists/{idList}/cards.get.parameters[1].type: string
paths./lists/{idList}/cards.get.parameters[2].description: A boolean value or &quot;cover&quot;
  for only card cover attachments
paths./lists/{idList}/cards.get.parameters[2].in: query
paths./lists/{idList}/cards.get.parameters[2].name: attachments
paths./lists/{idList}/cards.get.parameters[2].required: false
paths./lists/{idList}/cards.get.parameters[2].type: string
paths./lists/{idList}/cards.get.parameters[3].default: all
paths./lists/{idList}/cards.get.parameters[3].description: 'all or a comma-separated
  list of: bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews or
  url'
paths./lists/{idList}/cards.get.parameters[3].in: query
paths./lists/{idList}/cards.get.parameters[3].name: attachment_fields
paths./lists/{idList}/cards.get.parameters[3].required: false
paths./lists/{idList}/cards.get.parameters[3].type: string
paths./lists/{idList}/cards.get.parameters[4].description: ' true or false'
paths./lists/{idList}/cards.get.parameters[4].in: query
paths./lists/{idList}/cards.get.parameters[4].name: stickers
paths./lists/{idList}/cards.get.parameters[4].required: false
paths./lists/{idList}/cards.get.parameters[4].type: string
paths./lists/{idList}/cards.get.parameters[5].description: ' true or false'
paths./lists/{idList}/cards.get.parameters[5].in: query
paths./lists/{idList}/cards.get.parameters[5].name: members
paths./lists/{idList}/cards.get.parameters[5].required: false
paths./lists/{idList}/cards.get.parameters[5].type: string
paths./lists/{idList}/cards.get.parameters[6].default: avatarHash, fullName, initials
  and username
paths./lists/{idList}/cards.get.parameters[6].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./lists/{idList}/cards.get.parameters[6].in: query
paths./lists/{idList}/cards.get.parameters[6].name: member_fields
paths./lists/{idList}/cards.get.parameters[6].required: false
paths./lists/{idList}/cards.get.parameters[6].type: string
paths./lists/{idList}/cards.get.parameters[7].description: ' true or false'
paths./lists/{idList}/cards.get.parameters[7].in: query
paths./lists/{idList}/cards.get.parameters[7].name: checkItemStates
paths./lists/{idList}/cards.get.parameters[7].required: false
paths./lists/{idList}/cards.get.parameters[7].type: string
paths./lists/{idList}/cards.get.parameters[8].default: none
paths./lists/{idList}/cards.get.parameters[8].description: 'One of: all or none'
paths./lists/{idList}/cards.get.parameters[8].in: query
paths./lists/{idList}/cards.get.parameters[8].name: checklists
paths./lists/{idList}/cards.get.parameters[8].required: false
paths./lists/{idList}/cards.get.parameters[8].type: string
paths./lists/{idList}/cards.get.parameters[9].description: a number from 1 to 1000
paths./lists/{idList}/cards.get.parameters[9].in: query
paths./lists/{idList}/cards.get.parameters[9].name: limit
paths./lists/{idList}/cards.get.parameters[9].required: false
paths./lists/{idList}/cards.get.parameters[9].type: string
paths./lists/{idList}/cards.get.parameters[10].description: A date, or null
paths./lists/{idList}/cards.get.parameters[10].in: query
paths./lists/{idList}/cards.get.parameters[10].name: since
paths./lists/{idList}/cards.get.parameters[10].required: false
paths./lists/{idList}/cards.get.parameters[10].type: string
paths./lists/{idList}/cards.get.parameters[11].description: A date, or null
paths./lists/{idList}/cards.get.parameters[11].in: query
paths./lists/{idList}/cards.get.parameters[11].name: before
paths./lists/{idList}/cards.get.parameters[11].required: false
paths./lists/{idList}/cards.get.parameters[11].type: string
paths./lists/{idList}/cards.get.parameters[12].default: open
paths./lists/{idList}/cards.get.parameters[12].description: 'One of: all, closed,
  none or open'
paths./lists/{idList}/cards.get.parameters[12].in: query
paths./lists/{idList}/cards.get.parameters[12].name: filter
paths./lists/{idList}/cards.get.parameters[12].required: false
paths./lists/{idList}/cards.get.parameters[12].type: string
paths./lists/{idList}/cards.get.parameters[13].default: all
paths./lists/{idList}/cards.get.parameters[13].description: 'all or a comma-separated
  list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due,
  email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
  idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed
  or url'
paths./lists/{idList}/cards.get.parameters[13].in: query
paths./lists/{idList}/cards.get.parameters[13].name: fields
paths./lists/{idList}/cards.get.parameters[13].required: false
paths./lists/{idList}/cards.get.parameters[13].type: string
paths./lists/{idList}/cards.get.parameters[14].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./lists/{idList}/cards.get.parameters[14].in: query
paths./lists/{idList}/cards.get.parameters[14].name: key
paths./lists/{idList}/cards.get.parameters[14].required: true
paths./lists/{idList}/cards.get.parameters[14].type: string
paths./lists/{idList}/cards.get.parameters[15].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./lists/{idList}/cards.get.parameters[15].in: query
paths./lists/{idList}/cards.get.parameters[15].name: token
paths./lists/{idList}/cards.get.parameters[15].required: true
paths./lists/{idList}/cards.get.parameters[15].type: string
paths./lists/{idList}/cards.get.responses.200.description: Success
paths./lists/{idList}/cards.get.responses.400.description: Server rejection
paths./lists/{idList}/cards.get.security.length: 2
paths./lists/{idList}/cards.get.security[0].api_key.length: 0
paths./lists/{idList}/cards.get.security[1].api_token.length: 0
paths./lists/{idList}/cards.get.summary: getListsCardsByIdList()
paths./lists/{idList}/cards.get.tags.length: 1
paths./lists/{idList}/cards.get.tags[0]: list
paths./lists/{idList}/cards.post.operationId: addListsCardsByIdList
paths./lists/{idList}/cards.post.parameters.length: 4
paths./lists/{idList}/cards.post.parameters[0].description: idList
paths./lists/{idList}/cards.post.parameters[0].in: path
paths./lists/{idList}/cards.post.parameters[0].name: idList
paths./lists/{idList}/cards.post.parameters[0].required: true
paths./lists/{idList}/cards.post.parameters[0].type: string
paths./lists/{idList}/cards.post.parameters[1].description: Attributes of "Lists Cards"
  to be added.
paths./lists/{idList}/cards.post.parameters[1].in: body
paths./lists/{idList}/cards.post.parameters[1].name: body
paths./lists/{idList}/cards.post.parameters[1].required: true
paths./lists/{idList}/cards.post.parameters[1].schema.$ref: '#/definitions/lists_cards'
paths./lists/{idList}/cards.post.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./lists/{idList}/cards.post.parameters[2].in: query
paths./lists/{idList}/cards.post.parameters[2].name: key
paths./lists/{idList}/cards.post.parameters[2].required: true
paths./lists/{idList}/cards.post.parameters[2].type: string
paths./lists/{idList}/cards.post.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./lists/{idList}/cards.post.parameters[3].in: query
paths./lists/{idList}/cards.post.parameters[3].name: token
paths./lists/{idList}/cards.post.parameters[3].required: true
paths./lists/{idList}/cards.post.parameters[3].type: string
paths./lists/{idList}/cards.post.responses.200.description: Success
paths./lists/{idList}/cards.post.responses.400.description: Server rejection
paths./lists/{idList}/cards.post.security.length: 2
paths./lists/{idList}/cards.post.security[0].api_key.length: 0
paths./lists/{idList}/cards.post.security[1].api_token.length: 0
paths./lists/{idList}/cards.post.summary: addListsCardsByIdList()
paths./lists/{idList}/cards.post.tags.length: 1
paths./lists/{idList}/cards.post.tags[0]: list
paths./lists/{idList}/cards/{filter}.get.operationId: getListsCardsByIdListByFilter
paths./lists/{idList}/cards/{filter}.get.parameters.length: 4
paths./lists/{idList}/cards/{filter}.get.parameters[0].description: idList
paths./lists/{idList}/cards/{filter}.get.parameters[0].in: path
paths./lists/{idList}/cards/{filter}.get.parameters[0].name: idList
paths./lists/{idList}/cards/{filter}.get.parameters[0].required: true
paths./lists/{idList}/cards/{filter}.get.parameters[0].type: string
paths./lists/{idList}/cards/{filter}.get.parameters[1].description: filter
paths./lists/{idList}/cards/{filter}.get.parameters[1].in: path
paths./lists/{idList}/cards/{filter}.get.parameters[1].name: filter
paths./lists/{idList}/cards/{filter}.get.parameters[1].required: true
paths./lists/{idList}/cards/{filter}.get.parameters[1].type: string
paths./lists/{idList}/cards/{filter}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./lists/{idList}/cards/{filter}.get.parameters[2].in: query
paths./lists/{idList}/cards/{filter}.get.parameters[2].name: key
paths./lists/{idList}/cards/{filter}.get.parameters[2].required: true
paths./lists/{idList}/cards/{filter}.get.parameters[2].type: string
paths./lists/{idList}/cards/{filter}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./lists/{idList}/cards/{filter}.get.parameters[3].in: query
paths./lists/{idList}/cards/{filter}.get.parameters[3].name: token
paths./lists/{idList}/cards/{filter}.get.parameters[3].required: true
paths./lists/{idList}/cards/{filter}.get.parameters[3].type: string
paths./lists/{idList}/cards/{filter}.get.responses.200.description: Success
paths./lists/{idList}/cards/{filter}.get.responses.400.description: Server rejection
paths./lists/{idList}/cards/{filter}.get.summary: getListsCardsByIdListByFilter()
paths./lists/{idList}/cards/{filter}.get.tags.length: 1
paths./lists/{idList}/cards/{filter}.get.tags[0]: list
paths./lists/{idList}/closed.put.operationId: updateListsClosedByIdList
paths./lists/{idList}/closed.put.parameters.length: 4
paths./lists/{idList}/closed.put.parameters[0].description: idList
paths./lists/{idList}/closed.put.parameters[0].in: path
paths./lists/{idList}/closed.put.parameters[0].name: idList
paths./lists/{idList}/closed.put.parameters[0].required: true
paths./lists/{idList}/closed.put.parameters[0].type: string
paths./lists/{idList}/closed.put.parameters[1].description: Attributes of "Lists Closed"
  to be updated.
paths./lists/{idList}/closed.put.parameters[1].in: body
paths./lists/{idList}/closed.put.parameters[1].name: body
paths./lists/{idList}/closed.put.parameters[1].required: true
paths./lists/{idList}/closed.put.parameters[1].schema.$ref: '#/definitions/lists_closed'
paths./lists/{idList}/closed.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./lists/{idList}/closed.put.parameters[2].in: query
paths./lists/{idList}/closed.put.parameters[2].name: key
paths./lists/{idList}/closed.put.parameters[2].required: true
paths./lists/{idList}/closed.put.parameters[2].type: string
paths./lists/{idList}/closed.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./lists/{idList}/closed.put.parameters[3].in: query
paths./lists/{idList}/closed.put.parameters[3].name: token
paths./lists/{idList}/closed.put.parameters[3].required: true
paths./lists/{idList}/closed.put.parameters[3].type: string
paths./lists/{idList}/closed.put.responses.200.description: Success
paths./lists/{idList}/closed.put.responses.400.description: Server rejection
paths./lists/{idList}/closed.put.security.length: 2
paths./lists/{idList}/closed.put.security[0].api_key.length: 0
paths./lists/{idList}/closed.put.security[1].api_token.length: 0
paths./lists/{idList}/closed.put.summary: updateListsClosedByIdList()
paths./lists/{idList}/closed.put.tags.length: 1
paths./lists/{idList}/closed.put.tags[0]: list
paths./lists/{idList}/idBoard.put.operationId: updateListsIdBoardByIdList
paths./lists/{idList}/idBoard.put.parameters.length: 4
paths./lists/{idList}/idBoard.put.parameters[0].description: idList
paths./lists/{idList}/idBoard.put.parameters[0].in: path
paths./lists/{idList}/idBoard.put.parameters[0].name: idList
paths./lists/{idList}/idBoard.put.parameters[0].required: true
paths./lists/{idList}/idBoard.put.parameters[0].type: string
paths./lists/{idList}/idBoard.put.parameters[1].description: Attributes of "Lists
  Id Board" to be updated.
paths./lists/{idList}/idBoard.put.parameters[1].in: body
paths./lists/{idList}/idBoard.put.parameters[1].name: body
paths./lists/{idList}/idBoard.put.parameters[1].required: true
paths./lists/{idList}/idBoard.put.parameters[1].schema.$ref: '#/definitions/lists_idBoard'
paths./lists/{idList}/idBoard.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./lists/{idList}/idBoard.put.parameters[2].in: query
paths./lists/{idList}/idBoard.put.parameters[2].name: key
paths./lists/{idList}/idBoard.put.parameters[2].required: true
paths./lists/{idList}/idBoard.put.parameters[2].type: string
paths./lists/{idList}/idBoard.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./lists/{idList}/idBoard.put.parameters[3].in: query
paths./lists/{idList}/idBoard.put.parameters[3].name: token
paths./lists/{idList}/idBoard.put.parameters[3].required: true
paths./lists/{idList}/idBoard.put.parameters[3].type: string
paths./lists/{idList}/idBoard.put.responses.200.description: Success
paths./lists/{idList}/idBoard.put.responses.400.description: Server rejection
paths./lists/{idList}/idBoard.put.security.length: 2
paths./lists/{idList}/idBoard.put.security[0].api_key.length: 0
paths./lists/{idList}/idBoard.put.security[1].api_token.length: 0
paths./lists/{idList}/idBoard.put.summary: updateListsIdBoardByIdList()
paths./lists/{idList}/idBoard.put.tags.length: 1
paths./lists/{idList}/idBoard.put.tags[0]: list
paths./lists/{idList}/moveAllCards.post.operationId: addListsMoveAllCardsByIdList
paths./lists/{idList}/moveAllCards.post.parameters.length: 4
paths./lists/{idList}/moveAllCards.post.parameters[0].description: idList
paths./lists/{idList}/moveAllCards.post.parameters[0].in: path
paths./lists/{idList}/moveAllCards.post.parameters[0].name: idList
paths./lists/{idList}/moveAllCards.post.parameters[0].required: true
paths./lists/{idList}/moveAllCards.post.parameters[0].type: string
paths./lists/{idList}/moveAllCards.post.parameters[1].description: Attributes of "Lists
  Move All Cards" to be added.
paths./lists/{idList}/moveAllCards.post.parameters[1].in: body
paths./lists/{idList}/moveAllCards.post.parameters[1].name: body
paths./lists/{idList}/moveAllCards.post.parameters[1].required: true
paths./lists/{idList}/moveAllCards.post.parameters[1].schema.$ref: '#/definitions/lists_moveAllCards'
paths./lists/{idList}/moveAllCards.post.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./lists/{idList}/moveAllCards.post.parameters[2].in: query
paths./lists/{idList}/moveAllCards.post.parameters[2].name: key
paths./lists/{idList}/moveAllCards.post.parameters[2].required: true
paths./lists/{idList}/moveAllCards.post.parameters[2].type: string
paths./lists/{idList}/moveAllCards.post.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./lists/{idList}/moveAllCards.post.parameters[3].in: query
paths./lists/{idList}/moveAllCards.post.parameters[3].name: token
paths./lists/{idList}/moveAllCards.post.parameters[3].required: true
paths./lists/{idList}/moveAllCards.post.parameters[3].type: string
paths./lists/{idList}/moveAllCards.post.responses.200.description: Success
paths./lists/{idList}/moveAllCards.post.responses.400.description: Server rejection
paths./lists/{idList}/moveAllCards.post.security.length: 2
paths./lists/{idList}/moveAllCards.post.security[0].api_key.length: 0
paths./lists/{idList}/moveAllCards.post.security[1].api_token.length: 0
paths./lists/{idList}/moveAllCards.post.summary: addListsMoveAllCardsByIdList()
paths./lists/{idList}/moveAllCards.post.tags.length: 1
paths./lists/{idList}/moveAllCards.post.tags[0]: list
paths./lists/{idList}/name.put.operationId: updateListsNameByIdList
paths./lists/{idList}/name.put.parameters.length: 4
paths./lists/{idList}/name.put.parameters[0].description: idList
paths./lists/{idList}/name.put.parameters[0].in: path
paths./lists/{idList}/name.put.parameters[0].name: idList
paths./lists/{idList}/name.put.parameters[0].required: true
paths./lists/{idList}/name.put.parameters[0].type: string
paths./lists/{idList}/name.put.parameters[1].description: Attributes of "Lists Name"
  to be updated.
paths./lists/{idList}/name.put.parameters[1].in: body
paths./lists/{idList}/name.put.parameters[1].name: body
paths./lists/{idList}/name.put.parameters[1].required: true
paths./lists/{idList}/name.put.parameters[1].schema.$ref: '#/definitions/lists_name'
paths./lists/{idList}/name.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./lists/{idList}/name.put.parameters[2].in: query
paths./lists/{idList}/name.put.parameters[2].name: key
paths./lists/{idList}/name.put.parameters[2].required: true
paths./lists/{idList}/name.put.parameters[2].type: string
paths./lists/{idList}/name.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./lists/{idList}/name.put.parameters[3].in: query
paths./lists/{idList}/name.put.parameters[3].name: token
paths./lists/{idList}/name.put.parameters[3].required: true
paths./lists/{idList}/name.put.parameters[3].type: string
paths./lists/{idList}/name.put.responses.200.description: Success
paths./lists/{idList}/name.put.responses.400.description: Server rejection
paths./lists/{idList}/name.put.security.length: 2
paths./lists/{idList}/name.put.security[0].api_key.length: 0
paths./lists/{idList}/name.put.security[1].api_token.length: 0
paths./lists/{idList}/name.put.summary: updateListsNameByIdList()
paths./lists/{idList}/name.put.tags.length: 1
paths./lists/{idList}/name.put.tags[0]: list
paths./lists/{idList}/pos.put.operationId: updateListsPosByIdList
paths./lists/{idList}/pos.put.parameters.length: 4
paths./lists/{idList}/pos.put.parameters[0].description: idList
paths./lists/{idList}/pos.put.parameters[0].in: path
paths./lists/{idList}/pos.put.parameters[0].name: idList
paths./lists/{idList}/pos.put.parameters[0].required: true
paths./lists/{idList}/pos.put.parameters[0].type: string
paths./lists/{idList}/pos.put.parameters[1].description: Attributes of "Lists Pos"
  to be updated.
paths./lists/{idList}/pos.put.parameters[1].in: body
paths./lists/{idList}/pos.put.parameters[1].name: body
paths./lists/{idList}/pos.put.parameters[1].required: true
paths./lists/{idList}/pos.put.parameters[1].schema.$ref: '#/definitions/lists_pos'
paths./lists/{idList}/pos.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./lists/{idList}/pos.put.parameters[2].in: query
paths./lists/{idList}/pos.put.parameters[2].name: key
paths./lists/{idList}/pos.put.parameters[2].required: true
paths./lists/{idList}/pos.put.parameters[2].type: string
paths./lists/{idList}/pos.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./lists/{idList}/pos.put.parameters[3].in: query
paths./lists/{idList}/pos.put.parameters[3].name: token
paths./lists/{idList}/pos.put.parameters[3].required: true
paths./lists/{idList}/pos.put.parameters[3].type: string
paths./lists/{idList}/pos.put.responses.200.description: Success
paths./lists/{idList}/pos.put.responses.400.description: Server rejection
paths./lists/{idList}/pos.put.security.length: 2
paths./lists/{idList}/pos.put.security[0].api_key.length: 0
paths./lists/{idList}/pos.put.security[1].api_token.length: 0
paths./lists/{idList}/pos.put.summary: updateListsPosByIdList()
paths./lists/{idList}/pos.put.tags.length: 1
paths./lists/{idList}/pos.put.tags[0]: list
paths./lists/{idList}/subscribed.put.operationId: updateListsSubscribedByIdList
paths./lists/{idList}/subscribed.put.parameters.length: 4
paths./lists/{idList}/subscribed.put.parameters[0].description: idList
paths./lists/{idList}/subscribed.put.parameters[0].in: path
paths./lists/{idList}/subscribed.put.parameters[0].name: idList
paths./lists/{idList}/subscribed.put.parameters[0].required: true
paths./lists/{idList}/subscribed.put.parameters[0].type: string
paths./lists/{idList}/subscribed.put.parameters[1].description: Attributes of "Lists
  Subscribed" to be updated.
paths./lists/{idList}/subscribed.put.parameters[1].in: body
paths./lists/{idList}/subscribed.put.parameters[1].name: body
paths./lists/{idList}/subscribed.put.parameters[1].required: true
paths./lists/{idList}/subscribed.put.parameters[1].schema.$ref: '#/definitions/lists_subscribed'
paths./lists/{idList}/subscribed.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./lists/{idList}/subscribed.put.parameters[2].in: query
paths./lists/{idList}/subscribed.put.parameters[2].name: key
paths./lists/{idList}/subscribed.put.parameters[2].required: true
paths./lists/{idList}/subscribed.put.parameters[2].type: string
paths./lists/{idList}/subscribed.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./lists/{idList}/subscribed.put.parameters[3].in: query
paths./lists/{idList}/subscribed.put.parameters[3].name: token
paths./lists/{idList}/subscribed.put.parameters[3].required: true
paths./lists/{idList}/subscribed.put.parameters[3].type: string
paths./lists/{idList}/subscribed.put.responses.200.description: Success
paths./lists/{idList}/subscribed.put.responses.400.description: Server rejection
paths./lists/{idList}/subscribed.put.security.length: 2
paths./lists/{idList}/subscribed.put.security[0].api_key.length: 0
paths./lists/{idList}/subscribed.put.security[1].api_token.length: 0
paths./lists/{idList}/subscribed.put.summary: updateListsSubscribedByIdList()
paths./lists/{idList}/subscribed.put.tags.length: 1
paths./lists/{idList}/subscribed.put.tags[0]: list
paths./members/{idMember}.get.description: If you specify 'me' as the username, this
  call will respond as if you had supplied the username associated with the supplied
  token
paths./members/{idMember}.get.operationId: getMembersByIdMember
paths./members/{idMember}.get.parameters.length: 55
paths./members/{idMember}.get.parameters[0].description: idMember or username
paths./members/{idMember}.get.parameters[0].in: path
paths./members/{idMember}.get.parameters[0].name: idMember
paths./members/{idMember}.get.parameters[0].required: true
paths./members/{idMember}.get.parameters[0].type: string
paths./members/{idMember}.get.parameters[1].description: 'all or a comma-separated
  list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard,
  addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem,
  copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization,
  deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation,
  disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
  makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard,
  moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,
  removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
  updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,
  updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed,
  updateList:name, updateMember or updateOrganization'
paths./members/{idMember}.get.parameters[1].in: query
paths./members/{idMember}.get.parameters[1].name: actions
paths./members/{idMember}.get.parameters[1].required: false
paths./members/{idMember}.get.parameters[1].type: string
paths./members/{idMember}.get.parameters[2].description: ' true or false'
paths./members/{idMember}.get.parameters[2].in: query
paths./members/{idMember}.get.parameters[2].name: actions_entities
paths./members/{idMember}.get.parameters[2].required: false
paths./members/{idMember}.get.parameters[2].type: string
paths./members/{idMember}.get.parameters[3].description: ' true or false'
paths./members/{idMember}.get.parameters[3].in: query
paths./members/{idMember}.get.parameters[3].name: actions_display
paths./members/{idMember}.get.parameters[3].required: false
paths./members/{idMember}.get.parameters[3].type: string
paths./members/{idMember}.get.parameters[4].default: "50"
paths./members/{idMember}.get.parameters[4].description: a number from 0 to 1000
paths./members/{idMember}.get.parameters[4].in: query
paths./members/{idMember}.get.parameters[4].name: actions_limit
paths./members/{idMember}.get.parameters[4].required: false
paths./members/{idMember}.get.parameters[4].type: string
paths./members/{idMember}.get.parameters[5].default: all
paths./members/{idMember}.get.parameters[5].description: 'all or a comma-separated
  list of: data, date, idMemberCreator or type'
paths./members/{idMember}.get.parameters[5].in: query
paths./members/{idMember}.get.parameters[5].name: action_fields
paths./members/{idMember}.get.parameters[5].required: false
paths./members/{idMember}.get.parameters[5].type: string
paths./members/{idMember}.get.parameters[6].description: A date, null or lastView
paths./members/{idMember}.get.parameters[6].in: query
paths./members/{idMember}.get.parameters[6].name: action_since
paths./members/{idMember}.get.parameters[6].required: false
paths./members/{idMember}.get.parameters[6].type: string
paths./members/{idMember}.get.parameters[7].description: A date, or null
paths./members/{idMember}.get.parameters[7].in: query
paths./members/{idMember}.get.parameters[7].name: action_before
paths./members/{idMember}.get.parameters[7].required: false
paths./members/{idMember}.get.parameters[7].type: string
paths./members/{idMember}.get.parameters[8].default: none
paths./members/{idMember}.get.parameters[8].description: 'One of: all, closed, none,
  open or visible'
paths./members/{idMember}.get.parameters[8].in: query
paths./members/{idMember}.get.parameters[8].name: cards
paths./members/{idMember}.get.parameters[8].required: false
paths./members/{idMember}.get.parameters[8].type: string
paths./members/{idMember}.get.parameters[9].default: all
paths./members/{idMember}.get.parameters[9].description: 'all or a comma-separated
  list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due,
  email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
  idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed
  or url'
paths./members/{idMember}.get.parameters[9].in: query
paths./members/{idMember}.get.parameters[9].name: card_fields
paths./members/{idMember}.get.parameters[9].required: false
paths./members/{idMember}.get.parameters[9].type: string
paths./members/{idMember}.get.parameters[10].description: ' true or false'
paths./members/{idMember}.get.parameters[10].in: query
paths./members/{idMember}.get.parameters[10].name: card_members
paths./members/{idMember}.get.parameters[10].required: false
paths./members/{idMember}.get.parameters[10].type: string
paths./members/{idMember}.get.parameters[11].default: avatarHash, fullName, initials
  and username
paths./members/{idMember}.get.parameters[11].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./members/{idMember}.get.parameters[11].in: query
paths./members/{idMember}.get.parameters[11].name: card_member_fields
paths./members/{idMember}.get.parameters[11].required: false
paths./members/{idMember}.get.parameters[11].type: string
paths./members/{idMember}.get.parameters[12].description: A boolean value or &quot;cover&quot;
  for only card cover attachments
paths./members/{idMember}.get.parameters[12].in: query
paths./members/{idMember}.get.parameters[12].name: card_attachments
paths./members/{idMember}.get.parameters[12].required: false
paths./members/{idMember}.get.parameters[12].type: string
paths./members/{idMember}.get.parameters[13].default: url and previews
paths./members/{idMember}.get.parameters[13].description: 'all or a comma-separated
  list of: bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews or
  url'
paths./members/{idMember}.get.parameters[13].in: query
paths./members/{idMember}.get.parameters[13].name: card_attachment_fields
paths./members/{idMember}.get.parameters[13].required: false
paths./members/{idMember}.get.parameters[13].type: string
paths./members/{idMember}.get.parameters[14].description: ' true or false'
paths./members/{idMember}.get.parameters[14].in: query
paths./members/{idMember}.get.parameters[14].name: card_stickers
paths./members/{idMember}.get.parameters[14].required: false
paths./members/{idMember}.get.parameters[14].type: string
paths./members/{idMember}.get.parameters[15].description: 'all or a comma-separated
  list of: closed, members, open, organization, pinned, public, starred or unpinned'
paths./members/{idMember}.get.parameters[15].in: query
paths./members/{idMember}.get.parameters[15].name: boards
paths./members/{idMember}.get.parameters[15].required: false
paths./members/{idMember}.get.parameters[15].type: string
paths./members/{idMember}.get.parameters[16].default: name, closed, idOrganization
  and pinned
paths./members/{idMember}.get.parameters[16].description: 'all or a comma-separated
  list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization,
  invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
  shortUrl, starred, subscribed or url'
paths./members/{idMember}.get.parameters[16].in: query
paths./members/{idMember}.get.parameters[16].name: board_fields
paths./members/{idMember}.get.parameters[16].required: false
paths./members/{idMember}.get.parameters[16].type: string
paths./members/{idMember}.get.parameters[17].description: 'all or a comma-separated
  list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard,
  addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem,
  copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization,
  deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation,
  disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
  makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard,
  moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,
  removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
  updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,
  updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed,
  updateList:name, updateMember or updateOrganization'
paths./members/{idMember}.get.parameters[17].in: query
paths./members/{idMember}.get.parameters[17].name: board_actions
paths./members/{idMember}.get.parameters[17].required: false
paths./members/{idMember}.get.parameters[17].type: string
paths./members/{idMember}.get.parameters[18].description: ' true or false'
paths./members/{idMember}.get.parameters[18].in: query
paths./members/{idMember}.get.parameters[18].name: board_actions_entities
paths./members/{idMember}.get.parameters[18].required: false
paths./members/{idMember}.get.parameters[18].type: string
paths./members/{idMember}.get.parameters[19].description: ' true or false'
paths./members/{idMember}.get.parameters[19].in: query
paths./members/{idMember}.get.parameters[19].name: board_actions_display
paths./members/{idMember}.get.parameters[19].required: false
paths./members/{idMember}.get.parameters[19].type: string
paths./members/{idMember}.get.parameters[20].default: list
paths./members/{idMember}.get.parameters[20].description: 'One of: count, list or
  minimal'
paths./members/{idMember}.get.parameters[20].in: query
paths./members/{idMember}.get.parameters[20].name: board_actions_format
paths./members/{idMember}.get.parameters[20].required: false
paths./members/{idMember}.get.parameters[20].type: string
paths./members/{idMember}.get.parameters[21].description: A date, null or lastView
paths./members/{idMember}.get.parameters[21].in: query
paths./members/{idMember}.get.parameters[21].name: board_actions_since
paths./members/{idMember}.get.parameters[21].required: false
paths./members/{idMember}.get.parameters[21].type: string
paths./members/{idMember}.get.parameters[22].default: "50"
paths./members/{idMember}.get.parameters[22].description: a number from 0 to 1000
paths./members/{idMember}.get.parameters[22].in: query
paths./members/{idMember}.get.parameters[22].name: board_actions_limit
paths./members/{idMember}.get.parameters[22].required: false
paths./members/{idMember}.get.parameters[22].type: string
paths./members/{idMember}.get.parameters[23].default: all
paths./members/{idMember}.get.parameters[23].description: 'all or a comma-separated
  list of: data, date, idMemberCreator or type'
paths./members/{idMember}.get.parameters[23].in: query
paths./members/{idMember}.get.parameters[23].name: board_action_fields
paths./members/{idMember}.get.parameters[23].required: false
paths./members/{idMember}.get.parameters[23].type: string
paths./members/{idMember}.get.parameters[24].default: none
paths./members/{idMember}.get.parameters[24].description: 'One of: all, closed, none
  or open'
paths./members/{idMember}.get.parameters[24].in: query
paths./members/{idMember}.get.parameters[24].name: board_lists
paths./members/{idMember}.get.parameters[24].required: false
paths./members/{idMember}.get.parameters[24].type: string
paths./members/{idMember}.get.parameters[25].default: none
paths./members/{idMember}.get.parameters[25].description: 'all or a comma-separated
  list of: active, admin, deactivated, me or normal'
paths./members/{idMember}.get.parameters[25].in: query
paths./members/{idMember}.get.parameters[25].name: board_memberships
paths./members/{idMember}.get.parameters[25].required: false
paths./members/{idMember}.get.parameters[25].type: string
paths./members/{idMember}.get.parameters[26].description: ' true or false'
paths./members/{idMember}.get.parameters[26].in: query
paths./members/{idMember}.get.parameters[26].name: board_organization
paths./members/{idMember}.get.parameters[26].required: false
paths./members/{idMember}.get.parameters[26].type: string
paths./members/{idMember}.get.parameters[27].default: name and displayName
paths./members/{idMember}.get.parameters[27].description: 'all or a comma-separated
  list of: billableMemberCount, desc, descData, displayName, idBoards, invitations,
  invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products,
  url or website'
paths./members/{idMember}.get.parameters[27].in: query
paths./members/{idMember}.get.parameters[27].name: board_organization_fields
paths./members/{idMember}.get.parameters[27].required: false
paths./members/{idMember}.get.parameters[27].type: string
paths./members/{idMember}.get.parameters[28].description: 'all or a comma-separated
  list of: closed, members, open, organization, pinned, public, starred or unpinned'
paths./members/{idMember}.get.parameters[28].in: query
paths./members/{idMember}.get.parameters[28].name: boardsInvited
paths./members/{idMember}.get.parameters[28].required: false
paths./members/{idMember}.get.parameters[28].type: string
paths./members/{idMember}.get.parameters[29].default: name, closed, idOrganization
  and pinned
paths./members/{idMember}.get.parameters[29].description: 'all or a comma-separated
  list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization,
  invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
  shortUrl, starred, subscribed or url'
paths./members/{idMember}.get.parameters[29].in: query
paths./members/{idMember}.get.parameters[29].name: boardsInvited_fields
paths./members/{idMember}.get.parameters[29].required: false
paths./members/{idMember}.get.parameters[29].type: string
paths./members/{idMember}.get.parameters[30].description: ' true or false'
paths./members/{idMember}.get.parameters[30].in: query
paths./members/{idMember}.get.parameters[30].name: boardStars
paths./members/{idMember}.get.parameters[30].required: false
paths./members/{idMember}.get.parameters[30].type: string
paths./members/{idMember}.get.parameters[31].description: ' true or false'
paths./members/{idMember}.get.parameters[31].in: query
paths./members/{idMember}.get.parameters[31].name: savedSearches
paths./members/{idMember}.get.parameters[31].required: false
paths./members/{idMember}.get.parameters[31].type: string
paths./members/{idMember}.get.parameters[32].default: none
paths./members/{idMember}.get.parameters[32].description: 'One of: all, members, none
  or public'
paths./members/{idMember}.get.parameters[32].in: query
paths./members/{idMember}.get.parameters[32].name: organizations
paths./members/{idMember}.get.parameters[32].required: false
paths./members/{idMember}.get.parameters[32].type: string
paths./members/{idMember}.get.parameters[33].default: all
paths./members/{idMember}.get.parameters[33].description: 'all or a comma-separated
  list of: billableMemberCount, desc, descData, displayName, idBoards, invitations,
  invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products,
  url or website'
paths./members/{idMember}.get.parameters[33].in: query
paths./members/{idMember}.get.parameters[33].name: organization_fields
paths./members/{idMember}.get.parameters[33].required: false
paths./members/{idMember}.get.parameters[33].type: string
paths./members/{idMember}.get.parameters[34].description: ' true or false'
paths./members/{idMember}.get.parameters[34].in: query
paths./members/{idMember}.get.parameters[34].name: organization_paid_account
paths./members/{idMember}.get.parameters[34].required: false
paths./members/{idMember}.get.parameters[34].type: string
paths./members/{idMember}.get.parameters[35].default: none
paths./members/{idMember}.get.parameters[35].description: 'One of: all, members, none
  or public'
paths./members/{idMember}.get.parameters[35].in: query
paths./members/{idMember}.get.parameters[35].name: organizationsInvited
paths./members/{idMember}.get.parameters[35].required: false
paths./members/{idMember}.get.parameters[35].type: string
paths./members/{idMember}.get.parameters[36].default: all
paths./members/{idMember}.get.parameters[36].description: 'all or a comma-separated
  list of: billableMemberCount, desc, descData, displayName, idBoards, invitations,
  invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products,
  url or website'
paths./members/{idMember}.get.parameters[36].in: query
paths./members/{idMember}.get.parameters[36].name: organizationsInvited_fields
paths./members/{idMember}.get.parameters[36].required: false
paths./members/{idMember}.get.parameters[36].type: string
paths./members/{idMember}.get.parameters[37].description: 'all or a comma-separated
  list of: addAdminToBoard, addAdminToOrganization, addedAttachmentToCard, addedMemberToCard,
  addedToBoard, addedToCard, addedToOrganization, cardDueSoon, changeCard, closeBoard,
  commentCard, createdCard, declinedInvitationToBoard, declinedInvitationToOrganization,
  invitedToBoard, invitedToOrganization, makeAdminOfBoard, makeAdminOfOrganization,
  memberJoinedTrello, mentionedOnCard, removedFromBoard, removedFromCard, removedFromOrganization,
  removedMemberFromCard, unconfirmedInvitedToBoard, unconfirmedInvitedToOrganization
  or updateCheckItemStateOnCard'
paths./members/{idMember}.get.parameters[37].in: query
paths./members/{idMember}.get.parameters[37].name: notifications
paths./members/{idMember}.get.parameters[37].required: false
paths./members/{idMember}.get.parameters[37].type: string
paths./members/{idMember}.get.parameters[38].description: ' true or false'
paths./members/{idMember}.get.parameters[38].in: query
paths./members/{idMember}.get.parameters[38].name: notifications_entities
paths./members/{idMember}.get.parameters[38].required: false
paths./members/{idMember}.get.parameters[38].type: string
paths./members/{idMember}.get.parameters[39].description: ' true or false'
paths./members/{idMember}.get.parameters[39].in: query
paths./members/{idMember}.get.parameters[39].name: notifications_display
paths./members/{idMember}.get.parameters[39].required: false
paths./members/{idMember}.get.parameters[39].type: string
paths./members/{idMember}.get.parameters[40].default: "50"
paths./members/{idMember}.get.parameters[40].description: a number from 1 to 1000
paths./members/{idMember}.get.parameters[40].in: query
paths./members/{idMember}.get.parameters[40].name: notifications_limit
paths./members/{idMember}.get.parameters[40].required: false
paths./members/{idMember}.get.parameters[40].type: string
paths./members/{idMember}.get.parameters[41].default: all
paths./members/{idMember}.get.parameters[41].description: 'all or a comma-separated
  list of: data, date, idMemberCreator, type or unread'
paths./members/{idMember}.get.parameters[41].in: query
paths./members/{idMember}.get.parameters[41].name: notification_fields
paths./members/{idMember}.get.parameters[41].required: false
paths./members/{idMember}.get.parameters[41].type: string
paths./members/{idMember}.get.parameters[42].description: ' true or false'
paths./members/{idMember}.get.parameters[42].in: query
paths./members/{idMember}.get.parameters[42].name: notification_memberCreator
paths./members/{idMember}.get.parameters[42].required: false
paths./members/{idMember}.get.parameters[42].type: string
paths./members/{idMember}.get.parameters[43].default: avatarHash, fullName, initials
  and username
paths./members/{idMember}.get.parameters[43].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./members/{idMember}.get.parameters[43].in: query
paths./members/{idMember}.get.parameters[43].name: notification_memberCreator_fields
paths./members/{idMember}.get.parameters[43].required: false
paths./members/{idMember}.get.parameters[43].type: string
paths./members/{idMember}.get.parameters[44].description: An id, or null
paths./members/{idMember}.get.parameters[44].in: query
paths./members/{idMember}.get.parameters[44].name: notification_before
paths./members/{idMember}.get.parameters[44].required: false
paths./members/{idMember}.get.parameters[44].type: string
paths./members/{idMember}.get.parameters[45].description: An id, or null
paths./members/{idMember}.get.parameters[45].in: query
paths./members/{idMember}.get.parameters[45].name: notification_since
paths./members/{idMember}.get.parameters[45].required: false
paths./members/{idMember}.get.parameters[45].type: string
paths./members/{idMember}.get.parameters[46].default: none
paths./members/{idMember}.get.parameters[46].description: 'One of: all or none'
paths./members/{idMember}.get.parameters[46].in: query
paths./members/{idMember}.get.parameters[46].name: tokens
paths./members/{idMember}.get.parameters[46].required: false
paths./members/{idMember}.get.parameters[46].type: string
paths./members/{idMember}.get.parameters[47].description: ' true or false'
paths./members/{idMember}.get.parameters[47].in: query
paths./members/{idMember}.get.parameters[47].name: paid_account
paths./members/{idMember}.get.parameters[47].required: false
paths./members/{idMember}.get.parameters[47].type: string
paths./members/{idMember}.get.parameters[48].default: none
paths./members/{idMember}.get.parameters[48].description: 'One of: all, custom, default,
  none or premium'
paths./members/{idMember}.get.parameters[48].in: query
paths./members/{idMember}.get.parameters[48].name: boardBackgrounds
paths./members/{idMember}.get.parameters[48].required: false
paths./members/{idMember}.get.parameters[48].type: string
paths./members/{idMember}.get.parameters[49].default: none
paths./members/{idMember}.get.parameters[49].description: 'One of: all or none'
paths./members/{idMember}.get.parameters[49].in: query
paths./members/{idMember}.get.parameters[49].name: customBoardBackgrounds
paths./members/{idMember}.get.parameters[49].required: false
paths./members/{idMember}.get.parameters[49].type: string
paths./members/{idMember}.get.parameters[50].default: none
paths./members/{idMember}.get.parameters[50].description: 'One of: all or none'
paths./members/{idMember}.get.parameters[50].in: query
paths./members/{idMember}.get.parameters[50].name: customStickers
paths./members/{idMember}.get.parameters[50].required: false
paths./members/{idMember}.get.parameters[50].type: string
paths./members/{idMember}.get.parameters[51].default: none
paths./members/{idMember}.get.parameters[51].description: 'One of: all or none'
paths./members/{idMember}.get.parameters[51].in: query
paths./members/{idMember}.get.parameters[51].name: customEmoji
paths./members/{idMember}.get.parameters[51].required: false
paths./members/{idMember}.get.parameters[51].type: string
paths./members/{idMember}.get.parameters[52].default: all
paths./members/{idMember}.get.parameters[52].description: 'all or a comma-separated
  list of: avatarHash, avatarSource, bio, bioData, confirmed, email, fullName, gravatarHash,
  idBoards, idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials, loginTypes,
  memberType, oneTimeMessagesDismissed, prefs, premiumFeatures, products, status,
  status, trophies, uploadedAvatarHash, url or username'
paths./members/{idMember}.get.parameters[52].in: query
paths./members/{idMember}.get.parameters[52].name: fields
paths./members/{idMember}.get.parameters[52].required: false
paths./members/{idMember}.get.parameters[52].type: string
paths./members/{idMember}.get.parameters[53].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}.get.parameters[53].in: query
paths./members/{idMember}.get.parameters[53].name: key
paths./members/{idMember}.get.parameters[53].required: true
paths./members/{idMember}.get.parameters[53].type: string
paths./members/{idMember}.get.parameters[54].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}.get.parameters[54].in: query
paths./members/{idMember}.get.parameters[54].name: token
paths./members/{idMember}.get.parameters[54].required: true
paths./members/{idMember}.get.parameters[54].type: string
paths./members/{idMember}.get.responses.200.description: Success
paths./members/{idMember}.get.responses.400.description: Server rejection
paths./members/{idMember}.get.security.length: 2
paths./members/{idMember}.get.security[0].api_key.length: 0
paths./members/{idMember}.get.security[1].api_token.length: 0
paths./members/{idMember}.get.summary: getMembersByIdMember()
paths./members/{idMember}.get.tags.length: 1
paths./members/{idMember}.get.tags[0]: member
paths./members/{idMember}.put.operationId: updateMembersByIdMember
paths./members/{idMember}.put.parameters.length: 4
paths./members/{idMember}.put.parameters[0].description: idMember or username
paths./members/{idMember}.put.parameters[0].in: path
paths./members/{idMember}.put.parameters[0].name: idMember
paths./members/{idMember}.put.parameters[0].required: true
paths./members/{idMember}.put.parameters[0].type: string
paths./members/{idMember}.put.parameters[1].description: Attributes of "Members" to
  be updated.
paths./members/{idMember}.put.parameters[1].in: body
paths./members/{idMember}.put.parameters[1].name: body
paths./members/{idMember}.put.parameters[1].required: true
paths./members/{idMember}.put.parameters[1].schema.$ref: '#/definitions/members'
paths./members/{idMember}.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}.put.parameters[2].in: query
paths./members/{idMember}.put.parameters[2].name: key
paths./members/{idMember}.put.parameters[2].required: true
paths./members/{idMember}.put.parameters[2].type: string
paths./members/{idMember}.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}.put.parameters[3].in: query
paths./members/{idMember}.put.parameters[3].name: token
paths./members/{idMember}.put.parameters[3].required: true
paths./members/{idMember}.put.parameters[3].type: string
paths./members/{idMember}.put.responses.200.description: Success
paths./members/{idMember}.put.responses.400.description: Server rejection
paths./members/{idMember}.put.security.length: 2
paths./members/{idMember}.put.security[0].api_key.length: 0
paths./members/{idMember}.put.security[1].api_token.length: 0
paths./members/{idMember}.put.summary: updateMembersByIdMember()
paths./members/{idMember}.put.tags.length: 1
paths./members/{idMember}.put.tags[0]: member
paths./members/{idMember}/{field}.get.operationId: getMembersByIdMemberByField
paths./members/{idMember}/{field}.get.parameters.length: 4
paths./members/{idMember}/{field}.get.parameters[0].description: idMember or username
paths./members/{idMember}/{field}.get.parameters[0].in: path
paths./members/{idMember}/{field}.get.parameters[0].name: idMember
paths./members/{idMember}/{field}.get.parameters[0].required: true
paths./members/{idMember}/{field}.get.parameters[0].type: string
paths./members/{idMember}/{field}.get.parameters[1].description: field
paths./members/{idMember}/{field}.get.parameters[1].in: path
paths./members/{idMember}/{field}.get.parameters[1].name: field
paths./members/{idMember}/{field}.get.parameters[1].required: true
paths./members/{idMember}/{field}.get.parameters[1].type: string
paths./members/{idMember}/{field}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}/{field}.get.parameters[2].in: query
paths./members/{idMember}/{field}.get.parameters[2].name: key
paths./members/{idMember}/{field}.get.parameters[2].required: true
paths./members/{idMember}/{field}.get.parameters[2].type: string
paths./members/{idMember}/{field}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/{field}.get.parameters[3].in: query
paths./members/{idMember}/{field}.get.parameters[3].name: token
paths./members/{idMember}/{field}.get.parameters[3].required: true
paths./members/{idMember}/{field}.get.parameters[3].type: string
paths./members/{idMember}/{field}.get.responses.200.description: Success
paths./members/{idMember}/{field}.get.responses.400.description: Server rejection
paths./members/{idMember}/{field}.get.summary: getMembersByIdMemberByField()
paths./members/{idMember}/{field}.get.tags.length: 1
paths./members/{idMember}/{field}.get.tags[0]: member
paths./members/{idMember}/actions.get.operationId: getMembersActionsByIdMember
paths./members/{idMember}/actions.get.parameters.length: 17
paths./members/{idMember}/actions.get.parameters[0].description: idMember or username
paths./members/{idMember}/actions.get.parameters[0].in: path
paths./members/{idMember}/actions.get.parameters[0].name: idMember
paths./members/{idMember}/actions.get.parameters[0].required: true
paths./members/{idMember}/actions.get.parameters[0].type: string
paths./members/{idMember}/actions.get.parameters[1].description: ' true or false'
paths./members/{idMember}/actions.get.parameters[1].in: query
paths./members/{idMember}/actions.get.parameters[1].name: entities
paths./members/{idMember}/actions.get.parameters[1].required: false
paths./members/{idMember}/actions.get.parameters[1].type: string
paths./members/{idMember}/actions.get.parameters[2].description: ' true or false'
paths./members/{idMember}/actions.get.parameters[2].in: query
paths./members/{idMember}/actions.get.parameters[2].name: display
paths./members/{idMember}/actions.get.parameters[2].required: false
paths./members/{idMember}/actions.get.parameters[2].type: string
paths./members/{idMember}/actions.get.parameters[3].default: all
paths./members/{idMember}/actions.get.parameters[3].description: 'all or a comma-separated
  list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard,
  addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem,
  copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization,
  deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation,
  disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
  makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard,
  moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,
  removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
  updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,
  updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed,
  updateList:name, updateMember or updateOrganization'
paths./members/{idMember}/actions.get.parameters[3].in: query
paths./members/{idMember}/actions.get.parameters[3].name: filter
paths./members/{idMember}/actions.get.parameters[3].required: false
paths./members/{idMember}/actions.get.parameters[3].type: string
paths./members/{idMember}/actions.get.parameters[4].default: all
paths./members/{idMember}/actions.get.parameters[4].description: 'all or a comma-separated
  list of: data, date, idMemberCreator or type'
paths./members/{idMember}/actions.get.parameters[4].in: query
paths./members/{idMember}/actions.get.parameters[4].name: fields
paths./members/{idMember}/actions.get.parameters[4].required: false
paths./members/{idMember}/actions.get.parameters[4].type: string
paths./members/{idMember}/actions.get.parameters[5].default: "50"
paths./members/{idMember}/actions.get.parameters[5].description: a number from 0 to
  1000
paths./members/{idMember}/actions.get.parameters[5].in: query
paths./members/{idMember}/actions.get.parameters[5].name: limit
paths./members/{idMember}/actions.get.parameters[5].required: false
paths./members/{idMember}/actions.get.parameters[5].type: string
paths./members/{idMember}/actions.get.parameters[6].default: list
paths./members/{idMember}/actions.get.parameters[6].description: 'One of: count, list
  or minimal'
paths./members/{idMember}/actions.get.parameters[6].in: query
paths./members/{idMember}/actions.get.parameters[6].name: format
paths./members/{idMember}/actions.get.parameters[6].required: false
paths./members/{idMember}/actions.get.parameters[6].type: string
paths./members/{idMember}/actions.get.parameters[7].description: A date, null or lastView
paths./members/{idMember}/actions.get.parameters[7].in: query
paths./members/{idMember}/actions.get.parameters[7].name: since
paths./members/{idMember}/actions.get.parameters[7].required: false
paths./members/{idMember}/actions.get.parameters[7].type: string
paths./members/{idMember}/actions.get.parameters[8].description: A date, or null
paths./members/{idMember}/actions.get.parameters[8].in: query
paths./members/{idMember}/actions.get.parameters[8].name: before
paths./members/{idMember}/actions.get.parameters[8].required: false
paths./members/{idMember}/actions.get.parameters[8].type: string
paths./members/{idMember}/actions.get.parameters[9].default: "0"
paths./members/{idMember}/actions.get.parameters[9].description: Page * limit must
  be less than 1000
paths./members/{idMember}/actions.get.parameters[9].in: query
paths./members/{idMember}/actions.get.parameters[9].name: page
paths./members/{idMember}/actions.get.parameters[9].required: false
paths./members/{idMember}/actions.get.parameters[9].type: string
paths./members/{idMember}/actions.get.parameters[10].description: Only return actions
  related to these model ids
paths./members/{idMember}/actions.get.parameters[10].in: query
paths./members/{idMember}/actions.get.parameters[10].name: idModels
paths./members/{idMember}/actions.get.parameters[10].required: false
paths./members/{idMember}/actions.get.parameters[10].type: string
paths./members/{idMember}/actions.get.parameters[11].description: ' true or false'
paths./members/{idMember}/actions.get.parameters[11].in: query
paths./members/{idMember}/actions.get.parameters[11].name: member
paths./members/{idMember}/actions.get.parameters[11].required: false
paths./members/{idMember}/actions.get.parameters[11].type: string
paths./members/{idMember}/actions.get.parameters[12].default: avatarHash, fullName,
  initials and username
paths./members/{idMember}/actions.get.parameters[12].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./members/{idMember}/actions.get.parameters[12].in: query
paths./members/{idMember}/actions.get.parameters[12].name: member_fields
paths./members/{idMember}/actions.get.parameters[12].required: false
paths./members/{idMember}/actions.get.parameters[12].type: string
paths./members/{idMember}/actions.get.parameters[13].description: ' true or false'
paths./members/{idMember}/actions.get.parameters[13].in: query
paths./members/{idMember}/actions.get.parameters[13].name: memberCreator
paths./members/{idMember}/actions.get.parameters[13].required: false
paths./members/{idMember}/actions.get.parameters[13].type: string
paths./members/{idMember}/actions.get.parameters[14].default: avatarHash, fullName,
  initials and username
paths./members/{idMember}/actions.get.parameters[14].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./members/{idMember}/actions.get.parameters[14].in: query
paths./members/{idMember}/actions.get.parameters[14].name: memberCreator_fields
paths./members/{idMember}/actions.get.parameters[14].required: false
paths./members/{idMember}/actions.get.parameters[14].type: string
paths./members/{idMember}/actions.get.parameters[15].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}/actions.get.parameters[15].in: query
paths./members/{idMember}/actions.get.parameters[15].name: key
paths./members/{idMember}/actions.get.parameters[15].required: true
paths./members/{idMember}/actions.get.parameters[15].type: string
paths./members/{idMember}/actions.get.parameters[16].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/actions.get.parameters[16].in: query
paths./members/{idMember}/actions.get.parameters[16].name: token
paths./members/{idMember}/actions.get.parameters[16].required: true
paths./members/{idMember}/actions.get.parameters[16].type: string
paths./members/{idMember}/actions.get.responses.200.description: Success
paths./members/{idMember}/actions.get.responses.400.description: Server rejection
paths./members/{idMember}/actions.get.security.length: 2
paths./members/{idMember}/actions.get.security[0].api_key.length: 0
paths./members/{idMember}/actions.get.security[1].api_token.length: 0
paths./members/{idMember}/actions.get.summary: getMembersActionsByIdMember()
paths./members/{idMember}/actions.get.tags.length: 1
paths./members/{idMember}/actions.get.tags[0]: member
paths./members/{idMember}/avatar.post.operationId: addMembersAvatarByIdMember
paths./members/{idMember}/avatar.post.parameters.length: 4
paths./members/{idMember}/avatar.post.parameters[0].description: idMember or username
paths./members/{idMember}/avatar.post.parameters[0].in: path
paths./members/{idMember}/avatar.post.parameters[0].name: idMember
paths./members/{idMember}/avatar.post.parameters[0].required: true
paths./members/{idMember}/avatar.post.parameters[0].type: string
paths./members/{idMember}/avatar.post.parameters[1].description: Attributes of "Members
  Avatar" to be added.
paths./members/{idMember}/avatar.post.parameters[1].in: body
paths./members/{idMember}/avatar.post.parameters[1].name: body
paths./members/{idMember}/avatar.post.parameters[1].required: true
paths./members/{idMember}/avatar.post.parameters[1].schema.$ref: '#/definitions/members_avatar'
paths./members/{idMember}/avatar.post.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}/avatar.post.parameters[2].in: query
paths./members/{idMember}/avatar.post.parameters[2].name: key
paths./members/{idMember}/avatar.post.parameters[2].required: true
paths./members/{idMember}/avatar.post.parameters[2].type: string
paths./members/{idMember}/avatar.post.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/avatar.post.parameters[3].in: query
paths./members/{idMember}/avatar.post.parameters[3].name: token
paths./members/{idMember}/avatar.post.parameters[3].required: true
paths./members/{idMember}/avatar.post.parameters[3].type: string
paths./members/{idMember}/avatar.post.responses.200.description: Success
paths./members/{idMember}/avatar.post.responses.400.description: Server rejection
paths./members/{idMember}/avatar.post.security.length: 2
paths./members/{idMember}/avatar.post.security[0].api_key.length: 0
paths./members/{idMember}/avatar.post.security[1].api_token.length: 0
paths./members/{idMember}/avatar.post.summary: addMembersAvatarByIdMember()
paths./members/{idMember}/avatar.post.tags.length: 1
paths./members/{idMember}/avatar.post.tags[0]: member
paths./members/{idMember}/avatarSource.put.operationId: updateMembersAvatarSourceByIdMember
paths./members/{idMember}/avatarSource.put.parameters.length: 4
paths./members/{idMember}/avatarSource.put.parameters[0].description: idMember or
  username
paths./members/{idMember}/avatarSource.put.parameters[0].in: path
paths./members/{idMember}/avatarSource.put.parameters[0].name: idMember
paths./members/{idMember}/avatarSource.put.parameters[0].required: true
paths./members/{idMember}/avatarSource.put.parameters[0].type: string
paths./members/{idMember}/avatarSource.put.parameters[1].description: Attributes of
  "Members Avatar Source" to be updated.
paths./members/{idMember}/avatarSource.put.parameters[1].in: body
paths./members/{idMember}/avatarSource.put.parameters[1].name: body
paths./members/{idMember}/avatarSource.put.parameters[1].required: true
paths./members/{idMember}/avatarSource.put.parameters[1].schema.$ref: '#/definitions/members_avatarSource'
paths./members/{idMember}/avatarSource.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}/avatarSource.put.parameters[2].in: query
paths./members/{idMember}/avatarSource.put.parameters[2].name: key
paths./members/{idMember}/avatarSource.put.parameters[2].required: true
paths./members/{idMember}/avatarSource.put.parameters[2].type: string
paths./members/{idMember}/avatarSource.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/avatarSource.put.parameters[3].in: query
paths./members/{idMember}/avatarSource.put.parameters[3].name: token
paths./members/{idMember}/avatarSource.put.parameters[3].required: true
paths./members/{idMember}/avatarSource.put.parameters[3].type: string
paths./members/{idMember}/avatarSource.put.responses.200.description: Success
paths./members/{idMember}/avatarSource.put.responses.400.description: Server rejection
paths./members/{idMember}/avatarSource.put.security.length: 2
paths./members/{idMember}/avatarSource.put.security[0].api_key.length: 0
paths./members/{idMember}/avatarSource.put.security[1].api_token.length: 0
paths./members/{idMember}/avatarSource.put.summary: updateMembersAvatarSourceByIdMember()
paths./members/{idMember}/avatarSource.put.tags.length: 1
paths./members/{idMember}/avatarSource.put.tags[0]: member
paths./members/{idMember}/bio.put.operationId: updateMembersBioByIdMember
paths./members/{idMember}/bio.put.parameters.length: 4
paths./members/{idMember}/bio.put.parameters[0].description: idMember or username
paths./members/{idMember}/bio.put.parameters[0].in: path
paths./members/{idMember}/bio.put.parameters[0].name: idMember
paths./members/{idMember}/bio.put.parameters[0].required: true
paths./members/{idMember}/bio.put.parameters[0].type: string
paths./members/{idMember}/bio.put.parameters[1].description: Attributes of "Members
  Bio" to be updated.
paths./members/{idMember}/bio.put.parameters[1].in: body
paths./members/{idMember}/bio.put.parameters[1].name: body
paths./members/{idMember}/bio.put.parameters[1].required: true
paths./members/{idMember}/bio.put.parameters[1].schema.$ref: '#/definitions/members_bio'
paths./members/{idMember}/bio.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}/bio.put.parameters[2].in: query
paths./members/{idMember}/bio.put.parameters[2].name: key
paths./members/{idMember}/bio.put.parameters[2].required: true
paths./members/{idMember}/bio.put.parameters[2].type: string
paths./members/{idMember}/bio.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/bio.put.parameters[3].in: query
paths./members/{idMember}/bio.put.parameters[3].name: token
paths./members/{idMember}/bio.put.parameters[3].required: true
paths./members/{idMember}/bio.put.parameters[3].type: string
paths./members/{idMember}/bio.put.responses.200.description: Success
paths./members/{idMember}/bio.put.responses.400.description: Server rejection
paths./members/{idMember}/bio.put.security.length: 2
paths./members/{idMember}/bio.put.security[0].api_key.length: 0
paths./members/{idMember}/bio.put.security[1].api_token.length: 0
paths./members/{idMember}/bio.put.summary: updateMembersBioByIdMember()
paths./members/{idMember}/bio.put.tags.length: 1
paths./members/{idMember}/bio.put.tags[0]: member
paths./members/{idMember}/boardBackgrounds.get.operationId: getMembersBoardBackgroundsByIdMember
paths./members/{idMember}/boardBackgrounds.get.parameters.length: 4
paths./members/{idMember}/boardBackgrounds.get.parameters[0].description: idMember
  or username
paths./members/{idMember}/boardBackgrounds.get.parameters[0].in: path
paths./members/{idMember}/boardBackgrounds.get.parameters[0].name: idMember
paths./members/{idMember}/boardBackgrounds.get.parameters[0].required: true
paths./members/{idMember}/boardBackgrounds.get.parameters[0].type: string
paths./members/{idMember}/boardBackgrounds.get.parameters[1].default: all
paths./members/{idMember}/boardBackgrounds.get.parameters[1].description: 'One of:
  all, custom, default, none or premium'
paths./members/{idMember}/boardBackgrounds.get.parameters[1].in: query
paths./members/{idMember}/boardBackgrounds.get.parameters[1].name: filter
paths./members/{idMember}/boardBackgrounds.get.parameters[1].required: false
paths./members/{idMember}/boardBackgrounds.get.parameters[1].type: string
paths./members/{idMember}/boardBackgrounds.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}/boardBackgrounds.get.parameters[2].in: query
paths./members/{idMember}/boardBackgrounds.get.parameters[2].name: key
paths./members/{idMember}/boardBackgrounds.get.parameters[2].required: true
paths./members/{idMember}/boardBackgrounds.get.parameters[2].type: string
paths./members/{idMember}/boardBackgrounds.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/boardBackgrounds.get.parameters[3].in: query
paths./members/{idMember}/boardBackgrounds.get.parameters[3].name: token
paths./members/{idMember}/boardBackgrounds.get.parameters[3].required: true
paths./members/{idMember}/boardBackgrounds.get.parameters[3].type: string
paths./members/{idMember}/boardBackgrounds.get.responses.200.description: Success
paths./members/{idMember}/boardBackgrounds.get.responses.400.description: Server rejection
paths./members/{idMember}/boardBackgrounds.get.security.length: 2
paths./members/{idMember}/boardBackgrounds.get.security[0].api_key.length: 0
paths./members/{idMember}/boardBackgrounds.get.security[1].api_token.length: 0
paths./members/{idMember}/boardBackgrounds.get.summary: getMembersBoardBackgroundsByIdMember()
paths./members/{idMember}/boardBackgrounds.get.tags.length: 1
paths./members/{idMember}/boardBackgrounds.get.tags[0]: member
paths./members/{idMember}/boardBackgrounds.post.operationId: addMembersBoardBackgroundsByIdMember
paths./members/{idMember}/boardBackgrounds.post.parameters.length: 4
paths./members/{idMember}/boardBackgrounds.post.parameters[0].description: idMember
  or username
paths./members/{idMember}/boardBackgrounds.post.parameters[0].in: path
paths./members/{idMember}/boardBackgrounds.post.parameters[0].name: idMember
paths./members/{idMember}/boardBackgrounds.post.parameters[0].required: true
paths./members/{idMember}/boardBackgrounds.post.parameters[0].type: string
paths./members/{idMember}/boardBackgrounds.post.parameters[1].description: Attributes
  of "Members Board Backgrounds" to be added.
paths./members/{idMember}/boardBackgrounds.post.parameters[1].in: body
paths./members/{idMember}/boardBackgrounds.post.parameters[1].name: body
paths./members/{idMember}/boardBackgrounds.post.parameters[1].required: true
paths./members/{idMember}/boardBackgrounds.post.parameters[1].schema.$ref: '#/definitions/members_boardBackgrounds'
paths./members/{idMember}/boardBackgrounds.post.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}/boardBackgrounds.post.parameters[2].in: query
paths./members/{idMember}/boardBackgrounds.post.parameters[2].name: key
paths./members/{idMember}/boardBackgrounds.post.parameters[2].required: true
paths./members/{idMember}/boardBackgrounds.post.parameters[2].type: string
paths./members/{idMember}/boardBackgrounds.post.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/boardBackgrounds.post.parameters[3].in: query
paths./members/{idMember}/boardBackgrounds.post.parameters[3].name: token
paths./members/{idMember}/boardBackgrounds.post.parameters[3].required: true
paths./members/{idMember}/boardBackgrounds.post.parameters[3].type: string
paths./members/{idMember}/boardBackgrounds.post.responses.200.description: Success
paths./members/{idMember}/boardBackgrounds.post.responses.400.description: Server
  rejection
paths./members/{idMember}/boardBackgrounds.post.security.length: 2
paths./members/{idMember}/boardBackgrounds.post.security[0].api_key.length: 0
paths./members/{idMember}/boardBackgrounds.post.security[1].api_token.length: 0
paths./members/{idMember}/boardBackgrounds.post.summary: addMembersBoardBackgroundsByIdMember()
paths./members/{idMember}/boardBackgrounds.post.tags.length: 1
paths./members/{idMember}/boardBackgrounds.post.tags[0]: member
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.delete.operationId: deleteMembersBoardBackgroundsByIdMemberByIdBoardBackground
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.delete.parameters.length: 4
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.delete.parameters[0].description: idMember
  or username
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.delete.parameters[0].in: path
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.delete.parameters[0].name: idMember
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.delete.parameters[0].required: true
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.delete.parameters[0].type: string
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.delete.parameters[1].description: idBoardBackground
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.delete.parameters[1].in: path
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.delete.parameters[1].name: idBoardBackground
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.delete.parameters[1].required: true
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.delete.parameters[1].type: string
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.delete.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.delete.parameters[2].in: query
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.delete.parameters[2].name: key
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.delete.parameters[2].required: true
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.delete.parameters[2].type: string
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.delete.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.delete.parameters[3].in: query
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.delete.parameters[3].name: token
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.delete.parameters[3].required: true
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.delete.parameters[3].type: string
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.delete.responses.200.description: Success
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.delete.responses.400.description: Server
  rejection
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.delete.security.length: 2
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.delete.security[0].api_key.length: 0
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.delete.security[1].api_token.length: 0
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.delete.summary: deleteMembersBoardBackgroundsByIdMemberByIdBoardBackground()
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.delete.tags.length: 1
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.delete.tags[0]: member
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.operationId: getMembersBoardBackgroundsByIdMemberByIdBoardBackground
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.parameters.length: 5
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.parameters[0].description: idMember
  or username
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.parameters[0].in: path
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.parameters[0].name: idMember
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.parameters[0].required: true
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.parameters[0].type: string
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.parameters[1].description: idBoardBackground
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.parameters[1].in: path
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.parameters[1].name: idBoardBackground
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.parameters[1].required: true
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.parameters[1].type: string
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.parameters[2].default: all
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.parameters[2].description: 'all
  or a comma-separated list of: brightness, fullSizeUrl, scaled or tile'
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.parameters[2].in: query
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.parameters[2].name: fields
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.parameters[2].required: false
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.parameters[2].type: string
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.parameters[3].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.parameters[3].in: query
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.parameters[3].name: key
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.parameters[3].required: true
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.parameters[3].type: string
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.parameters[4].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.parameters[4].in: query
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.parameters[4].name: token
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.parameters[4].required: true
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.parameters[4].type: string
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.responses.200.description: Success
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.responses.400.description: Server
  rejection
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.security.length: 2
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.security[0].api_key.length: 0
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.security[1].api_token.length: 0
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.summary: getMembersBoardBackgroundsByIdMemberByIdBoardBackground()
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.tags.length: 1
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.get.tags[0]: member
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.operationId: updateMembersBoardBackgroundsByIdMemberByIdBoardBackground
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.parameters.length: 5
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.parameters[0].description: idMember
  or username
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.parameters[0].in: path
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.parameters[0].name: idMember
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.parameters[0].required: true
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.parameters[0].type: string
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.parameters[1].description: idBoardBackground
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.parameters[1].in: path
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.parameters[1].name: idBoardBackground
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.parameters[1].required: true
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.parameters[1].type: string
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.parameters[2].description: Attributes
  of "Members Board Backgrounds" to be updated.
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.parameters[2].in: body
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.parameters[2].name: body
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.parameters[2].required: true
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.parameters[2].schema.$ref: '#/definitions/members_boardBackgrounds'
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.parameters[3].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.parameters[3].in: query
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.parameters[3].name: key
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.parameters[3].required: true
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.parameters[3].type: string
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.parameters[4].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.parameters[4].in: query
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.parameters[4].name: token
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.parameters[4].required: true
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.parameters[4].type: string
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.responses.200.description: Success
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.responses.400.description: Server
  rejection
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.security.length: 2
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.security[0].api_key.length: 0
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.security[1].api_token.length: 0
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.summary: updateMembersBoardBackgroundsByIdMemberByIdBoardBackground()
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.tags.length: 1
paths./members/{idMember}/boardBackgrounds/{idBoardBackground}.put.tags[0]: member
paths./members/{idMember}/boardStars.get.operationId: getMembersBoardStarsByIdMember
paths./members/{idMember}/boardStars.get.parameters.length: 3
paths./members/{idMember}/boardStars.get.parameters[0].description: idMember or username
paths./members/{idMember}/boardStars.get.parameters[0].in: path
paths./members/{idMember}/boardStars.get.parameters[0].name: idMember
paths./members/{idMember}/boardStars.get.parameters[0].required: true
paths./members/{idMember}/boardStars.get.parameters[0].type: string
paths./members/{idMember}/boardStars.get.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}/boardStars.get.parameters[1].in: query
paths./members/{idMember}/boardStars.get.parameters[1].name: key
paths./members/{idMember}/boardStars.get.parameters[1].required: true
paths./members/{idMember}/boardStars.get.parameters[1].type: string
paths./members/{idMember}/boardStars.get.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/boardStars.get.parameters[2].in: query
paths./members/{idMember}/boardStars.get.parameters[2].name: token
paths./members/{idMember}/boardStars.get.parameters[2].required: true
paths./members/{idMember}/boardStars.get.parameters[2].type: string
paths./members/{idMember}/boardStars.get.responses.200.description: Success
paths./members/{idMember}/boardStars.get.responses.400.description: Server rejection
paths./members/{idMember}/boardStars.get.security.length: 2
paths./members/{idMember}/boardStars.get.security[0].api_key.length: 0
paths./members/{idMember}/boardStars.get.security[1].api_token.length: 0
paths./members/{idMember}/boardStars.get.summary: getMembersBoardStarsByIdMember()
paths./members/{idMember}/boardStars.get.tags.length: 1
paths./members/{idMember}/boardStars.get.tags[0]: member
paths./members/{idMember}/boardStars.post.operationId: addMembersBoardStarsByIdMember
paths./members/{idMember}/boardStars.post.parameters.length: 4
paths./members/{idMember}/boardStars.post.parameters[0].description: idMember or username
paths./members/{idMember}/boardStars.post.parameters[0].in: path
paths./members/{idMember}/boardStars.post.parameters[0].name: idMember
paths./members/{idMember}/boardStars.post.parameters[0].required: true
paths./members/{idMember}/boardStars.post.parameters[0].type: string
paths./members/{idMember}/boardStars.post.parameters[1].description: Attributes of
  "Members Board Stars" to be added.
paths./members/{idMember}/boardStars.post.parameters[1].in: body
paths./members/{idMember}/boardStars.post.parameters[1].name: body
paths./members/{idMember}/boardStars.post.parameters[1].required: true
paths./members/{idMember}/boardStars.post.parameters[1].schema.$ref: '#/definitions/members_boardStars'
paths./members/{idMember}/boardStars.post.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}/boardStars.post.parameters[2].in: query
paths./members/{idMember}/boardStars.post.parameters[2].name: key
paths./members/{idMember}/boardStars.post.parameters[2].required: true
paths./members/{idMember}/boardStars.post.parameters[2].type: string
paths./members/{idMember}/boardStars.post.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/boardStars.post.parameters[3].in: query
paths./members/{idMember}/boardStars.post.parameters[3].name: token
paths./members/{idMember}/boardStars.post.parameters[3].required: true
paths./members/{idMember}/boardStars.post.parameters[3].type: string
paths./members/{idMember}/boardStars.post.responses.200.description: Success
paths./members/{idMember}/boardStars.post.responses.400.description: Server rejection
paths./members/{idMember}/boardStars.post.security.length: 2
paths./members/{idMember}/boardStars.post.security[0].api_key.length: 0
paths./members/{idMember}/boardStars.post.security[1].api_token.length: 0
paths./members/{idMember}/boardStars.post.summary: addMembersBoardStarsByIdMember()
paths./members/{idMember}/boardStars.post.tags.length: 1
paths./members/{idMember}/boardStars.post.tags[0]: member
paths./members/{idMember}/boardStars/{idBoardStar}.delete.operationId: deleteMembersBoardStarsByIdMemberByIdBoardStar
paths./members/{idMember}/boardStars/{idBoardStar}.delete.parameters.length: 4
paths./members/{idMember}/boardStars/{idBoardStar}.delete.parameters[0].description: idMember
  or username
paths./members/{idMember}/boardStars/{idBoardStar}.delete.parameters[0].in: path
paths./members/{idMember}/boardStars/{idBoardStar}.delete.parameters[0].name: idMember
paths./members/{idMember}/boardStars/{idBoardStar}.delete.parameters[0].required: true
paths./members/{idMember}/boardStars/{idBoardStar}.delete.parameters[0].type: string
paths./members/{idMember}/boardStars/{idBoardStar}.delete.parameters[1].description: idBoardStar
paths./members/{idMember}/boardStars/{idBoardStar}.delete.parameters[1].in: path
paths./members/{idMember}/boardStars/{idBoardStar}.delete.parameters[1].name: idBoardStar
paths./members/{idMember}/boardStars/{idBoardStar}.delete.parameters[1].required: true
paths./members/{idMember}/boardStars/{idBoardStar}.delete.parameters[1].type: string
paths./members/{idMember}/boardStars/{idBoardStar}.delete.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./members/{idMember}/boardStars/{idBoardStar}.delete.parameters[2].in: query
paths./members/{idMember}/boardStars/{idBoardStar}.delete.parameters[2].name: key
paths./members/{idMember}/boardStars/{idBoardStar}.delete.parameters[2].required: true
paths./members/{idMember}/boardStars/{idBoardStar}.delete.parameters[2].type: string
paths./members/{idMember}/boardStars/{idBoardStar}.delete.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/boardStars/{idBoardStar}.delete.parameters[3].in: query
paths./members/{idMember}/boardStars/{idBoardStar}.delete.parameters[3].name: token
paths./members/{idMember}/boardStars/{idBoardStar}.delete.parameters[3].required: true
paths./members/{idMember}/boardStars/{idBoardStar}.delete.parameters[3].type: string
paths./members/{idMember}/boardStars/{idBoardStar}.delete.responses.200.description: Success
paths./members/{idMember}/boardStars/{idBoardStar}.delete.responses.400.description: Server
  rejection
paths./members/{idMember}/boardStars/{idBoardStar}.delete.security.length: 2
paths./members/{idMember}/boardStars/{idBoardStar}.delete.security[0].api_key.length: 0
paths./members/{idMember}/boardStars/{idBoardStar}.delete.security[1].api_token.length: 0
paths./members/{idMember}/boardStars/{idBoardStar}.delete.summary: deleteMembersBoardStarsByIdMemberByIdBoardStar()
paths./members/{idMember}/boardStars/{idBoardStar}.delete.tags.length: 1
paths./members/{idMember}/boardStars/{idBoardStar}.delete.tags[0]: member
paths./members/{idMember}/boardStars/{idBoardStar}.get.operationId: getMembersBoardStarsByIdMemberByIdBoardStar
paths./members/{idMember}/boardStars/{idBoardStar}.get.parameters.length: 4
paths./members/{idMember}/boardStars/{idBoardStar}.get.parameters[0].description: idMember
  or username
paths./members/{idMember}/boardStars/{idBoardStar}.get.parameters[0].in: path
paths./members/{idMember}/boardStars/{idBoardStar}.get.parameters[0].name: idMember
paths./members/{idMember}/boardStars/{idBoardStar}.get.parameters[0].required: true
paths./members/{idMember}/boardStars/{idBoardStar}.get.parameters[0].type: string
paths./members/{idMember}/boardStars/{idBoardStar}.get.parameters[1].description: idBoardStar
paths./members/{idMember}/boardStars/{idBoardStar}.get.parameters[1].in: path
paths./members/{idMember}/boardStars/{idBoardStar}.get.parameters[1].name: idBoardStar
paths./members/{idMember}/boardStars/{idBoardStar}.get.parameters[1].required: true
paths./members/{idMember}/boardStars/{idBoardStar}.get.parameters[1].type: string
paths./members/{idMember}/boardStars/{idBoardStar}.get.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./members/{idMember}/boardStars/{idBoardStar}.get.parameters[2].in: query
paths./members/{idMember}/boardStars/{idBoardStar}.get.parameters[2].name: key
paths./members/{idMember}/boardStars/{idBoardStar}.get.parameters[2].required: true
paths./members/{idMember}/boardStars/{idBoardStar}.get.parameters[2].type: string
paths./members/{idMember}/boardStars/{idBoardStar}.get.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/boardStars/{idBoardStar}.get.parameters[3].in: query
paths./members/{idMember}/boardStars/{idBoardStar}.get.parameters[3].name: token
paths./members/{idMember}/boardStars/{idBoardStar}.get.parameters[3].required: true
paths./members/{idMember}/boardStars/{idBoardStar}.get.parameters[3].type: string
paths./members/{idMember}/boardStars/{idBoardStar}.get.responses.200.description: Success
paths./members/{idMember}/boardStars/{idBoardStar}.get.responses.400.description: Server
  rejection
paths./members/{idMember}/boardStars/{idBoardStar}.get.security.length: 2
paths./members/{idMember}/boardStars/{idBoardStar}.get.security[0].api_key.length: 0
paths./members/{idMember}/boardStars/{idBoardStar}.get.security[1].api_token.length: 0
paths./members/{idMember}/boardStars/{idBoardStar}.get.summary: getMembersBoardStarsByIdMemberByIdBoardStar()
paths./members/{idMember}/boardStars/{idBoardStar}.get.tags.length: 1
paths./members/{idMember}/boardStars/{idBoardStar}.get.tags[0]: member
paths./members/{idMember}/boardStars/{idBoardStar}.put.operationId: updateMembersBoardStarsByIdMemberByIdBoardStar
paths./members/{idMember}/boardStars/{idBoardStar}.put.parameters.length: 5
paths./members/{idMember}/boardStars/{idBoardStar}.put.parameters[0].description: idMember
  or username
paths./members/{idMember}/boardStars/{idBoardStar}.put.parameters[0].in: path
paths./members/{idMember}/boardStars/{idBoardStar}.put.parameters[0].name: idMember
paths./members/{idMember}/boardStars/{idBoardStar}.put.parameters[0].required: true
paths./members/{idMember}/boardStars/{idBoardStar}.put.parameters[0].type: string
paths./members/{idMember}/boardStars/{idBoardStar}.put.parameters[1].description: idBoardStar
paths./members/{idMember}/boardStars/{idBoardStar}.put.parameters[1].in: path
paths./members/{idMember}/boardStars/{idBoardStar}.put.parameters[1].name: idBoardStar
paths./members/{idMember}/boardStars/{idBoardStar}.put.parameters[1].required: true
paths./members/{idMember}/boardStars/{idBoardStar}.put.parameters[1].type: string
paths./members/{idMember}/boardStars/{idBoardStar}.put.parameters[2].description: Attributes
  of "Members Board Stars" to be updated.
paths./members/{idMember}/boardStars/{idBoardStar}.put.parameters[2].in: body
paths./members/{idMember}/boardStars/{idBoardStar}.put.parameters[2].name: body
paths./members/{idMember}/boardStars/{idBoardStar}.put.parameters[2].required: true
paths./members/{idMember}/boardStars/{idBoardStar}.put.parameters[2].schema.$ref: '#/definitions/members_boardStars'
paths./members/{idMember}/boardStars/{idBoardStar}.put.parameters[3].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./members/{idMember}/boardStars/{idBoardStar}.put.parameters[3].in: query
paths./members/{idMember}/boardStars/{idBoardStar}.put.parameters[3].name: key
paths./members/{idMember}/boardStars/{idBoardStar}.put.parameters[3].required: true
paths./members/{idMember}/boardStars/{idBoardStar}.put.parameters[3].type: string
paths./members/{idMember}/boardStars/{idBoardStar}.put.parameters[4].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/boardStars/{idBoardStar}.put.parameters[4].in: query
paths./members/{idMember}/boardStars/{idBoardStar}.put.parameters[4].name: token
paths./members/{idMember}/boardStars/{idBoardStar}.put.parameters[4].required: true
paths./members/{idMember}/boardStars/{idBoardStar}.put.parameters[4].type: string
paths./members/{idMember}/boardStars/{idBoardStar}.put.responses.200.description: Success
paths./members/{idMember}/boardStars/{idBoardStar}.put.responses.400.description: Server
  rejection
paths./members/{idMember}/boardStars/{idBoardStar}.put.security.length: 2
paths./members/{idMember}/boardStars/{idBoardStar}.put.security[0].api_key.length: 0
paths./members/{idMember}/boardStars/{idBoardStar}.put.security[1].api_token.length: 0
paths./members/{idMember}/boardStars/{idBoardStar}.put.summary: updateMembersBoardStarsByIdMemberByIdBoardStar()
paths./members/{idMember}/boardStars/{idBoardStar}.put.tags.length: 1
paths./members/{idMember}/boardStars/{idBoardStar}.put.tags[0]: member
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.operationId: updateMembersBoardStarsIdBoardByIdMemberByIdBoardStar
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.parameters.length: 5
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.parameters[0].description: idMember
  or username
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.parameters[0].in: path
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.parameters[0].name: idMember
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.parameters[0].required: true
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.parameters[0].type: string
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.parameters[1].description: idBoardStar
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.parameters[1].in: path
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.parameters[1].name: idBoardStar
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.parameters[1].required: true
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.parameters[1].type: string
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.parameters[2].description: Attributes
  of "Members Board Stars Id Board" to be updated.
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.parameters[2].in: body
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.parameters[2].name: body
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.parameters[2].required: true
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.parameters[2].schema.$ref: '#/definitions/members_boardStars_idBoard'
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.parameters[3].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.parameters[3].in: query
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.parameters[3].name: key
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.parameters[3].required: true
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.parameters[3].type: string
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.parameters[4].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.parameters[4].in: query
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.parameters[4].name: token
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.parameters[4].required: true
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.parameters[4].type: string
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.responses.200.description: Success
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.responses.400.description: Server
  rejection
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.security.length: 2
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.security[0].api_key.length: 0
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.security[1].api_token.length: 0
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.summary: updateMembersBoardStarsIdBoardByIdMemberByIdBoardStar()
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.tags.length: 1
paths./members/{idMember}/boardStars/{idBoardStar}/idBoard.put.tags[0]: member
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.operationId: updateMembersBoardStarsPosByIdMemberByIdBoardStar
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.parameters.length: 5
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.parameters[0].description: idMember
  or username
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.parameters[0].in: path
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.parameters[0].name: idMember
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.parameters[0].required: true
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.parameters[0].type: string
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.parameters[1].description: idBoardStar
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.parameters[1].in: path
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.parameters[1].name: idBoardStar
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.parameters[1].required: true
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.parameters[1].type: string
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.parameters[2].description: Attributes
  of "Members Board Stars Pos" to be updated.
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.parameters[2].in: body
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.parameters[2].name: body
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.parameters[2].required: true
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.parameters[2].schema.$ref: '#/definitions/members_boardStars_pos'
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.parameters[3].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.parameters[3].in: query
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.parameters[3].name: key
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.parameters[3].required: true
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.parameters[3].type: string
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.parameters[4].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.parameters[4].in: query
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.parameters[4].name: token
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.parameters[4].required: true
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.parameters[4].type: string
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.responses.200.description: Success
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.responses.400.description: Server
  rejection
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.security.length: 2
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.security[0].api_key.length: 0
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.security[1].api_token.length: 0
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.summary: updateMembersBoardStarsPosByIdMemberByIdBoardStar()
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.tags.length: 1
paths./members/{idMember}/boardStars/{idBoardStar}/pos.put.tags[0]: member
paths./members/{idMember}/boards.get.operationId: getMembersBoardsByIdMember
paths./members/{idMember}/boards.get.parameters.length: 15
paths./members/{idMember}/boards.get.parameters[0].description: idMember or username
paths./members/{idMember}/boards.get.parameters[0].in: path
paths./members/{idMember}/boards.get.parameters[0].name: idMember
paths./members/{idMember}/boards.get.parameters[0].required: true
paths./members/{idMember}/boards.get.parameters[0].type: string
paths./members/{idMember}/boards.get.parameters[1].default: all
paths./members/{idMember}/boards.get.parameters[1].description: 'all or a comma-separated
  list of: closed, members, open, organization, pinned, public, starred or unpinned'
paths./members/{idMember}/boards.get.parameters[1].in: query
paths./members/{idMember}/boards.get.parameters[1].name: filter
paths./members/{idMember}/boards.get.parameters[1].required: false
paths./members/{idMember}/boards.get.parameters[1].type: string
paths./members/{idMember}/boards.get.parameters[2].default: all
paths./members/{idMember}/boards.get.parameters[2].description: 'all or a comma-separated
  list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization,
  invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
  shortUrl, starred, subscribed or url'
paths./members/{idMember}/boards.get.parameters[2].in: query
paths./members/{idMember}/boards.get.parameters[2].name: fields
paths./members/{idMember}/boards.get.parameters[2].required: false
paths./members/{idMember}/boards.get.parameters[2].type: string
paths./members/{idMember}/boards.get.parameters[3].description: 'all or a comma-separated
  list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard,
  addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem,
  copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization,
  deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation,
  disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
  makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard,
  moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,
  removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
  updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,
  updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed,
  updateList:name, updateMember or updateOrganization'
paths./members/{idMember}/boards.get.parameters[3].in: query
paths./members/{idMember}/boards.get.parameters[3].name: actions
paths./members/{idMember}/boards.get.parameters[3].required: false
paths./members/{idMember}/boards.get.parameters[3].type: string
paths./members/{idMember}/boards.get.parameters[4].description: ' true or false'
paths./members/{idMember}/boards.get.parameters[4].in: query
paths./members/{idMember}/boards.get.parameters[4].name: actions_entities
paths./members/{idMember}/boards.get.parameters[4].required: false
paths./members/{idMember}/boards.get.parameters[4].type: string
paths./members/{idMember}/boards.get.parameters[5].default: "50"
paths./members/{idMember}/boards.get.parameters[5].description: a number from 0 to
  1000
paths./members/{idMember}/boards.get.parameters[5].in: query
paths./members/{idMember}/boards.get.parameters[5].name: actions_limit
paths./members/{idMember}/boards.get.parameters[5].required: false
paths./members/{idMember}/boards.get.parameters[5].type: string
paths./members/{idMember}/boards.get.parameters[6].default: list
paths./members/{idMember}/boards.get.parameters[6].description: 'One of: count, list
  or minimal'
paths./members/{idMember}/boards.get.parameters[6].in: query
paths./members/{idMember}/boards.get.parameters[6].name: actions_format
paths./members/{idMember}/boards.get.parameters[6].required: false
paths./members/{idMember}/boards.get.parameters[6].type: string
paths./members/{idMember}/boards.get.parameters[7].description: A date, null or lastView
paths./members/{idMember}/boards.get.parameters[7].in: query
paths./members/{idMember}/boards.get.parameters[7].name: actions_since
paths./members/{idMember}/boards.get.parameters[7].required: false
paths./members/{idMember}/boards.get.parameters[7].type: string
paths./members/{idMember}/boards.get.parameters[8].default: all
paths./members/{idMember}/boards.get.parameters[8].description: 'all or a comma-separated
  list of: data, date, idMemberCreator or type'
paths./members/{idMember}/boards.get.parameters[8].in: query
paths./members/{idMember}/boards.get.parameters[8].name: action_fields
paths./members/{idMember}/boards.get.parameters[8].required: false
paths./members/{idMember}/boards.get.parameters[8].type: string
paths./members/{idMember}/boards.get.parameters[9].default: none
paths./members/{idMember}/boards.get.parameters[9].description: 'all or a comma-separated
  list of: active, admin, deactivated, me or normal'
paths./members/{idMember}/boards.get.parameters[9].in: query
paths./members/{idMember}/boards.get.parameters[9].name: memberships
paths./members/{idMember}/boards.get.parameters[9].required: false
paths./members/{idMember}/boards.get.parameters[9].type: string
paths./members/{idMember}/boards.get.parameters[10].description: ' true or false'
paths./members/{idMember}/boards.get.parameters[10].in: query
paths./members/{idMember}/boards.get.parameters[10].name: organization
paths./members/{idMember}/boards.get.parameters[10].required: false
paths./members/{idMember}/boards.get.parameters[10].type: string
paths./members/{idMember}/boards.get.parameters[11].default: name and displayName
paths./members/{idMember}/boards.get.parameters[11].description: 'all or a comma-separated
  list of: billableMemberCount, desc, descData, displayName, idBoards, invitations,
  invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products,
  url or website'
paths./members/{idMember}/boards.get.parameters[11].in: query
paths./members/{idMember}/boards.get.parameters[11].name: organization_fields
paths./members/{idMember}/boards.get.parameters[11].required: false
paths./members/{idMember}/boards.get.parameters[11].type: string
paths./members/{idMember}/boards.get.parameters[12].default: none
paths./members/{idMember}/boards.get.parameters[12].description: 'One of: all, closed,
  none or open'
paths./members/{idMember}/boards.get.parameters[12].in: query
paths./members/{idMember}/boards.get.parameters[12].name: lists
paths./members/{idMember}/boards.get.parameters[12].required: false
paths./members/{idMember}/boards.get.parameters[12].type: string
paths./members/{idMember}/boards.get.parameters[13].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}/boards.get.parameters[13].in: query
paths./members/{idMember}/boards.get.parameters[13].name: key
paths./members/{idMember}/boards.get.parameters[13].required: true
paths./members/{idMember}/boards.get.parameters[13].type: string
paths./members/{idMember}/boards.get.parameters[14].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/boards.get.parameters[14].in: query
paths./members/{idMember}/boards.get.parameters[14].name: token
paths./members/{idMember}/boards.get.parameters[14].required: true
paths./members/{idMember}/boards.get.parameters[14].type: string
paths./members/{idMember}/boards.get.responses.200.description: Success
paths./members/{idMember}/boards.get.responses.400.description: Server rejection
paths./members/{idMember}/boards.get.security.length: 2
paths./members/{idMember}/boards.get.security[0].api_key.length: 0
paths./members/{idMember}/boards.get.security[1].api_token.length: 0
paths./members/{idMember}/boards.get.summary: getMembersBoardsByIdMember()
paths./members/{idMember}/boards.get.tags.length: 1
paths./members/{idMember}/boards.get.tags[0]: member
paths./members/{idMember}/boards/{filter}.get.operationId: getMembersBoardsByIdMemberByFilter
paths./members/{idMember}/boards/{filter}.get.parameters.length: 4
paths./members/{idMember}/boards/{filter}.get.parameters[0].description: idMember
  or username
paths./members/{idMember}/boards/{filter}.get.parameters[0].in: path
paths./members/{idMember}/boards/{filter}.get.parameters[0].name: idMember
paths./members/{idMember}/boards/{filter}.get.parameters[0].required: true
paths./members/{idMember}/boards/{filter}.get.parameters[0].type: string
paths./members/{idMember}/boards/{filter}.get.parameters[1].description: filter
paths./members/{idMember}/boards/{filter}.get.parameters[1].in: path
paths./members/{idMember}/boards/{filter}.get.parameters[1].name: filter
paths./members/{idMember}/boards/{filter}.get.parameters[1].required: true
paths./members/{idMember}/boards/{filter}.get.parameters[1].type: string
paths./members/{idMember}/boards/{filter}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}/boards/{filter}.get.parameters[2].in: query
paths./members/{idMember}/boards/{filter}.get.parameters[2].name: key
paths./members/{idMember}/boards/{filter}.get.parameters[2].required: true
paths./members/{idMember}/boards/{filter}.get.parameters[2].type: string
paths./members/{idMember}/boards/{filter}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/boards/{filter}.get.parameters[3].in: query
paths./members/{idMember}/boards/{filter}.get.parameters[3].name: token
paths./members/{idMember}/boards/{filter}.get.parameters[3].required: true
paths./members/{idMember}/boards/{filter}.get.parameters[3].type: string
paths./members/{idMember}/boards/{filter}.get.responses.200.description: Success
paths./members/{idMember}/boards/{filter}.get.responses.400.description: Server rejection
paths./members/{idMember}/boards/{filter}.get.summary: getMembersBoardsByIdMemberByFilter()
paths./members/{idMember}/boards/{filter}.get.tags.length: 1
paths./members/{idMember}/boards/{filter}.get.tags[0]: member
paths./members/{idMember}/boardsInvited.get.operationId: getMembersBoardsInvitedByIdMember
paths./members/{idMember}/boardsInvited.get.parameters.length: 4
paths./members/{idMember}/boardsInvited.get.parameters[0].description: idMember or
  username
paths./members/{idMember}/boardsInvited.get.parameters[0].in: path
paths./members/{idMember}/boardsInvited.get.parameters[0].name: idMember
paths./members/{idMember}/boardsInvited.get.parameters[0].required: true
paths./members/{idMember}/boardsInvited.get.parameters[0].type: string
paths./members/{idMember}/boardsInvited.get.parameters[1].default: all
paths./members/{idMember}/boardsInvited.get.parameters[1].description: 'all or a comma-separated
  list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization,
  invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
  shortUrl, starred, subscribed or url'
paths./members/{idMember}/boardsInvited.get.parameters[1].in: query
paths./members/{idMember}/boardsInvited.get.parameters[1].name: fields
paths./members/{idMember}/boardsInvited.get.parameters[1].required: false
paths./members/{idMember}/boardsInvited.get.parameters[1].type: string
paths./members/{idMember}/boardsInvited.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}/boardsInvited.get.parameters[2].in: query
paths./members/{idMember}/boardsInvited.get.parameters[2].name: key
paths./members/{idMember}/boardsInvited.get.parameters[2].required: true
paths./members/{idMember}/boardsInvited.get.parameters[2].type: string
paths./members/{idMember}/boardsInvited.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/boardsInvited.get.parameters[3].in: query
paths./members/{idMember}/boardsInvited.get.parameters[3].name: token
paths./members/{idMember}/boardsInvited.get.parameters[3].required: true
paths./members/{idMember}/boardsInvited.get.parameters[3].type: string
paths./members/{idMember}/boardsInvited.get.responses.200.description: Success
paths./members/{idMember}/boardsInvited.get.responses.400.description: Server rejection
paths./members/{idMember}/boardsInvited.get.security.length: 2
paths./members/{idMember}/boardsInvited.get.security[0].api_key.length: 0
paths./members/{idMember}/boardsInvited.get.security[1].api_token.length: 0
paths./members/{idMember}/boardsInvited.get.summary: getMembersBoardsInvitedByIdMember()
paths./members/{idMember}/boardsInvited.get.tags.length: 1
paths./members/{idMember}/boardsInvited.get.tags[0]: member
paths./members/{idMember}/boardsInvited/{field}.get.operationId: getMembersBoardsInvitedByIdMemberByField
paths./members/{idMember}/boardsInvited/{field}.get.parameters.length: 4
paths./members/{idMember}/boardsInvited/{field}.get.parameters[0].description: idMember
  or username
paths./members/{idMember}/boardsInvited/{field}.get.parameters[0].in: path
paths./members/{idMember}/boardsInvited/{field}.get.parameters[0].name: idMember
paths./members/{idMember}/boardsInvited/{field}.get.parameters[0].required: true
paths./members/{idMember}/boardsInvited/{field}.get.parameters[0].type: string
paths./members/{idMember}/boardsInvited/{field}.get.parameters[1].description: field
paths./members/{idMember}/boardsInvited/{field}.get.parameters[1].in: path
paths./members/{idMember}/boardsInvited/{field}.get.parameters[1].name: field
paths./members/{idMember}/boardsInvited/{field}.get.parameters[1].required: true
paths./members/{idMember}/boardsInvited/{field}.get.parameters[1].type: string
paths./members/{idMember}/boardsInvited/{field}.get.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./members/{idMember}/boardsInvited/{field}.get.parameters[2].in: query
paths./members/{idMember}/boardsInvited/{field}.get.parameters[2].name: key
paths./members/{idMember}/boardsInvited/{field}.get.parameters[2].required: true
paths./members/{idMember}/boardsInvited/{field}.get.parameters[2].type: string
paths./members/{idMember}/boardsInvited/{field}.get.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/boardsInvited/{field}.get.parameters[3].in: query
paths./members/{idMember}/boardsInvited/{field}.get.parameters[3].name: token
paths./members/{idMember}/boardsInvited/{field}.get.parameters[3].required: true
paths./members/{idMember}/boardsInvited/{field}.get.parameters[3].type: string
paths./members/{idMember}/boardsInvited/{field}.get.responses.200.description: Success
paths./members/{idMember}/boardsInvited/{field}.get.responses.400.description: Server
  rejection
paths./members/{idMember}/boardsInvited/{field}.get.security.length: 2
paths./members/{idMember}/boardsInvited/{field}.get.security[0].api_key.length: 0
paths./members/{idMember}/boardsInvited/{field}.get.security[1].api_token.length: 0
paths./members/{idMember}/boardsInvited/{field}.get.summary: getMembersBoardsInvitedByIdMemberByField()
paths./members/{idMember}/boardsInvited/{field}.get.tags.length: 1
paths./members/{idMember}/boardsInvited/{field}.get.tags[0]: member
paths./members/{idMember}/cards.get.operationId: getMembersCardsByIdMember
paths./members/{idMember}/cards.get.parameters.length: 16
paths./members/{idMember}/cards.get.parameters[0].description: idMember or username
paths./members/{idMember}/cards.get.parameters[0].in: path
paths./members/{idMember}/cards.get.parameters[0].name: idMember
paths./members/{idMember}/cards.get.parameters[0].required: true
paths./members/{idMember}/cards.get.parameters[0].type: string
paths./members/{idMember}/cards.get.parameters[1].description: 'all or a comma-separated
  list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard,
  addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem,
  copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization,
  deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation,
  disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
  makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard,
  moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,
  removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
  updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,
  updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed,
  updateList:name, updateMember or updateOrganization'
paths./members/{idMember}/cards.get.parameters[1].in: query
paths./members/{idMember}/cards.get.parameters[1].name: actions
paths./members/{idMember}/cards.get.parameters[1].required: false
paths./members/{idMember}/cards.get.parameters[1].type: string
paths./members/{idMember}/cards.get.parameters[2].description: A boolean value or
  &quot;cover&quot; for only card cover attachments
paths./members/{idMember}/cards.get.parameters[2].in: query
paths./members/{idMember}/cards.get.parameters[2].name: attachments
paths./members/{idMember}/cards.get.parameters[2].required: false
paths./members/{idMember}/cards.get.parameters[2].type: string
paths./members/{idMember}/cards.get.parameters[3].default: all
paths./members/{idMember}/cards.get.parameters[3].description: 'all or a comma-separated
  list of: bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews or
  url'
paths./members/{idMember}/cards.get.parameters[3].in: query
paths./members/{idMember}/cards.get.parameters[3].name: attachment_fields
paths./members/{idMember}/cards.get.parameters[3].required: false
paths./members/{idMember}/cards.get.parameters[3].type: string
paths./members/{idMember}/cards.get.parameters[4].description: ' true or false'
paths./members/{idMember}/cards.get.parameters[4].in: query
paths./members/{idMember}/cards.get.parameters[4].name: stickers
paths./members/{idMember}/cards.get.parameters[4].required: false
paths./members/{idMember}/cards.get.parameters[4].type: string
paths./members/{idMember}/cards.get.parameters[5].description: ' true or false'
paths./members/{idMember}/cards.get.parameters[5].in: query
paths./members/{idMember}/cards.get.parameters[5].name: members
paths./members/{idMember}/cards.get.parameters[5].required: false
paths./members/{idMember}/cards.get.parameters[5].type: string
paths./members/{idMember}/cards.get.parameters[6].default: avatarHash, fullName, initials
  and username
paths./members/{idMember}/cards.get.parameters[6].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./members/{idMember}/cards.get.parameters[6].in: query
paths./members/{idMember}/cards.get.parameters[6].name: member_fields
paths./members/{idMember}/cards.get.parameters[6].required: false
paths./members/{idMember}/cards.get.parameters[6].type: string
paths./members/{idMember}/cards.get.parameters[7].description: ' true or false'
paths./members/{idMember}/cards.get.parameters[7].in: query
paths./members/{idMember}/cards.get.parameters[7].name: checkItemStates
paths./members/{idMember}/cards.get.parameters[7].required: false
paths./members/{idMember}/cards.get.parameters[7].type: string
paths./members/{idMember}/cards.get.parameters[8].default: none
paths./members/{idMember}/cards.get.parameters[8].description: 'One of: all or none'
paths./members/{idMember}/cards.get.parameters[8].in: query
paths./members/{idMember}/cards.get.parameters[8].name: checklists
paths./members/{idMember}/cards.get.parameters[8].required: false
paths./members/{idMember}/cards.get.parameters[8].type: string
paths./members/{idMember}/cards.get.parameters[9].description: a number from 1 to
  1000
paths./members/{idMember}/cards.get.parameters[9].in: query
paths./members/{idMember}/cards.get.parameters[9].name: limit
paths./members/{idMember}/cards.get.parameters[9].required: false
paths./members/{idMember}/cards.get.parameters[9].type: string
paths./members/{idMember}/cards.get.parameters[10].description: A date, or null
paths./members/{idMember}/cards.get.parameters[10].in: query
paths./members/{idMember}/cards.get.parameters[10].name: since
paths./members/{idMember}/cards.get.parameters[10].required: false
paths./members/{idMember}/cards.get.parameters[10].type: string
paths./members/{idMember}/cards.get.parameters[11].description: A date, or null
paths./members/{idMember}/cards.get.parameters[11].in: query
paths./members/{idMember}/cards.get.parameters[11].name: before
paths./members/{idMember}/cards.get.parameters[11].required: false
paths./members/{idMember}/cards.get.parameters[11].type: string
paths./members/{idMember}/cards.get.parameters[12].default: visible
paths./members/{idMember}/cards.get.parameters[12].description: 'One of: all, closed,
  none, open or visible'
paths./members/{idMember}/cards.get.parameters[12].in: query
paths./members/{idMember}/cards.get.parameters[12].name: filter
paths./members/{idMember}/cards.get.parameters[12].required: false
paths./members/{idMember}/cards.get.parameters[12].type: string
paths./members/{idMember}/cards.get.parameters[13].default: all
paths./members/{idMember}/cards.get.parameters[13].description: 'all or a comma-separated
  list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due,
  email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
  idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed
  or url'
paths./members/{idMember}/cards.get.parameters[13].in: query
paths./members/{idMember}/cards.get.parameters[13].name: fields
paths./members/{idMember}/cards.get.parameters[13].required: false
paths./members/{idMember}/cards.get.parameters[13].type: string
paths./members/{idMember}/cards.get.parameters[14].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}/cards.get.parameters[14].in: query
paths./members/{idMember}/cards.get.parameters[14].name: key
paths./members/{idMember}/cards.get.parameters[14].required: true
paths./members/{idMember}/cards.get.parameters[14].type: string
paths./members/{idMember}/cards.get.parameters[15].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/cards.get.parameters[15].in: query
paths./members/{idMember}/cards.get.parameters[15].name: token
paths./members/{idMember}/cards.get.parameters[15].required: true
paths./members/{idMember}/cards.get.parameters[15].type: string
paths./members/{idMember}/cards.get.responses.200.description: Success
paths./members/{idMember}/cards.get.responses.400.description: Server rejection
paths./members/{idMember}/cards.get.security.length: 2
paths./members/{idMember}/cards.get.security[0].api_key.length: 0
paths./members/{idMember}/cards.get.security[1].api_token.length: 0
paths./members/{idMember}/cards.get.summary: getMembersCardsByIdMember()
paths./members/{idMember}/cards.get.tags.length: 1
paths./members/{idMember}/cards.get.tags[0]: member
paths./members/{idMember}/cards/{filter}.get.operationId: getMembersCardsByIdMemberByFilter
paths./members/{idMember}/cards/{filter}.get.parameters.length: 4
paths./members/{idMember}/cards/{filter}.get.parameters[0].description: idMember or
  username
paths./members/{idMember}/cards/{filter}.get.parameters[0].in: path
paths./members/{idMember}/cards/{filter}.get.parameters[0].name: idMember
paths./members/{idMember}/cards/{filter}.get.parameters[0].required: true
paths./members/{idMember}/cards/{filter}.get.parameters[0].type: string
paths./members/{idMember}/cards/{filter}.get.parameters[1].description: filter
paths./members/{idMember}/cards/{filter}.get.parameters[1].in: path
paths./members/{idMember}/cards/{filter}.get.parameters[1].name: filter
paths./members/{idMember}/cards/{filter}.get.parameters[1].required: true
paths./members/{idMember}/cards/{filter}.get.parameters[1].type: string
paths./members/{idMember}/cards/{filter}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}/cards/{filter}.get.parameters[2].in: query
paths./members/{idMember}/cards/{filter}.get.parameters[2].name: key
paths./members/{idMember}/cards/{filter}.get.parameters[2].required: true
paths./members/{idMember}/cards/{filter}.get.parameters[2].type: string
paths./members/{idMember}/cards/{filter}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/cards/{filter}.get.parameters[3].in: query
paths./members/{idMember}/cards/{filter}.get.parameters[3].name: token
paths./members/{idMember}/cards/{filter}.get.parameters[3].required: true
paths./members/{idMember}/cards/{filter}.get.parameters[3].type: string
paths./members/{idMember}/cards/{filter}.get.responses.200.description: Success
paths./members/{idMember}/cards/{filter}.get.responses.400.description: Server rejection
paths./members/{idMember}/cards/{filter}.get.summary: getMembersCardsByIdMemberByFilter()
paths./members/{idMember}/cards/{filter}.get.tags.length: 1
paths./members/{idMember}/cards/{filter}.get.tags[0]: member
paths./members/{idMember}/customBoardBackgrounds.get.operationId: getMembersCustomBoardBackgroundsByIdMember
paths./members/{idMember}/customBoardBackgrounds.get.parameters.length: 4
paths./members/{idMember}/customBoardBackgrounds.get.parameters[0].description: idMember
  or username
paths./members/{idMember}/customBoardBackgrounds.get.parameters[0].in: path
paths./members/{idMember}/customBoardBackgrounds.get.parameters[0].name: idMember
paths./members/{idMember}/customBoardBackgrounds.get.parameters[0].required: true
paths./members/{idMember}/customBoardBackgrounds.get.parameters[0].type: string
paths./members/{idMember}/customBoardBackgrounds.get.parameters[1].default: all
paths./members/{idMember}/customBoardBackgrounds.get.parameters[1].description: 'One
  of: all or none'
paths./members/{idMember}/customBoardBackgrounds.get.parameters[1].in: query
paths./members/{idMember}/customBoardBackgrounds.get.parameters[1].name: filter
paths./members/{idMember}/customBoardBackgrounds.get.parameters[1].required: false
paths./members/{idMember}/customBoardBackgrounds.get.parameters[1].type: string
paths./members/{idMember}/customBoardBackgrounds.get.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./members/{idMember}/customBoardBackgrounds.get.parameters[2].in: query
paths./members/{idMember}/customBoardBackgrounds.get.parameters[2].name: key
paths./members/{idMember}/customBoardBackgrounds.get.parameters[2].required: true
paths./members/{idMember}/customBoardBackgrounds.get.parameters[2].type: string
paths./members/{idMember}/customBoardBackgrounds.get.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/customBoardBackgrounds.get.parameters[3].in: query
paths./members/{idMember}/customBoardBackgrounds.get.parameters[3].name: token
paths./members/{idMember}/customBoardBackgrounds.get.parameters[3].required: true
paths./members/{idMember}/customBoardBackgrounds.get.parameters[3].type: string
paths./members/{idMember}/customBoardBackgrounds.get.responses.200.description: Success
paths./members/{idMember}/customBoardBackgrounds.get.responses.400.description: Server
  rejection
paths./members/{idMember}/customBoardBackgrounds.get.security.length: 2
paths./members/{idMember}/customBoardBackgrounds.get.security[0].api_key.length: 0
paths./members/{idMember}/customBoardBackgrounds.get.security[1].api_token.length: 0
paths./members/{idMember}/customBoardBackgrounds.get.summary: getMembersCustomBoardBackgroundsByIdMember()
paths./members/{idMember}/customBoardBackgrounds.get.tags.length: 1
paths./members/{idMember}/customBoardBackgrounds.get.tags[0]: member
paths./members/{idMember}/customBoardBackgrounds.post.operationId: addMembersCustomBoardBackgroundsByIdMember
paths./members/{idMember}/customBoardBackgrounds.post.parameters.length: 4
paths./members/{idMember}/customBoardBackgrounds.post.parameters[0].description: idMember
  or username
paths./members/{idMember}/customBoardBackgrounds.post.parameters[0].in: path
paths./members/{idMember}/customBoardBackgrounds.post.parameters[0].name: idMember
paths./members/{idMember}/customBoardBackgrounds.post.parameters[0].required: true
paths./members/{idMember}/customBoardBackgrounds.post.parameters[0].type: string
paths./members/{idMember}/customBoardBackgrounds.post.parameters[1].description: Attributes
  of "Members Custom Board Backgrounds" to be added.
paths./members/{idMember}/customBoardBackgrounds.post.parameters[1].in: body
paths./members/{idMember}/customBoardBackgrounds.post.parameters[1].name: body
paths./members/{idMember}/customBoardBackgrounds.post.parameters[1].required: true
paths./members/{idMember}/customBoardBackgrounds.post.parameters[1].schema.$ref: '#/definitions/members_customBoardBackgrounds'
paths./members/{idMember}/customBoardBackgrounds.post.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./members/{idMember}/customBoardBackgrounds.post.parameters[2].in: query
paths./members/{idMember}/customBoardBackgrounds.post.parameters[2].name: key
paths./members/{idMember}/customBoardBackgrounds.post.parameters[2].required: true
paths./members/{idMember}/customBoardBackgrounds.post.parameters[2].type: string
paths./members/{idMember}/customBoardBackgrounds.post.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/customBoardBackgrounds.post.parameters[3].in: query
paths./members/{idMember}/customBoardBackgrounds.post.parameters[3].name: token
paths./members/{idMember}/customBoardBackgrounds.post.parameters[3].required: true
paths./members/{idMember}/customBoardBackgrounds.post.parameters[3].type: string
paths./members/{idMember}/customBoardBackgrounds.post.responses.200.description: Success
paths./members/{idMember}/customBoardBackgrounds.post.responses.400.description: Server
  rejection
paths./members/{idMember}/customBoardBackgrounds.post.security.length: 2
paths./members/{idMember}/customBoardBackgrounds.post.security[0].api_key.length: 0
paths./members/{idMember}/customBoardBackgrounds.post.security[1].api_token.length: 0
paths./members/{idMember}/customBoardBackgrounds.post.summary: addMembersCustomBoardBackgroundsByIdMember()
paths./members/{idMember}/customBoardBackgrounds.post.tags.length: 1
paths./members/{idMember}/customBoardBackgrounds.post.tags[0]: member
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.delete.operationId: deleteMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.delete.parameters.length: 4
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.delete.parameters[0].description: idMember
  or username
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.delete.parameters[0].in: path
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.delete.parameters[0].name: idMember
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.delete.parameters[0].required: true
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.delete.parameters[0].type: string
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.delete.parameters[1].description: idBoardBackground
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.delete.parameters[1].in: path
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.delete.parameters[1].name: idBoardBackground
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.delete.parameters[1].required: true
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.delete.parameters[1].type: string
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.delete.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.delete.parameters[2].in: query
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.delete.parameters[2].name: key
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.delete.parameters[2].required: true
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.delete.parameters[2].type: string
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.delete.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.delete.parameters[3].in: query
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.delete.parameters[3].name: token
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.delete.parameters[3].required: true
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.delete.parameters[3].type: string
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.delete.responses.200.description: Success
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.delete.responses.400.description: Server
  rejection
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.delete.security.length: 2
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.delete.security[0].api_key.length: 0
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.delete.security[1].api_token.length: 0
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.delete.summary: deleteMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground()
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.delete.tags.length: 1
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.delete.tags[0]: member
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.operationId: getMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.parameters.length: 5
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.parameters[0].description: idMember
  or username
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.parameters[0].in: path
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.parameters[0].name: idMember
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.parameters[0].required: true
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.parameters[0].type: string
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.parameters[1].description: idBoardBackground
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.parameters[1].in: path
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.parameters[1].name: idBoardBackground
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.parameters[1].required: true
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.parameters[1].type: string
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.parameters[2].default: all
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.parameters[2].description: 'all
  or a comma-separated list of: brightness, fullSizeUrl, scaled or tile'
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.parameters[2].in: query
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.parameters[2].name: fields
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.parameters[2].required: false
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.parameters[2].type: string
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.parameters[3].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.parameters[3].in: query
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.parameters[3].name: key
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.parameters[3].required: true
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.parameters[3].type: string
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.parameters[4].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.parameters[4].in: query
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.parameters[4].name: token
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.parameters[4].required: true
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.parameters[4].type: string
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.responses.200.description: Success
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.responses.400.description: Server
  rejection
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.security.length: 2
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.security[0].api_key.length: 0
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.security[1].api_token.length: 0
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.summary: getMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground()
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.tags.length: 1
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.get.tags[0]: member
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.operationId: updateMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.parameters.length: 5
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.parameters[0].description: idMember
  or username
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.parameters[0].in: path
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.parameters[0].name: idMember
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.parameters[0].required: true
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.parameters[0].type: string
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.parameters[1].description: idBoardBackground
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.parameters[1].in: path
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.parameters[1].name: idBoardBackground
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.parameters[1].required: true
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.parameters[1].type: string
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.parameters[2].description: Attributes
  of "Members Custom Board Backgrounds" to be updated.
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.parameters[2].in: body
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.parameters[2].name: body
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.parameters[2].required: true
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.parameters[2].schema.$ref: '#/definitions/members_customBoardBackgrounds'
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.parameters[3].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.parameters[3].in: query
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.parameters[3].name: key
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.parameters[3].required: true
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.parameters[3].type: string
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.parameters[4].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.parameters[4].in: query
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.parameters[4].name: token
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.parameters[4].required: true
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.parameters[4].type: string
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.responses.200.description: Success
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.responses.400.description: Server
  rejection
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.security.length: 2
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.security[0].api_key.length: 0
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.security[1].api_token.length: 0
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.summary: updateMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground()
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.tags.length: 1
paths./members/{idMember}/customBoardBackgrounds/{idBoardBackground}.put.tags[0]: member
paths./members/{idMember}/customEmoji.get.description: This gets the list of all of
  the user’s uploaded emoji
paths./members/{idMember}/customEmoji.get.operationId: getMembersCustomEmojiByIdMember
paths./members/{idMember}/customEmoji.get.parameters.length: 4
paths./members/{idMember}/customEmoji.get.parameters[0].description: idMember or username
paths./members/{idMember}/customEmoji.get.parameters[0].in: path
paths./members/{idMember}/customEmoji.get.parameters[0].name: idMember
paths./members/{idMember}/customEmoji.get.parameters[0].required: true
paths./members/{idMember}/customEmoji.get.parameters[0].type: string
paths./members/{idMember}/customEmoji.get.parameters[1].default: all
paths./members/{idMember}/customEmoji.get.parameters[1].description: 'One of: all
  or none'
paths./members/{idMember}/customEmoji.get.parameters[1].in: query
paths./members/{idMember}/customEmoji.get.parameters[1].name: filter
paths./members/{idMember}/customEmoji.get.parameters[1].required: false
paths./members/{idMember}/customEmoji.get.parameters[1].type: string
paths./members/{idMember}/customEmoji.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}/customEmoji.get.parameters[2].in: query
paths./members/{idMember}/customEmoji.get.parameters[2].name: key
paths./members/{idMember}/customEmoji.get.parameters[2].required: true
paths./members/{idMember}/customEmoji.get.parameters[2].type: string
paths./members/{idMember}/customEmoji.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/customEmoji.get.parameters[3].in: query
paths./members/{idMember}/customEmoji.get.parameters[3].name: token
paths./members/{idMember}/customEmoji.get.parameters[3].required: true
paths./members/{idMember}/customEmoji.get.parameters[3].type: string
paths./members/{idMember}/customEmoji.get.responses.200.description: Success
paths./members/{idMember}/customEmoji.get.responses.400.description: Server rejection
paths./members/{idMember}/customEmoji.get.security.length: 2
paths./members/{idMember}/customEmoji.get.security[0].api_key.length: 0
paths./members/{idMember}/customEmoji.get.security[1].api_token.length: 0
paths./members/{idMember}/customEmoji.get.summary: getMembersCustomEmojiByIdMember()
paths./members/{idMember}/customEmoji.get.tags.length: 1
paths./members/{idMember}/customEmoji.get.tags[0]: member
paths./members/{idMember}/customEmoji.post.operationId: addMembersCustomEmojiByIdMember
paths./members/{idMember}/customEmoji.post.parameters.length: 4
paths./members/{idMember}/customEmoji.post.parameters[0].description: idMember or
  username
paths./members/{idMember}/customEmoji.post.parameters[0].in: path
paths./members/{idMember}/customEmoji.post.parameters[0].name: idMember
paths./members/{idMember}/customEmoji.post.parameters[0].required: true
paths./members/{idMember}/customEmoji.post.parameters[0].type: string
paths./members/{idMember}/customEmoji.post.parameters[1].description: Attributes of
  "Members Custom Emoji" to be added.
paths./members/{idMember}/customEmoji.post.parameters[1].in: body
paths./members/{idMember}/customEmoji.post.parameters[1].name: body
paths./members/{idMember}/customEmoji.post.parameters[1].required: true
paths./members/{idMember}/customEmoji.post.parameters[1].schema.$ref: '#/definitions/members_customEmoji'
paths./members/{idMember}/customEmoji.post.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}/customEmoji.post.parameters[2].in: query
paths./members/{idMember}/customEmoji.post.parameters[2].name: key
paths./members/{idMember}/customEmoji.post.parameters[2].required: true
paths./members/{idMember}/customEmoji.post.parameters[2].type: string
paths./members/{idMember}/customEmoji.post.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/customEmoji.post.parameters[3].in: query
paths./members/{idMember}/customEmoji.post.parameters[3].name: token
paths./members/{idMember}/customEmoji.post.parameters[3].required: true
paths./members/{idMember}/customEmoji.post.parameters[3].type: string
paths./members/{idMember}/customEmoji.post.responses.200.description: Success
paths./members/{idMember}/customEmoji.post.responses.400.description: Server rejection
paths./members/{idMember}/customEmoji.post.security.length: 2
paths./members/{idMember}/customEmoji.post.security[0].api_key.length: 0
paths./members/{idMember}/customEmoji.post.security[1].api_token.length: 0
paths./members/{idMember}/customEmoji.post.summary: addMembersCustomEmojiByIdMember()
paths./members/{idMember}/customEmoji.post.tags.length: 1
paths./members/{idMember}/customEmoji.post.tags[0]: member
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.operationId: getMembersCustomEmojiByIdMemberByIdCustomEmoji
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.parameters.length: 5
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.parameters[0].description: idMember
  or username
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.parameters[0].in: path
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.parameters[0].name: idMember
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.parameters[0].required: true
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.parameters[0].type: string
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.parameters[1].description: idCustomEmoji
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.parameters[1].in: path
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.parameters[1].name: idCustomEmoji
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.parameters[1].required: true
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.parameters[1].type: string
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.parameters[2].default: all
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.parameters[2].description: 'all
  or a comma-separated list of: name or url'
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.parameters[2].in: query
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.parameters[2].name: fields
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.parameters[2].required: false
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.parameters[2].type: string
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.parameters[3].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.parameters[3].in: query
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.parameters[3].name: key
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.parameters[3].required: true
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.parameters[3].type: string
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.parameters[4].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.parameters[4].in: query
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.parameters[4].name: token
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.parameters[4].required: true
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.parameters[4].type: string
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.responses.200.description: Success
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.responses.400.description: Server
  rejection
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.security.length: 2
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.security[0].api_key.length: 0
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.security[1].api_token.length: 0
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.summary: getMembersCustomEmojiByIdMemberByIdCustomEmoji()
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.tags.length: 1
paths./members/{idMember}/customEmoji/{idCustomEmoji}.get.tags[0]: member
paths./members/{idMember}/customStickers.get.description: This gets a list of all
  of the user’s uploaded stickers
paths./members/{idMember}/customStickers.get.operationId: getMembersCustomStickersByIdMember
paths./members/{idMember}/customStickers.get.parameters.length: 4
paths./members/{idMember}/customStickers.get.parameters[0].description: idMember or
  username
paths./members/{idMember}/customStickers.get.parameters[0].in: path
paths./members/{idMember}/customStickers.get.parameters[0].name: idMember
paths./members/{idMember}/customStickers.get.parameters[0].required: true
paths./members/{idMember}/customStickers.get.parameters[0].type: string
paths./members/{idMember}/customStickers.get.parameters[1].default: all
paths./members/{idMember}/customStickers.get.parameters[1].description: 'One of: all
  or none'
paths./members/{idMember}/customStickers.get.parameters[1].in: query
paths./members/{idMember}/customStickers.get.parameters[1].name: filter
paths./members/{idMember}/customStickers.get.parameters[1].required: false
paths./members/{idMember}/customStickers.get.parameters[1].type: string
paths./members/{idMember}/customStickers.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}/customStickers.get.parameters[2].in: query
paths./members/{idMember}/customStickers.get.parameters[2].name: key
paths./members/{idMember}/customStickers.get.parameters[2].required: true
paths./members/{idMember}/customStickers.get.parameters[2].type: string
paths./members/{idMember}/customStickers.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/customStickers.get.parameters[3].in: query
paths./members/{idMember}/customStickers.get.parameters[3].name: token
paths./members/{idMember}/customStickers.get.parameters[3].required: true
paths./members/{idMember}/customStickers.get.parameters[3].type: string
paths./members/{idMember}/customStickers.get.responses.200.description: Success
paths./members/{idMember}/customStickers.get.responses.400.description: Server rejection
paths./members/{idMember}/customStickers.get.security.length: 2
paths./members/{idMember}/customStickers.get.security[0].api_key.length: 0
paths./members/{idMember}/customStickers.get.security[1].api_token.length: 0
paths./members/{idMember}/customStickers.get.summary: getMembersCustomStickersByIdMember()
paths./members/{idMember}/customStickers.get.tags.length: 1
paths./members/{idMember}/customStickers.get.tags[0]: member
paths./members/{idMember}/customStickers.post.operationId: addMembersCustomStickersByIdMember
paths./members/{idMember}/customStickers.post.parameters.length: 4
paths./members/{idMember}/customStickers.post.parameters[0].description: idMember
  or username
paths./members/{idMember}/customStickers.post.parameters[0].in: path
paths./members/{idMember}/customStickers.post.parameters[0].name: idMember
paths./members/{idMember}/customStickers.post.parameters[0].required: true
paths./members/{idMember}/customStickers.post.parameters[0].type: string
paths./members/{idMember}/customStickers.post.parameters[1].description: Attributes
  of "Members Custom Stickers" to be added.
paths./members/{idMember}/customStickers.post.parameters[1].in: body
paths./members/{idMember}/customStickers.post.parameters[1].name: body
paths./members/{idMember}/customStickers.post.parameters[1].required: true
paths./members/{idMember}/customStickers.post.parameters[1].schema.$ref: '#/definitions/members_customStickers'
paths./members/{idMember}/customStickers.post.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}/customStickers.post.parameters[2].in: query
paths./members/{idMember}/customStickers.post.parameters[2].name: key
paths./members/{idMember}/customStickers.post.parameters[2].required: true
paths./members/{idMember}/customStickers.post.parameters[2].type: string
paths./members/{idMember}/customStickers.post.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/customStickers.post.parameters[3].in: query
paths./members/{idMember}/customStickers.post.parameters[3].name: token
paths./members/{idMember}/customStickers.post.parameters[3].required: true
paths./members/{idMember}/customStickers.post.parameters[3].type: string
paths./members/{idMember}/customStickers.post.responses.200.description: Success
paths./members/{idMember}/customStickers.post.responses.400.description: Server rejection
paths./members/{idMember}/customStickers.post.security.length: 2
paths./members/{idMember}/customStickers.post.security[0].api_key.length: 0
paths./members/{idMember}/customStickers.post.security[1].api_token.length: 0
paths./members/{idMember}/customStickers.post.summary: addMembersCustomStickersByIdMember()
paths./members/{idMember}/customStickers.post.tags.length: 1
paths./members/{idMember}/customStickers.post.tags[0]: member
paths./members/{idMember}/customStickers/{idCustomSticker}.delete.operationId: deleteMembersCustomStickersByIdMemberByIdCustomSticker
paths./members/{idMember}/customStickers/{idCustomSticker}.delete.parameters.length: 4
paths./members/{idMember}/customStickers/{idCustomSticker}.delete.parameters[0].description: idMember
  or username
paths./members/{idMember}/customStickers/{idCustomSticker}.delete.parameters[0].in: path
paths./members/{idMember}/customStickers/{idCustomSticker}.delete.parameters[0].name: idMember
paths./members/{idMember}/customStickers/{idCustomSticker}.delete.parameters[0].required: true
paths./members/{idMember}/customStickers/{idCustomSticker}.delete.parameters[0].type: string
paths./members/{idMember}/customStickers/{idCustomSticker}.delete.parameters[1].description: idCustomSticker
paths./members/{idMember}/customStickers/{idCustomSticker}.delete.parameters[1].in: path
paths./members/{idMember}/customStickers/{idCustomSticker}.delete.parameters[1].name: idCustomSticker
paths./members/{idMember}/customStickers/{idCustomSticker}.delete.parameters[1].required: true
paths./members/{idMember}/customStickers/{idCustomSticker}.delete.parameters[1].type: string
paths./members/{idMember}/customStickers/{idCustomSticker}.delete.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./members/{idMember}/customStickers/{idCustomSticker}.delete.parameters[2].in: query
paths./members/{idMember}/customStickers/{idCustomSticker}.delete.parameters[2].name: key
paths./members/{idMember}/customStickers/{idCustomSticker}.delete.parameters[2].required: true
paths./members/{idMember}/customStickers/{idCustomSticker}.delete.parameters[2].type: string
paths./members/{idMember}/customStickers/{idCustomSticker}.delete.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/customStickers/{idCustomSticker}.delete.parameters[3].in: query
paths./members/{idMember}/customStickers/{idCustomSticker}.delete.parameters[3].name: token
paths./members/{idMember}/customStickers/{idCustomSticker}.delete.parameters[3].required: true
paths./members/{idMember}/customStickers/{idCustomSticker}.delete.parameters[3].type: string
paths./members/{idMember}/customStickers/{idCustomSticker}.delete.responses.200.description: Success
paths./members/{idMember}/customStickers/{idCustomSticker}.delete.responses.400.description: Server
  rejection
paths./members/{idMember}/customStickers/{idCustomSticker}.delete.security.length: 2
paths./members/{idMember}/customStickers/{idCustomSticker}.delete.security[0].api_key.length: 0
paths./members/{idMember}/customStickers/{idCustomSticker}.delete.security[1].api_token.length: 0
paths./members/{idMember}/customStickers/{idCustomSticker}.delete.summary: deleteMembersCustomStickersByIdMemberByIdCustomSticker()
paths./members/{idMember}/customStickers/{idCustomSticker}.delete.tags.length: 1
paths./members/{idMember}/customStickers/{idCustomSticker}.delete.tags[0]: member
paths./members/{idMember}/customStickers/{idCustomSticker}.get.operationId: getMembersCustomStickersByIdMemberByIdCustomSticker
paths./members/{idMember}/customStickers/{idCustomSticker}.get.parameters.length: 5
paths./members/{idMember}/customStickers/{idCustomSticker}.get.parameters[0].description: idMember
  or username
paths./members/{idMember}/customStickers/{idCustomSticker}.get.parameters[0].in: path
paths./members/{idMember}/customStickers/{idCustomSticker}.get.parameters[0].name: idMember
paths./members/{idMember}/customStickers/{idCustomSticker}.get.parameters[0].required: true
paths./members/{idMember}/customStickers/{idCustomSticker}.get.parameters[0].type: string
paths./members/{idMember}/customStickers/{idCustomSticker}.get.parameters[1].description: idCustomSticker
paths./members/{idMember}/customStickers/{idCustomSticker}.get.parameters[1].in: path
paths./members/{idMember}/customStickers/{idCustomSticker}.get.parameters[1].name: idCustomSticker
paths./members/{idMember}/customStickers/{idCustomSticker}.get.parameters[1].required: true
paths./members/{idMember}/customStickers/{idCustomSticker}.get.parameters[1].type: string
paths./members/{idMember}/customStickers/{idCustomSticker}.get.parameters[2].default: all
paths./members/{idMember}/customStickers/{idCustomSticker}.get.parameters[2].description: 'all
  or a comma-separated list of: scaled or url'
paths./members/{idMember}/customStickers/{idCustomSticker}.get.parameters[2].in: query
paths./members/{idMember}/customStickers/{idCustomSticker}.get.parameters[2].name: fields
paths./members/{idMember}/customStickers/{idCustomSticker}.get.parameters[2].required: false
paths./members/{idMember}/customStickers/{idCustomSticker}.get.parameters[2].type: string
paths./members/{idMember}/customStickers/{idCustomSticker}.get.parameters[3].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./members/{idMember}/customStickers/{idCustomSticker}.get.parameters[3].in: query
paths./members/{idMember}/customStickers/{idCustomSticker}.get.parameters[3].name: key
paths./members/{idMember}/customStickers/{idCustomSticker}.get.parameters[3].required: true
paths./members/{idMember}/customStickers/{idCustomSticker}.get.parameters[3].type: string
paths./members/{idMember}/customStickers/{idCustomSticker}.get.parameters[4].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/customStickers/{idCustomSticker}.get.parameters[4].in: query
paths./members/{idMember}/customStickers/{idCustomSticker}.get.parameters[4].name: token
paths./members/{idMember}/customStickers/{idCustomSticker}.get.parameters[4].required: true
paths./members/{idMember}/customStickers/{idCustomSticker}.get.parameters[4].type: string
paths./members/{idMember}/customStickers/{idCustomSticker}.get.responses.200.description: Success
paths./members/{idMember}/customStickers/{idCustomSticker}.get.responses.400.description: Server
  rejection
paths./members/{idMember}/customStickers/{idCustomSticker}.get.security.length: 2
paths./members/{idMember}/customStickers/{idCustomSticker}.get.security[0].api_key.length: 0
paths./members/{idMember}/customStickers/{idCustomSticker}.get.security[1].api_token.length: 0
paths./members/{idMember}/customStickers/{idCustomSticker}.get.summary: getMembersCustomStickersByIdMemberByIdCustomSticker()
paths./members/{idMember}/customStickers/{idCustomSticker}.get.tags.length: 1
paths./members/{idMember}/customStickers/{idCustomSticker}.get.tags[0]: member
paths./members/{idMember}/deltas.get.operationId: getMembersDeltasByIdMember
paths./members/{idMember}/deltas.get.parameters.length: 5
paths./members/{idMember}/deltas.get.parameters[0].description: idMember or username
paths./members/{idMember}/deltas.get.parameters[0].in: path
paths./members/{idMember}/deltas.get.parameters[0].name: idMember
paths./members/{idMember}/deltas.get.parameters[0].required: true
paths./members/{idMember}/deltas.get.parameters[0].type: string
paths./members/{idMember}/deltas.get.parameters[1].description: A valid tag for subscribing
paths./members/{idMember}/deltas.get.parameters[1].in: query
paths./members/{idMember}/deltas.get.parameters[1].name: tags
paths./members/{idMember}/deltas.get.parameters[1].required: true
paths./members/{idMember}/deltas.get.parameters[1].type: string
paths./members/{idMember}/deltas.get.parameters[2].description: a number from -1 to
  Infinity
paths./members/{idMember}/deltas.get.parameters[2].in: query
paths./members/{idMember}/deltas.get.parameters[2].name: ixLastUpdate
paths./members/{idMember}/deltas.get.parameters[2].required: true
paths./members/{idMember}/deltas.get.parameters[2].type: string
paths./members/{idMember}/deltas.get.parameters[3].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}/deltas.get.parameters[3].in: query
paths./members/{idMember}/deltas.get.parameters[3].name: key
paths./members/{idMember}/deltas.get.parameters[3].required: true
paths./members/{idMember}/deltas.get.parameters[3].type: string
paths./members/{idMember}/deltas.get.parameters[4].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/deltas.get.parameters[4].in: query
paths./members/{idMember}/deltas.get.parameters[4].name: token
paths./members/{idMember}/deltas.get.parameters[4].required: true
paths./members/{idMember}/deltas.get.parameters[4].type: string
paths./members/{idMember}/deltas.get.responses.200.description: Success
paths./members/{idMember}/deltas.get.responses.400.description: Server rejection
paths./members/{idMember}/deltas.get.security.length: 2
paths./members/{idMember}/deltas.get.security[0].api_key.length: 0
paths./members/{idMember}/deltas.get.security[1].api_token.length: 0
paths./members/{idMember}/deltas.get.summary: getMembersDeltasByIdMember()
paths./members/{idMember}/deltas.get.tags.length: 1
paths./members/{idMember}/deltas.get.tags[0]: member
paths./members/{idMember}/fullName.put.operationId: updateMembersFullNameByIdMember
paths./members/{idMember}/fullName.put.parameters.length: 4
paths./members/{idMember}/fullName.put.parameters[0].description: idMember or username
paths./members/{idMember}/fullName.put.parameters[0].in: path
paths./members/{idMember}/fullName.put.parameters[0].name: idMember
paths./members/{idMember}/fullName.put.parameters[0].required: true
paths./members/{idMember}/fullName.put.parameters[0].type: string
paths./members/{idMember}/fullName.put.parameters[1].description: Attributes of "Members
  Full Name" to be updated.
paths./members/{idMember}/fullName.put.parameters[1].in: body
paths./members/{idMember}/fullName.put.parameters[1].name: body
paths./members/{idMember}/fullName.put.parameters[1].required: true
paths./members/{idMember}/fullName.put.parameters[1].schema.$ref: '#/definitions/members_fullName'
paths./members/{idMember}/fullName.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}/fullName.put.parameters[2].in: query
paths./members/{idMember}/fullName.put.parameters[2].name: key
paths./members/{idMember}/fullName.put.parameters[2].required: true
paths./members/{idMember}/fullName.put.parameters[2].type: string
paths./members/{idMember}/fullName.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/fullName.put.parameters[3].in: query
paths./members/{idMember}/fullName.put.parameters[3].name: token
paths./members/{idMember}/fullName.put.parameters[3].required: true
paths./members/{idMember}/fullName.put.parameters[3].type: string
paths./members/{idMember}/fullName.put.responses.200.description: Success
paths./members/{idMember}/fullName.put.responses.400.description: Server rejection
paths./members/{idMember}/fullName.put.security.length: 2
paths./members/{idMember}/fullName.put.security[0].api_key.length: 0
paths./members/{idMember}/fullName.put.security[1].api_token.length: 0
paths./members/{idMember}/fullName.put.summary: updateMembersFullNameByIdMember()
paths./members/{idMember}/fullName.put.tags.length: 1
paths./members/{idMember}/fullName.put.tags[0]: member
paths./members/{idMember}/initials.put.operationId: updateMembersInitialsByIdMember
paths./members/{idMember}/initials.put.parameters.length: 4
paths./members/{idMember}/initials.put.parameters[0].description: idMember or username
paths./members/{idMember}/initials.put.parameters[0].in: path
paths./members/{idMember}/initials.put.parameters[0].name: idMember
paths./members/{idMember}/initials.put.parameters[0].required: true
paths./members/{idMember}/initials.put.parameters[0].type: string
paths./members/{idMember}/initials.put.parameters[1].description: Attributes of "Members
  Initials" to be updated.
paths./members/{idMember}/initials.put.parameters[1].in: body
paths./members/{idMember}/initials.put.parameters[1].name: body
paths./members/{idMember}/initials.put.parameters[1].required: true
paths./members/{idMember}/initials.put.parameters[1].schema.$ref: '#/definitions/members_initials'
paths./members/{idMember}/initials.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}/initials.put.parameters[2].in: query
paths./members/{idMember}/initials.put.parameters[2].name: key
paths./members/{idMember}/initials.put.parameters[2].required: true
paths./members/{idMember}/initials.put.parameters[2].type: string
paths./members/{idMember}/initials.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/initials.put.parameters[3].in: query
paths./members/{idMember}/initials.put.parameters[3].name: token
paths./members/{idMember}/initials.put.parameters[3].required: true
paths./members/{idMember}/initials.put.parameters[3].type: string
paths./members/{idMember}/initials.put.responses.200.description: Success
paths./members/{idMember}/initials.put.responses.400.description: Server rejection
paths./members/{idMember}/initials.put.security.length: 2
paths./members/{idMember}/initials.put.security[0].api_key.length: 0
paths./members/{idMember}/initials.put.security[1].api_token.length: 0
paths./members/{idMember}/initials.put.summary: updateMembersInitialsByIdMember()
paths./members/{idMember}/initials.put.tags.length: 1
paths./members/{idMember}/initials.put.tags[0]: member
paths./members/{idMember}/notifications.get.description: You can only read the notifications
  for the member associated with the supplied token
paths./members/{idMember}/notifications.get.operationId: getMembersNotificationsByIdMember
paths./members/{idMember}/notifications.get.parameters.length: 14
paths./members/{idMember}/notifications.get.parameters[0].description: idMember or
  username
paths./members/{idMember}/notifications.get.parameters[0].in: path
paths./members/{idMember}/notifications.get.parameters[0].name: idMember
paths./members/{idMember}/notifications.get.parameters[0].required: true
paths./members/{idMember}/notifications.get.parameters[0].type: string
paths./members/{idMember}/notifications.get.parameters[1].description: ' true or false'
paths./members/{idMember}/notifications.get.parameters[1].in: query
paths./members/{idMember}/notifications.get.parameters[1].name: entities
paths./members/{idMember}/notifications.get.parameters[1].required: false
paths./members/{idMember}/notifications.get.parameters[1].type: string
paths./members/{idMember}/notifications.get.parameters[2].description: ' true or false'
paths./members/{idMember}/notifications.get.parameters[2].in: query
paths./members/{idMember}/notifications.get.parameters[2].name: display
paths./members/{idMember}/notifications.get.parameters[2].required: false
paths./members/{idMember}/notifications.get.parameters[2].type: string
paths./members/{idMember}/notifications.get.parameters[3].default: all
paths./members/{idMember}/notifications.get.parameters[3].description: 'all or a comma-separated
  list of: addAdminToBoard, addAdminToOrganization, addedAttachmentToCard, addedMemberToCard,
  addedToBoard, addedToCard, addedToOrganization, cardDueSoon, changeCard, closeBoard,
  commentCard, createdCard, declinedInvitationToBoard, declinedInvitationToOrganization,
  invitedToBoard, invitedToOrganization, makeAdminOfBoard, makeAdminOfOrganization,
  memberJoinedTrello, mentionedOnCard, removedFromBoard, removedFromCard, removedFromOrganization,
  removedMemberFromCard, unconfirmedInvitedToBoard, unconfirmedInvitedToOrganization
  or updateCheckItemStateOnCard'
paths./members/{idMember}/notifications.get.parameters[3].in: query
paths./members/{idMember}/notifications.get.parameters[3].name: filter
paths./members/{idMember}/notifications.get.parameters[3].required: false
paths./members/{idMember}/notifications.get.parameters[3].type: string
paths./members/{idMember}/notifications.get.parameters[4].default: all
paths./members/{idMember}/notifications.get.parameters[4].description: 'One of: all,
  read or unread'
paths./members/{idMember}/notifications.get.parameters[4].in: query
paths./members/{idMember}/notifications.get.parameters[4].name: read_filter
paths./members/{idMember}/notifications.get.parameters[4].required: false
paths./members/{idMember}/notifications.get.parameters[4].type: string
paths./members/{idMember}/notifications.get.parameters[5].default: all
paths./members/{idMember}/notifications.get.parameters[5].description: 'all or a comma-separated
  list of: data, date, idMemberCreator, type or unread'
paths./members/{idMember}/notifications.get.parameters[5].in: query
paths./members/{idMember}/notifications.get.parameters[5].name: fields
paths./members/{idMember}/notifications.get.parameters[5].required: false
paths./members/{idMember}/notifications.get.parameters[5].type: string
paths./members/{idMember}/notifications.get.parameters[6].default: "50"
paths./members/{idMember}/notifications.get.parameters[6].description: a number from
  1 to 1000
paths./members/{idMember}/notifications.get.parameters[6].in: query
paths./members/{idMember}/notifications.get.parameters[6].name: limit
paths./members/{idMember}/notifications.get.parameters[6].required: false
paths./members/{idMember}/notifications.get.parameters[6].type: string
paths./members/{idMember}/notifications.get.parameters[7].default: "0"
paths./members/{idMember}/notifications.get.parameters[7].description: a number from
  0 to 100
paths./members/{idMember}/notifications.get.parameters[7].in: query
paths./members/{idMember}/notifications.get.parameters[7].name: page
paths./members/{idMember}/notifications.get.parameters[7].required: false
paths./members/{idMember}/notifications.get.parameters[7].type: string
paths./members/{idMember}/notifications.get.parameters[8].description: An id, or null
paths./members/{idMember}/notifications.get.parameters[8].in: query
paths./members/{idMember}/notifications.get.parameters[8].name: before
paths./members/{idMember}/notifications.get.parameters[8].required: false
paths./members/{idMember}/notifications.get.parameters[8].type: string
paths./members/{idMember}/notifications.get.parameters[9].description: An id, or null
paths./members/{idMember}/notifications.get.parameters[9].in: query
paths./members/{idMember}/notifications.get.parameters[9].name: since
paths./members/{idMember}/notifications.get.parameters[9].required: false
paths./members/{idMember}/notifications.get.parameters[9].type: string
paths./members/{idMember}/notifications.get.parameters[10].description: ' true or
  false'
paths./members/{idMember}/notifications.get.parameters[10].in: query
paths./members/{idMember}/notifications.get.parameters[10].name: memberCreator
paths./members/{idMember}/notifications.get.parameters[10].required: false
paths./members/{idMember}/notifications.get.parameters[10].type: string
paths./members/{idMember}/notifications.get.parameters[11].default: avatarHash, fullName,
  initials and username
paths./members/{idMember}/notifications.get.parameters[11].description: 'all or a
  comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin,
  initials, memberType, products, status, url or username'
paths./members/{idMember}/notifications.get.parameters[11].in: query
paths./members/{idMember}/notifications.get.parameters[11].name: memberCreator_fields
paths./members/{idMember}/notifications.get.parameters[11].required: false
paths./members/{idMember}/notifications.get.parameters[11].type: string
paths./members/{idMember}/notifications.get.parameters[12].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}/notifications.get.parameters[12].in: query
paths./members/{idMember}/notifications.get.parameters[12].name: key
paths./members/{idMember}/notifications.get.parameters[12].required: true
paths./members/{idMember}/notifications.get.parameters[12].type: string
paths./members/{idMember}/notifications.get.parameters[13].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/notifications.get.parameters[13].in: query
paths./members/{idMember}/notifications.get.parameters[13].name: token
paths./members/{idMember}/notifications.get.parameters[13].required: true
paths./members/{idMember}/notifications.get.parameters[13].type: string
paths./members/{idMember}/notifications.get.responses.200.description: Success
paths./members/{idMember}/notifications.get.responses.400.description: Server rejection
paths./members/{idMember}/notifications.get.security.length: 2
paths./members/{idMember}/notifications.get.security[0].api_key.length: 0
paths./members/{idMember}/notifications.get.security[1].api_token.length: 0
paths./members/{idMember}/notifications.get.summary: getMembersNotificationsByIdMember()
paths./members/{idMember}/notifications.get.tags.length: 1
paths./members/{idMember}/notifications.get.tags[0]: member
paths./members/{idMember}/notifications/{filter}.get.operationId: getMembersNotificationsByIdMemberByFilter
paths./members/{idMember}/notifications/{filter}.get.parameters.length: 4
paths./members/{idMember}/notifications/{filter}.get.parameters[0].description: idMember
  or username
paths./members/{idMember}/notifications/{filter}.get.parameters[0].in: path
paths./members/{idMember}/notifications/{filter}.get.parameters[0].name: idMember
paths./members/{idMember}/notifications/{filter}.get.parameters[0].required: true
paths./members/{idMember}/notifications/{filter}.get.parameters[0].type: string
paths./members/{idMember}/notifications/{filter}.get.parameters[1].description: filter
paths./members/{idMember}/notifications/{filter}.get.parameters[1].in: path
paths./members/{idMember}/notifications/{filter}.get.parameters[1].name: filter
paths./members/{idMember}/notifications/{filter}.get.parameters[1].required: true
paths./members/{idMember}/notifications/{filter}.get.parameters[1].type: string
paths./members/{idMember}/notifications/{filter}.get.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./members/{idMember}/notifications/{filter}.get.parameters[2].in: query
paths./members/{idMember}/notifications/{filter}.get.parameters[2].name: key
paths./members/{idMember}/notifications/{filter}.get.parameters[2].required: true
paths./members/{idMember}/notifications/{filter}.get.parameters[2].type: string
paths./members/{idMember}/notifications/{filter}.get.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/notifications/{filter}.get.parameters[3].in: query
paths./members/{idMember}/notifications/{filter}.get.parameters[3].name: token
paths./members/{idMember}/notifications/{filter}.get.parameters[3].required: true
paths./members/{idMember}/notifications/{filter}.get.parameters[3].type: string
paths./members/{idMember}/notifications/{filter}.get.responses.200.description: Success
paths./members/{idMember}/notifications/{filter}.get.responses.400.description: Server
  rejection
paths./members/{idMember}/notifications/{filter}.get.summary: getMembersNotificationsByIdMemberByFilter()
paths./members/{idMember}/notifications/{filter}.get.tags.length: 1
paths./members/{idMember}/notifications/{filter}.get.tags[0]: member
paths./members/{idMember}/oneTimeMessagesDismissed.post.operationId: addMembersOneTimeMessagesDismissedByIdMember
paths./members/{idMember}/oneTimeMessagesDismissed.post.parameters.length: 4
paths./members/{idMember}/oneTimeMessagesDismissed.post.parameters[0].description: idMember
  or username
paths./members/{idMember}/oneTimeMessagesDismissed.post.parameters[0].in: path
paths./members/{idMember}/oneTimeMessagesDismissed.post.parameters[0].name: idMember
paths./members/{idMember}/oneTimeMessagesDismissed.post.parameters[0].required: true
paths./members/{idMember}/oneTimeMessagesDismissed.post.parameters[0].type: string
paths./members/{idMember}/oneTimeMessagesDismissed.post.parameters[1].description: Attributes
  of "Members One Time Messages Dismissed" to be added.
paths./members/{idMember}/oneTimeMessagesDismissed.post.parameters[1].in: body
paths./members/{idMember}/oneTimeMessagesDismissed.post.parameters[1].name: body
paths./members/{idMember}/oneTimeMessagesDismissed.post.parameters[1].required: true
paths./members/{idMember}/oneTimeMessagesDismissed.post.parameters[1].schema.$ref: '#/definitions/members_oneTimeMessagesDismissed'
paths./members/{idMember}/oneTimeMessagesDismissed.post.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./members/{idMember}/oneTimeMessagesDismissed.post.parameters[2].in: query
paths./members/{idMember}/oneTimeMessagesDismissed.post.parameters[2].name: key
paths./members/{idMember}/oneTimeMessagesDismissed.post.parameters[2].required: true
paths./members/{idMember}/oneTimeMessagesDismissed.post.parameters[2].type: string
paths./members/{idMember}/oneTimeMessagesDismissed.post.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/oneTimeMessagesDismissed.post.parameters[3].in: query
paths./members/{idMember}/oneTimeMessagesDismissed.post.parameters[3].name: token
paths./members/{idMember}/oneTimeMessagesDismissed.post.parameters[3].required: true
paths./members/{idMember}/oneTimeMessagesDismissed.post.parameters[3].type: string
paths./members/{idMember}/oneTimeMessagesDismissed.post.responses.200.description: Success
paths./members/{idMember}/oneTimeMessagesDismissed.post.responses.400.description: Server
  rejection
paths./members/{idMember}/oneTimeMessagesDismissed.post.security.length: 2
paths./members/{idMember}/oneTimeMessagesDismissed.post.security[0].api_key.length: 0
paths./members/{idMember}/oneTimeMessagesDismissed.post.security[1].api_token.length: 0
paths./members/{idMember}/oneTimeMessagesDismissed.post.summary: addMembersOneTimeMessagesDismissedByIdMember()
paths./members/{idMember}/oneTimeMessagesDismissed.post.tags.length: 1
paths./members/{idMember}/oneTimeMessagesDismissed.post.tags[0]: member
paths./members/{idMember}/organizations.get.operationId: getMembersOrganizationsByIdMember
paths./members/{idMember}/organizations.get.parameters.length: 6
paths./members/{idMember}/organizations.get.parameters[0].description: idMember or
  username
paths./members/{idMember}/organizations.get.parameters[0].in: path
paths./members/{idMember}/organizations.get.parameters[0].name: idMember
paths./members/{idMember}/organizations.get.parameters[0].required: true
paths./members/{idMember}/organizations.get.parameters[0].type: string
paths./members/{idMember}/organizations.get.parameters[1].default: all
paths./members/{idMember}/organizations.get.parameters[1].description: 'One of: all,
  members, none or public'
paths./members/{idMember}/organizations.get.parameters[1].in: query
paths./members/{idMember}/organizations.get.parameters[1].name: filter
paths./members/{idMember}/organizations.get.parameters[1].required: false
paths./members/{idMember}/organizations.get.parameters[1].type: string
paths./members/{idMember}/organizations.get.parameters[2].default: all
paths./members/{idMember}/organizations.get.parameters[2].description: 'all or a comma-separated
  list of: billableMemberCount, desc, descData, displayName, idBoards, invitations,
  invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products,
  url or website'
paths./members/{idMember}/organizations.get.parameters[2].in: query
paths./members/{idMember}/organizations.get.parameters[2].name: fields
paths./members/{idMember}/organizations.get.parameters[2].required: false
paths./members/{idMember}/organizations.get.parameters[2].type: string
paths./members/{idMember}/organizations.get.parameters[3].description: ' true or false'
paths./members/{idMember}/organizations.get.parameters[3].in: query
paths./members/{idMember}/organizations.get.parameters[3].name: paid_account
paths./members/{idMember}/organizations.get.parameters[3].required: false
paths./members/{idMember}/organizations.get.parameters[3].type: string
paths./members/{idMember}/organizations.get.parameters[4].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}/organizations.get.parameters[4].in: query
paths./members/{idMember}/organizations.get.parameters[4].name: key
paths./members/{idMember}/organizations.get.parameters[4].required: true
paths./members/{idMember}/organizations.get.parameters[4].type: string
paths./members/{idMember}/organizations.get.parameters[5].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/organizations.get.parameters[5].in: query
paths./members/{idMember}/organizations.get.parameters[5].name: token
paths./members/{idMember}/organizations.get.parameters[5].required: true
paths./members/{idMember}/organizations.get.parameters[5].type: string
paths./members/{idMember}/organizations.get.responses.200.description: Success
paths./members/{idMember}/organizations.get.responses.400.description: Server rejection
paths./members/{idMember}/organizations.get.security.length: 2
paths./members/{idMember}/organizations.get.security[0].api_key.length: 0
paths./members/{idMember}/organizations.get.security[1].api_token.length: 0
paths./members/{idMember}/organizations.get.summary: getMembersOrganizationsByIdMember()
paths./members/{idMember}/organizations.get.tags.length: 1
paths./members/{idMember}/organizations.get.tags[0]: member
paths./members/{idMember}/organizations/{filter}.get.operationId: getMembersOrganizationsByIdMemberByFilter
paths./members/{idMember}/organizations/{filter}.get.parameters.length: 4
paths./members/{idMember}/organizations/{filter}.get.parameters[0].description: idMember
  or username
paths./members/{idMember}/organizations/{filter}.get.parameters[0].in: path
paths./members/{idMember}/organizations/{filter}.get.parameters[0].name: idMember
paths./members/{idMember}/organizations/{filter}.get.parameters[0].required: true
paths./members/{idMember}/organizations/{filter}.get.parameters[0].type: string
paths./members/{idMember}/organizations/{filter}.get.parameters[1].description: filter
paths./members/{idMember}/organizations/{filter}.get.parameters[1].in: path
paths./members/{idMember}/organizations/{filter}.get.parameters[1].name: filter
paths./members/{idMember}/organizations/{filter}.get.parameters[1].required: true
paths./members/{idMember}/organizations/{filter}.get.parameters[1].type: string
paths./members/{idMember}/organizations/{filter}.get.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./members/{idMember}/organizations/{filter}.get.parameters[2].in: query
paths./members/{idMember}/organizations/{filter}.get.parameters[2].name: key
paths./members/{idMember}/organizations/{filter}.get.parameters[2].required: true
paths./members/{idMember}/organizations/{filter}.get.parameters[2].type: string
paths./members/{idMember}/organizations/{filter}.get.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/organizations/{filter}.get.parameters[3].in: query
paths./members/{idMember}/organizations/{filter}.get.parameters[3].name: token
paths./members/{idMember}/organizations/{filter}.get.parameters[3].required: true
paths./members/{idMember}/organizations/{filter}.get.parameters[3].type: string
paths./members/{idMember}/organizations/{filter}.get.responses.200.description: Success
paths./members/{idMember}/organizations/{filter}.get.responses.400.description: Server
  rejection
paths./members/{idMember}/organizations/{filter}.get.summary: getMembersOrganizationsByIdMemberByFilter()
paths./members/{idMember}/organizations/{filter}.get.tags.length: 1
paths./members/{idMember}/organizations/{filter}.get.tags[0]: member
paths./members/{idMember}/organizationsInvited.get.operationId: getMembersOrganizationsInvitedByIdMember
paths./members/{idMember}/organizationsInvited.get.parameters.length: 4
paths./members/{idMember}/organizationsInvited.get.parameters[0].description: idMember
  or username
paths./members/{idMember}/organizationsInvited.get.parameters[0].in: path
paths./members/{idMember}/organizationsInvited.get.parameters[0].name: idMember
paths./members/{idMember}/organizationsInvited.get.parameters[0].required: true
paths./members/{idMember}/organizationsInvited.get.parameters[0].type: string
paths./members/{idMember}/organizationsInvited.get.parameters[1].default: all
paths./members/{idMember}/organizationsInvited.get.parameters[1].description: 'all
  or a comma-separated list of: billableMemberCount, desc, descData, displayName,
  idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures,
  products, url or website'
paths./members/{idMember}/organizationsInvited.get.parameters[1].in: query
paths./members/{idMember}/organizationsInvited.get.parameters[1].name: fields
paths./members/{idMember}/organizationsInvited.get.parameters[1].required: false
paths./members/{idMember}/organizationsInvited.get.parameters[1].type: string
paths./members/{idMember}/organizationsInvited.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}/organizationsInvited.get.parameters[2].in: query
paths./members/{idMember}/organizationsInvited.get.parameters[2].name: key
paths./members/{idMember}/organizationsInvited.get.parameters[2].required: true
paths./members/{idMember}/organizationsInvited.get.parameters[2].type: string
paths./members/{idMember}/organizationsInvited.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/organizationsInvited.get.parameters[3].in: query
paths./members/{idMember}/organizationsInvited.get.parameters[3].name: token
paths./members/{idMember}/organizationsInvited.get.parameters[3].required: true
paths./members/{idMember}/organizationsInvited.get.parameters[3].type: string
paths./members/{idMember}/organizationsInvited.get.responses.200.description: Success
paths./members/{idMember}/organizationsInvited.get.responses.400.description: Server
  rejection
paths./members/{idMember}/organizationsInvited.get.security.length: 2
paths./members/{idMember}/organizationsInvited.get.security[0].api_key.length: 0
paths./members/{idMember}/organizationsInvited.get.security[1].api_token.length: 0
paths./members/{idMember}/organizationsInvited.get.summary: getMembersOrganizationsInvitedByIdMember()
paths./members/{idMember}/organizationsInvited.get.tags.length: 1
paths./members/{idMember}/organizationsInvited.get.tags[0]: member
paths./members/{idMember}/organizationsInvited/{field}.get.operationId: getMembersOrganizationsInvitedByIdMemberByField
paths./members/{idMember}/organizationsInvited/{field}.get.parameters.length: 4
paths./members/{idMember}/organizationsInvited/{field}.get.parameters[0].description: idMember
  or username
paths./members/{idMember}/organizationsInvited/{field}.get.parameters[0].in: path
paths./members/{idMember}/organizationsInvited/{field}.get.parameters[0].name: idMember
paths./members/{idMember}/organizationsInvited/{field}.get.parameters[0].required: true
paths./members/{idMember}/organizationsInvited/{field}.get.parameters[0].type: string
paths./members/{idMember}/organizationsInvited/{field}.get.parameters[1].description: field
paths./members/{idMember}/organizationsInvited/{field}.get.parameters[1].in: path
paths./members/{idMember}/organizationsInvited/{field}.get.parameters[1].name: field
paths./members/{idMember}/organizationsInvited/{field}.get.parameters[1].required: true
paths./members/{idMember}/organizationsInvited/{field}.get.parameters[1].type: string
paths./members/{idMember}/organizationsInvited/{field}.get.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./members/{idMember}/organizationsInvited/{field}.get.parameters[2].in: query
paths./members/{idMember}/organizationsInvited/{field}.get.parameters[2].name: key
paths./members/{idMember}/organizationsInvited/{field}.get.parameters[2].required: true
paths./members/{idMember}/organizationsInvited/{field}.get.parameters[2].type: string
paths./members/{idMember}/organizationsInvited/{field}.get.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/organizationsInvited/{field}.get.parameters[3].in: query
paths./members/{idMember}/organizationsInvited/{field}.get.parameters[3].name: token
paths./members/{idMember}/organizationsInvited/{field}.get.parameters[3].required: true
paths./members/{idMember}/organizationsInvited/{field}.get.parameters[3].type: string
paths./members/{idMember}/organizationsInvited/{field}.get.responses.200.description: Success
paths./members/{idMember}/organizationsInvited/{field}.get.responses.400.description: Server
  rejection
paths./members/{idMember}/organizationsInvited/{field}.get.security.length: 2
paths./members/{idMember}/organizationsInvited/{field}.get.security[0].api_key.length: 0
paths./members/{idMember}/organizationsInvited/{field}.get.security[1].api_token.length: 0
paths./members/{idMember}/organizationsInvited/{field}.get.summary: getMembersOrganizationsInvitedByIdMemberByField()
paths./members/{idMember}/organizationsInvited/{field}.get.tags.length: 1
paths./members/{idMember}/organizationsInvited/{field}.get.tags[0]: member
paths./members/{idMember}/prefs/colorBlind.put.operationId: updateMembersPrefsColorBlindByIdMember
paths./members/{idMember}/prefs/colorBlind.put.parameters.length: 4
paths./members/{idMember}/prefs/colorBlind.put.parameters[0].description: idMember
  or username
paths./members/{idMember}/prefs/colorBlind.put.parameters[0].in: path
paths./members/{idMember}/prefs/colorBlind.put.parameters[0].name: idMember
paths./members/{idMember}/prefs/colorBlind.put.parameters[0].required: true
paths./members/{idMember}/prefs/colorBlind.put.parameters[0].type: string
paths./members/{idMember}/prefs/colorBlind.put.parameters[1].description: Attributes
  of "Prefs Color Blind" to be updated.
paths./members/{idMember}/prefs/colorBlind.put.parameters[1].in: body
paths./members/{idMember}/prefs/colorBlind.put.parameters[1].name: body
paths./members/{idMember}/prefs/colorBlind.put.parameters[1].required: true
paths./members/{idMember}/prefs/colorBlind.put.parameters[1].schema.$ref: '#/definitions/prefs_colorBlind'
paths./members/{idMember}/prefs/colorBlind.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}/prefs/colorBlind.put.parameters[2].in: query
paths./members/{idMember}/prefs/colorBlind.put.parameters[2].name: key
paths./members/{idMember}/prefs/colorBlind.put.parameters[2].required: true
paths./members/{idMember}/prefs/colorBlind.put.parameters[2].type: string
paths./members/{idMember}/prefs/colorBlind.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/prefs/colorBlind.put.parameters[3].in: query
paths./members/{idMember}/prefs/colorBlind.put.parameters[3].name: token
paths./members/{idMember}/prefs/colorBlind.put.parameters[3].required: true
paths./members/{idMember}/prefs/colorBlind.put.parameters[3].type: string
paths./members/{idMember}/prefs/colorBlind.put.responses.200.description: Success
paths./members/{idMember}/prefs/colorBlind.put.responses.400.description: Server rejection
paths./members/{idMember}/prefs/colorBlind.put.security.length: 2
paths./members/{idMember}/prefs/colorBlind.put.security[0].api_key.length: 0
paths./members/{idMember}/prefs/colorBlind.put.security[1].api_token.length: 0
paths./members/{idMember}/prefs/colorBlind.put.summary: updateMembersPrefsColorBlindByIdMember()
paths./members/{idMember}/prefs/colorBlind.put.tags.length: 1
paths./members/{idMember}/prefs/colorBlind.put.tags[0]: member
paths./members/{idMember}/prefs/locale.put.operationId: updateMembersPrefsLocaleByIdMember
paths./members/{idMember}/prefs/locale.put.parameters.length: 4
paths./members/{idMember}/prefs/locale.put.parameters[0].description: idMember or
  username
paths./members/{idMember}/prefs/locale.put.parameters[0].in: path
paths./members/{idMember}/prefs/locale.put.parameters[0].name: idMember
paths./members/{idMember}/prefs/locale.put.parameters[0].required: true
paths./members/{idMember}/prefs/locale.put.parameters[0].type: string
paths./members/{idMember}/prefs/locale.put.parameters[1].description: Attributes of
  "Prefs Locale" to be updated.
paths./members/{idMember}/prefs/locale.put.parameters[1].in: body
paths./members/{idMember}/prefs/locale.put.parameters[1].name: body
paths./members/{idMember}/prefs/locale.put.parameters[1].required: true
paths./members/{idMember}/prefs/locale.put.parameters[1].schema.$ref: '#/definitions/prefs_locale'
paths./members/{idMember}/prefs/locale.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}/prefs/locale.put.parameters[2].in: query
paths./members/{idMember}/prefs/locale.put.parameters[2].name: key
paths./members/{idMember}/prefs/locale.put.parameters[2].required: true
paths./members/{idMember}/prefs/locale.put.parameters[2].type: string
paths./members/{idMember}/prefs/locale.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/prefs/locale.put.parameters[3].in: query
paths./members/{idMember}/prefs/locale.put.parameters[3].name: token
paths./members/{idMember}/prefs/locale.put.parameters[3].required: true
paths./members/{idMember}/prefs/locale.put.parameters[3].type: string
paths./members/{idMember}/prefs/locale.put.responses.200.description: Success
paths./members/{idMember}/prefs/locale.put.responses.400.description: Server rejection
paths./members/{idMember}/prefs/locale.put.security.length: 2
paths./members/{idMember}/prefs/locale.put.security[0].api_key.length: 0
paths./members/{idMember}/prefs/locale.put.security[1].api_token.length: 0
paths./members/{idMember}/prefs/locale.put.summary: updateMembersPrefsLocaleByIdMember()
paths./members/{idMember}/prefs/locale.put.tags.length: 1
paths./members/{idMember}/prefs/locale.put.tags[0]: member
paths./members/{idMember}/prefs/minutesBetweenSummaries.put.operationId: updateMembersPrefsMinutesBetweenSummariesByIdMember
paths./members/{idMember}/prefs/minutesBetweenSummaries.put.parameters.length: 4
paths./members/{idMember}/prefs/minutesBetweenSummaries.put.parameters[0].description: idMember
  or username
paths./members/{idMember}/prefs/minutesBetweenSummaries.put.parameters[0].in: path
paths./members/{idMember}/prefs/minutesBetweenSummaries.put.parameters[0].name: idMember
paths./members/{idMember}/prefs/minutesBetweenSummaries.put.parameters[0].required: true
paths./members/{idMember}/prefs/minutesBetweenSummaries.put.parameters[0].type: string
paths./members/{idMember}/prefs/minutesBetweenSummaries.put.parameters[1].description: Attributes
  of "Prefs Minutes Between Summaries" to be updated.
paths./members/{idMember}/prefs/minutesBetweenSummaries.put.parameters[1].in: body
paths./members/{idMember}/prefs/minutesBetweenSummaries.put.parameters[1].name: body
paths./members/{idMember}/prefs/minutesBetweenSummaries.put.parameters[1].required: true
paths./members/{idMember}/prefs/minutesBetweenSummaries.put.parameters[1].schema.$ref: '#/definitions/prefs_minutesBetweenSummaries'
paths./members/{idMember}/prefs/minutesBetweenSummaries.put.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./members/{idMember}/prefs/minutesBetweenSummaries.put.parameters[2].in: query
paths./members/{idMember}/prefs/minutesBetweenSummaries.put.parameters[2].name: key
paths./members/{idMember}/prefs/minutesBetweenSummaries.put.parameters[2].required: true
paths./members/{idMember}/prefs/minutesBetweenSummaries.put.parameters[2].type: string
paths./members/{idMember}/prefs/minutesBetweenSummaries.put.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/prefs/minutesBetweenSummaries.put.parameters[3].in: query
paths./members/{idMember}/prefs/minutesBetweenSummaries.put.parameters[3].name: token
paths./members/{idMember}/prefs/minutesBetweenSummaries.put.parameters[3].required: true
paths./members/{idMember}/prefs/minutesBetweenSummaries.put.parameters[3].type: string
paths./members/{idMember}/prefs/minutesBetweenSummaries.put.responses.200.description: Success
paths./members/{idMember}/prefs/minutesBetweenSummaries.put.responses.400.description: Server
  rejection
paths./members/{idMember}/prefs/minutesBetweenSummaries.put.security.length: 2
paths./members/{idMember}/prefs/minutesBetweenSummaries.put.security[0].api_key.length: 0
paths./members/{idMember}/prefs/minutesBetweenSummaries.put.security[1].api_token.length: 0
paths./members/{idMember}/prefs/minutesBetweenSummaries.put.summary: updateMembersPrefsMinutesBetweenSummariesByIdMember()
paths./members/{idMember}/prefs/minutesBetweenSummaries.put.tags.length: 1
paths./members/{idMember}/prefs/minutesBetweenSummaries.put.tags[0]: member
paths./members/{idMember}/savedSearches.get.operationId: getMembersSavedSearchesByIdMember
paths./members/{idMember}/savedSearches.get.parameters.length: 3
paths./members/{idMember}/savedSearches.get.parameters[0].description: idMember or
  username
paths./members/{idMember}/savedSearches.get.parameters[0].in: path
paths./members/{idMember}/savedSearches.get.parameters[0].name: idMember
paths./members/{idMember}/savedSearches.get.parameters[0].required: true
paths./members/{idMember}/savedSearches.get.parameters[0].type: string
paths./members/{idMember}/savedSearches.get.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}/savedSearches.get.parameters[1].in: query
paths./members/{idMember}/savedSearches.get.parameters[1].name: key
paths./members/{idMember}/savedSearches.get.parameters[1].required: true
paths./members/{idMember}/savedSearches.get.parameters[1].type: string
paths./members/{idMember}/savedSearches.get.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/savedSearches.get.parameters[2].in: query
paths./members/{idMember}/savedSearches.get.parameters[2].name: token
paths./members/{idMember}/savedSearches.get.parameters[2].required: true
paths./members/{idMember}/savedSearches.get.parameters[2].type: string
paths./members/{idMember}/savedSearches.get.responses.200.description: Success
paths./members/{idMember}/savedSearches.get.responses.400.description: Server rejection
paths./members/{idMember}/savedSearches.get.security.length: 2
paths./members/{idMember}/savedSearches.get.security[0].api_key.length: 0
paths./members/{idMember}/savedSearches.get.security[1].api_token.length: 0
paths./members/{idMember}/savedSearches.get.summary: getMembersSavedSearchesByIdMember()
paths./members/{idMember}/savedSearches.get.tags.length: 1
paths./members/{idMember}/savedSearches.get.tags[0]: member
paths./members/{idMember}/savedSearches.post.operationId: addMembersSavedSearchesByIdMember
paths./members/{idMember}/savedSearches.post.parameters.length: 4
paths./members/{idMember}/savedSearches.post.parameters[0].description: idMember or
  username
paths./members/{idMember}/savedSearches.post.parameters[0].in: path
paths./members/{idMember}/savedSearches.post.parameters[0].name: idMember
paths./members/{idMember}/savedSearches.post.parameters[0].required: true
paths./members/{idMember}/savedSearches.post.parameters[0].type: string
paths./members/{idMember}/savedSearches.post.parameters[1].description: Attributes
  of "Members Saved Searches" to be added.
paths./members/{idMember}/savedSearches.post.parameters[1].in: body
paths./members/{idMember}/savedSearches.post.parameters[1].name: body
paths./members/{idMember}/savedSearches.post.parameters[1].required: true
paths./members/{idMember}/savedSearches.post.parameters[1].schema.$ref: '#/definitions/members_savedSearches'
paths./members/{idMember}/savedSearches.post.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}/savedSearches.post.parameters[2].in: query
paths./members/{idMember}/savedSearches.post.parameters[2].name: key
paths./members/{idMember}/savedSearches.post.parameters[2].required: true
paths./members/{idMember}/savedSearches.post.parameters[2].type: string
paths./members/{idMember}/savedSearches.post.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/savedSearches.post.parameters[3].in: query
paths./members/{idMember}/savedSearches.post.parameters[3].name: token
paths./members/{idMember}/savedSearches.post.parameters[3].required: true
paths./members/{idMember}/savedSearches.post.parameters[3].type: string
paths./members/{idMember}/savedSearches.post.responses.200.description: Success
paths./members/{idMember}/savedSearches.post.responses.400.description: Server rejection
paths./members/{idMember}/savedSearches.post.security.length: 2
paths./members/{idMember}/savedSearches.post.security[0].api_key.length: 0
paths./members/{idMember}/savedSearches.post.security[1].api_token.length: 0
paths./members/{idMember}/savedSearches.post.summary: addMembersSavedSearchesByIdMember()
paths./members/{idMember}/savedSearches.post.tags.length: 1
paths./members/{idMember}/savedSearches.post.tags[0]: member
paths./members/{idMember}/savedSearches/{idSavedSearch}.delete.operationId: deleteMembersSavedSearchesByIdMemberByIdSavedSearch
paths./members/{idMember}/savedSearches/{idSavedSearch}.delete.parameters.length: 4
paths./members/{idMember}/savedSearches/{idSavedSearch}.delete.parameters[0].description: idMember
  or username
paths./members/{idMember}/savedSearches/{idSavedSearch}.delete.parameters[0].in: path
paths./members/{idMember}/savedSearches/{idSavedSearch}.delete.parameters[0].name: idMember
paths./members/{idMember}/savedSearches/{idSavedSearch}.delete.parameters[0].required: true
paths./members/{idMember}/savedSearches/{idSavedSearch}.delete.parameters[0].type: string
paths./members/{idMember}/savedSearches/{idSavedSearch}.delete.parameters[1].description: idSavedSearch
paths./members/{idMember}/savedSearches/{idSavedSearch}.delete.parameters[1].in: path
paths./members/{idMember}/savedSearches/{idSavedSearch}.delete.parameters[1].name: idSavedSearch
paths./members/{idMember}/savedSearches/{idSavedSearch}.delete.parameters[1].required: true
paths./members/{idMember}/savedSearches/{idSavedSearch}.delete.parameters[1].type: string
paths./members/{idMember}/savedSearches/{idSavedSearch}.delete.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./members/{idMember}/savedSearches/{idSavedSearch}.delete.parameters[2].in: query
paths./members/{idMember}/savedSearches/{idSavedSearch}.delete.parameters[2].name: key
paths./members/{idMember}/savedSearches/{idSavedSearch}.delete.parameters[2].required: true
paths./members/{idMember}/savedSearches/{idSavedSearch}.delete.parameters[2].type: string
paths./members/{idMember}/savedSearches/{idSavedSearch}.delete.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/savedSearches/{idSavedSearch}.delete.parameters[3].in: query
paths./members/{idMember}/savedSearches/{idSavedSearch}.delete.parameters[3].name: token
paths./members/{idMember}/savedSearches/{idSavedSearch}.delete.parameters[3].required: true
paths./members/{idMember}/savedSearches/{idSavedSearch}.delete.parameters[3].type: string
paths./members/{idMember}/savedSearches/{idSavedSearch}.delete.responses.200.description: Success
paths./members/{idMember}/savedSearches/{idSavedSearch}.delete.responses.400.description: Server
  rejection
paths./members/{idMember}/savedSearches/{idSavedSearch}.delete.security.length: 2
paths./members/{idMember}/savedSearches/{idSavedSearch}.delete.security[0].api_key.length: 0
paths./members/{idMember}/savedSearches/{idSavedSearch}.delete.security[1].api_token.length: 0
paths./members/{idMember}/savedSearches/{idSavedSearch}.delete.summary: deleteMembersSavedSearchesByIdMemberByIdSavedSearch()
paths./members/{idMember}/savedSearches/{idSavedSearch}.delete.tags.length: 1
paths./members/{idMember}/savedSearches/{idSavedSearch}.delete.tags[0]: member
paths./members/{idMember}/savedSearches/{idSavedSearch}.get.operationId: getMembersSavedSearchesByIdMemberByIdSavedSearch
paths./members/{idMember}/savedSearches/{idSavedSearch}.get.parameters.length: 4
paths./members/{idMember}/savedSearches/{idSavedSearch}.get.parameters[0].description: idMember
  or username
paths./members/{idMember}/savedSearches/{idSavedSearch}.get.parameters[0].in: path
paths./members/{idMember}/savedSearches/{idSavedSearch}.get.parameters[0].name: idMember
paths./members/{idMember}/savedSearches/{idSavedSearch}.get.parameters[0].required: true
paths./members/{idMember}/savedSearches/{idSavedSearch}.get.parameters[0].type: string
paths./members/{idMember}/savedSearches/{idSavedSearch}.get.parameters[1].description: idSavedSearch
paths./members/{idMember}/savedSearches/{idSavedSearch}.get.parameters[1].in: path
paths./members/{idMember}/savedSearches/{idSavedSearch}.get.parameters[1].name: idSavedSearch
paths./members/{idMember}/savedSearches/{idSavedSearch}.get.parameters[1].required: true
paths./members/{idMember}/savedSearches/{idSavedSearch}.get.parameters[1].type: string
paths./members/{idMember}/savedSearches/{idSavedSearch}.get.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./members/{idMember}/savedSearches/{idSavedSearch}.get.parameters[2].in: query
paths./members/{idMember}/savedSearches/{idSavedSearch}.get.parameters[2].name: key
paths./members/{idMember}/savedSearches/{idSavedSearch}.get.parameters[2].required: true
paths./members/{idMember}/savedSearches/{idSavedSearch}.get.parameters[2].type: string
paths./members/{idMember}/savedSearches/{idSavedSearch}.get.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/savedSearches/{idSavedSearch}.get.parameters[3].in: query
paths./members/{idMember}/savedSearches/{idSavedSearch}.get.parameters[3].name: token
paths./members/{idMember}/savedSearches/{idSavedSearch}.get.parameters[3].required: true
paths./members/{idMember}/savedSearches/{idSavedSearch}.get.parameters[3].type: string
paths./members/{idMember}/savedSearches/{idSavedSearch}.get.responses.200.description: Success
paths./members/{idMember}/savedSearches/{idSavedSearch}.get.responses.400.description: Server
  rejection
paths./members/{idMember}/savedSearches/{idSavedSearch}.get.security.length: 2
paths./members/{idMember}/savedSearches/{idSavedSearch}.get.security[0].api_key.length: 0
paths./members/{idMember}/savedSearches/{idSavedSearch}.get.security[1].api_token.length: 0
paths./members/{idMember}/savedSearches/{idSavedSearch}.get.summary: getMembersSavedSearchesByIdMemberByIdSavedSearch()
paths./members/{idMember}/savedSearches/{idSavedSearch}.get.tags.length: 1
paths./members/{idMember}/savedSearches/{idSavedSearch}.get.tags[0]: member
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.operationId: updateMembersSavedSearchesByIdMemberByIdSavedSearch
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.parameters.length: 5
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.parameters[0].description: idMember
  or username
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.parameters[0].in: path
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.parameters[0].name: idMember
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.parameters[0].required: true
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.parameters[0].type: string
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.parameters[1].description: idSavedSearch
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.parameters[1].in: path
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.parameters[1].name: idSavedSearch
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.parameters[1].required: true
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.parameters[1].type: string
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.parameters[2].description: Attributes
  of "Members Saved Searches" to be updated.
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.parameters[2].in: body
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.parameters[2].name: body
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.parameters[2].required: true
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.parameters[2].schema.$ref: '#/definitions/members_savedSearches'
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.parameters[3].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.parameters[3].in: query
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.parameters[3].name: key
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.parameters[3].required: true
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.parameters[3].type: string
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.parameters[4].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.parameters[4].in: query
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.parameters[4].name: token
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.parameters[4].required: true
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.parameters[4].type: string
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.responses.200.description: Success
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.responses.400.description: Server
  rejection
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.security.length: 2
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.security[0].api_key.length: 0
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.security[1].api_token.length: 0
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.summary: updateMembersSavedSearchesByIdMemberByIdSavedSearch()
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.tags.length: 1
paths./members/{idMember}/savedSearches/{idSavedSearch}.put.tags[0]: member
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.operationId: updateMembersSavedSearchesNameByIdMemberByIdSavedSearch
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.parameters.length: 5
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.parameters[0].description: idMember
  or username
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.parameters[0].in: path
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.parameters[0].name: idMember
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.parameters[0].required: true
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.parameters[0].type: string
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.parameters[1].description: idSavedSearch
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.parameters[1].in: path
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.parameters[1].name: idSavedSearch
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.parameters[1].required: true
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.parameters[1].type: string
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.parameters[2].description: Attributes
  of "Members Saved Searches Name" to be updated.
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.parameters[2].in: body
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.parameters[2].name: body
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.parameters[2].required: true
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.parameters[2].schema.$ref: '#/definitions/members_savedSearches_name'
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.parameters[3].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.parameters[3].in: query
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.parameters[3].name: key
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.parameters[3].required: true
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.parameters[3].type: string
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.parameters[4].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.parameters[4].in: query
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.parameters[4].name: token
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.parameters[4].required: true
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.parameters[4].type: string
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.responses.200.description: Success
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.responses.400.description: Server
  rejection
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.security.length: 2
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.security[0].api_key.length: 0
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.security[1].api_token.length: 0
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.summary: updateMembersSavedSearchesNameByIdMemberByIdSavedSearch()
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.tags.length: 1
paths./members/{idMember}/savedSearches/{idSavedSearch}/name.put.tags[0]: member
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.operationId: updateMembersSavedSearchesPosByIdMemberByIdSavedSearch
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.parameters.length: 5
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.parameters[0].description: idMember
  or username
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.parameters[0].in: path
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.parameters[0].name: idMember
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.parameters[0].required: true
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.parameters[0].type: string
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.parameters[1].description: idSavedSearch
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.parameters[1].in: path
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.parameters[1].name: idSavedSearch
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.parameters[1].required: true
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.parameters[1].type: string
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.parameters[2].description: Attributes
  of "Members Saved Searches Pos" to be updated.
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.parameters[2].in: body
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.parameters[2].name: body
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.parameters[2].required: true
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.parameters[2].schema.$ref: '#/definitions/members_savedSearches_pos'
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.parameters[3].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.parameters[3].in: query
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.parameters[3].name: key
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.parameters[3].required: true
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.parameters[3].type: string
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.parameters[4].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.parameters[4].in: query
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.parameters[4].name: token
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.parameters[4].required: true
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.parameters[4].type: string
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.responses.200.description: Success
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.responses.400.description: Server
  rejection
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.security.length: 2
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.security[0].api_key.length: 0
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.security[1].api_token.length: 0
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.summary: updateMembersSavedSearchesPosByIdMemberByIdSavedSearch()
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.tags.length: 1
paths./members/{idMember}/savedSearches/{idSavedSearch}/pos.put.tags[0]: member
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.operationId: updateMembersSavedSearchesQueryByIdMemberByIdSavedSearch
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.parameters.length: 5
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.parameters[0].description: idMember
  or username
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.parameters[0].in: path
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.parameters[0].name: idMember
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.parameters[0].required: true
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.parameters[0].type: string
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.parameters[1].description: idSavedSearch
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.parameters[1].in: path
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.parameters[1].name: idSavedSearch
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.parameters[1].required: true
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.parameters[1].type: string
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.parameters[2].description: Attributes
  of "Members Saved Searches Query" to be updated.
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.parameters[2].in: body
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.parameters[2].name: body
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.parameters[2].required: true
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.parameters[2].schema.$ref: '#/definitions/members_savedSearches_query'
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.parameters[3].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.parameters[3].in: query
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.parameters[3].name: key
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.parameters[3].required: true
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.parameters[3].type: string
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.parameters[4].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.parameters[4].in: query
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.parameters[4].name: token
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.parameters[4].required: true
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.parameters[4].type: string
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.responses.200.description: Success
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.responses.400.description: Server
  rejection
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.security.length: 2
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.security[0].api_key.length: 0
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.security[1].api_token.length: 0
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.summary: updateMembersSavedSearchesQueryByIdMemberByIdSavedSearch()
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.tags.length: 1
paths./members/{idMember}/savedSearches/{idSavedSearch}/query.put.tags[0]: member
paths./members/{idMember}/tokens.get.operationId: getMembersTokensByIdMember
paths./members/{idMember}/tokens.get.parameters.length: 4
paths./members/{idMember}/tokens.get.parameters[0].description: idMember or username
paths./members/{idMember}/tokens.get.parameters[0].in: path
paths./members/{idMember}/tokens.get.parameters[0].name: idMember
paths./members/{idMember}/tokens.get.parameters[0].required: true
paths./members/{idMember}/tokens.get.parameters[0].type: string
paths./members/{idMember}/tokens.get.parameters[1].default: all
paths./members/{idMember}/tokens.get.parameters[1].description: 'One of: all or none'
paths./members/{idMember}/tokens.get.parameters[1].in: query
paths./members/{idMember}/tokens.get.parameters[1].name: filter
paths./members/{idMember}/tokens.get.parameters[1].required: false
paths./members/{idMember}/tokens.get.parameters[1].type: string
paths./members/{idMember}/tokens.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}/tokens.get.parameters[2].in: query
paths./members/{idMember}/tokens.get.parameters[2].name: key
paths./members/{idMember}/tokens.get.parameters[2].required: true
paths./members/{idMember}/tokens.get.parameters[2].type: string
paths./members/{idMember}/tokens.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/tokens.get.parameters[3].in: query
paths./members/{idMember}/tokens.get.parameters[3].name: token
paths./members/{idMember}/tokens.get.parameters[3].required: true
paths./members/{idMember}/tokens.get.parameters[3].type: string
paths./members/{idMember}/tokens.get.responses.200.description: Success
paths./members/{idMember}/tokens.get.responses.400.description: Server rejection
paths./members/{idMember}/tokens.get.security.length: 2
paths./members/{idMember}/tokens.get.security[0].api_key.length: 0
paths./members/{idMember}/tokens.get.security[1].api_token.length: 0
paths./members/{idMember}/tokens.get.summary: getMembersTokensByIdMember()
paths./members/{idMember}/tokens.get.tags.length: 1
paths./members/{idMember}/tokens.get.tags[0]: member
paths./members/{idMember}/username.put.operationId: updateMembersUsernameByIdMember
paths./members/{idMember}/username.put.parameters.length: 4
paths./members/{idMember}/username.put.parameters[0].description: idMember or username
paths./members/{idMember}/username.put.parameters[0].in: path
paths./members/{idMember}/username.put.parameters[0].name: idMember
paths./members/{idMember}/username.put.parameters[0].required: true
paths./members/{idMember}/username.put.parameters[0].type: string
paths./members/{idMember}/username.put.parameters[1].description: Attributes of "Members
  Username" to be updated.
paths./members/{idMember}/username.put.parameters[1].in: body
paths./members/{idMember}/username.put.parameters[1].name: body
paths./members/{idMember}/username.put.parameters[1].required: true
paths./members/{idMember}/username.put.parameters[1].schema.$ref: '#/definitions/members_username'
paths./members/{idMember}/username.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./members/{idMember}/username.put.parameters[2].in: query
paths./members/{idMember}/username.put.parameters[2].name: key
paths./members/{idMember}/username.put.parameters[2].required: true
paths./members/{idMember}/username.put.parameters[2].type: string
paths./members/{idMember}/username.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./members/{idMember}/username.put.parameters[3].in: query
paths./members/{idMember}/username.put.parameters[3].name: token
paths./members/{idMember}/username.put.parameters[3].required: true
paths./members/{idMember}/username.put.parameters[3].type: string
paths./members/{idMember}/username.put.responses.200.description: Success
paths./members/{idMember}/username.put.responses.400.description: Server rejection
paths./members/{idMember}/username.put.security.length: 2
paths./members/{idMember}/username.put.security[0].api_key.length: 0
paths./members/{idMember}/username.put.security[1].api_token.length: 0
paths./members/{idMember}/username.put.summary: updateMembersUsernameByIdMember()
paths./members/{idMember}/username.put.tags.length: 1
paths./members/{idMember}/username.put.tags[0]: member
paths./notifications/{idNotification}.get.operationId: getNotificationsByIdNotification
paths./notifications/{idNotification}.get.parameters.length: 17
paths./notifications/{idNotification}.get.parameters[0].description: idNotification
paths./notifications/{idNotification}.get.parameters[0].in: path
paths./notifications/{idNotification}.get.parameters[0].name: idNotification
paths./notifications/{idNotification}.get.parameters[0].required: true
paths./notifications/{idNotification}.get.parameters[0].type: string
paths./notifications/{idNotification}.get.parameters[1].description: ' true or false'
paths./notifications/{idNotification}.get.parameters[1].in: query
paths./notifications/{idNotification}.get.parameters[1].name: display
paths./notifications/{idNotification}.get.parameters[1].required: false
paths./notifications/{idNotification}.get.parameters[1].type: string
paths./notifications/{idNotification}.get.parameters[2].description: ' true or false'
paths./notifications/{idNotification}.get.parameters[2].in: query
paths./notifications/{idNotification}.get.parameters[2].name: entities
paths./notifications/{idNotification}.get.parameters[2].required: false
paths./notifications/{idNotification}.get.parameters[2].type: string
paths./notifications/{idNotification}.get.parameters[3].default: all
paths./notifications/{idNotification}.get.parameters[3].description: 'all or a comma-separated
  list of: data, date, idMemberCreator, type or unread'
paths./notifications/{idNotification}.get.parameters[3].in: query
paths./notifications/{idNotification}.get.parameters[3].name: fields
paths./notifications/{idNotification}.get.parameters[3].required: false
paths./notifications/{idNotification}.get.parameters[3].type: string
paths./notifications/{idNotification}.get.parameters[4].description: ' true or false'
paths./notifications/{idNotification}.get.parameters[4].in: query
paths./notifications/{idNotification}.get.parameters[4].name: memberCreator
paths./notifications/{idNotification}.get.parameters[4].required: false
paths./notifications/{idNotification}.get.parameters[4].type: string
paths./notifications/{idNotification}.get.parameters[5].default: avatarHash, fullName,
  initials and username
paths./notifications/{idNotification}.get.parameters[5].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./notifications/{idNotification}.get.parameters[5].in: query
paths./notifications/{idNotification}.get.parameters[5].name: memberCreator_fields
paths./notifications/{idNotification}.get.parameters[5].required: false
paths./notifications/{idNotification}.get.parameters[5].type: string
paths./notifications/{idNotification}.get.parameters[6].description: ' true or false'
paths./notifications/{idNotification}.get.parameters[6].in: query
paths./notifications/{idNotification}.get.parameters[6].name: board
paths./notifications/{idNotification}.get.parameters[6].required: false
paths./notifications/{idNotification}.get.parameters[6].type: string
paths./notifications/{idNotification}.get.parameters[7].default: name
paths./notifications/{idNotification}.get.parameters[7].description: 'all or a comma-separated
  list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization,
  invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
  shortUrl, starred, subscribed or url'
paths./notifications/{idNotification}.get.parameters[7].in: query
paths./notifications/{idNotification}.get.parameters[7].name: board_fields
paths./notifications/{idNotification}.get.parameters[7].required: false
paths./notifications/{idNotification}.get.parameters[7].type: string
paths./notifications/{idNotification}.get.parameters[8].description: ' true or false'
paths./notifications/{idNotification}.get.parameters[8].in: query
paths./notifications/{idNotification}.get.parameters[8].name: list
paths./notifications/{idNotification}.get.parameters[8].required: false
paths./notifications/{idNotification}.get.parameters[8].type: string
paths./notifications/{idNotification}.get.parameters[9].description: ' true or false'
paths./notifications/{idNotification}.get.parameters[9].in: query
paths./notifications/{idNotification}.get.parameters[9].name: card
paths./notifications/{idNotification}.get.parameters[9].required: false
paths./notifications/{idNotification}.get.parameters[9].type: string
paths./notifications/{idNotification}.get.parameters[10].default: name
paths./notifications/{idNotification}.get.parameters[10].description: 'all or a comma-separated
  list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due,
  email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
  idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed
  or url'
paths./notifications/{idNotification}.get.parameters[10].in: query
paths./notifications/{idNotification}.get.parameters[10].name: card_fields
paths./notifications/{idNotification}.get.parameters[10].required: false
paths./notifications/{idNotification}.get.parameters[10].type: string
paths./notifications/{idNotification}.get.parameters[11].description: ' true or false'
paths./notifications/{idNotification}.get.parameters[11].in: query
paths./notifications/{idNotification}.get.parameters[11].name: organization
paths./notifications/{idNotification}.get.parameters[11].required: false
paths./notifications/{idNotification}.get.parameters[11].type: string
paths./notifications/{idNotification}.get.parameters[12].default: displayName
paths./notifications/{idNotification}.get.parameters[12].description: 'all or a comma-separated
  list of: billableMemberCount, desc, descData, displayName, idBoards, invitations,
  invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products,
  url or website'
paths./notifications/{idNotification}.get.parameters[12].in: query
paths./notifications/{idNotification}.get.parameters[12].name: organization_fields
paths./notifications/{idNotification}.get.parameters[12].required: false
paths./notifications/{idNotification}.get.parameters[12].type: string
paths./notifications/{idNotification}.get.parameters[13].description: ' true or false'
paths./notifications/{idNotification}.get.parameters[13].in: query
paths./notifications/{idNotification}.get.parameters[13].name: member
paths./notifications/{idNotification}.get.parameters[13].required: false
paths./notifications/{idNotification}.get.parameters[13].type: string
paths./notifications/{idNotification}.get.parameters[14].default: avatarHash, fullName,
  initials and username
paths./notifications/{idNotification}.get.parameters[14].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./notifications/{idNotification}.get.parameters[14].in: query
paths./notifications/{idNotification}.get.parameters[14].name: member_fields
paths./notifications/{idNotification}.get.parameters[14].required: false
paths./notifications/{idNotification}.get.parameters[14].type: string
paths./notifications/{idNotification}.get.parameters[15].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./notifications/{idNotification}.get.parameters[15].in: query
paths./notifications/{idNotification}.get.parameters[15].name: key
paths./notifications/{idNotification}.get.parameters[15].required: true
paths./notifications/{idNotification}.get.parameters[15].type: string
paths./notifications/{idNotification}.get.parameters[16].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./notifications/{idNotification}.get.parameters[16].in: query
paths./notifications/{idNotification}.get.parameters[16].name: token
paths./notifications/{idNotification}.get.parameters[16].required: true
paths./notifications/{idNotification}.get.parameters[16].type: string
paths./notifications/{idNotification}.get.responses.200.description: Success
paths./notifications/{idNotification}.get.responses.400.description: Server rejection
paths./notifications/{idNotification}.get.security.length: 2
paths./notifications/{idNotification}.get.security[0].api_key.length: 0
paths./notifications/{idNotification}.get.security[1].api_token.length: 0
paths./notifications/{idNotification}.get.summary: getNotificationsByIdNotification()
paths./notifications/{idNotification}.get.tags.length: 1
paths./notifications/{idNotification}.get.tags[0]: notification
paths./notifications/{idNotification}.put.operationId: updateNotificationsByIdNotification
paths./notifications/{idNotification}.put.parameters.length: 4
paths./notifications/{idNotification}.put.parameters[0].description: idNotification
paths./notifications/{idNotification}.put.parameters[0].in: path
paths./notifications/{idNotification}.put.parameters[0].name: idNotification
paths./notifications/{idNotification}.put.parameters[0].required: true
paths./notifications/{idNotification}.put.parameters[0].type: string
paths./notifications/{idNotification}.put.parameters[1].description: Attributes of
  "Notifications" to be updated.
paths./notifications/{idNotification}.put.parameters[1].in: body
paths./notifications/{idNotification}.put.parameters[1].name: body
paths./notifications/{idNotification}.put.parameters[1].required: true
paths./notifications/{idNotification}.put.parameters[1].schema.$ref: '#/definitions/notifications'
paths./notifications/{idNotification}.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./notifications/{idNotification}.put.parameters[2].in: query
paths./notifications/{idNotification}.put.parameters[2].name: key
paths./notifications/{idNotification}.put.parameters[2].required: true
paths./notifications/{idNotification}.put.parameters[2].type: string
paths./notifications/{idNotification}.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./notifications/{idNotification}.put.parameters[3].in: query
paths./notifications/{idNotification}.put.parameters[3].name: token
paths./notifications/{idNotification}.put.parameters[3].required: true
paths./notifications/{idNotification}.put.parameters[3].type: string
paths./notifications/{idNotification}.put.responses.200.description: Success
paths./notifications/{idNotification}.put.responses.400.description: Server rejection
paths./notifications/{idNotification}.put.security.length: 2
paths./notifications/{idNotification}.put.security[0].api_key.length: 0
paths./notifications/{idNotification}.put.security[1].api_token.length: 0
paths./notifications/{idNotification}.put.summary: updateNotificationsByIdNotification()
paths./notifications/{idNotification}.put.tags.length: 1
paths./notifications/{idNotification}.put.tags[0]: notification
paths./notifications/{idNotification}/{field}.get.operationId: getNotificationsByIdNotificationByField
paths./notifications/{idNotification}/{field}.get.parameters.length: 4
paths./notifications/{idNotification}/{field}.get.parameters[0].description: idNotification
paths./notifications/{idNotification}/{field}.get.parameters[0].in: path
paths./notifications/{idNotification}/{field}.get.parameters[0].name: idNotification
paths./notifications/{idNotification}/{field}.get.parameters[0].required: true
paths./notifications/{idNotification}/{field}.get.parameters[0].type: string
paths./notifications/{idNotification}/{field}.get.parameters[1].description: field
paths./notifications/{idNotification}/{field}.get.parameters[1].in: path
paths./notifications/{idNotification}/{field}.get.parameters[1].name: field
paths./notifications/{idNotification}/{field}.get.parameters[1].required: true
paths./notifications/{idNotification}/{field}.get.parameters[1].type: string
paths./notifications/{idNotification}/{field}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./notifications/{idNotification}/{field}.get.parameters[2].in: query
paths./notifications/{idNotification}/{field}.get.parameters[2].name: key
paths./notifications/{idNotification}/{field}.get.parameters[2].required: true
paths./notifications/{idNotification}/{field}.get.parameters[2].type: string
paths./notifications/{idNotification}/{field}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./notifications/{idNotification}/{field}.get.parameters[3].in: query
paths./notifications/{idNotification}/{field}.get.parameters[3].name: token
paths./notifications/{idNotification}/{field}.get.parameters[3].required: true
paths./notifications/{idNotification}/{field}.get.parameters[3].type: string
paths./notifications/{idNotification}/{field}.get.responses.200.description: Success
paths./notifications/{idNotification}/{field}.get.responses.400.description: Server
  rejection
paths./notifications/{idNotification}/{field}.get.summary: getNotificationsByIdNotificationByField()
paths./notifications/{idNotification}/{field}.get.tags.length: 1
paths./notifications/{idNotification}/{field}.get.tags[0]: notification
paths./notifications/{idNotification}/board.get.operationId: getNotificationsBoardByIdNotification
paths./notifications/{idNotification}/board.get.parameters.length: 4
paths./notifications/{idNotification}/board.get.parameters[0].description: idNotification
paths./notifications/{idNotification}/board.get.parameters[0].in: path
paths./notifications/{idNotification}/board.get.parameters[0].name: idNotification
paths./notifications/{idNotification}/board.get.parameters[0].required: true
paths./notifications/{idNotification}/board.get.parameters[0].type: string
paths./notifications/{idNotification}/board.get.parameters[1].default: all
paths./notifications/{idNotification}/board.get.parameters[1].description: 'all or
  a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData,
  idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps,
  prefs, shortLink, shortUrl, starred, subscribed or url'
paths./notifications/{idNotification}/board.get.parameters[1].in: query
paths./notifications/{idNotification}/board.get.parameters[1].name: fields
paths./notifications/{idNotification}/board.get.parameters[1].required: false
paths./notifications/{idNotification}/board.get.parameters[1].type: string
paths./notifications/{idNotification}/board.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./notifications/{idNotification}/board.get.parameters[2].in: query
paths./notifications/{idNotification}/board.get.parameters[2].name: key
paths./notifications/{idNotification}/board.get.parameters[2].required: true
paths./notifications/{idNotification}/board.get.parameters[2].type: string
paths./notifications/{idNotification}/board.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./notifications/{idNotification}/board.get.parameters[3].in: query
paths./notifications/{idNotification}/board.get.parameters[3].name: token
paths./notifications/{idNotification}/board.get.parameters[3].required: true
paths./notifications/{idNotification}/board.get.parameters[3].type: string
paths./notifications/{idNotification}/board.get.responses.200.description: Success
paths./notifications/{idNotification}/board.get.responses.400.description: Server
  rejection
paths./notifications/{idNotification}/board.get.security.length: 2
paths./notifications/{idNotification}/board.get.security[0].api_key.length: 0
paths./notifications/{idNotification}/board.get.security[1].api_token.length: 0
paths./notifications/{idNotification}/board.get.summary: getNotificationsBoardByIdNotification()
paths./notifications/{idNotification}/board.get.tags.length: 1
paths./notifications/{idNotification}/board.get.tags[0]: notification
paths./notifications/{idNotification}/board/{field}.get.operationId: getNotificationsBoardByIdNotificationByField
paths./notifications/{idNotification}/board/{field}.get.parameters.length: 4
paths./notifications/{idNotification}/board/{field}.get.parameters[0].description: idNotification
paths./notifications/{idNotification}/board/{field}.get.parameters[0].in: path
paths./notifications/{idNotification}/board/{field}.get.parameters[0].name: idNotification
paths./notifications/{idNotification}/board/{field}.get.parameters[0].required: true
paths./notifications/{idNotification}/board/{field}.get.parameters[0].type: string
paths./notifications/{idNotification}/board/{field}.get.parameters[1].description: field
paths./notifications/{idNotification}/board/{field}.get.parameters[1].in: path
paths./notifications/{idNotification}/board/{field}.get.parameters[1].name: field
paths./notifications/{idNotification}/board/{field}.get.parameters[1].required: true
paths./notifications/{idNotification}/board/{field}.get.parameters[1].type: string
paths./notifications/{idNotification}/board/{field}.get.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./notifications/{idNotification}/board/{field}.get.parameters[2].in: query
paths./notifications/{idNotification}/board/{field}.get.parameters[2].name: key
paths./notifications/{idNotification}/board/{field}.get.parameters[2].required: true
paths./notifications/{idNotification}/board/{field}.get.parameters[2].type: string
paths./notifications/{idNotification}/board/{field}.get.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./notifications/{idNotification}/board/{field}.get.parameters[3].in: query
paths./notifications/{idNotification}/board/{field}.get.parameters[3].name: token
paths./notifications/{idNotification}/board/{field}.get.parameters[3].required: true
paths./notifications/{idNotification}/board/{field}.get.parameters[3].type: string
paths./notifications/{idNotification}/board/{field}.get.responses.200.description: Success
paths./notifications/{idNotification}/board/{field}.get.responses.400.description: Server
  rejection
paths./notifications/{idNotification}/board/{field}.get.security.length: 2
paths./notifications/{idNotification}/board/{field}.get.security[0].api_key.length: 0
paths./notifications/{idNotification}/board/{field}.get.security[1].api_token.length: 0
paths./notifications/{idNotification}/board/{field}.get.summary: getNotificationsBoardByIdNotificationByField()
paths./notifications/{idNotification}/board/{field}.get.tags.length: 1
paths./notifications/{idNotification}/board/{field}.get.tags[0]: notification
paths./notifications/{idNotification}/card.get.operationId: getNotificationsCardByIdNotification
paths./notifications/{idNotification}/card.get.parameters.length: 4
paths./notifications/{idNotification}/card.get.parameters[0].description: idNotification
paths./notifications/{idNotification}/card.get.parameters[0].in: path
paths./notifications/{idNotification}/card.get.parameters[0].name: idNotification
paths./notifications/{idNotification}/card.get.parameters[0].required: true
paths./notifications/{idNotification}/card.get.parameters[0].type: string
paths./notifications/{idNotification}/card.get.parameters[1].default: all
paths./notifications/{idNotification}/card.get.parameters[1].description: 'all or
  a comma-separated list of: badges, checkItemStates, closed, dateLastActivity, desc,
  descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList,
  idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink,
  shortUrl, subscribed or url'
paths./notifications/{idNotification}/card.get.parameters[1].in: query
paths./notifications/{idNotification}/card.get.parameters[1].name: fields
paths./notifications/{idNotification}/card.get.parameters[1].required: false
paths./notifications/{idNotification}/card.get.parameters[1].type: string
paths./notifications/{idNotification}/card.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./notifications/{idNotification}/card.get.parameters[2].in: query
paths./notifications/{idNotification}/card.get.parameters[2].name: key
paths./notifications/{idNotification}/card.get.parameters[2].required: true
paths./notifications/{idNotification}/card.get.parameters[2].type: string
paths./notifications/{idNotification}/card.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./notifications/{idNotification}/card.get.parameters[3].in: query
paths./notifications/{idNotification}/card.get.parameters[3].name: token
paths./notifications/{idNotification}/card.get.parameters[3].required: true
paths./notifications/{idNotification}/card.get.parameters[3].type: string
paths./notifications/{idNotification}/card.get.responses.200.description: Success
paths./notifications/{idNotification}/card.get.responses.400.description: Server rejection
paths./notifications/{idNotification}/card.get.security.length: 2
paths./notifications/{idNotification}/card.get.security[0].api_key.length: 0
paths./notifications/{idNotification}/card.get.security[1].api_token.length: 0
paths./notifications/{idNotification}/card.get.summary: getNotificationsCardByIdNotification()
paths./notifications/{idNotification}/card.get.tags.length: 1
paths./notifications/{idNotification}/card.get.tags[0]: notification
paths./notifications/{idNotification}/card/{field}.get.operationId: getNotificationsCardByIdNotificationByField
paths./notifications/{idNotification}/card/{field}.get.parameters.length: 4
paths./notifications/{idNotification}/card/{field}.get.parameters[0].description: idNotification
paths./notifications/{idNotification}/card/{field}.get.parameters[0].in: path
paths./notifications/{idNotification}/card/{field}.get.parameters[0].name: idNotification
paths./notifications/{idNotification}/card/{field}.get.parameters[0].required: true
paths./notifications/{idNotification}/card/{field}.get.parameters[0].type: string
paths./notifications/{idNotification}/card/{field}.get.parameters[1].description: field
paths./notifications/{idNotification}/card/{field}.get.parameters[1].in: path
paths./notifications/{idNotification}/card/{field}.get.parameters[1].name: field
paths./notifications/{idNotification}/card/{field}.get.parameters[1].required: true
paths./notifications/{idNotification}/card/{field}.get.parameters[1].type: string
paths./notifications/{idNotification}/card/{field}.get.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./notifications/{idNotification}/card/{field}.get.parameters[2].in: query
paths./notifications/{idNotification}/card/{field}.get.parameters[2].name: key
paths./notifications/{idNotification}/card/{field}.get.parameters[2].required: true
paths./notifications/{idNotification}/card/{field}.get.parameters[2].type: string
paths./notifications/{idNotification}/card/{field}.get.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./notifications/{idNotification}/card/{field}.get.parameters[3].in: query
paths./notifications/{idNotification}/card/{field}.get.parameters[3].name: token
paths./notifications/{idNotification}/card/{field}.get.parameters[3].required: true
paths./notifications/{idNotification}/card/{field}.get.parameters[3].type: string
paths./notifications/{idNotification}/card/{field}.get.responses.200.description: Success
paths./notifications/{idNotification}/card/{field}.get.responses.400.description: Server
  rejection
paths./notifications/{idNotification}/card/{field}.get.security.length: 2
paths./notifications/{idNotification}/card/{field}.get.security[0].api_key.length: 0
paths./notifications/{idNotification}/card/{field}.get.security[1].api_token.length: 0
paths./notifications/{idNotification}/card/{field}.get.summary: getNotificationsCardByIdNotificationByField()
paths./notifications/{idNotification}/card/{field}.get.tags.length: 1
paths./notifications/{idNotification}/card/{field}.get.tags[0]: notification
paths./notifications/{idNotification}/display.get.operationId: getNotificationsDisplayByIdNotification
paths./notifications/{idNotification}/display.get.parameters.length: 3
paths./notifications/{idNotification}/display.get.parameters[0].description: idNotification
paths./notifications/{idNotification}/display.get.parameters[0].in: path
paths./notifications/{idNotification}/display.get.parameters[0].name: idNotification
paths./notifications/{idNotification}/display.get.parameters[0].required: true
paths./notifications/{idNotification}/display.get.parameters[0].type: string
paths./notifications/{idNotification}/display.get.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./notifications/{idNotification}/display.get.parameters[1].in: query
paths./notifications/{idNotification}/display.get.parameters[1].name: key
paths./notifications/{idNotification}/display.get.parameters[1].required: true
paths./notifications/{idNotification}/display.get.parameters[1].type: string
paths./notifications/{idNotification}/display.get.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./notifications/{idNotification}/display.get.parameters[2].in: query
paths./notifications/{idNotification}/display.get.parameters[2].name: token
paths./notifications/{idNotification}/display.get.parameters[2].required: true
paths./notifications/{idNotification}/display.get.parameters[2].type: string
paths./notifications/{idNotification}/display.get.responses.200.description: Success
paths./notifications/{idNotification}/display.get.responses.400.description: Server
  rejection
paths./notifications/{idNotification}/display.get.security.length: 2
paths./notifications/{idNotification}/display.get.security[0].api_key.length: 0
paths./notifications/{idNotification}/display.get.security[1].api_token.length: 0
paths./notifications/{idNotification}/display.get.summary: getNotificationsDisplayByIdNotification()
paths./notifications/{idNotification}/display.get.tags.length: 1
paths./notifications/{idNotification}/display.get.tags[0]: notification
paths./notifications/{idNotification}/entities.get.operationId: getNotificationsEntitiesByIdNotification
paths./notifications/{idNotification}/entities.get.parameters.length: 3
paths./notifications/{idNotification}/entities.get.parameters[0].description: idNotification
paths./notifications/{idNotification}/entities.get.parameters[0].in: path
paths./notifications/{idNotification}/entities.get.parameters[0].name: idNotification
paths./notifications/{idNotification}/entities.get.parameters[0].required: true
paths./notifications/{idNotification}/entities.get.parameters[0].type: string
paths./notifications/{idNotification}/entities.get.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./notifications/{idNotification}/entities.get.parameters[1].in: query
paths./notifications/{idNotification}/entities.get.parameters[1].name: key
paths./notifications/{idNotification}/entities.get.parameters[1].required: true
paths./notifications/{idNotification}/entities.get.parameters[1].type: string
paths./notifications/{idNotification}/entities.get.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./notifications/{idNotification}/entities.get.parameters[2].in: query
paths./notifications/{idNotification}/entities.get.parameters[2].name: token
paths./notifications/{idNotification}/entities.get.parameters[2].required: true
paths./notifications/{idNotification}/entities.get.parameters[2].type: string
paths./notifications/{idNotification}/entities.get.responses.200.description: Success
paths./notifications/{idNotification}/entities.get.responses.400.description: Server
  rejection
paths./notifications/{idNotification}/entities.get.security.length: 2
paths./notifications/{idNotification}/entities.get.security[0].api_key.length: 0
paths./notifications/{idNotification}/entities.get.security[1].api_token.length: 0
paths./notifications/{idNotification}/entities.get.summary: getNotificationsEntitiesByIdNotification()
paths./notifications/{idNotification}/entities.get.tags.length: 1
paths./notifications/{idNotification}/entities.get.tags[0]: notification
paths./notifications/{idNotification}/list.get.operationId: getNotificationsListByIdNotification
paths./notifications/{idNotification}/list.get.parameters.length: 4
paths./notifications/{idNotification}/list.get.parameters[0].description: idNotification
paths./notifications/{idNotification}/list.get.parameters[0].in: path
paths./notifications/{idNotification}/list.get.parameters[0].name: idNotification
paths./notifications/{idNotification}/list.get.parameters[0].required: true
paths./notifications/{idNotification}/list.get.parameters[0].type: string
paths./notifications/{idNotification}/list.get.parameters[1].default: all
paths./notifications/{idNotification}/list.get.parameters[1].description: 'all or
  a comma-separated list of: closed, idBoard, name, pos or subscribed'
paths./notifications/{idNotification}/list.get.parameters[1].in: query
paths./notifications/{idNotification}/list.get.parameters[1].name: fields
paths./notifications/{idNotification}/list.get.parameters[1].required: false
paths./notifications/{idNotification}/list.get.parameters[1].type: string
paths./notifications/{idNotification}/list.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./notifications/{idNotification}/list.get.parameters[2].in: query
paths./notifications/{idNotification}/list.get.parameters[2].name: key
paths./notifications/{idNotification}/list.get.parameters[2].required: true
paths./notifications/{idNotification}/list.get.parameters[2].type: string
paths./notifications/{idNotification}/list.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./notifications/{idNotification}/list.get.parameters[3].in: query
paths./notifications/{idNotification}/list.get.parameters[3].name: token
paths./notifications/{idNotification}/list.get.parameters[3].required: true
paths./notifications/{idNotification}/list.get.parameters[3].type: string
paths./notifications/{idNotification}/list.get.responses.200.description: Success
paths./notifications/{idNotification}/list.get.responses.400.description: Server rejection
paths./notifications/{idNotification}/list.get.security.length: 2
paths./notifications/{idNotification}/list.get.security[0].api_key.length: 0
paths./notifications/{idNotification}/list.get.security[1].api_token.length: 0
paths./notifications/{idNotification}/list.get.summary: getNotificationsListByIdNotification()
paths./notifications/{idNotification}/list.get.tags.length: 1
paths./notifications/{idNotification}/list.get.tags[0]: notification
paths./notifications/{idNotification}/list/{field}.get.operationId: getNotificationsListByIdNotificationByField
paths./notifications/{idNotification}/list/{field}.get.parameters.length: 4
paths./notifications/{idNotification}/list/{field}.get.parameters[0].description: idNotification
paths./notifications/{idNotification}/list/{field}.get.parameters[0].in: path
paths./notifications/{idNotification}/list/{field}.get.parameters[0].name: idNotification
paths./notifications/{idNotification}/list/{field}.get.parameters[0].required: true
paths./notifications/{idNotification}/list/{field}.get.parameters[0].type: string
paths./notifications/{idNotification}/list/{field}.get.parameters[1].description: field
paths./notifications/{idNotification}/list/{field}.get.parameters[1].in: path
paths./notifications/{idNotification}/list/{field}.get.parameters[1].name: field
paths./notifications/{idNotification}/list/{field}.get.parameters[1].required: true
paths./notifications/{idNotification}/list/{field}.get.parameters[1].type: string
paths./notifications/{idNotification}/list/{field}.get.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./notifications/{idNotification}/list/{field}.get.parameters[2].in: query
paths./notifications/{idNotification}/list/{field}.get.parameters[2].name: key
paths./notifications/{idNotification}/list/{field}.get.parameters[2].required: true
paths./notifications/{idNotification}/list/{field}.get.parameters[2].type: string
paths./notifications/{idNotification}/list/{field}.get.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./notifications/{idNotification}/list/{field}.get.parameters[3].in: query
paths./notifications/{idNotification}/list/{field}.get.parameters[3].name: token
paths./notifications/{idNotification}/list/{field}.get.parameters[3].required: true
paths./notifications/{idNotification}/list/{field}.get.parameters[3].type: string
paths./notifications/{idNotification}/list/{field}.get.responses.200.description: Success
paths./notifications/{idNotification}/list/{field}.get.responses.400.description: Server
  rejection
paths./notifications/{idNotification}/list/{field}.get.security.length: 2
paths./notifications/{idNotification}/list/{field}.get.security[0].api_key.length: 0
paths./notifications/{idNotification}/list/{field}.get.security[1].api_token.length: 0
paths./notifications/{idNotification}/list/{field}.get.summary: getNotificationsListByIdNotificationByField()
paths./notifications/{idNotification}/list/{field}.get.tags.length: 1
paths./notifications/{idNotification}/list/{field}.get.tags[0]: notification
paths./notifications/{idNotification}/member.get.operationId: getNotificationsMemberByIdNotification
paths./notifications/{idNotification}/member.get.parameters.length: 4
paths./notifications/{idNotification}/member.get.parameters[0].description: idNotification
paths./notifications/{idNotification}/member.get.parameters[0].in: path
paths./notifications/{idNotification}/member.get.parameters[0].name: idNotification
paths./notifications/{idNotification}/member.get.parameters[0].required: true
paths./notifications/{idNotification}/member.get.parameters[0].type: string
paths./notifications/{idNotification}/member.get.parameters[1].default: all
paths./notifications/{idNotification}/member.get.parameters[1].description: 'all or
  a comma-separated list of: avatarHash, avatarSource, bio, bioData, confirmed, email,
  fullName, gravatarHash, idBoards, idBoardsPinned, idOrganizations, idPremOrgsAdmin,
  initials, loginTypes, memberType, oneTimeMessagesDismissed, prefs, premiumFeatures,
  products, status, status, trophies, uploadedAvatarHash, url or username'
paths./notifications/{idNotification}/member.get.parameters[1].in: query
paths./notifications/{idNotification}/member.get.parameters[1].name: fields
paths./notifications/{idNotification}/member.get.parameters[1].required: false
paths./notifications/{idNotification}/member.get.parameters[1].type: string
paths./notifications/{idNotification}/member.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./notifications/{idNotification}/member.get.parameters[2].in: query
paths./notifications/{idNotification}/member.get.parameters[2].name: key
paths./notifications/{idNotification}/member.get.parameters[2].required: true
paths./notifications/{idNotification}/member.get.parameters[2].type: string
paths./notifications/{idNotification}/member.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./notifications/{idNotification}/member.get.parameters[3].in: query
paths./notifications/{idNotification}/member.get.parameters[3].name: token
paths./notifications/{idNotification}/member.get.parameters[3].required: true
paths./notifications/{idNotification}/member.get.parameters[3].type: string
paths./notifications/{idNotification}/member.get.responses.200.description: Success
paths./notifications/{idNotification}/member.get.responses.400.description: Server
  rejection
paths./notifications/{idNotification}/member.get.security.length: 2
paths./notifications/{idNotification}/member.get.security[0].api_key.length: 0
paths./notifications/{idNotification}/member.get.security[1].api_token.length: 0
paths./notifications/{idNotification}/member.get.summary: getNotificationsMemberByIdNotification()
paths./notifications/{idNotification}/member.get.tags.length: 1
paths./notifications/{idNotification}/member.get.tags[0]: notification
paths./notifications/{idNotification}/member/{field}.get.operationId: getNotificationsMemberByIdNotificationByField
paths./notifications/{idNotification}/member/{field}.get.parameters.length: 4
paths./notifications/{idNotification}/member/{field}.get.parameters[0].description: idNotification
paths./notifications/{idNotification}/member/{field}.get.parameters[0].in: path
paths./notifications/{idNotification}/member/{field}.get.parameters[0].name: idNotification
paths./notifications/{idNotification}/member/{field}.get.parameters[0].required: true
paths./notifications/{idNotification}/member/{field}.get.parameters[0].type: string
paths./notifications/{idNotification}/member/{field}.get.parameters[1].description: field
paths./notifications/{idNotification}/member/{field}.get.parameters[1].in: path
paths./notifications/{idNotification}/member/{field}.get.parameters[1].name: field
paths./notifications/{idNotification}/member/{field}.get.parameters[1].required: true
paths./notifications/{idNotification}/member/{field}.get.parameters[1].type: string
paths./notifications/{idNotification}/member/{field}.get.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./notifications/{idNotification}/member/{field}.get.parameters[2].in: query
paths./notifications/{idNotification}/member/{field}.get.parameters[2].name: key
paths./notifications/{idNotification}/member/{field}.get.parameters[2].required: true
paths./notifications/{idNotification}/member/{field}.get.parameters[2].type: string
paths./notifications/{idNotification}/member/{field}.get.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./notifications/{idNotification}/member/{field}.get.parameters[3].in: query
paths./notifications/{idNotification}/member/{field}.get.parameters[3].name: token
paths./notifications/{idNotification}/member/{field}.get.parameters[3].required: true
paths./notifications/{idNotification}/member/{field}.get.parameters[3].type: string
paths./notifications/{idNotification}/member/{field}.get.responses.200.description: Success
paths./notifications/{idNotification}/member/{field}.get.responses.400.description: Server
  rejection
paths./notifications/{idNotification}/member/{field}.get.security.length: 2
paths./notifications/{idNotification}/member/{field}.get.security[0].api_key.length: 0
paths./notifications/{idNotification}/member/{field}.get.security[1].api_token.length: 0
paths./notifications/{idNotification}/member/{field}.get.summary: getNotificationsMemberByIdNotificationByField()
paths./notifications/{idNotification}/member/{field}.get.tags.length: 1
paths./notifications/{idNotification}/member/{field}.get.tags[0]: notification
paths./notifications/{idNotification}/memberCreator.get.operationId: getNotificationsMemberCreatorByIdNotification
paths./notifications/{idNotification}/memberCreator.get.parameters.length: 4
paths./notifications/{idNotification}/memberCreator.get.parameters[0].description: idNotification
paths./notifications/{idNotification}/memberCreator.get.parameters[0].in: path
paths./notifications/{idNotification}/memberCreator.get.parameters[0].name: idNotification
paths./notifications/{idNotification}/memberCreator.get.parameters[0].required: true
paths./notifications/{idNotification}/memberCreator.get.parameters[0].type: string
paths./notifications/{idNotification}/memberCreator.get.parameters[1].default: all
paths./notifications/{idNotification}/memberCreator.get.parameters[1].description: 'all
  or a comma-separated list of: avatarHash, avatarSource, bio, bioData, confirmed,
  email, fullName, gravatarHash, idBoards, idBoardsPinned, idOrganizations, idPremOrgsAdmin,
  initials, loginTypes, memberType, oneTimeMessagesDismissed, prefs, premiumFeatures,
  products, status, status, trophies, uploadedAvatarHash, url or username'
paths./notifications/{idNotification}/memberCreator.get.parameters[1].in: query
paths./notifications/{idNotification}/memberCreator.get.parameters[1].name: fields
paths./notifications/{idNotification}/memberCreator.get.parameters[1].required: false
paths./notifications/{idNotification}/memberCreator.get.parameters[1].type: string
paths./notifications/{idNotification}/memberCreator.get.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./notifications/{idNotification}/memberCreator.get.parameters[2].in: query
paths./notifications/{idNotification}/memberCreator.get.parameters[2].name: key
paths./notifications/{idNotification}/memberCreator.get.parameters[2].required: true
paths./notifications/{idNotification}/memberCreator.get.parameters[2].type: string
paths./notifications/{idNotification}/memberCreator.get.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./notifications/{idNotification}/memberCreator.get.parameters[3].in: query
paths./notifications/{idNotification}/memberCreator.get.parameters[3].name: token
paths./notifications/{idNotification}/memberCreator.get.parameters[3].required: true
paths./notifications/{idNotification}/memberCreator.get.parameters[3].type: string
paths./notifications/{idNotification}/memberCreator.get.responses.200.description: Success
paths./notifications/{idNotification}/memberCreator.get.responses.400.description: Server
  rejection
paths./notifications/{idNotification}/memberCreator.get.security.length: 2
paths./notifications/{idNotification}/memberCreator.get.security[0].api_key.length: 0
paths./notifications/{idNotification}/memberCreator.get.security[1].api_token.length: 0
paths./notifications/{idNotification}/memberCreator.get.summary: getNotificationsMemberCreatorByIdNotification()
paths./notifications/{idNotification}/memberCreator.get.tags.length: 1
paths./notifications/{idNotification}/memberCreator.get.tags[0]: notification
paths./notifications/{idNotification}/memberCreator/{field}.get.operationId: getNotificationsMemberCreatorByIdNotificationByField
paths./notifications/{idNotification}/memberCreator/{field}.get.parameters.length: 4
paths./notifications/{idNotification}/memberCreator/{field}.get.parameters[0].description: idNotification
paths./notifications/{idNotification}/memberCreator/{field}.get.parameters[0].in: path
paths./notifications/{idNotification}/memberCreator/{field}.get.parameters[0].name: idNotification
paths./notifications/{idNotification}/memberCreator/{field}.get.parameters[0].required: true
paths./notifications/{idNotification}/memberCreator/{field}.get.parameters[0].type: string
paths./notifications/{idNotification}/memberCreator/{field}.get.parameters[1].description: field
paths./notifications/{idNotification}/memberCreator/{field}.get.parameters[1].in: path
paths./notifications/{idNotification}/memberCreator/{field}.get.parameters[1].name: field
paths./notifications/{idNotification}/memberCreator/{field}.get.parameters[1].required: true
paths./notifications/{idNotification}/memberCreator/{field}.get.parameters[1].type: string
paths./notifications/{idNotification}/memberCreator/{field}.get.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./notifications/{idNotification}/memberCreator/{field}.get.parameters[2].in: query
paths./notifications/{idNotification}/memberCreator/{field}.get.parameters[2].name: key
paths./notifications/{idNotification}/memberCreator/{field}.get.parameters[2].required: true
paths./notifications/{idNotification}/memberCreator/{field}.get.parameters[2].type: string
paths./notifications/{idNotification}/memberCreator/{field}.get.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./notifications/{idNotification}/memberCreator/{field}.get.parameters[3].in: query
paths./notifications/{idNotification}/memberCreator/{field}.get.parameters[3].name: token
paths./notifications/{idNotification}/memberCreator/{field}.get.parameters[3].required: true
paths./notifications/{idNotification}/memberCreator/{field}.get.parameters[3].type: string
paths./notifications/{idNotification}/memberCreator/{field}.get.responses.200.description: Success
paths./notifications/{idNotification}/memberCreator/{field}.get.responses.400.description: Server
  rejection
paths./notifications/{idNotification}/memberCreator/{field}.get.security.length: 2
paths./notifications/{idNotification}/memberCreator/{field}.get.security[0].api_key.length: 0
paths./notifications/{idNotification}/memberCreator/{field}.get.security[1].api_token.length: 0
paths./notifications/{idNotification}/memberCreator/{field}.get.summary: getNotificationsMemberCreatorByIdNotificationByField()
paths./notifications/{idNotification}/memberCreator/{field}.get.tags.length: 1
paths./notifications/{idNotification}/memberCreator/{field}.get.tags[0]: notification
paths./notifications/{idNotification}/organization.get.operationId: getNotificationsOrganizationByIdNotification
paths./notifications/{idNotification}/organization.get.parameters.length: 4
paths./notifications/{idNotification}/organization.get.parameters[0].description: idNotification
paths./notifications/{idNotification}/organization.get.parameters[0].in: path
paths./notifications/{idNotification}/organization.get.parameters[0].name: idNotification
paths./notifications/{idNotification}/organization.get.parameters[0].required: true
paths./notifications/{idNotification}/organization.get.parameters[0].type: string
paths./notifications/{idNotification}/organization.get.parameters[1].default: all
paths./notifications/{idNotification}/organization.get.parameters[1].description: 'all
  or a comma-separated list of: billableMemberCount, desc, descData, displayName,
  idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures,
  products, url or website'
paths./notifications/{idNotification}/organization.get.parameters[1].in: query
paths./notifications/{idNotification}/organization.get.parameters[1].name: fields
paths./notifications/{idNotification}/organization.get.parameters[1].required: false
paths./notifications/{idNotification}/organization.get.parameters[1].type: string
paths./notifications/{idNotification}/organization.get.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./notifications/{idNotification}/organization.get.parameters[2].in: query
paths./notifications/{idNotification}/organization.get.parameters[2].name: key
paths./notifications/{idNotification}/organization.get.parameters[2].required: true
paths./notifications/{idNotification}/organization.get.parameters[2].type: string
paths./notifications/{idNotification}/organization.get.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./notifications/{idNotification}/organization.get.parameters[3].in: query
paths./notifications/{idNotification}/organization.get.parameters[3].name: token
paths./notifications/{idNotification}/organization.get.parameters[3].required: true
paths./notifications/{idNotification}/organization.get.parameters[3].type: string
paths./notifications/{idNotification}/organization.get.responses.200.description: Success
paths./notifications/{idNotification}/organization.get.responses.400.description: Server
  rejection
paths./notifications/{idNotification}/organization.get.security.length: 2
paths./notifications/{idNotification}/organization.get.security[0].api_key.length: 0
paths./notifications/{idNotification}/organization.get.security[1].api_token.length: 0
paths./notifications/{idNotification}/organization.get.summary: getNotificationsOrganizationByIdNotification()
paths./notifications/{idNotification}/organization.get.tags.length: 1
paths./notifications/{idNotification}/organization.get.tags[0]: notification
paths./notifications/{idNotification}/organization/{field}.get.operationId: getNotificationsOrganizationByIdNotificationByField
paths./notifications/{idNotification}/organization/{field}.get.parameters.length: 4
paths./notifications/{idNotification}/organization/{field}.get.parameters[0].description: idNotification
paths./notifications/{idNotification}/organization/{field}.get.parameters[0].in: path
paths./notifications/{idNotification}/organization/{field}.get.parameters[0].name: idNotification
paths./notifications/{idNotification}/organization/{field}.get.parameters[0].required: true
paths./notifications/{idNotification}/organization/{field}.get.parameters[0].type: string
paths./notifications/{idNotification}/organization/{field}.get.parameters[1].description: field
paths./notifications/{idNotification}/organization/{field}.get.parameters[1].in: path
paths./notifications/{idNotification}/organization/{field}.get.parameters[1].name: field
paths./notifications/{idNotification}/organization/{field}.get.parameters[1].required: true
paths./notifications/{idNotification}/organization/{field}.get.parameters[1].type: string
paths./notifications/{idNotification}/organization/{field}.get.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./notifications/{idNotification}/organization/{field}.get.parameters[2].in: query
paths./notifications/{idNotification}/organization/{field}.get.parameters[2].name: key
paths./notifications/{idNotification}/organization/{field}.get.parameters[2].required: true
paths./notifications/{idNotification}/organization/{field}.get.parameters[2].type: string
paths./notifications/{idNotification}/organization/{field}.get.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./notifications/{idNotification}/organization/{field}.get.parameters[3].in: query
paths./notifications/{idNotification}/organization/{field}.get.parameters[3].name: token
paths./notifications/{idNotification}/organization/{field}.get.parameters[3].required: true
paths./notifications/{idNotification}/organization/{field}.get.parameters[3].type: string
paths./notifications/{idNotification}/organization/{field}.get.responses.200.description: Success
paths./notifications/{idNotification}/organization/{field}.get.responses.400.description: Server
  rejection
paths./notifications/{idNotification}/organization/{field}.get.security.length: 2
paths./notifications/{idNotification}/organization/{field}.get.security[0].api_key.length: 0
paths./notifications/{idNotification}/organization/{field}.get.security[1].api_token.length: 0
paths./notifications/{idNotification}/organization/{field}.get.summary: getNotificationsOrganizationByIdNotificationByField()
paths./notifications/{idNotification}/organization/{field}.get.tags.length: 1
paths./notifications/{idNotification}/organization/{field}.get.tags[0]: notification
paths./notifications/{idNotification}/unread.put.operationId: updateNotificationsUnreadByIdNotification
paths./notifications/{idNotification}/unread.put.parameters.length: 4
paths./notifications/{idNotification}/unread.put.parameters[0].description: idNotification
paths./notifications/{idNotification}/unread.put.parameters[0].in: path
paths./notifications/{idNotification}/unread.put.parameters[0].name: idNotification
paths./notifications/{idNotification}/unread.put.parameters[0].required: true
paths./notifications/{idNotification}/unread.put.parameters[0].type: string
paths./notifications/{idNotification}/unread.put.parameters[1].description: Attributes
  of "Notifications Unread" to be updated.
paths./notifications/{idNotification}/unread.put.parameters[1].in: body
paths./notifications/{idNotification}/unread.put.parameters[1].name: body
paths./notifications/{idNotification}/unread.put.parameters[1].required: true
paths./notifications/{idNotification}/unread.put.parameters[1].schema.$ref: '#/definitions/notifications_unread'
paths./notifications/{idNotification}/unread.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./notifications/{idNotification}/unread.put.parameters[2].in: query
paths./notifications/{idNotification}/unread.put.parameters[2].name: key
paths./notifications/{idNotification}/unread.put.parameters[2].required: true
paths./notifications/{idNotification}/unread.put.parameters[2].type: string
paths./notifications/{idNotification}/unread.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./notifications/{idNotification}/unread.put.parameters[3].in: query
paths./notifications/{idNotification}/unread.put.parameters[3].name: token
paths./notifications/{idNotification}/unread.put.parameters[3].required: true
paths./notifications/{idNotification}/unread.put.parameters[3].type: string
paths./notifications/{idNotification}/unread.put.responses.200.description: Success
paths./notifications/{idNotification}/unread.put.responses.400.description: Server
  rejection
paths./notifications/{idNotification}/unread.put.security.length: 2
paths./notifications/{idNotification}/unread.put.security[0].api_key.length: 0
paths./notifications/{idNotification}/unread.put.security[1].api_token.length: 0
paths./notifications/{idNotification}/unread.put.summary: updateNotificationsUnreadByIdNotification()
paths./notifications/{idNotification}/unread.put.tags.length: 1
paths./notifications/{idNotification}/unread.put.tags[0]: notification
paths./notifications/all/read.post.operationId: addNotificationsAllRead
paths./notifications/all/read.post.parameters.length: 2
paths./notifications/all/read.post.parameters[0].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./notifications/all/read.post.parameters[0].in: query
paths./notifications/all/read.post.parameters[0].name: key
paths./notifications/all/read.post.parameters[0].required: true
paths./notifications/all/read.post.parameters[0].type: string
paths./notifications/all/read.post.parameters[1].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./notifications/all/read.post.parameters[1].in: query
paths./notifications/all/read.post.parameters[1].name: token
paths./notifications/all/read.post.parameters[1].required: true
paths./notifications/all/read.post.parameters[1].type: string
paths./notifications/all/read.post.responses.200.description: Success
paths./notifications/all/read.post.responses.400.description: Server rejection
paths./notifications/all/read.post.security.length: 2
paths./notifications/all/read.post.security[0].api_key.length: 0
paths./notifications/all/read.post.security[1].api_token.length: 0
paths./notifications/all/read.post.summary: addNotificationsAllRead()
paths./notifications/all/read.post.tags.length: 1
paths./notifications/all/read.post.tags[0]: notification
paths./organizations.post.operationId: addOrganizations
paths./organizations.post.parameters.length: 3
paths./organizations.post.parameters[0].description: Attributes of "Organizations"
  to be added.
paths./organizations.post.parameters[0].in: body
paths./organizations.post.parameters[0].name: body
paths./organizations.post.parameters[0].required: true
paths./organizations.post.parameters[0].schema.$ref: '#/definitions/organizations'
paths./organizations.post.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./organizations.post.parameters[1].in: query
paths./organizations.post.parameters[1].name: key
paths./organizations.post.parameters[1].required: true
paths./organizations.post.parameters[1].type: string
paths./organizations.post.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations.post.parameters[2].in: query
paths./organizations.post.parameters[2].name: token
paths./organizations.post.parameters[2].required: true
paths./organizations.post.parameters[2].type: string
paths./organizations.post.responses.200.description: Success
paths./organizations.post.responses.400.description: Server rejection
paths./organizations.post.security.length: 2
paths./organizations.post.security[0].api_key.length: 0
paths./organizations.post.security[1].api_token.length: 0
paths./organizations.post.summary: addOrganizations()
paths./organizations.post.tags.length: 1
paths./organizations.post.tags[0]: organization
paths./organizations/{idOrg}.delete.operationId: deleteOrganizationsByIdOrg
paths./organizations/{idOrg}.delete.parameters.length: 3
paths./organizations/{idOrg}.delete.parameters[0].description: idOrg or name
paths./organizations/{idOrg}.delete.parameters[0].in: path
paths./organizations/{idOrg}.delete.parameters[0].name: idOrg
paths./organizations/{idOrg}.delete.parameters[0].required: true
paths./organizations/{idOrg}.delete.parameters[0].type: string
paths./organizations/{idOrg}.delete.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./organizations/{idOrg}.delete.parameters[1].in: query
paths./organizations/{idOrg}.delete.parameters[1].name: key
paths./organizations/{idOrg}.delete.parameters[1].required: true
paths./organizations/{idOrg}.delete.parameters[1].type: string
paths./organizations/{idOrg}.delete.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}.delete.parameters[2].in: query
paths./organizations/{idOrg}.delete.parameters[2].name: token
paths./organizations/{idOrg}.delete.parameters[2].required: true
paths./organizations/{idOrg}.delete.parameters[2].type: string
paths./organizations/{idOrg}.delete.responses.200.description: Success
paths./organizations/{idOrg}.delete.responses.400.description: Server rejection
paths./organizations/{idOrg}.delete.security.length: 2
paths./organizations/{idOrg}.delete.security[0].api_key.length: 0
paths./organizations/{idOrg}.delete.security[1].api_token.length: 0
paths./organizations/{idOrg}.delete.summary: deleteOrganizationsByIdOrg()
paths./organizations/{idOrg}.delete.tags.length: 1
paths./organizations/{idOrg}.delete.tags[0]: organization
paths./organizations/{idOrg}.get.operationId: getOrganizationsByIdOrg
paths./organizations/{idOrg}.get.parameters.length: 28
paths./organizations/{idOrg}.get.parameters[0].description: idOrg or name
paths./organizations/{idOrg}.get.parameters[0].in: path
paths./organizations/{idOrg}.get.parameters[0].name: idOrg
paths./organizations/{idOrg}.get.parameters[0].required: true
paths./organizations/{idOrg}.get.parameters[0].type: string
paths./organizations/{idOrg}.get.parameters[1].description: 'all or a comma-separated
  list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard,
  addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem,
  copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization,
  deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation,
  disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
  makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard,
  moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,
  removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
  updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,
  updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed,
  updateList:name, updateMember or updateOrganization'
paths./organizations/{idOrg}.get.parameters[1].in: query
paths./organizations/{idOrg}.get.parameters[1].name: actions
paths./organizations/{idOrg}.get.parameters[1].required: false
paths./organizations/{idOrg}.get.parameters[1].type: string
paths./organizations/{idOrg}.get.parameters[2].description: ' true or false'
paths./organizations/{idOrg}.get.parameters[2].in: query
paths./organizations/{idOrg}.get.parameters[2].name: actions_entities
paths./organizations/{idOrg}.get.parameters[2].required: false
paths./organizations/{idOrg}.get.parameters[2].type: string
paths./organizations/{idOrg}.get.parameters[3].description: ' true or false'
paths./organizations/{idOrg}.get.parameters[3].in: query
paths./organizations/{idOrg}.get.parameters[3].name: actions_display
paths./organizations/{idOrg}.get.parameters[3].required: false
paths./organizations/{idOrg}.get.parameters[3].type: string
paths./organizations/{idOrg}.get.parameters[4].default: "50"
paths./organizations/{idOrg}.get.parameters[4].description: a number from 0 to 1000
paths./organizations/{idOrg}.get.parameters[4].in: query
paths./organizations/{idOrg}.get.parameters[4].name: actions_limit
paths./organizations/{idOrg}.get.parameters[4].required: false
paths./organizations/{idOrg}.get.parameters[4].type: string
paths./organizations/{idOrg}.get.parameters[5].default: all
paths./organizations/{idOrg}.get.parameters[5].description: 'all or a comma-separated
  list of: data, date, idMemberCreator or type'
paths./organizations/{idOrg}.get.parameters[5].in: query
paths./organizations/{idOrg}.get.parameters[5].name: action_fields
paths./organizations/{idOrg}.get.parameters[5].required: false
paths./organizations/{idOrg}.get.parameters[5].type: string
paths./organizations/{idOrg}.get.parameters[6].default: none
paths./organizations/{idOrg}.get.parameters[6].description: 'all or a comma-separated
  list of: active, admin, deactivated, me or normal'
paths./organizations/{idOrg}.get.parameters[6].in: query
paths./organizations/{idOrg}.get.parameters[6].name: memberships
paths./organizations/{idOrg}.get.parameters[6].required: false
paths./organizations/{idOrg}.get.parameters[6].type: string
paths./organizations/{idOrg}.get.parameters[7].description: ' true or false'
paths./organizations/{idOrg}.get.parameters[7].in: query
paths./organizations/{idOrg}.get.parameters[7].name: memberships_member
paths./organizations/{idOrg}.get.parameters[7].required: false
paths./organizations/{idOrg}.get.parameters[7].type: string
paths./organizations/{idOrg}.get.parameters[8].default: fullName and username
paths./organizations/{idOrg}.get.parameters[8].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./organizations/{idOrg}.get.parameters[8].in: query
paths./organizations/{idOrg}.get.parameters[8].name: memberships_member_fields
paths./organizations/{idOrg}.get.parameters[8].required: false
paths./organizations/{idOrg}.get.parameters[8].type: string
paths./organizations/{idOrg}.get.parameters[9].default: none
paths./organizations/{idOrg}.get.parameters[9].description: 'One of: admins, all,
  none, normal or owners'
paths./organizations/{idOrg}.get.parameters[9].in: query
paths./organizations/{idOrg}.get.parameters[9].name: members
paths./organizations/{idOrg}.get.parameters[9].required: false
paths./organizations/{idOrg}.get.parameters[9].type: string
paths./organizations/{idOrg}.get.parameters[10].default: avatarHash, fullName, initials,
  username and confirmed
paths./organizations/{idOrg}.get.parameters[10].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./organizations/{idOrg}.get.parameters[10].in: query
paths./organizations/{idOrg}.get.parameters[10].name: member_fields
paths./organizations/{idOrg}.get.parameters[10].required: false
paths./organizations/{idOrg}.get.parameters[10].type: string
paths./organizations/{idOrg}.get.parameters[11].description: true or false ; works
  for premium organizations only.
paths./organizations/{idOrg}.get.parameters[11].in: query
paths./organizations/{idOrg}.get.parameters[11].name: member_activity
paths./organizations/{idOrg}.get.parameters[11].required: false
paths./organizations/{idOrg}.get.parameters[11].type: string
paths./organizations/{idOrg}.get.parameters[12].default: none
paths./organizations/{idOrg}.get.parameters[12].description: 'One of: admins, all,
  none, normal or owners'
paths./organizations/{idOrg}.get.parameters[12].in: query
paths./organizations/{idOrg}.get.parameters[12].name: membersInvited
paths./organizations/{idOrg}.get.parameters[12].required: false
paths./organizations/{idOrg}.get.parameters[12].type: string
paths./organizations/{idOrg}.get.parameters[13].default: avatarHash, initials, fullName
  and username
paths./organizations/{idOrg}.get.parameters[13].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./organizations/{idOrg}.get.parameters[13].in: query
paths./organizations/{idOrg}.get.parameters[13].name: membersInvited_fields
paths./organizations/{idOrg}.get.parameters[13].required: false
paths./organizations/{idOrg}.get.parameters[13].type: string
paths./organizations/{idOrg}.get.parameters[14].default: none
paths./organizations/{idOrg}.get.parameters[14].description: 'all or a comma-separated
  list of: closed, members, open, organization, pinned, public, starred or unpinned'
paths./organizations/{idOrg}.get.parameters[14].in: query
paths./organizations/{idOrg}.get.parameters[14].name: boards
paths./organizations/{idOrg}.get.parameters[14].required: false
paths./organizations/{idOrg}.get.parameters[14].type: string
paths./organizations/{idOrg}.get.parameters[15].default: all
paths./organizations/{idOrg}.get.parameters[15].description: 'all or a comma-separated
  list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization,
  invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
  shortUrl, starred, subscribed or url'
paths./organizations/{idOrg}.get.parameters[15].in: query
paths./organizations/{idOrg}.get.parameters[15].name: board_fields
paths./organizations/{idOrg}.get.parameters[15].required: false
paths./organizations/{idOrg}.get.parameters[15].type: string
paths./organizations/{idOrg}.get.parameters[16].description: 'all or a comma-separated
  list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard,
  addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem,
  copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization,
  deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation,
  disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
  makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard,
  moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,
  removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
  updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,
  updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed,
  updateList:name, updateMember or updateOrganization'
paths./organizations/{idOrg}.get.parameters[16].in: query
paths./organizations/{idOrg}.get.parameters[16].name: board_actions
paths./organizations/{idOrg}.get.parameters[16].required: false
paths./organizations/{idOrg}.get.parameters[16].type: string
paths./organizations/{idOrg}.get.parameters[17].description: ' true or false'
paths./organizations/{idOrg}.get.parameters[17].in: query
paths./organizations/{idOrg}.get.parameters[17].name: board_actions_entities
paths./organizations/{idOrg}.get.parameters[17].required: false
paths./organizations/{idOrg}.get.parameters[17].type: string
paths./organizations/{idOrg}.get.parameters[18].description: ' true or false'
paths./organizations/{idOrg}.get.parameters[18].in: query
paths./organizations/{idOrg}.get.parameters[18].name: board_actions_display
paths./organizations/{idOrg}.get.parameters[18].required: false
paths./organizations/{idOrg}.get.parameters[18].type: string
paths./organizations/{idOrg}.get.parameters[19].default: list
paths./organizations/{idOrg}.get.parameters[19].description: 'One of: count, list
  or minimal'
paths./organizations/{idOrg}.get.parameters[19].in: query
paths./organizations/{idOrg}.get.parameters[19].name: board_actions_format
paths./organizations/{idOrg}.get.parameters[19].required: false
paths./organizations/{idOrg}.get.parameters[19].type: string
paths./organizations/{idOrg}.get.parameters[20].description: A date, null or lastView
paths./organizations/{idOrg}.get.parameters[20].in: query
paths./organizations/{idOrg}.get.parameters[20].name: board_actions_since
paths./organizations/{idOrg}.get.parameters[20].required: false
paths./organizations/{idOrg}.get.parameters[20].type: string
paths./organizations/{idOrg}.get.parameters[21].default: "50"
paths./organizations/{idOrg}.get.parameters[21].description: a number from 0 to 1000
paths./organizations/{idOrg}.get.parameters[21].in: query
paths./organizations/{idOrg}.get.parameters[21].name: board_actions_limit
paths./organizations/{idOrg}.get.parameters[21].required: false
paths./organizations/{idOrg}.get.parameters[21].type: string
paths./organizations/{idOrg}.get.parameters[22].default: all
paths./organizations/{idOrg}.get.parameters[22].description: 'all or a comma-separated
  list of: data, date, idMemberCreator or type'
paths./organizations/{idOrg}.get.parameters[22].in: query
paths./organizations/{idOrg}.get.parameters[22].name: board_action_fields
paths./organizations/{idOrg}.get.parameters[22].required: false
paths./organizations/{idOrg}.get.parameters[22].type: string
paths./organizations/{idOrg}.get.parameters[23].default: none
paths./organizations/{idOrg}.get.parameters[23].description: 'One of: all, closed,
  none or open'
paths./organizations/{idOrg}.get.parameters[23].in: query
paths./organizations/{idOrg}.get.parameters[23].name: board_lists
paths./organizations/{idOrg}.get.parameters[23].required: false
paths./organizations/{idOrg}.get.parameters[23].type: string
paths./organizations/{idOrg}.get.parameters[24].description: ' true or false'
paths./organizations/{idOrg}.get.parameters[24].in: query
paths./organizations/{idOrg}.get.parameters[24].name: paid_account
paths./organizations/{idOrg}.get.parameters[24].required: false
paths./organizations/{idOrg}.get.parameters[24].type: string
paths./organizations/{idOrg}.get.parameters[25].default: name, displayName, desc,
  descData, url, website, logoHash, products and powerUps
paths./organizations/{idOrg}.get.parameters[25].description: 'all or a comma-separated
  list of: billableMemberCount, desc, descData, displayName, idBoards, invitations,
  invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products,
  url or website'
paths./organizations/{idOrg}.get.parameters[25].in: query
paths./organizations/{idOrg}.get.parameters[25].name: fields
paths./organizations/{idOrg}.get.parameters[25].required: false
paths./organizations/{idOrg}.get.parameters[25].type: string
paths./organizations/{idOrg}.get.parameters[26].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./organizations/{idOrg}.get.parameters[26].in: query
paths./organizations/{idOrg}.get.parameters[26].name: key
paths./organizations/{idOrg}.get.parameters[26].required: true
paths./organizations/{idOrg}.get.parameters[26].type: string
paths./organizations/{idOrg}.get.parameters[27].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}.get.parameters[27].in: query
paths./organizations/{idOrg}.get.parameters[27].name: token
paths./organizations/{idOrg}.get.parameters[27].required: true
paths./organizations/{idOrg}.get.parameters[27].type: string
paths./organizations/{idOrg}.get.responses.200.description: Success
paths./organizations/{idOrg}.get.responses.400.description: Server rejection
paths./organizations/{idOrg}.get.security.length: 2
paths./organizations/{idOrg}.get.security[0].api_key.length: 0
paths./organizations/{idOrg}.get.security[1].api_token.length: 0
paths./organizations/{idOrg}.get.summary: getOrganizationsByIdOrg()
paths./organizations/{idOrg}.get.tags.length: 1
paths./organizations/{idOrg}.get.tags[0]: organization
paths./organizations/{idOrg}.put.operationId: updateOrganizationsByIdOrg
paths./organizations/{idOrg}.put.parameters.length: 4
paths./organizations/{idOrg}.put.parameters[0].description: idOrg or name
paths./organizations/{idOrg}.put.parameters[0].in: path
paths./organizations/{idOrg}.put.parameters[0].name: idOrg
paths./organizations/{idOrg}.put.parameters[0].required: true
paths./organizations/{idOrg}.put.parameters[0].type: string
paths./organizations/{idOrg}.put.parameters[1].description: Attributes of "Organizations"
  to be updated.
paths./organizations/{idOrg}.put.parameters[1].in: body
paths./organizations/{idOrg}.put.parameters[1].name: body
paths./organizations/{idOrg}.put.parameters[1].required: true
paths./organizations/{idOrg}.put.parameters[1].schema.$ref: '#/definitions/organizations'
paths./organizations/{idOrg}.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./organizations/{idOrg}.put.parameters[2].in: query
paths./organizations/{idOrg}.put.parameters[2].name: key
paths./organizations/{idOrg}.put.parameters[2].required: true
paths./organizations/{idOrg}.put.parameters[2].type: string
paths./organizations/{idOrg}.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}.put.parameters[3].in: query
paths./organizations/{idOrg}.put.parameters[3].name: token
paths./organizations/{idOrg}.put.parameters[3].required: true
paths./organizations/{idOrg}.put.parameters[3].type: string
paths./organizations/{idOrg}.put.responses.200.description: Success
paths./organizations/{idOrg}.put.responses.400.description: Server rejection
paths./organizations/{idOrg}.put.security.length: 2
paths./organizations/{idOrg}.put.security[0].api_key.length: 0
paths./organizations/{idOrg}.put.security[1].api_token.length: 0
paths./organizations/{idOrg}.put.summary: updateOrganizationsByIdOrg()
paths./organizations/{idOrg}.put.tags.length: 1
paths./organizations/{idOrg}.put.tags[0]: organization
paths./organizations/{idOrg}/{field}.get.operationId: getOrganizationsByIdOrgByField
paths./organizations/{idOrg}/{field}.get.parameters.length: 4
paths./organizations/{idOrg}/{field}.get.parameters[0].description: idOrg or name
paths./organizations/{idOrg}/{field}.get.parameters[0].in: path
paths./organizations/{idOrg}/{field}.get.parameters[0].name: idOrg
paths./organizations/{idOrg}/{field}.get.parameters[0].required: true
paths./organizations/{idOrg}/{field}.get.parameters[0].type: string
paths./organizations/{idOrg}/{field}.get.parameters[1].description: field
paths./organizations/{idOrg}/{field}.get.parameters[1].in: path
paths./organizations/{idOrg}/{field}.get.parameters[1].name: field
paths./organizations/{idOrg}/{field}.get.parameters[1].required: true
paths./organizations/{idOrg}/{field}.get.parameters[1].type: string
paths./organizations/{idOrg}/{field}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./organizations/{idOrg}/{field}.get.parameters[2].in: query
paths./organizations/{idOrg}/{field}.get.parameters[2].name: key
paths./organizations/{idOrg}/{field}.get.parameters[2].required: true
paths./organizations/{idOrg}/{field}.get.parameters[2].type: string
paths./organizations/{idOrg}/{field}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/{field}.get.parameters[3].in: query
paths./organizations/{idOrg}/{field}.get.parameters[3].name: token
paths./organizations/{idOrg}/{field}.get.parameters[3].required: true
paths./organizations/{idOrg}/{field}.get.parameters[3].type: string
paths./organizations/{idOrg}/{field}.get.responses.200.description: Success
paths./organizations/{idOrg}/{field}.get.responses.400.description: Server rejection
paths./organizations/{idOrg}/{field}.get.summary: getOrganizationsByIdOrgByField()
paths./organizations/{idOrg}/{field}.get.tags.length: 1
paths./organizations/{idOrg}/{field}.get.tags[0]: organization
paths./organizations/{idOrg}/actions.get.operationId: getOrganizationsActionsByIdOrg
paths./organizations/{idOrg}/actions.get.parameters.length: 17
paths./organizations/{idOrg}/actions.get.parameters[0].description: idOrg or name
paths./organizations/{idOrg}/actions.get.parameters[0].in: path
paths./organizations/{idOrg}/actions.get.parameters[0].name: idOrg
paths./organizations/{idOrg}/actions.get.parameters[0].required: true
paths./organizations/{idOrg}/actions.get.parameters[0].type: string
paths./organizations/{idOrg}/actions.get.parameters[1].description: ' true or false'
paths./organizations/{idOrg}/actions.get.parameters[1].in: query
paths./organizations/{idOrg}/actions.get.parameters[1].name: entities
paths./organizations/{idOrg}/actions.get.parameters[1].required: false
paths./organizations/{idOrg}/actions.get.parameters[1].type: string
paths./organizations/{idOrg}/actions.get.parameters[2].description: ' true or false'
paths./organizations/{idOrg}/actions.get.parameters[2].in: query
paths./organizations/{idOrg}/actions.get.parameters[2].name: display
paths./organizations/{idOrg}/actions.get.parameters[2].required: false
paths./organizations/{idOrg}/actions.get.parameters[2].type: string
paths./organizations/{idOrg}/actions.get.parameters[3].default: all
paths./organizations/{idOrg}/actions.get.parameters[3].description: 'all or a comma-separated
  list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard,
  addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem,
  copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization,
  deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation,
  disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
  makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard,
  moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,
  removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
  updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,
  updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed,
  updateList:name, updateMember or updateOrganization'
paths./organizations/{idOrg}/actions.get.parameters[3].in: query
paths./organizations/{idOrg}/actions.get.parameters[3].name: filter
paths./organizations/{idOrg}/actions.get.parameters[3].required: false
paths./organizations/{idOrg}/actions.get.parameters[3].type: string
paths./organizations/{idOrg}/actions.get.parameters[4].default: all
paths./organizations/{idOrg}/actions.get.parameters[4].description: 'all or a comma-separated
  list of: data, date, idMemberCreator or type'
paths./organizations/{idOrg}/actions.get.parameters[4].in: query
paths./organizations/{idOrg}/actions.get.parameters[4].name: fields
paths./organizations/{idOrg}/actions.get.parameters[4].required: false
paths./organizations/{idOrg}/actions.get.parameters[4].type: string
paths./organizations/{idOrg}/actions.get.parameters[5].default: "50"
paths./organizations/{idOrg}/actions.get.parameters[5].description: a number from
  0 to 1000
paths./organizations/{idOrg}/actions.get.parameters[5].in: query
paths./organizations/{idOrg}/actions.get.parameters[5].name: limit
paths./organizations/{idOrg}/actions.get.parameters[5].required: false
paths./organizations/{idOrg}/actions.get.parameters[5].type: string
paths./organizations/{idOrg}/actions.get.parameters[6].default: list
paths./organizations/{idOrg}/actions.get.parameters[6].description: 'One of: count,
  list or minimal'
paths./organizations/{idOrg}/actions.get.parameters[6].in: query
paths./organizations/{idOrg}/actions.get.parameters[6].name: format
paths./organizations/{idOrg}/actions.get.parameters[6].required: false
paths./organizations/{idOrg}/actions.get.parameters[6].type: string
paths./organizations/{idOrg}/actions.get.parameters[7].description: A date, null or
  lastView
paths./organizations/{idOrg}/actions.get.parameters[7].in: query
paths./organizations/{idOrg}/actions.get.parameters[7].name: since
paths./organizations/{idOrg}/actions.get.parameters[7].required: false
paths./organizations/{idOrg}/actions.get.parameters[7].type: string
paths./organizations/{idOrg}/actions.get.parameters[8].description: A date, or null
paths./organizations/{idOrg}/actions.get.parameters[8].in: query
paths./organizations/{idOrg}/actions.get.parameters[8].name: before
paths./organizations/{idOrg}/actions.get.parameters[8].required: false
paths./organizations/{idOrg}/actions.get.parameters[8].type: string
paths./organizations/{idOrg}/actions.get.parameters[9].default: "0"
paths./organizations/{idOrg}/actions.get.parameters[9].description: Page * limit must
  be less than 1000
paths./organizations/{idOrg}/actions.get.parameters[9].in: query
paths./organizations/{idOrg}/actions.get.parameters[9].name: page
paths./organizations/{idOrg}/actions.get.parameters[9].required: false
paths./organizations/{idOrg}/actions.get.parameters[9].type: string
paths./organizations/{idOrg}/actions.get.parameters[10].description: Only return actions
  related to these model ids
paths./organizations/{idOrg}/actions.get.parameters[10].in: query
paths./organizations/{idOrg}/actions.get.parameters[10].name: idModels
paths./organizations/{idOrg}/actions.get.parameters[10].required: false
paths./organizations/{idOrg}/actions.get.parameters[10].type: string
paths./organizations/{idOrg}/actions.get.parameters[11].description: ' true or false'
paths./organizations/{idOrg}/actions.get.parameters[11].in: query
paths./organizations/{idOrg}/actions.get.parameters[11].name: member
paths./organizations/{idOrg}/actions.get.parameters[11].required: false
paths./organizations/{idOrg}/actions.get.parameters[11].type: string
paths./organizations/{idOrg}/actions.get.parameters[12].default: avatarHash, fullName,
  initials and username
paths./organizations/{idOrg}/actions.get.parameters[12].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./organizations/{idOrg}/actions.get.parameters[12].in: query
paths./organizations/{idOrg}/actions.get.parameters[12].name: member_fields
paths./organizations/{idOrg}/actions.get.parameters[12].required: false
paths./organizations/{idOrg}/actions.get.parameters[12].type: string
paths./organizations/{idOrg}/actions.get.parameters[13].description: ' true or false'
paths./organizations/{idOrg}/actions.get.parameters[13].in: query
paths./organizations/{idOrg}/actions.get.parameters[13].name: memberCreator
paths./organizations/{idOrg}/actions.get.parameters[13].required: false
paths./organizations/{idOrg}/actions.get.parameters[13].type: string
paths./organizations/{idOrg}/actions.get.parameters[14].default: avatarHash, fullName,
  initials and username
paths./organizations/{idOrg}/actions.get.parameters[14].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./organizations/{idOrg}/actions.get.parameters[14].in: query
paths./organizations/{idOrg}/actions.get.parameters[14].name: memberCreator_fields
paths./organizations/{idOrg}/actions.get.parameters[14].required: false
paths./organizations/{idOrg}/actions.get.parameters[14].type: string
paths./organizations/{idOrg}/actions.get.parameters[15].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./organizations/{idOrg}/actions.get.parameters[15].in: query
paths./organizations/{idOrg}/actions.get.parameters[15].name: key
paths./organizations/{idOrg}/actions.get.parameters[15].required: true
paths./organizations/{idOrg}/actions.get.parameters[15].type: string
paths./organizations/{idOrg}/actions.get.parameters[16].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/actions.get.parameters[16].in: query
paths./organizations/{idOrg}/actions.get.parameters[16].name: token
paths./organizations/{idOrg}/actions.get.parameters[16].required: true
paths./organizations/{idOrg}/actions.get.parameters[16].type: string
paths./organizations/{idOrg}/actions.get.responses.200.description: Success
paths./organizations/{idOrg}/actions.get.responses.400.description: Server rejection
paths./organizations/{idOrg}/actions.get.security.length: 2
paths./organizations/{idOrg}/actions.get.security[0].api_key.length: 0
paths./organizations/{idOrg}/actions.get.security[1].api_token.length: 0
paths./organizations/{idOrg}/actions.get.summary: getOrganizationsActionsByIdOrg()
paths./organizations/{idOrg}/actions.get.tags.length: 1
paths./organizations/{idOrg}/actions.get.tags[0]: organization
paths./organizations/{idOrg}/boards.get.operationId: getOrganizationsBoardsByIdOrg
paths./organizations/{idOrg}/boards.get.parameters.length: 15
paths./organizations/{idOrg}/boards.get.parameters[0].description: idOrg or name
paths./organizations/{idOrg}/boards.get.parameters[0].in: path
paths./organizations/{idOrg}/boards.get.parameters[0].name: idOrg
paths./organizations/{idOrg}/boards.get.parameters[0].required: true
paths./organizations/{idOrg}/boards.get.parameters[0].type: string
paths./organizations/{idOrg}/boards.get.parameters[1].default: all
paths./organizations/{idOrg}/boards.get.parameters[1].description: 'all or a comma-separated
  list of: closed, members, open, organization, pinned, public, starred or unpinned'
paths./organizations/{idOrg}/boards.get.parameters[1].in: query
paths./organizations/{idOrg}/boards.get.parameters[1].name: filter
paths./organizations/{idOrg}/boards.get.parameters[1].required: false
paths./organizations/{idOrg}/boards.get.parameters[1].type: string
paths./organizations/{idOrg}/boards.get.parameters[2].default: all
paths./organizations/{idOrg}/boards.get.parameters[2].description: 'all or a comma-separated
  list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization,
  invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
  shortUrl, starred, subscribed or url'
paths./organizations/{idOrg}/boards.get.parameters[2].in: query
paths./organizations/{idOrg}/boards.get.parameters[2].name: fields
paths./organizations/{idOrg}/boards.get.parameters[2].required: false
paths./organizations/{idOrg}/boards.get.parameters[2].type: string
paths./organizations/{idOrg}/boards.get.parameters[3].description: 'all or a comma-separated
  list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard,
  addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem,
  copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization,
  deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation,
  disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
  makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard,
  moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,
  removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
  updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,
  updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed,
  updateList:name, updateMember or updateOrganization'
paths./organizations/{idOrg}/boards.get.parameters[3].in: query
paths./organizations/{idOrg}/boards.get.parameters[3].name: actions
paths./organizations/{idOrg}/boards.get.parameters[3].required: false
paths./organizations/{idOrg}/boards.get.parameters[3].type: string
paths./organizations/{idOrg}/boards.get.parameters[4].description: ' true or false'
paths./organizations/{idOrg}/boards.get.parameters[4].in: query
paths./organizations/{idOrg}/boards.get.parameters[4].name: actions_entities
paths./organizations/{idOrg}/boards.get.parameters[4].required: false
paths./organizations/{idOrg}/boards.get.parameters[4].type: string
paths./organizations/{idOrg}/boards.get.parameters[5].default: "50"
paths./organizations/{idOrg}/boards.get.parameters[5].description: a number from 0
  to 1000
paths./organizations/{idOrg}/boards.get.parameters[5].in: query
paths./organizations/{idOrg}/boards.get.parameters[5].name: actions_limit
paths./organizations/{idOrg}/boards.get.parameters[5].required: false
paths./organizations/{idOrg}/boards.get.parameters[5].type: string
paths./organizations/{idOrg}/boards.get.parameters[6].default: list
paths./organizations/{idOrg}/boards.get.parameters[6].description: 'One of: count,
  list or minimal'
paths./organizations/{idOrg}/boards.get.parameters[6].in: query
paths./organizations/{idOrg}/boards.get.parameters[6].name: actions_format
paths./organizations/{idOrg}/boards.get.parameters[6].required: false
paths./organizations/{idOrg}/boards.get.parameters[6].type: string
paths./organizations/{idOrg}/boards.get.parameters[7].description: A date, null or
  lastView
paths./organizations/{idOrg}/boards.get.parameters[7].in: query
paths./organizations/{idOrg}/boards.get.parameters[7].name: actions_since
paths./organizations/{idOrg}/boards.get.parameters[7].required: false
paths./organizations/{idOrg}/boards.get.parameters[7].type: string
paths./organizations/{idOrg}/boards.get.parameters[8].default: all
paths./organizations/{idOrg}/boards.get.parameters[8].description: 'all or a comma-separated
  list of: data, date, idMemberCreator or type'
paths./organizations/{idOrg}/boards.get.parameters[8].in: query
paths./organizations/{idOrg}/boards.get.parameters[8].name: action_fields
paths./organizations/{idOrg}/boards.get.parameters[8].required: false
paths./organizations/{idOrg}/boards.get.parameters[8].type: string
paths./organizations/{idOrg}/boards.get.parameters[9].default: none
paths./organizations/{idOrg}/boards.get.parameters[9].description: 'all or a comma-separated
  list of: active, admin, deactivated, me or normal'
paths./organizations/{idOrg}/boards.get.parameters[9].in: query
paths./organizations/{idOrg}/boards.get.parameters[9].name: memberships
paths./organizations/{idOrg}/boards.get.parameters[9].required: false
paths./organizations/{idOrg}/boards.get.parameters[9].type: string
paths./organizations/{idOrg}/boards.get.parameters[10].description: ' true or false'
paths./organizations/{idOrg}/boards.get.parameters[10].in: query
paths./organizations/{idOrg}/boards.get.parameters[10].name: organization
paths./organizations/{idOrg}/boards.get.parameters[10].required: false
paths./organizations/{idOrg}/boards.get.parameters[10].type: string
paths./organizations/{idOrg}/boards.get.parameters[11].default: name and displayName
paths./organizations/{idOrg}/boards.get.parameters[11].description: 'all or a comma-separated
  list of: billableMemberCount, desc, descData, displayName, idBoards, invitations,
  invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products,
  url or website'
paths./organizations/{idOrg}/boards.get.parameters[11].in: query
paths./organizations/{idOrg}/boards.get.parameters[11].name: organization_fields
paths./organizations/{idOrg}/boards.get.parameters[11].required: false
paths./organizations/{idOrg}/boards.get.parameters[11].type: string
paths./organizations/{idOrg}/boards.get.parameters[12].default: none
paths./organizations/{idOrg}/boards.get.parameters[12].description: 'One of: all,
  closed, none or open'
paths./organizations/{idOrg}/boards.get.parameters[12].in: query
paths./organizations/{idOrg}/boards.get.parameters[12].name: lists
paths./organizations/{idOrg}/boards.get.parameters[12].required: false
paths./organizations/{idOrg}/boards.get.parameters[12].type: string
paths./organizations/{idOrg}/boards.get.parameters[13].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./organizations/{idOrg}/boards.get.parameters[13].in: query
paths./organizations/{idOrg}/boards.get.parameters[13].name: key
paths./organizations/{idOrg}/boards.get.parameters[13].required: true
paths./organizations/{idOrg}/boards.get.parameters[13].type: string
paths./organizations/{idOrg}/boards.get.parameters[14].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/boards.get.parameters[14].in: query
paths./organizations/{idOrg}/boards.get.parameters[14].name: token
paths./organizations/{idOrg}/boards.get.parameters[14].required: true
paths./organizations/{idOrg}/boards.get.parameters[14].type: string
paths./organizations/{idOrg}/boards.get.responses.200.description: Success
paths./organizations/{idOrg}/boards.get.responses.400.description: Server rejection
paths./organizations/{idOrg}/boards.get.security.length: 2
paths./organizations/{idOrg}/boards.get.security[0].api_key.length: 0
paths./organizations/{idOrg}/boards.get.security[1].api_token.length: 0
paths./organizations/{idOrg}/boards.get.summary: getOrganizationsBoardsByIdOrg()
paths./organizations/{idOrg}/boards.get.tags.length: 1
paths./organizations/{idOrg}/boards.get.tags[0]: organization
paths./organizations/{idOrg}/boards/{filter}.get.operationId: getOrganizationsBoardsByIdOrgByFilter
paths./organizations/{idOrg}/boards/{filter}.get.parameters.length: 4
paths./organizations/{idOrg}/boards/{filter}.get.parameters[0].description: idOrg
  or name
paths./organizations/{idOrg}/boards/{filter}.get.parameters[0].in: path
paths./organizations/{idOrg}/boards/{filter}.get.parameters[0].name: idOrg
paths./organizations/{idOrg}/boards/{filter}.get.parameters[0].required: true
paths./organizations/{idOrg}/boards/{filter}.get.parameters[0].type: string
paths./organizations/{idOrg}/boards/{filter}.get.parameters[1].description: filter
paths./organizations/{idOrg}/boards/{filter}.get.parameters[1].in: path
paths./organizations/{idOrg}/boards/{filter}.get.parameters[1].name: filter
paths./organizations/{idOrg}/boards/{filter}.get.parameters[1].required: true
paths./organizations/{idOrg}/boards/{filter}.get.parameters[1].type: string
paths./organizations/{idOrg}/boards/{filter}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./organizations/{idOrg}/boards/{filter}.get.parameters[2].in: query
paths./organizations/{idOrg}/boards/{filter}.get.parameters[2].name: key
paths./organizations/{idOrg}/boards/{filter}.get.parameters[2].required: true
paths./organizations/{idOrg}/boards/{filter}.get.parameters[2].type: string
paths./organizations/{idOrg}/boards/{filter}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/boards/{filter}.get.parameters[3].in: query
paths./organizations/{idOrg}/boards/{filter}.get.parameters[3].name: token
paths./organizations/{idOrg}/boards/{filter}.get.parameters[3].required: true
paths./organizations/{idOrg}/boards/{filter}.get.parameters[3].type: string
paths./organizations/{idOrg}/boards/{filter}.get.responses.200.description: Success
paths./organizations/{idOrg}/boards/{filter}.get.responses.400.description: Server
  rejection
paths./organizations/{idOrg}/boards/{filter}.get.summary: getOrganizationsBoardsByIdOrgByFilter()
paths./organizations/{idOrg}/boards/{filter}.get.tags.length: 1
paths./organizations/{idOrg}/boards/{filter}.get.tags[0]: organization
paths./organizations/{idOrg}/deltas.get.operationId: getOrganizationsDeltasByIdOrg
paths./organizations/{idOrg}/deltas.get.parameters.length: 5
paths./organizations/{idOrg}/deltas.get.parameters[0].description: idOrg or name
paths./organizations/{idOrg}/deltas.get.parameters[0].in: path
paths./organizations/{idOrg}/deltas.get.parameters[0].name: idOrg
paths./organizations/{idOrg}/deltas.get.parameters[0].required: true
paths./organizations/{idOrg}/deltas.get.parameters[0].type: string
paths./organizations/{idOrg}/deltas.get.parameters[1].description: A valid tag for
  subscribing
paths./organizations/{idOrg}/deltas.get.parameters[1].in: query
paths./organizations/{idOrg}/deltas.get.parameters[1].name: tags
paths./organizations/{idOrg}/deltas.get.parameters[1].required: true
paths./organizations/{idOrg}/deltas.get.parameters[1].type: string
paths./organizations/{idOrg}/deltas.get.parameters[2].description: a number from -1
  to Infinity
paths./organizations/{idOrg}/deltas.get.parameters[2].in: query
paths./organizations/{idOrg}/deltas.get.parameters[2].name: ixLastUpdate
paths./organizations/{idOrg}/deltas.get.parameters[2].required: true
paths./organizations/{idOrg}/deltas.get.parameters[2].type: string
paths./organizations/{idOrg}/deltas.get.parameters[3].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./organizations/{idOrg}/deltas.get.parameters[3].in: query
paths./organizations/{idOrg}/deltas.get.parameters[3].name: key
paths./organizations/{idOrg}/deltas.get.parameters[3].required: true
paths./organizations/{idOrg}/deltas.get.parameters[3].type: string
paths./organizations/{idOrg}/deltas.get.parameters[4].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/deltas.get.parameters[4].in: query
paths./organizations/{idOrg}/deltas.get.parameters[4].name: token
paths./organizations/{idOrg}/deltas.get.parameters[4].required: true
paths./organizations/{idOrg}/deltas.get.parameters[4].type: string
paths./organizations/{idOrg}/deltas.get.responses.200.description: Success
paths./organizations/{idOrg}/deltas.get.responses.400.description: Server rejection
paths./organizations/{idOrg}/deltas.get.security.length: 2
paths./organizations/{idOrg}/deltas.get.security[0].api_key.length: 0
paths./organizations/{idOrg}/deltas.get.security[1].api_token.length: 0
paths./organizations/{idOrg}/deltas.get.summary: getOrganizationsDeltasByIdOrg()
paths./organizations/{idOrg}/deltas.get.tags.length: 1
paths./organizations/{idOrg}/deltas.get.tags[0]: organization
paths./organizations/{idOrg}/desc.put.operationId: updateOrganizationsDescByIdOrg
paths./organizations/{idOrg}/desc.put.parameters.length: 4
paths./organizations/{idOrg}/desc.put.parameters[0].description: idOrg or name
paths./organizations/{idOrg}/desc.put.parameters[0].in: path
paths./organizations/{idOrg}/desc.put.parameters[0].name: idOrg
paths./organizations/{idOrg}/desc.put.parameters[0].required: true
paths./organizations/{idOrg}/desc.put.parameters[0].type: string
paths./organizations/{idOrg}/desc.put.parameters[1].description: Attributes of "Organizations
  Desc" to be updated.
paths./organizations/{idOrg}/desc.put.parameters[1].in: body
paths./organizations/{idOrg}/desc.put.parameters[1].name: body
paths./organizations/{idOrg}/desc.put.parameters[1].required: true
paths./organizations/{idOrg}/desc.put.parameters[1].schema.$ref: '#/definitions/organizations_desc'
paths./organizations/{idOrg}/desc.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./organizations/{idOrg}/desc.put.parameters[2].in: query
paths./organizations/{idOrg}/desc.put.parameters[2].name: key
paths./organizations/{idOrg}/desc.put.parameters[2].required: true
paths./organizations/{idOrg}/desc.put.parameters[2].type: string
paths./organizations/{idOrg}/desc.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/desc.put.parameters[3].in: query
paths./organizations/{idOrg}/desc.put.parameters[3].name: token
paths./organizations/{idOrg}/desc.put.parameters[3].required: true
paths./organizations/{idOrg}/desc.put.parameters[3].type: string
paths./organizations/{idOrg}/desc.put.responses.200.description: Success
paths./organizations/{idOrg}/desc.put.responses.400.description: Server rejection
paths./organizations/{idOrg}/desc.put.security.length: 2
paths./organizations/{idOrg}/desc.put.security[0].api_key.length: 0
paths./organizations/{idOrg}/desc.put.security[1].api_token.length: 0
paths./organizations/{idOrg}/desc.put.summary: updateOrganizationsDescByIdOrg()
paths./organizations/{idOrg}/desc.put.tags.length: 1
paths./organizations/{idOrg}/desc.put.tags[0]: organization
paths./organizations/{idOrg}/displayName.put.operationId: updateOrganizationsDisplayNameByIdOrg
paths./organizations/{idOrg}/displayName.put.parameters.length: 4
paths./organizations/{idOrg}/displayName.put.parameters[0].description: idOrg or name
paths./organizations/{idOrg}/displayName.put.parameters[0].in: path
paths./organizations/{idOrg}/displayName.put.parameters[0].name: idOrg
paths./organizations/{idOrg}/displayName.put.parameters[0].required: true
paths./organizations/{idOrg}/displayName.put.parameters[0].type: string
paths./organizations/{idOrg}/displayName.put.parameters[1].description: Attributes
  of "Organizations Display Name" to be updated.
paths./organizations/{idOrg}/displayName.put.parameters[1].in: body
paths./organizations/{idOrg}/displayName.put.parameters[1].name: body
paths./organizations/{idOrg}/displayName.put.parameters[1].required: true
paths./organizations/{idOrg}/displayName.put.parameters[1].schema.$ref: '#/definitions/organizations_displayName'
paths./organizations/{idOrg}/displayName.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./organizations/{idOrg}/displayName.put.parameters[2].in: query
paths./organizations/{idOrg}/displayName.put.parameters[2].name: key
paths./organizations/{idOrg}/displayName.put.parameters[2].required: true
paths./organizations/{idOrg}/displayName.put.parameters[2].type: string
paths./organizations/{idOrg}/displayName.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/displayName.put.parameters[3].in: query
paths./organizations/{idOrg}/displayName.put.parameters[3].name: token
paths./organizations/{idOrg}/displayName.put.parameters[3].required: true
paths./organizations/{idOrg}/displayName.put.parameters[3].type: string
paths./organizations/{idOrg}/displayName.put.responses.200.description: Success
paths./organizations/{idOrg}/displayName.put.responses.400.description: Server rejection
paths./organizations/{idOrg}/displayName.put.security.length: 2
paths./organizations/{idOrg}/displayName.put.security[0].api_key.length: 0
paths./organizations/{idOrg}/displayName.put.security[1].api_token.length: 0
paths./organizations/{idOrg}/displayName.put.summary: updateOrganizationsDisplayNameByIdOrg()
paths./organizations/{idOrg}/displayName.put.tags.length: 1
paths./organizations/{idOrg}/displayName.put.tags[0]: organization
paths./organizations/{idOrg}/logo.delete.operationId: deleteOrganizationsLogoByIdOrg
paths./organizations/{idOrg}/logo.delete.parameters.length: 3
paths./organizations/{idOrg}/logo.delete.parameters[0].description: idOrg or name
paths./organizations/{idOrg}/logo.delete.parameters[0].in: path
paths./organizations/{idOrg}/logo.delete.parameters[0].name: idOrg
paths./organizations/{idOrg}/logo.delete.parameters[0].required: true
paths./organizations/{idOrg}/logo.delete.parameters[0].type: string
paths./organizations/{idOrg}/logo.delete.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./organizations/{idOrg}/logo.delete.parameters[1].in: query
paths./organizations/{idOrg}/logo.delete.parameters[1].name: key
paths./organizations/{idOrg}/logo.delete.parameters[1].required: true
paths./organizations/{idOrg}/logo.delete.parameters[1].type: string
paths./organizations/{idOrg}/logo.delete.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/logo.delete.parameters[2].in: query
paths./organizations/{idOrg}/logo.delete.parameters[2].name: token
paths./organizations/{idOrg}/logo.delete.parameters[2].required: true
paths./organizations/{idOrg}/logo.delete.parameters[2].type: string
paths./organizations/{idOrg}/logo.delete.responses.200.description: Success
paths./organizations/{idOrg}/logo.delete.responses.400.description: Server rejection
paths./organizations/{idOrg}/logo.delete.security.length: 2
paths./organizations/{idOrg}/logo.delete.security[0].api_key.length: 0
paths./organizations/{idOrg}/logo.delete.security[1].api_token.length: 0
paths./organizations/{idOrg}/logo.delete.summary: deleteOrganizationsLogoByIdOrg()
paths./organizations/{idOrg}/logo.delete.tags.length: 1
paths./organizations/{idOrg}/logo.delete.tags[0]: organization
paths./organizations/{idOrg}/logo.post.operationId: addOrganizationsLogoByIdOrg
paths./organizations/{idOrg}/logo.post.parameters.length: 4
paths./organizations/{idOrg}/logo.post.parameters[0].description: idOrg or name
paths./organizations/{idOrg}/logo.post.parameters[0].in: path
paths./organizations/{idOrg}/logo.post.parameters[0].name: idOrg
paths./organizations/{idOrg}/logo.post.parameters[0].required: true
paths./organizations/{idOrg}/logo.post.parameters[0].type: string
paths./organizations/{idOrg}/logo.post.parameters[1].description: Attributes of "Organizations
  Logo" to be added.
paths./organizations/{idOrg}/logo.post.parameters[1].in: body
paths./organizations/{idOrg}/logo.post.parameters[1].name: body
paths./organizations/{idOrg}/logo.post.parameters[1].required: true
paths./organizations/{idOrg}/logo.post.parameters[1].schema.$ref: '#/definitions/organizations_logo'
paths./organizations/{idOrg}/logo.post.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./organizations/{idOrg}/logo.post.parameters[2].in: query
paths./organizations/{idOrg}/logo.post.parameters[2].name: key
paths./organizations/{idOrg}/logo.post.parameters[2].required: true
paths./organizations/{idOrg}/logo.post.parameters[2].type: string
paths./organizations/{idOrg}/logo.post.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/logo.post.parameters[3].in: query
paths./organizations/{idOrg}/logo.post.parameters[3].name: token
paths./organizations/{idOrg}/logo.post.parameters[3].required: true
paths./organizations/{idOrg}/logo.post.parameters[3].type: string
paths./organizations/{idOrg}/logo.post.responses.200.description: Success
paths./organizations/{idOrg}/logo.post.responses.400.description: Server rejection
paths./organizations/{idOrg}/logo.post.security.length: 2
paths./organizations/{idOrg}/logo.post.security[0].api_key.length: 0
paths./organizations/{idOrg}/logo.post.security[1].api_token.length: 0
paths./organizations/{idOrg}/logo.post.summary: addOrganizationsLogoByIdOrg()
paths./organizations/{idOrg}/logo.post.tags.length: 1
paths./organizations/{idOrg}/logo.post.tags[0]: organization
paths./organizations/{idOrg}/members.get.operationId: getOrganizationsMembersByIdOrg
paths./organizations/{idOrg}/members.get.parameters.length: 6
paths./organizations/{idOrg}/members.get.parameters[0].description: idOrg or name
paths./organizations/{idOrg}/members.get.parameters[0].in: path
paths./organizations/{idOrg}/members.get.parameters[0].name: idOrg
paths./organizations/{idOrg}/members.get.parameters[0].required: true
paths./organizations/{idOrg}/members.get.parameters[0].type: string
paths./organizations/{idOrg}/members.get.parameters[1].default: all
paths./organizations/{idOrg}/members.get.parameters[1].description: 'One of: admins,
  all, none, normal or owners'
paths./organizations/{idOrg}/members.get.parameters[1].in: query
paths./organizations/{idOrg}/members.get.parameters[1].name: filter
paths./organizations/{idOrg}/members.get.parameters[1].required: false
paths./organizations/{idOrg}/members.get.parameters[1].type: string
paths./organizations/{idOrg}/members.get.parameters[2].default: fullName and username
paths./organizations/{idOrg}/members.get.parameters[2].description: 'all or a comma-separated
  list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials,
  memberType, products, status, url or username'
paths./organizations/{idOrg}/members.get.parameters[2].in: query
paths./organizations/{idOrg}/members.get.parameters[2].name: fields
paths./organizations/{idOrg}/members.get.parameters[2].required: false
paths./organizations/{idOrg}/members.get.parameters[2].type: string
paths./organizations/{idOrg}/members.get.parameters[3].description: true or false
  ; works for premium organizations only.
paths./organizations/{idOrg}/members.get.parameters[3].in: query
paths./organizations/{idOrg}/members.get.parameters[3].name: activity
paths./organizations/{idOrg}/members.get.parameters[3].required: false
paths./organizations/{idOrg}/members.get.parameters[3].type: string
paths./organizations/{idOrg}/members.get.parameters[4].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./organizations/{idOrg}/members.get.parameters[4].in: query
paths./organizations/{idOrg}/members.get.parameters[4].name: key
paths./organizations/{idOrg}/members.get.parameters[4].required: true
paths./organizations/{idOrg}/members.get.parameters[4].type: string
paths./organizations/{idOrg}/members.get.parameters[5].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/members.get.parameters[5].in: query
paths./organizations/{idOrg}/members.get.parameters[5].name: token
paths./organizations/{idOrg}/members.get.parameters[5].required: true
paths./organizations/{idOrg}/members.get.parameters[5].type: string
paths./organizations/{idOrg}/members.get.responses.200.description: Success
paths./organizations/{idOrg}/members.get.responses.400.description: Server rejection
paths./organizations/{idOrg}/members.get.security.length: 2
paths./organizations/{idOrg}/members.get.security[0].api_key.length: 0
paths./organizations/{idOrg}/members.get.security[1].api_token.length: 0
paths./organizations/{idOrg}/members.get.summary: getOrganizationsMembersByIdOrg()
paths./organizations/{idOrg}/members.get.tags.length: 1
paths./organizations/{idOrg}/members.get.tags[0]: organization
paths./organizations/{idOrg}/members.put.operationId: updateOrganizationsMembersByIdOrg
paths./organizations/{idOrg}/members.put.parameters.length: 4
paths./organizations/{idOrg}/members.put.parameters[0].description: idOrg or name
paths./organizations/{idOrg}/members.put.parameters[0].in: path
paths./organizations/{idOrg}/members.put.parameters[0].name: idOrg
paths./organizations/{idOrg}/members.put.parameters[0].required: true
paths./organizations/{idOrg}/members.put.parameters[0].type: string
paths./organizations/{idOrg}/members.put.parameters[1].description: Attributes of
  "Organizations Members" to be updated.
paths./organizations/{idOrg}/members.put.parameters[1].in: body
paths./organizations/{idOrg}/members.put.parameters[1].name: body
paths./organizations/{idOrg}/members.put.parameters[1].required: true
paths./organizations/{idOrg}/members.put.parameters[1].schema.$ref: '#/definitions/organizations_members'
paths./organizations/{idOrg}/members.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./organizations/{idOrg}/members.put.parameters[2].in: query
paths./organizations/{idOrg}/members.put.parameters[2].name: key
paths./organizations/{idOrg}/members.put.parameters[2].required: true
paths./organizations/{idOrg}/members.put.parameters[2].type: string
paths./organizations/{idOrg}/members.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/members.put.parameters[3].in: query
paths./organizations/{idOrg}/members.put.parameters[3].name: token
paths./organizations/{idOrg}/members.put.parameters[3].required: true
paths./organizations/{idOrg}/members.put.parameters[3].type: string
paths./organizations/{idOrg}/members.put.responses.200.description: Success
paths./organizations/{idOrg}/members.put.responses.400.description: Server rejection
paths./organizations/{idOrg}/members.put.security.length: 2
paths./organizations/{idOrg}/members.put.security[0].api_key.length: 0
paths./organizations/{idOrg}/members.put.security[1].api_token.length: 0
paths./organizations/{idOrg}/members.put.summary: updateOrganizationsMembersByIdOrg()
paths./organizations/{idOrg}/members.put.tags.length: 1
paths./organizations/{idOrg}/members.put.tags[0]: organization
paths./organizations/{idOrg}/members/{filter}.get.operationId: getOrganizationsMembersByIdOrgByFilter
paths./organizations/{idOrg}/members/{filter}.get.parameters.length: 4
paths./organizations/{idOrg}/members/{filter}.get.parameters[0].description: idOrg
  or name
paths./organizations/{idOrg}/members/{filter}.get.parameters[0].in: path
paths./organizations/{idOrg}/members/{filter}.get.parameters[0].name: idOrg
paths./organizations/{idOrg}/members/{filter}.get.parameters[0].required: true
paths./organizations/{idOrg}/members/{filter}.get.parameters[0].type: string
paths./organizations/{idOrg}/members/{filter}.get.parameters[1].description: filter
paths./organizations/{idOrg}/members/{filter}.get.parameters[1].in: path
paths./organizations/{idOrg}/members/{filter}.get.parameters[1].name: filter
paths./organizations/{idOrg}/members/{filter}.get.parameters[1].required: true
paths./organizations/{idOrg}/members/{filter}.get.parameters[1].type: string
paths./organizations/{idOrg}/members/{filter}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./organizations/{idOrg}/members/{filter}.get.parameters[2].in: query
paths./organizations/{idOrg}/members/{filter}.get.parameters[2].name: key
paths./organizations/{idOrg}/members/{filter}.get.parameters[2].required: true
paths./organizations/{idOrg}/members/{filter}.get.parameters[2].type: string
paths./organizations/{idOrg}/members/{filter}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/members/{filter}.get.parameters[3].in: query
paths./organizations/{idOrg}/members/{filter}.get.parameters[3].name: token
paths./organizations/{idOrg}/members/{filter}.get.parameters[3].required: true
paths./organizations/{idOrg}/members/{filter}.get.parameters[3].type: string
paths./organizations/{idOrg}/members/{filter}.get.responses.200.description: Success
paths./organizations/{idOrg}/members/{filter}.get.responses.400.description: Server
  rejection
paths./organizations/{idOrg}/members/{filter}.get.summary: getOrganizationsMembersByIdOrgByFilter()
paths./organizations/{idOrg}/members/{filter}.get.tags.length: 1
paths./organizations/{idOrg}/members/{filter}.get.tags[0]: organization
paths./organizations/{idOrg}/members/{idMember}.delete.operationId: deleteOrganizationsMembersByIdOrgByIdMember
paths./organizations/{idOrg}/members/{idMember}.delete.parameters.length: 4
paths./organizations/{idOrg}/members/{idMember}.delete.parameters[0].description: idOrg
  or name
paths./organizations/{idOrg}/members/{idMember}.delete.parameters[0].in: path
paths./organizations/{idOrg}/members/{idMember}.delete.parameters[0].name: idOrg
paths./organizations/{idOrg}/members/{idMember}.delete.parameters[0].required: true
paths./organizations/{idOrg}/members/{idMember}.delete.parameters[0].type: string
paths./organizations/{idOrg}/members/{idMember}.delete.parameters[1].description: idMember
paths./organizations/{idOrg}/members/{idMember}.delete.parameters[1].in: path
paths./organizations/{idOrg}/members/{idMember}.delete.parameters[1].name: idMember
paths./organizations/{idOrg}/members/{idMember}.delete.parameters[1].required: true
paths./organizations/{idOrg}/members/{idMember}.delete.parameters[1].type: string
paths./organizations/{idOrg}/members/{idMember}.delete.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./organizations/{idOrg}/members/{idMember}.delete.parameters[2].in: query
paths./organizations/{idOrg}/members/{idMember}.delete.parameters[2].name: key
paths./organizations/{idOrg}/members/{idMember}.delete.parameters[2].required: true
paths./organizations/{idOrg}/members/{idMember}.delete.parameters[2].type: string
paths./organizations/{idOrg}/members/{idMember}.delete.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/members/{idMember}.delete.parameters[3].in: query
paths./organizations/{idOrg}/members/{idMember}.delete.parameters[3].name: token
paths./organizations/{idOrg}/members/{idMember}.delete.parameters[3].required: true
paths./organizations/{idOrg}/members/{idMember}.delete.parameters[3].type: string
paths./organizations/{idOrg}/members/{idMember}.delete.responses.200.description: Success
paths./organizations/{idOrg}/members/{idMember}.delete.responses.400.description: Server
  rejection
paths./organizations/{idOrg}/members/{idMember}.delete.security.length: 2
paths./organizations/{idOrg}/members/{idMember}.delete.security[0].api_key.length: 0
paths./organizations/{idOrg}/members/{idMember}.delete.security[1].api_token.length: 0
paths./organizations/{idOrg}/members/{idMember}.delete.summary: deleteOrganizationsMembersByIdOrgByIdMember()
paths./organizations/{idOrg}/members/{idMember}.delete.tags.length: 1
paths./organizations/{idOrg}/members/{idMember}.delete.tags[0]: organization
paths./organizations/{idOrg}/members/{idMember}.put.operationId: updateOrganizationsMembersByIdOrgByIdMember
paths./organizations/{idOrg}/members/{idMember}.put.parameters.length: 5
paths./organizations/{idOrg}/members/{idMember}.put.parameters[0].description: idOrg
  or name
paths./organizations/{idOrg}/members/{idMember}.put.parameters[0].in: path
paths./organizations/{idOrg}/members/{idMember}.put.parameters[0].name: idOrg
paths./organizations/{idOrg}/members/{idMember}.put.parameters[0].required: true
paths./organizations/{idOrg}/members/{idMember}.put.parameters[0].type: string
paths./organizations/{idOrg}/members/{idMember}.put.parameters[1].description: idMember
paths./organizations/{idOrg}/members/{idMember}.put.parameters[1].in: path
paths./organizations/{idOrg}/members/{idMember}.put.parameters[1].name: idMember
paths./organizations/{idOrg}/members/{idMember}.put.parameters[1].required: true
paths./organizations/{idOrg}/members/{idMember}.put.parameters[1].type: string
paths./organizations/{idOrg}/members/{idMember}.put.parameters[2].description: Attributes
  of "Organizations Members" to be updated.
paths./organizations/{idOrg}/members/{idMember}.put.parameters[2].in: body
paths./organizations/{idOrg}/members/{idMember}.put.parameters[2].name: body
paths./organizations/{idOrg}/members/{idMember}.put.parameters[2].required: true
paths./organizations/{idOrg}/members/{idMember}.put.parameters[2].schema.$ref: '#/definitions/organizations_members'
paths./organizations/{idOrg}/members/{idMember}.put.parameters[3].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./organizations/{idOrg}/members/{idMember}.put.parameters[3].in: query
paths./organizations/{idOrg}/members/{idMember}.put.parameters[3].name: key
paths./organizations/{idOrg}/members/{idMember}.put.parameters[3].required: true
paths./organizations/{idOrg}/members/{idMember}.put.parameters[3].type: string
paths./organizations/{idOrg}/members/{idMember}.put.parameters[4].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/members/{idMember}.put.parameters[4].in: query
paths./organizations/{idOrg}/members/{idMember}.put.parameters[4].name: token
paths./organizations/{idOrg}/members/{idMember}.put.parameters[4].required: true
paths./organizations/{idOrg}/members/{idMember}.put.parameters[4].type: string
paths./organizations/{idOrg}/members/{idMember}.put.responses.200.description: Success
paths./organizations/{idOrg}/members/{idMember}.put.responses.400.description: Server
  rejection
paths./organizations/{idOrg}/members/{idMember}.put.security.length: 2
paths./organizations/{idOrg}/members/{idMember}.put.security[0].api_key.length: 0
paths./organizations/{idOrg}/members/{idMember}.put.security[1].api_token.length: 0
paths./organizations/{idOrg}/members/{idMember}.put.summary: updateOrganizationsMembersByIdOrgByIdMember()
paths./organizations/{idOrg}/members/{idMember}.put.tags.length: 1
paths./organizations/{idOrg}/members/{idMember}.put.tags[0]: organization
paths./organizations/{idOrg}/members/{idMember}/all.delete.operationId: deleteOrganizationsMembersAllByIdOrgByIdMember
paths./organizations/{idOrg}/members/{idMember}/all.delete.parameters.length: 4
paths./organizations/{idOrg}/members/{idMember}/all.delete.parameters[0].description: idOrg
  or name
paths./organizations/{idOrg}/members/{idMember}/all.delete.parameters[0].in: path
paths./organizations/{idOrg}/members/{idMember}/all.delete.parameters[0].name: idOrg
paths./organizations/{idOrg}/members/{idMember}/all.delete.parameters[0].required: true
paths./organizations/{idOrg}/members/{idMember}/all.delete.parameters[0].type: string
paths./organizations/{idOrg}/members/{idMember}/all.delete.parameters[1].description: idMember
paths./organizations/{idOrg}/members/{idMember}/all.delete.parameters[1].in: path
paths./organizations/{idOrg}/members/{idMember}/all.delete.parameters[1].name: idMember
paths./organizations/{idOrg}/members/{idMember}/all.delete.parameters[1].required: true
paths./organizations/{idOrg}/members/{idMember}/all.delete.parameters[1].type: string
paths./organizations/{idOrg}/members/{idMember}/all.delete.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./organizations/{idOrg}/members/{idMember}/all.delete.parameters[2].in: query
paths./organizations/{idOrg}/members/{idMember}/all.delete.parameters[2].name: key
paths./organizations/{idOrg}/members/{idMember}/all.delete.parameters[2].required: true
paths./organizations/{idOrg}/members/{idMember}/all.delete.parameters[2].type: string
paths./organizations/{idOrg}/members/{idMember}/all.delete.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/members/{idMember}/all.delete.parameters[3].in: query
paths./organizations/{idOrg}/members/{idMember}/all.delete.parameters[3].name: token
paths./organizations/{idOrg}/members/{idMember}/all.delete.parameters[3].required: true
paths./organizations/{idOrg}/members/{idMember}/all.delete.parameters[3].type: string
paths./organizations/{idOrg}/members/{idMember}/all.delete.responses.200.description: Success
paths./organizations/{idOrg}/members/{idMember}/all.delete.responses.400.description: Server
  rejection
paths./organizations/{idOrg}/members/{idMember}/all.delete.security.length: 2
paths./organizations/{idOrg}/members/{idMember}/all.delete.security[0].api_key.length: 0
paths./organizations/{idOrg}/members/{idMember}/all.delete.security[1].api_token.length: 0
paths./organizations/{idOrg}/members/{idMember}/all.delete.summary: deleteOrganizationsMembersAllByIdOrgByIdMember()
paths./organizations/{idOrg}/members/{idMember}/all.delete.tags.length: 1
paths./organizations/{idOrg}/members/{idMember}/all.delete.tags[0]: organization
paths./organizations/{idOrg}/members/{idMember}/cards.get.operationId: getOrganizationsMembersCardsByIdOrgByIdMember
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters.length: 17
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[0].description: idOrg
  or name
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[0].in: path
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[0].name: idOrg
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[0].required: true
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[0].type: string
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[1].description: idMember
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[1].in: path
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[1].name: idMember
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[1].required: true
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[1].type: string
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[2].description: 'all
  or a comma-separated list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard,
  addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem,
  copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization,
  deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation,
  disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
  makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard,
  moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,
  removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
  updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,
  updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed,
  updateList:name, updateMember or updateOrganization'
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[2].in: query
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[2].name: actions
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[2].required: false
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[2].type: string
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[3].description: A
  boolean value or &quot;cover&quot; for only card cover attachments
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[3].in: query
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[3].name: attachments
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[3].required: false
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[3].type: string
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[4].default: all
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[4].description: 'all
  or a comma-separated list of: bytes, date, edgeColor, idMember, isUpload, mimeType,
  name, previews or url'
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[4].in: query
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[4].name: attachment_fields
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[4].required: false
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[4].type: string
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[5].description: ' true
  or false'
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[5].in: query
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[5].name: members
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[5].required: false
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[5].type: string
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[6].default: avatarHash,
  fullName, initials and username
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[6].description: 'all
  or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin,
  initials, memberType, products, status, url or username'
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[6].in: query
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[6].name: member_fields
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[6].required: false
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[6].type: string
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[7].description: ' true
  or false'
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[7].in: query
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[7].name: checkItemStates
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[7].required: false
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[7].type: string
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[8].default: none
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[8].description: 'One
  of: all or none'
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[8].in: query
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[8].name: checklists
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[8].required: false
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[8].type: string
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[9].description: ' true
  or false'
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[9].in: query
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[9].name: board
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[9].required: false
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[9].type: string
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[10].default: name,
  desc, closed, idOrganization, pinned, url and prefs
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[10].description: 'all
  or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData,
  idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps,
  prefs, shortLink, shortUrl, starred, subscribed or url'
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[10].in: query
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[10].name: board_fields
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[10].required: false
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[10].type: string
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[11].description: ' true
  or false'
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[11].in: query
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[11].name: list
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[11].required: false
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[11].type: string
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[12].default: all
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[12].description: 'all
  or a comma-separated list of: closed, idBoard, name, pos or subscribed'
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[12].in: query
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[12].name: list_fields
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[12].required: false
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[12].type: string
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[13].default: visible
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[13].description: 'One
  of: all, closed, none, open or visible'
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[13].in: query
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[13].name: filter
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[13].required: false
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[13].type: string
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[14].default: all
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[14].description: 'all
  or a comma-separated list of: badges, checkItemStates, closed, dateLastActivity,
  desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels,
  idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name,
  pos, shortLink, shortUrl, subscribed or url'
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[14].in: query
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[14].name: fields
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[14].required: false
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[14].type: string
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[15].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[15].in: query
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[15].name: key
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[15].required: true
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[15].type: string
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[16].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[16].in: query
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[16].name: token
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[16].required: true
paths./organizations/{idOrg}/members/{idMember}/cards.get.parameters[16].type: string
paths./organizations/{idOrg}/members/{idMember}/cards.get.responses.200.description: Success
paths./organizations/{idOrg}/members/{idMember}/cards.get.responses.400.description: Server
  rejection
paths./organizations/{idOrg}/members/{idMember}/cards.get.security.length: 2
paths./organizations/{idOrg}/members/{idMember}/cards.get.security[0].api_key.length: 0
paths./organizations/{idOrg}/members/{idMember}/cards.get.security[1].api_token.length: 0
paths./organizations/{idOrg}/members/{idMember}/cards.get.summary: getOrganizationsMembersCardsByIdOrgByIdMember()
paths./organizations/{idOrg}/members/{idMember}/cards.get.tags.length: 1
paths./organizations/{idOrg}/members/{idMember}/cards.get.tags[0]: organization
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.operationId: updateOrganizationsMembersDeactivatedByIdOrgByIdMember
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.parameters.length: 5
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.parameters[0].description: idOrg
  or name
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.parameters[0].in: path
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.parameters[0].name: idOrg
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.parameters[0].required: true
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.parameters[0].type: string
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.parameters[1].description: idMember
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.parameters[1].in: path
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.parameters[1].name: idMember
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.parameters[1].required: true
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.parameters[1].type: string
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.parameters[2].description: Attributes
  of "Organizations Members Deactivated" to be updated.
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.parameters[2].in: body
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.parameters[2].name: body
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.parameters[2].required: true
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.parameters[2].schema.$ref: '#/definitions/organizations_members_deactivated'
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.parameters[3].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.parameters[3].in: query
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.parameters[3].name: key
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.parameters[3].required: true
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.parameters[3].type: string
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.parameters[4].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.parameters[4].in: query
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.parameters[4].name: token
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.parameters[4].required: true
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.parameters[4].type: string
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.responses.200.description: Success
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.responses.400.description: Server
  rejection
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.security.length: 2
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.security[0].api_key.length: 0
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.security[1].api_token.length: 0
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.summary: updateOrganizationsMembersDeactivatedByIdOrgByIdMember()
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.tags.length: 1
paths./organizations/{idOrg}/members/{idMember}/deactivated.put.tags[0]: organization
paths./organizations/{idOrg}/membersInvited.get.operationId: getOrganizationsMembersInvitedByIdOrg
paths./organizations/{idOrg}/membersInvited.get.parameters.length: 4
paths./organizations/{idOrg}/membersInvited.get.parameters[0].description: idOrg or
  name
paths./organizations/{idOrg}/membersInvited.get.parameters[0].in: path
paths./organizations/{idOrg}/membersInvited.get.parameters[0].name: idOrg
paths./organizations/{idOrg}/membersInvited.get.parameters[0].required: true
paths./organizations/{idOrg}/membersInvited.get.parameters[0].type: string
paths./organizations/{idOrg}/membersInvited.get.parameters[1].default: all
paths./organizations/{idOrg}/membersInvited.get.parameters[1].description: 'all or
  a comma-separated list of: avatarHash, avatarSource, bio, bioData, confirmed, email,
  fullName, gravatarHash, idBoards, idBoardsPinned, idOrganizations, idPremOrgsAdmin,
  initials, loginTypes, memberType, oneTimeMessagesDismissed, prefs, premiumFeatures,
  products, status, status, trophies, uploadedAvatarHash, url or username'
paths./organizations/{idOrg}/membersInvited.get.parameters[1].in: query
paths./organizations/{idOrg}/membersInvited.get.parameters[1].name: fields
paths./organizations/{idOrg}/membersInvited.get.parameters[1].required: false
paths./organizations/{idOrg}/membersInvited.get.parameters[1].type: string
paths./organizations/{idOrg}/membersInvited.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./organizations/{idOrg}/membersInvited.get.parameters[2].in: query
paths./organizations/{idOrg}/membersInvited.get.parameters[2].name: key
paths./organizations/{idOrg}/membersInvited.get.parameters[2].required: true
paths./organizations/{idOrg}/membersInvited.get.parameters[2].type: string
paths./organizations/{idOrg}/membersInvited.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/membersInvited.get.parameters[3].in: query
paths./organizations/{idOrg}/membersInvited.get.parameters[3].name: token
paths./organizations/{idOrg}/membersInvited.get.parameters[3].required: true
paths./organizations/{idOrg}/membersInvited.get.parameters[3].type: string
paths./organizations/{idOrg}/membersInvited.get.responses.200.description: Success
paths./organizations/{idOrg}/membersInvited.get.responses.400.description: Server
  rejection
paths./organizations/{idOrg}/membersInvited.get.security.length: 2
paths./organizations/{idOrg}/membersInvited.get.security[0].api_key.length: 0
paths./organizations/{idOrg}/membersInvited.get.security[1].api_token.length: 0
paths./organizations/{idOrg}/membersInvited.get.summary: getOrganizationsMembersInvitedByIdOrg()
paths./organizations/{idOrg}/membersInvited.get.tags.length: 1
paths./organizations/{idOrg}/membersInvited.get.tags[0]: organization
paths./organizations/{idOrg}/membersInvited/{field}.get.operationId: getOrganizationsMembersInvitedByIdOrgByField
paths./organizations/{idOrg}/membersInvited/{field}.get.parameters.length: 4
paths./organizations/{idOrg}/membersInvited/{field}.get.parameters[0].description: idOrg
  or name
paths./organizations/{idOrg}/membersInvited/{field}.get.parameters[0].in: path
paths./organizations/{idOrg}/membersInvited/{field}.get.parameters[0].name: idOrg
paths./organizations/{idOrg}/membersInvited/{field}.get.parameters[0].required: true
paths./organizations/{idOrg}/membersInvited/{field}.get.parameters[0].type: string
paths./organizations/{idOrg}/membersInvited/{field}.get.parameters[1].description: field
paths./organizations/{idOrg}/membersInvited/{field}.get.parameters[1].in: path
paths./organizations/{idOrg}/membersInvited/{field}.get.parameters[1].name: field
paths./organizations/{idOrg}/membersInvited/{field}.get.parameters[1].required: true
paths./organizations/{idOrg}/membersInvited/{field}.get.parameters[1].type: string
paths./organizations/{idOrg}/membersInvited/{field}.get.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./organizations/{idOrg}/membersInvited/{field}.get.parameters[2].in: query
paths./organizations/{idOrg}/membersInvited/{field}.get.parameters[2].name: key
paths./organizations/{idOrg}/membersInvited/{field}.get.parameters[2].required: true
paths./organizations/{idOrg}/membersInvited/{field}.get.parameters[2].type: string
paths./organizations/{idOrg}/membersInvited/{field}.get.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/membersInvited/{field}.get.parameters[3].in: query
paths./organizations/{idOrg}/membersInvited/{field}.get.parameters[3].name: token
paths./organizations/{idOrg}/membersInvited/{field}.get.parameters[3].required: true
paths./organizations/{idOrg}/membersInvited/{field}.get.parameters[3].type: string
paths./organizations/{idOrg}/membersInvited/{field}.get.responses.200.description: Success
paths./organizations/{idOrg}/membersInvited/{field}.get.responses.400.description: Server
  rejection
paths./organizations/{idOrg}/membersInvited/{field}.get.security.length: 2
paths./organizations/{idOrg}/membersInvited/{field}.get.security[0].api_key.length: 0
paths./organizations/{idOrg}/membersInvited/{field}.get.security[1].api_token.length: 0
paths./organizations/{idOrg}/membersInvited/{field}.get.summary: getOrganizationsMembersInvitedByIdOrgByField()
paths./organizations/{idOrg}/membersInvited/{field}.get.tags.length: 1
paths./organizations/{idOrg}/membersInvited/{field}.get.tags[0]: organization
paths./organizations/{idOrg}/memberships.get.operationId: getOrganizationsMembershipsByIdOrg
paths./organizations/{idOrg}/memberships.get.parameters.length: 6
paths./organizations/{idOrg}/memberships.get.parameters[0].description: idOrg or name
paths./organizations/{idOrg}/memberships.get.parameters[0].in: path
paths./organizations/{idOrg}/memberships.get.parameters[0].name: idOrg
paths./organizations/{idOrg}/memberships.get.parameters[0].required: true
paths./organizations/{idOrg}/memberships.get.parameters[0].type: string
paths./organizations/{idOrg}/memberships.get.parameters[1].default: all
paths./organizations/{idOrg}/memberships.get.parameters[1].description: 'all or a
  comma-separated list of: active, admin, deactivated, me or normal'
paths./organizations/{idOrg}/memberships.get.parameters[1].in: query
paths./organizations/{idOrg}/memberships.get.parameters[1].name: filter
paths./organizations/{idOrg}/memberships.get.parameters[1].required: false
paths./organizations/{idOrg}/memberships.get.parameters[1].type: string
paths./organizations/{idOrg}/memberships.get.parameters[2].description: ' true or
  false'
paths./organizations/{idOrg}/memberships.get.parameters[2].in: query
paths./organizations/{idOrg}/memberships.get.parameters[2].name: member
paths./organizations/{idOrg}/memberships.get.parameters[2].required: false
paths./organizations/{idOrg}/memberships.get.parameters[2].type: string
paths./organizations/{idOrg}/memberships.get.parameters[3].default: fullName and username
paths./organizations/{idOrg}/memberships.get.parameters[3].description: 'all or a
  comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin,
  initials, memberType, products, status, url or username'
paths./organizations/{idOrg}/memberships.get.parameters[3].in: query
paths./organizations/{idOrg}/memberships.get.parameters[3].name: member_fields
paths./organizations/{idOrg}/memberships.get.parameters[3].required: false
paths./organizations/{idOrg}/memberships.get.parameters[3].type: string
paths./organizations/{idOrg}/memberships.get.parameters[4].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./organizations/{idOrg}/memberships.get.parameters[4].in: query
paths./organizations/{idOrg}/memberships.get.parameters[4].name: key
paths./organizations/{idOrg}/memberships.get.parameters[4].required: true
paths./organizations/{idOrg}/memberships.get.parameters[4].type: string
paths./organizations/{idOrg}/memberships.get.parameters[5].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/memberships.get.parameters[5].in: query
paths./organizations/{idOrg}/memberships.get.parameters[5].name: token
paths./organizations/{idOrg}/memberships.get.parameters[5].required: true
paths./organizations/{idOrg}/memberships.get.parameters[5].type: string
paths./organizations/{idOrg}/memberships.get.responses.200.description: Success
paths./organizations/{idOrg}/memberships.get.responses.400.description: Server rejection
paths./organizations/{idOrg}/memberships.get.security.length: 2
paths./organizations/{idOrg}/memberships.get.security[0].api_key.length: 0
paths./organizations/{idOrg}/memberships.get.security[1].api_token.length: 0
paths./organizations/{idOrg}/memberships.get.summary: getOrganizationsMembershipsByIdOrg()
paths./organizations/{idOrg}/memberships.get.tags.length: 1
paths./organizations/{idOrg}/memberships.get.tags[0]: organization
paths./organizations/{idOrg}/memberships/{idMembership}.get.operationId: getOrganizationsMembershipsByIdOrgByIdMembership
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters.length: 6
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters[0].description: idOrg
  or name
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters[0].in: path
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters[0].name: idOrg
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters[0].required: true
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters[0].type: string
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters[1].description: idMembership
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters[1].in: path
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters[1].name: idMembership
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters[1].required: true
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters[1].type: string
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters[2].description: ' true
  or false'
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters[2].in: query
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters[2].name: member
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters[2].required: false
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters[2].type: string
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters[3].default: fullName
  and username
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters[3].description: 'all
  or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin,
  initials, memberType, products, status, url or username'
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters[3].in: query
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters[3].name: member_fields
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters[3].required: false
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters[3].type: string
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters[4].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters[4].in: query
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters[4].name: key
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters[4].required: true
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters[4].type: string
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters[5].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters[5].in: query
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters[5].name: token
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters[5].required: true
paths./organizations/{idOrg}/memberships/{idMembership}.get.parameters[5].type: string
paths./organizations/{idOrg}/memberships/{idMembership}.get.responses.200.description: Success
paths./organizations/{idOrg}/memberships/{idMembership}.get.responses.400.description: Server
  rejection
paths./organizations/{idOrg}/memberships/{idMembership}.get.security.length: 2
paths./organizations/{idOrg}/memberships/{idMembership}.get.security[0].api_key.length: 0
paths./organizations/{idOrg}/memberships/{idMembership}.get.security[1].api_token.length: 0
paths./organizations/{idOrg}/memberships/{idMembership}.get.summary: getOrganizationsMembershipsByIdOrgByIdMembership()
paths./organizations/{idOrg}/memberships/{idMembership}.get.tags.length: 1
paths./organizations/{idOrg}/memberships/{idMembership}.get.tags[0]: organization
paths./organizations/{idOrg}/memberships/{idMembership}.put.operationId: updateOrganizationsMembershipsByIdOrgByIdMembership
paths./organizations/{idOrg}/memberships/{idMembership}.put.parameters.length: 5
paths./organizations/{idOrg}/memberships/{idMembership}.put.parameters[0].description: idOrg
  or name
paths./organizations/{idOrg}/memberships/{idMembership}.put.parameters[0].in: path
paths./organizations/{idOrg}/memberships/{idMembership}.put.parameters[0].name: idOrg
paths./organizations/{idOrg}/memberships/{idMembership}.put.parameters[0].required: true
paths./organizations/{idOrg}/memberships/{idMembership}.put.parameters[0].type: string
paths./organizations/{idOrg}/memberships/{idMembership}.put.parameters[1].description: idMembership
paths./organizations/{idOrg}/memberships/{idMembership}.put.parameters[1].in: path
paths./organizations/{idOrg}/memberships/{idMembership}.put.parameters[1].name: idMembership
paths./organizations/{idOrg}/memberships/{idMembership}.put.parameters[1].required: true
paths./organizations/{idOrg}/memberships/{idMembership}.put.parameters[1].type: string
paths./organizations/{idOrg}/memberships/{idMembership}.put.parameters[2].description: Attributes
  of "Organizations Memberships" to be updated.
paths./organizations/{idOrg}/memberships/{idMembership}.put.parameters[2].in: body
paths./organizations/{idOrg}/memberships/{idMembership}.put.parameters[2].name: body
paths./organizations/{idOrg}/memberships/{idMembership}.put.parameters[2].required: true
paths./organizations/{idOrg}/memberships/{idMembership}.put.parameters[2].schema.$ref: '#/definitions/organizations_memberships'
paths./organizations/{idOrg}/memberships/{idMembership}.put.parameters[3].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./organizations/{idOrg}/memberships/{idMembership}.put.parameters[3].in: query
paths./organizations/{idOrg}/memberships/{idMembership}.put.parameters[3].name: key
paths./organizations/{idOrg}/memberships/{idMembership}.put.parameters[3].required: true
paths./organizations/{idOrg}/memberships/{idMembership}.put.parameters[3].type: string
paths./organizations/{idOrg}/memberships/{idMembership}.put.parameters[4].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/memberships/{idMembership}.put.parameters[4].in: query
paths./organizations/{idOrg}/memberships/{idMembership}.put.parameters[4].name: token
paths./organizations/{idOrg}/memberships/{idMembership}.put.parameters[4].required: true
paths./organizations/{idOrg}/memberships/{idMembership}.put.parameters[4].type: string
paths./organizations/{idOrg}/memberships/{idMembership}.put.responses.200.description: Success
paths./organizations/{idOrg}/memberships/{idMembership}.put.responses.400.description: Server
  rejection
paths./organizations/{idOrg}/memberships/{idMembership}.put.security.length: 2
paths./organizations/{idOrg}/memberships/{idMembership}.put.security[0].api_key.length: 0
paths./organizations/{idOrg}/memberships/{idMembership}.put.security[1].api_token.length: 0
paths./organizations/{idOrg}/memberships/{idMembership}.put.summary: updateOrganizationsMembershipsByIdOrgByIdMembership()
paths./organizations/{idOrg}/memberships/{idMembership}.put.tags.length: 1
paths./organizations/{idOrg}/memberships/{idMembership}.put.tags[0]: organization
paths./organizations/{idOrg}/name.put.operationId: updateOrganizationsNameByIdOrg
paths./organizations/{idOrg}/name.put.parameters.length: 4
paths./organizations/{idOrg}/name.put.parameters[0].description: idOrg or name
paths./organizations/{idOrg}/name.put.parameters[0].in: path
paths./organizations/{idOrg}/name.put.parameters[0].name: idOrg
paths./organizations/{idOrg}/name.put.parameters[0].required: true
paths./organizations/{idOrg}/name.put.parameters[0].type: string
paths./organizations/{idOrg}/name.put.parameters[1].description: Attributes of "Organizations
  Name" to be updated.
paths./organizations/{idOrg}/name.put.parameters[1].in: body
paths./organizations/{idOrg}/name.put.parameters[1].name: body
paths./organizations/{idOrg}/name.put.parameters[1].required: true
paths./organizations/{idOrg}/name.put.parameters[1].schema.$ref: '#/definitions/organizations_name'
paths./organizations/{idOrg}/name.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./organizations/{idOrg}/name.put.parameters[2].in: query
paths./organizations/{idOrg}/name.put.parameters[2].name: key
paths./organizations/{idOrg}/name.put.parameters[2].required: true
paths./organizations/{idOrg}/name.put.parameters[2].type: string
paths./organizations/{idOrg}/name.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/name.put.parameters[3].in: query
paths./organizations/{idOrg}/name.put.parameters[3].name: token
paths./organizations/{idOrg}/name.put.parameters[3].required: true
paths./organizations/{idOrg}/name.put.parameters[3].type: string
paths./organizations/{idOrg}/name.put.responses.200.description: Success
paths./organizations/{idOrg}/name.put.responses.400.description: Server rejection
paths./organizations/{idOrg}/name.put.security.length: 2
paths./organizations/{idOrg}/name.put.security[0].api_key.length: 0
paths./organizations/{idOrg}/name.put.security[1].api_token.length: 0
paths./organizations/{idOrg}/name.put.summary: updateOrganizationsNameByIdOrg()
paths./organizations/{idOrg}/name.put.tags.length: 1
paths./organizations/{idOrg}/name.put.tags[0]: organization
paths./organizations/{idOrg}/prefs/associatedDomain.delete.operationId: deleteOrganizationsPrefsAssociatedDomainByIdOrg
paths./organizations/{idOrg}/prefs/associatedDomain.delete.parameters.length: 3
paths./organizations/{idOrg}/prefs/associatedDomain.delete.parameters[0].description: idOrg
  or name
paths./organizations/{idOrg}/prefs/associatedDomain.delete.parameters[0].in: path
paths./organizations/{idOrg}/prefs/associatedDomain.delete.parameters[0].name: idOrg
paths./organizations/{idOrg}/prefs/associatedDomain.delete.parameters[0].required: true
paths./organizations/{idOrg}/prefs/associatedDomain.delete.parameters[0].type: string
paths./organizations/{idOrg}/prefs/associatedDomain.delete.parameters[1].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./organizations/{idOrg}/prefs/associatedDomain.delete.parameters[1].in: query
paths./organizations/{idOrg}/prefs/associatedDomain.delete.parameters[1].name: key
paths./organizations/{idOrg}/prefs/associatedDomain.delete.parameters[1].required: true
paths./organizations/{idOrg}/prefs/associatedDomain.delete.parameters[1].type: string
paths./organizations/{idOrg}/prefs/associatedDomain.delete.parameters[2].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/prefs/associatedDomain.delete.parameters[2].in: query
paths./organizations/{idOrg}/prefs/associatedDomain.delete.parameters[2].name: token
paths./organizations/{idOrg}/prefs/associatedDomain.delete.parameters[2].required: true
paths./organizations/{idOrg}/prefs/associatedDomain.delete.parameters[2].type: string
paths./organizations/{idOrg}/prefs/associatedDomain.delete.responses.200.description: Success
paths./organizations/{idOrg}/prefs/associatedDomain.delete.responses.400.description: Server
  rejection
paths./organizations/{idOrg}/prefs/associatedDomain.delete.security.length: 2
paths./organizations/{idOrg}/prefs/associatedDomain.delete.security[0].api_key.length: 0
paths./organizations/{idOrg}/prefs/associatedDomain.delete.security[1].api_token.length: 0
paths./organizations/{idOrg}/prefs/associatedDomain.delete.summary: deleteOrganizationsPrefsAssociatedDomainByIdOrg()
paths./organizations/{idOrg}/prefs/associatedDomain.delete.tags.length: 1
paths./organizations/{idOrg}/prefs/associatedDomain.delete.tags[0]: organization
paths./organizations/{idOrg}/prefs/associatedDomain.put.operationId: updateOrganizationsPrefsAssociatedDomainByIdOrg
paths./organizations/{idOrg}/prefs/associatedDomain.put.parameters.length: 4
paths./organizations/{idOrg}/prefs/associatedDomain.put.parameters[0].description: idOrg
  or name
paths./organizations/{idOrg}/prefs/associatedDomain.put.parameters[0].in: path
paths./organizations/{idOrg}/prefs/associatedDomain.put.parameters[0].name: idOrg
paths./organizations/{idOrg}/prefs/associatedDomain.put.parameters[0].required: true
paths./organizations/{idOrg}/prefs/associatedDomain.put.parameters[0].type: string
paths./organizations/{idOrg}/prefs/associatedDomain.put.parameters[1].description: Attributes
  of "Prefs Associated Domain" to be updated.
paths./organizations/{idOrg}/prefs/associatedDomain.put.parameters[1].in: body
paths./organizations/{idOrg}/prefs/associatedDomain.put.parameters[1].name: body
paths./organizations/{idOrg}/prefs/associatedDomain.put.parameters[1].required: true
paths./organizations/{idOrg}/prefs/associatedDomain.put.parameters[1].schema.$ref: '#/definitions/prefs_associatedDomain'
paths./organizations/{idOrg}/prefs/associatedDomain.put.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./organizations/{idOrg}/prefs/associatedDomain.put.parameters[2].in: query
paths./organizations/{idOrg}/prefs/associatedDomain.put.parameters[2].name: key
paths./organizations/{idOrg}/prefs/associatedDomain.put.parameters[2].required: true
paths./organizations/{idOrg}/prefs/associatedDomain.put.parameters[2].type: string
paths./organizations/{idOrg}/prefs/associatedDomain.put.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/prefs/associatedDomain.put.parameters[3].in: query
paths./organizations/{idOrg}/prefs/associatedDomain.put.parameters[3].name: token
paths./organizations/{idOrg}/prefs/associatedDomain.put.parameters[3].required: true
paths./organizations/{idOrg}/prefs/associatedDomain.put.parameters[3].type: string
paths./organizations/{idOrg}/prefs/associatedDomain.put.responses.200.description: Success
paths./organizations/{idOrg}/prefs/associatedDomain.put.responses.400.description: Server
  rejection
paths./organizations/{idOrg}/prefs/associatedDomain.put.security.length: 2
paths./organizations/{idOrg}/prefs/associatedDomain.put.security[0].api_key.length: 0
paths./organizations/{idOrg}/prefs/associatedDomain.put.security[1].api_token.length: 0
paths./organizations/{idOrg}/prefs/associatedDomain.put.summary: updateOrganizationsPrefsAssociatedDomainByIdOrg()
paths./organizations/{idOrg}/prefs/associatedDomain.put.tags.length: 1
paths./organizations/{idOrg}/prefs/associatedDomain.put.tags[0]: organization
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/org.put.operationId: updateOrganizationsPrefsBoardVisibilityRestrictOrgByIdOrg
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/org.put.parameters.length: 4
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/org.put.parameters[0].description: idOrg
  or name
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/org.put.parameters[0].in: path
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/org.put.parameters[0].name: idOrg
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/org.put.parameters[0].required: true
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/org.put.parameters[0].type: string
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/org.put.parameters[1].description: Attributes
  of "Prefs Board Visibility Restrict" to be updated.
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/org.put.parameters[1].in: body
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/org.put.parameters[1].name: body
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/org.put.parameters[1].required: true
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/org.put.parameters[1].schema.$ref: '#/definitions/prefs_boardVisibilityRestrict'
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/org.put.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/org.put.parameters[2].in: query
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/org.put.parameters[2].name: key
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/org.put.parameters[2].required: true
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/org.put.parameters[2].type: string
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/org.put.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/org.put.parameters[3].in: query
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/org.put.parameters[3].name: token
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/org.put.parameters[3].required: true
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/org.put.parameters[3].type: string
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/org.put.responses.200.description: Success
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/org.put.responses.400.description: Server
  rejection
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/org.put.security.length: 2
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/org.put.security[0].api_key.length: 0
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/org.put.security[1].api_token.length: 0
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/org.put.summary: updateOrganizationsPrefsBoardVisibilityRestrictOrgByIdOrg()
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/org.put.tags.length: 1
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/org.put.tags[0]: organization
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/private.put.operationId: updateOrganizationsPrefsBoardVisibilityRestrictPrivateByIdOrg
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/private.put.parameters.length: 4
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/private.put.parameters[0].description: idOrg
  or name
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/private.put.parameters[0].in: path
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/private.put.parameters[0].name: idOrg
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/private.put.parameters[0].required: true
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/private.put.parameters[0].type: string
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/private.put.parameters[1].description: Attributes
  of "Prefs Board Visibility Restrict" to be updated.
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/private.put.parameters[1].in: body
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/private.put.parameters[1].name: body
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/private.put.parameters[1].required: true
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/private.put.parameters[1].schema.$ref: '#/definitions/prefs_boardVisibilityRestrict'
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/private.put.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/private.put.parameters[2].in: query
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/private.put.parameters[2].name: key
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/private.put.parameters[2].required: true
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/private.put.parameters[2].type: string
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/private.put.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/private.put.parameters[3].in: query
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/private.put.parameters[3].name: token
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/private.put.parameters[3].required: true
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/private.put.parameters[3].type: string
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/private.put.responses.200.description: Success
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/private.put.responses.400.description: Server
  rejection
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/private.put.security.length: 2
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/private.put.security[0].api_key.length: 0
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/private.put.security[1].api_token.length: 0
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/private.put.summary: updateOrganizationsPrefsBoardVisibilityRestrictPrivateByIdOrg()
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/private.put.tags.length: 1
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/private.put.tags[0]: organization
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/public.put.operationId: updateOrganizationsPrefsBoardVisibilityRestrictPublicByIdOrg
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/public.put.parameters.length: 4
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/public.put.parameters[0].description: idOrg
  or name
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/public.put.parameters[0].in: path
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/public.put.parameters[0].name: idOrg
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/public.put.parameters[0].required: true
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/public.put.parameters[0].type: string
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/public.put.parameters[1].description: Attributes
  of "Prefs Board Visibility Restrict" to be updated.
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/public.put.parameters[1].in: body
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/public.put.parameters[1].name: body
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/public.put.parameters[1].required: true
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/public.put.parameters[1].schema.$ref: '#/definitions/prefs_boardVisibilityRestrict'
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/public.put.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/public.put.parameters[2].in: query
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/public.put.parameters[2].name: key
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/public.put.parameters[2].required: true
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/public.put.parameters[2].type: string
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/public.put.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/public.put.parameters[3].in: query
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/public.put.parameters[3].name: token
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/public.put.parameters[3].required: true
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/public.put.parameters[3].type: string
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/public.put.responses.200.description: Success
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/public.put.responses.400.description: Server
  rejection
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/public.put.security.length: 2
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/public.put.security[0].api_key.length: 0
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/public.put.security[1].api_token.length: 0
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/public.put.summary: updateOrganizationsPrefsBoardVisibilityRestrictPublicByIdOrg()
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/public.put.tags.length: 1
paths./organizations/{idOrg}/prefs/boardVisibilityRestrict/public.put.tags[0]: organization
paths./organizations/{idOrg}/prefs/externalMembersDisabled.put.operationId: updateOrganizationsPrefsExternalMembersDisabledByIdOrg
paths./organizations/{idOrg}/prefs/externalMembersDisabled.put.parameters.length: 4
paths./organizations/{idOrg}/prefs/externalMembersDisabled.put.parameters[0].description: idOrg
  or name
paths./organizations/{idOrg}/prefs/externalMembersDisabled.put.parameters[0].in: path
paths./organizations/{idOrg}/prefs/externalMembersDisabled.put.parameters[0].name: idOrg
paths./organizations/{idOrg}/prefs/externalMembersDisabled.put.parameters[0].required: true
paths./organizations/{idOrg}/prefs/externalMembersDisabled.put.parameters[0].type: string
paths./organizations/{idOrg}/prefs/externalMembersDisabled.put.parameters[1].description: Attributes
  of "Prefs External Members Disabled" to be updated.
paths./organizations/{idOrg}/prefs/externalMembersDisabled.put.parameters[1].in: body
paths./organizations/{idOrg}/prefs/externalMembersDisabled.put.parameters[1].name: body
paths./organizations/{idOrg}/prefs/externalMembersDisabled.put.parameters[1].required: true
paths./organizations/{idOrg}/prefs/externalMembersDisabled.put.parameters[1].schema.$ref: '#/definitions/prefs_externalMembersDisabled'
paths./organizations/{idOrg}/prefs/externalMembersDisabled.put.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./organizations/{idOrg}/prefs/externalMembersDisabled.put.parameters[2].in: query
paths./organizations/{idOrg}/prefs/externalMembersDisabled.put.parameters[2].name: key
paths./organizations/{idOrg}/prefs/externalMembersDisabled.put.parameters[2].required: true
paths./organizations/{idOrg}/prefs/externalMembersDisabled.put.parameters[2].type: string
paths./organizations/{idOrg}/prefs/externalMembersDisabled.put.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/prefs/externalMembersDisabled.put.parameters[3].in: query
paths./organizations/{idOrg}/prefs/externalMembersDisabled.put.parameters[3].name: token
paths./organizations/{idOrg}/prefs/externalMembersDisabled.put.parameters[3].required: true
paths./organizations/{idOrg}/prefs/externalMembersDisabled.put.parameters[3].type: string
paths./organizations/{idOrg}/prefs/externalMembersDisabled.put.responses.200.description: Success
paths./organizations/{idOrg}/prefs/externalMembersDisabled.put.responses.400.description: Server
  rejection
paths./organizations/{idOrg}/prefs/externalMembersDisabled.put.security.length: 2
paths./organizations/{idOrg}/prefs/externalMembersDisabled.put.security[0].api_key.length: 0
paths./organizations/{idOrg}/prefs/externalMembersDisabled.put.security[1].api_token.length: 0
paths./organizations/{idOrg}/prefs/externalMembersDisabled.put.summary: updateOrganizationsPrefsExternalMembersDisabledByIdOrg()
paths./organizations/{idOrg}/prefs/externalMembersDisabled.put.tags.length: 1
paths./organizations/{idOrg}/prefs/externalMembersDisabled.put.tags[0]: organization
paths./organizations/{idOrg}/prefs/googleAppsVersion.put.operationId: updateOrganizationsPrefsGoogleAppsVersionByIdOrg
paths./organizations/{idOrg}/prefs/googleAppsVersion.put.parameters.length: 4
paths./organizations/{idOrg}/prefs/googleAppsVersion.put.parameters[0].description: idOrg
  or name
paths./organizations/{idOrg}/prefs/googleAppsVersion.put.parameters[0].in: path
paths./organizations/{idOrg}/prefs/googleAppsVersion.put.parameters[0].name: idOrg
paths./organizations/{idOrg}/prefs/googleAppsVersion.put.parameters[0].required: true
paths./organizations/{idOrg}/prefs/googleAppsVersion.put.parameters[0].type: string
paths./organizations/{idOrg}/prefs/googleAppsVersion.put.parameters[1].description: Attributes
  of "Prefs Google Apps Version" to be updated.
paths./organizations/{idOrg}/prefs/googleAppsVersion.put.parameters[1].in: body
paths./organizations/{idOrg}/prefs/googleAppsVersion.put.parameters[1].name: body
paths./organizations/{idOrg}/prefs/googleAppsVersion.put.parameters[1].required: true
paths./organizations/{idOrg}/prefs/googleAppsVersion.put.parameters[1].schema.$ref: '#/definitions/prefs_googleAppsVersion'
paths./organizations/{idOrg}/prefs/googleAppsVersion.put.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./organizations/{idOrg}/prefs/googleAppsVersion.put.parameters[2].in: query
paths./organizations/{idOrg}/prefs/googleAppsVersion.put.parameters[2].name: key
paths./organizations/{idOrg}/prefs/googleAppsVersion.put.parameters[2].required: true
paths./organizations/{idOrg}/prefs/googleAppsVersion.put.parameters[2].type: string
paths./organizations/{idOrg}/prefs/googleAppsVersion.put.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/prefs/googleAppsVersion.put.parameters[3].in: query
paths./organizations/{idOrg}/prefs/googleAppsVersion.put.parameters[3].name: token
paths./organizations/{idOrg}/prefs/googleAppsVersion.put.parameters[3].required: true
paths./organizations/{idOrg}/prefs/googleAppsVersion.put.parameters[3].type: string
paths./organizations/{idOrg}/prefs/googleAppsVersion.put.responses.200.description: Success
paths./organizations/{idOrg}/prefs/googleAppsVersion.put.responses.400.description: Server
  rejection
paths./organizations/{idOrg}/prefs/googleAppsVersion.put.security.length: 2
paths./organizations/{idOrg}/prefs/googleAppsVersion.put.security[0].api_key.length: 0
paths./organizations/{idOrg}/prefs/googleAppsVersion.put.security[1].api_token.length: 0
paths./organizations/{idOrg}/prefs/googleAppsVersion.put.summary: updateOrganizationsPrefsGoogleAppsVersionByIdOrg()
paths./organizations/{idOrg}/prefs/googleAppsVersion.put.tags.length: 1
paths./organizations/{idOrg}/prefs/googleAppsVersion.put.tags[0]: organization
paths./organizations/{idOrg}/prefs/orgInviteRestrict.delete.operationId: deleteOrganizationsPrefsOrgInviteRestrictByIdOrg
paths./organizations/{idOrg}/prefs/orgInviteRestrict.delete.parameters.length: 4
paths./organizations/{idOrg}/prefs/orgInviteRestrict.delete.parameters[0].description: idOrg
  or name
paths./organizations/{idOrg}/prefs/orgInviteRestrict.delete.parameters[0].in: path
paths./organizations/{idOrg}/prefs/orgInviteRestrict.delete.parameters[0].name: idOrg
paths./organizations/{idOrg}/prefs/orgInviteRestrict.delete.parameters[0].required: true
paths./organizations/{idOrg}/prefs/orgInviteRestrict.delete.parameters[0].type: string
paths./organizations/{idOrg}/prefs/orgInviteRestrict.delete.parameters[1].description: An
  email address with optional expansion tokens
paths./organizations/{idOrg}/prefs/orgInviteRestrict.delete.parameters[1].in: query
paths./organizations/{idOrg}/prefs/orgInviteRestrict.delete.parameters[1].name: value
paths./organizations/{idOrg}/prefs/orgInviteRestrict.delete.parameters[1].required: true
paths./organizations/{idOrg}/prefs/orgInviteRestrict.delete.parameters[1].type: string
paths./organizations/{idOrg}/prefs/orgInviteRestrict.delete.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./organizations/{idOrg}/prefs/orgInviteRestrict.delete.parameters[2].in: query
paths./organizations/{idOrg}/prefs/orgInviteRestrict.delete.parameters[2].name: key
paths./organizations/{idOrg}/prefs/orgInviteRestrict.delete.parameters[2].required: true
paths./organizations/{idOrg}/prefs/orgInviteRestrict.delete.parameters[2].type: string
paths./organizations/{idOrg}/prefs/orgInviteRestrict.delete.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/prefs/orgInviteRestrict.delete.parameters[3].in: query
paths./organizations/{idOrg}/prefs/orgInviteRestrict.delete.parameters[3].name: token
paths./organizations/{idOrg}/prefs/orgInviteRestrict.delete.parameters[3].required: true
paths./organizations/{idOrg}/prefs/orgInviteRestrict.delete.parameters[3].type: string
paths./organizations/{idOrg}/prefs/orgInviteRestrict.delete.responses.200.description: Success
paths./organizations/{idOrg}/prefs/orgInviteRestrict.delete.responses.400.description: Server
  rejection
paths./organizations/{idOrg}/prefs/orgInviteRestrict.delete.security.length: 2
paths./organizations/{idOrg}/prefs/orgInviteRestrict.delete.security[0].api_key.length: 0
paths./organizations/{idOrg}/prefs/orgInviteRestrict.delete.security[1].api_token.length: 0
paths./organizations/{idOrg}/prefs/orgInviteRestrict.delete.summary: deleteOrganizationsPrefsOrgInviteRestrictByIdOrg()
paths./organizations/{idOrg}/prefs/orgInviteRestrict.delete.tags.length: 1
paths./organizations/{idOrg}/prefs/orgInviteRestrict.delete.tags[0]: organization
paths./organizations/{idOrg}/prefs/orgInviteRestrict.put.operationId: updateOrganizationsPrefsOrgInviteRestrictByIdOrg
paths./organizations/{idOrg}/prefs/orgInviteRestrict.put.parameters.length: 4
paths./organizations/{idOrg}/prefs/orgInviteRestrict.put.parameters[0].description: idOrg
  or name
paths./organizations/{idOrg}/prefs/orgInviteRestrict.put.parameters[0].in: path
paths./organizations/{idOrg}/prefs/orgInviteRestrict.put.parameters[0].name: idOrg
paths./organizations/{idOrg}/prefs/orgInviteRestrict.put.parameters[0].required: true
paths./organizations/{idOrg}/prefs/orgInviteRestrict.put.parameters[0].type: string
paths./organizations/{idOrg}/prefs/orgInviteRestrict.put.parameters[1].description: Attributes
  of "Prefs Org Invite Restrict" to be updated.
paths./organizations/{idOrg}/prefs/orgInviteRestrict.put.parameters[1].in: body
paths./organizations/{idOrg}/prefs/orgInviteRestrict.put.parameters[1].name: body
paths./organizations/{idOrg}/prefs/orgInviteRestrict.put.parameters[1].required: true
paths./organizations/{idOrg}/prefs/orgInviteRestrict.put.parameters[1].schema.$ref: '#/definitions/prefs_orgInviteRestrict'
paths./organizations/{idOrg}/prefs/orgInviteRestrict.put.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./organizations/{idOrg}/prefs/orgInviteRestrict.put.parameters[2].in: query
paths./organizations/{idOrg}/prefs/orgInviteRestrict.put.parameters[2].name: key
paths./organizations/{idOrg}/prefs/orgInviteRestrict.put.parameters[2].required: true
paths./organizations/{idOrg}/prefs/orgInviteRestrict.put.parameters[2].type: string
paths./organizations/{idOrg}/prefs/orgInviteRestrict.put.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/prefs/orgInviteRestrict.put.parameters[3].in: query
paths./organizations/{idOrg}/prefs/orgInviteRestrict.put.parameters[3].name: token
paths./organizations/{idOrg}/prefs/orgInviteRestrict.put.parameters[3].required: true
paths./organizations/{idOrg}/prefs/orgInviteRestrict.put.parameters[3].type: string
paths./organizations/{idOrg}/prefs/orgInviteRestrict.put.responses.200.description: Success
paths./organizations/{idOrg}/prefs/orgInviteRestrict.put.responses.400.description: Server
  rejection
paths./organizations/{idOrg}/prefs/orgInviteRestrict.put.security.length: 2
paths./organizations/{idOrg}/prefs/orgInviteRestrict.put.security[0].api_key.length: 0
paths./organizations/{idOrg}/prefs/orgInviteRestrict.put.security[1].api_token.length: 0
paths./organizations/{idOrg}/prefs/orgInviteRestrict.put.summary: updateOrganizationsPrefsOrgInviteRestrictByIdOrg()
paths./organizations/{idOrg}/prefs/orgInviteRestrict.put.tags.length: 1
paths./organizations/{idOrg}/prefs/orgInviteRestrict.put.tags[0]: organization
paths./organizations/{idOrg}/prefs/permissionLevel.put.operationId: updateOrganizationsPrefsPermissionLevelByIdOrg
paths./organizations/{idOrg}/prefs/permissionLevel.put.parameters.length: 4
paths./organizations/{idOrg}/prefs/permissionLevel.put.parameters[0].description: idOrg
  or name
paths./organizations/{idOrg}/prefs/permissionLevel.put.parameters[0].in: path
paths./organizations/{idOrg}/prefs/permissionLevel.put.parameters[0].name: idOrg
paths./organizations/{idOrg}/prefs/permissionLevel.put.parameters[0].required: true
paths./organizations/{idOrg}/prefs/permissionLevel.put.parameters[0].type: string
paths./organizations/{idOrg}/prefs/permissionLevel.put.parameters[1].description: Attributes
  of "Prefs Permission Level" to be updated.
paths./organizations/{idOrg}/prefs/permissionLevel.put.parameters[1].in: body
paths./organizations/{idOrg}/prefs/permissionLevel.put.parameters[1].name: body
paths./organizations/{idOrg}/prefs/permissionLevel.put.parameters[1].required: true
paths./organizations/{idOrg}/prefs/permissionLevel.put.parameters[1].schema.$ref: '#/definitions/prefs_permissionLevel'
paths./organizations/{idOrg}/prefs/permissionLevel.put.parameters[2].description: <a
  href="https://trello.com/1/appKey/generate"  target="_blank">Generate your application
  key</a>
paths./organizations/{idOrg}/prefs/permissionLevel.put.parameters[2].in: query
paths./organizations/{idOrg}/prefs/permissionLevel.put.parameters[2].name: key
paths./organizations/{idOrg}/prefs/permissionLevel.put.parameters[2].required: true
paths./organizations/{idOrg}/prefs/permissionLevel.put.parameters[2].type: string
paths./organizations/{idOrg}/prefs/permissionLevel.put.parameters[3].description: <a
  href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/prefs/permissionLevel.put.parameters[3].in: query
paths./organizations/{idOrg}/prefs/permissionLevel.put.parameters[3].name: token
paths./organizations/{idOrg}/prefs/permissionLevel.put.parameters[3].required: true
paths./organizations/{idOrg}/prefs/permissionLevel.put.parameters[3].type: string
paths./organizations/{idOrg}/prefs/permissionLevel.put.responses.200.description: Success
paths./organizations/{idOrg}/prefs/permissionLevel.put.responses.400.description: Server
  rejection
paths./organizations/{idOrg}/prefs/permissionLevel.put.security.length: 2
paths./organizations/{idOrg}/prefs/permissionLevel.put.security[0].api_key.length: 0
paths./organizations/{idOrg}/prefs/permissionLevel.put.security[1].api_token.length: 0
paths./organizations/{idOrg}/prefs/permissionLevel.put.summary: updateOrganizationsPrefsPermissionLevelByIdOrg()
paths./organizations/{idOrg}/prefs/permissionLevel.put.tags.length: 1
paths./organizations/{idOrg}/prefs/permissionLevel.put.tags[0]: organization
paths./organizations/{idOrg}/website.put.operationId: updateOrganizationsWebsiteByIdOrg
paths./organizations/{idOrg}/website.put.parameters.length: 4
paths./organizations/{idOrg}/website.put.parameters[0].description: idOrg or name
paths./organizations/{idOrg}/website.put.parameters[0].in: path
paths./organizations/{idOrg}/website.put.parameters[0].name: idOrg
paths./organizations/{idOrg}/website.put.parameters[0].required: true
paths./organizations/{idOrg}/website.put.parameters[0].type: string
paths./organizations/{idOrg}/website.put.parameters[1].description: Attributes of
  "Organizations Website" to be updated.
paths./organizations/{idOrg}/website.put.parameters[1].in: body
paths./organizations/{idOrg}/website.put.parameters[1].name: body
paths./organizations/{idOrg}/website.put.parameters[1].required: true
paths./organizations/{idOrg}/website.put.parameters[1].schema.$ref: '#/definitions/organizations_website'
paths./organizations/{idOrg}/website.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./organizations/{idOrg}/website.put.parameters[2].in: query
paths./organizations/{idOrg}/website.put.parameters[2].name: key
paths./organizations/{idOrg}/website.put.parameters[2].required: true
paths./organizations/{idOrg}/website.put.parameters[2].type: string
paths./organizations/{idOrg}/website.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./organizations/{idOrg}/website.put.parameters[3].in: query
paths./organizations/{idOrg}/website.put.parameters[3].name: token
paths./organizations/{idOrg}/website.put.parameters[3].required: true
paths./organizations/{idOrg}/website.put.parameters[3].type: string
paths./organizations/{idOrg}/website.put.responses.200.description: Success
paths./organizations/{idOrg}/website.put.responses.400.description: Server rejection
paths./organizations/{idOrg}/website.put.security.length: 2
paths./organizations/{idOrg}/website.put.security[0].api_key.length: 0
paths./organizations/{idOrg}/website.put.security[1].api_token.length: 0
paths./organizations/{idOrg}/website.put.summary: updateOrganizationsWebsiteByIdOrg()
paths./organizations/{idOrg}/website.put.tags.length: 1
paths./organizations/{idOrg}/website.put.tags[0]: organization
paths./search.get.operationId: getSearch
paths./search.get.parameters.length: 22
paths./search.get.parameters[0].description: a string with a length from 1 to 16384
paths./search.get.parameters[0].in: query
paths./search.get.parameters[0].name: query
paths./search.get.parameters[0].required: true
paths./search.get.parameters[0].type: string
paths./search.get.parameters[1].default: mine
paths./search.get.parameters[1].description: A comma-separated list of objectIds,
  24-character hex strings
paths./search.get.parameters[1].in: query
paths./search.get.parameters[1].name: idBoards
paths./search.get.parameters[1].required: false
paths./search.get.parameters[1].type: string
paths./search.get.parameters[2].description: A comma-separated list of objectIds,
  24-character hex strings
paths./search.get.parameters[2].in: query
paths./search.get.parameters[2].name: idOrganizations
paths./search.get.parameters[2].required: true
paths./search.get.parameters[2].type: string
paths./search.get.parameters[3].description: A comma-separated list of objectIds,
  24-character hex strings
paths./search.get.parameters[3].in: query
paths./search.get.parameters[3].name: idCards
paths./search.get.parameters[3].required: false
paths./search.get.parameters[3].type: string
paths./search.get.parameters[4].default: all
paths./search.get.parameters[4].description: 'all or a comma-separated list of: actions,
  boards, cards, members or organizations'
paths./search.get.parameters[4].in: query
paths./search.get.parameters[4].name: modelTypes
paths./search.get.parameters[4].required: false
paths./search.get.parameters[4].type: string
paths./search.get.parameters[5].default: name and idOrganization
paths./search.get.parameters[5].description: 'all or a comma-separated list of: closed,
  dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited,
  labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,
  subscribed or url'
paths./search.get.parameters[5].in: query
paths./search.get.parameters[5].name: board_fields
paths./search.get.parameters[5].required: false
paths./search.get.parameters[5].type: string
paths./search.get.parameters[6].default: "10"
paths./search.get.parameters[6].description: a number from 1 to 1000
paths./search.get.parameters[6].in: query
paths./search.get.parameters[6].name: boards_limit
paths./search.get.parameters[6].required: false
paths./search.get.parameters[6].type: string
paths./search.get.parameters[7].default: all
paths./search.get.parameters[7].description: 'all or a comma-separated list of: badges,
  checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover,
  idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,
  manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url'
paths./search.get.parameters[7].in: query
paths./search.get.parameters[7].name: card_fields
paths./search.get.parameters[7].required: false
paths./search.get.parameters[7].type: string
paths./search.get.parameters[8].default: "10"
paths./search.get.parameters[8].description: a number from 1 to 1000
paths./search.get.parameters[8].in: query
paths./search.get.parameters[8].name: cards_limit
paths./search.get.parameters[8].required: false
paths./search.get.parameters[8].type: string
paths./search.get.parameters[9].default: "0"
paths./search.get.parameters[9].description: a number from 0 to 100
paths./search.get.parameters[9].in: query
paths./search.get.parameters[9].name: cards_page
paths./search.get.parameters[9].required: false
paths./search.get.parameters[9].type: string
paths./search.get.parameters[10].description: ' true or false'
paths./search.get.parameters[10].in: query
paths./search.get.parameters[10].name: card_board
paths./search.get.parameters[10].required: false
paths./search.get.parameters[10].type: string
paths./search.get.parameters[11].description: ' true or false'
paths./search.get.parameters[11].in: query
paths./search.get.parameters[11].name: card_list
paths./search.get.parameters[11].required: false
paths./search.get.parameters[11].type: string
paths./search.get.parameters[12].description: ' true or false'
paths./search.get.parameters[12].in: query
paths./search.get.parameters[12].name: card_members
paths./search.get.parameters[12].required: false
paths./search.get.parameters[12].type: string
paths./search.get.parameters[13].description: ' true or false'
paths./search.get.parameters[13].in: query
paths./search.get.parameters[13].name: card_stickers
paths./search.get.parameters[13].required: false
paths./search.get.parameters[13].type: string
paths./search.get.parameters[14].description: A boolean value or &quot;cover&quot;
  for only card cover attachments
paths./search.get.parameters[14].in: query
paths./search.get.parameters[14].name: card_attachments
paths./search.get.parameters[14].required: false
paths./search.get.parameters[14].type: string
paths./search.get.parameters[15].default: name and displayName
paths./search.get.parameters[15].description: 'all or a comma-separated list of: billableMemberCount,
  desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships,
  name, powerUps, prefs, premiumFeatures, products, url or website'
paths./search.get.parameters[15].in: query
paths./search.get.parameters[15].name: organization_fields
paths./search.get.parameters[15].required: false
paths./search.get.parameters[15].type: string
paths./search.get.parameters[16].default: "10"
paths./search.get.parameters[16].description: a number from 1 to 1000
paths./search.get.parameters[16].in: query
paths./search.get.parameters[16].name: organizations_limit
paths./search.get.parameters[16].required: false
paths./search.get.parameters[16].type: string
paths./search.get.parameters[17].default: avatarHash, fullName, initials, username
  and confirmed
paths./search.get.parameters[17].description: 'all or a comma-separated list of: avatarHash,
  bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,
  status, url or username'
paths./search.get.parameters[17].in: query
paths./search.get.parameters[17].name: member_fields
paths./search.get.parameters[17].required: false
paths./search.get.parameters[17].type: string
paths./search.get.parameters[18].default: "10"
paths./search.get.parameters[18].description: a number from 1 to 1000
paths./search.get.parameters[18].in: query
paths./search.get.parameters[18].name: members_limit
paths./search.get.parameters[18].required: false
paths./search.get.parameters[18].type: string
paths./search.get.parameters[19].description: ' true or false'
paths./search.get.parameters[19].in: query
paths./search.get.parameters[19].name: partial
paths./search.get.parameters[19].required: false
paths./search.get.parameters[19].type: string
paths./search.get.parameters[20].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./search.get.parameters[20].in: query
paths./search.get.parameters[20].name: key
paths./search.get.parameters[20].required: true
paths./search.get.parameters[20].type: string
paths./search.get.parameters[21].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./search.get.parameters[21].in: query
paths./search.get.parameters[21].name: token
paths./search.get.parameters[21].required: true
paths./search.get.parameters[21].type: string
paths./search.get.responses.200.description: Success
paths./search.get.responses.400.description: Server rejection
paths./search.get.summary: getSearch()
paths./search.get.tags.length: 1
paths./search.get.tags[0]: search
paths./search/members.get.operationId: getSearchMembers
paths./search/members.get.parameters.length: 7
paths./search/members.get.parameters[0].description: a string with a length from 1
  to 16384
paths./search/members.get.parameters[0].in: query
paths./search/members.get.parameters[0].name: query
paths./search/members.get.parameters[0].required: true
paths./search/members.get.parameters[0].type: string
paths./search/members.get.parameters[1].default: "8"
paths./search/members.get.parameters[1].description: a number from 1 to 20
paths./search/members.get.parameters[1].in: query
paths./search/members.get.parameters[1].name: limit
paths./search/members.get.parameters[1].required: false
paths./search/members.get.parameters[1].type: string
paths./search/members.get.parameters[2].description: An id, or null
paths./search/members.get.parameters[2].in: query
paths./search/members.get.parameters[2].name: idBoard
paths./search/members.get.parameters[2].required: false
paths./search/members.get.parameters[2].type: string
paths./search/members.get.parameters[3].description: An id, or null
paths./search/members.get.parameters[3].in: query
paths./search/members.get.parameters[3].name: idOrganization
paths./search/members.get.parameters[3].required: false
paths./search/members.get.parameters[3].type: string
paths./search/members.get.parameters[4].description: A boolean
paths./search/members.get.parameters[4].in: query
paths./search/members.get.parameters[4].name: onlyOrgMembers
paths./search/members.get.parameters[4].required: false
paths./search/members.get.parameters[4].type: string
paths./search/members.get.parameters[5].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./search/members.get.parameters[5].in: query
paths./search/members.get.parameters[5].name: key
paths./search/members.get.parameters[5].required: true
paths./search/members.get.parameters[5].type: string
paths./search/members.get.parameters[6].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./search/members.get.parameters[6].in: query
paths./search/members.get.parameters[6].name: token
paths./search/members.get.parameters[6].required: true
paths./search/members.get.parameters[6].type: string
paths./search/members.get.responses.200.description: Success
paths./search/members.get.responses.400.description: Server rejection
paths./search/members.get.summary: getSearchMembers()
paths./search/members.get.tags.length: 1
paths./search/members.get.tags[0]: search
paths./sessions.post.operationId: addSessions
paths./sessions.post.parameters.length: 3
paths./sessions.post.parameters[0].description: Attributes of "Sessions" to be added.
paths./sessions.post.parameters[0].in: body
paths./sessions.post.parameters[0].name: body
paths./sessions.post.parameters[0].required: true
paths./sessions.post.parameters[0].schema.$ref: '#/definitions/sessions'
paths./sessions.post.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./sessions.post.parameters[1].in: query
paths./sessions.post.parameters[1].name: key
paths./sessions.post.parameters[1].required: true
paths./sessions.post.parameters[1].type: string
paths./sessions.post.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./sessions.post.parameters[2].in: query
paths./sessions.post.parameters[2].name: token
paths./sessions.post.parameters[2].required: true
paths./sessions.post.parameters[2].type: string
paths./sessions.post.responses.200.description: Success
paths./sessions.post.responses.400.description: Server rejection
paths./sessions.post.security.length: 2
paths./sessions.post.security[0].api_key.length: 0
paths./sessions.post.security[1].api_token.length: 0
paths./sessions.post.summary: addSessions()
paths./sessions.post.tags.length: 1
paths./sessions.post.tags[0]: session
paths./sessions/{idSession}.put.operationId: updateSessionsByIdSession
paths./sessions/{idSession}.put.parameters.length: 4
paths./sessions/{idSession}.put.parameters[0].description: idSession
paths./sessions/{idSession}.put.parameters[0].in: path
paths./sessions/{idSession}.put.parameters[0].name: idSession
paths./sessions/{idSession}.put.parameters[0].required: true
paths./sessions/{idSession}.put.parameters[0].type: string
paths./sessions/{idSession}.put.parameters[1].description: Attributes of "Sessions"
  to be updated.
paths./sessions/{idSession}.put.parameters[1].in: body
paths./sessions/{idSession}.put.parameters[1].name: body
paths./sessions/{idSession}.put.parameters[1].required: true
paths./sessions/{idSession}.put.parameters[1].schema.$ref: '#/definitions/sessions'
paths./sessions/{idSession}.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./sessions/{idSession}.put.parameters[2].in: query
paths./sessions/{idSession}.put.parameters[2].name: key
paths./sessions/{idSession}.put.parameters[2].required: true
paths./sessions/{idSession}.put.parameters[2].type: string
paths./sessions/{idSession}.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./sessions/{idSession}.put.parameters[3].in: query
paths./sessions/{idSession}.put.parameters[3].name: token
paths./sessions/{idSession}.put.parameters[3].required: true
paths./sessions/{idSession}.put.parameters[3].type: string
paths./sessions/{idSession}.put.responses.200.description: Success
paths./sessions/{idSession}.put.responses.400.description: Server rejection
paths./sessions/{idSession}.put.security.length: 2
paths./sessions/{idSession}.put.security[0].api_key.length: 0
paths./sessions/{idSession}.put.security[1].api_token.length: 0
paths./sessions/{idSession}.put.summary: updateSessionsByIdSession()
paths./sessions/{idSession}.put.tags.length: 1
paths./sessions/{idSession}.put.tags[0]: session
paths./sessions/{idSession}/status.put.operationId: updateSessionsStatusByIdSession
paths./sessions/{idSession}/status.put.parameters.length: 4
paths./sessions/{idSession}/status.put.parameters[0].description: idSession
paths./sessions/{idSession}/status.put.parameters[0].in: path
paths./sessions/{idSession}/status.put.parameters[0].name: idSession
paths./sessions/{idSession}/status.put.parameters[0].required: true
paths./sessions/{idSession}/status.put.parameters[0].type: string
paths./sessions/{idSession}/status.put.parameters[1].description: Attributes of "Sessions
  Status" to be updated.
paths./sessions/{idSession}/status.put.parameters[1].in: body
paths./sessions/{idSession}/status.put.parameters[1].name: body
paths./sessions/{idSession}/status.put.parameters[1].required: true
paths./sessions/{idSession}/status.put.parameters[1].schema.$ref: '#/definitions/sessions_status'
paths./sessions/{idSession}/status.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./sessions/{idSession}/status.put.parameters[2].in: query
paths./sessions/{idSession}/status.put.parameters[2].name: key
paths./sessions/{idSession}/status.put.parameters[2].required: true
paths./sessions/{idSession}/status.put.parameters[2].type: string
paths./sessions/{idSession}/status.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./sessions/{idSession}/status.put.parameters[3].in: query
paths./sessions/{idSession}/status.put.parameters[3].name: token
paths./sessions/{idSession}/status.put.parameters[3].required: true
paths./sessions/{idSession}/status.put.parameters[3].type: string
paths./sessions/{idSession}/status.put.responses.200.description: Success
paths./sessions/{idSession}/status.put.responses.400.description: Server rejection
paths./sessions/{idSession}/status.put.security.length: 2
paths./sessions/{idSession}/status.put.security[0].api_key.length: 0
paths./sessions/{idSession}/status.put.security[1].api_token.length: 0
paths./sessions/{idSession}/status.put.summary: updateSessionsStatusByIdSession()
paths./sessions/{idSession}/status.put.tags.length: 1
paths./sessions/{idSession}/status.put.tags[0]: session
paths./sessions/socket.get.description: This is the route for WebSocket requests.  See
  the socket API reference for a description of WebSocket usage.
paths./sessions/socket.get.operationId: getSessionsSocket
paths./sessions/socket.get.parameters.length: 2
paths./sessions/socket.get.parameters[0].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./sessions/socket.get.parameters[0].in: query
paths./sessions/socket.get.parameters[0].name: key
paths./sessions/socket.get.parameters[0].required: true
paths./sessions/socket.get.parameters[0].type: string
paths./sessions/socket.get.parameters[1].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./sessions/socket.get.parameters[1].in: query
paths./sessions/socket.get.parameters[1].name: token
paths./sessions/socket.get.parameters[1].required: true
paths./sessions/socket.get.parameters[1].type: string
paths./sessions/socket.get.responses.200.description: Success
paths./sessions/socket.get.responses.400.description: Server rejection
paths./sessions/socket.get.security.length: 2
paths./sessions/socket.get.security[0].api_key.length: 0
paths./sessions/socket.get.security[1].api_token.length: 0
paths./sessions/socket.get.summary: getSessionsSocket()
paths./sessions/socket.get.tags.length: 1
paths./sessions/socket.get.tags[0]: session
paths./tokens/{token}.delete.operationId: deleteTokensByToken
paths./tokens/{token}.delete.parameters.length: 3
paths./tokens/{token}.delete.parameters[0].description: token
paths./tokens/{token}.delete.parameters[0].in: path
paths./tokens/{token}.delete.parameters[0].name: token
paths./tokens/{token}.delete.parameters[0].required: true
paths./tokens/{token}.delete.parameters[0].type: string
paths./tokens/{token}.delete.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./tokens/{token}.delete.parameters[1].in: query
paths./tokens/{token}.delete.parameters[1].name: key
paths./tokens/{token}.delete.parameters[1].required: true
paths./tokens/{token}.delete.parameters[1].type: string
paths./tokens/{token}.delete.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./tokens/{token}.delete.parameters[2].in: query
paths./tokens/{token}.delete.parameters[2].name: token
paths./tokens/{token}.delete.parameters[2].required: true
paths./tokens/{token}.delete.parameters[2].type: string
paths./tokens/{token}.delete.responses.200.description: Success
paths./tokens/{token}.delete.responses.400.description: Server rejection
paths./tokens/{token}.delete.security.length: 2
paths./tokens/{token}.delete.security[0].api_key.length: 0
paths./tokens/{token}.delete.security[1].api_token.length: 0
paths./tokens/{token}.delete.summary: deleteTokensByToken()
paths./tokens/{token}.delete.tags.length: 1
paths./tokens/{token}.delete.tags[0]: token
paths./tokens/{token}.get.operationId: getTokensByToken
paths./tokens/{token}.get.parameters.length: 5
paths./tokens/{token}.get.parameters[0].description: token
paths./tokens/{token}.get.parameters[0].in: path
paths./tokens/{token}.get.parameters[0].name: token
paths./tokens/{token}.get.parameters[0].required: true
paths./tokens/{token}.get.parameters[0].type: string
paths./tokens/{token}.get.parameters[1].default: all
paths./tokens/{token}.get.parameters[1].description: 'all or a comma-separated list
  of: dateCreated, dateExpires, idMember, identifier or permissions'
paths./tokens/{token}.get.parameters[1].in: query
paths./tokens/{token}.get.parameters[1].name: fields
paths./tokens/{token}.get.parameters[1].required: false
paths./tokens/{token}.get.parameters[1].type: string
paths./tokens/{token}.get.parameters[2].description: ' true or false'
paths./tokens/{token}.get.parameters[2].in: query
paths./tokens/{token}.get.parameters[2].name: webhooks
paths./tokens/{token}.get.parameters[2].required: false
paths./tokens/{token}.get.parameters[2].type: string
paths./tokens/{token}.get.parameters[3].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./tokens/{token}.get.parameters[3].in: query
paths./tokens/{token}.get.parameters[3].name: key
paths./tokens/{token}.get.parameters[3].required: true
paths./tokens/{token}.get.parameters[3].type: string
paths./tokens/{token}.get.parameters[4].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./tokens/{token}.get.parameters[4].in: query
paths./tokens/{token}.get.parameters[4].name: token
paths./tokens/{token}.get.parameters[4].required: true
paths./tokens/{token}.get.parameters[4].type: string
paths./tokens/{token}.get.responses.200.description: Success
paths./tokens/{token}.get.responses.400.description: Server rejection
paths./tokens/{token}.get.security.length: 2
paths./tokens/{token}.get.security[0].api_key.length: 0
paths./tokens/{token}.get.security[1].api_token.length: 0
paths./tokens/{token}.get.summary: getTokensByToken()
paths./tokens/{token}.get.tags.length: 1
paths./tokens/{token}.get.tags[0]: token
paths./tokens/{token}/{field}.get.operationId: getTokensByTokenByField
paths./tokens/{token}/{field}.get.parameters.length: 4
paths./tokens/{token}/{field}.get.parameters[0].description: token
paths./tokens/{token}/{field}.get.parameters[0].in: path
paths./tokens/{token}/{field}.get.parameters[0].name: token
paths./tokens/{token}/{field}.get.parameters[0].required: true
paths./tokens/{token}/{field}.get.parameters[0].type: string
paths./tokens/{token}/{field}.get.parameters[1].description: field
paths./tokens/{token}/{field}.get.parameters[1].in: path
paths./tokens/{token}/{field}.get.parameters[1].name: field
paths./tokens/{token}/{field}.get.parameters[1].required: true
paths./tokens/{token}/{field}.get.parameters[1].type: string
paths./tokens/{token}/{field}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./tokens/{token}/{field}.get.parameters[2].in: query
paths./tokens/{token}/{field}.get.parameters[2].name: key
paths./tokens/{token}/{field}.get.parameters[2].required: true
paths./tokens/{token}/{field}.get.parameters[2].type: string
paths./tokens/{token}/{field}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./tokens/{token}/{field}.get.parameters[3].in: query
paths./tokens/{token}/{field}.get.parameters[3].name: token
paths./tokens/{token}/{field}.get.parameters[3].required: true
paths./tokens/{token}/{field}.get.parameters[3].type: string
paths./tokens/{token}/{field}.get.responses.200.description: Success
paths./tokens/{token}/{field}.get.responses.400.description: Server rejection
paths./tokens/{token}/{field}.get.summary: getTokensByTokenByField()
paths./tokens/{token}/{field}.get.tags.length: 1
paths./tokens/{token}/{field}.get.tags[0]: token
paths./tokens/{token}/member.get.operationId: getTokensMemberByToken
paths./tokens/{token}/member.get.parameters.length: 4
paths./tokens/{token}/member.get.parameters[0].description: token
paths./tokens/{token}/member.get.parameters[0].in: path
paths./tokens/{token}/member.get.parameters[0].name: token
paths./tokens/{token}/member.get.parameters[0].required: true
paths./tokens/{token}/member.get.parameters[0].type: string
paths./tokens/{token}/member.get.parameters[1].default: all
paths./tokens/{token}/member.get.parameters[1].description: 'all or a comma-separated
  list of: avatarHash, avatarSource, bio, bioData, confirmed, email, fullName, gravatarHash,
  idBoards, idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials, loginTypes,
  memberType, oneTimeMessagesDismissed, prefs, premiumFeatures, products, status,
  status, trophies, uploadedAvatarHash, url or username'
paths./tokens/{token}/member.get.parameters[1].in: query
paths./tokens/{token}/member.get.parameters[1].name: fields
paths./tokens/{token}/member.get.parameters[1].required: false
paths./tokens/{token}/member.get.parameters[1].type: string
paths./tokens/{token}/member.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./tokens/{token}/member.get.parameters[2].in: query
paths./tokens/{token}/member.get.parameters[2].name: key
paths./tokens/{token}/member.get.parameters[2].required: true
paths./tokens/{token}/member.get.parameters[2].type: string
paths./tokens/{token}/member.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./tokens/{token}/member.get.parameters[3].in: query
paths./tokens/{token}/member.get.parameters[3].name: token
paths./tokens/{token}/member.get.parameters[3].required: true
paths./tokens/{token}/member.get.parameters[3].type: string
paths./tokens/{token}/member.get.responses.200.description: Success
paths./tokens/{token}/member.get.responses.400.description: Server rejection
paths./tokens/{token}/member.get.security.length: 2
paths./tokens/{token}/member.get.security[0].api_key.length: 0
paths./tokens/{token}/member.get.security[1].api_token.length: 0
paths./tokens/{token}/member.get.summary: getTokensMemberByToken()
paths./tokens/{token}/member.get.tags.length: 1
paths./tokens/{token}/member.get.tags[0]: token
paths./tokens/{token}/member/{field}.get.operationId: getTokensMemberByTokenByField
paths./tokens/{token}/member/{field}.get.parameters.length: 4
paths./tokens/{token}/member/{field}.get.parameters[0].description: token
paths./tokens/{token}/member/{field}.get.parameters[0].in: path
paths./tokens/{token}/member/{field}.get.parameters[0].name: token
paths./tokens/{token}/member/{field}.get.parameters[0].required: true
paths./tokens/{token}/member/{field}.get.parameters[0].type: string
paths./tokens/{token}/member/{field}.get.parameters[1].description: field
paths./tokens/{token}/member/{field}.get.parameters[1].in: path
paths./tokens/{token}/member/{field}.get.parameters[1].name: field
paths./tokens/{token}/member/{field}.get.parameters[1].required: true
paths./tokens/{token}/member/{field}.get.parameters[1].type: string
paths./tokens/{token}/member/{field}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./tokens/{token}/member/{field}.get.parameters[2].in: query
paths./tokens/{token}/member/{field}.get.parameters[2].name: key
paths./tokens/{token}/member/{field}.get.parameters[2].required: true
paths./tokens/{token}/member/{field}.get.parameters[2].type: string
paths./tokens/{token}/member/{field}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./tokens/{token}/member/{field}.get.parameters[3].in: query
paths./tokens/{token}/member/{field}.get.parameters[3].name: token
paths./tokens/{token}/member/{field}.get.parameters[3].required: true
paths./tokens/{token}/member/{field}.get.parameters[3].type: string
paths./tokens/{token}/member/{field}.get.responses.200.description: Success
paths./tokens/{token}/member/{field}.get.responses.400.description: Server rejection
paths./tokens/{token}/member/{field}.get.security.length: 2
paths./tokens/{token}/member/{field}.get.security[0].api_key.length: 0
paths./tokens/{token}/member/{field}.get.security[1].api_token.length: 0
paths./tokens/{token}/member/{field}.get.summary: getTokensMemberByTokenByField()
paths./tokens/{token}/member/{field}.get.tags.length: 1
paths./tokens/{token}/member/{field}.get.tags[0]: token
paths./tokens/{token}/webhooks.get.operationId: getTokensWebhooksByToken
paths./tokens/{token}/webhooks.get.parameters.length: 3
paths./tokens/{token}/webhooks.get.parameters[0].description: token
paths./tokens/{token}/webhooks.get.parameters[0].in: path
paths./tokens/{token}/webhooks.get.parameters[0].name: token
paths./tokens/{token}/webhooks.get.parameters[0].required: true
paths./tokens/{token}/webhooks.get.parameters[0].type: string
paths./tokens/{token}/webhooks.get.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./tokens/{token}/webhooks.get.parameters[1].in: query
paths./tokens/{token}/webhooks.get.parameters[1].name: key
paths./tokens/{token}/webhooks.get.parameters[1].required: true
paths./tokens/{token}/webhooks.get.parameters[1].type: string
paths./tokens/{token}/webhooks.get.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./tokens/{token}/webhooks.get.parameters[2].in: query
paths./tokens/{token}/webhooks.get.parameters[2].name: token
paths./tokens/{token}/webhooks.get.parameters[2].required: true
paths./tokens/{token}/webhooks.get.parameters[2].type: string
paths./tokens/{token}/webhooks.get.responses.200.description: Success
paths./tokens/{token}/webhooks.get.responses.400.description: Server rejection
paths./tokens/{token}/webhooks.get.security.length: 2
paths./tokens/{token}/webhooks.get.security[0].api_key.length: 0
paths./tokens/{token}/webhooks.get.security[1].api_token.length: 0
paths./tokens/{token}/webhooks.get.summary: getTokensWebhooksByToken()
paths./tokens/{token}/webhooks.get.tags.length: 1
paths./tokens/{token}/webhooks.get.tags[0]: token
paths./tokens/{token}/webhooks.post.operationId: addTokensWebhooksByToken
paths./tokens/{token}/webhooks.post.parameters.length: 4
paths./tokens/{token}/webhooks.post.parameters[0].description: token
paths./tokens/{token}/webhooks.post.parameters[0].in: path
paths./tokens/{token}/webhooks.post.parameters[0].name: token
paths./tokens/{token}/webhooks.post.parameters[0].required: true
paths./tokens/{token}/webhooks.post.parameters[0].type: string
paths./tokens/{token}/webhooks.post.parameters[1].description: Attributes of "Tokens
  Webhooks" to be added.
paths./tokens/{token}/webhooks.post.parameters[1].in: body
paths./tokens/{token}/webhooks.post.parameters[1].name: body
paths./tokens/{token}/webhooks.post.parameters[1].required: true
paths./tokens/{token}/webhooks.post.parameters[1].schema.$ref: '#/definitions/tokens_webhooks'
paths./tokens/{token}/webhooks.post.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./tokens/{token}/webhooks.post.parameters[2].in: query
paths./tokens/{token}/webhooks.post.parameters[2].name: key
paths./tokens/{token}/webhooks.post.parameters[2].required: true
paths./tokens/{token}/webhooks.post.parameters[2].type: string
paths./tokens/{token}/webhooks.post.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./tokens/{token}/webhooks.post.parameters[3].in: query
paths./tokens/{token}/webhooks.post.parameters[3].name: token
paths./tokens/{token}/webhooks.post.parameters[3].required: true
paths./tokens/{token}/webhooks.post.parameters[3].type: string
paths./tokens/{token}/webhooks.post.responses.200.description: Success
paths./tokens/{token}/webhooks.post.responses.400.description: Server rejection
paths./tokens/{token}/webhooks.post.security.length: 2
paths./tokens/{token}/webhooks.post.security[0].api_key.length: 0
paths./tokens/{token}/webhooks.post.security[1].api_token.length: 0
paths./tokens/{token}/webhooks.post.summary: addTokensWebhooksByToken()
paths./tokens/{token}/webhooks.post.tags.length: 1
paths./tokens/{token}/webhooks.post.tags[0]: token
paths./tokens/{token}/webhooks.put.operationId: updateTokensWebhooksByToken
paths./tokens/{token}/webhooks.put.parameters.length: 4
paths./tokens/{token}/webhooks.put.parameters[0].description: token
paths./tokens/{token}/webhooks.put.parameters[0].in: path
paths./tokens/{token}/webhooks.put.parameters[0].name: token
paths./tokens/{token}/webhooks.put.parameters[0].required: true
paths./tokens/{token}/webhooks.put.parameters[0].type: string
paths./tokens/{token}/webhooks.put.parameters[1].description: Attributes of "Tokens
  Webhooks" to be updated.
paths./tokens/{token}/webhooks.put.parameters[1].in: body
paths./tokens/{token}/webhooks.put.parameters[1].name: body
paths./tokens/{token}/webhooks.put.parameters[1].required: true
paths./tokens/{token}/webhooks.put.parameters[1].schema.$ref: '#/definitions/tokens_webhooks'
paths./tokens/{token}/webhooks.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./tokens/{token}/webhooks.put.parameters[2].in: query
paths./tokens/{token}/webhooks.put.parameters[2].name: key
paths./tokens/{token}/webhooks.put.parameters[2].required: true
paths./tokens/{token}/webhooks.put.parameters[2].type: string
paths./tokens/{token}/webhooks.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./tokens/{token}/webhooks.put.parameters[3].in: query
paths./tokens/{token}/webhooks.put.parameters[3].name: token
paths./tokens/{token}/webhooks.put.parameters[3].required: true
paths./tokens/{token}/webhooks.put.parameters[3].type: string
paths./tokens/{token}/webhooks.put.responses.200.description: Success
paths./tokens/{token}/webhooks.put.responses.400.description: Server rejection
paths./tokens/{token}/webhooks.put.security.length: 2
paths./tokens/{token}/webhooks.put.security[0].api_key.length: 0
paths./tokens/{token}/webhooks.put.security[1].api_token.length: 0
paths./tokens/{token}/webhooks.put.summary: updateTokensWebhooksByToken()
paths./tokens/{token}/webhooks.put.tags.length: 1
paths./tokens/{token}/webhooks.put.tags[0]: token
paths./tokens/{token}/webhooks/{idWebhook}.delete.operationId: deleteTokensWebhooksByTokenByIdWebhook
paths./tokens/{token}/webhooks/{idWebhook}.delete.parameters.length: 4
paths./tokens/{token}/webhooks/{idWebhook}.delete.parameters[0].description: token
paths./tokens/{token}/webhooks/{idWebhook}.delete.parameters[0].in: path
paths./tokens/{token}/webhooks/{idWebhook}.delete.parameters[0].name: token
paths./tokens/{token}/webhooks/{idWebhook}.delete.parameters[0].required: true
paths./tokens/{token}/webhooks/{idWebhook}.delete.parameters[0].type: string
paths./tokens/{token}/webhooks/{idWebhook}.delete.parameters[1].description: idWebhook
paths./tokens/{token}/webhooks/{idWebhook}.delete.parameters[1].in: path
paths./tokens/{token}/webhooks/{idWebhook}.delete.parameters[1].name: idWebhook
paths./tokens/{token}/webhooks/{idWebhook}.delete.parameters[1].required: true
paths./tokens/{token}/webhooks/{idWebhook}.delete.parameters[1].type: string
paths./tokens/{token}/webhooks/{idWebhook}.delete.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./tokens/{token}/webhooks/{idWebhook}.delete.parameters[2].in: query
paths./tokens/{token}/webhooks/{idWebhook}.delete.parameters[2].name: key
paths./tokens/{token}/webhooks/{idWebhook}.delete.parameters[2].required: true
paths./tokens/{token}/webhooks/{idWebhook}.delete.parameters[2].type: string
paths./tokens/{token}/webhooks/{idWebhook}.delete.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./tokens/{token}/webhooks/{idWebhook}.delete.parameters[3].in: query
paths./tokens/{token}/webhooks/{idWebhook}.delete.parameters[3].name: token
paths./tokens/{token}/webhooks/{idWebhook}.delete.parameters[3].required: true
paths./tokens/{token}/webhooks/{idWebhook}.delete.parameters[3].type: string
paths./tokens/{token}/webhooks/{idWebhook}.delete.responses.200.description: Success
paths./tokens/{token}/webhooks/{idWebhook}.delete.responses.400.description: Server
  rejection
paths./tokens/{token}/webhooks/{idWebhook}.delete.security.length: 2
paths./tokens/{token}/webhooks/{idWebhook}.delete.security[0].api_key.length: 0
paths./tokens/{token}/webhooks/{idWebhook}.delete.security[1].api_token.length: 0
paths./tokens/{token}/webhooks/{idWebhook}.delete.summary: deleteTokensWebhooksByTokenByIdWebhook()
paths./tokens/{token}/webhooks/{idWebhook}.delete.tags.length: 1
paths./tokens/{token}/webhooks/{idWebhook}.delete.tags[0]: token
paths./tokens/{token}/webhooks/{idWebhook}.get.operationId: getTokensWebhooksByTokenByIdWebhook
paths./tokens/{token}/webhooks/{idWebhook}.get.parameters.length: 4
paths./tokens/{token}/webhooks/{idWebhook}.get.parameters[0].description: token
paths./tokens/{token}/webhooks/{idWebhook}.get.parameters[0].in: path
paths./tokens/{token}/webhooks/{idWebhook}.get.parameters[0].name: token
paths./tokens/{token}/webhooks/{idWebhook}.get.parameters[0].required: true
paths./tokens/{token}/webhooks/{idWebhook}.get.parameters[0].type: string
paths./tokens/{token}/webhooks/{idWebhook}.get.parameters[1].description: idWebhook
paths./tokens/{token}/webhooks/{idWebhook}.get.parameters[1].in: path
paths./tokens/{token}/webhooks/{idWebhook}.get.parameters[1].name: idWebhook
paths./tokens/{token}/webhooks/{idWebhook}.get.parameters[1].required: true
paths./tokens/{token}/webhooks/{idWebhook}.get.parameters[1].type: string
paths./tokens/{token}/webhooks/{idWebhook}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./tokens/{token}/webhooks/{idWebhook}.get.parameters[2].in: query
paths./tokens/{token}/webhooks/{idWebhook}.get.parameters[2].name: key
paths./tokens/{token}/webhooks/{idWebhook}.get.parameters[2].required: true
paths./tokens/{token}/webhooks/{idWebhook}.get.parameters[2].type: string
paths./tokens/{token}/webhooks/{idWebhook}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./tokens/{token}/webhooks/{idWebhook}.get.parameters[3].in: query
paths./tokens/{token}/webhooks/{idWebhook}.get.parameters[3].name: token
paths./tokens/{token}/webhooks/{idWebhook}.get.parameters[3].required: true
paths./tokens/{token}/webhooks/{idWebhook}.get.parameters[3].type: string
paths./tokens/{token}/webhooks/{idWebhook}.get.responses.200.description: Success
paths./tokens/{token}/webhooks/{idWebhook}.get.responses.400.description: Server rejection
paths./tokens/{token}/webhooks/{idWebhook}.get.security.length: 2
paths./tokens/{token}/webhooks/{idWebhook}.get.security[0].api_key.length: 0
paths./tokens/{token}/webhooks/{idWebhook}.get.security[1].api_token.length: 0
paths./tokens/{token}/webhooks/{idWebhook}.get.summary: getTokensWebhooksByTokenByIdWebhook()
paths./tokens/{token}/webhooks/{idWebhook}.get.tags.length: 1
paths./tokens/{token}/webhooks/{idWebhook}.get.tags[0]: token
paths./types/{id}.get.operationId: getTypesById
paths./types/{id}.get.parameters.length: 3
paths./types/{id}.get.parameters[0].description: id
paths./types/{id}.get.parameters[0].in: path
paths./types/{id}.get.parameters[0].name: id
paths./types/{id}.get.parameters[0].required: true
paths./types/{id}.get.parameters[0].type: string
paths./types/{id}.get.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./types/{id}.get.parameters[1].in: query
paths./types/{id}.get.parameters[1].name: key
paths./types/{id}.get.parameters[1].required: true
paths./types/{id}.get.parameters[1].type: string
paths./types/{id}.get.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./types/{id}.get.parameters[2].in: query
paths./types/{id}.get.parameters[2].name: token
paths./types/{id}.get.parameters[2].required: true
paths./types/{id}.get.parameters[2].type: string
paths./types/{id}.get.responses.200.description: Success
paths./types/{id}.get.responses.400.description: Server rejection
paths./types/{id}.get.security.length: 2
paths./types/{id}.get.security[0].api_key.length: 0
paths./types/{id}.get.security[1].api_token.length: 0
paths./types/{id}.get.summary: getTypesById()
paths./types/{id}.get.tags.length: 1
paths./types/{id}.get.tags[0]: type
paths./webhooks.post.operationId: addWebhooks
paths./webhooks.post.parameters.length: 3
paths./webhooks.post.parameters[0].description: Attributes of "Webhooks" to be added.
paths./webhooks.post.parameters[0].in: body
paths./webhooks.post.parameters[0].name: body
paths./webhooks.post.parameters[0].required: true
paths./webhooks.post.parameters[0].schema.$ref: '#/definitions/webhooks'
paths./webhooks.post.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./webhooks.post.parameters[1].in: query
paths./webhooks.post.parameters[1].name: key
paths./webhooks.post.parameters[1].required: true
paths./webhooks.post.parameters[1].type: string
paths./webhooks.post.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./webhooks.post.parameters[2].in: query
paths./webhooks.post.parameters[2].name: token
paths./webhooks.post.parameters[2].required: true
paths./webhooks.post.parameters[2].type: string
paths./webhooks.post.responses.200.description: Success
paths./webhooks.post.responses.400.description: Server rejection
paths./webhooks.post.security.length: 2
paths./webhooks.post.security[0].api_key.length: 0
paths./webhooks.post.security[1].api_token.length: 0
paths./webhooks.post.summary: addWebhooks()
paths./webhooks.post.tags.length: 1
paths./webhooks.post.tags[0]: webhook
paths./webhooks/.put.operationId: updateWebhooks
paths./webhooks/.put.parameters.length: 3
paths./webhooks/.put.parameters[0].description: Attributes of "Webhooks" to be updated.
paths./webhooks/.put.parameters[0].in: body
paths./webhooks/.put.parameters[0].name: body
paths./webhooks/.put.parameters[0].required: true
paths./webhooks/.put.parameters[0].schema.$ref: '#/definitions/webhooks'
paths./webhooks/.put.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./webhooks/.put.parameters[1].in: query
paths./webhooks/.put.parameters[1].name: key
paths./webhooks/.put.parameters[1].required: true
paths./webhooks/.put.parameters[1].type: string
paths./webhooks/.put.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./webhooks/.put.parameters[2].in: query
paths./webhooks/.put.parameters[2].name: token
paths./webhooks/.put.parameters[2].required: true
paths./webhooks/.put.parameters[2].type: string
paths./webhooks/.put.responses.200.description: Success
paths./webhooks/.put.responses.400.description: Server rejection
paths./webhooks/.put.security.length: 2
paths./webhooks/.put.security[0].api_key.length: 0
paths./webhooks/.put.security[1].api_token.length: 0
paths./webhooks/.put.summary: updateWebhooks()
paths./webhooks/.put.tags.length: 1
paths./webhooks/.put.tags[0]: webhook
paths./webhooks/{idWebhook}.delete.operationId: deleteWebhooksByIdWebhook
paths./webhooks/{idWebhook}.delete.parameters.length: 3
paths./webhooks/{idWebhook}.delete.parameters[0].description: idWebhook
paths./webhooks/{idWebhook}.delete.parameters[0].in: path
paths./webhooks/{idWebhook}.delete.parameters[0].name: idWebhook
paths./webhooks/{idWebhook}.delete.parameters[0].required: true
paths./webhooks/{idWebhook}.delete.parameters[0].type: string
paths./webhooks/{idWebhook}.delete.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./webhooks/{idWebhook}.delete.parameters[1].in: query
paths./webhooks/{idWebhook}.delete.parameters[1].name: key
paths./webhooks/{idWebhook}.delete.parameters[1].required: true
paths./webhooks/{idWebhook}.delete.parameters[1].type: string
paths./webhooks/{idWebhook}.delete.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./webhooks/{idWebhook}.delete.parameters[2].in: query
paths./webhooks/{idWebhook}.delete.parameters[2].name: token
paths./webhooks/{idWebhook}.delete.parameters[2].required: true
paths./webhooks/{idWebhook}.delete.parameters[2].type: string
paths./webhooks/{idWebhook}.delete.responses.200.description: Success
paths./webhooks/{idWebhook}.delete.responses.400.description: Server rejection
paths./webhooks/{idWebhook}.delete.security.length: 2
paths./webhooks/{idWebhook}.delete.security[0].api_key.length: 0
paths./webhooks/{idWebhook}.delete.security[1].api_token.length: 0
paths./webhooks/{idWebhook}.delete.summary: deleteWebhooksByIdWebhook()
paths./webhooks/{idWebhook}.delete.tags.length: 1
paths./webhooks/{idWebhook}.delete.tags[0]: webhook
paths./webhooks/{idWebhook}.get.operationId: getWebhooksByIdWebhook
paths./webhooks/{idWebhook}.get.parameters.length: 3
paths./webhooks/{idWebhook}.get.parameters[0].description: idWebhook
paths./webhooks/{idWebhook}.get.parameters[0].in: path
paths./webhooks/{idWebhook}.get.parameters[0].name: idWebhook
paths./webhooks/{idWebhook}.get.parameters[0].required: true
paths./webhooks/{idWebhook}.get.parameters[0].type: string
paths./webhooks/{idWebhook}.get.parameters[1].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./webhooks/{idWebhook}.get.parameters[1].in: query
paths./webhooks/{idWebhook}.get.parameters[1].name: key
paths./webhooks/{idWebhook}.get.parameters[1].required: true
paths./webhooks/{idWebhook}.get.parameters[1].type: string
paths./webhooks/{idWebhook}.get.parameters[2].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./webhooks/{idWebhook}.get.parameters[2].in: query
paths./webhooks/{idWebhook}.get.parameters[2].name: token
paths./webhooks/{idWebhook}.get.parameters[2].required: true
paths./webhooks/{idWebhook}.get.parameters[2].type: string
paths./webhooks/{idWebhook}.get.responses.200.description: Success
paths./webhooks/{idWebhook}.get.responses.400.description: Server rejection
paths./webhooks/{idWebhook}.get.security.length: 2
paths./webhooks/{idWebhook}.get.security[0].api_key.length: 0
paths./webhooks/{idWebhook}.get.security[1].api_token.length: 0
paths./webhooks/{idWebhook}.get.summary: getWebhooksByIdWebhook()
paths./webhooks/{idWebhook}.get.tags.length: 1
paths./webhooks/{idWebhook}.get.tags[0]: webhook
paths./webhooks/{idWebhook}.put.operationId: updateWebhooksByIdWebhook
paths./webhooks/{idWebhook}.put.parameters.length: 4
paths./webhooks/{idWebhook}.put.parameters[0].description: idWebhook
paths./webhooks/{idWebhook}.put.parameters[0].in: path
paths./webhooks/{idWebhook}.put.parameters[0].name: idWebhook
paths./webhooks/{idWebhook}.put.parameters[0].required: true
paths./webhooks/{idWebhook}.put.parameters[0].type: string
paths./webhooks/{idWebhook}.put.parameters[1].description: Attributes of "Webhooks"
  to be updated.
paths./webhooks/{idWebhook}.put.parameters[1].in: body
paths./webhooks/{idWebhook}.put.parameters[1].name: body
paths./webhooks/{idWebhook}.put.parameters[1].required: true
paths./webhooks/{idWebhook}.put.parameters[1].schema.$ref: '#/definitions/webhooks'
paths./webhooks/{idWebhook}.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./webhooks/{idWebhook}.put.parameters[2].in: query
paths./webhooks/{idWebhook}.put.parameters[2].name: key
paths./webhooks/{idWebhook}.put.parameters[2].required: true
paths./webhooks/{idWebhook}.put.parameters[2].type: string
paths./webhooks/{idWebhook}.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./webhooks/{idWebhook}.put.parameters[3].in: query
paths./webhooks/{idWebhook}.put.parameters[3].name: token
paths./webhooks/{idWebhook}.put.parameters[3].required: true
paths./webhooks/{idWebhook}.put.parameters[3].type: string
paths./webhooks/{idWebhook}.put.responses.200.description: Success
paths./webhooks/{idWebhook}.put.responses.400.description: Server rejection
paths./webhooks/{idWebhook}.put.security.length: 2
paths./webhooks/{idWebhook}.put.security[0].api_key.length: 0
paths./webhooks/{idWebhook}.put.security[1].api_token.length: 0
paths./webhooks/{idWebhook}.put.summary: updateWebhooksByIdWebhook()
paths./webhooks/{idWebhook}.put.tags.length: 1
paths./webhooks/{idWebhook}.put.tags[0]: webhook
paths./webhooks/{idWebhook}/{field}.get.operationId: getWebhooksByIdWebhookByField
paths./webhooks/{idWebhook}/{field}.get.parameters.length: 4
paths./webhooks/{idWebhook}/{field}.get.parameters[0].description: idWebhook
paths./webhooks/{idWebhook}/{field}.get.parameters[0].in: path
paths./webhooks/{idWebhook}/{field}.get.parameters[0].name: idWebhook
paths./webhooks/{idWebhook}/{field}.get.parameters[0].required: true
paths./webhooks/{idWebhook}/{field}.get.parameters[0].type: string
paths./webhooks/{idWebhook}/{field}.get.parameters[1].description: field
paths./webhooks/{idWebhook}/{field}.get.parameters[1].in: path
paths./webhooks/{idWebhook}/{field}.get.parameters[1].name: field
paths./webhooks/{idWebhook}/{field}.get.parameters[1].required: true
paths./webhooks/{idWebhook}/{field}.get.parameters[1].type: string
paths./webhooks/{idWebhook}/{field}.get.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./webhooks/{idWebhook}/{field}.get.parameters[2].in: query
paths./webhooks/{idWebhook}/{field}.get.parameters[2].name: key
paths./webhooks/{idWebhook}/{field}.get.parameters[2].required: true
paths./webhooks/{idWebhook}/{field}.get.parameters[2].type: string
paths./webhooks/{idWebhook}/{field}.get.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./webhooks/{idWebhook}/{field}.get.parameters[3].in: query
paths./webhooks/{idWebhook}/{field}.get.parameters[3].name: token
paths./webhooks/{idWebhook}/{field}.get.parameters[3].required: true
paths./webhooks/{idWebhook}/{field}.get.parameters[3].type: string
paths./webhooks/{idWebhook}/{field}.get.responses.200.description: Success
paths./webhooks/{idWebhook}/{field}.get.responses.400.description: Server rejection
paths./webhooks/{idWebhook}/{field}.get.summary: getWebhooksByIdWebhookByField()
paths./webhooks/{idWebhook}/{field}.get.tags.length: 1
paths./webhooks/{idWebhook}/{field}.get.tags[0]: webhook
paths./webhooks/{idWebhook}/active.put.operationId: updateWebhooksActiveByIdWebhook
paths./webhooks/{idWebhook}/active.put.parameters.length: 4
paths./webhooks/{idWebhook}/active.put.parameters[0].description: idWebhook
paths./webhooks/{idWebhook}/active.put.parameters[0].in: path
paths./webhooks/{idWebhook}/active.put.parameters[0].name: idWebhook
paths./webhooks/{idWebhook}/active.put.parameters[0].required: true
paths./webhooks/{idWebhook}/active.put.parameters[0].type: string
paths./webhooks/{idWebhook}/active.put.parameters[1].description: Attributes of "Webhooks
  Active" to be updated.
paths./webhooks/{idWebhook}/active.put.parameters[1].in: body
paths./webhooks/{idWebhook}/active.put.parameters[1].name: body
paths./webhooks/{idWebhook}/active.put.parameters[1].required: true
paths./webhooks/{idWebhook}/active.put.parameters[1].schema.$ref: '#/definitions/webhooks_active'
paths./webhooks/{idWebhook}/active.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./webhooks/{idWebhook}/active.put.parameters[2].in: query
paths./webhooks/{idWebhook}/active.put.parameters[2].name: key
paths./webhooks/{idWebhook}/active.put.parameters[2].required: true
paths./webhooks/{idWebhook}/active.put.parameters[2].type: string
paths./webhooks/{idWebhook}/active.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./webhooks/{idWebhook}/active.put.parameters[3].in: query
paths./webhooks/{idWebhook}/active.put.parameters[3].name: token
paths./webhooks/{idWebhook}/active.put.parameters[3].required: true
paths./webhooks/{idWebhook}/active.put.parameters[3].type: string
paths./webhooks/{idWebhook}/active.put.responses.200.description: Success
paths./webhooks/{idWebhook}/active.put.responses.400.description: Server rejection
paths./webhooks/{idWebhook}/active.put.security.length: 2
paths./webhooks/{idWebhook}/active.put.security[0].api_key.length: 0
paths./webhooks/{idWebhook}/active.put.security[1].api_token.length: 0
paths./webhooks/{idWebhook}/active.put.summary: updateWebhooksActiveByIdWebhook()
paths./webhooks/{idWebhook}/active.put.tags.length: 1
paths./webhooks/{idWebhook}/active.put.tags[0]: webhook
paths./webhooks/{idWebhook}/callbackURL.put.operationId: updateWebhooksCallbackURLByIdWebhook
paths./webhooks/{idWebhook}/callbackURL.put.parameters.length: 4
paths./webhooks/{idWebhook}/callbackURL.put.parameters[0].description: idWebhook
paths./webhooks/{idWebhook}/callbackURL.put.parameters[0].in: path
paths./webhooks/{idWebhook}/callbackURL.put.parameters[0].name: idWebhook
paths./webhooks/{idWebhook}/callbackURL.put.parameters[0].required: true
paths./webhooks/{idWebhook}/callbackURL.put.parameters[0].type: string
paths./webhooks/{idWebhook}/callbackURL.put.parameters[1].description: Attributes
  of "Webhooks Callback Url" to be updated.
paths./webhooks/{idWebhook}/callbackURL.put.parameters[1].in: body
paths./webhooks/{idWebhook}/callbackURL.put.parameters[1].name: body
paths./webhooks/{idWebhook}/callbackURL.put.parameters[1].required: true
paths./webhooks/{idWebhook}/callbackURL.put.parameters[1].schema.$ref: '#/definitions/webhooks_callbackURL'
paths./webhooks/{idWebhook}/callbackURL.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./webhooks/{idWebhook}/callbackURL.put.parameters[2].in: query
paths./webhooks/{idWebhook}/callbackURL.put.parameters[2].name: key
paths./webhooks/{idWebhook}/callbackURL.put.parameters[2].required: true
paths./webhooks/{idWebhook}/callbackURL.put.parameters[2].type: string
paths./webhooks/{idWebhook}/callbackURL.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./webhooks/{idWebhook}/callbackURL.put.parameters[3].in: query
paths./webhooks/{idWebhook}/callbackURL.put.parameters[3].name: token
paths./webhooks/{idWebhook}/callbackURL.put.parameters[3].required: true
paths./webhooks/{idWebhook}/callbackURL.put.parameters[3].type: string
paths./webhooks/{idWebhook}/callbackURL.put.responses.200.description: Success
paths./webhooks/{idWebhook}/callbackURL.put.responses.400.description: Server rejection
paths./webhooks/{idWebhook}/callbackURL.put.security.length: 2
paths./webhooks/{idWebhook}/callbackURL.put.security[0].api_key.length: 0
paths./webhooks/{idWebhook}/callbackURL.put.security[1].api_token.length: 0
paths./webhooks/{idWebhook}/callbackURL.put.summary: updateWebhooksCallbackURLByIdWebhook()
paths./webhooks/{idWebhook}/callbackURL.put.tags.length: 1
paths./webhooks/{idWebhook}/callbackURL.put.tags[0]: webhook
paths./webhooks/{idWebhook}/description.put.operationId: updateWebhooksDescriptionByIdWebhook
paths./webhooks/{idWebhook}/description.put.parameters.length: 4
paths./webhooks/{idWebhook}/description.put.parameters[0].description: idWebhook
paths./webhooks/{idWebhook}/description.put.parameters[0].in: path
paths./webhooks/{idWebhook}/description.put.parameters[0].name: idWebhook
paths./webhooks/{idWebhook}/description.put.parameters[0].required: true
paths./webhooks/{idWebhook}/description.put.parameters[0].type: string
paths./webhooks/{idWebhook}/description.put.parameters[1].description: Attributes
  of "Webhooks Description" to be updated.
paths./webhooks/{idWebhook}/description.put.parameters[1].in: body
paths./webhooks/{idWebhook}/description.put.parameters[1].name: body
paths./webhooks/{idWebhook}/description.put.parameters[1].required: true
paths./webhooks/{idWebhook}/description.put.parameters[1].schema.$ref: '#/definitions/webhooks_description'
paths./webhooks/{idWebhook}/description.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./webhooks/{idWebhook}/description.put.parameters[2].in: query
paths./webhooks/{idWebhook}/description.put.parameters[2].name: key
paths./webhooks/{idWebhook}/description.put.parameters[2].required: true
paths./webhooks/{idWebhook}/description.put.parameters[2].type: string
paths./webhooks/{idWebhook}/description.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./webhooks/{idWebhook}/description.put.parameters[3].in: query
paths./webhooks/{idWebhook}/description.put.parameters[3].name: token
paths./webhooks/{idWebhook}/description.put.parameters[3].required: true
paths./webhooks/{idWebhook}/description.put.parameters[3].type: string
paths./webhooks/{idWebhook}/description.put.responses.200.description: Success
paths./webhooks/{idWebhook}/description.put.responses.400.description: Server rejection
paths./webhooks/{idWebhook}/description.put.security.length: 2
paths./webhooks/{idWebhook}/description.put.security[0].api_key.length: 0
paths./webhooks/{idWebhook}/description.put.security[1].api_token.length: 0
paths./webhooks/{idWebhook}/description.put.summary: updateWebhooksDescriptionByIdWebhook()
paths./webhooks/{idWebhook}/description.put.tags.length: 1
paths./webhooks/{idWebhook}/description.put.tags[0]: webhook
paths./webhooks/{idWebhook}/idModel.put.operationId: updateWebhooksIdModelByIdWebhook
paths./webhooks/{idWebhook}/idModel.put.parameters.length: 4
paths./webhooks/{idWebhook}/idModel.put.parameters[0].description: idWebhook
paths./webhooks/{idWebhook}/idModel.put.parameters[0].in: path
paths./webhooks/{idWebhook}/idModel.put.parameters[0].name: idWebhook
paths./webhooks/{idWebhook}/idModel.put.parameters[0].required: true
paths./webhooks/{idWebhook}/idModel.put.parameters[0].type: string
paths./webhooks/{idWebhook}/idModel.put.parameters[1].description: Attributes of "Webhooks
  Id Model" to be updated.
paths./webhooks/{idWebhook}/idModel.put.parameters[1].in: body
paths./webhooks/{idWebhook}/idModel.put.parameters[1].name: body
paths./webhooks/{idWebhook}/idModel.put.parameters[1].required: true
paths./webhooks/{idWebhook}/idModel.put.parameters[1].schema.$ref: '#/definitions/webhooks_idModel'
paths./webhooks/{idWebhook}/idModel.put.parameters[2].description: <a href="https://trello.com/1/appKey/generate"  target="_blank">Generate
  your application key</a>
paths./webhooks/{idWebhook}/idModel.put.parameters[2].in: query
paths./webhooks/{idWebhook}/idModel.put.parameters[2].name: key
paths./webhooks/{idWebhook}/idModel.put.parameters[2].required: true
paths./webhooks/{idWebhook}/idModel.put.parameters[2].type: string
paths./webhooks/{idWebhook}/idModel.put.parameters[3].description: <a href="https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user"  target="_blank">Getting
  a token from a user</a>
paths./webhooks/{idWebhook}/idModel.put.parameters[3].in: query
paths./webhooks/{idWebhook}/idModel.put.parameters[3].name: token
paths./webhooks/{idWebhook}/idModel.put.parameters[3].required: true
paths./webhooks/{idWebhook}/idModel.put.parameters[3].type: string
paths./webhooks/{idWebhook}/idModel.put.responses.200.description: Success
paths./webhooks/{idWebhook}/idModel.put.responses.400.description: Server rejection
paths./webhooks/{idWebhook}/idModel.put.security.length: 2
paths./webhooks/{idWebhook}/idModel.put.security[0].api_key.length: 0
paths./webhooks/{idWebhook}/idModel.put.security[1].api_token.length: 0
paths./webhooks/{idWebhook}/idModel.put.summary: updateWebhooksIdModelByIdWebhook()
paths./webhooks/{idWebhook}/idModel.put.tags.length: 1
paths./webhooks/{idWebhook}/idModel.put.tags[0]: webhook
schemes.length: 1
schemes[0]: https
securityDefinitions.api_key.in: query
securityDefinitions.api_key.name: key
securityDefinitions.api_key.type: apiKey
securityDefinitions.api_token.in: query
securityDefinitions.api_token.name: token
securityDefinitions.api_token.type: apiKey
swagger: "2.0"
tags.length: 15
tags[0].description: https://trello.com/docs/api/action/index.html
tags[0].name: action
tags[1].description: https://trello.com/docs/api/batch/index.html
tags[1].name: batch
tags[2].description: https://trello.com/docs/api/board/index.html
tags[2].name: board
tags[3].description: https://trello.com/docs/api/card/index.html
tags[3].name: card
tags[4].description: https://trello.com/docs/api/checklist/index.html
tags[4].name: checklist
tags[5].description: https://trello.com/docs/api/label/index.html
tags[5].name: label
tags[6].description: https://trello.com/docs/api/list/index.html
tags[6].name: list
tags[7].description: https://trello.com/docs/api/member/index.html
tags[7].name: member
tags[8].description: https://trello.com/docs/api/notification/index.html
tags[8].name: notification
tags[9].description: https://trello.com/docs/api/organization/index.html
tags[9].name: organization
tags[10].description: https://trello.com/docs/api/search/index.html
tags[10].name: search
tags[11].description: https://trello.com/docs/api/session/index.html
tags[11].name: session
tags[12].description: https://trello.com/docs/api/token/index.html
tags[12].name: token
tags[13].description: https://trello.com/docs/api/type/index.html
tags[13].name: type
tags[14].description: https://trello.com/docs/api/webhook/index.html
tags[14].name: webhook
x-hasEquivalentPaths: true
