syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package posty_api;

message GetApiV1DomainsDomain_nameRequest {
    string domain_name = 1;
}

message PutApiV1DomainsDomain_nameRequest {
    string domain_name = 1;
}

message DeleteApiV1DomainsDomain_nameRequest {
    string domain_name = 1;
}

message GetApiV1DomainsDomain_nameAliasesRequest {
    string domain_name = 1;
}

message PostApiV1DomainsDomain_nameAliasesRequest {
    string domain_name = 1;
}

message GetApiV1DomainsDomain_nameAliasesAlias_nameRequest {
    string alias_name = 1;
    string domain_name = 2;
}

message PutApiV1DomainsDomain_nameAliasesAlias_nameRequest {
    string alias_name = 1;
    string domain_name = 2;
}

message DeleteApiV1DomainsDomain_nameAliasesAlias_nameRequest {
    string alias_name = 1;
    string domain_name = 2;
}

message GetApiV1DomainsDomain_nameUsersRequest {
    string domain_name = 1;
}

message PostApiV1DomainsDomain_nameUsersRequest {
    string domain_name = 1;
}

message GetApiV1DomainsDomain_nameUsersUser_nameRequest {
    string domain_name = 1;
    string user_name = 2;
}

message PutApiV1DomainsDomain_nameUsersUser_nameRequest {
    string domain_name = 1;
    string user_name = 2;
}

message DeleteApiV1DomainsDomain_nameUsersUser_nameRequest {
    string domain_name = 1;
    string user_name = 2;
}

message GetApiV1DomainsDomain_nameUsersUser_nameAliasesRequest {
    string domain_name = 1;
    string user_name = 2;
}

message PostApiV1DomainsDomain_nameUsersUser_nameAliasesRequest {
    string domain_name = 1;
    string user_name = 2;
}

message GetApiV1DomainsDomain_nameUsersUser_nameAliasesAlias_nameRequest {
    string alias_name = 1;
    string domain_name = 2;
    string user_name = 3;
}

message PutApiV1DomainsDomain_nameUsersUser_nameAliasesAlias_nameRequest {
    string alias_name = 1;
    string domain_name = 2;
    string user_name = 3;
}

message DeleteApiV1DomainsDomain_nameUsersUser_nameAliasesAlias_nameRequest {
    string alias_name = 1;
    string domain_name = 2;
    string user_name = 3;
}

message GetApiV1Swagger_docNameRequest {
    // Resource name of mounted API
    string name = 1;
}

message GetApiV1TransportsTransport_nameRequest {
    string transport_name = 1;
}

message PutApiV1TransportsTransport_nameRequest {
    string transport_name = 1;
}

message DeleteApiV1TransportsTransport_nameRequest {
    string transport_name = 1;
}

service Posty_APIService {
    // Returns all available domains
    rpc GetApiV1Domains(google.protobuf.Empty) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//api/v1/domains.json"
      };
    }
    // Create new domain
    rpc PostApiV1Domains(google.protobuf.Empty) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//api/v1/domains.json"
      };
    }
    // Returns the information to the specified domain
    rpc GetApiV1DomainsDomain_name(GetApiV1DomainsDomain_nameRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//api/v1/domains/{domain_name}.json"
      };
    }
    // Update the specified domain
    rpc PutApiV1DomainsDomain_name(PutApiV1DomainsDomain_nameRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "//api/v1/domains/{domain_name}.json"
      };
    }
    // Delete the specified domain
    rpc DeleteApiV1DomainsDomain_name(DeleteApiV1DomainsDomain_nameRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "//api/v1/domains/{domain_name}.json"
      };
    }
    // Returns all aliases for the specified domain
    rpc GetApiV1DomainsDomain_nameAliases(GetApiV1DomainsDomain_nameAliasesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//api/v1/domains/{domain_name}/aliases.json"
      };
    }
    // Create new domain alias
    rpc PostApiV1DomainsDomain_nameAliases(PostApiV1DomainsDomain_nameAliasesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//api/v1/domains/{domain_name}/aliases.json"
      };
    }
    // Returns the information to the specified domain alias
    rpc GetApiV1DomainsDomain_nameAliasesAlias_name(GetApiV1DomainsDomain_nameAliasesAlias_nameRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//api/v1/domains/{domain_name}/aliases/{alias_name}.json"
      };
    }
    // Update the specified domain alias
    rpc PutApiV1DomainsDomain_nameAliasesAlias_name(PutApiV1DomainsDomain_nameAliasesAlias_nameRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "//api/v1/domains/{domain_name}/aliases/{alias_name}.json"
      };
    }
    // Delete the specified domain alias
    rpc DeleteApiV1DomainsDomain_nameAliasesAlias_name(DeleteApiV1DomainsDomain_nameAliasesAlias_nameRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "//api/v1/domains/{domain_name}/aliases/{alias_name}.json"
      };
    }
    // Returns all users for the specified domain
    rpc GetApiV1DomainsDomain_nameUsers(GetApiV1DomainsDomain_nameUsersRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//api/v1/domains/{domain_name}/users.json"
      };
    }
    // Create new user
    rpc PostApiV1DomainsDomain_nameUsers(PostApiV1DomainsDomain_nameUsersRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//api/v1/domains/{domain_name}/users.json"
      };
    }
    // Returns the information to the specified user
    rpc GetApiV1DomainsDomain_nameUsersUser_name(GetApiV1DomainsDomain_nameUsersUser_nameRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//api/v1/domains/{domain_name}/users/{user_name}.json"
      };
    }
    // Update the specified user
    rpc PutApiV1DomainsDomain_nameUsersUser_name(PutApiV1DomainsDomain_nameUsersUser_nameRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "//api/v1/domains/{domain_name}/users/{user_name}.json"
      };
    }
    // Delete the specified user
    rpc DeleteApiV1DomainsDomain_nameUsersUser_name(DeleteApiV1DomainsDomain_nameUsersUser_nameRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "//api/v1/domains/{domain_name}/users/{user_name}.json"
      };
    }
    // Returns all aliases for the specified user
    rpc GetApiV1DomainsDomain_nameUsersUser_nameAliases(GetApiV1DomainsDomain_nameUsersUser_nameAliasesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//api/v1/domains/{domain_name}/users/{user_name}/aliases.json"
      };
    }
    // Create new user alias
    rpc PostApiV1DomainsDomain_nameUsersUser_nameAliases(PostApiV1DomainsDomain_nameUsersUser_nameAliasesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//api/v1/domains/{domain_name}/users/{user_name}/aliases.json"
      };
    }
    // Returns the information to the specified user alias
    rpc GetApiV1DomainsDomain_nameUsersUser_nameAliasesAlias_name(GetApiV1DomainsDomain_nameUsersUser_nameAliasesAlias_nameRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//api/v1/domains/{domain_name}/users/{user_name}/aliases/{alias_name}.json"
      };
    }
    // Update the specified user alias
    rpc PutApiV1DomainsDomain_nameUsersUser_nameAliasesAlias_name(PutApiV1DomainsDomain_nameUsersUser_nameAliasesAlias_nameRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "//api/v1/domains/{domain_name}/users/{user_name}/aliases/{alias_name}.json"
      };
    }
    // Delete the specified user alias
    rpc DeleteApiV1DomainsDomain_nameUsersUser_nameAliasesAlias_name(DeleteApiV1DomainsDomain_nameUsersUser_nameAliasesAlias_nameRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "//api/v1/domains/{domain_name}/users/{user_name}/aliases/{alias_name}.json"
      };
    }
    // Returns a summary of all Resources
    rpc GetApiV1Summary(google.protobuf.Empty) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//api/v1/summary.json"
      };
    }
    // Swagger compatible API description
    rpc GetApiV1Swagger_doc(google.protobuf.Empty) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//api/v1/swagger_doc.json"
      };
    }
    // Swagger compatible API description for specific API
    rpc GetApiV1Swagger_docName(GetApiV1Swagger_docNameRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//api/v1/swagger_doc/{name}.json"
      };
    }
    // Returns all available transports
    rpc GetApiV1Transports(google.protobuf.Empty) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//api/v1/transports.json"
      };
    }
    // Create new transport
    rpc PostApiV1Transports(google.protobuf.Empty) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "//api/v1/transports.json"
      };
    }
    // Returns the information to the specified transport
    rpc GetApiV1TransportsTransport_name(GetApiV1TransportsTransport_nameRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//api/v1/transports/{transport_name}.json"
      };
    }
    // Update the specified transport
    rpc PutApiV1TransportsTransport_name(PutApiV1TransportsTransport_nameRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "//api/v1/transports/{transport_name}.json"
      };
    }
    // Delete the specified transport
    rpc DeleteApiV1TransportsTransport_name(DeleteApiV1TransportsTransport_nameRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "//api/v1/transports/{transport_name}.json"
      };
    }
}
