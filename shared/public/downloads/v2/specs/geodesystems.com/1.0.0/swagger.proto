syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package ramadda;

message GetRepositoryEntryShowRequest {
    // Entry ID
    string entryid = 1;
    // Output type  -don't change
    string output = 2;
}

message GetRepositorySearchTypeBeforeafterRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeBiblioRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Institution
    string search.biblio.institution = 15;
    // Other Authors
    string search.biblio.other_authors = 16;
    // Primary Author
    string search.biblio.primary_author = 17;
    // Publication
    string search.biblio.publication = 18;
    // Publication Type
    string search.biblio.type = 19;
    // Number to skip
    int32 skip = 20;
    // Search text
    string text = 21;
    // To date
    string todate = 22;
}

message GetRepositorySearchTypeBio_dicomRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeBio_dicom_testRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Patient ID
    string search.bio_dicom_test.PatientID = 15;
    // Patient Name
    string search.bio_dicom_test.PatientName = 16;
    // Number to skip
    int32 skip = 17;
    // Search text
    string text = 18;
    // To date
    string todate = 19;
}

message GetRepositorySearchTypeBio_fastaRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeBio_fastqRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeBio_hmmer_indexRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeBio_ome_tiffRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeBio_ontology_assayRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeBio_ontology_cohortRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeBio_ontology_personRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Gender
    string search.bio_ontology_person.gender = 15;
    // Number to skip
    int32 skip = 16;
    // Search text
    string text = 17;
    // To date
    string todate = 18;
}

message GetRepositorySearchTypeBio_ontology_sampleRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeBio_ontology_seriesRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeBio_ontology_studyRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeBio_samRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeBio_sf_pdbRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeBio_sraRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeBio_stockholmRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeBio_taxonomyRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Also known
    string search.bio_taxonomy.aliases = 15;
    // Divison
    string search.bio_taxonomy.division = 16;
    // EMBL Code
    string search.bio_taxonomy.embl_code = 17;
    // Inheritied division
    bool search.bio_taxonomy.inherited_div = 18;
    // Rank
    string search.bio_taxonomy.rank = 19;
    // Number to skip
    int32 skip = 20;
    // Search text
    string text = 21;
    // To date
    string todate = 22;
}

message GetRepositorySearchTypeBlogentryRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Extra Text
    string search.blogentry.blogtext = 15;
    // Number to skip
    int32 skip = 16;
    // Search text
    string text = 17;
    // To date
    string todate = 18;
}

message GetRepositorySearchTypeBookmarksRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Category
    string search.db_bookmarks.category = 15;
    // Date
    string search.db_bookmarks.date = 16;
    // Title
    string search.db_bookmarks.title = 17;
    // URL
    string search.db_bookmarks.url = 18;
    // Number to skip
    int32 skip = 19;
    // Search text
    string text = 20;
    // To date
    string todate = 21;
}

message GetRepositorySearchTypeBoulder_county_voter_detailsRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Birth Year
    int32 search.db_boulder_county_voter_details.birth_year = 15;
    // City Ward/district
    string search.db_boulder_county_voter_details.city_ward_district = 16;
    // Congressional
    string search.db_boulder_county_voter_details.congressional = 17;
    // First Name
    string search.db_boulder_county_voter_details.first_name = 18;
    // Gender
    string search.db_boulder_county_voter_details.gender = 19;
    // Last Name
    string search.db_boulder_county_voter_details.last_name = 20;
    // Last Updated Date
    string search.db_boulder_county_voter_details.last_updated_date = 21;
    // Mailing Zip Code
    string search.db_boulder_county_voter_details.mailing_zip_code = 22;
    // Municipality
    string search.db_boulder_county_voter_details.municipality = 23;
    // Party
    string search.db_boulder_county_voter_details.party = 24;
    // Precinct Code
    string search.db_boulder_county_voter_details.precinct_code = 25;
    // Registration Date
    string search.db_boulder_county_voter_details.registration_date = 26;
    // Residential Address
    string search.db_boulder_county_voter_details.residential_address = 27;
    // Residential City
    string search.db_boulder_county_voter_details.residential_city = 28;
    // School District
    string search.db_boulder_county_voter_details.school_district = 29;
    // State House
    string search.db_boulder_county_voter_details.state_house = 30;
    // State Senate
    string search.db_boulder_county_voter_details.state_senate = 31;
    // Voter Status
    string search.db_boulder_county_voter_details.voter_status = 32;
    // Number to skip
    int32 skip = 33;
    // Search text
    string text = 34;
    // To date
    string todate = 35;
}

message GetRepositorySearchTypeCalendarRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeCataloglinkRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeCdm_gridRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeCommunity_caseRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Address
    string search.community_case.address = 15;
    // Applicant
    string search.community_case.applicant = 16;
    // Case Type
    string search.community_case.case_type = 17;
    // Staff Contact
    string search.community_case.contact = 18;
    // Number to skip
    int32 skip = 19;
    // Search text
    string text = 20;
    // To date
    string todate = 21;
}

message GetRepositorySearchTypeCommunity_datahubRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeCommunity_resourceRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Address
    string search.community_resource.address = 15;
    // City
    string search.community_resource.city = 16;
    // Type
    string search.community_resource.resource_type = 17;
    // State or Province
    string search.community_resource.state = 18;
    // Zip Code
    string search.community_resource.zipcode = 19;
    // Number to skip
    int32 skip = 20;
    // Search text
    string text = 21;
    // To date
    string todate = 22;
}

message GetRepositorySearchTypeContactRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Email
    string search.db_contact.email = 15;
    // Institution
    string search.db_contact.institution = 16;
    // Name
    string search.db_contact.name = 17;
    // Number to skip
    int32 skip = 18;
    // Search text
    string text = 19;
    // To date
    string todate = 20;
}

message GetRepositorySearchTypeDb_co_indicatorsRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Description
    string search.db_db_co_indicators.description = 15;
    // Domain
    string search.db_db_co_indicators.domain = 16;
    // County
    string search.db_db_co_indicators.geo_name = 17;
    // Indicator
    string search.db_db_co_indicators.indicatorName = 18;
    // Location
    string search.db_db_co_indicators.location = 19;
    // Measure
    double search.db_db_co_indicators.measure = 20;
    // Subdomain
    string search.db_db_co_indicators.subdomain = 21;
    // Number to skip
    int32 skip = 22;
    // Search text
    string text = 23;
    // To date
    string todate = 24;
}

message GetRepositorySearchTypeEarth_merraRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Group
    string search.earth_merra.data_group = 15;
    // Dimensions
    string search.earth_merra.dimensions = 16;
    // Frequency
    string search.earth_merra.frequency = 17;
    // Frequency Type
    string search.earth_merra.frequency_type = 18;
    // Horizontal Resolution
    string search.earth_merra.horizontal_resolution = 19;
    // Vertical Location
    string search.earth_merra.vertical_location = 20;
    // Number to skip
    int32 skip = 21;
    // Search text
    string text = 22;
    // To date
    string todate = 23;
}

message GetRepositorySearchTypeEarth_satellite_landsatRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Archive Version Number
    int32 search.earth_satellite_landsat.archive_version_number = 15;
    // Ground Station
    string search.earth_satellite_landsat.ground_station = 16;
    // Satellite
    string search.earth_satellite_landsat.satellite = 17;
    // Sensor
    string search.earth_satellite_landsat.sensor = 18;
    // WRS Path
    int32 search.earth_satellite_landsat.wrs_path_number = 19;
    // WRS Row
    int32 search.earth_satellite_landsat.wrs_row_number = 20;
    // Number to skip
    int32 skip = 21;
    // Search text
    string text = 22;
    // To date
    string todate = 23;
}

message GetRepositorySearchTypeEarth_satellite_modis_aquaRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Earth Science Data Type
    string search.earth_satellite_modis.data_type = 15;
    // Number to skip
    int32 skip = 16;
    // Search text
    string text = 17;
    // To date
    string todate = 18;
}

message GetRepositorySearchTypeEarth_wrf_namelistRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeExerciseRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Date
    string search.db_exercise.date = 15;
    // Type
    string search.db_exercise.type = 16;
    // Number to skip
    int32 skip = 17;
    // Search text
    string text = 18;
    // To date
    string todate = 19;
}

message GetRepositorySearchTypeFaqRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeFeedRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeFileRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeFits_dataRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Instrument
    string search.fits_data.instrument = 15;
    // Origin
    string search.fits_data.origin = 16;
    // Telescope
    string search.fits_data.telescope = 17;
    // Number to skip
    int32 skip = 18;
    // Search text
    string text = 19;
    // To date
    string todate = 20;
}

message GetRepositorySearchTypeFramesRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeFtpRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeGadgets_clockRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeGadgets_countdownRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeGadgets_stockRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeGadgets_weatherRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeGdata_docsRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeGdata_photosRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeGeo_geotiffRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeGeo_gpxRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeGeo_hdf5Request {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeGeo_kmlRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeGeo_shapefileRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeGlossaryRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeGridaggregationRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeGroupRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeHipchat_groupRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeHomepageRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeIncidentRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Cause
    string search.incident.cause = 15;
    // Incident Type
    string search.incident.incidenttype = 16;
    // State
    string search.incident.state = 17;
    // Number to skip
    int32 skip = 18;
    // Search text
    string text = 19;
    // To date
    string todate = 20;
}

message GetRepositorySearchTypeIncident_basementRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Estimated Cost
    int32 search.incident_basement.cost = 15;
    // Water Depth
    int32 search.incident_basement.depth = 16;
    // Duration
    int32 search.incident_basement.duration = 17;
    // Type of flooding
    string search.incident_basement.type = 18;
    // State
    string search.incident_location.state = 19;
    // Number to skip
    int32 skip = 20;
    // Search text
    string text = 21;
    // To date
    string todate = 22;
}

message GetRepositorySearchTypeInvestigation_caseRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeInvestigation_cellphonelogRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Duration
    double search.db_investigation_cellphonelog.duration = 15;
    // From Name
    string search.db_investigation_cellphonelog.from_name = 16;
    // From Number
    string search.db_investigation_cellphonelog.from_number = 17;
    // Location
    string search.db_investigation_cellphonelog.location = 18;
    // Notes
    string search.db_investigation_cellphonelog.notes = 19;
    // Tag
    string search.db_investigation_cellphonelog.tag = 20;
    // Date
    string search.db_investigation_cellphonelog.time = 21;
    // To Name
    string search.db_investigation_cellphonelog.to_name = 22;
    // To Number
    string search.db_investigation_cellphonelog.to_number = 23;
    // City
    string search.db_investigation_cellphonelog.tower_city = 24;
    // State
    string search.db_investigation_cellphonelog.tower_state = 25;
    // Zip Code
    string search.db_investigation_cellphonelog.tower_zipcode = 26;
    // Direction
    string search.db_investigation_cellphonelog.type = 27;
    // Number to skip
    int32 skip = 28;
    // Search text
    string text = 29;
    // To date
    string todate = 30;
}

message GetRepositorySearchTypeInvestigation_eventRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeInvestigation_oldphonelogRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // From City
    string search.db_investigation_oldphonelog.from_city = 15;
    // From Name
    string search.db_investigation_oldphonelog.from_name = 16;
    // From Number
    string search.db_investigation_oldphonelog.from_number = 17;
    // From State
    string search.db_investigation_oldphonelog.from_state = 18;
    // Notes
    string search.db_investigation_oldphonelog.notes = 19;
    // Tag
    string search.db_investigation_oldphonelog.tag = 20;
    // Date
    string search.db_investigation_oldphonelog.time = 21;
    // To City
    string search.db_investigation_oldphonelog.to_city = 22;
    // To Name
    string search.db_investigation_oldphonelog.to_name = 23;
    // To Number
    string search.db_investigation_oldphonelog.to_number = 24;
    // To State
    string search.db_investigation_oldphonelog.to_state = 25;
    // Number to skip
    int32 skip = 26;
    // Search text
    string text = 27;
    // To date
    string todate = 28;
}

message GetRepositorySearchTypeInvestigation_personRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeInvestigation_thingRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeLatlonimageRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeLidar_collectionRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeLidar_glasRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeLidar_lasRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeLidar_lvisRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeLinkRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeLocalfilesRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeLocationsRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Location
    string search.db_locations.location = 15;
    // Name
    string search.db_locations.name = 16;
    // Type
    string search.db_locations.type = 17;
    // Number to skip
    int32 skip = 18;
    // Search text
    string text = 19;
    // To date
    string todate = 20;
}

message GetRepositorySearchTypeMap_googlemapRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeMedia_audiofileRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeMedia_imageloopRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeMedia_photoalbumRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeMedia_video_channelRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeMedia_video_quicktimeRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeMedia_youtubevideoRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeMultisearchRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeNga_tracksRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Location
    string search.db_nga_tracks.location = 15;
    // Timestamp
    string search.db_nga_tracks.timestamp = 16;
    // Track ID
    string search.db_nga_tracks.track_id = 17;
    // Number to skip
    int32 skip = 18;
    // Search text
    string text = 19;
    // To date
    string todate = 20;
}

message GetRepositorySearchTypeNotesRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeNotes_noteRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeOpendaplinkRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeOwlClassRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeOwlOntologyRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypePasteitentryRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypePoint_textRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypePollRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeProject_campaignRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeProject_casestudyRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Intended Use
    string search.project_casestudy.intended_use = 15;
    // Where
    string search.project_casestudy.location = 16;
    // Number to skip
    int32 skip = 17;
    // Search text
    string text = 18;
    // To date
    string todate = 19;
}

message GetRepositorySearchTypeProject_contributionRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeProject_dataformatRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Data Type
    string search.project_dataformat.data_type = 15;
    // Field
    string search.project_dataformat.field = 16;
    // Number to skip
    int32 skip = 17;
    // Search text
    string text = 18;
    // To date
    string todate = 19;
}

message GetRepositorySearchTypeProject_datasetRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Data Level
    string search.project_dataset.data_level = 15;
    // Data Type
    string search.project_dataset.data_type = 16;
    // Dataset ID
    string search.project_dataset.dataset_id = 17;
    // Number to skip
    int32 skip = 18;
    // Search text
    string text = 19;
    // To date
    string todate = 20;
}

message GetRepositorySearchTypeProject_deploymentRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeProject_experimentRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeProject_fieldnoteRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeProject_gps_controlpointsRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeProject_gps_rawRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeProject_gps_rinexRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeProject_instrumentRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeProject_learning_resourceRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Grade Level
    string search.project_learning_resource.grade_level = 15;
    // Topic
    string search.project_learning_resource.topic = 16;
    // Number to skip
    int32 skip = 17;
    // Search text
    string text = 18;
    // To date
    string todate = 19;
}

message GetRepositorySearchTypeProject_meetingRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Location
    string search.project_meeting.location = 15;
    // Participants
    string search.project_meeting.participants = 16;
    // Topic
    string search.project_meeting.topic = 17;
    // Number to skip
    int32 skip = 18;
    // Search text
    string text = 19;
    // To date
    string todate = 20;
}

message GetRepositorySearchTypeProject_organizationRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Organization Type
    string search.project_organization.organization_type = 15;
    // Status
    string search.project_organization.status = 16;
    // Number to skip
    int32 skip = 17;
    // Search text
    string text = 18;
    // To date
    string todate = 19;
}

message GetRepositorySearchTypeProject_programRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeProject_projectRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeProject_serviceRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Provider
    string search.project_service.provider = 15;
    // Service Type
    string search.project_service.service_type = 16;
    // Number to skip
    int32 skip = 17;
    // Search text
    string text = 18;
    // To date
    string todate = 19;
}

message GetRepositorySearchTypeProject_siteRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Country
    string search.project_site.country = 15;
    // County
    string search.project_site.county = 16;
    // Network
    string search.project_site.network = 17;
    // Short Name
    string search.project_site.short_name = 18;
    // Site Type
    string search.project_site.site_type = 19;
    // State/Province
    string search.project_site.state = 20;
    // Status
    string search.project_site.status = 21;
    // Number to skip
    int32 skip = 22;
    // Search text
    string text = 23;
    // To date
    string todate = 24;
}

message GetRepositorySearchTypeProject_softwarepackageRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Capabilities
    string search.project_softwarepackage.capabilities = 15;
    // Science Domain
    string search.project_softwarepackage.domain = 16;
    // License
    string search.project_softwarepackage.license = 17;
    // Platform
    string search.project_softwarepackage.platform = 18;
    // Software Type
    string search.project_softwarepackage.software_type = 19;
    // Software Use
    string search.project_softwarepackage.software_use = 20;
    // Development Status
    string search.project_softwarepackage.status = 21;
    // Number to skip
    int32 skip = 22;
    // Search text
    string text = 23;
    // To date
    string todate = 24;
}

message GetRepositorySearchTypeProject_standard_nameRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Aliases
    string search.project_standard_name.aliases = 15;
    // Canonical Unit
    string search.project_standard_name.unit = 16;
    // Number to skip
    int32 skip = 17;
    // Search text
    string text = 18;
    // To date
    string todate = 19;
}

message GetRepositorySearchTypeProject_surveylocationRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeProject_termRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Term Value
    string search.project_term.value = 15;
    // Number to skip
    int32 skip = 16;
    // Search text
    string text = 17;
    // To date
    string todate = 18;
}

message GetRepositorySearchTypeProject_visitRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeProject_vocabularyRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeProperty_salesRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Building Description
    string search.db_property_sales.building_description = 15;
    // Building Design
    string search.db_property_sales.building_design = 16;
    // Buyer
    string search.db_property_sales.buyer = 17;
    // City
    string search.db_property_sales.city = 18;
    // Location
    string search.db_property_sales.location = 19;
    // Property Address
    string search.db_property_sales.property_address = 20;
    // Sale Date
    string search.db_property_sales.sale_date = 21;
    // Sale Price
    double search.db_property_sales.sale_price = 22;
    // Seller
    string search.db_property_sales.seller = 23;
    // Subdivision
    string search.db_property_sales.subdivision = 24;
    // Property Type
    string search.db_property_sales.type = 25;
    // Zip Code
    string search.db_property_sales.zipcode = 26;
    // Number to skip
    int32 skip = 27;
    // Search text
    string text = 28;
    // To date
    string todate = 29;
}

message GetRepositorySearchTypePropertydbRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Address
    string search.db_propertydb.address = 15;
    // Building Type
    string search.db_propertydb.building_type = 16;
    // City
    string search.db_propertydb.city = 17;
    // Building Sq Ft
    int32 search.db_propertydb.house_size = 18;
    // Location
    string search.db_propertydb.location = 19;
    // Lot Size Acres
    double search.db_propertydb.lot_acres = 20;
    // Lot Size Sq Ft
    int32 search.db_propertydb.lot_sqft = 21;
    // Owner
    string search.db_propertydb.owner = 22;
    // $-sqft
    double search.db_propertydb.price_sqft = 23;
    // Property ID
    string search.db_propertydb.property_id = 24;
    // State
    string search.db_propertydb.state = 25;
    // Property Value
    int32 search.db_propertydb.value = 26;
    // Number to skip
    int32 skip = 27;
    // Search text
    string text = 28;
    // To date
    string todate = 29;
}

message GetRepositorySearchTypePython_notebookRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeRegistrationsRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Country
    string search.db_registrations.country = 15;
    // Date
    string search.db_registrations.date = 16;
    // Email
    string search.db_registrations.email = 17;
    // Name
    string search.db_registrations.name = 18;
    // Organization
    string search.db_registrations.organization = 19;
    // Organization type
    string search.db_registrations.organization_type = 20;
    // Postal Code
    string search.db_registrations.postal_code = 21;
    // State or Province
    string search.db_registrations.state_province = 22;
    // Support tier
    string search.db_registrations.support_tier = 23;
    // Type
    string search.db_registrations.type = 24;
    // RAMADDA Site URL
    string search.db_registrations.url = 25;
    // # users
    int32 search.db_registrations.users = 26;
    // Number to skip
    int32 skip = 27;
    // Search text
    string text = 28;
    // To date
    string todate = 29;
}

message GetRepositorySearchTypeSlack_teamRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeStatusboardRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Status
    string search.db_statusboard.status = 15;
    // What
    string search.db_statusboard.what = 16;
    // Number to skip
    int32 skip = 17;
    // Search text
    string text = 18;
    // To date
    string todate = 19;
}

message GetRepositorySearchTypeTasksRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Assigned To
    string search.db_tasks.assignedto = 15;
    // % Complete
    double search.db_tasks.complete = 16;
    // End Date
    string search.db_tasks.enddate = 17;
    // Priority
    string search.db_tasks.priority = 18;
    // Start Date
    string search.db_tasks.startdate = 19;
    // Status
    string search.db_tasks.status = 20;
    // Title
    string search.db_tasks.title = 21;
    // Number to skip
    int32 skip = 22;
    // Search text
    string text = 23;
    // To date
    string todate = 24;
}

message GetRepositorySearchTypeTodoRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Category
    string search.db_todo.category = 15;
    // Done
    bool search.db_todo.checked = 16;
    // What
    string search.db_todo.title = 17;
    // Number to skip
    int32 skip = 18;
    // Search text
    string text = 19;
    // To date
    string todate = 20;
}

message GetRepositorySearchTypeTrip_eventRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeTrip_flightRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeTrip_hotelRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeTrip_reportRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeTrip_tripRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_artists_spaceRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Address
    string search.type_artists_space.address = 15;
    // Occupancy
    int32 search.type_artists_space.occupancy = 16;
    // Area
    int32 search.type_artists_space.sqft = 17;
    // Use
    string search.type_artists_space.use = 18;
    // Number to skip
    int32 skip = 19;
    // Search text
    string text = 20;
    // To date
    string todate = 21;
}

message GetRepositorySearchTypeType_awc_metarRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Site ID
    string search.type_awc_metar.site_id = 15;
    // Number to skip
    int32 skip = 16;
    // Search text
    string text = 17;
    // To date
    string todate = 18;
}

message GetRepositorySearchTypeType_awhere_farmRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_awhere_fieldRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_biz_stockseriesRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_census_acsRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Indicators
    string search.type_census_acs.fields = 15;
    // For
    string search.type_census_acs.for_type = 16;
    // In
    string search.type_census_acs.in_type1 = 17;
    // In #2
    string search.type_census_acs.in_type2 = 18;
    // Number to skip
    int32 skip = 19;
    // Search text
    string text = 20;
    // To date
    string todate = 21;
}

message GetRepositorySearchTypeType_db_tableRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_document_csvRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_document_docRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_document_htmlRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_document_pdfRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_document_pptRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_document_xlsRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_drilsdown_casestudyRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_edgar_filingRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // CIK Number
    string search.type_edgar_filing.cik_number = 15;
    // Company Name
    string search.type_edgar_filing.company_name = 16;
    // Form Type
    string search.type_edgar_filing.form_type = 17;
    // IRS Number
    string search.type_edgar_filing.irs_number = 18;
    // Standard Industrial Classification
    string search.type_edgar_filing.standard_industrial_classification = 19;
    // State of Incorporation
    string search.type_edgar_filing.state = 20;
    // Number to skip
    int32 skip = 21;
    // Search text
    string text = 22;
    // To date
    string todate = 23;
}

message GetRepositorySearchTypeType_eia_categoryRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_eia_seriesRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_esri_featureserverRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_esri_geometryserverRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_esri_gpserverRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_esri_imageserverRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_esri_layerRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Layer Type
    string search.type_esri_layer.layer_type = 15;
    // Number to skip
    int32 skip = 16;
    // Search text
    string text = 17;
    // To date
    string todate = 18;
}

message GetRepositorySearchTypeType_esri_mapserverRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_esri_restfolderRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_esri_restserverRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_esri_restserviceRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_fred_categoryRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_fred_seriesRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_gtfs_agencyRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_gtfs_routeRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Route ID
    string search.type_gtfs_route.route_id = 15;
    // Stop Names
    string search.type_gtfs_route.stop_names = 16;
    // Number to skip
    int32 skip = 17;
    // Search text
    string text = 18;
    // To date
    string todate = 19;
}

message GetRepositorySearchTypeType_gtfs_routesRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_gtfs_stopRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Location Type
    string search.type_gtfs_stop.location_type = 15;
    // Stop Code
    string search.type_gtfs_stop.stop_code = 16;
    // Stop ID
    string search.type_gtfs_stop.stop_id = 17;
    // Wheelchair Boarding
    string search.type_gtfs_stop.wheelchair_boarding = 18;
    // Zone ID
    string search.type_gtfs_stop.zone_id = 19;
    // Number to skip
    int32 skip = 20;
    // Search text
    string text = 21;
    // To date
    string todate = 22;
}

message GetRepositorySearchTypeType_gtfs_stopsRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_gtfs_tripRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Bikes Allowed
    string search.type_gtfs_trip.bikes_allowed = 15;
    // Stop IDS
    string search.type_gtfs_trip.stop_ids = 16;
    // Wheelchair Accessible
    string search.type_gtfs_trip.wheelchair_accessible = 17;
    // Number to skip
    int32 skip = 18;
    // Search text
    string text = 19;
    // To date
    string todate = 20;
}

message GetRepositorySearchTypeType_hazarddataRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Source Agency
    string search.type_hazarddata.source = 15;
    // Number to skip
    int32 skip = 16;
    // Search text
    string text = 17;
    // To date
    string todate = 18;
}

message GetRepositorySearchTypeType_hydro_coloradoRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Site ID
    string search.type_hydro_colorado.site_id = 15;
    // Number to skip
    int32 skip = 16;
    // Search text
    string text = 17;
    // To date
    string todate = 18;
}

message GetRepositorySearchTypeType_idv_bundleRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_imageRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_image_airportRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_mbRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_mb_collectionRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_mb_point_basicRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_metameta_collectionRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_metameta_dictionaryRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Type
    string search.type_metameta_dictionary.dictionary_type = 15;
    // Index
    int32 search.type_metameta_dictionary.field_index = 16;
    // Handler Class
    string search.type_metameta_dictionary.handler_class = 17;
    // Is Group
    bool search.type_metameta_dictionary.isgroup = 18;
    // Properties
    string search.type_metameta_dictionary.properties = 19;
    // Short Name
    string search.type_metameta_dictionary.short_name = 20;
    // Super Type
    string search.type_metameta_dictionary.super_type = 21;
    // Wiki Text
    string search.type_metameta_dictionary.wiki_text = 22;
    // Number to skip
    int32 skip = 23;
    // Search text
    string text = 24;
    // To date
    string todate = 25;
}

message GetRepositorySearchTypeType_metameta_fieldRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Database Column Size
    int32 search.type_metameta_field.database_column_size = 15;
    // Data Type
    string search.type_metameta_field.datatype = 16;
    // Enumeration Values
    string search.type_metameta_field.enumeration_values = 17;
    // Field ID
    string search.type_metameta_field.field_id = 18;
    // Index
    int32 search.type_metameta_field.field_index = 19;
    // Missing Value
    string search.type_metameta_field.missing = 20;
    // Properties
    string search.type_metameta_field.properties = 21;
    // Unit
    string search.type_metameta_field.unit = 22;
    // Number to skip
    int32 skip = 23;
    // Search text
    string text = 24;
    // To date
    string todate = 25;
}

message GetRepositorySearchTypeType_nist_constantRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Unit
    string search.type_nist_constant.unit = 15;
    // Number to skip
    int32 skip = 16;
    // Search text
    string text = 17;
    // To date
    string todate = 18;
}

message GetRepositorySearchTypeType_nist_energyRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Ionization Energy (eV)
    string search.type_nist_energy.energy = 15;
    // Ground Level
    string search.type_nist_energy.level = 16;
    // Ground Shells
    string search.type_nist_energy.shells = 17;
    // Number to skip
    int32 skip = 18;
    // Search text
    string text = 19;
    // To date
    string todate = 20;
}

message GetRepositorySearchTypeType_nist_isotopeRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_nist_janaffileRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_nitfRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_point_ameriflux_level2Request {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Contact
    string search.type_point_ameriflux_level2.contact = 15;
    // Ecosystem Type
    string search.type_point_ameriflux_level2.ecosystem_type = 16;
    // Site ID
    string search.type_point_ameriflux_level2.site_id = 17;
    // Number to skip
    int32 skip = 18;
    // Search text
    string text = 19;
    // To date
    string todate = 20;
}

message GetRepositorySearchTypeType_point_amrc_finalRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Argos ID
    string search.type_point_amrc_final.argos_id = 15;
    // Site ID
    string search.type_point_amrc_final.site_id = 16;
    // Site Name
    string search.type_point_amrc_final.site_name = 17;
    // Number to skip
    int32 skip = 18;
    // Search text
    string text = 19;
    // To date
    string todate = 20;
}

message GetRepositorySearchTypeType_point_amrc_freewaveRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Data Logger Model
    string search.type_point_amrc_freewave.datalogger_model = 15;
    // Data Logger Serial
    string search.type_point_amrc_freewave.datalogger_serial = 16;
    // File Format
    string search.type_point_amrc_freewave.format = 17;
    // Station Name
    string search.type_point_amrc_freewave.station_name = 18;
    // Number to skip
    int32 skip = 19;
    // Search text
    string text = 20;
    // To date
    string todate = 21;
}

message GetRepositorySearchTypeType_point_collectionRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_point_czoRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_point_gcnetRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_point_geomag_iaga2002Request {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Data Interval
    string search.type_point_geomag_iaga2002.data_interval = 15;
    // Data Type
    string search.type_point_geomag_iaga2002.data_type = 16;
    // Digital Sampling
    string search.type_point_geomag_iaga2002.digital_sampling = 17;
    // IAGA Code
    string search.type_point_geomag_iaga2002.iaga_code = 18;
    // Source of data
    string search.type_point_geomag_iaga2002.source_of_data = 19;
    // Station Name
    string search.type_point_geomag_iaga2002.station_name = 20;
    // Number to skip
    int32 skip = 21;
    // Search text
    string text = 22;
    // To date
    string todate = 23;
}

message GetRepositorySearchTypeType_point_hydro_watermlRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Site Code
    string search.type_point_hydro_waterml.site_code = 15;
    // Site Name
    string search.type_point_hydro_waterml.site_name = 16;
    // Number to skip
    int32 skip = 17;
    // Search text
    string text = 18;
    // To date
    string todate = 19;
}

message GetRepositorySearchTypeType_point_icebridge_atm_icessnRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_point_icebridge_atm_qfitRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_point_icebridge_mccords_irmcr2Request {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_point_icebridge_mccords_irmcr3Request {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_point_icebridge_parisRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_point_idvRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_point_ncdc_climateRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_point_netcdfRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_point_noaa_carbonRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Lab ID Number
    string search.type_point_noaa_carbon.lab_id_number = 15;
    // Measurement Group
    string search.type_point_noaa_carbon.measurement_group = 16;
    // Parameter
    string search.type_point_noaa_carbon.parameter = 17;
    // Project
    string search.type_point_noaa_carbon.project = 18;
    // Site ID
    string search.type_point_noaa_carbon.site_id = 19;
    // Number to skip
    int32 skip = 20;
    // Search text
    string text = 21;
    // To date
    string todate = 22;
}

message GetRepositorySearchTypeType_point_noaa_flask_eventRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Lab ID Number
    string search.type_point_noaa_flask_event.lab_id_number = 15;
    // Measurement Group
    string search.type_point_noaa_flask_event.measurement_group = 16;
    // Parameter
    string search.type_point_noaa_flask_event.parameter = 17;
    // Project
    string search.type_point_noaa_flask_event.project = 18;
    // Site ID
    string search.type_point_noaa_flask_event.site_id = 19;
    // Number to skip
    int32 skip = 20;
    // Search text
    string text = 21;
    // To date
    string todate = 22;
}

message GetRepositorySearchTypeType_point_noaa_flask_monthRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Lab ID Number
    string search.type_point_noaa_flask_month.lab_id_number = 15;
    // Measurement Group
    string search.type_point_noaa_flask_month.measurement_group = 16;
    // Parameter
    string search.type_point_noaa_flask_month.parameter = 17;
    // Project
    string search.type_point_noaa_flask_month.project = 18;
    // Site ID
    string search.type_point_noaa_flask_month.site_id = 19;
    // Number to skip
    int32 skip = 20;
    // Search text
    string text = 21;
    // To date
    string todate = 22;
}

message GetRepositorySearchTypeType_point_noaa_madisRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_point_noaa_towerRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Site ID
    string search.type_point_noaa_tower.site_id = 15;
    // Number to skip
    int32 skip = 16;
    // Search text
    string text = 17;
    // To date
    string todate = 18;
}

message GetRepositorySearchTypeType_point_ocean_cnvRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_point_ocean_csv_sado_TTSRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_point_ocean_csv_sado_meteoRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_point_ocean_csv_sado_positionRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_point_ocean_netcdf_gliderRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Platform
    string search.type_point_ocean_netcdf_track.platform = 15;
    // Number to skip
    int32 skip = 16;
    // Search text
    string text = 17;
    // To date
    string todate = 18;
}

message GetRepositorySearchTypeType_point_ocean_netcdf_trackRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Platform
    string search.type_point_ocean_netcdf_track.platform = 15;
    // Number to skip
    int32 skip = 16;
    // Search text
    string text = 17;
    // To date
    string todate = 18;
}

message GetRepositorySearchTypeType_point_ocean_ooi_dmgxRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_point_pbo_position_time_seriesRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Format Version
    string search.type_point_pbo_position_time_series.format_version = 15;
    // Four Char ID
    string search.type_point_pbo_position_time_series.four_char_id = 16;
    // Processing Center
    string search.type_point_pbo_position_time_series.processing_center = 17;
    // Reference Frame
    string search.type_point_pbo_position_time_series.reference_frame = 18;
    // Station Name
    string search.type_point_pbo_position_time_series.station_name = 19;
    // Number to skip
    int32 skip = 20;
    // Search text
    string text = 21;
    // To date
    string todate = 22;
}

message GetRepositorySearchTypeType_point_snotelRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // HUC ID
    string search.type_point_snotel.huc_id = 15;
    // HUC Name
    string search.type_point_snotel.huc_name = 16;
    // Network
    string search.type_point_snotel.network = 17;
    // Site ID
    string search.type_point_snotel.site_id = 18;
    // Site Number
    string search.type_point_snotel.site_number = 19;
    // State
    string search.type_point_snotel.state = 20;
    // Number to skip
    int32 skip = 21;
    // Search text
    string text = 22;
    // To date
    string todate = 23;
}

message GetRepositorySearchTypeType_point_wsbb_ggpRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Author
    string search.type_point_wsbb_ggp.author = 15;
    // Instrument
    string search.type_point_wsbb_ggp.instrument = 16;
    // Station
    string search.type_point_wsbb_ggp.station = 17;
    // Number to skip
    int32 skip = 18;
    // Search text
    string text = 19;
    // To date
    string todate = 20;
}

message GetRepositorySearchTypeType_power_miso_forecastRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_psd_monthly_climate_indexRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Units
    string search.type_psd_monthly_climate_index.units = 15;
    // Number to skip
    int32 skip = 16;
    // Search text
    string text = 17;
    // To date
    string todate = 18;
}

message GetRepositorySearchTypeType_quandl_seriesRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_resilience_assessmentRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Type
    string search.type_resilience_assessment.assessment_type = 15;
    // Bioregion
    string search.type_resilience_assessment.bioregion = 16;
    // Country
    string search.type_resilience_assessment.country = 17;
    // Location
    string search.type_resilience_assessment.location = 18;
    // Organization
    string search.type_resilience_assessment.organization = 19;
    // Resilience definition
    string search.type_resilience_assessment.resilience_definition = 20;
    // Theory development
    string search.type_resilience_assessment.theory_development = 21;
    // Number to skip
    int32 skip = 22;
    // Search text
    string text = 23;
    // To date
    string todate = 24;
}

message GetRepositorySearchTypeType_resilience_projectRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Country
    string search.type_resilience_project.country = 15;
    // Project Type
    string search.type_resilience_project.project_type = 16;
    // Status
    string search.type_resilience_project.status = 17;
    // Number to skip
    int32 skip = 18;
    // Search text
    string text = 19;
    // To date
    string todate = 20;
}

message GetRepositorySearchTypeType_reuters_documentRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_service_groupRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_service_linkRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_socrata_seriesRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_urbaninstitute_employmentRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Region
    string search.type_urbaninstitute_employment.region = 15;
    // Number to skip
    int32 skip = 16;
    // Search text
    string text = 17;
    // To date
    string todate = 18;
}

message GetRepositorySearchTypeType_usda_arms_cropRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Report
    string search.type_usda_arms_crop.report = 15;
    // State
    string search.type_usda_arms_crop.state = 16;
    // Subject
    string search.type_usda_arms_crop.subject = 17;
    // Number to skip
    int32 skip = 18;
    // Search text
    string text = 19;
    // To date
    string todate = 20;
}

message GetRepositorySearchTypeType_usda_arms_financeRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Report
    string search.type_usda_arms_finance.report = 15;
    // State
    string search.type_usda_arms_finance.state = 16;
    // Subject
    string search.type_usda_arms_finance.subject = 17;
    // Number to skip
    int32 skip = 18;
    // Search text
    string text = 19;
    // To date
    string todate = 20;
}

message GetRepositorySearchTypeType_usda_nassRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Commodities
    string search.type_usda_nass.commodity = 15;
    // Source
    string search.type_usda_nass.source = 16;
    // State
    string search.type_usda_nass.state = 17;
    // Number to skip
    int32 skip = 18;
    // Search text
    string text = 19;
    // To date
    string todate = 20;
}

message GetRepositorySearchTypeType_virtualRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_wms_capabilitiesRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeType_wms_layerRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeVote_yesnoRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // My Vote
    string search.db_vote_yesno.vote = 15;
    // Number to skip
    int32 skip = 16;
    // Search text
    string text = 17;
    // To date
    string todate = 18;
}

message GetRepositorySearchTypeWeblogRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Number to skip
    int32 skip = 15;
    // Search text
    string text = 16;
    // To date
    string todate = 17;
}

message GetRepositorySearchTypeWikipageRequest {
    // Archive change date from
    string changedate.from = 1;
    // Archive change date to
    string changedate.to = 2;
    // Archive create date from
    string createdate.from = 3;
    // Archive create date to
    string createdate.to = 4;
    // Search description
    string description = 5;
    // File suffix
    string filesuffix = 6;
    // From date
    string fromdate = 7;
    // Parent entry
    string group = 8;
    // Max number of results
    int32 max = 9;
    // Northern bounds of search
    float maxlatitude = 10;
    // Eastern bounds of search
    float maxlongitude = 11;
    // Southern bounds of search
    float minlatitude = 12;
    // Western bounds of search
    float minlongitude = 13;
    // Search name
    string name = 14;
    // Wiki Page Category
    string search.wikipage.category = 15;
    // Wiki Text
    string search.wikipage.wikitext = 16;
    // Number to skip
    int32 skip = 17;
    // Search text
    string text = 18;
    // To date
    string todate = 19;
}

service RAMADDAService {
    // API for View GPS QC
    // 
    // API to call: View GPS QC
    rpc GetRepositoryEntryShow(GetRepositoryEntryShowRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/entry/show"
      };
    }
    // Search API for 'Before and After Images' entry type
    // 
    // API to search for entries of type Before and After Images
    rpc GetRepositorySearchTypeBeforeafter(GetRepositorySearchTypeBeforeafterRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/beforeafter"
      };
    }
    // Search API for 'Bibliographic Entry' entry type
    // 
    // API to search for entries of type Bibliographic Entry
    rpc GetRepositorySearchTypeBiblio(GetRepositorySearchTypeBiblioRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/biblio"
      };
    }
    // Search API for 'DICOM File' entry type
    // 
    // API to search for entries of type DICOM File
    rpc GetRepositorySearchTypeBio_dicom(GetRepositorySearchTypeBio_dicomRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/bio_dicom"
      };
    }
    // Search API for 'DICOM Test File' entry type
    // 
    // API to search for entries of type DICOM Test File
    rpc GetRepositorySearchTypeBio_dicom_test(GetRepositorySearchTypeBio_dicom_testRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/bio_dicom_test"
      };
    }
    // Search API for 'FASTA File' entry type
    // 
    // API to search for entries of type FASTA File
    rpc GetRepositorySearchTypeBio_fasta(GetRepositorySearchTypeBio_fastaRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/bio_fasta"
      };
    }
    // Search API for 'FASTQ File' entry type
    // 
    // API to search for entries of type FASTQ File
    rpc GetRepositorySearchTypeBio_fastq(GetRepositorySearchTypeBio_fastqRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/bio_fastq"
      };
    }
    // Search API for 'HMMER Index File' entry type
    // 
    // API to search for entries of type HMMER Index File
    rpc GetRepositorySearchTypeBio_hmmer_index(GetRepositorySearchTypeBio_hmmer_indexRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/bio_hmmer_index"
      };
    }
    // Search API for 'OME TIFF File' entry type
    // 
    // API to search for entries of type OME TIFF File
    rpc GetRepositorySearchTypeBio_ome_tiff(GetRepositorySearchTypeBio_ome_tiffRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/bio_ome_tiff"
      };
    }
    // Search API for 'Assay' entry type
    // 
    // API to search for entries of type Assay
    rpc GetRepositorySearchTypeBio_ontology_assay(GetRepositorySearchTypeBio_ontology_assayRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/bio_ontology_assay"
      };
    }
    // Search API for 'Cohort' entry type
    // 
    // API to search for entries of type Cohort
    rpc GetRepositorySearchTypeBio_ontology_cohort(GetRepositorySearchTypeBio_ontology_cohortRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/bio_ontology_cohort"
      };
    }
    // Search API for 'Person' entry type
    // 
    // API to search for entries of type Person
    rpc GetRepositorySearchTypeBio_ontology_person(GetRepositorySearchTypeBio_ontology_personRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/bio_ontology_person"
      };
    }
    // Search API for 'Sample' entry type
    // 
    // API to search for entries of type Sample
    rpc GetRepositorySearchTypeBio_ontology_sample(GetRepositorySearchTypeBio_ontology_sampleRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/bio_ontology_sample"
      };
    }
    // Search API for 'Series' entry type
    // 
    // API to search for entries of type Series
    rpc GetRepositorySearchTypeBio_ontology_series(GetRepositorySearchTypeBio_ontology_seriesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/bio_ontology_series"
      };
    }
    // Search API for 'Study' entry type
    // 
    // API to search for entries of type Study
    rpc GetRepositorySearchTypeBio_ontology_study(GetRepositorySearchTypeBio_ontology_studyRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/bio_ontology_study"
      };
    }
    // Search API for 'SAM Data' entry type
    // 
    // API to search for entries of type SAM Data
    rpc GetRepositorySearchTypeBio_sam(GetRepositorySearchTypeBio_samRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/bio_sam"
      };
    }
    // Search API for 'PDB Protein File' entry type
    // 
    // API to search for entries of type PDB Protein File
    rpc GetRepositorySearchTypeBio_sf_pdb(GetRepositorySearchTypeBio_sf_pdbRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/bio_sf_pdb"
      };
    }
    // Search API for 'Sequence Read Archive' entry type
    // 
    // API to search for entries of type Sequence Read Archive
    rpc GetRepositorySearchTypeBio_sra(GetRepositorySearchTypeBio_sraRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/bio_sra"
      };
    }
    // Search API for 'Stockholm File' entry type
    // 
    // API to search for entries of type Stockholm File
    rpc GetRepositorySearchTypeBio_stockholm(GetRepositorySearchTypeBio_stockholmRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/bio_stockholm"
      };
    }
    // Search API for 'Taxonomic Entry' entry type
    // 
    // API to search for entries of type Taxonomic Entry
    rpc GetRepositorySearchTypeBio_taxonomy(GetRepositorySearchTypeBio_taxonomyRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/bio_taxonomy"
      };
    }
    // Search API for 'Weblog Entry' entry type
    // 
    // API to search for entries of type Weblog Entry
    rpc GetRepositorySearchTypeBlogentry(GetRepositorySearchTypeBlogentryRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/blogentry"
      };
    }
    // Search API for 'Bookmarks' entry type
    // 
    // API to search for entries of type Bookmarks
    rpc GetRepositorySearchTypeBookmarks(GetRepositorySearchTypeBookmarksRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/bookmarks"
      };
    }
    // Search API for 'Boulder County Voter Details' entry type
    // 
    // API to search for entries of type Boulder County Voter Details
    rpc GetRepositorySearchTypeBoulder_county_voter_details(GetRepositorySearchTypeBoulder_county_voter_detailsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/boulder_county_voter_details"
      };
    }
    // Search API for 'Calendar' entry type
    // 
    // API to search for entries of type Calendar
    rpc GetRepositorySearchTypeCalendar(GetRepositorySearchTypeCalendarRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/calendar"
      };
    }
    // Search API for 'Catalog Link' entry type
    // 
    // API to search for entries of type Catalog Link
    rpc GetRepositorySearchTypeCataloglink(GetRepositorySearchTypeCataloglinkRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/cataloglink"
      };
    }
    // Search API for 'Gridded Data File' entry type
    // 
    // API to search for entries of type Gridded Data File
    rpc GetRepositorySearchTypeCdm_grid(GetRepositorySearchTypeCdm_gridRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/cdm_grid"
      };
    }
    // Search API for 'Development Review Case' entry type
    // 
    // API to search for entries of type Development Review Case
    rpc GetRepositorySearchTypeCommunity_case(GetRepositorySearchTypeCommunity_caseRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/community_case"
      };
    }
    // Search API for 'Data Hub' entry type
    // 
    // API to search for entries of type Data Hub
    rpc GetRepositorySearchTypeCommunity_datahub(GetRepositorySearchTypeCommunity_datahubRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/community_datahub"
      };
    }
    // Search API for 'Facility' entry type
    // 
    // API to search for entries of type Facility
    rpc GetRepositorySearchTypeCommunity_resource(GetRepositorySearchTypeCommunity_resourceRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/community_resource"
      };
    }
    // Search API for 'Contact List' entry type
    // 
    // API to search for entries of type Contact List
    rpc GetRepositorySearchTypeContact(GetRepositorySearchTypeContactRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/contact"
      };
    }
    // Search API for 'Colorado Health Indicators' entry type
    // 
    // API to search for entries of type Colorado Health Indicators
    rpc GetRepositorySearchTypeDb_co_indicators(GetRepositorySearchTypeDb_co_indicatorsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/db_co_indicators"
      };
    }
    // Search API for 'MERRA Data' entry type
    // 
    // API to search for entries of type MERRA Data
    rpc GetRepositorySearchTypeEarth_merra(GetRepositorySearchTypeEarth_merraRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/earth_merra"
      };
    }
    // Search API for 'Landsat Satellite Data' entry type
    // 
    // API to search for entries of type Landsat Satellite Data
    rpc GetRepositorySearchTypeEarth_satellite_landsat(GetRepositorySearchTypeEarth_satellite_landsatRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/earth_satellite_landsat"
      };
    }
    // Search API for 'Aqua Modis Satellite Data' entry type
    // 
    // API to search for entries of type Aqua Modis Satellite Data
    rpc GetRepositorySearchTypeEarth_satellite_modis_aqua(GetRepositorySearchTypeEarth_satellite_modis_aquaRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/earth_satellite_modis_aqua"
      };
    }
    // Search API for 'WRF Namelist File' entry type
    // 
    // API to search for entries of type WRF Namelist File
    rpc GetRepositorySearchTypeEarth_wrf_namelist(GetRepositorySearchTypeEarth_wrf_namelistRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/earth_wrf_namelist"
      };
    }
    // Search API for 'Exercise' entry type
    // 
    // API to search for entries of type Exercise
    rpc GetRepositorySearchTypeExercise(GetRepositorySearchTypeExerciseRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/exercise"
      };
    }
    // Search API for 'FAQ' entry type
    // 
    // API to search for entries of type FAQ
    rpc GetRepositorySearchTypeFaq(GetRepositorySearchTypeFaqRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/faq"
      };
    }
    // Search API for 'RSS/ATOM Feed' entry type
    // 
    // API to search for entries of type RSS/ATOM Feed
    rpc GetRepositorySearchTypeFeed(GetRepositorySearchTypeFeedRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/feed"
      };
    }
    // Search API for 'File' entry type
    // 
    // API to search for entries of type File
    rpc GetRepositorySearchTypeFile(GetRepositorySearchTypeFileRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/file"
      };
    }
    // Search API for 'FITS Data File' entry type
    // 
    // API to search for entries of type FITS Data File
    rpc GetRepositorySearchTypeFits_data(GetRepositorySearchTypeFits_dataRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/fits_data"
      };
    }
    // Search API for 'IFrames' entry type
    // 
    // API to search for entries of type IFrames
    rpc GetRepositorySearchTypeFrames(GetRepositorySearchTypeFramesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/frames"
      };
    }
    // Search API for 'Remote FTP File View' entry type
    // 
    // API to search for entries of type Remote FTP File View
    rpc GetRepositorySearchTypeFtp(GetRepositorySearchTypeFtpRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/ftp"
      };
    }
    // Search API for 'Clock' entry type
    // 
    // API to search for entries of type Clock
    rpc GetRepositorySearchTypeGadgets_clock(GetRepositorySearchTypeGadgets_clockRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/gadgets_clock"
      };
    }
    // Search API for 'Countdown' entry type
    // 
    // API to search for entries of type Countdown
    rpc GetRepositorySearchTypeGadgets_countdown(GetRepositorySearchTypeGadgets_countdownRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/gadgets_countdown"
      };
    }
    // Search API for 'Stock Ticker' entry type
    // 
    // API to search for entries of type Stock Ticker
    rpc GetRepositorySearchTypeGadgets_stock(GetRepositorySearchTypeGadgets_stockRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/gadgets_stock"
      };
    }
    // Search API for 'Weather' entry type
    // 
    // API to search for entries of type Weather
    rpc GetRepositorySearchTypeGadgets_weather(GetRepositorySearchTypeGadgets_weatherRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/gadgets_weather"
      };
    }
    // Search API for 'Google Docs View' entry type
    // 
    // API to search for entries of type Google Docs View
    rpc GetRepositorySearchTypeGdata_docs(GetRepositorySearchTypeGdata_docsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/gdata_docs"
      };
    }
    // Search API for 'Google Web Albums View' entry type
    // 
    // API to search for entries of type Google Web Albums View
    rpc GetRepositorySearchTypeGdata_photos(GetRepositorySearchTypeGdata_photosRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/gdata_photos"
      };
    }
    // Search API for 'GeoTIFF' entry type
    // 
    // API to search for entries of type GeoTIFF
    rpc GetRepositorySearchTypeGeo_geotiff(GetRepositorySearchTypeGeo_geotiffRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/geo_geotiff"
      };
    }
    // Search API for 'GPX GPS File' entry type
    // 
    // API to search for entries of type GPX GPS File
    rpc GetRepositorySearchTypeGeo_gpx(GetRepositorySearchTypeGeo_gpxRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/geo_gpx"
      };
    }
    // Search API for 'HDF5 File' entry type
    // 
    // API to search for entries of type HDF5 File
    rpc GetRepositorySearchTypeGeo_hdf5(GetRepositorySearchTypeGeo_hdf5Request) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/geo_hdf5"
      };
    }
    // Search API for 'KML/KMZ File' entry type
    // 
    // API to search for entries of type KML/KMZ File
    rpc GetRepositorySearchTypeGeo_kml(GetRepositorySearchTypeGeo_kmlRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/geo_kml"
      };
    }
    // Search API for 'Shapefile' entry type
    // 
    // API to search for entries of type Shapefile
    rpc GetRepositorySearchTypeGeo_shapefile(GetRepositorySearchTypeGeo_shapefileRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/geo_shapefile"
      };
    }
    // Search API for 'Glossary' entry type
    // 
    // API to search for entries of type Glossary
    rpc GetRepositorySearchTypeGlossary(GetRepositorySearchTypeGlossaryRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/glossary"
      };
    }
    // Search API for 'Grid Aggregation' entry type
    // 
    // API to search for entries of type Grid Aggregation
    rpc GetRepositorySearchTypeGridaggregation(GetRepositorySearchTypeGridaggregationRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/gridaggregation"
      };
    }
    // Search API for 'Folder' entry type
    // 
    // API to search for entries of type Folder
    rpc GetRepositorySearchTypeGroup(GetRepositorySearchTypeGroupRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/group"
      };
    }
    // Search API for 'HipChat Group' entry type
    // 
    // API to search for entries of type HipChat Group
    rpc GetRepositorySearchTypeHipchat_group(GetRepositorySearchTypeHipchat_groupRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/hipchat_group"
      };
    }
    // Search API for 'Home Page' entry type
    // 
    // API to search for entries of type Home Page
    rpc GetRepositorySearchTypeHomepage(GetRepositorySearchTypeHomepageRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/homepage"
      };
    }
    // Search API for 'Incident' entry type
    // 
    // API to search for entries of type Incident
    rpc GetRepositorySearchTypeIncident(GetRepositorySearchTypeIncidentRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/incident"
      };
    }
    // Search API for 'Basement Flooding' entry type
    // 
    // API to search for entries of type Basement Flooding
    rpc GetRepositorySearchTypeIncident_basement(GetRepositorySearchTypeIncident_basementRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/incident_basement"
      };
    }
    // Search API for 'Investigation' entry type
    // 
    // API to search for entries of type Investigation
    rpc GetRepositorySearchTypeInvestigation_case(GetRepositorySearchTypeInvestigation_caseRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/investigation_case"
      };
    }
    // Search API for 'Cell Phone Log' entry type
    // 
    // API to search for entries of type Cell Phone Log
    rpc GetRepositorySearchTypeInvestigation_cellphonelog(GetRepositorySearchTypeInvestigation_cellphonelogRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/investigation_cellphonelog"
      };
    }
    // Search API for 'Event' entry type
    // 
    // API to search for entries of type Event
    rpc GetRepositorySearchTypeInvestigation_event(GetRepositorySearchTypeInvestigation_eventRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/investigation_event"
      };
    }
    // Search API for 'Old Phone Log' entry type
    // 
    // API to search for entries of type Old Phone Log
    rpc GetRepositorySearchTypeInvestigation_oldphonelog(GetRepositorySearchTypeInvestigation_oldphonelogRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/investigation_oldphonelog"
      };
    }
    // Search API for 'Person' entry type
    // 
    // API to search for entries of type Person
    rpc GetRepositorySearchTypeInvestigation_person(GetRepositorySearchTypeInvestigation_personRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/investigation_person"
      };
    }
    // Search API for 'Thing' entry type
    // 
    // API to search for entries of type Thing
    rpc GetRepositorySearchTypeInvestigation_thing(GetRepositorySearchTypeInvestigation_thingRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/investigation_thing"
      };
    }
    // Search API for 'WMS Image' entry type
    // 
    // API to search for entries of type WMS Image
    rpc GetRepositorySearchTypeLatlonimage(GetRepositorySearchTypeLatlonimageRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/latlonimage"
      };
    }
    // Search API for 'LiDAR Collection' entry type
    // 
    // API to search for entries of type LiDAR Collection
    rpc GetRepositorySearchTypeLidar_collection(GetRepositorySearchTypeLidar_collectionRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/lidar_collection"
      };
    }
    // Search API for 'GLAS Lidar Data' entry type
    // 
    // API to search for entries of type GLAS Lidar Data
    rpc GetRepositorySearchTypeLidar_glas(GetRepositorySearchTypeLidar_glasRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/lidar_glas"
      };
    }
    // Search API for 'LAS Lidar Data' entry type
    // 
    // API to search for entries of type LAS Lidar Data
    rpc GetRepositorySearchTypeLidar_las(GetRepositorySearchTypeLidar_lasRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/lidar_las"
      };
    }
    // Search API for 'LVIS Lidar Data' entry type
    // 
    // API to search for entries of type LVIS Lidar Data
    rpc GetRepositorySearchTypeLidar_lvis(GetRepositorySearchTypeLidar_lvisRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/lidar_lvis"
      };
    }
    // Search API for 'Link' entry type
    // 
    // API to search for entries of type Link
    rpc GetRepositorySearchTypeLink(GetRepositorySearchTypeLinkRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/link"
      };
    }
    // Search API for 'Server Side Files' entry type
    // 
    // API to search for entries of type Server Side Files
    rpc GetRepositorySearchTypeLocalfiles(GetRepositorySearchTypeLocalfilesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/localfiles"
      };
    }
    // Search API for 'Locations' entry type
    // 
    // API to search for entries of type Locations
    rpc GetRepositorySearchTypeLocations(GetRepositorySearchTypeLocationsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/locations"
      };
    }
    // Search API for 'Google Map URL' entry type
    // 
    // API to search for entries of type Google Map URL
    rpc GetRepositorySearchTypeMap_googlemap(GetRepositorySearchTypeMap_googlemapRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/map_googlemap"
      };
    }
    // Search API for 'Audio File' entry type
    // 
    // API to search for entries of type Audio File
    rpc GetRepositorySearchTypeMedia_audiofile(GetRepositorySearchTypeMedia_audiofileRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/media_audiofile"
      };
    }
    // Search API for 'Image Loop' entry type
    // 
    // API to search for entries of type Image Loop
    rpc GetRepositorySearchTypeMedia_imageloop(GetRepositorySearchTypeMedia_imageloopRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/media_imageloop"
      };
    }
    // Search API for 'Photo Album' entry type
    // 
    // API to search for entries of type Photo Album
    rpc GetRepositorySearchTypeMedia_photoalbum(GetRepositorySearchTypeMedia_photoalbumRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/media_photoalbum"
      };
    }
    // Search API for 'Video Channel' entry type
    // 
    // API to search for entries of type Video Channel
    rpc GetRepositorySearchTypeMedia_video_channel(GetRepositorySearchTypeMedia_video_channelRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/media_video_channel"
      };
    }
    // Search API for 'Quicktime Video' entry type
    // 
    // API to search for entries of type Quicktime Video
    rpc GetRepositorySearchTypeMedia_video_quicktime(GetRepositorySearchTypeMedia_video_quicktimeRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/media_video_quicktime"
      };
    }
    // Search API for 'YouTube Video' entry type
    // 
    // API to search for entries of type YouTube Video
    rpc GetRepositorySearchTypeMedia_youtubevideo(GetRepositorySearchTypeMedia_youtubevideoRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/media_youtubevideo"
      };
    }
    // Search API for 'Multiple Search' entry type
    // 
    // API to search for entries of type Multiple Search
    rpc GetRepositorySearchTypeMultisearch(GetRepositorySearchTypeMultisearchRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/multisearch"
      };
    }
    // Search API for 'NGA Tracks' entry type
    // 
    // API to search for entries of type NGA Tracks
    rpc GetRepositorySearchTypeNga_tracks(GetRepositorySearchTypeNga_tracksRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/nga_tracks"
      };
    }
    // Search API for 'Notes' entry type
    // 
    // API to search for entries of type Notes
    rpc GetRepositorySearchTypeNotes(GetRepositorySearchTypeNotesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/notes"
      };
    }
    // Search API for 'Note' entry type
    // 
    // API to search for entries of type Note
    rpc GetRepositorySearchTypeNotes_note(GetRepositorySearchTypeNotes_noteRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/notes_note"
      };
    }
    // Search API for 'OPeNDAP Link' entry type
    // 
    // API to search for entries of type OPeNDAP Link
    rpc GetRepositorySearchTypeOpendaplink(GetRepositorySearchTypeOpendaplinkRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/opendaplink"
      };
    }
    // Search API for 'OWL Class' entry type
    // 
    // API to search for entries of type OWL Class
    rpc GetRepositorySearchTypeOwlClass(GetRepositorySearchTypeOwlClassRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/owl.class"
      };
    }
    // Search API for 'OWL Ontology' entry type
    // 
    // API to search for entries of type OWL Ontology
    rpc GetRepositorySearchTypeOwlOntology(GetRepositorySearchTypeOwlOntologyRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/owl.ontology"
      };
    }
    // Search API for 'Paste Text Entry' entry type
    // 
    // API to search for entries of type Paste Text Entry
    rpc GetRepositorySearchTypePasteitentry(GetRepositorySearchTypePasteitentryRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/pasteitentry"
      };
    }
    // Search API for 'Text Point Data' entry type
    // 
    // API to search for entries of type Text Point Data
    rpc GetRepositorySearchTypePoint_text(GetRepositorySearchTypePoint_textRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/point_text"
      };
    }
    // Search API for 'Poll' entry type
    // 
    // API to search for entries of type Poll
    rpc GetRepositorySearchTypePoll(GetRepositorySearchTypePollRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/poll"
      };
    }
    // Search API for 'Campaign' entry type
    // 
    // API to search for entries of type Campaign
    rpc GetRepositorySearchTypeProject_campaign(GetRepositorySearchTypeProject_campaignRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/project_campaign"
      };
    }
    // Search API for 'Case Study' entry type
    // 
    // API to search for entries of type Case Study
    rpc GetRepositorySearchTypeProject_casestudy(GetRepositorySearchTypeProject_casestudyRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/project_casestudy"
      };
    }
    // Search API for 'Research Contribution' entry type
    // 
    // API to search for entries of type Research Contribution
    rpc GetRepositorySearchTypeProject_contribution(GetRepositorySearchTypeProject_contributionRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/project_contribution"
      };
    }
    // Search API for 'Data Format' entry type
    // 
    // API to search for entries of type Data Format
    rpc GetRepositorySearchTypeProject_dataformat(GetRepositorySearchTypeProject_dataformatRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/project_dataformat"
      };
    }
    // Search API for 'Dataset' entry type
    // 
    // API to search for entries of type Dataset
    rpc GetRepositorySearchTypeProject_dataset(GetRepositorySearchTypeProject_datasetRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/project_dataset"
      };
    }
    // Search API for 'Deployment' entry type
    // 
    // API to search for entries of type Deployment
    rpc GetRepositorySearchTypeProject_deployment(GetRepositorySearchTypeProject_deploymentRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/project_deployment"
      };
    }
    // Search API for 'Experiment' entry type
    // 
    // API to search for entries of type Experiment
    rpc GetRepositorySearchTypeProject_experiment(GetRepositorySearchTypeProject_experimentRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/project_experiment"
      };
    }
    // Search API for 'Field Note' entry type
    // 
    // API to search for entries of type Field Note
    rpc GetRepositorySearchTypeProject_fieldnote(GetRepositorySearchTypeProject_fieldnoteRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/project_fieldnote"
      };
    }
    // Search API for 'Control Points File' entry type
    // 
    // API to search for entries of type Control Points File
    rpc GetRepositorySearchTypeProject_gps_controlpoints(GetRepositorySearchTypeProject_gps_controlpointsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/project_gps_controlpoints"
      };
    }
    // Search API for 'Raw GPS File' entry type
    // 
    // API to search for entries of type Raw GPS File
    rpc GetRepositorySearchTypeProject_gps_raw(GetRepositorySearchTypeProject_gps_rawRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/project_gps_raw"
      };
    }
    // Search API for 'RINEX File' entry type
    // 
    // API to search for entries of type RINEX File
    rpc GetRepositorySearchTypeProject_gps_rinex(GetRepositorySearchTypeProject_gps_rinexRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/project_gps_rinex"
      };
    }
    // Search API for 'Instrument Data Collection' entry type
    // 
    // API to search for entries of type Instrument Data Collection
    rpc GetRepositorySearchTypeProject_instrument(GetRepositorySearchTypeProject_instrumentRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/project_instrument"
      };
    }
    // Search API for 'Teaching Resource' entry type
    // 
    // API to search for entries of type Teaching Resource
    rpc GetRepositorySearchTypeProject_learning_resource(GetRepositorySearchTypeProject_learning_resourceRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/project_learning_resource"
      };
    }
    // Search API for 'Meeting' entry type
    // 
    // API to search for entries of type Meeting
    rpc GetRepositorySearchTypeProject_meeting(GetRepositorySearchTypeProject_meetingRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/project_meeting"
      };
    }
    // Search API for 'Organization' entry type
    // 
    // API to search for entries of type Organization
    rpc GetRepositorySearchTypeProject_organization(GetRepositorySearchTypeProject_organizationRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/project_organization"
      };
    }
    // Search API for 'Program' entry type
    // 
    // API to search for entries of type Program
    rpc GetRepositorySearchTypeProject_program(GetRepositorySearchTypeProject_programRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/project_program"
      };
    }
    // Search API for 'Project' entry type
    // 
    // API to search for entries of type Project
    rpc GetRepositorySearchTypeProject_project(GetRepositorySearchTypeProject_projectRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/project_project"
      };
    }
    // Search API for 'Data Access Service' entry type
    // 
    // API to search for entries of type Data Access Service
    rpc GetRepositorySearchTypeProject_service(GetRepositorySearchTypeProject_serviceRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/project_service"
      };
    }
    // Search API for 'Site' entry type
    // 
    // API to search for entries of type Site
    rpc GetRepositorySearchTypeProject_site(GetRepositorySearchTypeProject_siteRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/project_site"
      };
    }
    // Search API for 'Software Tool' entry type
    // 
    // API to search for entries of type Software Tool
    rpc GetRepositorySearchTypeProject_softwarepackage(GetRepositorySearchTypeProject_softwarepackageRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/project_softwarepackage"
      };
    }
    // Search API for 'Standard Parameter Name' entry type
    // 
    // API to search for entries of type Standard Parameter Name
    rpc GetRepositorySearchTypeProject_standard_name(GetRepositorySearchTypeProject_standard_nameRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/project_standard_name"
      };
    }
    // Search API for 'Survey Location' entry type
    // 
    // API to search for entries of type Survey Location
    rpc GetRepositorySearchTypeProject_surveylocation(GetRepositorySearchTypeProject_surveylocationRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/project_surveylocation"
      };
    }
    // Search API for 'Vocabulary Term' entry type
    // 
    // API to search for entries of type Vocabulary Term
    rpc GetRepositorySearchTypeProject_term(GetRepositorySearchTypeProject_termRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/project_term"
      };
    }
    // Search API for 'Site Visit' entry type
    // 
    // API to search for entries of type Site Visit
    rpc GetRepositorySearchTypeProject_visit(GetRepositorySearchTypeProject_visitRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/project_visit"
      };
    }
    // Search API for 'Vocabulary' entry type
    // 
    // API to search for entries of type Vocabulary
    rpc GetRepositorySearchTypeProject_vocabulary(GetRepositorySearchTypeProject_vocabularyRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/project_vocabulary"
      };
    }
    // Search API for 'Property Sales' entry type
    // 
    // API to search for entries of type Property Sales
    rpc GetRepositorySearchTypeProperty_sales(GetRepositorySearchTypeProperty_salesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/property_sales"
      };
    }
    // Search API for 'Property Database' entry type
    // 
    // API to search for entries of type Property Database
    rpc GetRepositorySearchTypePropertydb(GetRepositorySearchTypePropertydbRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/propertydb"
      };
    }
    // Search API for 'IPython Notebook file' entry type
    // 
    // API to search for entries of type IPython Notebook file
    rpc GetRepositorySearchTypePython_notebook(GetRepositorySearchTypePython_notebookRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/python_notebook"
      };
    }
    // Search API for 'Registrations' entry type
    // 
    // API to search for entries of type Registrations
    rpc GetRepositorySearchTypeRegistrations(GetRepositorySearchTypeRegistrationsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/registrations"
      };
    }
    // Search API for 'Slack Team' entry type
    // 
    // API to search for entries of type Slack Team
    rpc GetRepositorySearchTypeSlack_team(GetRepositorySearchTypeSlack_teamRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/slack_team"
      };
    }
    // Search API for 'Status Board' entry type
    // 
    // API to search for entries of type Status Board
    rpc GetRepositorySearchTypeStatusboard(GetRepositorySearchTypeStatusboardRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/statusboard"
      };
    }
    // Search API for 'Tasks' entry type
    // 
    // API to search for entries of type Tasks
    rpc GetRepositorySearchTypeTasks(GetRepositorySearchTypeTasksRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/tasks"
      };
    }
    // Search API for 'Todo' entry type
    // 
    // API to search for entries of type Todo
    rpc GetRepositorySearchTypeTodo(GetRepositorySearchTypeTodoRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/todo"
      };
    }
    // Search API for 'Event' entry type
    // 
    // API to search for entries of type Event
    rpc GetRepositorySearchTypeTrip_event(GetRepositorySearchTypeTrip_eventRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/trip_event"
      };
    }
    // Search API for 'Flight Leg' entry type
    // 
    // API to search for entries of type Flight Leg
    rpc GetRepositorySearchTypeTrip_flight(GetRepositorySearchTypeTrip_flightRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/trip_flight"
      };
    }
    // Search API for 'Lodging' entry type
    // 
    // API to search for entries of type Lodging
    rpc GetRepositorySearchTypeTrip_hotel(GetRepositorySearchTypeTrip_hotelRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/trip_hotel"
      };
    }
    // Search API for 'Trip Report' entry type
    // 
    // API to search for entries of type Trip Report
    rpc GetRepositorySearchTypeTrip_report(GetRepositorySearchTypeTrip_reportRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/trip_report"
      };
    }
    // Search API for 'Trip' entry type
    // 
    // API to search for entries of type Trip
    rpc GetRepositorySearchTypeTrip_trip(GetRepositorySearchTypeTrip_tripRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/trip_trip"
      };
    }
    // Search API for 'Artists Space' entry type
    // 
    // API to search for entries of type Artists Space
    rpc GetRepositorySearchTypeType_artists_space(GetRepositorySearchTypeType_artists_spaceRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_artists_space"
      };
    }
    // Search API for 'AWC Weather Observations' entry type
    // 
    // API to search for entries of type AWC Weather Observations
    rpc GetRepositorySearchTypeType_awc_metar(GetRepositorySearchTypeType_awc_metarRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_awc_metar"
      };
    }
    // Search API for 'aWhere Farm' entry type
    // 
    // API to search for entries of type aWhere Farm
    rpc GetRepositorySearchTypeType_awhere_farm(GetRepositorySearchTypeType_awhere_farmRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_awhere_farm"
      };
    }
    // Search API for 'aWhere Field' entry type
    // 
    // API to search for entries of type aWhere Field
    rpc GetRepositorySearchTypeType_awhere_field(GetRepositorySearchTypeType_awhere_fieldRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_awhere_field"
      };
    }
    // Search API for 'Stock Ticker Data' entry type
    // 
    // API to search for entries of type Stock Ticker Data
    rpc GetRepositorySearchTypeType_biz_stockseries(GetRepositorySearchTypeType_biz_stockseriesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_biz_stockseries"
      };
    }
    // Search API for 'US Census ACS Data' entry type
    // 
    // API to search for entries of type US Census ACS Data
    rpc GetRepositorySearchTypeType_census_acs(GetRepositorySearchTypeType_census_acsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_census_acs"
      };
    }
    // Search API for 'Database Table' entry type
    // 
    // API to search for entries of type Database Table
    rpc GetRepositorySearchTypeType_db_table(GetRepositorySearchTypeType_db_tableRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_db_table"
      };
    }
    // Search API for 'CSV File' entry type
    // 
    // API to search for entries of type CSV File
    rpc GetRepositorySearchTypeType_document_csv(GetRepositorySearchTypeType_document_csvRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_document_csv"
      };
    }
    // Search API for 'Microsoft Word File' entry type
    // 
    // API to search for entries of type Microsoft Word File
    rpc GetRepositorySearchTypeType_document_doc(GetRepositorySearchTypeType_document_docRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_document_doc"
      };
    }
    // Search API for 'HTML File' entry type
    // 
    // API to search for entries of type HTML File
    rpc GetRepositorySearchTypeType_document_html(GetRepositorySearchTypeType_document_htmlRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_document_html"
      };
    }
    // Search API for 'PDF File' entry type
    // 
    // API to search for entries of type PDF File
    rpc GetRepositorySearchTypeType_document_pdf(GetRepositorySearchTypeType_document_pdfRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_document_pdf"
      };
    }
    // Search API for 'Microsoft Powerpoint File' entry type
    // 
    // API to search for entries of type Microsoft Powerpoint File
    rpc GetRepositorySearchTypeType_document_ppt(GetRepositorySearchTypeType_document_pptRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_document_ppt"
      };
    }
    // Search API for 'Microsoft Excel File' entry type
    // 
    // API to search for entries of type Microsoft Excel File
    rpc GetRepositorySearchTypeType_document_xls(GetRepositorySearchTypeType_document_xlsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_document_xls"
      };
    }
    // Search API for 'Drilsdown Case Study' entry type
    // 
    // API to search for entries of type Drilsdown Case Study
    rpc GetRepositorySearchTypeType_drilsdown_casestudy(GetRepositorySearchTypeType_drilsdown_casestudyRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_drilsdown_casestudy"
      };
    }
    // Search API for 'SEC EDGAR Filing' entry type
    // 
    // API to search for entries of type SEC EDGAR Filing
    rpc GetRepositorySearchTypeType_edgar_filing(GetRepositorySearchTypeType_edgar_filingRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_edgar_filing"
      };
    }
    // Search API for 'EIA Category' entry type
    // 
    // API to search for entries of type EIA Category
    rpc GetRepositorySearchTypeType_eia_category(GetRepositorySearchTypeType_eia_categoryRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_eia_category"
      };
    }
    // Search API for 'EIA Series' entry type
    // 
    // API to search for entries of type EIA Series
    rpc GetRepositorySearchTypeType_eia_series(GetRepositorySearchTypeType_eia_seriesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_eia_series"
      };
    }
    // Search API for 'ESRI Feature Server' entry type
    // 
    // API to search for entries of type ESRI Feature Server
    rpc GetRepositorySearchTypeType_esri_featureserver(GetRepositorySearchTypeType_esri_featureserverRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_esri_featureserver"
      };
    }
    // Search API for 'ESRI Geometry Server' entry type
    // 
    // API to search for entries of type ESRI Geometry Server
    rpc GetRepositorySearchTypeType_esri_geometryserver(GetRepositorySearchTypeType_esri_geometryserverRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_esri_geometryserver"
      };
    }
    // Search API for 'ESRI GP Server' entry type
    // 
    // API to search for entries of type ESRI GP Server
    rpc GetRepositorySearchTypeType_esri_gpserver(GetRepositorySearchTypeType_esri_gpserverRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_esri_gpserver"
      };
    }
    // Search API for 'ESRI Image Server' entry type
    // 
    // API to search for entries of type ESRI Image Server
    rpc GetRepositorySearchTypeType_esri_imageserver(GetRepositorySearchTypeType_esri_imageserverRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_esri_imageserver"
      };
    }
    // Search API for 'ESRI Layer' entry type
    // 
    // API to search for entries of type ESRI Layer
    rpc GetRepositorySearchTypeType_esri_layer(GetRepositorySearchTypeType_esri_layerRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_esri_layer"
      };
    }
    // Search API for 'ESRI Map Server' entry type
    // 
    // API to search for entries of type ESRI Map Server
    rpc GetRepositorySearchTypeType_esri_mapserver(GetRepositorySearchTypeType_esri_mapserverRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_esri_mapserver"
      };
    }
    // Search API for 'ESRI Services Folder' entry type
    // 
    // API to search for entries of type ESRI Services Folder
    rpc GetRepositorySearchTypeType_esri_restfolder(GetRepositorySearchTypeType_esri_restfolderRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_esri_restfolder"
      };
    }
    // Search API for 'ESRI Web Server' entry type
    // 
    // API to search for entries of type ESRI Web Server
    rpc GetRepositorySearchTypeType_esri_restserver(GetRepositorySearchTypeType_esri_restserverRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_esri_restserver"
      };
    }
    // Search API for 'ESRI Rest Service' entry type
    // 
    // API to search for entries of type ESRI Rest Service
    rpc GetRepositorySearchTypeType_esri_restservice(GetRepositorySearchTypeType_esri_restserviceRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_esri_restservice"
      };
    }
    // Search API for 'FRED Category' entry type
    // 
    // API to search for entries of type FRED Category
    rpc GetRepositorySearchTypeType_fred_category(GetRepositorySearchTypeType_fred_categoryRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_fred_category"
      };
    }
    // Search API for 'FRED Series' entry type
    // 
    // API to search for entries of type FRED Series
    rpc GetRepositorySearchTypeType_fred_series(GetRepositorySearchTypeType_fred_seriesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_fred_series"
      };
    }
    // Search API for 'Transit Agency' entry type
    // 
    // API to search for entries of type Transit Agency
    rpc GetRepositorySearchTypeType_gtfs_agency(GetRepositorySearchTypeType_gtfs_agencyRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_gtfs_agency"
      };
    }
    // Search API for 'Transit Route' entry type
    // 
    // API to search for entries of type Transit Route
    rpc GetRepositorySearchTypeType_gtfs_route(GetRepositorySearchTypeType_gtfs_routeRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_gtfs_route"
      };
    }
    // Search API for 'Transit Route Collection' entry type
    // 
    // API to search for entries of type Transit Route Collection
    rpc GetRepositorySearchTypeType_gtfs_routes(GetRepositorySearchTypeType_gtfs_routesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_gtfs_routes"
      };
    }
    // Search API for 'Transit Stop' entry type
    // 
    // API to search for entries of type Transit Stop
    rpc GetRepositorySearchTypeType_gtfs_stop(GetRepositorySearchTypeType_gtfs_stopRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_gtfs_stop"
      };
    }
    // Search API for 'Transit Stop Collection' entry type
    // 
    // API to search for entries of type Transit Stop Collection
    rpc GetRepositorySearchTypeType_gtfs_stops(GetRepositorySearchTypeType_gtfs_stopsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_gtfs_stops"
      };
    }
    // Search API for 'Transit Trip' entry type
    // 
    // API to search for entries of type Transit Trip
    rpc GetRepositorySearchTypeType_gtfs_trip(GetRepositorySearchTypeType_gtfs_tripRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_gtfs_trip"
      };
    }
    // Search API for 'Hazard Data' entry type
    // 
    // API to search for entries of type Hazard Data
    rpc GetRepositorySearchTypeType_hazarddata(GetRepositorySearchTypeType_hazarddataRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_hazarddata"
      };
    }
    // Search API for 'Colorado DNR Stream Gage' entry type
    // 
    // API to search for entries of type Colorado DNR Stream Gage
    rpc GetRepositorySearchTypeType_hydro_colorado(GetRepositorySearchTypeType_hydro_coloradoRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_hydro_colorado"
      };
    }
    // Search API for 'IDV Bundle' entry type
    // 
    // API to search for entries of type IDV Bundle
    rpc GetRepositorySearchTypeType_idv_bundle(GetRepositorySearchTypeType_idv_bundleRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_idv_bundle"
      };
    }
    // Search API for 'Image' entry type
    // 
    // API to search for entries of type Image
    rpc GetRepositorySearchTypeType_image(GetRepositorySearchTypeType_imageRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_image"
      };
    }
    // Search API for 'Airport Image' entry type
    // 
    // API to search for entries of type Airport Image
    rpc GetRepositorySearchTypeType_image_airport(GetRepositorySearchTypeType_image_airportRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_image_airport"
      };
    }
    // Search API for 'MB Bathymetry' entry type
    // 
    // API to search for entries of type MB Bathymetry
    rpc GetRepositorySearchTypeType_mb(GetRepositorySearchTypeType_mbRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_mb"
      };
    }
    // Search API for 'Bathymetry Collection' entry type
    // 
    // API to search for entries of type Bathymetry Collection
    rpc GetRepositorySearchTypeType_mb_collection(GetRepositorySearchTypeType_mb_collectionRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_mb_collection"
      };
    }
    // Search API for 'Basic MB point file' entry type
    // 
    // API to search for entries of type Basic MB point file
    rpc GetRepositorySearchTypeType_mb_point_basic(GetRepositorySearchTypeType_mb_point_basicRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_mb_point_basic"
      };
    }
    // Search API for 'Data Dictionary: Metadata Collection' entry type
    // 
    // API to search for entries of type Data Dictionary: Metadata Collection
    rpc GetRepositorySearchTypeType_metameta_collection(GetRepositorySearchTypeType_metameta_collectionRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_metameta_collection"
      };
    }
    // Search API for 'Data Dictionary: Metadata Dictionary' entry type
    // 
    // API to search for entries of type Data Dictionary: Metadata Dictionary
    rpc GetRepositorySearchTypeType_metameta_dictionary(GetRepositorySearchTypeType_metameta_dictionaryRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_metameta_dictionary"
      };
    }
    // Search API for 'Data Dictionary: Metadata Field' entry type
    // 
    // API to search for entries of type Data Dictionary: Metadata Field
    rpc GetRepositorySearchTypeType_metameta_field(GetRepositorySearchTypeType_metameta_fieldRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_metameta_field"
      };
    }
    // Search API for 'CODATA Fundamental Physical Constants' entry type
    // 
    // API to search for entries of type CODATA Fundamental Physical Constants
    rpc GetRepositorySearchTypeType_nist_constant(GetRepositorySearchTypeType_nist_constantRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_nist_constant"
      };
    }
    // Search API for 'NIST Ionization Energy Data' entry type
    // 
    // API to search for entries of type NIST Ionization Energy Data
    rpc GetRepositorySearchTypeType_nist_energy(GetRepositorySearchTypeType_nist_energyRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_nist_energy"
      };
    }
    // Search API for 'NIST Isotope' entry type
    // 
    // API to search for entries of type NIST Isotope
    rpc GetRepositorySearchTypeType_nist_isotope(GetRepositorySearchTypeType_nist_isotopeRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_nist_isotope"
      };
    }
    // Search API for 'NIST JANAF Thermochemical Table' entry type
    // 
    // API to search for entries of type NIST JANAF Thermochemical Table
    rpc GetRepositorySearchTypeType_nist_janaffile(GetRepositorySearchTypeType_nist_janaffileRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_nist_janaffile"
      };
    }
    // Search API for 'NITF File' entry type
    // 
    // API to search for entries of type NITF File
    rpc GetRepositorySearchTypeType_nitf(GetRepositorySearchTypeType_nitfRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_nitf"
      };
    }
    // Search API for 'Ameriflux Level 2 CSV File' entry type
    // 
    // API to search for entries of type Ameriflux Level 2 CSV File
    rpc GetRepositorySearchTypeType_point_ameriflux_level2(GetRepositorySearchTypeType_point_ameriflux_level2Request) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_point_ameriflux_level2"
      };
    }
    // Search API for 'AMRC Final QC Data' entry type
    // 
    // API to search for entries of type AMRC Final QC Data
    rpc GetRepositorySearchTypeType_point_amrc_final(GetRepositorySearchTypeType_point_amrc_finalRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_point_amrc_final"
      };
    }
    // Search API for 'AMRC Freewave  Data' entry type
    // 
    // API to search for entries of type AMRC Freewave  Data
    rpc GetRepositorySearchTypeType_point_amrc_freewave(GetRepositorySearchTypeType_point_amrc_freewaveRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_point_amrc_freewave"
      };
    }
    // Search API for 'Point Data Collection' entry type
    // 
    // API to search for entries of type Point Data Collection
    rpc GetRepositorySearchTypeType_point_collection(GetRepositorySearchTypeType_point_collectionRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_point_collection"
      };
    }
    // Search API for 'CZO Display File Format' entry type
    // 
    // API to search for entries of type CZO Display File Format
    rpc GetRepositorySearchTypeType_point_czo(GetRepositorySearchTypeType_point_czoRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_point_czo"
      };
    }
    // Search API for 'GC-Net Point Data' entry type
    // 
    // API to search for entries of type GC-Net Point Data
    rpc GetRepositorySearchTypeType_point_gcnet(GetRepositorySearchTypeType_point_gcnetRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_point_gcnet"
      };
    }
    // Search API for 'IAGA 2002 Geomagnetism Data' entry type
    // 
    // API to search for entries of type IAGA 2002 Geomagnetism Data
    rpc GetRepositorySearchTypeType_point_geomag_iaga2002(GetRepositorySearchTypeType_point_geomag_iaga2002Request) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_point_geomag_iaga2002"
      };
    }
    // Search API for 'WaterML' entry type
    // 
    // API to search for entries of type WaterML
    rpc GetRepositorySearchTypeType_point_hydro_waterml(GetRepositorySearchTypeType_point_hydro_watermlRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_point_hydro_waterml"
      };
    }
    // Search API for 'ATM Ice SSN Data' entry type
    // 
    // API to search for entries of type ATM Ice SSN Data
    rpc GetRepositorySearchTypeType_point_icebridge_atm_icessn(GetRepositorySearchTypeType_point_icebridge_atm_icessnRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_point_icebridge_atm_icessn"
      };
    }
    // Search API for 'ATM QFIT Data' entry type
    // 
    // API to search for entries of type ATM QFIT Data
    rpc GetRepositorySearchTypeType_point_icebridge_atm_qfit(GetRepositorySearchTypeType_point_icebridge_atm_qfitRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_point_icebridge_atm_qfit"
      };
    }
    // Search API for 'McCords Irmcr2 Data' entry type
    // 
    // API to search for entries of type McCords Irmcr2 Data
    rpc GetRepositorySearchTypeType_point_icebridge_mccords_irmcr2(GetRepositorySearchTypeType_point_icebridge_mccords_irmcr2Request) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_point_icebridge_mccords_irmcr2"
      };
    }
    // Search API for 'McCords Irmcr3 Data' entry type
    // 
    // API to search for entries of type McCords Irmcr3 Data
    rpc GetRepositorySearchTypeType_point_icebridge_mccords_irmcr3(GetRepositorySearchTypeType_point_icebridge_mccords_irmcr3Request) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_point_icebridge_mccords_irmcr3"
      };
    }
    // Search API for 'Paris Data' entry type
    // 
    // API to search for entries of type Paris Data
    rpc GetRepositorySearchTypeType_point_icebridge_paris(GetRepositorySearchTypeType_point_icebridge_parisRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_point_icebridge_paris"
      };
    }
    // Search API for 'IDV Point File' entry type
    // 
    // API to search for entries of type IDV Point File
    rpc GetRepositorySearchTypeType_point_idv(GetRepositorySearchTypeType_point_idvRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_point_idv"
      };
    }
    // Search API for 'NC  DC Climate Data' entry type
    // 
    // API to search for entries of type NC  DC Climate Data
    rpc GetRepositorySearchTypeType_point_ncdc_climate(GetRepositorySearchTypeType_point_ncdc_climateRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_point_ncdc_climate"
      };
    }
    // Search API for 'NetCDF Point File' entry type
    // 
    // API to search for entries of type NetCDF Point File
    rpc GetRepositorySearchTypeType_point_netcdf(GetRepositorySearchTypeType_point_netcdfRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_point_netcdf"
      };
    }
    // Search API for 'NOAA Carbon Measurements' entry type
    // 
    // API to search for entries of type NOAA Carbon Measurements
    rpc GetRepositorySearchTypeType_point_noaa_carbon(GetRepositorySearchTypeType_point_noaa_carbonRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_point_noaa_carbon"
      };
    }
    // Search API for 'NOAA Flask Event Measurements' entry type
    // 
    // API to search for entries of type NOAA Flask Event Measurements
    rpc GetRepositorySearchTypeType_point_noaa_flask_event(GetRepositorySearchTypeType_point_noaa_flask_eventRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_point_noaa_flask_event"
      };
    }
    // Search API for 'NOAA Flask Month Measurements' entry type
    // 
    // API to search for entries of type NOAA Flask Month Measurements
    rpc GetRepositorySearchTypeType_point_noaa_flask_month(GetRepositorySearchTypeType_point_noaa_flask_monthRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_point_noaa_flask_month"
      };
    }
    // Search API for 'NOAA MADIS Point Data' entry type
    // 
    // API to search for entries of type NOAA MADIS Point Data
    rpc GetRepositorySearchTypeType_point_noaa_madis(GetRepositorySearchTypeType_point_noaa_madisRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_point_noaa_madis"
      };
    }
    // Search API for 'NOAA Tower Network' entry type
    // 
    // API to search for entries of type NOAA Tower Network
    rpc GetRepositorySearchTypeType_point_noaa_tower(GetRepositorySearchTypeType_point_noaa_towerRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_point_noaa_tower"
      };
    }
    // Search API for 'SeaBird CNV Data' entry type
    // 
    // API to search for entries of type SeaBird CNV Data
    rpc GetRepositorySearchTypeType_point_ocean_cnv(GetRepositorySearchTypeType_point_ocean_cnvRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_point_ocean_cnv"
      };
    }
    // Search API for 'SADO TTS Data' entry type
    // 
    // API to search for entries of type SADO TTS Data
    rpc GetRepositorySearchTypeType_point_ocean_csv_sado_TTS(GetRepositorySearchTypeType_point_ocean_csv_sado_TTSRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_point_ocean_csv_sado_TTS"
      };
    }
    // Search API for 'SADO Meteo Data' entry type
    // 
    // API to search for entries of type SADO Meteo Data
    rpc GetRepositorySearchTypeType_point_ocean_csv_sado_meteo(GetRepositorySearchTypeType_point_ocean_csv_sado_meteoRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_point_ocean_csv_sado_meteo"
      };
    }
    // Search API for 'SADO Position Data' entry type
    // 
    // API to search for entries of type SADO Position Data
    rpc GetRepositorySearchTypeType_point_ocean_csv_sado_position(GetRepositorySearchTypeType_point_ocean_csv_sado_positionRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_point_ocean_csv_sado_position"
      };
    }
    // Search API for 'NetCDF Glider Data' entry type
    // 
    // API to search for entries of type NetCDF Glider Data
    rpc GetRepositorySearchTypeType_point_ocean_netcdf_glider(GetRepositorySearchTypeType_point_ocean_netcdf_gliderRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_point_ocean_netcdf_glider"
      };
    }
    // Search API for 'NetCDF Track Data' entry type
    // 
    // API to search for entries of type NetCDF Track Data
    rpc GetRepositorySearchTypeType_point_ocean_netcdf_track(GetRepositorySearchTypeType_point_ocean_netcdf_trackRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_point_ocean_netcdf_track"
      };
    }
    // Search API for 'OOI Data' entry type
    // 
    // API to search for entries of type OOI Data
    rpc GetRepositorySearchTypeType_point_ocean_ooi_dmgx(GetRepositorySearchTypeType_point_ocean_ooi_dmgxRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_point_ocean_ooi_dmgx"
      };
    }
    // Search API for 'PBO Position Time Series' entry type
    // 
    // API to search for entries of type PBO Position Time Series
    rpc GetRepositorySearchTypeType_point_pbo_position_time_series(GetRepositorySearchTypeType_point_pbo_position_time_seriesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_point_pbo_position_time_series"
      };
    }
    // Search API for 'SNOTEL Snow Data' entry type
    // 
    // API to search for entries of type SNOTEL Snow Data
    rpc GetRepositorySearchTypeType_point_snotel(GetRepositorySearchTypeType_point_snotelRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_point_snotel"
      };
    }
    // Search API for 'Global Geodynamics GGP Format' entry type
    // 
    // API to search for entries of type Global Geodynamics GGP Format
    rpc GetRepositorySearchTypeType_point_wsbb_ggp(GetRepositorySearchTypeType_point_wsbb_ggpRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_point_wsbb_ggp"
      };
    }
    // Search API for 'MISO Foreacast XML' entry type
    // 
    // API to search for entries of type MISO Foreacast XML
    rpc GetRepositorySearchTypeType_power_miso_forecast(GetRepositorySearchTypeType_power_miso_forecastRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_power_miso_forecast"
      };
    }
    // Search API for 'NOAA-ESRL-PSD Monthly Climate Index' entry type
    // 
    // API to search for entries of type NOAA-ESRL-PSD Monthly Climate Index
    rpc GetRepositorySearchTypeType_psd_monthly_climate_index(GetRepositorySearchTypeType_psd_monthly_climate_indexRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_psd_monthly_climate_index"
      };
    }
    // Search API for 'QUANDL Series' entry type
    // 
    // API to search for entries of type QUANDL Series
    rpc GetRepositorySearchTypeType_quandl_series(GetRepositorySearchTypeType_quandl_seriesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_quandl_series"
      };
    }
    // Search API for 'Resiliency Assessment' entry type
    // 
    // API to search for entries of type Resiliency Assessment
    rpc GetRepositorySearchTypeType_resilience_assessment(GetRepositorySearchTypeType_resilience_assessmentRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_resilience_assessment"
      };
    }
    // Search API for 'Resiliency Project' entry type
    // 
    // API to search for entries of type Resiliency Project
    rpc GetRepositorySearchTypeType_resilience_project(GetRepositorySearchTypeType_resilience_projectRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_resilience_project"
      };
    }
    // Search API for 'Reuters Document' entry type
    // 
    // API to search for entries of type Reuters Document
    rpc GetRepositorySearchTypeType_reuters_document(GetRepositorySearchTypeType_reuters_documentRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_reuters_document"
      };
    }
    // Search API for 'Service Group' entry type
    // 
    // API to search for entries of type Service Group
    rpc GetRepositorySearchTypeType_service_group(GetRepositorySearchTypeType_service_groupRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_service_group"
      };
    }
    // Search API for 'Service Link' entry type
    // 
    // API to search for entries of type Service Link
    rpc GetRepositorySearchTypeType_service_link(GetRepositorySearchTypeType_service_linkRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_service_link"
      };
    }
    // Search API for 'SOCRATA Series' entry type
    // 
    // API to search for entries of type SOCRATA Series
    rpc GetRepositorySearchTypeType_socrata_series(GetRepositorySearchTypeType_socrata_seriesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_socrata_series"
      };
    }
    // Search API for 'MetroTrends Employment Data' entry type
    // 
    // API to search for entries of type MetroTrends Employment Data
    rpc GetRepositorySearchTypeType_urbaninstitute_employment(GetRepositorySearchTypeType_urbaninstitute_employmentRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_urbaninstitute_employment"
      };
    }
    // Search API for 'USDA ARMS Crop Data' entry type
    // 
    // API to search for entries of type USDA ARMS Crop Data
    rpc GetRepositorySearchTypeType_usda_arms_crop(GetRepositorySearchTypeType_usda_arms_cropRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_usda_arms_crop"
      };
    }
    // Search API for 'USDA ARMS Finance Data' entry type
    // 
    // API to search for entries of type USDA ARMS Finance Data
    rpc GetRepositorySearchTypeType_usda_arms_finance(GetRepositorySearchTypeType_usda_arms_financeRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_usda_arms_finance"
      };
    }
    // Search API for 'USDA NASS Data' entry type
    // 
    // API to search for entries of type USDA NASS Data
    rpc GetRepositorySearchTypeType_usda_nass(GetRepositorySearchTypeType_usda_nassRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_usda_nass"
      };
    }
    // Search API for 'Virtual Group' entry type
    // 
    // API to search for entries of type Virtual Group
    rpc GetRepositorySearchTypeType_virtual(GetRepositorySearchTypeType_virtualRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_virtual"
      };
    }
    // Search API for 'WMS Capabilities' entry type
    // 
    // API to search for entries of type WMS Capabilities
    rpc GetRepositorySearchTypeType_wms_capabilities(GetRepositorySearchTypeType_wms_capabilitiesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_wms_capabilities"
      };
    }
    // Search API for 'WMS Layer' entry type
    // 
    // API to search for entries of type WMS Layer
    rpc GetRepositorySearchTypeType_wms_layer(GetRepositorySearchTypeType_wms_layerRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/type_wms_layer"
      };
    }
    // Search API for 'Simple Yes-No Vote' entry type
    // 
    // API to search for entries of type Simple Yes-No Vote
    rpc GetRepositorySearchTypeVote_yesno(GetRepositorySearchTypeVote_yesnoRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/vote_yesno"
      };
    }
    // Search API for 'Weblog' entry type
    // 
    // API to search for entries of type Weblog
    rpc GetRepositorySearchTypeWeblog(GetRepositorySearchTypeWeblogRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/weblog"
      };
    }
    // Search API for 'Wiki Page' entry type
    // 
    // API to search for entries of type Wiki Page
    rpc GetRepositorySearchTypeWikipage(GetRepositorySearchTypeWikipageRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "//repository/search/type/wikipage"
      };
    }
}
