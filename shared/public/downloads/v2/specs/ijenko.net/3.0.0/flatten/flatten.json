{
	"consumes.length": 1,
	"consumes[0]": "application/json",
	"definitions.AccountId.description": "Unique identifier of the *Account*",
	"definitions.AccountId.example": "t1hqYcQITCFX-AObjs_t4Q",
	"definitions.AccountId.maxLength": 22,
	"definitions.AccountId.minLength": 22,
	"definitions.AccountId.pattern": "^[A-Za-z0-9-_]{22}$",
	"definitions.AccountId.readOnly": true,
	"definitions.AccountId.type": "string",
	"definitions.AccountLogin.minLength": 1,
	"definitions.AccountLogin.type": "string",
	"definitions.ActionArgs.example.length": 3,
	"definitions.ActionArgs.example[0]": true,
	"definitions.ActionArgs.example[1]": 1,
	"definitions.ActionArgs.example[2]": "hello",
	"definitions.ActionArgs.items.$ref": "#/definitions/AnyJSON",
	"definitions.ActionArgs.type": "array",
	"definitions.ActionMultiResult.items.$ref": "#/definitions/ActionResult",
	"definitions.ActionMultiResult.type": "array",
	"definitions.ActionName.minLength": 1,
	"definitions.ActionName.readOnly": true,
	"definitions.ActionName.type": "string",
	"definitions.ActionResult.example.functionality": "RnVuY3Rpb25hbGl0eTAwMA",
	"definitions.ActionResult.example.result.length": 0,
	"definitions.ActionResult.example.status": 200,
	"definitions.ActionResult.properties.functionality.$ref": "#/definitions/FunctionalityId",
	"definitions.ActionResult.properties.result.items.$ref": "#/definitions/AnyJSON",
	"definitions.ActionResult.properties.result.type": "array",
	"definitions.ActionResult.properties.status.description": "Return code (HTTP status code)",
	"definitions.ActionResult.properties.status.example": 200,
	"definitions.ActionResult.properties.status.maximum": 599,
	"definitions.ActionResult.properties.status.minimum": 200,
	"definitions.ActionResult.properties.status.type": "integer",
	"definitions.ActionResult.required.length": 1,
	"definitions.ActionResult.required[0]": "status",
	"definitions.ActionResult.type": "object",
	"definitions.ActionResult.x-links.length": 1,
	"definitions.ActionResult.x-links[0].href": "/functionalities/{functionality}",
	"definitions.ActionResult.x-links[0].rel": "functionality",
	"definitions.AnyJSON.description": "null/boolean/integer/number/string/object/array",
	"definitions.AnyJSON.x-type": "any",
	"definitions.AppId.minLength": 1,
	"definitions.AppId.type": "string",
	"definitions.AttributeName.minLength": 1,
	"definitions.AttributeName.readOnly": true,
	"definitions.AttributeName.type": "string",
	"definitions.AttributeValue.example.value": 0,
	"definitions.AttributeValue.example.when": "2014-02-17T12:31:00Z",
	"definitions.AttributeValue.properties.value.$ref": "#/definitions/AnyJSON",
	"definitions.AttributeValue.properties.when.format": "date-time",
	"definitions.AttributeValue.properties.when.type": "string",
	"definitions.AttributeValue.required.length": 2,
	"definitions.AttributeValue.required[0]": "when",
	"definitions.AttributeValue.required[1]": "value",
	"definitions.AttributeValue.type": "object",
	"definitions.AttributesValues.additionalProperties.items.$ref": "#/definitions/AttributeValue",
	"definitions.AttributesValues.additionalProperties.type": "array",
	"definitions.AttributesValues.description": "Keys are attribute ids",
	"definitions.AttributesValues.example.Counter.length": 1,
	"definitions.AttributesValues.example.Counter[0].value": 0,
	"definitions.AttributesValues.example.Counter[0].when": "2014-02-17T12:31:00Z",
	"definitions.AttributesValues.example.Schedule.length": 1,
	"definitions.AttributesValues.example.Schedule[0].value.length": 2,
	"definitions.AttributesValues.example.Schedule[0].value[0].DTSTAMP": "20120101T000000Z",
	"definitions.AttributesValues.example.Schedule[0].value[0].DTSTART.": "20120101T063000",
	"definitions.AttributesValues.example.Schedule[0].value[0].DTSTART.TZID": "Europe/Paris",
	"definitions.AttributesValues.example.Schedule[0].value[0].RRULE.FREQ": "DAILY",
	"definitions.AttributesValues.example.Schedule[0].value[0].SUMMARY": "2",
	"definitions.AttributesValues.example.Schedule[0].value[0].UID": "HP-06h30@si.ijenko.net",
	"definitions.AttributesValues.example.Schedule[0].value[1].DTSTAMP": "20120101T000000Z",
	"definitions.AttributesValues.example.Schedule[0].value[1].DTSTART.": "20120101T223000",
	"definitions.AttributesValues.example.Schedule[0].value[1].DTSTART.TZID": "Europe/Paris",
	"definitions.AttributesValues.example.Schedule[0].value[1].RRULE.FREQ": "DAILY",
	"definitions.AttributesValues.example.Schedule[0].value[1].SUMMARY": "3",
	"definitions.AttributesValues.example.Schedule[0].value[1].UID": "HC-22h30@si.ijenko.net",
	"definitions.AttributesValues.example.Schedule[0].when": "2014-02-17T00:00:00Z",
	"definitions.AttributesValues.type": "object",
	"definitions.AuthChangePassword.properties.newPassword.$ref": "#/definitions/Password",
	"definitions.AuthChangePassword.properties.oldPassword.$ref": "#/definitions/Password",
	"definitions.AuthChangePassword.required.length": 2,
	"definitions.AuthChangePassword.required[0]": "oldPassword",
	"definitions.AuthChangePassword.required[1]": "newPassword",
	"definitions.AuthChangePassword.type": "object",
	"definitions.AuthLogin.properties.appId.$ref": "#/definitions/AppId",
	"definitions.AuthLogin.properties.login.minLength": 1,
	"definitions.AuthLogin.properties.login.type": "string",
	"definitions.AuthLogin.properties.password.$ref": "#/definitions/Password",
	"definitions.AuthLogin.properties.ttl.description": "Desired maximum life-time in seconds for the refresh token",
	"definitions.AuthLogin.properties.ttl.example": 1800,
	"definitions.AuthLogin.properties.ttl.minimum": 0,
	"definitions.AuthLogin.properties.ttl.type": "integer",
	"definitions.AuthLogin.required.length": 3,
	"definitions.AuthLogin.required[0]": "login",
	"definitions.AuthLogin.required[1]": "password",
	"definitions.AuthLogin.required[2]": "appId",
	"definitions.AuthLogin.type": "object",
	"definitions.AuthRefresh.properties.appId.$ref": "#/definitions/AppId",
	"definitions.AuthRefresh.properties.refreshToken.minLength": 1,
	"definitions.AuthRefresh.properties.refreshToken.type": "string",
	"definitions.AuthRefresh.required.length": 2,
	"definitions.AuthRefresh.required[0]": "refreshToken",
	"definitions.AuthRefresh.required[1]": "appId",
	"definitions.AuthRefresh.type": "object",
	"definitions.AuthResetPassword.properties.appId.$ref": "#/definitions/AppId",
	"definitions.AuthResetPassword.properties.email.$ref": "#/definitions/UserEmail",
	"definitions.AuthResetPassword.properties.login.minLength": 1,
	"definitions.AuthResetPassword.properties.login.type": "string",
	"definitions.AuthResetPassword.required.length": 1,
	"definitions.AuthResetPassword.required[0]": "appId",
	"definitions.AuthResetPassword.type": "object",
	"definitions.AuthTokens.properties.accessToken.minLength": 1,
	"definitions.AuthTokens.properties.accessToken.type": "string",
	"definitions.AuthTokens.properties.accessTokenExpires.format": "date-time",
	"definitions.AuthTokens.properties.accessTokenExpires.type": "string",
	"definitions.AuthTokens.properties.refreshToken.minLength": 1,
	"definitions.AuthTokens.properties.refreshToken.type": "string",
	"definitions.AuthTokens.properties.refreshTokenExpires.format": "date-time",
	"definitions.AuthTokens.properties.refreshTokenExpires.type": "string",
	"definitions.AuthTokens.required.length": 4,
	"definitions.AuthTokens.required[0]": "accessToken",
	"definitions.AuthTokens.required[1]": "refreshToken",
	"definitions.AuthTokens.required[2]": "accessTokenExpires",
	"definitions.AuthTokens.required[3]": "refreshTokenExpires",
	"definitions.AuthTokens.type": "object",
	"definitions.BusId.minLength": 3,
	"definitions.BusId.type": "string",
	"definitions.BusItem.properties.functionality.$ref": "#/definitions/FunctionalityId",
	"definitions.BusItem.properties.id.$ref": "#/definitions/BusId",
	"definitions.BusItem.properties.protocol.$ref": "#/definitions/BusProtocol",
	"definitions.BusItem.readOnly": true,
	"definitions.BusItem.required.length": 3,
	"definitions.BusItem.required[0]": "id",
	"definitions.BusItem.required[1]": "functionality",
	"definitions.BusItem.required[2]": "protocol",
	"definitions.BusItem.type": "object",
	"definitions.BusPairing.properties.duration.description": "Duration of the pairing window.",
	"definitions.BusPairing.properties.duration.type": "integer",
	"definitions.BusPairing.properties.enabled.type": "boolean",
	"definitions.BusPairing.required.length": 1,
	"definitions.BusPairing.required[0]": "enabled",
	"definitions.BusPairing.type": "object",
	"definitions.BusProtocol.minLength": 1,
	"definitions.BusProtocol.type": "string",
	"definitions.CountryCode.description": "Country code (ISO 3166-1 alpha-2)",
	"definitions.CountryCode.example": "FR",
	"definitions.CountryCode.maxLength": 2,
	"definitions.CountryCode.minLength": 2,
	"definitions.CountryCode.pattern": "^[A-Z][A-Z]$",
	"definitions.CountryCode.type": "string",
	"definitions.DefaultError.description": "Any error.",
	"definitions.DefaultError.properties.code.type": "integer",
	"definitions.DefaultError.properties.message.type": "string",
	"definitions.DefaultError.required.length": 2,
	"definitions.DefaultError.required[0]": "code",
	"definitions.DefaultError.required[1]": "message",
	"definitions.DefaultError.type": "object",
	"definitions.Device.properties.address.$ref": "#/definitions/DeviceAddress",
	"definitions.Device.properties.attributes.additionalProperties.additionalProperties.$ref": "#/definitions/AnyJSON",
	"definitions.Device.properties.attributes.additionalProperties.description": "Each key is an attribute name",
	"definitions.Device.properties.attributes.additionalProperties.type": "object",
	"definitions.Device.properties.attributes.description": "Each key is \u003cFunctionalityClass\u003e@\u003cEndpoint\u003e",
	"definitions.Device.properties.attributes.type": "object",
	"definitions.Device.properties.class.$ref": "#/definitions/DeviceClass",
	"definitions.Device.properties.functionalities.items.$ref": "#/definitions/FunctionalityItem",
	"definitions.Device.properties.functionalities.readOnly": true,
	"definitions.Device.properties.functionalities.type": "array",
	"definitions.Device.properties.functionalities.uniqueItems": true,
	"definitions.Device.properties.isOnline.readOnly": true,
	"definitions.Device.properties.isOnline.type": "boolean",
	"definitions.Device.properties.manufacturer.readOnly": true,
	"definitions.Device.properties.manufacturer.type": "string",
	"definitions.Device.properties.metadata.$ref": "#/definitions/Metadata",
	"definitions.Device.properties.model.readOnly": true,
	"definitions.Device.properties.model.type": "string",
	"definitions.Device.properties.name.description": "Name of the device. User defined.",
	"definitions.Device.properties.name.minLength": 2,
	"definitions.Device.properties.name.type": "string",
	"definitions.Device.properties.place.$ref": "#/definitions/PlaceId",
	"definitions.Device.properties.protocol.$ref": "#/definitions/BusProtocol",
	"definitions.Device.properties.tags.items.$ref": "#/definitions/DeviceTag",
	"definitions.Device.properties.tags.type": "array",
	"definitions.Device.properties.tags.uniqueItems": true,
	"definitions.Device.required.length": 6,
	"definitions.Device.required[0]": "place",
	"definitions.Device.required[1]": "class",
	"definitions.Device.required[2]": "address",
	"definitions.Device.required[3]": "isOnline",
	"definitions.Device.required[4]": "functionalities",
	"definitions.Device.required[5]": "tags",
	"definitions.Device.type": "object",
	"definitions.Device.x-links.length": 1,
	"definitions.Device.x-links[0].href": "/places/{place}",
	"definitions.Device.x-links[0].rel": "place",
	"definitions.DeviceAddress.minLength": 1,
	"definitions.DeviceAddress.pattern": "^[A-Z0-9]{1,32}$",
	"definitions.DeviceAddress.type": "string",
	"definitions.DeviceClass.maxLength": 4,
	"definitions.DeviceClass.minLength": 4,
	"definitions.DeviceClass.pattern": "^[A-Z][A-Z0-9]{3}$",
	"definitions.DeviceClass.type": "string",
	"definitions.DeviceId.description": "Unique identifier of the *Device*",
	"definitions.DeviceId.example": "RGV2aWNlMDAwMDAwMDAwMA",
	"definitions.DeviceId.maxLength": 22,
	"definitions.DeviceId.minLength": 22,
	"definitions.DeviceId.pattern": "^[A-Za-z0-9-_]{22}$",
	"definitions.DeviceId.readOnly": true,
	"definitions.DeviceId.type": "string",
	"definitions.DeviceItem.properties.address.$ref": "#/definitions/DeviceAddress",
	"definitions.DeviceItem.properties.class.$ref": "#/definitions/DeviceClass",
	"definitions.DeviceItem.properties.id.$ref": "#/definitions/DeviceId",
	"definitions.DeviceItem.properties.isOnline.type": "boolean",
	"definitions.DeviceItem.properties.metadata.$ref": "#/definitions/MetadataSelected",
	"definitions.DeviceItem.properties.name.description": "Name of the *Device* as defined by the user. Can be used for user interfaces.",
	"definitions.DeviceItem.properties.name.minLength": 2,
	"definitions.DeviceItem.properties.name.type": "string",
	"definitions.DeviceItem.properties.place.$ref": "#/definitions/PlaceId",
	"definitions.DeviceItem.properties.tags.items.$ref": "#/definitions/DeviceTag",
	"definitions.DeviceItem.properties.tags.type": "array",
	"definitions.DeviceItem.properties.tags.uniqueItems": true,
	"definitions.DeviceItem.readOnly": true,
	"definitions.DeviceItem.required.length": 6,
	"definitions.DeviceItem.required[0]": "id",
	"definitions.DeviceItem.required[1]": "place",
	"definitions.DeviceItem.required[2]": "class",
	"definitions.DeviceItem.required[3]": "address",
	"definitions.DeviceItem.required[4]": "isOnline",
	"definitions.DeviceItem.required[5]": "tags",
	"definitions.DeviceItem.type": "object",
	"definitions.DeviceItem.x-links.length": 2,
	"definitions.DeviceItem.x-links[0].href": "/devices/{id}",
	"definitions.DeviceItem.x-links[0].rel": "full",
	"definitions.DeviceItem.x-links[1].href": "/places/{place}",
	"definitions.DeviceItem.x-links[1].rel": "place",
	"definitions.DevicePatch.properties.name.description": "Name of the *Device* as defined by the user. Can be used for user interfaces.",
	"definitions.DevicePatch.properties.name.minLength": 2,
	"definitions.DevicePatch.properties.name.type": "string",
	"definitions.DevicePatch.type": "object",
	"definitions.DeviceTag.maxLength": 21,
	"definitions.DeviceTag.minLength": 1,
	"definitions.DeviceTag.pattern": "^[a-z](?:[a-z0-9_]{0,20}|[a-z0-9_]:[a-z0-9_]{1,18}|[a-z0-9_]{2}:[a-z0-9_]{1,17}|[a-z0-9_]{3}:[a-z0-9_]{1,16}|[a-z0-9_]{4}:[a-z0-9_]{1,15})$",
	"definitions.DeviceTag.type": "string",
	"definitions.ElectricityAutonomy.example.autonomy": 0.4,
	"definitions.ElectricityAutonomy.example.code": 200000,
	"definitions.ElectricityAutonomy.example.from": "2016-03-02T09:00:00Z",
	"definitions.ElectricityAutonomy.example.to": "2016-03-02T10:00:00Z",
	"definitions.ElectricityAutonomy.properties.autonomy.description": "Average electricity autonomy in % (value in range [0, 1], rounded)",
	"definitions.ElectricityAutonomy.properties.autonomy.example": 0.4,
	"definitions.ElectricityAutonomy.properties.autonomy.maximum": 1,
	"definitions.ElectricityAutonomy.properties.autonomy.minimum": 0,
	"definitions.ElectricityAutonomy.properties.autonomy.type": "number",
	"definitions.ElectricityAutonomy.properties.code.$ref": "#/definitions/ElectricityStatusCode",
	"definitions.ElectricityAutonomy.properties.from.format": "date-time",
	"definitions.ElectricityAutonomy.properties.from.type": "string",
	"definitions.ElectricityAutonomy.properties.message.description": "Message for cases where computation is not possible (codes 200001, 200002)",
	"definitions.ElectricityAutonomy.properties.message.minLength": 1,
	"definitions.ElectricityAutonomy.properties.message.type": "string",
	"definitions.ElectricityAutonomy.properties.to.format": "date-time",
	"definitions.ElectricityAutonomy.properties.to.type": "string",
	"definitions.ElectricityAutonomy.required.length": 1,
	"definitions.ElectricityAutonomy.required[0]": "code",
	"definitions.ElectricityAutonomy.type": "object",
	"definitions.ElectricityFlow.items.$ref": "#/definitions/ElectricityFunctionality",
	"definitions.ElectricityFlow.type": "array",
	"definitions.ElectricityFlow.uniqueItems": true,
	"definitions.ElectricityFlowFormula.items.$ref": "#/definitions/ElectricityFlowFunctionality",
	"definitions.ElectricityFlowFormula.type": "array",
	"definitions.ElectricityFlowFormula.uniqueItems": true,
	"definitions.ElectricityFlowFunctionality.example.class": "ElecMetering",
	"definitions.ElectricityFlowFunctionality.example.factor": 1,
	"definitions.ElectricityFlowFunctionality.example.flow": "elec_total_gen",
	"definitions.ElectricityFlowFunctionality.example.id": "RnVuY3Rpb25hbGl0eTAwMA",
	"definitions.ElectricityFlowFunctionality.properties.class.$ref": "#/definitions/FunctionalityClass",
	"definitions.ElectricityFlowFunctionality.properties.factor.type": "integer",
	"definitions.ElectricityFlowFunctionality.properties.flow.$ref": "#/definitions/ElectricityFlowName",
	"definitions.ElectricityFlowFunctionality.properties.id.$ref": "#/definitions/FunctionalityId",
	"definitions.ElectricityFlowFunctionality.required.length": 4,
	"definitions.ElectricityFlowFunctionality.required[0]": "id",
	"definitions.ElectricityFlowFunctionality.required[1]": "class",
	"definitions.ElectricityFlowFunctionality.required[2]": "flow",
	"definitions.ElectricityFlowFunctionality.required[3]": "factor",
	"definitions.ElectricityFlowFunctionality.type": "object",
	"definitions.ElectricityFlowFunctionality.x-links.length": 1,
	"definitions.ElectricityFlowFunctionality.x-links[0].href": "/functionalities/{id}",
	"definitions.ElectricityFlowFunctionality.x-links[0].rel": "full",
	"definitions.ElectricityFlowName.description": "Name of an electricity flow",
	"definitions.ElectricityFlowName.enum.length": 11,
	"definitions.ElectricityFlowName.enum[0]": "battery_charge",
	"definitions.ElectricityFlowName.enum[10]": "elec_usage",
	"definitions.ElectricityFlowName.enum[1]": "battery_discharge",
	"definitions.ElectricityFlowName.enum[2]": "battery_grid",
	"definitions.ElectricityFlowName.enum[3]": "elec_total_gen",
	"definitions.ElectricityFlowName.enum[4]": "elec_total_usage",
	"definitions.ElectricityFlowName.enum[5]": "elec_feed_in",
	"definitions.ElectricityFlowName.enum[6]": "elec_drawn",
	"definitions.ElectricityFlowName.enum[7]": "elec_local",
	"definitions.ElectricityFlowName.enum[8]": "elec_from_household",
	"definitions.ElectricityFlowName.enum[9]": "elec_to_pv",
	"definitions.ElectricityFlowName.minLength": 1,
	"definitions.ElectricityFlowName.type": "string",
	"definitions.ElectricityFlows.example.code": 200000,
	"definitions.ElectricityFlows.example.flows.elec_local.length": 1,
	"definitions.ElectricityFlows.example.flows.elec_local[0].class": "ElecMetering",
	"definitions.ElectricityFlows.example.flows.elec_local[0].factor": 1,
	"definitions.ElectricityFlows.example.flows.elec_local[0].id": "SF4_y4SoTCpYXgGODJplJQ",
	"definitions.ElectricityFlows.example.flows.elec_total_usage.length": 3,
	"definitions.ElectricityFlows.example.flows.elec_total_usage[0].class": "ElecMetering",
	"definitions.ElectricityFlows.example.flows.elec_total_usage[0].factor": 1,
	"definitions.ElectricityFlows.example.flows.elec_total_usage[0].flow": "elec_total_gen",
	"definitions.ElectricityFlows.example.flows.elec_total_usage[0].id": "SF4_y4SoTCpYXgGODJplJQ",
	"definitions.ElectricityFlows.example.flows.elec_total_usage[1].class": "ElecSmartMetering",
	"definitions.ElectricityFlows.example.flows.elec_total_usage[1].factor": 1,
	"definitions.ElectricityFlows.example.flows.elec_total_usage[1].flow": "elec_drawn",
	"definitions.ElectricityFlows.example.flows.elec_total_usage[1].id": "lvxvQ9SqXCpYSqHOJI7tIA",
	"definitions.ElectricityFlows.example.flows.elec_total_usage[2].class": "ElecSmartMetering",
	"definitions.ElectricityFlows.example.flows.elec_total_usage[2].factor": -1,
	"definitions.ElectricityFlows.example.flows.elec_total_usage[2].flow": "elec_feed_in",
	"definitions.ElectricityFlows.example.flows.elec_total_usage[2].id": "d1xvwdWKWCpYH6GPjovnLg",
	"definitions.ElectricityFlows.properties.code.$ref": "#/definitions/ElectricityStatusCode",
	"definitions.ElectricityFlows.properties.flows.$ref": "#/definitions/ElectricityVirtualFlows",
	"definitions.ElectricityFlows.properties.message.$ref": "#/definitions/ElectricityStatusMessage",
	"definitions.ElectricityFlows.properties.missing.$ref": "#/definitions/ElectricityMissingFlows",
	"definitions.ElectricityFlows.required.length": 1,
	"definitions.ElectricityFlows.required[0]": "code",
	"definitions.ElectricityFlows.type": "object",
	"definitions.ElectricityFlowsSetup.example.elec_drawn.length": 1,
	"definitions.ElectricityFlowsSetup.example.elec_drawn[0].class": "ElecSmartMetering",
	"definitions.ElectricityFlowsSetup.example.elec_drawn[0].id": "lvxvQ9SqXCpYSqHOJI7tIA",
	"definitions.ElectricityFlowsSetup.example.elec_feed_in.length": 1,
	"definitions.ElectricityFlowsSetup.example.elec_feed_in[0].class": "ElecSmartMetering",
	"definitions.ElectricityFlowsSetup.example.elec_feed_in[0].id": "d1xvwdWKWCpYH6GPjovnLg",
	"definitions.ElectricityFlowsSetup.example.elec_total_gen.length": 1,
	"definitions.ElectricityFlowsSetup.example.elec_total_gen[0].class": "ElecMetering",
	"definitions.ElectricityFlowsSetup.example.elec_total_gen[0].id": "SF4_y4SoTCpYXgGODJplJQ",
	"definitions.ElectricityFlowsSetup.properties.battery_charge.$ref": "#/definitions/ElectricityFlow",
	"definitions.ElectricityFlowsSetup.properties.battery_discharge.$ref": "#/definitions/ElectricityFlow",
	"definitions.ElectricityFlowsSetup.properties.battery_grid.$ref": "#/definitions/ElectricityFlow",
	"definitions.ElectricityFlowsSetup.properties.elec_drawn.$ref": "#/definitions/ElectricityFlow",
	"definitions.ElectricityFlowsSetup.properties.elec_feed_in.$ref": "#/definitions/ElectricityFlow",
	"definitions.ElectricityFlowsSetup.properties.elec_from_household.$ref": "#/definitions/ElectricityFlow",
	"definitions.ElectricityFlowsSetup.properties.elec_local.$ref": "#/definitions/ElectricityFlow",
	"definitions.ElectricityFlowsSetup.properties.elec_to_pv.$ref": "#/definitions/ElectricityFlow",
	"definitions.ElectricityFlowsSetup.properties.elec_total_gen.$ref": "#/definitions/ElectricityFlow",
	"definitions.ElectricityFlowsSetup.properties.elec_total_usage.$ref": "#/definitions/ElectricityFlow",
	"definitions.ElectricityFlowsSetup.properties.elec_usage.$ref": "#/definitions/ElectricityFlow",
	"definitions.ElectricityFlowsSetup.type": "object",
	"definitions.ElectricityFunctionality.example.class": "ElecMetering",
	"definitions.ElectricityFunctionality.example.id": "RnVuY3Rpb25hbGl0eTAwMA",
	"definitions.ElectricityFunctionality.properties.class.$ref": "#/definitions/FunctionalityClass",
	"definitions.ElectricityFunctionality.properties.id.$ref": "#/definitions/FunctionalityId",
	"definitions.ElectricityFunctionality.required.length": 2,
	"definitions.ElectricityFunctionality.required[0]": "id",
	"definitions.ElectricityFunctionality.required[1]": "class",
	"definitions.ElectricityFunctionality.type": "object",
	"definitions.ElectricityFunctionality.x-links.length": 1,
	"definitions.ElectricityFunctionality.x-links[0].href": "/functionalities/{id}",
	"definitions.ElectricityFunctionality.x-links[0].rel": "full",
	"definitions.ElectricityMissingFlows.description": "List of missing flows (not available either directly or indirectly)",
	"definitions.ElectricityMissingFlows.properties.battery_charge.enum.length": 1,
	"definitions.ElectricityMissingFlows.properties.battery_charge.enum[0]": true,
	"definitions.ElectricityMissingFlows.properties.battery_charge.type": "boolean",
	"definitions.ElectricityMissingFlows.properties.battery_discharge.enum.length": 1,
	"definitions.ElectricityMissingFlows.properties.battery_discharge.enum[0]": true,
	"definitions.ElectricityMissingFlows.properties.battery_discharge.type": "boolean",
	"definitions.ElectricityMissingFlows.properties.battery_grid.enum.length": 1,
	"definitions.ElectricityMissingFlows.properties.battery_grid.enum[0]": true,
	"definitions.ElectricityMissingFlows.properties.battery_grid.type": "boolean",
	"definitions.ElectricityMissingFlows.properties.elec_drawn.enum.length": 1,
	"definitions.ElectricityMissingFlows.properties.elec_drawn.enum[0]": true,
	"definitions.ElectricityMissingFlows.properties.elec_drawn.type": "boolean",
	"definitions.ElectricityMissingFlows.properties.elec_feed_in.enum.length": 1,
	"definitions.ElectricityMissingFlows.properties.elec_feed_in.enum[0]": true,
	"definitions.ElectricityMissingFlows.properties.elec_feed_in.type": "boolean",
	"definitions.ElectricityMissingFlows.properties.elec_from_household.enum.length": 1,
	"definitions.ElectricityMissingFlows.properties.elec_from_household.enum[0]": true,
	"definitions.ElectricityMissingFlows.properties.elec_from_household.type": "boolean",
	"definitions.ElectricityMissingFlows.properties.elec_local.enum.length": 1,
	"definitions.ElectricityMissingFlows.properties.elec_local.enum[0]": true,
	"definitions.ElectricityMissingFlows.properties.elec_local.type": "boolean",
	"definitions.ElectricityMissingFlows.properties.elec_to_pv.enum.length": 1,
	"definitions.ElectricityMissingFlows.properties.elec_to_pv.enum[0]": true,
	"definitions.ElectricityMissingFlows.properties.elec_to_pv.type": "boolean",
	"definitions.ElectricityMissingFlows.properties.elec_total_gen.enum.length": 1,
	"definitions.ElectricityMissingFlows.properties.elec_total_gen.enum[0]": true,
	"definitions.ElectricityMissingFlows.properties.elec_total_gen.type": "boolean",
	"definitions.ElectricityMissingFlows.properties.elec_total_usage.enum.length": 1,
	"definitions.ElectricityMissingFlows.properties.elec_total_usage.enum[0]": true,
	"definitions.ElectricityMissingFlows.properties.elec_total_usage.type": "boolean",
	"definitions.ElectricityMissingFlows.properties.elec_usage.enum.length": 1,
	"definitions.ElectricityMissingFlows.properties.elec_usage.enum[0]": true,
	"definitions.ElectricityMissingFlows.properties.elec_usage.type": "boolean",
	"definitions.ElectricityMissingFlows.type": "object",
	"definitions.ElectricitySelfConsumption.example.code": 200000,
	"definitions.ElectricitySelfConsumption.example.from": "2016-03-02T10:00:00Z",
	"definitions.ElectricitySelfConsumption.example.selfConsumption": 1,
	"definitions.ElectricitySelfConsumption.example.to": "2016-03-02T11:00:00Z",
	"definitions.ElectricitySelfConsumption.properties.code.$ref": "#/definitions/ElectricityStatusCode",
	"definitions.ElectricitySelfConsumption.properties.from.format": "date-time",
	"definitions.ElectricitySelfConsumption.properties.from.type": "string",
	"definitions.ElectricitySelfConsumption.properties.message.description": "Message for cases where computation is not possible (codes 200001, 200002)",
	"definitions.ElectricitySelfConsumption.properties.message.minLength": 1,
	"definitions.ElectricitySelfConsumption.properties.message.type": "string",
	"definitions.ElectricitySelfConsumption.properties.selfConsumption.description": "Average self-consumption rate in % (value in range [0, 1], rounded)",
	"definitions.ElectricitySelfConsumption.properties.selfConsumption.example": 0.555555,
	"definitions.ElectricitySelfConsumption.properties.selfConsumption.maximum": 1,
	"definitions.ElectricitySelfConsumption.properties.selfConsumption.minimum": 0,
	"definitions.ElectricitySelfConsumption.properties.selfConsumption.type": "number",
	"definitions.ElectricitySelfConsumption.properties.to.format": "date-time",
	"definitions.ElectricitySelfConsumption.properties.to.type": "string",
	"definitions.ElectricitySelfConsumption.required.length": 1,
	"definitions.ElectricitySelfConsumption.required[0]": "code",
	"definitions.ElectricitySelfConsumption.type": "object",
	"definitions.ElectricityStatusCode.description": "Status code. 200000 means OK. Other codes indicate full or partial failure.",
	"definitions.ElectricityStatusCode.enum.length": 3,
	"definitions.ElectricityStatusCode.enum[0]": 200000,
	"definitions.ElectricityStatusCode.enum[1]": 200001,
	"definitions.ElectricityStatusCode.enum[2]": 200002,
	"definitions.ElectricityStatusCode.example": 200000,
	"definitions.ElectricityStatusCode.type": "integer",
	"definitions.ElectricityStatusMessage.description": "Message for cases where computation is not possible (codes 200001, 200002)",
	"definitions.ElectricityStatusMessage.minLength": 1,
	"definitions.ElectricityStatusMessage.type": "string",
	"definitions.ElectricityVirtualFlows.properties.battery_charge.$ref": "#/definitions/ElectricityFlowFormula",
	"definitions.ElectricityVirtualFlows.properties.battery_discharge.$ref": "#/definitions/ElectricityFlowFormula",
	"definitions.ElectricityVirtualFlows.properties.battery_grid.$ref": "#/definitions/ElectricityFlowFormula",
	"definitions.ElectricityVirtualFlows.properties.elec_drawn.$ref": "#/definitions/ElectricityFlowFormula",
	"definitions.ElectricityVirtualFlows.properties.elec_feed_in.$ref": "#/definitions/ElectricityFlowFormula",
	"definitions.ElectricityVirtualFlows.properties.elec_from_household.$ref": "#/definitions/ElectricityFlowFormula",
	"definitions.ElectricityVirtualFlows.properties.elec_local.$ref": "#/definitions/ElectricityFlowFormula",
	"definitions.ElectricityVirtualFlows.properties.elec_to_pv.$ref": "#/definitions/ElectricityFlowFormula",
	"definitions.ElectricityVirtualFlows.properties.elec_total_gen.$ref": "#/definitions/ElectricityFlowFormula",
	"definitions.ElectricityVirtualFlows.properties.elec_total_usage.$ref": "#/definitions/ElectricityFlowFormula",
	"definitions.ElectricityVirtualFlows.properties.elec_usage.$ref": "#/definitions/ElectricityFlowFormula",
	"definitions.ElectricityVirtualFlows.type": "object",
	"definitions.ErrorEntity.description": "An error related to access to an entity (400, 403, 404, 410)",
	"definitions.ErrorEntity.properties.code.type": "integer",
	"definitions.ErrorEntity.properties.message.type": "string",
	"definitions.ErrorEntity.properties.resource.$ref": "#/definitions/ResourceRef",
	"definitions.ErrorEntity.required.length": 3,
	"definitions.ErrorEntity.required[0]": "code",
	"definitions.ErrorEntity.required[1]": "message",
	"definitions.ErrorEntity.required[2]": "resource",
	"definitions.ErrorEntity.type": "object",
	"definitions.ErrorGatewayUnreachable.description": "The gateway of the Place is not reachable.",
	"definitions.ErrorGatewayUnreachable.properties.code.enum.length": 1,
	"definitions.ErrorGatewayUnreachable.properties.code.enum[0]": "450",
	"definitions.ErrorGatewayUnreachable.properties.code.type": "string",
	"definitions.ErrorGatewayUnreachable.properties.message.type": "string",
	"definitions.ErrorGatewayUnreachable.required.length": 2,
	"definitions.ErrorGatewayUnreachable.required[0]": "code",
	"definitions.ErrorGatewayUnreachable.required[1]": "message",
	"definitions.ErrorGatewayUnreachable.type": "object",
	"definitions.ErrorSubEntity.description": "An error related to access to an sub-entity (400, 403, 404, 410)",
	"definitions.ErrorSubEntity.properties.code.type": "integer",
	"definitions.ErrorSubEntity.properties.message.type": "string",
	"definitions.ErrorSubEntity.properties.resource.properties.entity.enum.length": 3,
	"definitions.ErrorSubEntity.properties.resource.properties.entity.enum[0]": "Action",
	"definitions.ErrorSubEntity.properties.resource.properties.entity.enum[1]": "Attribute",
	"definitions.ErrorSubEntity.properties.resource.properties.entity.enum[2]": "Bus",
	"definitions.ErrorSubEntity.properties.resource.properties.entity.type": "string",
	"definitions.ErrorSubEntity.properties.resource.properties.href.minLength": 1,
	"definitions.ErrorSubEntity.properties.resource.properties.href.type": "string",
	"definitions.ErrorSubEntity.properties.resource.properties.id.minLength": 1,
	"definitions.ErrorSubEntity.properties.resource.properties.id.type": "string",
	"definitions.ErrorSubEntity.properties.resource.properties.parent.description": "Container resource.",
	"definitions.ErrorSubEntity.properties.resource.properties.parent.properties.entity.enum.length": 2,
	"definitions.ErrorSubEntity.properties.resource.properties.parent.properties.entity.enum[0]": "Place",
	"definitions.ErrorSubEntity.properties.resource.properties.parent.properties.entity.enum[1]": "Functionality",
	"definitions.ErrorSubEntity.properties.resource.properties.parent.properties.entity.type": "string",
	"definitions.ErrorSubEntity.properties.resource.properties.parent.properties.id.minLength": 1,
	"definitions.ErrorSubEntity.properties.resource.properties.parent.properties.id.type": "string",
	"definitions.ErrorSubEntity.properties.resource.properties.parent.required.length": 2,
	"definitions.ErrorSubEntity.properties.resource.properties.parent.required[0]": "entity",
	"definitions.ErrorSubEntity.properties.resource.properties.parent.required[1]": "id",
	"definitions.ErrorSubEntity.properties.resource.properties.parent.type": "object",
	"definitions.ErrorSubEntity.properties.resource.required.length": 3,
	"definitions.ErrorSubEntity.properties.resource.required[0]": "id",
	"definitions.ErrorSubEntity.properties.resource.required[1]": "entity",
	"definitions.ErrorSubEntity.properties.resource.required[2]": "href",
	"definitions.ErrorSubEntity.properties.resource.type": "object",
	"definitions.ErrorSubEntity.required.length": 3,
	"definitions.ErrorSubEntity.required[0]": "code",
	"definitions.ErrorSubEntity.required[1]": "message",
	"definitions.ErrorSubEntity.required[2]": "resource",
	"definitions.ErrorSubEntity.type": "object",
	"definitions.Functionality.properties.actions.items.$ref": "#/definitions/ActionName",
	"definitions.Functionality.properties.actions.readOnly": true,
	"definitions.Functionality.properties.actions.type": "array",
	"definitions.Functionality.properties.actions.uniqueItems": true,
	"definitions.Functionality.properties.attributes.items.$ref": "#/definitions/AttributeName",
	"definitions.Functionality.properties.attributes.readOnly": true,
	"definitions.Functionality.properties.attributes.type": "array",
	"definitions.Functionality.properties.attributes.uniqueItems": true,
	"definitions.Functionality.properties.class.$ref": "#/definitions/FunctionalityClass",
	"definitions.Functionality.properties.device.$ref": "#/definitions/DeviceId",
	"definitions.Functionality.properties.endpoint.$ref": "#/definitions/FunctionalityEndpoint",
	"definitions.Functionality.properties.metadata.$ref": "#/definitions/Metadata",
	"definitions.Functionality.properties.name.$ref": "#/definitions/FunctionalityName",
	"definitions.Functionality.properties.tags.items.$ref": "#/definitions/FunctionalityTag",
	"definitions.Functionality.properties.tags.type": "array",
	"definitions.Functionality.properties.tags.uniqueItems": true,
	"definitions.Functionality.required.length": 5,
	"definitions.Functionality.required[0]": "class",
	"definitions.Functionality.required[1]": "endpoint",
	"definitions.Functionality.required[2]": "device",
	"definitions.Functionality.required[3]": "attributes",
	"definitions.Functionality.required[4]": "tags",
	"definitions.Functionality.type": "object",
	"definitions.Functionality.x-links.length": 1,
	"definitions.Functionality.x-links[0].href": "/devices/{id}",
	"definitions.Functionality.x-links[0].rel": "device",
	"definitions.FunctionalityClass.minLength": 2,
	"definitions.FunctionalityClass.pattern": "^[A-Z][A-Za-z0-9]+$",
	"definitions.FunctionalityClass.readOnly": true,
	"definitions.FunctionalityClass.type": "string",
	"definitions.FunctionalityCreated.description": "A resource has been created. The `resource` property gives its reference.",
	"definitions.FunctionalityCreated.example.code": 201,
	"definitions.FunctionalityCreated.example.message": "Functionality created",
	"definitions.FunctionalityCreated.example.resource.entity": "Functionality",
	"definitions.FunctionalityCreated.example.resource.href": "/functionalities/RnVuY3Rpb25hbGl0eTAwMA",
	"definitions.FunctionalityCreated.example.resource.id": "RnVuY3Rpb25hbGl0eTAwMA",
	"definitions.FunctionalityCreated.properties.code.enum.length": 1,
	"definitions.FunctionalityCreated.properties.code.enum[0]": 201,
	"definitions.FunctionalityCreated.properties.code.example": 201,
	"definitions.FunctionalityCreated.properties.code.type": "integer",
	"definitions.FunctionalityCreated.properties.message.enum.length": 1,
	"definitions.FunctionalityCreated.properties.message.enum[0]": "Functionality created",
	"definitions.FunctionalityCreated.properties.message.type": "string",
	"definitions.FunctionalityCreated.properties.resource.$ref": "#/definitions/FunctionalityResource",
	"definitions.FunctionalityCreated.required.length": 3,
	"definitions.FunctionalityCreated.required[0]": "code",
	"definitions.FunctionalityCreated.required[1]": "message",
	"definitions.FunctionalityCreated.required[2]": "resource",
	"definitions.FunctionalityCreated.type": "object",
	"definitions.FunctionalityEndpoint.maximum": 255,
	"definitions.FunctionalityEndpoint.minimum": 0,
	"definitions.FunctionalityEndpoint.readOnly": true,
	"definitions.FunctionalityEndpoint.type": "integer",
	"definitions.FunctionalityId.description": "Unique identifier of the *Functionality*",
	"definitions.FunctionalityId.example": "RnVuY3Rpb25hbGl0eTAwMA",
	"definitions.FunctionalityId.maxLength": 22,
	"definitions.FunctionalityId.minLength": 22,
	"definitions.FunctionalityId.pattern": "^[A-Za-z0-9-_]{22}$",
	"definitions.FunctionalityId.readOnly": true,
	"definitions.FunctionalityId.type": "string",
	"definitions.FunctionalityItem.properties.class.$ref": "#/definitions/FunctionalityClass",
	"definitions.FunctionalityItem.properties.device.$ref": "#/definitions/DeviceId",
	"definitions.FunctionalityItem.properties.endpoint.$ref": "#/definitions/FunctionalityEndpoint",
	"definitions.FunctionalityItem.properties.id.$ref": "#/definitions/FunctionalityId",
	"definitions.FunctionalityItem.properties.metadata.$ref": "#/definitions/MetadataSelected",
	"definitions.FunctionalityItem.properties.name.$ref": "#/definitions/FunctionalityName",
	"definitions.FunctionalityItem.properties.tags.items.$ref": "#/definitions/FunctionalityTag",
	"definitions.FunctionalityItem.properties.tags.type": "array",
	"definitions.FunctionalityItem.properties.tags.uniqueItems": true,
	"definitions.FunctionalityItem.readOnly": true,
	"definitions.FunctionalityItem.required.length": 4,
	"definitions.FunctionalityItem.required[0]": "id",
	"definitions.FunctionalityItem.required[1]": "device",
	"definitions.FunctionalityItem.required[2]": "class",
	"definitions.FunctionalityItem.required[3]": "endpoint",
	"definitions.FunctionalityItem.type": "object",
	"definitions.FunctionalityItem.x-links.length": 2,
	"definitions.FunctionalityItem.x-links[0].href": "/functionalities/{id}",
	"definitions.FunctionalityItem.x-links[0].rel": "full",
	"definitions.FunctionalityItem.x-links[1].href": "/devices/{device}",
	"definitions.FunctionalityItem.x-links[1].rel": "device",
	"definitions.FunctionalityName.description": "Free functionality name",
	"definitions.FunctionalityName.type": "string",
	"definitions.FunctionalityNew.properties.class.$ref": "#/definitions/FunctionalityClass",
	"definitions.FunctionalityNew.properties.endpoint.$ref": "#/definitions/FunctionalityEndpoint",
	"definitions.FunctionalityNew.properties.metadata.$ref": "#/definitions/Metadata",
	"definitions.FunctionalityNew.properties.name.$ref": "#/definitions/FunctionalityName",
	"definitions.FunctionalityNew.properties.tags.items.$ref": "#/definitions/FunctionalityTag",
	"definitions.FunctionalityNew.properties.tags.type": "array",
	"definitions.FunctionalityNew.properties.tags.uniqueItems": true,
	"definitions.FunctionalityNew.required.length": 2,
	"definitions.FunctionalityNew.required[0]": "class",
	"definitions.FunctionalityNew.required[1]": "endpoint",
	"definitions.FunctionalityNew.type": "object",
	"definitions.FunctionalityPatch.properties.name.$ref": "#/definitions/FunctionalityName",
	"definitions.FunctionalityPatch.type": "object",
	"definitions.FunctionalityResource.example.entity": "Functionality",
	"definitions.FunctionalityResource.example.href": "/functionalities/RnVuY3Rpb25hbGl0eTAwMA",
	"definitions.FunctionalityResource.example.id": "RnVuY3Rpb25hbGl0eTAwMA",
	"definitions.FunctionalityResource.properties.entity.enum.length": 1,
	"definitions.FunctionalityResource.properties.entity.enum[0]": "Functionality",
	"definitions.FunctionalityResource.properties.entity.type": "string",
	"definitions.FunctionalityResource.properties.href.minLength": 1,
	"definitions.FunctionalityResource.properties.href.type": "string",
	"definitions.FunctionalityResource.properties.id.$ref": "#/definitions/FunctionalityId",
	"definitions.FunctionalityResource.required.length": 3,
	"definitions.FunctionalityResource.required[0]": "id",
	"definitions.FunctionalityResource.required[1]": "entity",
	"definitions.FunctionalityResource.required[2]": "href",
	"definitions.FunctionalityResource.type": "object",
	"definitions.FunctionalityTag.maxLength": 21,
	"definitions.FunctionalityTag.minLength": 1,
	"definitions.FunctionalityTag.pattern": "^[a-z](?:[a-z0-9_]{0,20}|[a-z0-9_]:[a-z0-9_]{1,18}|[a-z0-9_]{2}:[a-z0-9_]{1,17}|[a-z0-9_]{3}:[a-z0-9_]{1,16}|[a-z0-9_]{4}:[a-z0-9_]{1,15})$",
	"definitions.FunctionalityTag.type": "string",
	"definitions.Locale.description": "Locale identifier (language, region). See https://tools.ietf.org/html/rfc5646 and https://www.iana.org/assignments/lang-subtags-templates/lang-subtags-templates.xhtml .\n",
	"definitions.Locale.example": "fr-FR",
	"definitions.Locale.minLength": 2,
	"definitions.Locale.pattern": "^[a-z]{2}[A-Za-z0-9-]*$",
	"definitions.Locale.type": "string",
	"definitions.Metadata.additionalProperties.$ref": "#/definitions/AnyJSON",
	"definitions.Metadata.description": "Keys are limited to the same format as tags (up to 21 characters, [a-z0-9], starting with [a-z]). Values can be any JSON value.",
	"definitions.Metadata.type": "object",
	"definitions.MetadataKey.maxLength": 21,
	"definitions.MetadataKey.minLength": 1,
	"definitions.MetadataKey.pattern": "^[a-z](?:[a-z0-9_]{0,20}|[a-z0-9_]:[a-z0-9_]{1,18}|[a-z0-9_]{2}:[a-z0-9_]{1,17}|[a-z0-9_]{3}:[a-z0-9_]{1,16}|[a-z0-9_]{4}:[a-z0-9_]{1,15})$",
	"definitions.MetadataKey.type": "string",
	"definitions.MetadataPatch.properties.add.additionalProperties.$ref": "#/definitions/AnyJSON",
	"definitions.MetadataPatch.properties.add.description": "list of pairs key/value to add/replace",
	"definitions.MetadataPatch.properties.add.type": "object",
	"definitions.MetadataPatch.properties.remove.description": "list of keys to remove",
	"definitions.MetadataPatch.properties.remove.items.$ref": "#/definitions/MetadataKey",
	"definitions.MetadataPatch.properties.remove.type": "array",
	"definitions.MetadataPatch.properties.remove.uniqueItems": true,
	"definitions.MetadataPatch.type": "object",
	"definitions.MetadataSelected.additionalProperties.$ref": "#/definitions/AnyJSON",
	"definitions.MetadataSelected.description": "Subset of metadata attached to the resource selected using the 'embed-metadata' parameter",
	"definitions.MetadataSelected.type": "object",
	"definitions.Notification.properties.data.type": "object",
	"definitions.Notification.properties.metadata.$ref": "#/definitions/Metadata",
	"definitions.Notification.properties.name.minLength": 1,
	"definitions.Notification.properties.name.type": "string",
	"definitions.Notification.properties.place.$ref": "#/definitions/PlaceId",
	"definitions.Notification.properties.routing.format": "uri",
	"definitions.Notification.properties.routing.type": "string",
	"definitions.Notification.required.length": 2,
	"definitions.Notification.required[0]": "name",
	"definitions.Notification.required[1]": "place",
	"definitions.Notification.type": "object",
	"definitions.Notification.x-links.length": 1,
	"definitions.Notification.x-links[0].href": "/places/{place}",
	"definitions.Notification.x-links[0].rel": "place",
	"definitions.NotificationCreated.description": "A resource has been created. The `resource` property gives its reference.",
	"definitions.NotificationCreated.example.code": 201,
	"definitions.NotificationCreated.example.message": "Notification created",
	"definitions.NotificationCreated.example.resource.entity": "Notification",
	"definitions.NotificationCreated.example.resource.href": "/notifications/InovwcCIGM5X7KvKrJ7vJw",
	"definitions.NotificationCreated.example.resource.id": "InovwcCIGM5X7KvKrJ7vJw",
	"definitions.NotificationCreated.properties.code.enum.length": 1,
	"definitions.NotificationCreated.properties.code.enum[0]": 201,
	"definitions.NotificationCreated.properties.code.example": 201,
	"definitions.NotificationCreated.properties.code.type": "integer",
	"definitions.NotificationCreated.properties.message.enum.length": 1,
	"definitions.NotificationCreated.properties.message.enum[0]": "Notification created",
	"definitions.NotificationCreated.properties.message.type": "string",
	"definitions.NotificationCreated.properties.resource.$ref": "#/definitions/NotificationResource",
	"definitions.NotificationCreated.required.length": 3,
	"definitions.NotificationCreated.required[0]": "code",
	"definitions.NotificationCreated.required[1]": "message",
	"definitions.NotificationCreated.required[2]": "resource",
	"definitions.NotificationCreated.type": "object",
	"definitions.NotificationId.description": "Unique identifier of the *Notification*",
	"definitions.NotificationId.example": "InovwcCIGM5X7KvKrJ7vJw",
	"definitions.NotificationId.maxLength": 22,
	"definitions.NotificationId.minLength": 22,
	"definitions.NotificationId.pattern": "^[A-Za-z0-9-_]{22}$",
	"definitions.NotificationId.readOnly": true,
	"definitions.NotificationId.type": "string",
	"definitions.NotificationItem.description": "Notification",
	"definitions.NotificationItem.properties.id.$ref": "#/definitions/NotificationId",
	"definitions.NotificationItem.properties.metadata.$ref": "#/definitions/MetadataSelected",
	"definitions.NotificationItem.properties.name.type": "string",
	"definitions.NotificationItem.readOnly": true,
	"definitions.NotificationItem.required.length": 2,
	"definitions.NotificationItem.required[0]": "id",
	"definitions.NotificationItem.required[1]": "name",
	"definitions.NotificationItem.type": "object",
	"definitions.NotificationItem.x-links.length": 1,
	"definitions.NotificationItem.x-links[0].href": "/notifications/{id}",
	"definitions.NotificationItem.x-links[0].rel": "full",
	"definitions.NotificationNew.properties.data.type": "object",
	"definitions.NotificationNew.properties.metadata.$ref": "#/definitions/Metadata",
	"definitions.NotificationNew.properties.name.minLength": 1,
	"definitions.NotificationNew.properties.name.type": "string",
	"definitions.NotificationNew.properties.routing.format": "uri",
	"definitions.NotificationNew.properties.routing.type": "string",
	"definitions.NotificationNew.required.length": 1,
	"definitions.NotificationNew.required[0]": "name",
	"definitions.NotificationNew.type": "object",
	"definitions.NotificationPatch.properties.data.type": "object",
	"definitions.NotificationPatch.properties.name.minLength": 1,
	"definitions.NotificationPatch.properties.name.type": "string",
	"definitions.NotificationPatch.properties.routing.format": "uri",
	"definitions.NotificationPatch.properties.routing.type": "string",
	"definitions.NotificationPatch.type": "object",
	"definitions.NotificationResource.example.entity": "Notification",
	"definitions.NotificationResource.example.href": "/notifications/InovwcCIGM5X7KvKrJ7vJw",
	"definitions.NotificationResource.example.id": "InovwcCIGM5X7KvKrJ7vJw",
	"definitions.NotificationResource.properties.entity.enum.length": 1,
	"definitions.NotificationResource.properties.entity.enum[0]": "Notification",
	"definitions.NotificationResource.properties.entity.type": "string",
	"definitions.NotificationResource.properties.href.minLength": 1,
	"definitions.NotificationResource.properties.href.type": "string",
	"definitions.NotificationResource.properties.id.$ref": "#/definitions/NotificationId",
	"definitions.NotificationResource.required.length": 3,
	"definitions.NotificationResource.required[0]": "id",
	"definitions.NotificationResource.required[1]": "entity",
	"definitions.NotificationResource.required[2]": "href",
	"definitions.NotificationResource.type": "object",
	"definitions.Password.format": "password",
	"definitions.Password.minLength": 5,
	"definitions.Password.type": "string",
	"definitions.PhoneNumber.description": "Phone number of the *User* in international format, for SMS notifications.",
	"definitions.PhoneNumber.example": "+33177494646",
	"definitions.PhoneNumber.minLength": 6,
	"definitions.PhoneNumber.pattern": "^\\+[0-9]{5,}$",
	"definitions.PhoneNumber.type": "string",
	"definitions.Place.properties.account.$ref": "#/definitions/AccountId",
	"definitions.Place.properties.country.$ref": "#/definitions/CountryCode",
	"definitions.Place.properties.metadata.$ref": "#/definitions/Metadata",
	"definitions.Place.properties.name.example": "⌂ Home",
	"definitions.Place.properties.name.minLength": 1,
	"definitions.Place.properties.name.type": "string",
	"definitions.Place.properties.timeZone.$ref": "#/definitions/TimeZone",
	"definitions.Place.properties.zipCode.$ref": "#/definitions/ZipCode",
	"definitions.Place.required.length": 4,
	"definitions.Place.required[0]": "name",
	"definitions.Place.required[1]": "zipCode",
	"definitions.Place.required[2]": "country",
	"definitions.Place.required[3]": "timeZone",
	"definitions.Place.type": "object",
	"definitions.PlaceCreated.description": "A resource has been created. The `resource` property gives its reference.",
	"definitions.PlaceCreated.example.code": 201,
	"definitions.PlaceCreated.example.message": "Place created",
	"definitions.PlaceCreated.example.resource.entity": "Place",
	"definitions.PlaceCreated.example.resource.href": "/places/3HA6YcSCTSFX6SPPrI9PxQ",
	"definitions.PlaceCreated.example.resource.id": "3HA6YcSCTSFX6SPPrI9PxQ",
	"definitions.PlaceCreated.properties.code.enum.length": 1,
	"definitions.PlaceCreated.properties.code.enum[0]": 201,
	"definitions.PlaceCreated.properties.code.example": 201,
	"definitions.PlaceCreated.properties.code.type": "integer",
	"definitions.PlaceCreated.properties.message.enum.length": 1,
	"definitions.PlaceCreated.properties.message.enum[0]": "Place created",
	"definitions.PlaceCreated.properties.message.type": "string",
	"definitions.PlaceCreated.properties.resource.$ref": "#/definitions/PlaceResource",
	"definitions.PlaceCreated.required.length": 3,
	"definitions.PlaceCreated.required[0]": "code",
	"definitions.PlaceCreated.required[1]": "message",
	"definitions.PlaceCreated.required[2]": "resource",
	"definitions.PlaceCreated.type": "object",
	"definitions.PlaceId.description": "Unique identifier of the *Place*",
	"definitions.PlaceId.example": "3HA6YcSCTSFX6SPPrI9PxQ",
	"definitions.PlaceId.maxLength": 22,
	"definitions.PlaceId.minLength": 22,
	"definitions.PlaceId.pattern": "^[A-Za-z0-9-_]{22}$",
	"definitions.PlaceId.readOnly": true,
	"definitions.PlaceId.type": "string",
	"definitions.PlaceItem.properties.id.$ref": "#/definitions/PlaceId",
	"definitions.PlaceItem.properties.name.type": "string",
	"definitions.PlaceItem.readOnly": true,
	"definitions.PlaceItem.required.length": 2,
	"definitions.PlaceItem.required[0]": "id",
	"definitions.PlaceItem.required[1]": "name",
	"definitions.PlaceItem.type": "object",
	"definitions.PlaceItem.x-links.length": 1,
	"definitions.PlaceItem.x-links[0].href": "/places/{id}",
	"definitions.PlaceItem.x-links[0].rel": "full",
	"definitions.PlaceNew.properties.country.$ref": "#/definitions/CountryCode",
	"definitions.PlaceNew.properties.metadata.$ref": "#/definitions/Metadata",
	"definitions.PlaceNew.properties.name.example": "⌂ Home",
	"definitions.PlaceNew.properties.name.minLength": 1,
	"definitions.PlaceNew.properties.name.type": "string",
	"definitions.PlaceNew.properties.timeZone.$ref": "#/definitions/TimeZone",
	"definitions.PlaceNew.properties.zipCode.$ref": "#/definitions/ZipCode",
	"definitions.PlaceNew.required.length": 4,
	"definitions.PlaceNew.required[0]": "name",
	"definitions.PlaceNew.required[1]": "zipCode",
	"definitions.PlaceNew.required[2]": "country",
	"definitions.PlaceNew.required[3]": "timeZone",
	"definitions.PlaceNew.type": "object",
	"definitions.PlacePatch.properties.country.$ref": "#/definitions/CountryCode",
	"definitions.PlacePatch.properties.name.example": "⌂ Home",
	"definitions.PlacePatch.properties.name.minLength": 1,
	"definitions.PlacePatch.properties.name.type": "string",
	"definitions.PlacePatch.properties.timeZone.$ref": "#/definitions/TimeZone",
	"definitions.PlacePatch.properties.zipCode.$ref": "#/definitions/ZipCode",
	"definitions.PlacePatch.type": "object",
	"definitions.PlaceResource.example.entity": "Place",
	"definitions.PlaceResource.example.href": "/places/3HA6YcSCTSFX6SPPrI9PxQ",
	"definitions.PlaceResource.example.id": "3HA6YcSCTSFX6SPPrI9PxQ",
	"definitions.PlaceResource.properties.entity.enum.length": 1,
	"definitions.PlaceResource.properties.entity.enum[0]": "Place",
	"definitions.PlaceResource.properties.entity.type": "string",
	"definitions.PlaceResource.properties.href.minLength": 1,
	"definitions.PlaceResource.properties.href.type": "string",
	"definitions.PlaceResource.properties.id.$ref": "#/definitions/PlaceId",
	"definitions.PlaceResource.required.length": 3,
	"definitions.PlaceResource.required[0]": "id",
	"definitions.PlaceResource.required[1]": "entity",
	"definitions.PlaceResource.required[2]": "href",
	"definitions.PlaceResource.type": "object",
	"definitions.Program.properties.code.$ref": "#/definitions/AnyJSON",
	"definitions.Program.properties.enabled.type": "boolean",
	"definitions.Program.properties.metadata.$ref": "#/definitions/Metadata",
	"definitions.Program.properties.name.minLength": 1,
	"definitions.Program.properties.name.type": "string",
	"definitions.Program.properties.place.$ref": "#/definitions/PlaceId",
	"definitions.Program.required.length": 3,
	"definitions.Program.required[0]": "name",
	"definitions.Program.required[1]": "enabled",
	"definitions.Program.required[2]": "code",
	"definitions.Program.type": "object",
	"definitions.Program.x-links.length": 1,
	"definitions.Program.x-links[0].href": "/places/{place}",
	"definitions.Program.x-links[0].rel": "place",
	"definitions.ProgramCreated.description": "A resource has been created. The `resource` property gives its reference.",
	"definitions.ProgramCreated.example.code": 201,
	"definitions.ProgramCreated.example.message": "Program created",
	"definitions.ProgramCreated.example.resource.entity": "Program",
	"definitions.ProgramCreated.example.resource.href": "/programs/3_J_6ZWICc5X_KverorNvw",
	"definitions.ProgramCreated.example.resource.id": "3_J_6ZWICc5X_KverorNvw",
	"definitions.ProgramCreated.properties.code.enum.length": 1,
	"definitions.ProgramCreated.properties.code.enum[0]": 201,
	"definitions.ProgramCreated.properties.code.example": 201,
	"definitions.ProgramCreated.properties.code.type": "integer",
	"definitions.ProgramCreated.properties.message.enum.length": 1,
	"definitions.ProgramCreated.properties.message.enum[0]": "Program created",
	"definitions.ProgramCreated.properties.message.type": "string",
	"definitions.ProgramCreated.properties.resource.$ref": "#/definitions/ProgramResource",
	"definitions.ProgramCreated.required.length": 3,
	"definitions.ProgramCreated.required[0]": "code",
	"definitions.ProgramCreated.required[1]": "message",
	"definitions.ProgramCreated.required[2]": "resource",
	"definitions.ProgramCreated.type": "object",
	"definitions.ProgramId.description": "Unique identifier of the *Program*",
	"definitions.ProgramId.example": "3_J_6ZWICc5X_KverorNvw",
	"definitions.ProgramId.maxLength": 22,
	"definitions.ProgramId.minLength": 22,
	"definitions.ProgramId.pattern": "^[A-Za-z0-9-_]{22}$",
	"definitions.ProgramId.readOnly": true,
	"definitions.ProgramId.type": "string",
	"definitions.ProgramItem.properties.enabled.type": "boolean",
	"definitions.ProgramItem.properties.id.$ref": "#/definitions/ProgramId",
	"definitions.ProgramItem.properties.metadata.$ref": "#/definitions/MetadataSelected",
	"definitions.ProgramItem.properties.name.type": "string",
	"definitions.ProgramItem.readOnly": true,
	"definitions.ProgramItem.required.length": 3,
	"definitions.ProgramItem.required[0]": "id",
	"definitions.ProgramItem.required[1]": "name",
	"definitions.ProgramItem.required[2]": "enabled",
	"definitions.ProgramItem.type": "object",
	"definitions.ProgramItem.x-links.length": 1,
	"definitions.ProgramItem.x-links[0].href": "/programs/{id}",
	"definitions.ProgramItem.x-links[0].rel": "full",
	"definitions.ProgramLog.properties.actions.items.$ref": "#/definitions/ActionResult",
	"definitions.ProgramLog.properties.actions.type": "array",
	"definitions.ProgramLog.properties.errors.items.type": "string",
	"definitions.ProgramLog.properties.errors.type": "array",
	"definitions.ProgramLog.properties.notifications.items.$ref": "#/definitions/NotificationId",
	"definitions.ProgramLog.properties.notifications.type": "array",
	"definitions.ProgramLog.properties.notifications.uniqueItems": true,
	"definitions.ProgramLog.properties.when.format": "date-time",
	"definitions.ProgramLog.properties.when.type": "string",
	"definitions.ProgramLog.required.length": 1,
	"definitions.ProgramLog.required[0]": "when",
	"definitions.ProgramLog.type": "object",
	"definitions.ProgramNew.example.code.length": 0,
	"definitions.ProgramNew.example.enabled": false,
	"definitions.ProgramNew.example.name": "NOOP",
	"definitions.ProgramNew.properties.code.$ref": "#/definitions/AnyJSON",
	"definitions.ProgramNew.properties.enabled.default": true,
	"definitions.ProgramNew.properties.enabled.type": "boolean",
	"definitions.ProgramNew.properties.metadata.$ref": "#/definitions/Metadata",
	"definitions.ProgramNew.properties.name.minLength": 1,
	"definitions.ProgramNew.properties.name.type": "string",
	"definitions.ProgramNew.required.length": 2,
	"definitions.ProgramNew.required[0]": "name",
	"definitions.ProgramNew.required[1]": "code",
	"definitions.ProgramNew.type": "object",
	"definitions.ProgramPatch.properties.code.$ref": "#/definitions/AnyJSON",
	"definitions.ProgramPatch.properties.enabled.type": "boolean",
	"definitions.ProgramPatch.properties.name.minLength": 1,
	"definitions.ProgramPatch.properties.name.type": "string",
	"definitions.ProgramPatch.type": "object",
	"definitions.ProgramResource.example.entity": "Program",
	"definitions.ProgramResource.example.href": "/programs/3_J_6ZWICc5X_KverorNvw",
	"definitions.ProgramResource.example.id": "3_J_6ZWICc5X_KverorNvw",
	"definitions.ProgramResource.properties.entity.enum.length": 1,
	"definitions.ProgramResource.properties.entity.enum[0]": "Program",
	"definitions.ProgramResource.properties.entity.type": "string",
	"definitions.ProgramResource.properties.href.minLength": 1,
	"definitions.ProgramResource.properties.href.type": "string",
	"definitions.ProgramResource.properties.id.$ref": "#/definitions/ProgramId",
	"definitions.ProgramResource.required.length": 3,
	"definitions.ProgramResource.required[0]": "id",
	"definitions.ProgramResource.required[1]": "entity",
	"definitions.ProgramResource.required[2]": "href",
	"definitions.ProgramResource.type": "object",
	"definitions.ResourceRef.properties.entity.enum.length": 8,
	"definitions.ResourceRef.properties.entity.enum[0]": "Device",
	"definitions.ResourceRef.properties.entity.enum[1]": "Functionality",
	"definitions.ResourceRef.properties.entity.enum[2]": "Notification",
	"definitions.ResourceRef.properties.entity.enum[3]": "Place",
	"definitions.ResourceRef.properties.entity.enum[4]": "Program",
	"definitions.ResourceRef.properties.entity.enum[5]": "User",
	"definitions.ResourceRef.properties.entity.enum[6]": "Account",
	"definitions.ResourceRef.properties.entity.enum[7]": "AccountsBase",
	"definitions.ResourceRef.properties.entity.type": "string",
	"definitions.ResourceRef.properties.href.minLength": 1,
	"definitions.ResourceRef.properties.href.type": "string",
	"definitions.ResourceRef.properties.id.minLength": 1,
	"definitions.ResourceRef.properties.id.type": "string",
	"definitions.ResourceRef.required.length": 3,
	"definitions.ResourceRef.required[0]": "id",
	"definitions.ResourceRef.required[1]": "entity",
	"definitions.ResourceRef.required[2]": "href",
	"definitions.ResourceRef.type": "object",
	"definitions.Tag.maxLength": 21,
	"definitions.Tag.minLength": 1,
	"definitions.Tag.pattern": "^[a-z](?:[a-z0-9_]{0,20}|[a-z0-9_]:[a-z0-9_]{1,18}|[a-z0-9_]{2}:[a-z0-9_]{1,17}|[a-z0-9_]{3}:[a-z0-9_]{1,16}|[a-z0-9_]{4}:[a-z0-9_]{1,15})$",
	"definitions.Tag.type": "string",
	"definitions.Tags.items.$ref": "#/definitions/Tag",
	"definitions.Tags.type": "array",
	"definitions.Tags.uniqueItems": true,
	"definitions.TagsPatch.properties.add.description": "list of tags to add",
	"definitions.TagsPatch.properties.add.items.$ref": "#/definitions/Tag",
	"definitions.TagsPatch.properties.add.type": "array",
	"definitions.TagsPatch.properties.add.uniqueItems": true,
	"definitions.TagsPatch.properties.remove.description": "list of tags to remove",
	"definitions.TagsPatch.properties.remove.items.$ref": "#/definitions/Tag",
	"definitions.TagsPatch.properties.remove.type": "array",
	"definitions.TagsPatch.properties.remove.uniqueItems": true,
	"definitions.TagsPatch.type": "object",
	"definitions.TimeZone.description": "A time zone name from the Time Zone Database at https://www.iana.org/time-zones",
	"definitions.TimeZone.example": "Europe/Paris",
	"definitions.TimeZone.minLength": 2,
	"definitions.TimeZone.pattern": "^[A-Z][A-Za-z0-9-_+]+(?:/[A-Z][A-Za-z0-9-_+]+)*$",
	"definitions.TimeZone.type": "string",
	"definitions.TokenId.example": "dfSDdRcsd",
	"definitions.TokenId.minLength": 1,
	"definitions.TokenId.type": "string",
	"definitions.User.properties.account.$ref": "#/definitions/AccountId",
	"definitions.User.properties.canLogin.default": false,
	"definitions.User.properties.canLogin.description": "true if the user owning the account (can get tokens with /auth/login)",
	"definitions.User.properties.canLogin.example": false,
	"definitions.User.properties.canLogin.readOnly": true,
	"definitions.User.properties.canLogin.type": "boolean",
	"definitions.User.properties.email.$ref": "#/definitions/UserEmail",
	"definitions.User.properties.locale.$ref": "#/definitions/Locale",
	"definitions.User.properties.metadata.$ref": "#/definitions/Metadata",
	"definitions.User.properties.name.minLength": 1,
	"definitions.User.properties.name.type": "string",
	"definitions.User.properties.phoneNumber.$ref": "#/definitions/PhoneNumber",
	"definitions.User.required.length": 4,
	"definitions.User.required[0]": "email",
	"definitions.User.required[1]": "name",
	"definitions.User.required[2]": "locale",
	"definitions.User.required[3]": "canLogin",
	"definitions.User.type": "object",
	"definitions.UserCreated.description": "A resource has been created. The `resource` property gives its reference.",
	"definitions.UserCreated.example.code": 201,
	"definitions.UserCreated.example.message": "User created",
	"definitions.UserCreated.example.resource.entity": "User",
	"definitions.UserCreated.example.resource.href": "/users/RGV2aWNlMDAwMDAwMDAwMZ",
	"definitions.UserCreated.example.resource.id": "RGV2aWNlMDAwMDAwMDAwMZ",
	"definitions.UserCreated.properties.code.enum.length": 1,
	"definitions.UserCreated.properties.code.enum[0]": 201,
	"definitions.UserCreated.properties.code.example": 201,
	"definitions.UserCreated.properties.code.type": "integer",
	"definitions.UserCreated.properties.message.enum.length": 1,
	"definitions.UserCreated.properties.message.enum[0]": "User created",
	"definitions.UserCreated.properties.message.type": "string",
	"definitions.UserCreated.properties.resource.$ref": "#/definitions/UserResource",
	"definitions.UserCreated.required.length": 3,
	"definitions.UserCreated.required[0]": "code",
	"definitions.UserCreated.required[1]": "message",
	"definitions.UserCreated.required[2]": "resource",
	"definitions.UserCreated.type": "object",
	"definitions.UserEmail.format": "email",
	"definitions.UserEmail.minLength": 6,
	"definitions.UserEmail.type": "string",
	"definitions.UserId.description": "Unique identifier of the *User*",
	"definitions.UserId.example": "RGV2aWNlMDAwMDAwMDAwMZ",
	"definitions.UserId.maxLength": 22,
	"definitions.UserId.minLength": 22,
	"definitions.UserId.pattern": "^[A-Za-z0-9-_]{22}$",
	"definitions.UserId.readOnly": true,
	"definitions.UserId.type": "string",
	"definitions.UserItem.properties.canLogin.default": false,
	"definitions.UserItem.properties.canLogin.description": "true if the user owning the account (can get tokens with /auth/login)",
	"definitions.UserItem.properties.canLogin.example": false,
	"definitions.UserItem.properties.canLogin.readOnly": true,
	"definitions.UserItem.properties.canLogin.type": "boolean",
	"definitions.UserItem.properties.email.$ref": "#/definitions/UserEmail",
	"definitions.UserItem.properties.id.$ref": "#/definitions/UserId",
	"definitions.UserItem.properties.locale.$ref": "#/definitions/Locale",
	"definitions.UserItem.properties.metadata.$ref": "#/definitions/MetadataSelected",
	"definitions.UserItem.properties.name.minLength": 1,
	"definitions.UserItem.properties.name.type": "string",
	"definitions.UserItem.properties.phoneNumber.$ref": "#/definitions/PhoneNumber",
	"definitions.UserItem.required.length": 4,
	"definitions.UserItem.required[0]": "email",
	"definitions.UserItem.required[1]": "name",
	"definitions.UserItem.required[2]": "locale",
	"definitions.UserItem.required[3]": "id",
	"definitions.UserItem.type": "object",
	"definitions.UserItem.x-links.length": 1,
	"definitions.UserItem.x-links[0].href": "/users/{id}",
	"definitions.UserItem.x-links[0].rel": "full",
	"definitions.UserMe.properties.email.$ref": "#/definitions/UserEmail",
	"definitions.UserMe.properties.id.$ref": "#/definitions/UserId",
	"definitions.UserMe.properties.locale.$ref": "#/definitions/Locale",
	"definitions.UserMe.properties.login.$ref": "#/definitions/AccountLogin",
	"definitions.UserMe.properties.metadata.$ref": "#/definitions/Metadata",
	"definitions.UserMe.properties.name.minLength": 1,
	"definitions.UserMe.properties.name.type": "string",
	"definitions.UserMe.properties.phoneNumber.$ref": "#/definitions/PhoneNumber",
	"definitions.UserMe.required.length": 4,
	"definitions.UserMe.required[0]": "email",
	"definitions.UserMe.required[1]": "name",
	"definitions.UserMe.required[2]": "locale",
	"definitions.UserMe.required[3]": "id",
	"definitions.UserMe.type": "object",
	"definitions.UserMe.x-links.length": 1,
	"definitions.UserMe.x-links[0].href": "/account/users/{id}",
	"definitions.UserMe.x-links[0].rel": "full",
	"definitions.UserMePatch.properties.locale.$ref": "#/definitions/Locale",
	"definitions.UserMePatch.type": "object",
	"definitions.UserNew.properties.email.$ref": "#/definitions/UserEmail",
	"definitions.UserNew.properties.locale.$ref": "#/definitions/Locale",
	"definitions.UserNew.properties.metadata.$ref": "#/definitions/Metadata",
	"definitions.UserNew.properties.name.minLength": 1,
	"definitions.UserNew.properties.name.type": "string",
	"definitions.UserNew.properties.phoneNumber.$ref": "#/definitions/PhoneNumber",
	"definitions.UserNew.required.length": 3,
	"definitions.UserNew.required[0]": "email",
	"definitions.UserNew.required[1]": "name",
	"definitions.UserNew.required[2]": "locale",
	"definitions.UserNew.type": "object",
	"definitions.UserPatch.properties.email.$ref": "#/definitions/UserEmail",
	"definitions.UserPatch.properties.locale.$ref": "#/definitions/Locale",
	"definitions.UserPatch.properties.name.minLength": 1,
	"definitions.UserPatch.properties.name.type": "string",
	"definitions.UserPatch.properties.phoneNumber.$ref": "#/definitions/PhoneNumber",
	"definitions.UserPatch.type": "object",
	"definitions.UserResource.example.entity": "User",
	"definitions.UserResource.example.href": "/users/RGV2aWNlMDAwMDAwMDAwMZ",
	"definitions.UserResource.example.id": "RGV2aWNlMDAwMDAwMDAwMZ",
	"definitions.UserResource.properties.entity.enum.length": 1,
	"definitions.UserResource.properties.entity.enum[0]": "User",
	"definitions.UserResource.properties.entity.type": "string",
	"definitions.UserResource.properties.href.minLength": 1,
	"definitions.UserResource.properties.href.type": "string",
	"definitions.UserResource.properties.id.$ref": "#/definitions/UserId",
	"definitions.UserResource.required.length": 3,
	"definitions.UserResource.required[0]": "id",
	"definitions.UserResource.required[1]": "entity",
	"definitions.UserResource.required[2]": "href",
	"definitions.UserResource.type": "object",
	"definitions.UserTokenItem.description": "Token for User API access",
	"definitions.UserTokenItem.properties.appName.description": "Application name",
	"definitions.UserTokenItem.properties.appName.example": "Home Eopath",
	"definitions.UserTokenItem.properties.appName.type": "string",
	"definitions.UserTokenItem.properties.id.$ref": "#/definitions/TokenId",
	"definitions.UserTokenItem.properties.lastUse.description": "Time of last use of the token to access the API. Updated at most every 15 minutes. If absent, the token has never been used.",
	"definitions.UserTokenItem.properties.lastUse.format": "date-time",
	"definitions.UserTokenItem.properties.lastUse.type": "string",
	"definitions.UserTokenItem.properties.places.description": "List of Places to which the User has access. If absent, it means any Place of the account are allowed.",
	"definitions.UserTokenItem.properties.places.items.$ref": "#/definitions/PlaceItem",
	"definitions.UserTokenItem.properties.places.type": "array",
	"definitions.UserTokenItem.properties.places.uniqueItems": true,
	"definitions.UserTokenItem.properties.refreshTokenExpires.description": "If absent, infinite validity.",
	"definitions.UserTokenItem.properties.refreshTokenExpires.format": "date-time",
	"definitions.UserTokenItem.properties.refreshTokenExpires.type": "string",
	"definitions.UserTokenItem.properties.self.description": "True if this token is the one used for this API request",
	"definitions.UserTokenItem.properties.self.type": "boolean",
	"definitions.UserTokenItem.properties.user.$ref": "#/definitions/UserItem",
	"definitions.UserTokenItem.required.length": 3,
	"definitions.UserTokenItem.required[0]": "id",
	"definitions.UserTokenItem.required[1]": "appName",
	"definitions.UserTokenItem.required[2]": "user",
	"definitions.UserTokenItem.type": "object",
	"definitions.ZipCode.description": "Postal code",
	"definitions.ZipCode.maxLength": 10,
	"definitions.ZipCode.minLength": 0,
	"definitions.ZipCode.pattern": "^(?:[A-Z0-9](?:[A-Z0-9][- ]?)*[A-Z0-9])?$",
	"definitions.ZipCode.type": "string",
	"host": "ioe2api.ijenko.net",
	"info.contact.email": "contact@ijenko.com",
	"info.contact.name": "IJENKO",
	"info.contact.url": "http://developers.ijenko.com/",
	"info.title": "IoE² IoT API - to create end-user applications",
	"info.version": "3.0.0",
	"info.x-apisguru-categories.length": 1,
	"info.x-apisguru-categories[0]": "iot",
	"info.x-logo.backgroundColor": "#383D41",
	"info.x-logo.url": "https://api.apis.guru/v2/cache/logo/https_pbs.twimg.com_profile_images_1706275304__0_logo_carr__fd_gris_400x400.png",
	"info.x-origin.length": 1,
	"info.x-origin[0].format": "swagger",
	"info.x-origin[0].url": "http://developers.ijenko.com/swagger.json",
	"info.x-origin[0].version": "2.0",
	"info.x-preferred": true,
	"info.x-providerName": "ijenko.net",
	"parameters.accountId.description": "Unique identifier of an *Account*.",
	"parameters.accountId.in": "path",
	"parameters.accountId.name": "accountId",
	"parameters.accountId.required": true,
	"parameters.accountId.type": "string",
	"parameters.action.description": "Identifier of an *Action* inside a *Functionality*.",
	"parameters.action.in": "path",
	"parameters.action.name": "action",
	"parameters.action.required": true,
	"parameters.action.type": "string",
	"parameters.attributeName.description": "Identifier of an *Attribute* inside a *Functionality*.",
	"parameters.attributeName.in": "path",
	"parameters.attributeName.name": "attributeName",
	"parameters.attributeName.required": true,
	"parameters.attributeName.type": "string",
	"parameters.attributesNames.collectionFormat": "csv",
	"parameters.attributesNames.description": "One or multiple *Attribute* names separated by commas",
	"parameters.attributesNames.in": "query",
	"parameters.attributesNames.items.type": "string",
	"parameters.attributesNames.name": "names",
	"parameters.attributesNames.required": false,
	"parameters.attributesNames.type": "array",
	"parameters.busId.description": "Unique identifier of a *Bus*.",
	"parameters.busId.in": "path",
	"parameters.busId.name": "busId",
	"parameters.busId.required": true,
	"parameters.busId.type": "string",
	"parameters.deviceId.description": "Unique identifier of a *Device*.",
	"parameters.deviceId.in": "path",
	"parameters.deviceId.name": "deviceId",
	"parameters.deviceId.required": true,
	"parameters.deviceId.type": "string",
	"parameters.devicesSelector.Opt.description": "Devices selector. Device tags or device classes or device ids or '*' for any. Multiple values are separated by '|' and interpreted as « OR ».",
	"parameters.devicesSelector.Opt.in": "query",
	"parameters.devicesSelector.Opt.name": "devices",
	"parameters.devicesSelector.Opt.pattern": "^(?:\\\\*|(?:[A-Z][A-Z0-9]{3}|[a-z][a-z0-9_:]{0,20}|[A-Za-z0-9-_]{22})(?:\\\\|(?:[A-Z][A-Z0-9]{3}|[a-z][a-z0-9_:]{0,20}|[A-Za-z0-9-_]{22}))*)$",
	"parameters.devicesSelector.Opt.required": false,
	"parameters.devicesSelector.Opt.type": "string",
	"parameters.devicesSelector.Req.description": "Devices selector. Device tags or device classes or device ids or '*' for any. Multiple values are separated by '|' and interpreted as « OR ».",
	"parameters.devicesSelector.Req.in": "query",
	"parameters.devicesSelector.Req.name": "devices",
	"parameters.devicesSelector.Req.pattern": "^(?:\\\\*|(?:[A-Z][A-Z0-9]{3}|[a-z][a-z0-9_:]{0,20}|[A-Za-z0-9-_]{22})(?:\\\\|(?:[A-Z][A-Z0-9]{3}|[a-z][a-z0-9_:]{0,20}|[A-Za-z0-9-_]{22}))*)$",
	"parameters.devicesSelector.Req.required": true,
	"parameters.devicesSelector.Req.type": "string",
	"parameters.embedMetadata.collectionFormat": "csv",
	"parameters.embedMetadata.description": "Request to include the given keys of metadata in the response. If a key doesn't exist on the resource it is ignored.\n**Note:** This only applies to the top level resources.\n",
	"parameters.embedMetadata.in": "query",
	"parameters.embedMetadata.items.type": "string",
	"parameters.embedMetadata.name": "embed-metadata",
	"parameters.embedMetadata.required": false,
	"parameters.embedMetadata.type": "array",
	"parameters.from.Opt.description": "Beginning of the time interval.",
	"parameters.from.Opt.format": "date-time",
	"parameters.from.Opt.in": "query",
	"parameters.from.Opt.name": "from",
	"parameters.from.Opt.required": false,
	"parameters.from.Opt.type": "string",
	"parameters.from.Req.description": "Beginning of the time interval.",
	"parameters.from.Req.format": "date-time",
	"parameters.from.Req.in": "query",
	"parameters.from.Req.name": "from",
	"parameters.from.Req.required": true,
	"parameters.from.Req.type": "string",
	"parameters.functionalitiesSelector.Opt.description": "Functionality selector: Functionality tags or functionality class (optionally, '@' followed by a endpoint in decimal) or '*' for all. Multiple values are separated by '|' and are interpreted as « OR ».\n",
	"parameters.functionalitiesSelector.Opt.in": "query",
	"parameters.functionalitiesSelector.Opt.name": "functionalities",
	"parameters.functionalitiesSelector.Opt.pattern": "^(?:\\\\*|(?:[A-Z][A-Za-z0-9]+(?:@(?:0|1[0-9]{,2}|[3-9][0-9]?|2(?:[0-4][0-9]?|5[0-5]?|[6-9])?))?|[a-z][a-z0-9_:]{0,20}|[A-Za-z0-9-_]{22})(?:\\\\|(?:[A-Z][A-Za-z0-9]+(?:@(?:0|1[0-9]{,2}|[3-9][0-9]?|2(?:[0-4][0-9]?|5[0-5]?|[6-9])?))?|[a-z][a-z0-9_:]{0,20}|[A-Za-z0-9-_]{22}))*)$",
	"parameters.functionalitiesSelector.Opt.required": false,
	"parameters.functionalitiesSelector.Opt.type": "string",
	"parameters.functionalitiesSelector.Req.description": "Functionality selector: Functionality tags or functionality class (optionally, '@' followed by a endpoint in decimal) or '*' for all. Multiple values are separated by '|' and are interpreted as « OR ».\n",
	"parameters.functionalitiesSelector.Req.in": "query",
	"parameters.functionalitiesSelector.Req.name": "functionalities",
	"parameters.functionalitiesSelector.Req.pattern": "^(?:\\\\*|(?:[A-Z][A-Za-z0-9]+(?:@(?:0|1[0-9]{,2}|[3-9][0-9]?|2(?:[0-4][0-9]?|5[0-5]?|[6-9])?))?|[a-z][a-z0-9_:]{0,20}|[A-Za-z0-9-_]{22})(?:\\\\|(?:[A-Z][A-Za-z0-9]+(?:@(?:0|1[0-9]{,2}|[3-9][0-9]?|2(?:[0-4][0-9]?|5[0-5]?|[6-9])?))?|[a-z][a-z0-9_:]{0,20}|[A-Za-z0-9-_]{22}))*)$",
	"parameters.functionalitiesSelector.Req.required": true,
	"parameters.functionalitiesSelector.Req.type": "string",
	"parameters.functionalityId.description": "Unique identifier of a *Functionality*.",
	"parameters.functionalityId.in": "path",
	"parameters.functionalityId.name": "functionalityId",
	"parameters.functionalityId.required": true,
	"parameters.functionalityId.type": "string",
	"parameters.metadataPatch.description": "Modifications to apply to the metadata of the resource.\n",
	"parameters.metadataPatch.in": "body",
	"parameters.metadataPatch.name": "metadataPatch",
	"parameters.metadataPatch.required": true,
	"parameters.metadataPatch.schema.$ref": "#/definitions/MetadataPatch",
	"parameters.notificationId.description": "Unique identifier of a *Notification*.",
	"parameters.notificationId.in": "path",
	"parameters.notificationId.name": "notificationId",
	"parameters.notificationId.required": true,
	"parameters.notificationId.type": "string",
	"parameters.placeId.description": "Unique identifier of a *Place*.",
	"parameters.placeId.in": "path",
	"parameters.placeId.name": "placeId",
	"parameters.placeId.required": true,
	"parameters.placeId.type": "string",
	"parameters.programId.description": "Unique identifier of a *Program*.",
	"parameters.programId.in": "path",
	"parameters.programId.name": "programId",
	"parameters.programId.required": true,
	"parameters.programId.type": "string",
	"parameters.span.Req.description": "Timespan: H (hour), D (day), Wmo (week starting on Monday), Wsu (week starting on Sunday), M (month), Y (year)",
	"parameters.span.Req.enum.length": 6,
	"parameters.span.Req.enum[0]": "H",
	"parameters.span.Req.enum[1]": "D",
	"parameters.span.Req.enum[2]": "Wmo",
	"parameters.span.Req.enum[3]": "Wsu",
	"parameters.span.Req.enum[4]": "M",
	"parameters.span.Req.enum[5]": "Y",
	"parameters.span.Req.in": "query",
	"parameters.span.Req.name": "span",
	"parameters.span.Req.required": true,
	"parameters.span.Req.type": "string",
	"parameters.tagsPatch.description": "Modifications to apply to the tags list of the resource.\n",
	"parameters.tagsPatch.in": "body",
	"parameters.tagsPatch.name": "tagsPatch",
	"parameters.tagsPatch.required": true,
	"parameters.tagsPatch.schema.$ref": "#/definitions/TagsPatch",
	"parameters.to.description": "End of the interval. Default: now.\n",
	"parameters.to.format": "date-time",
	"parameters.to.in": "query",
	"parameters.to.name": "to",
	"parameters.to.required": false,
	"parameters.to.type": "string",
	"parameters.tokenId.description": "Identifier of the token",
	"parameters.tokenId.in": "path",
	"parameters.tokenId.name": "tokenId",
	"parameters.tokenId.required": true,
	"parameters.tokenId.type": "string",
	"parameters.userId.description": "Unique identifier of a *User*.",
	"parameters.userId.in": "path",
	"parameters.userId.name": "userId",
	"parameters.userId.required": true,
	"parameters.userId.type": "string",
	"parameters.when.Req.description": "A time part of the time span.",
	"parameters.when.Req.format": "date-time",
	"parameters.when.Req.in": "query",
	"parameters.when.Req.name": "when",
	"parameters.when.Req.required": true,
	"parameters.when.Req.type": "string",
	"paths./account/change-password.post.description": "Set a new password for the account.\n\n**Note**: requires full access to the *Account*.\n",
	"paths./account/change-password.post.operationId": "Account.changePassword",
	"paths./account/change-password.post.parameters.length": 1,
	"paths./account/change-password.post.parameters[0].description": "Old and new password",
	"paths./account/change-password.post.parameters[0].in": "body",
	"paths./account/change-password.post.parameters[0].name": "changePasswordInfo",
	"paths./account/change-password.post.parameters[0].required": true,
	"paths./account/change-password.post.parameters[0].schema.$ref": "#/definitions/AuthChangePassword",
	"paths./account/change-password.post.responses.204.description": "Change successful.",
	"paths./account/change-password.post.responses.403.$ref": "#/responses/ErrorAccessAccount",
	"paths./account/change-password.post.responses.default.$ref": "#/responses/DefaultError",
	"paths./account/change-password.post.summary": "Change the password",
	"paths./account/change-password.post.tags.length": 1,
	"paths./account/change-password.post.tags[0]": "Account",
	"paths./account/places.get.description": "List the *Places* of the account.\n\n**Note:** requires full access to the *Account*.\n",
	"paths./account/places.get.operationId": "Account.places",
	"paths./account/places.get.responses.200.description": "Successful response",
	"paths./account/places.get.responses.200.schema.items.$ref": "#/definitions/PlaceItem",
	"paths./account/places.get.responses.200.schema.type": "array",
	"paths./account/places.get.responses.200.schema.uniqueItems": true,
	"paths./account/places.get.responses.403.$ref": "#/responses/ErrorAccessAccount",
	"paths./account/places.get.summary": "List Places of the Account",
	"paths./account/places.get.tags.length": 1,
	"paths./account/places.get.tags[0]": "Account",
	"paths./account/places.parameters.length": 0,
	"paths./account/places.post.description": "Create a new *Place*.\n\nA *Device* (`class`: `MINT`, `address`: `0`) is automatically created and attached to the new *Place*.\n\n**Note:** requires full access to the *Account*.\n",
	"paths./account/places.post.operationId": "Account.newPlace",
	"paths./account/places.post.parameters.length": 1,
	"paths./account/places.post.parameters[0].in": "body",
	"paths./account/places.post.parameters[0].name": "place",
	"paths./account/places.post.parameters[0].schema.$ref": "#/definitions/PlaceNew",
	"paths./account/places.post.responses.201.description": "*Place* successfully created.",
	"paths./account/places.post.responses.201.headers.Location.description": "Path of the Place created (`/places/{id}`)",
	"paths./account/places.post.responses.201.headers.Location.type": "string",
	"paths./account/places.post.responses.201.schema.$ref": "#/definitions/PlaceCreated",
	"paths./account/places.post.responses.403.$ref": "#/responses/ErrorAccessAccount",
	"paths./account/places.post.responses.default.$ref": "#/responses/DefaultError",
	"paths./account/places.post.summary": "Create a Place",
	"paths./account/places.post.tags.length": 1,
	"paths./account/places.post.tags[0]": "Account",
	"paths./account/tokens.get.description": "List the active *Tokens* on the account.\n\n**Note:** requires full access to the *Account*.\n",
	"paths./account/tokens.get.operationId": "Account.tokens",
	"paths./account/tokens.get.responses.200.description": "Successful.",
	"paths./account/tokens.get.responses.200.schema.items.$ref": "#/definitions/UserTokenItem",
	"paths./account/tokens.get.responses.200.schema.type": "array",
	"paths./account/tokens.get.responses.200.schema.uniqueItems": true,
	"paths./account/tokens.get.responses.403.$ref": "#/responses/ErrorAccessAccount",
	"paths./account/tokens.get.responses.default.$ref": "#/responses/DefaultError",
	"paths./account/tokens.get.summary": "List active Tokens of the Account",
	"paths./account/tokens.get.tags.length": 1,
	"paths./account/tokens.get.tags[0]": "Account",
	"paths./account/tokens.parameters.length": 0,
	"paths./account/tokens/{tokenId}.delete.description": "Revoke the given *Token*.\n\n**Note:** requires full access to the *Account*.\n",
	"paths./account/tokens/{tokenId}.delete.operationId": "Account.revokeToken",
	"paths./account/tokens/{tokenId}.delete.responses.204.$ref": "#/responses/DeleteOK",
	"paths./account/tokens/{tokenId}.delete.responses.403.$ref": "#/responses/ErrorAccessAccount",
	"paths./account/tokens/{tokenId}.delete.responses.default.$ref": "#/responses/DefaultError",
	"paths./account/tokens/{tokenId}.delete.summary": "Revoke a Token",
	"paths./account/tokens/{tokenId}.delete.tags.length": 1,
	"paths./account/tokens/{tokenId}.delete.tags[0]": "Account",
	"paths./account/tokens/{tokenId}.parameters.length": 1,
	"paths./account/tokens/{tokenId}.parameters[0].$ref": "#/parameters/tokenId",
	"paths./account/users.get.description": "Get the list of *Users* of this *Account*.",
	"paths./account/users.get.operationId": "Account.users",
	"paths./account/users.get.parameters.length": 1,
	"paths./account/users.get.parameters[0].$ref": "#/parameters/embedMetadata",
	"paths./account/users.get.responses.200.description": "Successful.",
	"paths./account/users.get.responses.200.schema.items.$ref": "#/definitions/UserItem",
	"paths./account/users.get.responses.200.schema.type": "array",
	"paths./account/users.get.responses.200.schema.uniqueItems": true,
	"paths./account/users.get.summary": "List Users of the Account",
	"paths./account/users.get.tags.length": 1,
	"paths./account/users.get.tags[0]": "Account",
	"paths./account/users.parameters.length": 0,
	"paths./account/users.post.description": "Add a *User*.\n\n**Note**: requires full access to the *Account*.\n",
	"paths./account/users.post.operationId": "Account.newUser",
	"paths./account/users.post.parameters.length": 1,
	"paths./account/users.post.parameters[0].in": "body",
	"paths./account/users.post.parameters[0].name": "userInfo",
	"paths./account/users.post.parameters[0].required": true,
	"paths./account/users.post.parameters[0].schema.$ref": "#/definitions/UserNew",
	"paths./account/users.post.responses.201.description": "*User* successfully created.",
	"paths./account/users.post.responses.201.headers.Location.description": "Path of the User created",
	"paths./account/users.post.responses.201.headers.Location.type": "string",
	"paths./account/users.post.responses.201.schema.$ref": "#/definitions/UserCreated",
	"paths./account/users.post.responses.403.$ref": "#/responses/ErrorAccessAccount",
	"paths./account/users.post.responses.default.$ref": "#/responses/DefaultError",
	"paths./account/users.post.summary": "New User",
	"paths./account/users.post.tags.length": 1,
	"paths./account/users.post.tags[0]": "Account",
	"paths./account/users/{userId}.delete.description": "Delete a *User* from this *Account*, and revoke all his/her *Tokens*.\n\n**Note**: requires full access to the *Account*.\n",
	"paths./account/users/{userId}.delete.operationId": "Account.deleteUser",
	"paths./account/users/{userId}.delete.responses.204.$ref": "#/responses/DeleteOK",
	"paths./account/users/{userId}.delete.responses.403.$ref": "#/responses/ErrorAccessAccount",
	"paths./account/users/{userId}.delete.responses.default.$ref": "#/responses/DefaultError",
	"paths./account/users/{userId}.delete.summary": "Delete a User",
	"paths./account/users/{userId}.delete.tags.length": 1,
	"paths./account/users/{userId}.delete.tags[0]": "Account",
	"paths./account/users/{userId}.get.description": "Get information about a *User* in the same *Account*.",
	"paths./account/users/{userId}.get.operationId": "Account.getUser",
	"paths./account/users/{userId}.get.responses.200.description": "*User* information.\n",
	"paths./account/users/{userId}.get.responses.200.schema.$ref": "#/definitions/User",
	"paths./account/users/{userId}.get.responses.default.$ref": "#/responses/DefaultError",
	"paths./account/users/{userId}.get.summary": "Information about a User",
	"paths./account/users/{userId}.get.tags.length": 1,
	"paths./account/users/{userId}.get.tags[0]": "Account",
	"paths./account/users/{userId}.parameters.length": 1,
	"paths./account/users/{userId}.parameters[0].$ref": "#/parameters/userId",
	"paths./account/users/{userId}.patch.description": "Modify a *User*.\n\n**Note**: requires full access to the *Account*.\n",
	"paths./account/users/{userId}.patch.operationId": "Account.patchUser",
	"paths./account/users/{userId}.patch.parameters.length": 1,
	"paths./account/users/{userId}.patch.parameters[0].in": "body",
	"paths./account/users/{userId}.patch.parameters[0].name": "userPatch",
	"paths./account/users/{userId}.patch.parameters[0].required": true,
	"paths./account/users/{userId}.patch.parameters[0].schema.$ref": "#/definitions/UserPatch",
	"paths./account/users/{userId}.patch.responses.204.$ref": "#/responses/PatchOK",
	"paths./account/users/{userId}.patch.responses.304.$ref": "#/responses/PatchNotModified",
	"paths./account/users/{userId}.patch.responses.403.$ref": "#/responses/ErrorAccessAccount",
	"paths./account/users/{userId}.patch.responses.default.$ref": "#/responses/DefaultError",
	"paths./account/users/{userId}.patch.summary": "Modify a User",
	"paths./account/users/{userId}.patch.tags.length": 1,
	"paths./account/users/{userId}.patch.tags[0]": "Account",
	"paths./account/users/{userId}/metadata.get.description": "Get the metadata.",
	"paths./account/users/{userId}/metadata.get.operationId": "User.getMetadata",
	"paths./account/users/{userId}/metadata.get.responses.200.description": "Successful.",
	"paths./account/users/{userId}/metadata.get.responses.200.schema.$ref": "#/definitions/Metadata",
	"paths./account/users/{userId}/metadata.get.responses.default.$ref": "#/responses/DefaultError",
	"paths./account/users/{userId}/metadata.get.summary": "List metadata",
	"paths./account/users/{userId}/metadata.get.tags.length": 1,
	"paths./account/users/{userId}/metadata.get.tags[0]": "Account",
	"paths./account/users/{userId}/metadata.parameters.length": 1,
	"paths./account/users/{userId}/metadata.parameters[0].$ref": "#/parameters/userId",
	"paths./account/users/{userId}/metadata.patch.description": "Modify the metadata.\nKeys are limited to the same format as tags (up to 21 characters, [a-z0-9], starting with [a-z]). Values can be any JSON value.\n",
	"paths./account/users/{userId}/metadata.patch.operationId": "User.patchMetadata",
	"paths./account/users/{userId}/metadata.patch.parameters.length": 1,
	"paths./account/users/{userId}/metadata.patch.parameters[0].$ref": "#/parameters/metadataPatch",
	"paths./account/users/{userId}/metadata.patch.responses.200.description": "Successful. The new metadata is returned.",
	"paths./account/users/{userId}/metadata.patch.responses.200.schema.$ref": "#/definitions/Metadata",
	"paths./account/users/{userId}/metadata.patch.responses.304.$ref": "#/responses/PatchNotModified",
	"paths./account/users/{userId}/metadata.patch.responses.403.$ref": "#/responses/ErrorAccessUser",
	"paths./account/users/{userId}/metadata.patch.responses.default.$ref": "#/responses/DefaultError",
	"paths./account/users/{userId}/metadata.patch.summary": "Modify metadata",
	"paths./account/users/{userId}/metadata.patch.tags.length": 1,
	"paths./account/users/{userId}/metadata.patch.tags[0]": "Account",
	"paths./auth/login.post.description": "Get an access+refresh tokens pair from login and password information.\n\nThe *access token* obtained with this request can then be used in\nan `Access-Token` HTTP header or in a `token` URL query parameter\nin requests that require authentication.\n\nThe *refresh token* can be used with `/auth/refresh` when the *access\ntoken* expires to retrieve a new *access token*. The lifetime of the\nrefresh token is the maximum lifetime of this authentication request.\n\nThe default lifetime of the *refresh token* is defined by the `appId`\nused. The `ttl` input parameter allows to request a *refresh token*\nwith a shorter lifetime.\n\nTo implement *logout*, use `/auth/revoke`.\n",
	"paths./auth/login.post.operationId": "AuthAccountLogin",
	"paths./auth/login.post.parameters.length": 1,
	"paths./auth/login.post.parameters[0].description": "Login information.",
	"paths./auth/login.post.parameters[0].in": "body",
	"paths./auth/login.post.parameters[0].name": "loginInfo",
	"paths./auth/login.post.parameters[0].required": true,
	"paths./auth/login.post.parameters[0].schema.$ref": "#/definitions/AuthLogin",
	"paths./auth/login.post.responses.200.description": "Login successful. The access token is given to use the API. The refresh token must be stored in a safe place.",
	"paths./auth/login.post.responses.200.schema.$ref": "#/definitions/AuthTokens",
	"paths./auth/login.post.responses.401.description": "Authentication failure.",
	"paths./auth/login.post.responses.401.schema.$ref": "#/definitions/DefaultError",
	"paths./auth/login.post.responses.default.$ref": "#/responses/DefaultError",
	"paths./auth/login.post.security.length": 0,
	"paths./auth/login.post.summary": "Get a token using login+password",
	"paths./auth/login.post.tags.length": 2,
	"paths./auth/login.post.tags[0]": "Authentication",
	"paths./auth/login.post.tags[1]": "Entry points",
	"paths./auth/refresh.post.description": "Get a new *access token* using a valid *refresh token*.\n\nThis is a **replacement** of the *access token*: if an existing *access\ntoken* was still not expired, it is invalidated.\n",
	"paths./auth/refresh.post.operationId": "AuthRefreshToken",
	"paths./auth/refresh.post.parameters.length": 1,
	"paths./auth/refresh.post.parameters[0].description": "Refresh token information.",
	"paths./auth/refresh.post.parameters[0].in": "body",
	"paths./auth/refresh.post.parameters[0].name": "refreshInfo",
	"paths./auth/refresh.post.parameters[0].required": true,
	"paths./auth/refresh.post.parameters[0].schema.$ref": "#/definitions/AuthRefresh",
	"paths./auth/refresh.post.responses.200.description": "Refresh successful. A new access token is given to use the API.",
	"paths./auth/refresh.post.responses.200.schema.$ref": "#/definitions/AuthTokens",
	"paths./auth/refresh.post.responses.401.description": "Authentication failure.",
	"paths./auth/refresh.post.responses.401.schema.$ref": "#/definitions/DefaultError",
	"paths./auth/refresh.post.responses.default.$ref": "#/responses/DefaultError",
	"paths./auth/refresh.post.security.length": 0,
	"paths./auth/refresh.post.summary": "Refresh a token",
	"paths./auth/refresh.post.tags.length": 1,
	"paths./auth/refresh.post.tags[0]": "Authentication",
	"paths./auth/reset-password.post.description": "Trigger the request of a new password.\n\nThe account administrator will receive an e-mail with an URL pointing to a form\nto allow him/her to enter a new password.\nThe old password is still functional until a new one is submitted.\n\nEither the login or e-mail of the account must be given.\n",
	"paths./auth/reset-password.post.operationId": "AuthResetPassword",
	"paths./auth/reset-password.post.parameters.length": 1,
	"paths./auth/reset-password.post.parameters[0].description": "Account identification information",
	"paths./auth/reset-password.post.parameters[0].in": "body",
	"paths./auth/reset-password.post.parameters[0].name": "resetPasswordInfo",
	"paths./auth/reset-password.post.parameters[0].required": true,
	"paths./auth/reset-password.post.parameters[0].schema.$ref": "#/definitions/AuthResetPassword",
	"paths./auth/reset-password.post.responses.204.description": "As this request is not authenticated, response is always successful to not reveal (in)existence of accounts.",
	"paths./auth/reset-password.post.responses.default.$ref": "#/responses/DefaultError",
	"paths./auth/reset-password.post.security.length": 0,
	"paths./auth/reset-password.post.summary": "Ask for a new password",
	"paths./auth/reset-password.post.tags.length": 1,
	"paths./auth/reset-password.post.tags[0]": "Authentication",
	"paths./auth/revoke.post.description": "Invalidate the authentication used for the request. The access token and the refresh token will be invalid after this request.\nThis request is typically called to implement logout.\n",
	"paths./auth/revoke.post.operationId": "AuthRevokeToken",
	"paths./auth/revoke.post.responses.204.description": "Revocation successful. The token used for the request is now invalid.",
	"paths./auth/revoke.post.responses.401.description": "Authentication failure.",
	"paths./auth/revoke.post.responses.401.schema.$ref": "#/definitions/DefaultError",
	"paths./auth/revoke.post.responses.default.$ref": "#/responses/DefaultError",
	"paths./auth/revoke.post.summary": "Revoke a token",
	"paths./auth/revoke.post.tags.length": 1,
	"paths./auth/revoke.post.tags[0]": "Authentication",
	"paths./devices/{deviceId}.get.description": "Get information about a *Device*.",
	"paths./devices/{deviceId}.get.operationId": "Devices.get",
	"paths./devices/{deviceId}.get.responses.200.description": "Successful.",
	"paths./devices/{deviceId}.get.responses.200.schema.$ref": "#/definitions/Device",
	"paths./devices/{deviceId}.get.responses.default.$ref": "#/responses/DefaultError",
	"paths./devices/{deviceId}.get.summary": "Information about a Device",
	"paths./devices/{deviceId}.get.tags.length": 1,
	"paths./devices/{deviceId}.get.tags[0]": "Device",
	"paths./devices/{deviceId}.parameters.length": 1,
	"paths./devices/{deviceId}.parameters[0].$ref": "#/parameters/deviceId",
	"paths./devices/{deviceId}.patch.description": "Modify information about a *Device*: its name.\n",
	"paths./devices/{deviceId}.patch.operationId": "Devices.patch",
	"paths./devices/{deviceId}.patch.parameters.length": 1,
	"paths./devices/{deviceId}.patch.parameters[0].in": "body",
	"paths./devices/{deviceId}.patch.parameters[0].name": "devicePatch",
	"paths./devices/{deviceId}.patch.parameters[0].required": true,
	"paths./devices/{deviceId}.patch.parameters[0].schema.$ref": "#/definitions/DevicePatch",
	"paths./devices/{deviceId}.patch.responses.204.$ref": "#/responses/PatchOK",
	"paths./devices/{deviceId}.patch.responses.304.$ref": "#/responses/PatchNotModified",
	"paths./devices/{deviceId}.patch.responses.403.$ref": "#/responses/ErrorAccessDevice",
	"paths./devices/{deviceId}.patch.responses.default.$ref": "#/responses/DefaultError",
	"paths./devices/{deviceId}.patch.summary": "Update a Device",
	"paths./devices/{deviceId}.patch.tags.length": 1,
	"paths./devices/{deviceId}.patch.tags[0]": "Device",
	"paths./devices/{deviceId}/functionalities.post.description": "Add a *Functionality* to the device.\n\nRequired parameters are :\n- functionality class\n- endpoint\n\nEach device class has its own restrictions on which Functionality classes can be added and on which endpoints.\nOnly a few devices allow to add Functionalities.\n\n|Device class|Functionality class|Endpoints|\n|------------|-------------------|---------|\n|MINT        |CurrentPeriod      |1,2,3    |\n|MINT        |ElectricityRates   |1,2,3    |\n|MINT        |GenericRate        |1,2,3    |\n\n**Note**: requires full access to the *Account*.\n",
	"paths./devices/{deviceId}/functionalities.post.operationId": "Device.addFunctionality",
	"paths./devices/{deviceId}/functionalities.post.parameters.length": 2,
	"paths./devices/{deviceId}/functionalities.post.parameters[0].$ref": "#/parameters/deviceId",
	"paths./devices/{deviceId}/functionalities.post.parameters[1].in": "body",
	"paths./devices/{deviceId}/functionalities.post.parameters[1].name": "functionalityInfo",
	"paths./devices/{deviceId}/functionalities.post.parameters[1].required": true,
	"paths./devices/{deviceId}/functionalities.post.parameters[1].schema.$ref": "#/definitions/FunctionalityNew",
	"paths./devices/{deviceId}/functionalities.post.responses.201.description": "*Functionality* successfully created.",
	"paths./devices/{deviceId}/functionalities.post.responses.201.headers.Location.description": "Path of the Functionality created",
	"paths./devices/{deviceId}/functionalities.post.responses.201.headers.Location.type": "string",
	"paths./devices/{deviceId}/functionalities.post.responses.201.schema.$ref": "#/definitions/FunctionalityCreated",
	"paths./devices/{deviceId}/functionalities.post.responses.403.$ref": "#/responses/ErrorAccessDevice",
	"paths./devices/{deviceId}/functionalities.post.responses.default.$ref": "#/responses/DefaultError",
	"paths./devices/{deviceId}/functionalities.post.summary": "Add dynamically a functionality",
	"paths./devices/{deviceId}/functionalities.post.tags.length": 2,
	"paths./devices/{deviceId}/functionalities.post.tags[0]": "Device",
	"paths./devices/{deviceId}/functionalities.post.tags[1]": "Functionality",
	"paths./devices/{deviceId}/metadata.get.description": "Get the metadata.",
	"paths./devices/{deviceId}/metadata.get.operationId": "Device.getMetadata",
	"paths./devices/{deviceId}/metadata.get.responses.200.description": "Successful.",
	"paths./devices/{deviceId}/metadata.get.responses.200.schema.$ref": "#/definitions/Metadata",
	"paths./devices/{deviceId}/metadata.get.responses.default.$ref": "#/responses/DefaultError",
	"paths./devices/{deviceId}/metadata.get.summary": "List metadata",
	"paths./devices/{deviceId}/metadata.get.tags.length": 1,
	"paths./devices/{deviceId}/metadata.get.tags[0]": "Device",
	"paths./devices/{deviceId}/metadata.parameters.length": 1,
	"paths./devices/{deviceId}/metadata.parameters[0].$ref": "#/parameters/deviceId",
	"paths./devices/{deviceId}/metadata.patch.description": "Modify the metadata.\nKeys are limited to the same format as tags (up to 21 characters, [a-z0-9], starting with [a-z]). Values can be any JSON value.\n",
	"paths./devices/{deviceId}/metadata.patch.operationId": "Device.patchMetadata",
	"paths./devices/{deviceId}/metadata.patch.parameters.length": 1,
	"paths./devices/{deviceId}/metadata.patch.parameters[0].$ref": "#/parameters/metadataPatch",
	"paths./devices/{deviceId}/metadata.patch.responses.200.description": "Successful. The new metadata is returned.",
	"paths./devices/{deviceId}/metadata.patch.responses.200.schema.$ref": "#/definitions/Metadata",
	"paths./devices/{deviceId}/metadata.patch.responses.304.$ref": "#/responses/PatchNotModified",
	"paths./devices/{deviceId}/metadata.patch.responses.403.$ref": "#/responses/ErrorAccessDevice",
	"paths./devices/{deviceId}/metadata.patch.responses.default.$ref": "#/responses/DefaultError",
	"paths./devices/{deviceId}/metadata.patch.summary": "Modify metadata",
	"paths./devices/{deviceId}/metadata.patch.tags.length": 1,
	"paths./devices/{deviceId}/metadata.patch.tags[0]": "Device",
	"paths./devices/{deviceId}/run/{action}.post.description": "Run an *Action* on zero, one or multiple Functionalities selected with tags.\n",
	"paths./devices/{deviceId}/run/{action}.post.operationId": "Device.run",
	"paths./devices/{deviceId}/run/{action}.post.parameters.length": 4,
	"paths./devices/{deviceId}/run/{action}.post.parameters[0].$ref": "#/parameters/deviceId",
	"paths./devices/{deviceId}/run/{action}.post.parameters[1].$ref": "#/parameters/action",
	"paths./devices/{deviceId}/run/{action}.post.parameters[2].$ref": "#/parameters/functionalitiesSelector.Req",
	"paths./devices/{deviceId}/run/{action}.post.parameters[3].in": "body",
	"paths./devices/{deviceId}/run/{action}.post.parameters[3].name": "arguments",
	"paths./devices/{deviceId}/run/{action}.post.parameters[3].required": true,
	"paths./devices/{deviceId}/run/{action}.post.parameters[3].schema.$ref": "#/definitions/ActionArgs",
	"paths./devices/{deviceId}/run/{action}.post.responses.200.$ref": "#/responses/ActionMultiResultOK",
	"paths./devices/{deviceId}/run/{action}.post.responses.450.$ref": "#/responses/ErrorGatewayUnreachable",
	"paths./devices/{deviceId}/run/{action}.post.responses.default.$ref": "#/responses/DefaultError",
	"paths./devices/{deviceId}/run/{action}.post.summary": "Run actions",
	"paths./devices/{deviceId}/run/{action}.post.tags.length": 1,
	"paths./devices/{deviceId}/run/{action}.post.tags[0]": "Action",
	"paths./devices/{deviceId}/tags.get.description": "Get the tags of a *Device*.",
	"paths./devices/{deviceId}/tags.get.operationId": "Device.getTags",
	"paths./devices/{deviceId}/tags.get.responses.200.description": "Successful.",
	"paths./devices/{deviceId}/tags.get.responses.200.schema.$ref": "#/definitions/Tags",
	"paths./devices/{deviceId}/tags.get.responses.default.$ref": "#/responses/DefaultError",
	"paths./devices/{deviceId}/tags.get.summary": "List tags",
	"paths./devices/{deviceId}/tags.get.tags.length": 1,
	"paths./devices/{deviceId}/tags.get.tags[0]": "Device",
	"paths./devices/{deviceId}/tags.parameters.length": 1,
	"paths./devices/{deviceId}/tags.parameters[0].$ref": "#/parameters/deviceId",
	"paths./devices/{deviceId}/tags.patch.description": "Modify the tags of a *Device*.",
	"paths./devices/{deviceId}/tags.patch.operationId": "Device.patchTags",
	"paths./devices/{deviceId}/tags.patch.parameters.length": 1,
	"paths./devices/{deviceId}/tags.patch.parameters[0].$ref": "#/parameters/tagsPatch",
	"paths./devices/{deviceId}/tags.patch.responses.200.description": "Successful. The new list of tags is returned.",
	"paths./devices/{deviceId}/tags.patch.responses.200.schema.$ref": "#/definitions/Tags",
	"paths./devices/{deviceId}/tags.patch.responses.304.$ref": "#/responses/PatchNotModified",
	"paths./devices/{deviceId}/tags.patch.responses.403.$ref": "#/responses/ErrorAccessDevice",
	"paths./devices/{deviceId}/tags.patch.responses.default.$ref": "#/responses/DefaultError",
	"paths./devices/{deviceId}/tags.patch.summary": "Modify tags",
	"paths./devices/{deviceId}/tags.patch.tags.length": 1,
	"paths./devices/{deviceId}/tags.patch.tags[0]": "Device",
	"paths./functionalities/{functionalityId}.get.description": "Get the *Functionality*.",
	"paths./functionalities/{functionalityId}.get.operationId": "Functionalities.get",
	"paths./functionalities/{functionalityId}.get.responses.200.description": "Successful.",
	"paths./functionalities/{functionalityId}.get.responses.200.schema.$ref": "#/definitions/Functionality",
	"paths./functionalities/{functionalityId}.get.responses.default.$ref": "#/responses/DefaultError",
	"paths./functionalities/{functionalityId}.get.summary": "Information about a Functionality",
	"paths./functionalities/{functionalityId}.get.tags.length": 1,
	"paths./functionalities/{functionalityId}.get.tags[0]": "Functionality",
	"paths./functionalities/{functionalityId}.parameters.length": 1,
	"paths./functionalities/{functionalityId}.parameters[0].$ref": "#/parameters/functionalityId",
	"paths./functionalities/{functionalityId}.patch.description": "Modify information about a *Functionality*: its name.\n",
	"paths./functionalities/{functionalityId}.patch.operationId": "Functionality.patch",
	"paths./functionalities/{functionalityId}.patch.parameters.length": 1,
	"paths./functionalities/{functionalityId}.patch.parameters[0].in": "body",
	"paths./functionalities/{functionalityId}.patch.parameters[0].name": "functionalityPatch",
	"paths./functionalities/{functionalityId}.patch.parameters[0].required": true,
	"paths./functionalities/{functionalityId}.patch.parameters[0].schema.$ref": "#/definitions/FunctionalityPatch",
	"paths./functionalities/{functionalityId}.patch.responses.204.$ref": "#/responses/PatchOK",
	"paths./functionalities/{functionalityId}.patch.responses.304.$ref": "#/responses/PatchNotModified",
	"paths./functionalities/{functionalityId}.patch.responses.403.$ref": "#/responses/ErrorAccessFunctionality",
	"paths./functionalities/{functionalityId}.patch.responses.default.$ref": "#/responses/DefaultError",
	"paths./functionalities/{functionalityId}.patch.summary": "Modify a Functionality",
	"paths./functionalities/{functionalityId}.patch.tags.length": 1,
	"paths./functionalities/{functionalityId}.patch.tags[0]": "Functionality",
	"paths./functionalities/{functionalityId}/attributes.get.description": "Get the values of multiple *Attributes* and their history.\n\nIf the `names` parameter is not given, all the attributes of the *Functionality*\nare returned. As the list may be huge, this must be avoided.\n\nIf the `to` parameter is set, `from` must also be set.\n\nIf `from` is not set, only the last value is returned.\n\nThe `surround` parameter allows to ask also for one value beyond each interval boundaries.\n\nThe request may fail if too many values are asked.\n",
	"paths./functionalities/{functionalityId}/attributes.get.operationId": "Functionality.values",
	"paths./functionalities/{functionalityId}/attributes.get.parameters.length": 4,
	"paths./functionalities/{functionalityId}/attributes.get.parameters[0].$ref": "#/parameters/attributesNames",
	"paths./functionalities/{functionalityId}/attributes.get.parameters[1].$ref": "#/parameters/from.Opt",
	"paths./functionalities/{functionalityId}/attributes.get.parameters[2].$ref": "#/parameters/to",
	"paths./functionalities/{functionalityId}/attributes.get.parameters[3].description": "If true, return also one value before from and one value after to",
	"paths./functionalities/{functionalityId}/attributes.get.parameters[3].in": "query",
	"paths./functionalities/{functionalityId}/attributes.get.parameters[3].name": "surround",
	"paths./functionalities/{functionalityId}/attributes.get.parameters[3].required": false,
	"paths./functionalities/{functionalityId}/attributes.get.parameters[3].type": "boolean",
	"paths./functionalities/{functionalityId}/attributes.get.responses.200.description": "Successful.",
	"paths./functionalities/{functionalityId}/attributes.get.responses.200.schema.$ref": "#/definitions/AttributesValues",
	"paths./functionalities/{functionalityId}/attributes.get.responses.default.$ref": "#/responses/DefaultError",
	"paths./functionalities/{functionalityId}/attributes.get.summary": "Get history of multiple attributes",
	"paths./functionalities/{functionalityId}/attributes.get.tags.length": 1,
	"paths./functionalities/{functionalityId}/attributes.get.tags[0]": "Functionality",
	"paths./functionalities/{functionalityId}/attributes.parameters.length": 1,
	"paths./functionalities/{functionalityId}/attributes.parameters[0].$ref": "#/parameters/functionalityId",
	"paths./functionalities/{functionalityId}/attributes/{attributeName}.get.description": "Get the *Attribute* value and the last time when it changed.",
	"paths./functionalities/{functionalityId}/attributes/{attributeName}.get.operationId": "Functionality.value",
	"paths./functionalities/{functionalityId}/attributes/{attributeName}.get.responses.200.description": "Successful.",
	"paths./functionalities/{functionalityId}/attributes/{attributeName}.get.responses.200.schema.$ref": "#/definitions/AttributeValue",
	"paths./functionalities/{functionalityId}/attributes/{attributeName}.get.responses.204.description": "No value has yet been set on this attribute.",
	"paths./functionalities/{functionalityId}/attributes/{attributeName}.get.responses.default.$ref": "#/responses/DefaultError",
	"paths./functionalities/{functionalityId}/attributes/{attributeName}.get.summary": "Get an Attribute value",
	"paths./functionalities/{functionalityId}/attributes/{attributeName}.get.tags.length": 1,
	"paths./functionalities/{functionalityId}/attributes/{attributeName}.get.tags[0]": "Functionality",
	"paths./functionalities/{functionalityId}/attributes/{attributeName}.parameters.length": 2,
	"paths./functionalities/{functionalityId}/attributes/{attributeName}.parameters[0].$ref": "#/parameters/functionalityId",
	"paths./functionalities/{functionalityId}/attributes/{attributeName}.parameters[1].$ref": "#/parameters/attributeName",
	"paths./functionalities/{functionalityId}/attributes/{attributeName}.put.description": "Modify the value of the *Attribute*.",
	"paths./functionalities/{functionalityId}/attributes/{attributeName}.put.operationId": "Functionality.set",
	"paths./functionalities/{functionalityId}/attributes/{attributeName}.put.parameters.length": 1,
	"paths./functionalities/{functionalityId}/attributes/{attributeName}.put.parameters[0].description": "New value for the *Attribute*.",
	"paths./functionalities/{functionalityId}/attributes/{attributeName}.put.parameters[0].in": "body",
	"paths./functionalities/{functionalityId}/attributes/{attributeName}.put.parameters[0].name": "value",
	"paths./functionalities/{functionalityId}/attributes/{attributeName}.put.parameters[0].required": true,
	"paths./functionalities/{functionalityId}/attributes/{attributeName}.put.parameters[0].schema.$ref": "#/definitions/AnyJSON",
	"paths./functionalities/{functionalityId}/attributes/{attributeName}.put.responses.204.description": "Successful.",
	"paths./functionalities/{functionalityId}/attributes/{attributeName}.put.responses.405.$ref": "#/responses/ErrorWriteAttribute",
	"paths./functionalities/{functionalityId}/attributes/{attributeName}.put.responses.default.$ref": "#/responses/DefaultError",
	"paths./functionalities/{functionalityId}/attributes/{attributeName}.put.summary": "Modify an Attribute value",
	"paths./functionalities/{functionalityId}/attributes/{attributeName}.put.tags.length": 1,
	"paths./functionalities/{functionalityId}/attributes/{attributeName}.put.tags[0]": "Functionality",
	"paths./functionalities/{functionalityId}/metadata.get.description": "Get the metadata.",
	"paths./functionalities/{functionalityId}/metadata.get.operationId": "Functionality.getMetadata",
	"paths./functionalities/{functionalityId}/metadata.get.responses.200.description": "Successful.",
	"paths./functionalities/{functionalityId}/metadata.get.responses.200.schema.$ref": "#/definitions/Metadata",
	"paths./functionalities/{functionalityId}/metadata.get.responses.default.$ref": "#/responses/DefaultError",
	"paths./functionalities/{functionalityId}/metadata.get.summary": "List metadata",
	"paths./functionalities/{functionalityId}/metadata.get.tags.length": 1,
	"paths./functionalities/{functionalityId}/metadata.get.tags[0]": "Functionality",
	"paths./functionalities/{functionalityId}/metadata.parameters.length": 1,
	"paths./functionalities/{functionalityId}/metadata.parameters[0].$ref": "#/parameters/functionalityId",
	"paths./functionalities/{functionalityId}/metadata.patch.description": "Modify the metadata.\nKeys are limited to the same format as tags (up to 21 characters, [a-z0-9], starting with [a-z]). Values can be any JSON value.\n",
	"paths./functionalities/{functionalityId}/metadata.patch.operationId": "Functionality.patchMetadata",
	"paths./functionalities/{functionalityId}/metadata.patch.parameters.length": 1,
	"paths./functionalities/{functionalityId}/metadata.patch.parameters[0].$ref": "#/parameters/metadataPatch",
	"paths./functionalities/{functionalityId}/metadata.patch.responses.200.description": "Successful. The new metadata is returned.",
	"paths./functionalities/{functionalityId}/metadata.patch.responses.200.schema.$ref": "#/definitions/Metadata",
	"paths./functionalities/{functionalityId}/metadata.patch.responses.304.$ref": "#/responses/PatchNotModified",
	"paths./functionalities/{functionalityId}/metadata.patch.responses.403.$ref": "#/responses/ErrorAccessFunctionality",
	"paths./functionalities/{functionalityId}/metadata.patch.responses.default.$ref": "#/responses/DefaultError",
	"paths./functionalities/{functionalityId}/metadata.patch.summary": "Modify metadata",
	"paths./functionalities/{functionalityId}/metadata.patch.tags.length": 1,
	"paths./functionalities/{functionalityId}/metadata.patch.tags[0]": "Functionality",
	"paths./functionalities/{functionalityId}/run/{action}.post.description": "Run an action on the Functionality.\n",
	"paths./functionalities/{functionalityId}/run/{action}.post.operationId": "Functionality.run",
	"paths./functionalities/{functionalityId}/run/{action}.post.parameters.length": 3,
	"paths./functionalities/{functionalityId}/run/{action}.post.parameters[0].$ref": "#/parameters/functionalityId",
	"paths./functionalities/{functionalityId}/run/{action}.post.parameters[1].$ref": "#/parameters/action",
	"paths./functionalities/{functionalityId}/run/{action}.post.parameters[2].in": "body",
	"paths./functionalities/{functionalityId}/run/{action}.post.parameters[2].name": "arguments",
	"paths./functionalities/{functionalityId}/run/{action}.post.parameters[2].required": true,
	"paths./functionalities/{functionalityId}/run/{action}.post.parameters[2].schema.$ref": "#/definitions/ActionArgs",
	"paths./functionalities/{functionalityId}/run/{action}.post.responses.200.description": "Successful.",
	"paths./functionalities/{functionalityId}/run/{action}.post.responses.200.schema.$ref": "#/definitions/ActionResult",
	"paths./functionalities/{functionalityId}/run/{action}.post.responses.450.$ref": "#/responses/ErrorGatewayUnreachable",
	"paths./functionalities/{functionalityId}/run/{action}.post.responses.default.$ref": "#/responses/DefaultError",
	"paths./functionalities/{functionalityId}/run/{action}.post.summary": "Run an action",
	"paths./functionalities/{functionalityId}/run/{action}.post.tags.length": 1,
	"paths./functionalities/{functionalityId}/run/{action}.post.tags[0]": "Action",
	"paths./functionalities/{functionalityId}/tags.get.description": "Get the tags of a *Functionality*.",
	"paths./functionalities/{functionalityId}/tags.get.operationId": "Functionality.getTags",
	"paths./functionalities/{functionalityId}/tags.get.responses.200.description": "Successful.",
	"paths./functionalities/{functionalityId}/tags.get.responses.200.schema.$ref": "#/definitions/Tags",
	"paths./functionalities/{functionalityId}/tags.get.responses.default.$ref": "#/responses/DefaultError",
	"paths./functionalities/{functionalityId}/tags.get.summary": "List tags",
	"paths./functionalities/{functionalityId}/tags.get.tags.length": 1,
	"paths./functionalities/{functionalityId}/tags.get.tags[0]": "Functionality",
	"paths./functionalities/{functionalityId}/tags.parameters.length": 1,
	"paths./functionalities/{functionalityId}/tags.parameters[0].$ref": "#/parameters/functionalityId",
	"paths./functionalities/{functionalityId}/tags.patch.description": "Modify the tags of a *Functionality*.",
	"paths./functionalities/{functionalityId}/tags.patch.operationId": "Functionality.patchTags",
	"paths./functionalities/{functionalityId}/tags.patch.parameters.length": 1,
	"paths./functionalities/{functionalityId}/tags.patch.parameters[0].$ref": "#/parameters/tagsPatch",
	"paths./functionalities/{functionalityId}/tags.patch.responses.200.description": "Successful. The new list of tags is returned.",
	"paths./functionalities/{functionalityId}/tags.patch.responses.200.schema.$ref": "#/definitions/Tags",
	"paths./functionalities/{functionalityId}/tags.patch.responses.304.$ref": "#/responses/PatchNotModified",
	"paths./functionalities/{functionalityId}/tags.patch.responses.403.$ref": "#/responses/ErrorAccessFunctionality",
	"paths./functionalities/{functionalityId}/tags.patch.responses.default.$ref": "#/responses/DefaultError",
	"paths./functionalities/{functionalityId}/tags.patch.summary": "Modify tags",
	"paths./functionalities/{functionalityId}/tags.patch.tags.length": 1,
	"paths./functionalities/{functionalityId}/tags.patch.tags[0]": "Functionality",
	"paths./me.get.description": "Get information on the authenticated *User* who does the request.\n\nThe *login* property is returned only if the *User* is the administrator of\nthe *Account*.\n",
	"paths./me.get.operationId": "Me.get",
	"paths./me.get.responses.200.description": "Successful response",
	"paths./me.get.responses.200.schema.$ref": "#/definitions/UserMe",
	"paths./me.get.summary": "Information about the User",
	"paths./me.get.tags.length": 1,
	"paths./me.get.tags[0]": "Entry points",
	"paths./me.patch.description": "Update *User* information (locale).\n",
	"paths./me.patch.operationId": "Me.patch",
	"paths./me.patch.parameters.length": 1,
	"paths./me.patch.parameters[0].description": "Updated user info.",
	"paths./me.patch.parameters[0].in": "body",
	"paths./me.patch.parameters[0].name": "userPatch",
	"paths./me.patch.parameters[0].required": true,
	"paths./me.patch.parameters[0].schema.$ref": "#/definitions/UserMePatch",
	"paths./me.patch.responses.204.$ref": "#/responses/PatchOK",
	"paths./me.patch.responses.304.$ref": "#/responses/PatchNotModified",
	"paths./me.patch.responses.default.$ref": "#/responses/DefaultError",
	"paths./me.patch.summary": "Update User information",
	"paths./me.patch.tags.length": 1,
	"paths./me.patch.tags[0]": "Entry points",
	"paths./notifications/{notificationId}.delete.description": "Delete a *Notification*.\n",
	"paths./notifications/{notificationId}.delete.operationId": "Notification.delete",
	"paths./notifications/{notificationId}.delete.responses.204.$ref": "#/responses/DeleteOK",
	"paths./notifications/{notificationId}.delete.responses.403.$ref": "#/responses/ErrorAccessNotification",
	"paths./notifications/{notificationId}.delete.responses.default.$ref": "#/responses/DefaultError",
	"paths./notifications/{notificationId}.delete.summary": "Delete a Notification",
	"paths./notifications/{notificationId}.delete.tags.length": 1,
	"paths./notifications/{notificationId}.delete.tags[0]": "Notification",
	"paths./notifications/{notificationId}.get.description": "Get information about a *Notification*.\n",
	"paths./notifications/{notificationId}.get.operationId": "Notifications.get",
	"paths./notifications/{notificationId}.get.responses.200.description": "Successful.",
	"paths./notifications/{notificationId}.get.responses.200.schema.$ref": "#/definitions/Notification",
	"paths./notifications/{notificationId}.get.responses.403.$ref": "#/responses/ErrorAccessNotification",
	"paths./notifications/{notificationId}.get.responses.default.$ref": "#/responses/DefaultError",
	"paths./notifications/{notificationId}.get.summary": "Information about a Notification",
	"paths./notifications/{notificationId}.get.tags.length": 1,
	"paths./notifications/{notificationId}.get.tags[0]": "Notification",
	"paths./notifications/{notificationId}.parameters.length": 1,
	"paths./notifications/{notificationId}.parameters[0].$ref": "#/parameters/notificationId",
	"paths./notifications/{notificationId}.patch.description": "Modify a *Notification*.\n",
	"paths./notifications/{notificationId}.patch.operationId": "Notification.patch",
	"paths./notifications/{notificationId}.patch.parameters.length": 1,
	"paths./notifications/{notificationId}.patch.parameters[0].in": "body",
	"paths./notifications/{notificationId}.patch.parameters[0].name": "notificationPatch",
	"paths./notifications/{notificationId}.patch.parameters[0].required": true,
	"paths./notifications/{notificationId}.patch.parameters[0].schema.$ref": "#/definitions/NotificationPatch",
	"paths./notifications/{notificationId}.patch.responses.204.$ref": "#/responses/PatchOK",
	"paths./notifications/{notificationId}.patch.responses.304.$ref": "#/responses/PatchNotModified",
	"paths./notifications/{notificationId}.patch.responses.403.$ref": "#/responses/ErrorAccessNotification",
	"paths./notifications/{notificationId}.patch.responses.default.$ref": "#/responses/DefaultError",
	"paths./notifications/{notificationId}.patch.summary": "Modify a Notification",
	"paths./notifications/{notificationId}.patch.tags.length": 1,
	"paths./notifications/{notificationId}.patch.tags[0]": "Notification",
	"paths./notifications/{notificationId}/metadata.get.description": "Get the metadata of the *Notification*.",
	"paths./notifications/{notificationId}/metadata.get.operationId": "Notification.getMetadata",
	"paths./notifications/{notificationId}/metadata.get.responses.200.description": "Successful.",
	"paths./notifications/{notificationId}/metadata.get.responses.200.schema.$ref": "#/definitions/Metadata",
	"paths./notifications/{notificationId}/metadata.get.responses.default.$ref": "#/responses/DefaultError",
	"paths./notifications/{notificationId}/metadata.get.summary": "List metadata",
	"paths./notifications/{notificationId}/metadata.get.tags.length": 1,
	"paths./notifications/{notificationId}/metadata.get.tags[0]": "Notification",
	"paths./notifications/{notificationId}/metadata.parameters.length": 1,
	"paths./notifications/{notificationId}/metadata.parameters[0].$ref": "#/parameters/notificationId",
	"paths./notifications/{notificationId}/metadata.patch.description": "Modify the metadata of a *Notification*.\nKeys are limited to the same format as tags (up to 21 characters, [a-z0-9], starting with [a-z]). Values can be any JSON value.\n",
	"paths./notifications/{notificationId}/metadata.patch.operationId": "Notification.patchMetadata",
	"paths./notifications/{notificationId}/metadata.patch.parameters.length": 1,
	"paths./notifications/{notificationId}/metadata.patch.parameters[0].$ref": "#/parameters/metadataPatch",
	"paths./notifications/{notificationId}/metadata.patch.responses.200.description": "Successful. The new metadata is returned.",
	"paths./notifications/{notificationId}/metadata.patch.responses.200.schema.$ref": "#/definitions/Metadata",
	"paths./notifications/{notificationId}/metadata.patch.responses.304.$ref": "#/responses/PatchNotModified",
	"paths./notifications/{notificationId}/metadata.patch.responses.403.$ref": "#/responses/ErrorAccessNotification",
	"paths./notifications/{notificationId}/metadata.patch.responses.default.$ref": "#/responses/DefaultError",
	"paths./notifications/{notificationId}/metadata.patch.summary": "Modify metadata of a Notification",
	"paths./notifications/{notificationId}/metadata.patch.tags.length": 1,
	"paths./notifications/{notificationId}/metadata.patch.tags[0]": "Notification",
	"paths./places.get.description": "List the *Places* to which the *Token* has access.",
	"paths./places.get.operationId": "Me.places",
	"paths./places.get.parameters.length": 1,
	"paths./places.get.parameters[0].$ref": "#/parameters/embedMetadata",
	"paths./places.get.responses.200.description": "Successful response",
	"paths./places.get.responses.200.schema.items.$ref": "#/definitions/PlaceItem",
	"paths./places.get.responses.200.schema.type": "array",
	"paths./places.get.responses.200.schema.uniqueItems": true,
	"paths./places.get.summary": "List accessible Places",
	"paths./places.get.tags.length": 1,
	"paths./places.get.tags[0]": "Entry points",
	"paths./places/{placeId}.get.description": "Get information about a *Place*.",
	"paths./places/{placeId}.get.operationId": "Places.get",
	"paths./places/{placeId}.get.responses.200.description": "Successful response.",
	"paths./places/{placeId}.get.responses.200.schema.$ref": "#/definitions/Place",
	"paths./places/{placeId}.get.responses.400.$ref": "#/responses/ErrorAccessPlace",
	"paths./places/{placeId}.get.summary": "Information about a Place",
	"paths./places/{placeId}.get.tags.length": 1,
	"paths./places/{placeId}.get.tags[0]": "Place",
	"paths./places/{placeId}.parameters.length": 1,
	"paths./places/{placeId}.parameters[0].$ref": "#/parameters/placeId",
	"paths./places/{placeId}.patch.description": "Change information about a *Place*.\n\n**Note**: requires full access to the *Account*.\n",
	"paths./places/{placeId}.patch.operationId": "Place.patch",
	"paths./places/{placeId}.patch.parameters.length": 1,
	"paths./places/{placeId}.patch.parameters[0].in": "body",
	"paths./places/{placeId}.patch.parameters[0].name": "placePatch",
	"paths./places/{placeId}.patch.parameters[0].required": true,
	"paths./places/{placeId}.patch.parameters[0].schema.$ref": "#/definitions/PlacePatch",
	"paths./places/{placeId}.patch.responses.204.$ref": "#/responses/PatchOK",
	"paths./places/{placeId}.patch.responses.304.$ref": "#/responses/PatchNotModified",
	"paths./places/{placeId}.patch.responses.403.$ref": "#/responses/ErrorAccessAccount",
	"paths./places/{placeId}.patch.responses.default.$ref": "#/responses/DefaultError",
	"paths./places/{placeId}.patch.summary": "Update a Place",
	"paths./places/{placeId}.patch.tags.length": 1,
	"paths./places/{placeId}.patch.tags[0]": "Place",
	"paths./places/{placeId}/buses.get.description": "Get the list of *Buses* available on the gateway of this *Place*.\nIf `withPairing` is `true`, return only buses that allow device pairing (see `/places/{placeId}/buses/{busId}/pairing`).",
	"paths./places/{placeId}/buses.get.operationId": "Place.buses",
	"paths./places/{placeId}/buses.get.parameters.length": 1,
	"paths./places/{placeId}/buses.get.parameters[0].default": false,
	"paths./places/{placeId}/buses.get.parameters[0].description": "Filter out buses that have no pairing window",
	"paths./places/{placeId}/buses.get.parameters[0].in": "query",
	"paths./places/{placeId}/buses.get.parameters[0].name": "withPairing",
	"paths./places/{placeId}/buses.get.parameters[0].required": false,
	"paths./places/{placeId}/buses.get.parameters[0].type": "boolean",
	"paths./places/{placeId}/buses.get.responses.200.description": "Successful.",
	"paths./places/{placeId}/buses.get.responses.200.schema.items.$ref": "#/definitions/BusItem",
	"paths./places/{placeId}/buses.get.responses.200.schema.type": "array",
	"paths./places/{placeId}/buses.get.responses.200.schema.uniqueItems": true,
	"paths./places/{placeId}/buses.get.responses.403.$ref": "#/responses/ErrorAccessBus",
	"paths./places/{placeId}/buses.get.summary": "List Buses",
	"paths./places/{placeId}/buses.get.tags.length": 1,
	"paths./places/{placeId}/buses.get.tags[0]": "Place",
	"paths./places/{placeId}/buses.parameters.length": 1,
	"paths./places/{placeId}/buses.parameters[0].$ref": "#/parameters/placeId",
	"paths./places/{placeId}/buses/{busId}/pairing.get.description": "Get the state of the pairing window of the *Bus*.\n\n**Note**: requires full access to the *Account*.\n",
	"paths./places/{placeId}/buses/{busId}/pairing.get.operationId": "Place.pairing",
	"paths./places/{placeId}/buses/{busId}/pairing.get.responses.200.description": "State information.",
	"paths./places/{placeId}/buses/{busId}/pairing.get.responses.200.schema.$ref": "#/definitions/BusPairing",
	"paths./places/{placeId}/buses/{busId}/pairing.get.responses.403.$ref": "#/responses/ErrorAccessBus",
	"paths./places/{placeId}/buses/{busId}/pairing.get.summary": "State of the pairing window",
	"paths./places/{placeId}/buses/{busId}/pairing.get.tags.length": 1,
	"paths./places/{placeId}/buses/{busId}/pairing.get.tags[0]": "Place",
	"paths./places/{placeId}/buses/{busId}/pairing.parameters.length": 2,
	"paths./places/{placeId}/buses/{busId}/pairing.parameters[0].$ref": "#/parameters/placeId",
	"paths./places/{placeId}/buses/{busId}/pairing.parameters[1].$ref": "#/parameters/busId",
	"paths./places/{placeId}/buses/{busId}/pairing.put.description": "Open/Close the pairing window.\n\n**Note**: requires full access to the *Account*.\n",
	"paths./places/{placeId}/buses/{busId}/pairing.put.operationId": "Place.openPairing",
	"paths./places/{placeId}/buses/{busId}/pairing.put.parameters.length": 1,
	"paths./places/{placeId}/buses/{busId}/pairing.put.parameters[0].in": "body",
	"paths./places/{placeId}/buses/{busId}/pairing.put.parameters[0].name": "pairing",
	"paths./places/{placeId}/buses/{busId}/pairing.put.parameters[0].required": true,
	"paths./places/{placeId}/buses/{busId}/pairing.put.parameters[0].schema.$ref": "#/definitions/BusPairing",
	"paths./places/{placeId}/buses/{busId}/pairing.put.responses.200.description": "State information.",
	"paths./places/{placeId}/buses/{busId}/pairing.put.responses.200.schema.$ref": "#/definitions/BusPairing",
	"paths./places/{placeId}/buses/{busId}/pairing.put.responses.403.$ref": "#/responses/ErrorAccessBus",
	"paths./places/{placeId}/buses/{busId}/pairing.put.responses.default.$ref": "#/responses/DefaultError",
	"paths./places/{placeId}/buses/{busId}/pairing.put.summary": "Open/Close the pairing window",
	"paths./places/{placeId}/buses/{busId}/pairing.put.tags.length": 1,
	"paths./places/{placeId}/buses/{busId}/pairing.put.tags[0]": "Place",
	"paths./places/{placeId}/devices.get.description": "Get the list of *Devices* available in this *Place*.",
	"paths./places/{placeId}/devices.get.operationId": "Place.devices",
	"paths./places/{placeId}/devices.get.parameters.length": 2,
	"paths./places/{placeId}/devices.get.parameters[0].$ref": "#/parameters/devicesSelector.Opt",
	"paths./places/{placeId}/devices.get.parameters[1].$ref": "#/parameters/embedMetadata",
	"paths./places/{placeId}/devices.get.responses.200.description": "Successful.",
	"paths./places/{placeId}/devices.get.responses.200.schema.items.$ref": "#/definitions/DeviceItem",
	"paths./places/{placeId}/devices.get.responses.200.schema.type": "array",
	"paths./places/{placeId}/devices.get.responses.200.schema.uniqueItems": true,
	"paths./places/{placeId}/devices.get.responses.default.$ref": "#/responses/DefaultError",
	"paths./places/{placeId}/devices.get.summary": "List of Devices",
	"paths./places/{placeId}/devices.get.tags.length": 1,
	"paths./places/{placeId}/devices.get.tags[0]": "Device",
	"paths./places/{placeId}/devices.parameters.length": 1,
	"paths./places/{placeId}/devices.parameters[0].$ref": "#/parameters/placeId",
	"paths./places/{placeId}/electricity/autonomy.get.description": "Compute the autonomy rate of the *Place* on a time period.\n\n`autonomy = 1 - (elec_drawn / elec_total_usage)`\n",
	"paths./places/{placeId}/electricity/autonomy.get.operationId": "Place.Electricity.autonomy",
	"paths./places/{placeId}/electricity/autonomy.get.parameters.length": 2,
	"paths./places/{placeId}/electricity/autonomy.get.parameters[0].$ref": "#/parameters/when.Req",
	"paths./places/{placeId}/electricity/autonomy.get.parameters[1].$ref": "#/parameters/span.Req",
	"paths./places/{placeId}/electricity/autonomy.get.responses.200.description": "Successful.",
	"paths./places/{placeId}/electricity/autonomy.get.responses.200.schema.$ref": "#/definitions/ElectricityAutonomy",
	"paths./places/{placeId}/electricity/autonomy.get.responses.default.$ref": "#/responses/DefaultError",
	"paths./places/{placeId}/electricity/autonomy.get.summary": "Get autonomy rate of the place",
	"paths./places/{placeId}/electricity/autonomy.get.tags.length": 1,
	"paths./places/{placeId}/electricity/autonomy.get.tags[0]": "Electricity",
	"paths./places/{placeId}/electricity/autonomy.parameters.length": 1,
	"paths./places/{placeId}/electricity/autonomy.parameters[0].$ref": "#/parameters/placeId",
	"paths./places/{placeId}/electricity/flows.get.description": "Get the mapping of virtual electricity flows to functionalities.\n\nSome rules are applied to expand the virtual flows using the concrete\nflows available.\n\nThe `factor` tells how each energy value coming from a functionality\nmust be added with values from other functionality to compute the\nenergy of the virtual flow. Factors are usually `1` or `-1`.\n\nThe `code` property gives the result which may be partial:\n- If all flows are available, `200000` is returned.\n- If no flows are available (indicating that the place has no\n  electricity functionality or that no functionality has been attached\n  to a flow), the `code` is `200001`. The `missing` property contains\n  all the requested flows.\n- If some flows are missing, the `code` is `200002` and the `missing`\n  property lists them.\n",
	"paths./places/{placeId}/electricity/flows.get.operationId": "Place.Electricity.getFlows",
	"paths./places/{placeId}/electricity/flows.get.parameters.length": 1,
	"paths./places/{placeId}/electricity/flows.get.parameters[0].collectionFormat": "csv",
	"paths./places/{placeId}/electricity/flows.get.parameters[0].description": "Names of the flows requested",
	"paths./places/{placeId}/electricity/flows.get.parameters[0].in": "query",
	"paths./places/{placeId}/electricity/flows.get.parameters[0].items.enum.length": 11,
	"paths./places/{placeId}/electricity/flows.get.parameters[0].items.enum[0]": "battery_charge",
	"paths./places/{placeId}/electricity/flows.get.parameters[0].items.enum[10]": "elec_usage",
	"paths./places/{placeId}/electricity/flows.get.parameters[0].items.enum[1]": "battery_discharge",
	"paths./places/{placeId}/electricity/flows.get.parameters[0].items.enum[2]": "battery_grid",
	"paths./places/{placeId}/electricity/flows.get.parameters[0].items.enum[3]": "elec_total_gen",
	"paths./places/{placeId}/electricity/flows.get.parameters[0].items.enum[4]": "elec_total_usage",
	"paths./places/{placeId}/electricity/flows.get.parameters[0].items.enum[5]": "elec_feed_in",
	"paths./places/{placeId}/electricity/flows.get.parameters[0].items.enum[6]": "elec_drawn",
	"paths./places/{placeId}/electricity/flows.get.parameters[0].items.enum[7]": "elec_local",
	"paths./places/{placeId}/electricity/flows.get.parameters[0].items.enum[8]": "elec_from_household",
	"paths./places/{placeId}/electricity/flows.get.parameters[0].items.enum[9]": "elec_to_pv",
	"paths./places/{placeId}/electricity/flows.get.parameters[0].items.type": "string",
	"paths./places/{placeId}/electricity/flows.get.parameters[0].name": "flows",
	"paths./places/{placeId}/electricity/flows.get.parameters[0].required": true,
	"paths./places/{placeId}/electricity/flows.get.parameters[0].type": "array",
	"paths./places/{placeId}/electricity/flows.get.responses.200.description": "Place is available. `code` gives the functional result.",
	"paths./places/{placeId}/electricity/flows.get.responses.200.schema.$ref": "#/definitions/ElectricityFlows",
	"paths./places/{placeId}/electricity/flows.get.responses.default.$ref": "#/responses/DefaultError",
	"paths./places/{placeId}/electricity/flows.get.summary": "Get electricity virtual flows",
	"paths./places/{placeId}/electricity/flows.get.tags.length": 1,
	"paths./places/{placeId}/electricity/flows.get.tags[0]": "Electricity",
	"paths./places/{placeId}/electricity/flows.parameters.length": 1,
	"paths./places/{placeId}/electricity/flows.parameters[0].$ref": "#/parameters/placeId",
	"paths./places/{placeId}/electricity/flows/setup.get.description": "Get the mapping of functionalities to electricity flows.\n\nA functionality is attached to *at most* one flow.\n",
	"paths./places/{placeId}/electricity/flows/setup.get.operationId": "Place.Electricity.getFlowsSetup",
	"paths./places/{placeId}/electricity/flows/setup.get.responses.200.description": "Successful.",
	"paths./places/{placeId}/electricity/flows/setup.get.responses.200.schema.$ref": "#/definitions/ElectricityFlowsSetup",
	"paths./places/{placeId}/electricity/flows/setup.get.responses.default.$ref": "#/responses/DefaultError",
	"paths./places/{placeId}/electricity/flows/setup.get.summary": "Get electricity flows setup",
	"paths./places/{placeId}/electricity/flows/setup.get.tags.length": 1,
	"paths./places/{placeId}/electricity/flows/setup.get.tags[0]": "Electricity",
	"paths./places/{placeId}/electricity/flows/setup.parameters.length": 1,
	"paths./places/{placeId}/electricity/flows/setup.parameters[0].$ref": "#/parameters/placeId",
	"paths./places/{placeId}/electricity/self-consumption.get.description": "Compute the self-consumption rate of the *Place* on a time period.\n\n`selfConsumption = 1 - (elec_feed_in / elec_total_usage)`\n",
	"paths./places/{placeId}/electricity/self-consumption.get.operationId": "Place.Electricity.selfConsumption",
	"paths./places/{placeId}/electricity/self-consumption.get.parameters.length": 2,
	"paths./places/{placeId}/electricity/self-consumption.get.parameters[0].$ref": "#/parameters/when.Req",
	"paths./places/{placeId}/electricity/self-consumption.get.parameters[1].$ref": "#/parameters/span.Req",
	"paths./places/{placeId}/electricity/self-consumption.get.responses.200.description": "Successful.",
	"paths./places/{placeId}/electricity/self-consumption.get.responses.200.schema.$ref": "#/definitions/ElectricitySelfConsumption",
	"paths./places/{placeId}/electricity/self-consumption.get.responses.default.$ref": "#/responses/DefaultError",
	"paths./places/{placeId}/electricity/self-consumption.get.summary": "Get self-consumption rate of the place",
	"paths./places/{placeId}/electricity/self-consumption.get.tags.length": 1,
	"paths./places/{placeId}/electricity/self-consumption.get.tags[0]": "Electricity",
	"paths./places/{placeId}/electricity/self-consumption.parameters.length": 1,
	"paths./places/{placeId}/electricity/self-consumption.parameters[0].$ref": "#/parameters/placeId",
	"paths./places/{placeId}/functionalities.get.description": "Get the list of *Functionalities* available in this *Place*.",
	"paths./places/{placeId}/functionalities.get.operationId": "Place.functionalities",
	"paths./places/{placeId}/functionalities.get.parameters.length": 1,
	"paths./places/{placeId}/functionalities.get.parameters[0].$ref": "#/parameters/embedMetadata",
	"paths./places/{placeId}/functionalities.get.responses.200.description": "Successful.",
	"paths./places/{placeId}/functionalities.get.responses.200.schema.items.$ref": "#/definitions/FunctionalityItem",
	"paths./places/{placeId}/functionalities.get.responses.200.schema.type": "array",
	"paths./places/{placeId}/functionalities.get.responses.200.schema.uniqueItems": true,
	"paths./places/{placeId}/functionalities.get.responses.default.$ref": "#/responses/DefaultError",
	"paths./places/{placeId}/functionalities.get.summary": "List Functionalities",
	"paths./places/{placeId}/functionalities.get.tags.length": 1,
	"paths./places/{placeId}/functionalities.get.tags[0]": "Functionality",
	"paths./places/{placeId}/functionalities.parameters.length": 3,
	"paths./places/{placeId}/functionalities.parameters[0].$ref": "#/parameters/placeId",
	"paths./places/{placeId}/functionalities.parameters[1].$ref": "#/parameters/devicesSelector.Opt",
	"paths./places/{placeId}/functionalities.parameters[2].$ref": "#/parameters/functionalitiesSelector.Opt",
	"paths./places/{placeId}/metadata.get.description": "Get the metadata.",
	"paths./places/{placeId}/metadata.get.operationId": "Place.getMetadata",
	"paths./places/{placeId}/metadata.get.responses.200.description": "Successful.",
	"paths./places/{placeId}/metadata.get.responses.200.schema.$ref": "#/definitions/Metadata",
	"paths./places/{placeId}/metadata.get.responses.default.$ref": "#/responses/DefaultError",
	"paths./places/{placeId}/metadata.get.summary": "List metadata",
	"paths./places/{placeId}/metadata.get.tags.length": 1,
	"paths./places/{placeId}/metadata.get.tags[0]": "Place",
	"paths./places/{placeId}/metadata.parameters.length": 1,
	"paths./places/{placeId}/metadata.parameters[0].$ref": "#/parameters/placeId",
	"paths./places/{placeId}/metadata.patch.description": "Modify the metadata.\nKeys are limited to the same format as tags (up to 21 characters, [a-z0-9], starting with [a-z]). Values can be any JSON value.\n",
	"paths./places/{placeId}/metadata.patch.operationId": "Place.patchMetadata",
	"paths./places/{placeId}/metadata.patch.parameters.length": 1,
	"paths./places/{placeId}/metadata.patch.parameters[0].$ref": "#/parameters/metadataPatch",
	"paths./places/{placeId}/metadata.patch.responses.200.description": "Successful. The new metadata is returned.",
	"paths./places/{placeId}/metadata.patch.responses.200.schema.$ref": "#/definitions/Metadata",
	"paths./places/{placeId}/metadata.patch.responses.304.$ref": "#/responses/PatchNotModified",
	"paths./places/{placeId}/metadata.patch.responses.403.$ref": "#/responses/ErrorAccessPlace",
	"paths./places/{placeId}/metadata.patch.responses.default.$ref": "#/responses/DefaultError",
	"paths./places/{placeId}/metadata.patch.summary": "Modify metadata",
	"paths./places/{placeId}/metadata.patch.tags.length": 1,
	"paths./places/{placeId}/metadata.patch.tags[0]": "Place",
	"paths./places/{placeId}/notifications.get.description": "Get the list of *Notifications* available in this *Place*.",
	"paths./places/{placeId}/notifications.get.operationId": "Place.notifications",
	"paths./places/{placeId}/notifications.get.parameters.length": 1,
	"paths./places/{placeId}/notifications.get.parameters[0].$ref": "#/parameters/embedMetadata",
	"paths./places/{placeId}/notifications.get.responses.200.description": "Successful.",
	"paths./places/{placeId}/notifications.get.responses.200.schema.items.$ref": "#/definitions/NotificationItem",
	"paths./places/{placeId}/notifications.get.responses.200.schema.type": "array",
	"paths./places/{placeId}/notifications.get.responses.200.schema.uniqueItems": true,
	"paths./places/{placeId}/notifications.get.responses.default.$ref": "#/responses/DefaultError",
	"paths./places/{placeId}/notifications.get.summary": "List Notifications",
	"paths./places/{placeId}/notifications.get.tags.length": 1,
	"paths./places/{placeId}/notifications.get.tags[0]": "Notification",
	"paths./places/{placeId}/notifications.parameters.length": 1,
	"paths./places/{placeId}/notifications.parameters[0].$ref": "#/parameters/placeId",
	"paths./places/{placeId}/notifications.post.description": "Create a new *Notification*.",
	"paths./places/{placeId}/notifications.post.operationId": "Place.newNotification",
	"paths./places/{placeId}/notifications.post.parameters.length": 1,
	"paths./places/{placeId}/notifications.post.parameters[0].in": "body",
	"paths./places/{placeId}/notifications.post.parameters[0].name": "notification",
	"paths./places/{placeId}/notifications.post.parameters[0].required": true,
	"paths./places/{placeId}/notifications.post.parameters[0].schema.$ref": "#/definitions/NotificationNew",
	"paths./places/{placeId}/notifications.post.responses.201.description": "*Notification* successfully created.",
	"paths./places/{placeId}/notifications.post.responses.201.headers.Location.description": "Path of the Notification created (`/notifications/{id}`)",
	"paths./places/{placeId}/notifications.post.responses.201.headers.Location.type": "string",
	"paths./places/{placeId}/notifications.post.responses.201.schema.$ref": "#/definitions/NotificationCreated",
	"paths./places/{placeId}/notifications.post.responses.403.$ref": "#/responses/ErrorAccessPlace",
	"paths./places/{placeId}/notifications.post.responses.default.$ref": "#/responses/DefaultError",
	"paths./places/{placeId}/notifications.post.summary": "Create a Notification",
	"paths./places/{placeId}/notifications.post.tags.length": 1,
	"paths./places/{placeId}/notifications.post.tags[0]": "Notification",
	"paths./places/{placeId}/programs.get.description": "Get the list of *Programs* available in this *Place*.",
	"paths./places/{placeId}/programs.get.operationId": "Place.programs",
	"paths./places/{placeId}/programs.get.parameters.length": 1,
	"paths./places/{placeId}/programs.get.parameters[0].$ref": "#/parameters/embedMetadata",
	"paths./places/{placeId}/programs.get.responses.200.description": "Successful.",
	"paths./places/{placeId}/programs.get.responses.200.schema.items.$ref": "#/definitions/ProgramItem",
	"paths./places/{placeId}/programs.get.responses.200.schema.type": "array",
	"paths./places/{placeId}/programs.get.responses.200.schema.uniqueItems": true,
	"paths./places/{placeId}/programs.get.responses.default.$ref": "#/responses/DefaultError",
	"paths./places/{placeId}/programs.get.summary": "List Programs",
	"paths./places/{placeId}/programs.get.tags.length": 1,
	"paths./places/{placeId}/programs.get.tags[0]": "Program",
	"paths./places/{placeId}/programs.parameters.length": 1,
	"paths./places/{placeId}/programs.parameters[0].$ref": "#/parameters/placeId",
	"paths./places/{placeId}/programs.post.description": "Create a new *Program*.\n\n**Note**: requires full access to the *Account*.\n",
	"paths./places/{placeId}/programs.post.operationId": "Place.newProgram",
	"paths./places/{placeId}/programs.post.parameters.length": 1,
	"paths./places/{placeId}/programs.post.parameters[0].in": "body",
	"paths./places/{placeId}/programs.post.parameters[0].name": "programInfo",
	"paths./places/{placeId}/programs.post.parameters[0].required": true,
	"paths./places/{placeId}/programs.post.parameters[0].schema.$ref": "#/definitions/ProgramNew",
	"paths./places/{placeId}/programs.post.responses.201.description": "*Program* successfully created.",
	"paths./places/{placeId}/programs.post.responses.201.headers.Location.description": "Path of the Program created (`/programs/{id}`)",
	"paths./places/{placeId}/programs.post.responses.201.headers.Location.type": "string",
	"paths./places/{placeId}/programs.post.responses.201.schema.$ref": "#/definitions/ProgramCreated",
	"paths./places/{placeId}/programs.post.responses.403.$ref": "#/responses/ErrorAccessPlace",
	"paths./places/{placeId}/programs.post.responses.default.$ref": "#/responses/DefaultError",
	"paths./places/{placeId}/programs.post.summary": "Create a Program",
	"paths./places/{placeId}/programs.post.tags.length": 1,
	"paths./places/{placeId}/programs.post.tags[0]": "Program",
	"paths./places/{placeId}/run/{action}.post.description": "Run an *Action* on zero, one or multiple *Functionalities* selected with tags.\n\n*Device* and *Functionality* selection are combined with « AND ».\n\nIf no functionality is matched by the device/functionality selection, an empty array is returned.\n",
	"paths./places/{placeId}/run/{action}.post.operationId": "Place.run",
	"paths./places/{placeId}/run/{action}.post.parameters.length": 5,
	"paths./places/{placeId}/run/{action}.post.parameters[0].$ref": "#/parameters/placeId",
	"paths./places/{placeId}/run/{action}.post.parameters[1].$ref": "#/parameters/action",
	"paths./places/{placeId}/run/{action}.post.parameters[2].$ref": "#/parameters/devicesSelector.Req",
	"paths./places/{placeId}/run/{action}.post.parameters[3].$ref": "#/parameters/functionalitiesSelector.Req",
	"paths./places/{placeId}/run/{action}.post.parameters[4].in": "body",
	"paths./places/{placeId}/run/{action}.post.parameters[4].name": "arguments",
	"paths./places/{placeId}/run/{action}.post.parameters[4].required": true,
	"paths./places/{placeId}/run/{action}.post.parameters[4].schema.$ref": "#/definitions/ActionArgs",
	"paths./places/{placeId}/run/{action}.post.responses.200.$ref": "#/responses/ActionMultiResultOK",
	"paths./places/{placeId}/run/{action}.post.responses.450.$ref": "#/responses/ErrorGatewayUnreachable",
	"paths./places/{placeId}/run/{action}.post.responses.default.$ref": "#/responses/DefaultError",
	"paths./places/{placeId}/run/{action}.post.summary": "Run actions",
	"paths./places/{placeId}/run/{action}.post.tags.length": 1,
	"paths./places/{placeId}/run/{action}.post.tags[0]": "Action",
	"paths./programs/{programId}.delete.description": "Delete a *Program*.\n\n**Note**: requires full access to the *Account*.\n",
	"paths./programs/{programId}.delete.operationId": "Program.delete",
	"paths./programs/{programId}.delete.responses.204.$ref": "#/responses/DeleteOK",
	"paths./programs/{programId}.delete.responses.403.$ref": "#/responses/ErrorAccessProgram",
	"paths./programs/{programId}.delete.responses.default.$ref": "#/responses/DefaultError",
	"paths./programs/{programId}.delete.summary": "Delete a Program",
	"paths./programs/{programId}.delete.tags.length": 1,
	"paths./programs/{programId}.delete.tags[0]": "Program",
	"paths./programs/{programId}.get.description": "Get information about a *Program*.\n",
	"paths./programs/{programId}.get.operationId": "Programs.get",
	"paths./programs/{programId}.get.responses.200.description": "Successful.",
	"paths./programs/{programId}.get.responses.200.schema.$ref": "#/definitions/Program",
	"paths./programs/{programId}.get.responses.403.$ref": "#/responses/ErrorAccessProgram",
	"paths./programs/{programId}.get.responses.default.$ref": "#/responses/DefaultError",
	"paths./programs/{programId}.get.summary": "Information about a Program",
	"paths./programs/{programId}.get.tags.length": 1,
	"paths./programs/{programId}.get.tags[0]": "Program",
	"paths./programs/{programId}.parameters.length": 1,
	"paths./programs/{programId}.parameters[0].$ref": "#/parameters/programId",
	"paths./programs/{programId}.patch.description": "Modify a *Program*:\n- name\n- status (enabled/disabled)\n- code\n\n**Note**: requires full access to the *Account*.\n",
	"paths./programs/{programId}.patch.operationId": "Program.patch",
	"paths./programs/{programId}.patch.parameters.length": 1,
	"paths./programs/{programId}.patch.parameters[0].in": "body",
	"paths./programs/{programId}.patch.parameters[0].name": "programPatch",
	"paths./programs/{programId}.patch.parameters[0].required": true,
	"paths./programs/{programId}.patch.parameters[0].schema.$ref": "#/definitions/ProgramPatch",
	"paths./programs/{programId}.patch.responses.204.$ref": "#/responses/PatchOK",
	"paths./programs/{programId}.patch.responses.304.$ref": "#/responses/PatchNotModified",
	"paths./programs/{programId}.patch.responses.403.$ref": "#/responses/ErrorAccessProgram",
	"paths./programs/{programId}.patch.responses.default.$ref": "#/responses/DefaultError",
	"paths./programs/{programId}.patch.summary": "Modify a Program",
	"paths./programs/{programId}.patch.tags.length": 1,
	"paths./programs/{programId}.patch.tags[0]": "Program",
	"paths./programs/{programId}/log.get.description": "Get the execution history list of this *Program*.",
	"paths./programs/{programId}/log.get.operationId": "Program.log",
	"paths./programs/{programId}/log.get.parameters.length": 2,
	"paths./programs/{programId}/log.get.parameters[0].$ref": "#/parameters/from.Req",
	"paths./programs/{programId}/log.get.parameters[1].$ref": "#/parameters/to",
	"paths./programs/{programId}/log.get.responses.200.description": "Successful.",
	"paths./programs/{programId}/log.get.responses.200.schema.items.$ref": "#/definitions/ProgramLog",
	"paths./programs/{programId}/log.get.responses.200.schema.type": "array",
	"paths./programs/{programId}/log.get.responses.200.schema.uniqueItems": true,
	"paths./programs/{programId}/log.get.responses.403.$ref": "#/responses/ErrorAccessProgram",
	"paths./programs/{programId}/log.get.responses.default.$ref": "#/responses/DefaultError",
	"paths./programs/{programId}/log.get.summary": "History of executions of a Program",
	"paths./programs/{programId}/log.get.tags.length": 1,
	"paths./programs/{programId}/log.get.tags[0]": "Program",
	"paths./programs/{programId}/log.parameters.length": 1,
	"paths./programs/{programId}/log.parameters[0].$ref": "#/parameters/programId",
	"paths./programs/{programId}/metadata.get.description": "Get the metadata of the *Program*.",
	"paths./programs/{programId}/metadata.get.operationId": "Program.getMetadata",
	"paths./programs/{programId}/metadata.get.responses.200.description": "Successful.",
	"paths./programs/{programId}/metadata.get.responses.200.schema.$ref": "#/definitions/Metadata",
	"paths./programs/{programId}/metadata.get.responses.default.$ref": "#/responses/DefaultError",
	"paths./programs/{programId}/metadata.get.summary": "List metadata",
	"paths./programs/{programId}/metadata.get.tags.length": 1,
	"paths./programs/{programId}/metadata.get.tags[0]": "Program",
	"paths./programs/{programId}/metadata.parameters.length": 1,
	"paths./programs/{programId}/metadata.parameters[0].$ref": "#/parameters/programId",
	"paths./programs/{programId}/metadata.patch.description": "Modify the metadata of a *Program*.\nKeys are limited to the same format as tags (up to 21 characters, [a-z0-9], starting with [a-z]). Values can be any JSON value.\n",
	"paths./programs/{programId}/metadata.patch.operationId": "Program.patchMetadata",
	"paths./programs/{programId}/metadata.patch.parameters.length": 1,
	"paths./programs/{programId}/metadata.patch.parameters[0].$ref": "#/parameters/metadataPatch",
	"paths./programs/{programId}/metadata.patch.responses.200.description": "Successful. The new metadata is returned.",
	"paths./programs/{programId}/metadata.patch.responses.200.schema.$ref": "#/definitions/Metadata",
	"paths./programs/{programId}/metadata.patch.responses.304.$ref": "#/responses/PatchNotModified",
	"paths./programs/{programId}/metadata.patch.responses.403.$ref": "#/responses/ErrorAccessProgram",
	"paths./programs/{programId}/metadata.patch.responses.default.$ref": "#/responses/DefaultError",
	"paths./programs/{programId}/metadata.patch.summary": "Modify metadata of a Program",
	"paths./programs/{programId}/metadata.patch.tags.length": 1,
	"paths./programs/{programId}/metadata.patch.tags[0]": "Program",
	"paths./programs/{programId}/run.parameters.length": 1,
	"paths./programs/{programId}/run.parameters[0].$ref": "#/parameters/programId",
	"paths./programs/{programId}/run.post.description": "Launch the *Program*.\nThe result will be available later in the run history.",
	"paths./programs/{programId}/run.post.operationId": "Program.run",
	"paths./programs/{programId}/run.post.responses.204.description": "*Program* successfully launched.",
	"paths./programs/{programId}/run.post.responses.403.$ref": "#/responses/ErrorAccessProgram",
	"paths./programs/{programId}/run.post.responses.default.$ref": "#/responses/DefaultError",
	"paths./programs/{programId}/run.post.summary": "Run the Program",
	"paths./programs/{programId}/run.post.tags.length": 1,
	"paths./programs/{programId}/run.post.tags[0]": "Program",
	"produces.length": 1,
	"produces[0]": "application/json",
	"responses.ActionMultiResultOK.description": "Successful.",
	"responses.ActionMultiResultOK.schema.$ref": "#/definitions/ActionMultiResult",
	"responses.DefaultError.description": "Other error.",
	"responses.DefaultError.schema.$ref": "#/definitions/DefaultError",
	"responses.DeleteOK.description": "Resource successfully deleted.",
	"responses.ErrorAccessAccount.description": "The authentication token doesn't allow to modify the *Account*.\n",
	"responses.ErrorAccessAccount.schema.$ref": "#/definitions/ErrorEntity",
	"responses.ErrorAccessBus.description": "*Bus* doesn't exist or the requester doesn't have appropriate access to the *Place*.\n",
	"responses.ErrorAccessBus.schema.$ref": "#/definitions/ErrorSubEntity",
	"responses.ErrorAccessDevice.description": "*Device* doesn't exist or the requester doesn't have appropriate access to the *Place*.\n",
	"responses.ErrorAccessDevice.schema.$ref": "#/definitions/ErrorEntity",
	"responses.ErrorAccessFunctionality.description": "*Functionality* doesn't exist or the requester doesn't have appropriate access to the *Place*.\n",
	"responses.ErrorAccessFunctionality.schema.$ref": "#/definitions/ErrorEntity",
	"responses.ErrorAccessNotification.description": "*Notification* doesn't exist or the requester doesn't have appropriate access to the *Place*.\n",
	"responses.ErrorAccessNotification.schema.$ref": "#/definitions/ErrorEntity",
	"responses.ErrorAccessPlace.description": "*Place* doesn't exist or the requester doesn't have access.\n",
	"responses.ErrorAccessPlace.schema.$ref": "#/definitions/ErrorEntity",
	"responses.ErrorAccessProgram.description": "*Program* doesn't exist or the requester doesn't have appropriate access to the *Place*.\n",
	"responses.ErrorAccessProgram.schema.$ref": "#/definitions/ErrorEntity",
	"responses.ErrorAccessUser.description": "*User* doesn't exist in this *Account* or the requester doesn't have access to a *Place* on which this *User* has access.\n",
	"responses.ErrorAccessUser.schema.$ref": "#/definitions/ErrorEntity",
	"responses.ErrorGatewayUnreachable.description": "The gateway of the Place is not reachable.",
	"responses.ErrorGatewayUnreachable.schema.$ref": "#/definitions/ErrorGatewayUnreachable",
	"responses.ErrorWriteAttribute.description": "*Attribute* is not writable.\n",
	"responses.ErrorWriteAttribute.schema.$ref": "#/definitions/ErrorSubEntity",
	"responses.PatchNotModified.description": "Successful, but nothing changed.",
	"responses.PatchOK.description": "Modification successful.",
	"schemes.length": 1,
	"schemes[0]": "https",
	"security.length": 2,
	"securityDefinitions.Token in Access-Token header.description": "Token in Access-Token header",
	"securityDefinitions.Token in Access-Token header.in": "header",
	"securityDefinitions.Token in Access-Token header.name": "Access-Token",
	"securityDefinitions.Token in Access-Token header.type": "apiKey",
	"securityDefinitions.Token in query.description": "Token in query",
	"securityDefinitions.Token in query.in": "query",
	"securityDefinitions.Token in query.name": "token",
	"securityDefinitions.Token in query.type": "apiKey",
	"security[0].Token in query.length": 0,
	"security[1].Token in Access-Token header.length": 0,
	"swagger": "2.0",
	"tags.length": 11,
	"tags[0].name": "Entry points",
	"tags[10].name": "Electricity",
	"tags[1].name": "Authentication",
	"tags[2].name": "Account",
	"tags[3].name": "User",
	"tags[4].name": "Place",
	"tags[5].name": "Device",
	"tags[6].name": "Functionality",
	"tags[7].name": "Action",
	"tags[8].name": "Program",
	"tags[9].name": "Notification"
}