{
	"basePath": "/2.0",
	"consumes.length": 1,
	"consumes[0]": "application/json",
	"definitions.AssignmentCounts.description": "Counts of assignments within this policy by apply-to type.",
	"definitions.AssignmentCounts.properties.file.format": "int64",
	"definitions.AssignmentCounts.properties.file.type": "integer",
	"definitions.AssignmentCounts.properties.file_version.format": "int64",
	"definitions.AssignmentCounts.properties.file_version.type": "integer",
	"definitions.AssignmentCounts.properties.folder.format": "int64",
	"definitions.AssignmentCounts.properties.folder.type": "integer",
	"definitions.AssignmentCounts.properties.user.format": "int64",
	"definitions.AssignmentCounts.properties.user.type": "integer",
	"definitions.AssignmentCounts.type": "object",
	"definitions.BoxFile.allOf.length": 2,
	"definitions.BoxFile.allOf[0].$ref": "#/definitions/FileReference",
	"definitions.BoxFile.allOf[1].properties.collections.items.$ref": "#/definitions/Collection",
	"definitions.BoxFile.allOf[1].properties.collections.type": "array",
	"definitions.BoxFile.allOf[1].properties.comment_count.description": "The number of comments on a file.",
	"definitions.BoxFile.allOf[1].properties.comment_count.format": "int64",
	"definitions.BoxFile.allOf[1].properties.comment_count.type": "integer",
	"definitions.BoxFile.allOf[1].properties.content_created_at.description": "When the content of this file was created (more info).",
	"definitions.BoxFile.allOf[1].properties.content_created_at.format": "date-time",
	"definitions.BoxFile.allOf[1].properties.content_created_at.type": "string",
	"definitions.BoxFile.allOf[1].properties.content_modified_at.description": "When the content of this file was last modified (more info).",
	"definitions.BoxFile.allOf[1].properties.content_modified_at.format": "date-time",
	"definitions.BoxFile.allOf[1].properties.content_modified_at.type": "string",
	"definitions.BoxFile.allOf[1].properties.created_at.description": "When this file was created on Box’s servers.",
	"definitions.BoxFile.allOf[1].properties.created_at.format": "date-time",
	"definitions.BoxFile.allOf[1].properties.created_at.type": "string",
	"definitions.BoxFile.allOf[1].properties.created_by.$ref": "#/definitions/UserReference",
	"definitions.BoxFile.allOf[1].properties.created_by.description": "The user who first created file.",
	"definitions.BoxFile.allOf[1].properties.description.description": "The description of this file.",
	"definitions.BoxFile.allOf[1].properties.description.type": "string",
	"definitions.BoxFile.allOf[1].properties.expiring_embed_link.description": "An expiring URL for an embedded preview session in an iframe. This URL will expire after 60 seconds and the session will expire after 60 minutes.",
	"definitions.BoxFile.allOf[1].properties.expiring_embed_link.type": "string",
	"definitions.BoxFile.allOf[1].properties.extension.description": "Indicates the suffix, when available, on the file. By default, set to an empty string. The suffix usually indicates the encoding (file format) of the file contents or usage.",
	"definitions.BoxFile.allOf[1].properties.extension.type": "string",
	"definitions.BoxFile.allOf[1].properties.file_version.$ref": "#/definitions/FileVersionReference",
	"definitions.BoxFile.allOf[1].properties.is_package.description": "Whether the file is a package. Used for Mac Packages used by iWorks.",
	"definitions.BoxFile.allOf[1].properties.is_package.type": "boolean",
	"definitions.BoxFile.allOf[1].properties.item_status.description": "Whether this item is deleted or not.",
	"definitions.BoxFile.allOf[1].properties.item_status.type": "string",
	"definitions.BoxFile.allOf[1].properties.lock.$ref": "#/definitions/Lock",
	"definitions.BoxFile.allOf[1].properties.modified_at.description": "When this file was last updated on the Box servers.",
	"definitions.BoxFile.allOf[1].properties.modified_at.format": "date-time",
	"definitions.BoxFile.allOf[1].properties.modified_at.type": "string",
	"definitions.BoxFile.allOf[1].properties.modified_by.$ref": "#/definitions/UserReference",
	"definitions.BoxFile.allOf[1].properties.modified_by.description": "The user who last updated this file.",
	"definitions.BoxFile.allOf[1].properties.owned_by.$ref": "#/definitions/UserReference",
	"definitions.BoxFile.allOf[1].properties.owned_by.description": "The user who owns this file.",
	"definitions.BoxFile.allOf[1].properties.parent.$ref": "#/definitions/ItemReference",
	"definitions.BoxFile.allOf[1].properties.parent.description": "The folder containing this file.",
	"definitions.BoxFile.allOf[1].properties.path_collection.$ref": "#/definitions/PathCollection",
	"definitions.BoxFile.allOf[1].properties.path_collection.description": "The path of folders to this file, starting at the root.",
	"definitions.BoxFile.allOf[1].properties.permissions.$ref": "#/definitions/FilePermissions",
	"definitions.BoxFile.allOf[1].properties.purged_at.description": "When this file will be permanently deleted.",
	"definitions.BoxFile.allOf[1].properties.purged_at.format": "date-time",
	"definitions.BoxFile.allOf[1].properties.purged_at.type": "string",
	"definitions.BoxFile.allOf[1].properties.shared_link.$ref": "#/definitions/SharedLink",
	"definitions.BoxFile.allOf[1].properties.size.description": "Size of this file in bytes.",
	"definitions.BoxFile.allOf[1].properties.size.format": "int64",
	"definitions.BoxFile.allOf[1].properties.size.type": "integer",
	"definitions.BoxFile.allOf[1].properties.tags.description": "All tags applied to this file.",
	"definitions.BoxFile.allOf[1].properties.tags.items.type": "string",
	"definitions.BoxFile.allOf[1].properties.tags.type": "array",
	"definitions.BoxFile.allOf[1].properties.trashed_at.description": "When this file was last moved to the trash.",
	"definitions.BoxFile.allOf[1].properties.trashed_at.format": "date-time",
	"definitions.BoxFile.allOf[1].properties.trashed_at.type": "string",
	"definitions.BoxFile.allOf[1].properties.version_number.description": "The version number of the file.",
	"definitions.BoxFile.allOf[1].properties.version_number.type": "string",
	"definitions.BoxFile.allOf[1].properties.watermark_info.$ref": "#/definitions/WatermarkInfo",
	"definitions.BoxFile.description": "File information describe file objects in Box, with attributes like who created the file, when it was last modified, and other information. The actual content of the file itself is accessible through the /files/{id}/content endpoint.",
	"definitions.BoxFile.title": "File Object",
	"definitions.BoxFile.type": "object",
	"definitions.ChunkPagination.properties.chunk_size.format": "int64",
	"definitions.ChunkPagination.properties.chunk_size.type": "integer",
	"definitions.ChunkPagination.properties.next_stream_position.type": "string",
	"definitions.ChunkPagination.type": "object",
	"definitions.Collaboration.allOf.length": 2,
	"definitions.Collaboration.allOf[0].$ref": "#/definitions/Reference",
	"definitions.Collaboration.allOf[1].properties.accessible_by.$ref": "#/definitions/UserReference",
	"definitions.Collaboration.allOf[1].properties.accessible_by.description": "The user or group who the collaboration applies to",
	"definitions.Collaboration.allOf[1].properties.acknowledged_at.description": "When the status of this collab was changed",
	"definitions.Collaboration.allOf[1].properties.acknowledged_at.format": "date-time",
	"definitions.Collaboration.allOf[1].properties.acknowledged_at.type": "string",
	"definitions.Collaboration.allOf[1].properties.can_view_path.description": "Whether view path collaboration feature is enabled or not. View path collaborations allow the invitee to see the entire ancestral path to the associated folder. The user will not gain privileges in any ancestral folder",
	"definitions.Collaboration.allOf[1].properties.can_view_path.type": "boolean",
	"definitions.Collaboration.allOf[1].properties.created_at.description": "The time this collaboration was created",
	"definitions.Collaboration.allOf[1].properties.created_at.format": "date-time",
	"definitions.Collaboration.allOf[1].properties.created_at.type": "string",
	"definitions.Collaboration.allOf[1].properties.created_by.$ref": "#/definitions/UserReference",
	"definitions.Collaboration.allOf[1].properties.created_by.description": "The user who created this collaboration",
	"definitions.Collaboration.allOf[1].properties.expires_at.description": "The time this collaboration will expire",
	"definitions.Collaboration.allOf[1].properties.expires_at.format": "date-time",
	"definitions.Collaboration.allOf[1].properties.expires_at.type": "string",
	"definitions.Collaboration.allOf[1].properties.item.$ref": "#/definitions/ItemReference",
	"definitions.Collaboration.allOf[1].properties.modified_at.description": "The time this collaboration was last modified",
	"definitions.Collaboration.allOf[1].properties.modified_at.format": "date-time",
	"definitions.Collaboration.allOf[1].properties.modified_at.type": "string",
	"definitions.Collaboration.allOf[1].properties.role.description": "The level of access this user or group has. Can be editor, viewer, previewer, uploader, previewer uploader, viewer uploader, co-owner, or owner",
	"definitions.Collaboration.allOf[1].properties.role.enum.length": 8,
	"definitions.Collaboration.allOf[1].properties.role.enum[0]": "editor",
	"definitions.Collaboration.allOf[1].properties.role.enum[1]": "viewer",
	"definitions.Collaboration.allOf[1].properties.role.enum[2]": "previewer",
	"definitions.Collaboration.allOf[1].properties.role.enum[3]": "uploader",
	"definitions.Collaboration.allOf[1].properties.role.enum[4]": "previewer uploader",
	"definitions.Collaboration.allOf[1].properties.role.enum[5]": "viewer uploader",
	"definitions.Collaboration.allOf[1].properties.role.enum[6]": "co-owner",
	"definitions.Collaboration.allOf[1].properties.role.enum[7]": "owner",
	"definitions.Collaboration.allOf[1].properties.role.type": "string",
	"definitions.Collaboration.allOf[1].properties.status.description": "The status of this collab. Can be accepted, pending, or rejected",
	"definitions.Collaboration.allOf[1].properties.status.type": "string",
	"definitions.Collaboration.description": "Collaborations are used to set and apply access permissions for users and groups to files and folders, similar to access control lists.",
	"definitions.Collaboration.type": "object",
	"definitions.CollaborationList.allOf.length": 2,
	"definitions.CollaborationList.allOf[0].$ref": "#/definitions/Pagination",
	"definitions.CollaborationList.allOf[1].properties.entries.items.$ref": "#/definitions/Collaboration",
	"definitions.CollaborationList.allOf[1].properties.entries.type": "array",
	"definitions.CollaborationList.type": "object",
	"definitions.Collection.allOf.length": 2,
	"definitions.Collection.allOf[0].$ref": "#/definitions/Reference",
	"definitions.Collection.allOf[1].properties.collection_type.description": "The type of the collection. This is used to determine the proper visual treatment for Box-internally created collections. Initially only “favorites” collection-type will be supported.",
	"definitions.Collection.allOf[1].properties.collection_type.enum.length": 1,
	"definitions.Collection.allOf[1].properties.collection_type.enum[0]": "favorites",
	"definitions.Collection.allOf[1].properties.collection_type.type": "string",
	"definitions.Collection.allOf[1].properties.name.description": "The name of this collection. The only collection currently available is named “Favorites”",
	"definitions.Collection.allOf[1].properties.name.type": "string",
	"definitions.Collection.description": "Collections contain information about the items contained inside of them, including files and folders. The only collection available currently is a “Favorites” collection. The contents of the collection are discovered in a similar way in which the contents of a folder are discovered.",
	"definitions.Collection.title": "Collection Object",
	"definitions.Collection.type": "object",
	"definitions.CollectionList.allOf.length": 2,
	"definitions.CollectionList.allOf[0].$ref": "#/definitions/Pagination",
	"definitions.CollectionList.allOf[1].properties.entries.items.$ref": "#/definitions/Collection",
	"definitions.CollectionList.allOf[1].properties.entries.type": "array",
	"definitions.CollectionList.type": "object",
	"definitions.Comment.allOf.length": 2,
	"definitions.Comment.allOf[0].$ref": "#/definitions/Reference",
	"definitions.Comment.allOf[1].properties.created_at.description": "The time this comment was created",
	"definitions.Comment.allOf[1].properties.created_at.format": "date-time",
	"definitions.Comment.allOf[1].properties.created_at.type": "string",
	"definitions.Comment.allOf[1].properties.created_by.$ref": "#/definitions/UserReference",
	"definitions.Comment.allOf[1].properties.created_by.description": "A mini user object representing the author of the comment",
	"definitions.Comment.allOf[1].properties.is_reply_comment.description": "Whether or not this comment is a reply to another comment",
	"definitions.Comment.allOf[1].properties.is_reply_comment.type": "boolean",
	"definitions.Comment.allOf[1].properties.item.$ref": "#/definitions/ItemReference",
	"definitions.Comment.allOf[1].properties.message.description": "The comment text that the user typed",
	"definitions.Comment.allOf[1].properties.message.type": "string",
	"definitions.Comment.allOf[1].properties.modified_at.description": "The time this comment was last modified",
	"definitions.Comment.allOf[1].properties.modified_at.format": "date-time",
	"definitions.Comment.allOf[1].properties.modified_at.type": "string",
	"definitions.Comment.allOf[1].properties.tagged_message.description": "The string representing the comment text with @mentions included. @mention format is @[id:username]. Field is not included by default.",
	"definitions.Comment.allOf[1].properties.tagged_message.type": "string",
	"definitions.Comment.description": "Comments are messages generated by Box users. Each message is tied to a specific file. You can create comments independently or create them as responses to other comments.\n\n\t\t\t",
	"definitions.Comment.title": "Comment Object",
	"definitions.Comment.type": "object",
	"definitions.CommentList.allOf.length": 2,
	"definitions.CommentList.allOf[0].$ref": "#/definitions/Pagination",
	"definitions.CommentList.allOf[1].properties.entries.items.$ref": "#/definitions/Comment",
	"definitions.CommentList.allOf[1].properties.entries.type": "array",
	"definitions.CommentList.type": "object",
	"definitions.CopyFile.properties.name.type": "string",
	"definitions.CopyFile.properties.parent.properties.id.type": "string",
	"definitions.CopyFile.properties.parent.type": "object",
	"definitions.CopyFile.properties.version.type": "string",
	"definitions.CopyFile.type": "object",
	"definitions.CreateLegalHoldPolicyAssignment.description": "Request object to create a new Legal Policy Hold Assignment",
	"definitions.CreateLegalHoldPolicyAssignment.properties.assign_to.$ref": "#/definitions/Reference",
	"definitions.CreateLegalHoldPolicyAssignment.properties.assign_to.description": "Target Object. Type of target and ID of the target entity",
	"definitions.CreateLegalHoldPolicyAssignment.properties.policy_id.description": "ID of Policy to create Assignment for.",
	"definitions.CreateLegalHoldPolicyAssignment.properties.policy_id.type": "string",
	"definitions.CreateLegalHoldPolicyAssignment.type": "object",
	"definitions.CreateRetentionPolicyAssignment.description": "Request object to create a new Retention Policy Assignment",
	"definitions.CreateRetentionPolicyAssignment.properties.assign_to.$ref": "#/definitions/Reference",
	"definitions.CreateRetentionPolicyAssignment.properties.assign_to.description": "Target Object. Type of target and ID of the target entity",
	"definitions.CreateRetentionPolicyAssignment.properties.policy_id.description": "ID of Policy to create Assignment for.",
	"definitions.CreateRetentionPolicyAssignment.properties.policy_id.type": "string",
	"definitions.CreateRetentionPolicyAssignment.type": "object",
	"definitions.CreateTaskAssignment.properties.assign_to.$ref": "#/definitions/UserReference",
	"definitions.CreateTaskAssignment.properties.task.$ref": "#/definitions/Task",
	"definitions.CreateTaskAssignment.type": "object",
	"definitions.DevicePinner.allOf.length": 2,
	"definitions.DevicePinner.allOf[0].$ref": "#/definitions/Reference",
	"definitions.DevicePinner.allOf[1].properties.created_at.description": "The time this pin was created",
	"definitions.DevicePinner.allOf[1].properties.created_at.format": "date-time",
	"definitions.DevicePinner.allOf[1].properties.created_at.type": "string",
	"definitions.DevicePinner.allOf[1].properties.modified_at.description": "The time this pin was modified",
	"definitions.DevicePinner.allOf[1].properties.modified_at.format": "date-time",
	"definitions.DevicePinner.allOf[1].properties.modified_at.type": "string",
	"definitions.DevicePinner.allOf[1].properties.owned_by.$ref": "#/definitions/UserReference",
	"definitions.DevicePinner.allOf[1].properties.owned_by.description": "The user that the pin belongs to",
	"definitions.DevicePinner.allOf[1].properties.product_name.description": "The type of device being pinned",
	"definitions.DevicePinner.allOf[1].properties.product_name.type": "string",
	"definitions.DevicePinner.description": "Device pins allow enterprises to control what devices can use native Box applications. To learn more about device pinning, please see our  documentation.",
	"definitions.DevicePinner.title": "Device Pinner Object",
	"definitions.DevicePinner.type": "object",
	"definitions.DevicePinnerList.allOf.length": 2,
	"definitions.DevicePinnerList.allOf[0].$ref": "#/definitions/Pagination",
	"definitions.DevicePinnerList.allOf[1].properties.entries.items.$ref": "#/definitions/DevicePinner",
	"definitions.DevicePinnerList.allOf[1].properties.entries.type": "array",
	"definitions.DevicePinnerList.type": "object",
	"definitions.EmailAlias.allOf.length": 2,
	"definitions.EmailAlias.allOf[0].$ref": "#/definitions/Reference",
	"definitions.EmailAlias.allOf[1].properties.email.type": "string",
	"definitions.EmailAlias.allOf[1].properties.is_confirmed.type": "boolean",
	"definitions.EmailAlias.type": "object",
	"definitions.EmailAliasList.allOf.length": 2,
	"definitions.EmailAliasList.allOf[0].$ref": "#/definitions/Pagination",
	"definitions.EmailAliasList.allOf[1].properties.entries.items.$ref": "#/definitions/EmailAlias",
	"definitions.EmailAliasList.allOf[1].properties.entries.type": "array",
	"definitions.EmailAliasList.type": "object",
	"definitions.Enterprise.allOf.length": 2,
	"definitions.Enterprise.allOf[0].$ref": "#/definitions/Reference",
	"definitions.Enterprise.allOf[1].properties.name.type": "string",
	"definitions.Enterprise.description": "Mini representation of this user’s enterprise, including the ID of its enterprise.",
	"definitions.Enterprise.type": "object",
	"definitions.Error.properties.code.type": "string",
	"definitions.Error.properties.context_info.properties.errors.items.properties.message.type": "string",
	"definitions.Error.properties.context_info.properties.errors.items.properties.name.type": "string",
	"definitions.Error.properties.context_info.properties.errors.items.properties.reason.type": "string",
	"definitions.Error.properties.context_info.properties.errors.items.type": "object",
	"definitions.Error.properties.context_info.properties.errors.type": "array",
	"definitions.Error.properties.context_info.type": "object",
	"definitions.Error.properties.help-url.type": "string",
	"definitions.Error.properties.message.type": "string",
	"definitions.Error.properties.request_id.type": "string",
	"definitions.Error.properties.status.format": "int32",
	"definitions.Error.properties.status.type": "integer",
	"definitions.Error.properties.type.enum.length": 1,
	"definitions.Error.properties.type.enum[0]": "error",
	"definitions.Error.properties.type.type": "string",
	"definitions.Error.type": "object",
	"definitions.Event.description": "",
	"definitions.Event.properties.additional_details.description": "This object provides additional information about the event if available. This can include how a user performed an event as well as additional information to correlate an event to external Keysafe logs. Not all events have an additional_details object.  This object is only available in the Enterprise Events.",
	"definitions.Event.properties.additional_details.type": "object",
	"definitions.Event.properties.created_by.$ref": "#/definitions/UserReference",
	"definitions.Event.properties.created_by.description": "The user that performed the action. Some events may be performed by users not logged into Box. In those instances, not all attributes of this object will be populated and the event will be attributed to a unknown user (user_id = 2).",
	"definitions.Event.properties.event_id.description": "The id of the event, used for de-duplication purposes",
	"definitions.Event.properties.event_id.type": "string",
	"definitions.Event.properties.event_type.description": "One of the event types",
	"definitions.Event.properties.event_type.type": "string",
	"definitions.Event.properties.session_id.description": "The session of the user that performed the action. Not all events will populate this attribute.",
	"definitions.Event.properties.session_id.type": "string",
	"definitions.Event.properties.source.description": "The object that was modified. See Object definitions for appropriate object: file, folder, comment, etc. Not all events have a source object.",
	"definitions.Event.properties.source.type": "object",
	"definitions.Event.properties.type.enum.length": 1,
	"definitions.Event.properties.type.enum[0]": "event",
	"definitions.Event.properties.type.type": "string",
	"definitions.Event.title": "Event Object",
	"definitions.Event.type": "object",
	"definitions.EventList.allOf.length": 2,
	"definitions.EventList.allOf[0].$ref": "#/definitions/ChunkPagination",
	"definitions.EventList.allOf[1].properties.entries.items.$ref": "#/definitions/Event",
	"definitions.EventList.allOf[1].properties.entries.type": "array",
	"definitions.EventList.type": "object",
	"definitions.FilePermissions.description": "The permissions that the current user has on the file",
	"definitions.FilePermissions.properties.can_download.type": "boolean",
	"definitions.FilePermissions.properties.can_invite_collaborator.type": "boolean",
	"definitions.FilePermissions.properties.can_preview.type": "boolean",
	"definitions.FilePermissions.properties.can_rename.type": "boolean",
	"definitions.FilePermissions.properties.can_set_share_access.type": "boolean",
	"definitions.FilePermissions.properties.can_share.type": "boolean",
	"definitions.FilePermissions.properties.can_upload.type": "boolean",
	"definitions.FilePermissions.properties.cand_delete.type": "boolean",
	"definitions.FilePermissions.type": "object",
	"definitions.FileReference.allOf.length": 2,
	"definitions.FileReference.allOf[0].$ref": "#/definitions/ItemReference",
	"definitions.FileReference.allOf[1].properties.sha1.description": "The sha1 hash of this file.",
	"definitions.FileReference.allOf[1].properties.sha1.type": "string",
	"definitions.FileReference.description": "It references either a file or a folder",
	"definitions.FileReference.type": "object",
	"definitions.FileReferenceList.allOf.length": 2,
	"definitions.FileReferenceList.allOf[0].$ref": "#/definitions/Pagination",
	"definitions.FileReferenceList.allOf[1].properties.entries.items.$ref": "#/definitions/FileReference",
	"definitions.FileReferenceList.allOf[1].properties.entries.type": "array",
	"definitions.FileReferenceList.type": "object",
	"definitions.FileVersion.allOf.length": 2,
	"definitions.FileVersion.allOf[0].$ref": "#/definitions/FileVersionReference",
	"definitions.FileVersion.allOf[1].properties.created_at.format": "date-time",
	"definitions.FileVersion.allOf[1].properties.created_at.type": "string",
	"definitions.FileVersion.allOf[1].properties.modified_at.format": "date-time",
	"definitions.FileVersion.allOf[1].properties.modified_at.type": "string",
	"definitions.FileVersion.allOf[1].properties.modified_by.$ref": "#/definitions/UserReference",
	"definitions.FileVersion.allOf[1].properties.name.type": "string",
	"definitions.FileVersion.allOf[1].properties.size.format": "int64",
	"definitions.FileVersion.allOf[1].properties.size.type": "integer",
	"definitions.FileVersion.type": "object",
	"definitions.FileVersionLegalHold.allOf.length": 2,
	"definitions.FileVersionLegalHold.allOf[0].$ref": "#/definitions/Reference",
	"definitions.FileVersionLegalHold.allOf[1].properties.deleted_at.description": "Time that this File-Version-Legal-Hold was deleted.",
	"definitions.FileVersionLegalHold.allOf[1].properties.deleted_at.format": "date-time",
	"definitions.FileVersionLegalHold.allOf[1].properties.deleted_at.type": "string",
	"definitions.FileVersionLegalHold.allOf[1].properties.file.$ref": "#/definitions/FileReference",
	"definitions.FileVersionLegalHold.allOf[1].properties.file.description": "The parent file of the File-Version that is held. Note that there is no guarantee that the current version of this File is held.",
	"definitions.FileVersionLegalHold.allOf[1].properties.file_version.$ref": "#/definitions/FileVersionReference",
	"definitions.FileVersionLegalHold.allOf[1].properties.file_version.description": "The File-Version that is held.",
	"definitions.FileVersionLegalHold.allOf[1].properties.legal_hold_policy_assignments.description": "List of assignments contributing to this Hold.",
	"definitions.FileVersionLegalHold.allOf[1].properties.legal_hold_policy_assignments.items.$ref": "#/definitions/LegalHoldPolicyAssignment",
	"definitions.FileVersionLegalHold.allOf[1].properties.legal_hold_policy_assignments.type": "array",
	"definitions.FileVersionLegalHold.description": "File-Version-Legal-Hold is an entity representing all holds on a File Version. Type is legal-hold.",
	"definitions.FileVersionLegalHold.title": "File Version Legal Hold object",
	"definitions.FileVersionLegalHold.type": "object",
	"definitions.FileVersionLegalHoldList.allOf.length": 2,
	"definitions.FileVersionLegalHoldList.allOf[0].$ref": "#/definitions/Pagination",
	"definitions.FileVersionLegalHoldList.allOf[1].properties.entries.items.$ref": "#/definitions/FileVersionLegalHold",
	"definitions.FileVersionLegalHoldList.allOf[1].properties.entries.type": "array",
	"definitions.FileVersionLegalHoldList.type": "object",
	"definitions.FileVersionList.allOf.length": 2,
	"definitions.FileVersionList.allOf[0].$ref": "#/definitions/Pagination",
	"definitions.FileVersionList.allOf[1].properties.entries.items.$ref": "#/definitions/FileVersion",
	"definitions.FileVersionList.allOf[1].properties.entries.type": "array",
	"definitions.FileVersionList.description": "A collection of FileVersions.",
	"definitions.FileVersionList.type": "object",
	"definitions.FileVersionReference.allOf.length": 2,
	"definitions.FileVersionReference.allOf[0].$ref": "#/definitions/Reference",
	"definitions.FileVersionReference.allOf[1].properties.sha1.description": "The sha1 hash of this file.",
	"definitions.FileVersionReference.allOf[1].properties.sha1.type": "string",
	"definitions.FileVersionReference.description": "The version information of the file.",
	"definitions.FileVersionReference.type": "object",
	"definitions.FileVersionRetention.allOf.length": 2,
	"definitions.FileVersionRetention.allOf[0].$ref": "#/definitions/Reference",
	"definitions.FileVersionRetention.allOf[1].properties.applied_at.description": "The time that this file version retention was created.",
	"definitions.FileVersionRetention.allOf[1].properties.applied_at.format": "date-time",
	"definitions.FileVersionRetention.allOf[1].properties.applied_at.type": "string",
	"definitions.FileVersionRetention.allOf[1].properties.disposition_at.description": "The time that the retention period expires on this file version retention.",
	"definitions.FileVersionRetention.allOf[1].properties.disposition_at.format": "date-time",
	"definitions.FileVersionRetention.allOf[1].properties.disposition_at.type": "string",
	"definitions.FileVersionRetention.allOf[1].properties.file.$ref": "#/definitions/FileReference",
	"definitions.FileVersionRetention.allOf[1].properties.file.description": "The file this file version retention was applied to.",
	"definitions.FileVersionRetention.allOf[1].properties.file_version.$ref": "#/definitions/FileVersionReference",
	"definitions.FileVersionRetention.allOf[1].properties.file_version.description": "The file version this file version retention was applied to.",
	"definitions.FileVersionRetention.allOf[1].properties.winning_retention_policy.$ref": "#/definitions/RetentionPolicyReference",
	"definitions.FileVersionRetention.allOf[1].properties.winning_retention_policy.description": "The winning retention policy applied to this file_version_retention. A file version can have multiple retention policies applied.",
	"definitions.FileVersionRetention.description": "A retention policy blocks permanent deletion of content for a specified amount of time. Admins can apply policies to specified folders, or an entire enterprise. A file version retention is a record for a retained file version. To use this feature, you must have the manage retention policies scope enabled for your API key via your application management console. For more information about retention policies, please visit our help documentation.\n\n\t\t\t",
	"definitions.FileVersionRetention.title": "File Version Retention Object",
	"definitions.FileVersionRetention.type": "object",
	"definitions.FileVersionRetentionList.allOf.length": 2,
	"definitions.FileVersionRetentionList.allOf[0].$ref": "#/definitions/Pagination",
	"definitions.FileVersionRetentionList.allOf[1].properties.entries.items.$ref": "#/definitions/FileVersionRetention",
	"definitions.FileVersionRetentionList.allOf[1].properties.entries.type": "array",
	"definitions.FileVersionRetentionList.type": "object",
	"definitions.Folder.allOf.length": 2,
	"definitions.Folder.allOf[0].$ref": "#/definitions/ItemReference",
	"definitions.Folder.allOf[1].properties.allowed_invitee_roles.description": "Folder collaboration collaboration settings allowed by the enterprise administrator.",
	"definitions.Folder.allOf[1].properties.allowed_invitee_roles.items.type": "string",
	"definitions.Folder.allOf[1].properties.allowed_invitee_roles.type": "array",
	"definitions.Folder.allOf[1].properties.allowed_shared_link_access_levels.description": "Access level settings for shared links set by administrator. Can be collaborators, open, or company.",
	"definitions.Folder.allOf[1].properties.allowed_shared_link_access_levels.enum.length": 3,
	"definitions.Folder.allOf[1].properties.allowed_shared_link_access_levels.enum[0]": "collaborators",
	"definitions.Folder.allOf[1].properties.allowed_shared_link_access_levels.enum[1]": "open",
	"definitions.Folder.allOf[1].properties.allowed_shared_link_access_levels.enum[2]": "company",
	"definitions.Folder.allOf[1].properties.allowed_shared_link_access_levels.items.type": "string",
	"definitions.Folder.allOf[1].properties.allowed_shared_link_access_levels.type": "array",
	"definitions.Folder.allOf[1].properties.can_non_owners_invite.description": "Whether non-owners can invite collaborators to this folder.",
	"definitions.Folder.allOf[1].properties.can_non_owners_invite.type": "boolean",
	"definitions.Folder.allOf[1].properties.collections.items.$ref": "#/definitions/Collection",
	"definitions.Folder.allOf[1].properties.collections.type": "array",
	"definitions.Folder.allOf[1].properties.content_created_at.description": "The time the folder or its contents were originally created (according to the uploader).May be null for some folders such as root or trash.",
	"definitions.Folder.allOf[1].properties.content_created_at.format": "date-time",
	"definitions.Folder.allOf[1].properties.content_created_at.type": "string",
	"definitions.Folder.allOf[1].properties.content_modified_at.description": "The time the folder or its contents were last modified (according to the uploader).\nMay be null for some folders such as root or trash.",
	"definitions.Folder.allOf[1].properties.content_modified_at.format": "date-time",
	"definitions.Folder.allOf[1].properties.content_modified_at.type": "string",
	"definitions.Folder.allOf[1].properties.created_at.description": "The time the folder was created.\nMay be null for some folders such as root or trash.",
	"definitions.Folder.allOf[1].properties.created_at.format": "date-time",
	"definitions.Folder.allOf[1].properties.created_at.type": "string",
	"definitions.Folder.allOf[1].properties.created_by.$ref": "#/definitions/UserReference",
	"definitions.Folder.allOf[1].properties.created_by.description": "The user who created this folder.",
	"definitions.Folder.allOf[1].properties.description.description": "The description of the folder.",
	"definitions.Folder.allOf[1].properties.description.type": "string",
	"definitions.Folder.allOf[1].properties.folder_upload_email.$ref": "#/definitions/FolderUploadEmail",
	"definitions.Folder.allOf[1].properties.has_collaborations.description": "Whether this folder has any collaborators.",
	"definitions.Folder.allOf[1].properties.has_collaborations.type": "boolean",
	"definitions.Folder.allOf[1].properties.is_externally_owned.description": "Whether this folder is owned by a user outside of the enterprise",
	"definitions.Folder.allOf[1].properties.is_externally_owned.type": "boolean",
	"definitions.Folder.allOf[1].properties.item_collection.$ref": "#/definitions/ItemCollection",
	"definitions.Folder.allOf[1].properties.item_status.description": "Whether this item is deleted or not.",
	"definitions.Folder.allOf[1].properties.item_status.type": "string",
	"definitions.Folder.allOf[1].properties.modified_by.$ref": "#/definitions/UserReference",
	"definitions.Folder.allOf[1].properties.modified_by.description": "The user who last modified this folder.",
	"definitions.Folder.allOf[1].properties.owned_by.$ref": "#/definitions/UserReference",
	"definitions.Folder.allOf[1].properties.owned_by.description": "The user who owns this folder.",
	"definitions.Folder.allOf[1].properties.parent.$ref": "#/definitions/ItemReference",
	"definitions.Folder.allOf[1].properties.parent.description": "The folder that contains this one.May be null for folders such as root, trash and child folders whose parent is inaccessible.",
	"definitions.Folder.allOf[1].properties.path_collection.$ref": "#/definitions/PathCollection",
	"definitions.Folder.allOf[1].properties.path_collection.description": "The path of folders to this folder, starting at the root.",
	"definitions.Folder.allOf[1].properties.permissions.$ref": "#/definitions/FolderPermissions",
	"definitions.Folder.allOf[1].properties.purged_at.description": "The time the folder or its contents will be purged from the trash.\nMay be null for some folders such as root or trash.",
	"definitions.Folder.allOf[1].properties.purged_at.format": "date-time",
	"definitions.Folder.allOf[1].properties.purged_at.type": "string",
	"definitions.Folder.allOf[1].properties.shared_link.$ref": "#/definitions/SharedLink",
	"definitions.Folder.allOf[1].properties.shared_link.description": "The shared link for this folder. Null if not set.",
	"definitions.Folder.allOf[1].properties.size.description": "The folder size in bytes. Be careful parsing this integer, it can easily go into EE notation: see IEEE754 format.",
	"definitions.Folder.allOf[1].properties.size.format": "int64",
	"definitions.Folder.allOf[1].properties.size.type": "integer",
	"definitions.Folder.allOf[1].properties.sync_state.description": "Whether this folder will be synced by the Box sync clients or not. Can be synced, not_synced, or partially_synced.",
	"definitions.Folder.allOf[1].properties.sync_state.enum.length": 3,
	"definitions.Folder.allOf[1].properties.sync_state.enum[0]": "synced",
	"definitions.Folder.allOf[1].properties.sync_state.enum[1]": "not_synced",
	"definitions.Folder.allOf[1].properties.sync_state.enum[2]": "partially_synced",
	"definitions.Folder.allOf[1].properties.sync_state.type": "string",
	"definitions.Folder.allOf[1].properties.tags.description": "All tags applied to this folder.",
	"definitions.Folder.allOf[1].properties.tags.items.type": "string",
	"definitions.Folder.allOf[1].properties.tags.type": "array",
	"definitions.Folder.allOf[1].properties.trashed_at.description": "The time the folder or its contents were put in the trash.\nMay be null for some folders such as root or trash.",
	"definitions.Folder.allOf[1].properties.trashed_at.format": "date-time",
	"definitions.Folder.allOf[1].properties.trashed_at.type": "string",
	"definitions.Folder.allOf[1].properties.watermark_info.$ref": "#/definitions/WatermarkInfo",
	"definitions.Folder.description": "Folders contain information about the items contained inside of them, including files and other folders. There is also a set of metadata such as who owns the folder and when it was modified that is also returned. When accessing other resources that make reference to folders, a ‘mini folder’ object will be used. The 'mini folder' object will return type, id, sequence_id, etag, and name.",
	"definitions.Folder.title": "Folder Object",
	"definitions.Folder.type": "object",
	"definitions.FolderPermissions.description": "The permissions that the current user has on the folder",
	"definitions.FolderPermissions.properties.can_download.type": "boolean",
	"definitions.FolderPermissions.properties.can_invite_collaborator.type": "boolean",
	"definitions.FolderPermissions.properties.can_rename.type": "boolean",
	"definitions.FolderPermissions.properties.can_set_share_access.type": "boolean",
	"definitions.FolderPermissions.properties.can_share.type": "boolean",
	"definitions.FolderPermissions.properties.can_upload.type": "boolean",
	"definitions.FolderPermissions.properties.cand_delete.type": "boolean",
	"definitions.FolderPermissions.type": "object",
	"definitions.FolderUploadEmail.description": "The upload email address for this folder. Null if not set.",
	"definitions.FolderUploadEmail.properties.access.type": "string",
	"definitions.FolderUploadEmail.properties.email.type": "string",
	"definitions.FolderUploadEmail.type": "object",
	"definitions.Group.allOf.length": 2,
	"definitions.Group.allOf[0].$ref": "#/definitions/GroupReference",
	"definitions.Group.allOf[1].properties.created_at.description": "When this groups was created on Box’s servers",
	"definitions.Group.allOf[1].properties.created_at.format": "date-time",
	"definitions.Group.allOf[1].properties.created_at.type": "string",
	"definitions.Group.allOf[1].properties.description.description": "Human readable description of this Group.  This can be up to 255 characters long. Needs to be accessed via the fields parameter.",
	"definitions.Group.allOf[1].properties.description.type": "string",
	"definitions.Group.allOf[1].properties.external_sync_identifier.description": "An arbitrary identifier that can be used by external group sync tools to link this Box Group to an external group.  Example values of this field could be an Active Directory Object ID or a Google Group ID.  We recommend use of this field in order to avoid issues when group names are updated in either Box or external systems. Needs to be accessed via the fields parameter.",
	"definitions.Group.allOf[1].properties.external_sync_identifier.type": "string",
	"definitions.Group.allOf[1].properties.invitability_level.description": "Specifies who can invite this group to collaborate on folders (Create Collaboration).\nadmins_only Master Admin, Coadmins, group's Group Admin.\nadmins_and_members Admins listed above and group members.\nall_managed_users All managed users in the enterprise.",
	"definitions.Group.allOf[1].properties.invitability_level.enum.length": 3,
	"definitions.Group.allOf[1].properties.invitability_level.enum[0]": "admins_only",
	"definitions.Group.allOf[1].properties.invitability_level.enum[1]": "admins_and_members",
	"definitions.Group.allOf[1].properties.invitability_level.enum[2]": "all_managed_users",
	"definitions.Group.allOf[1].properties.invitability_level.type": "string",
	"definitions.Group.allOf[1].properties.member_viewability_level.description": "Specifies who can view the members of this group (Get Memberships for Group).\nadmins_only Master Admin, Coadmins, group's Group Admin.\nadmins_and_members Admins and group members.\nall_managed_users All managed users in the enterprise.",
	"definitions.Group.allOf[1].properties.member_viewability_level.enum.length": 3,
	"definitions.Group.allOf[1].properties.member_viewability_level.enum[0]": "admins_only",
	"definitions.Group.allOf[1].properties.member_viewability_level.enum[1]": "admins_and_members",
	"definitions.Group.allOf[1].properties.member_viewability_level.enum[2]": "all_managed_users",
	"definitions.Group.allOf[1].properties.member_viewability_level.type": "string",
	"definitions.Group.allOf[1].properties.modified_at.description": "When this group was last updated on the Box servers",
	"definitions.Group.allOf[1].properties.modified_at.format": "date-time",
	"definitions.Group.allOf[1].properties.modified_at.type": "string",
	"definitions.Group.allOf[1].properties.provenance.description": "Keeps track of which external source this group is coming from (e.g. \"Active Directory\", \"Google Groups\", \"Facebook Groups\").  This should be a human-readable identifier up to 255 characters long.  Setting this will also prevent Box users from editing this group directly through Box.  This is desirable for one-way syncing of groups. Needs to be accessed via the fields parameter.",
	"definitions.Group.allOf[1].properties.provenance.type": "string",
	"definitions.Group.description": "Groups contain a set of users, and can be used in place of users in some operations, such as collaborations.",
	"definitions.Group.title": "Group Object",
	"definitions.Group.type": "object",
	"definitions.GroupList.allOf.length": 2,
	"definitions.GroupList.allOf[0].$ref": "#/definitions/Pagination",
	"definitions.GroupList.allOf[1].properties.entries.items.$ref": "#/definitions/Group",
	"definitions.GroupList.allOf[1].properties.entries.type": "array",
	"definitions.GroupList.type": "object",
	"definitions.GroupMembership.allOf.length": 2,
	"definitions.GroupMembership.allOf[0].$ref": "#/definitions/Reference",
	"definitions.GroupMembership.allOf[1].properties.created_at.description": "The time this membership was created.",
	"definitions.GroupMembership.allOf[1].properties.created_at.format": "date-time",
	"definitions.GroupMembership.allOf[1].properties.created_at.type": "string",
	"definitions.GroupMembership.allOf[1].properties.group.$ref": "#/definitions/GroupReference",
	"definitions.GroupMembership.allOf[1].properties.modified_at.description": "The time this membership was last modified.",
	"definitions.GroupMembership.allOf[1].properties.modified_at.format": "date-time",
	"definitions.GroupMembership.allOf[1].properties.modified_at.type": "string",
	"definitions.GroupMembership.allOf[1].properties.role.description": "The role of the user in the group.",
	"definitions.GroupMembership.allOf[1].properties.role.enum.length": 2,
	"definitions.GroupMembership.allOf[1].properties.role.enum[0]": "member",
	"definitions.GroupMembership.allOf[1].properties.role.enum[1]": "admin",
	"definitions.GroupMembership.allOf[1].properties.role.type": "string",
	"definitions.GroupMembership.allOf[1].properties.user.$ref": "#/definitions/UserReference",
	"definitions.GroupMembership.description": "Membership is used to signify that a user is part of a group. Membership can be added, requested, updated and deleted. You can also get all members of a group, or all memberships for a given user.",
	"definitions.GroupMembership.title": "Membership Object",
	"definitions.GroupMembership.type": "object",
	"definitions.GroupMembershipList.allOf.length": 2,
	"definitions.GroupMembershipList.allOf[0].$ref": "#/definitions/Pagination",
	"definitions.GroupMembershipList.allOf[1].properties.entries.items.$ref": "#/definitions/GroupMembership",
	"definitions.GroupMembershipList.allOf[1].properties.entries.type": "array",
	"definitions.GroupMembershipList.type": "object",
	"definitions.GroupReference.allOf.length": 2,
	"definitions.GroupReference.allOf[0].$ref": "#/definitions/Reference",
	"definitions.GroupReference.allOf[1].properties.name.description": "The name of this group",
	"definitions.GroupReference.allOf[1].properties.name.type": "string",
	"definitions.GroupReference.description": "Mini representation of the group, including id and name of group.",
	"definitions.GroupReference.type": "object",
	"definitions.Invite.allOf.length": 2,
	"definitions.Invite.allOf[0].$ref": "#/definitions/Reference",
	"definitions.Invite.allOf[1].properties.actionable_by.$ref": "#/definitions/UserReference",
	"definitions.Invite.allOf[1].properties.created_at.format": "date-time",
	"definitions.Invite.allOf[1].properties.created_at.type": "string",
	"definitions.Invite.allOf[1].properties.invited_by.$ref": "#/definitions/UserReference",
	"definitions.Invite.allOf[1].properties.invited_to.$ref": "#/definitions/Enterprise",
	"definitions.Invite.allOf[1].properties.modified_at.format": "date-time",
	"definitions.Invite.allOf[1].properties.modified_at.type": "string",
	"definitions.Invite.allOf[1].properties.status.type": "string",
	"definitions.Invite.type": "object",
	"definitions.InviteUser.properties.actionable_by.$ref": "#/definitions/UserReference",
	"definitions.InviteUser.properties.enterprise.$ref": "#/definitions/Reference",
	"definitions.InviteUser.type": "object",
	"definitions.ItemCollection.allOf.length": 2,
	"definitions.ItemCollection.allOf[0].$ref": "#/definitions/Pagination",
	"definitions.ItemCollection.allOf[1].properties.entries.items.$ref": "#/definitions/FileReference",
	"definitions.ItemCollection.allOf[1].properties.entries.type": "array",
	"definitions.ItemCollection.description": "A collection of mini file and folder objects contained in this folder.",
	"definitions.ItemCollection.type": "object",
	"definitions.ItemReference.allOf.length": 2,
	"definitions.ItemReference.allOf[0].$ref": "#/definitions/Reference",
	"definitions.ItemReference.allOf[1].properties.etag.description": "A unique string identifying the version of this folder.\nMay be null for some folders such as root or trash.",
	"definitions.ItemReference.allOf[1].properties.etag.type": "string",
	"definitions.ItemReference.allOf[1].properties.name.description": "The name of the folder.",
	"definitions.ItemReference.allOf[1].properties.name.type": "string",
	"definitions.ItemReference.allOf[1].properties.sequence_id.description": "A unique ID for use with the /events endpoint.\nMay be null for some folders such as root or trash.",
	"definitions.ItemReference.allOf[1].properties.sequence_id.type": "string",
	"definitions.ItemReference.description": "It references either a file or a folder",
	"definitions.ItemReference.type": "object",
	"definitions.ItemReferenceList.allOf.length": 2,
	"definitions.ItemReferenceList.allOf[0].$ref": "#/definitions/Pagination",
	"definitions.ItemReferenceList.allOf[1].properties.entries.items.$ref": "#/definitions/ItemReference",
	"definitions.ItemReferenceList.allOf[1].properties.entries.type": "array",
	"definitions.ItemReferenceList.type": "object",
	"definitions.LegalHoldPolicy.allOf.length": 2,
	"definitions.LegalHoldPolicy.allOf[0].$ref": "#/definitions/Reference",
	"definitions.LegalHoldPolicy.allOf[1].properties.assignment_count.$ref": "#/definitions/AssignmentCounts",
	"definitions.LegalHoldPolicy.allOf[1].properties.created_at.description": "Time the Policy was created.",
	"definitions.LegalHoldPolicy.allOf[1].properties.created_at.format": "date-time",
	"definitions.LegalHoldPolicy.allOf[1].properties.created_at.type": "string",
	"definitions.LegalHoldPolicy.allOf[1].properties.created_by.$ref": "#/definitions/UserReference",
	"definitions.LegalHoldPolicy.allOf[1].properties.created_by.description": "User who created this Policy.",
	"definitions.LegalHoldPolicy.allOf[1].properties.deleted_at.description": "Time that the policy release request was sent.",
	"definitions.LegalHoldPolicy.allOf[1].properties.deleted_at.format": "date-time",
	"definitions.LegalHoldPolicy.allOf[1].properties.deleted_at.type": "string",
	"definitions.LegalHoldPolicy.allOf[1].properties.description.description": "The type and id of the content that is under retention. The type can either be folder or enterprise.",
	"definitions.LegalHoldPolicy.allOf[1].properties.description.type": "string",
	"definitions.LegalHoldPolicy.allOf[1].properties.filter_ended_at.description": "User-specified, optional date filter applies to Custodian assignments only.",
	"definitions.LegalHoldPolicy.allOf[1].properties.filter_ended_at.format": "date-time",
	"definitions.LegalHoldPolicy.allOf[1].properties.filter_ended_at.type": "string",
	"definitions.LegalHoldPolicy.allOf[1].properties.filter_started_at.description": "User-specified, optional date filter applies to Custodian assignments only.",
	"definitions.LegalHoldPolicy.allOf[1].properties.filter_started_at.format": "date-time",
	"definitions.LegalHoldPolicy.allOf[1].properties.filter_started_at.type": "string",
	"definitions.LegalHoldPolicy.allOf[1].properties.modified_at.description": "Time that the Policy itself was modified. Does not update when assignments are added or removed.",
	"definitions.LegalHoldPolicy.allOf[1].properties.modified_at.format": "date-time",
	"definitions.LegalHoldPolicy.allOf[1].properties.modified_at.type": "string",
	"definitions.LegalHoldPolicy.allOf[1].properties.policy_name.description": "Name of the Policy. This is limited to 254 characters.",
	"definitions.LegalHoldPolicy.allOf[1].properties.policy_name.type": "string",
	"definitions.LegalHoldPolicy.allOf[1].properties.release_notes.description": "Notes around why the policy was released. Optional property with a 500 character limit.",
	"definitions.LegalHoldPolicy.allOf[1].properties.release_notes.type": "string",
	"definitions.LegalHoldPolicy.allOf[1].properties.status.enum.length": 4,
	"definitions.LegalHoldPolicy.allOf[1].properties.status.enum[0]": "active",
	"definitions.LegalHoldPolicy.allOf[1].properties.status.enum[1]": "applying",
	"definitions.LegalHoldPolicy.allOf[1].properties.status.enum[2]": "releasing",
	"definitions.LegalHoldPolicy.allOf[1].properties.status.enum[3]": "released",
	"definitions.LegalHoldPolicy.allOf[1].properties.status.type": "string",
	"definitions.LegalHoldPolicy.description": "Legal Hold Policy information describes the basic characteristics of the Policy, such as name, description, and filter dates.",
	"definitions.LegalHoldPolicy.title": "Legal Hold Policy object",
	"definitions.LegalHoldPolicy.type": "object",
	"definitions.LegalHoldPolicyAssignment.allOf.length": 2,
	"definitions.LegalHoldPolicyAssignment.allOf[0].$ref": "#/definitions/Reference",
	"definitions.LegalHoldPolicyAssignment.allOf[1].properties.assigned_at.description": "Time the Assignment was created.",
	"definitions.LegalHoldPolicyAssignment.allOf[1].properties.assigned_at.format": "date-time",
	"definitions.LegalHoldPolicyAssignment.allOf[1].properties.assigned_at.type": "string",
	"definitions.LegalHoldPolicyAssignment.allOf[1].properties.assigned_by.$ref": "#/definitions/UserReference",
	"definitions.LegalHoldPolicyAssignment.allOf[1].properties.assigned_by.description": "User who created this assignment.",
	"definitions.LegalHoldPolicyAssignment.allOf[1].properties.assigned_to.$ref": "#/definitions/ItemReference",
	"definitions.LegalHoldPolicyAssignment.allOf[1].properties.assigned_to.description": "The entity that this is assigned to. Includes type and ID.",
	"definitions.LegalHoldPolicyAssignment.allOf[1].properties.deleted_at.description": "Time that the Assignment release request was sent. ",
	"definitions.LegalHoldPolicyAssignment.allOf[1].properties.deleted_at.format": "date-time",
	"definitions.LegalHoldPolicyAssignment.allOf[1].properties.deleted_at.type": "string",
	"definitions.LegalHoldPolicyAssignment.allOf[1].properties.legal_hold_policy.$ref": "#/definitions/RetentionPolicyReference",
	"definitions.LegalHoldPolicyAssignment.allOf[1].properties.legal_hold_policy.description": "The Policy that this Assignment is part of.",
	"definitions.LegalHoldPolicyAssignment.description": "Legal Hold Assignments are used to assign Legal Hold Policies to Custodians, Folders, Files, or File Versions. Creating a Legal Hold Assignment puts a hold on the File-Versions that belong to the Assignment's 'apply-to' entity.",
	"definitions.LegalHoldPolicyAssignment.title": "Legal Hold Policy Assignment object",
	"definitions.LegalHoldPolicyAssignment.type": "object",
	"definitions.LegalHoldPolicyAssignmentList.allOf.length": 2,
	"definitions.LegalHoldPolicyAssignmentList.allOf[0].$ref": "#/definitions/Pagination",
	"definitions.LegalHoldPolicyAssignmentList.allOf[1].properties.entries.items.$ref": "#/definitions/LegalHoldPolicyAssignment",
	"definitions.LegalHoldPolicyAssignmentList.allOf[1].properties.entries.type": "array",
	"definitions.LegalHoldPolicyAssignmentList.type": "object",
	"definitions.LegalHoldPolicyList.allOf.length": 2,
	"definitions.LegalHoldPolicyList.allOf[0].$ref": "#/definitions/Pagination",
	"definitions.LegalHoldPolicyList.allOf[1].properties.entries.items.$ref": "#/definitions/LegalHoldPolicy",
	"definitions.LegalHoldPolicyList.allOf[1].properties.entries.type": "array",
	"definitions.LegalHoldPolicyList.type": "object",
	"definitions.Lock.allOf.length": 2,
	"definitions.Lock.allOf[0].$ref": "#/definitions/Reference",
	"definitions.Lock.allOf[1].properties.created_at.format": "date-time",
	"definitions.Lock.allOf[1].properties.created_at.type": "string",
	"definitions.Lock.allOf[1].properties.created_by.$ref": "#/definitions/UserReference",
	"definitions.Lock.allOf[1].properties.expired_at.format": "date-time",
	"definitions.Lock.allOf[1].properties.expired_at.type": "string",
	"definitions.Lock.allOf[1].properties.is_download_prevented.type": "boolean",
	"definitions.Lock.description": "The lock held on the file.",
	"definitions.Lock.type": "object",
	"definitions.MarkerPagination.properties.limit.format": "int64",
	"definitions.MarkerPagination.properties.limit.type": "integer",
	"definitions.MarkerPagination.properties.next_marker.type": "string",
	"definitions.MarkerPagination.properties.prev_marker.type": "string",
	"definitions.MarkerPagination.type": "object",
	"definitions.Metadata.description": "Metadata can be used for many purposes. Enterprises may want to have a better way to organize their digital assets for their marketing teams or developers may want to provide advanced content functionality such as facilitating workflows or approvals. Metadata is also visible in the Box Web Application. To learn more, please visit the help documentation.\nTemplates\nMetadata that belongs to a file/folder is grouped by templates. Templates allow the metadata service to provide a multitude of services, such as pre-defining sets of key:value pairs or schema enforcement on specific fields. For example, a marketingCollateral template may define where and when specific marketing content should be used. You can also see the representation of the template in the Box web application while navigating to a file preview. Currently, metadata associated with folders does not show in the web application.\nEach file/folder can have multiple distinct template instances associated with it, such as a marketingCollateral and retentionPolicy template instances. Template instances are also grouped by scopes. Currently, the only scopes support are enterprise and global. Enterprise scopes are defined on a per enterprises basis, whereas global scopes are Box application-wide. Attribute order within template instances is not guaranteed.\nCurrently, there are four attributes supported by templates: string, enum, float, and  date (RFC 3339).\n\nGlobal Properties Template\nIn addition to enterprise scoped templates, every file on Box has access to the global properties template. The Properties template is a bucket of free form key:value string pairs, with no additional schema associated with it. Properties are ideal for scenarios where applications want to write metadata to file objects in a flexible way, without pre-defined template structure.\nProperties follow all the conventions of standard templates, except for being located at a different endpoint. All requests made to the properties template must be made to /files/{file_id}/metadata/global/properties.",
	"definitions.Metadata.example.test": "testvalue",
	"definitions.Metadata.title": "Metadata Object",
	"definitions.Metadata.type": "object",
	"definitions.MetadataList.allOf.length": 2,
	"definitions.MetadataList.allOf[0].$ref": "#/definitions/Pagination",
	"definitions.MetadataList.allOf[1].properties.entries.items.$ref": "#/definitions/Metadata",
	"definitions.MetadataList.allOf[1].properties.entries.type": "array",
	"definitions.MetadataList.description": "A collection of Metadata objects",
	"definitions.MetadataList.type": "object",
	"definitions.MetadataTemplate.description": "Metadata that belongs to a file or folder is grouped by templates. Templates allow the metadata service to provide a multitude of services, such as pre-defining sets of key:value pairs or schema enforcement on specific fields.",
	"definitions.MetadataTemplate.properties.displayName.description": "The display name of the template. The character limit is 4096.",
	"definitions.MetadataTemplate.properties.displayName.type": "string",
	"definitions.MetadataTemplate.properties.fields.description": "The ordered set of key:value pairs for the template.",
	"definitions.MetadataTemplate.properties.fields.items.$ref": "#/definitions/TemplateFields",
	"definitions.MetadataTemplate.properties.fields.type": "array",
	"definitions.MetadataTemplate.properties.hidden.description": "Whether this template is hidden in the UI",
	"definitions.MetadataTemplate.properties.hidden.type": "boolean",
	"definitions.MetadataTemplate.properties.scope.description": "The scope of the object.",
	"definitions.MetadataTemplate.properties.scope.type": "string",
	"definitions.MetadataTemplate.properties.templateKey.description": "A unique identifier for the template. The identifier must be unique across the scope of the enterprise to which the metadata template is being applied to. Defaults to a string derived from the displayName if no value is provided.",
	"definitions.MetadataTemplate.properties.templateKey.type": "string",
	"definitions.MetadataTemplate.title": "Metadata Template Object",
	"definitions.MetadataTemplate.type": "object",
	"definitions.MetadataTemplateList.allOf.length": 2,
	"definitions.MetadataTemplateList.allOf[0].$ref": "#/definitions/MarkerPagination",
	"definitions.MetadataTemplateList.allOf[1].properties.entries.items.$ref": "#/definitions/MetadataTemplate",
	"definitions.MetadataTemplateList.allOf[1].properties.entries.type": "array",
	"definitions.MetadataTemplateList.description": "A collection Metadata templates",
	"definitions.MetadataTemplateList.type": "object",
	"definitions.ObjectList.allOf.length": 2,
	"definitions.ObjectList.allOf[0].$ref": "#/definitions/Pagination",
	"definitions.ObjectList.allOf[1].properties.entries.items.type": "object",
	"definitions.ObjectList.allOf[1].properties.entries.type": "array",
	"definitions.ObjectList.type": "object",
	"definitions.Pagination.properties.limit.format": "int64",
	"definitions.Pagination.properties.limit.type": "integer",
	"definitions.Pagination.properties.offset.format": "int64",
	"definitions.Pagination.properties.offset.type": "integer",
	"definitions.Pagination.properties.order.items.properties.by.type": "string",
	"definitions.Pagination.properties.order.items.properties.direction.type": "string",
	"definitions.Pagination.properties.order.items.type": "object",
	"definitions.Pagination.properties.order.type": "array",
	"definitions.Pagination.properties.total_count.format": "int64",
	"definitions.Pagination.properties.total_count.type": "integer",
	"definitions.Pagination.type": "object",
	"definitions.PathCollection.allOf.length": 2,
	"definitions.PathCollection.allOf[0].$ref": "#/definitions/Pagination",
	"definitions.PathCollection.allOf[1].properties.entries.items.$ref": "#/definitions/ItemReference",
	"definitions.PathCollection.allOf[1].properties.entries.type": "array",
	"definitions.PathCollection.description": "The path of folders, starting at the root.",
	"definitions.PathCollection.type": "object",
	"definitions.RealtimeServer.properties.max_retries.format": "int64",
	"definitions.RealtimeServer.properties.max_retries.type": "integer",
	"definitions.RealtimeServer.properties.retry_timeout.format": "int64",
	"definitions.RealtimeServer.properties.retry_timeout.type": "integer",
	"definitions.RealtimeServer.properties.ttl.format": "int64",
	"definitions.RealtimeServer.properties.ttl.type": "integer",
	"definitions.RealtimeServer.properties.type.type": "string",
	"definitions.RealtimeServer.properties.url.type": "string",
	"definitions.RealtimeServer.type": "object",
	"definitions.RealtimeServerList.allOf.length": 2,
	"definitions.RealtimeServerList.allOf[0].$ref": "#/definitions/ChunkPagination",
	"definitions.RealtimeServerList.allOf[1].properties.entries.items.$ref": "#/definitions/RealtimeServer",
	"definitions.RealtimeServerList.allOf[1].properties.entries.type": "array",
	"definitions.RealtimeServerList.type": "object",
	"definitions.Reference.properties.id.type": "string",
	"definitions.Reference.properties.type.enum.length": 28,
	"definitions.Reference.properties.type.enum[0]": "folder",
	"definitions.Reference.properties.type.enum[10]": "task_assignment",
	"definitions.Reference.properties.type.enum[11]": "event",
	"definitions.Reference.properties.type.enum[12]": "realtime_server",
	"definitions.Reference.properties.type.enum[13]": "webhook_event",
	"definitions.Reference.properties.type.enum[14]": "webhook",
	"definitions.Reference.properties.type.enum[15]": "enterprise",
	"definitions.Reference.properties.type.enum[16]": "invite",
	"definitions.Reference.properties.type.enum[17]": "email_alias",
	"definitions.Reference.properties.type.enum[18]": "group",
	"definitions.Reference.properties.type.enum[19]": "group_membership",
	"definitions.Reference.properties.type.enum[1]": "file",
	"definitions.Reference.properties.type.enum[20]": "device_pinner",
	"definitions.Reference.properties.type.enum[21]": "retention_policy",
	"definitions.Reference.properties.type.enum[22]": "retention_policy_assignment",
	"definitions.Reference.properties.type.enum[23]": "file_version_retention",
	"definitions.Reference.properties.type.enum[24]": "legal_hold_policy",
	"definitions.Reference.properties.type.enum[25]": "legal_hold_policy_assignment",
	"definitions.Reference.properties.type.enum[26]": "legal_hold",
	"definitions.Reference.properties.type.enum[27]": "upload_session",
	"definitions.Reference.properties.type.enum[2]": "user",
	"definitions.Reference.properties.type.enum[3]": "file_version",
	"definitions.Reference.properties.type.enum[4]": "lock",
	"definitions.Reference.properties.type.enum[5]": "collaboration",
	"definitions.Reference.properties.type.enum[6]": "comment",
	"definitions.Reference.properties.type.enum[7]": "task",
	"definitions.Reference.properties.type.enum[8]": "web_link",
	"definitions.Reference.properties.type.enum[9]": "collection",
	"definitions.Reference.properties.type.type": "string",
	"definitions.Reference.type": "object",
	"definitions.RetentionPolicy.allOf.length": 2,
	"definitions.RetentionPolicy.allOf[0].$ref": "#/definitions/RetentionPolicyReference",
	"definitions.RetentionPolicy.allOf[1].properties.created_at.description": "The time that the retention policy was created.",
	"definitions.RetentionPolicy.allOf[1].properties.created_at.format": "date-time",
	"definitions.RetentionPolicy.allOf[1].properties.created_at.type": "string",
	"definitions.RetentionPolicy.allOf[1].properties.created_by.$ref": "#/definitions/UserReference",
	"definitions.RetentionPolicy.allOf[1].properties.created_by.description": "A mini user object representing the user that created the retention policy.",
	"definitions.RetentionPolicy.allOf[1].properties.disposition_action.description": "The disposition action of the retention policy. This actioncan be permanently_delete, which will cause the content retained by the policy to be permanently deleted, or remove_retention, which will lift the retention policy from the content, allowing it to be deleted by users, once the retention policy time period has passed.",
	"definitions.RetentionPolicy.allOf[1].properties.disposition_action.enum.length": 2,
	"definitions.RetentionPolicy.allOf[1].properties.disposition_action.enum[0]": "permanently_delete",
	"definitions.RetentionPolicy.allOf[1].properties.disposition_action.enum[1]": "remove_retention",
	"definitions.RetentionPolicy.allOf[1].properties.disposition_action.type": "string",
	"definitions.RetentionPolicy.allOf[1].properties.modified_at.description": "The time that the retention policy was last modified.",
	"definitions.RetentionPolicy.allOf[1].properties.modified_at.format": "date-time",
	"definitions.RetentionPolicy.allOf[1].properties.modified_at.type": "string",
	"definitions.RetentionPolicy.allOf[1].properties.policy_type.description": "The type of the retention policy. A retention policy type can either be finite, where a specific amount of time to retain the content is known upfront, or indefinite, where the amount of time to retain the content is still unknown.",
	"definitions.RetentionPolicy.allOf[1].properties.policy_type.enum.length": 2,
	"definitions.RetentionPolicy.allOf[1].properties.policy_type.enum[0]": "finite",
	"definitions.RetentionPolicy.allOf[1].properties.policy_type.enum[1]": "indefinite",
	"definitions.RetentionPolicy.allOf[1].properties.policy_type.type": "string",
	"definitions.RetentionPolicy.allOf[1].properties.retention_length.description": "The length of the retention policy. This length specifies the duration in days that the retention policy will beactive for after being assigned to content.",
	"definitions.RetentionPolicy.allOf[1].properties.retention_length.format": "int64",
	"definitions.RetentionPolicy.allOf[1].properties.retention_length.type": "integer",
	"definitions.RetentionPolicy.allOf[1].properties.status.description": "The status of a retention policy. The status of a policy will be active, unless explicitly retired by an administrator, in which case the status will be retired. Once a policyhas been retired, it cannot become active again.",
	"definitions.RetentionPolicy.allOf[1].properties.status.enum.length": 2,
	"definitions.RetentionPolicy.allOf[1].properties.status.enum[0]": "active",
	"definitions.RetentionPolicy.allOf[1].properties.status.enum[1]": "retired",
	"definitions.RetentionPolicy.allOf[1].properties.status.type": "string",
	"definitions.RetentionPolicy.description": "A retention policy blocks permanent deletion of content for a specified amount of time. Admins can create retention policies and then later assign them to specific folders or their entire enterprise.  To use this feature, you must have the manage retention policies scope enabled for your API key via your application management console. For more information about retention policies, please visit our help documentation. \n\n\t\t\t",
	"definitions.RetentionPolicy.title": "Retention Policy Object",
	"definitions.RetentionPolicy.type": "object",
	"definitions.RetentionPolicyAssignment.allOf.length": 2,
	"definitions.RetentionPolicyAssignment.allOf[0].$ref": "#/definitions/Reference",
	"definitions.RetentionPolicyAssignment.allOf[1].properties.assigned_at.description": "The time that the retention policy assignment was created.",
	"definitions.RetentionPolicyAssignment.allOf[1].properties.assigned_at.format": "date-time",
	"definitions.RetentionPolicyAssignment.allOf[1].properties.assigned_at.type": "string",
	"definitions.RetentionPolicyAssignment.allOf[1].properties.assigned_by.$ref": "#/definitions/UserReference",
	"definitions.RetentionPolicyAssignment.allOf[1].properties.assigned_by.description": "A mini user object representing the user that created the retention policy assignment.",
	"definitions.RetentionPolicyAssignment.allOf[1].properties.assigned_to.$ref": "#/definitions/ItemReference",
	"definitions.RetentionPolicyAssignment.allOf[1].properties.assigned_to.description": "The type and id of the content that is under retention. The type can either be folder or enterprise.",
	"definitions.RetentionPolicyAssignment.allOf[1].properties.retention_policy.$ref": "#/definitions/RetentionPolicyReference",
	"definitions.RetentionPolicyAssignment.allOf[1].properties.retention_policy.description": "A mini retention policy object representing the retention policy that has been assigned to this content.",
	"definitions.RetentionPolicyAssignment.description": "The retention policy assignment endpoint provides a way for admins to apply a retention policy on a per-folder basis, or place a blanket policy over the entire enterprise.\n\n\t\t\t",
	"definitions.RetentionPolicyAssignment.title": "Retention Policy Assignment Object",
	"definitions.RetentionPolicyAssignment.type": "object",
	"definitions.RetentionPolicyAssignmentList.properties.entries.items.$ref": "#/definitions/RetentionPolicyAssignment",
	"definitions.RetentionPolicyAssignmentList.properties.entries.type": "array",
	"definitions.RetentionPolicyAssignmentList.type": "object",
	"definitions.RetentionPolicyList.properties.entries.items.$ref": "#/definitions/RetentionPolicy",
	"definitions.RetentionPolicyList.properties.entries.type": "array",
	"definitions.RetentionPolicyList.type": "object",
	"definitions.RetentionPolicyReference.allOf.length": 2,
	"definitions.RetentionPolicyReference.allOf[0].$ref": "#/definitions/Reference",
	"definitions.RetentionPolicyReference.allOf[1].properties.policy_name.description": "The name given to the retention policy",
	"definitions.RetentionPolicyReference.allOf[1].properties.policy_name.type": "string",
	"definitions.RetentionPolicyReference.description": "Mini representation of the retention policy",
	"definitions.RetentionPolicyReference.type": "object",
	"definitions.SharedLink.properties.access.type": "string",
	"definitions.SharedLink.properties.download_count.format": "int64",
	"definitions.SharedLink.properties.download_count.type": "integer",
	"definitions.SharedLink.properties.download_url.type": "string",
	"definitions.SharedLink.properties.effective_access.type": "string",
	"definitions.SharedLink.properties.is_password_enabled.type": "boolean",
	"definitions.SharedLink.properties.password.type": "string",
	"definitions.SharedLink.properties.permissions.$ref": "#/definitions/SharedLinkPermissions",
	"definitions.SharedLink.properties.preview_count.format": "int64",
	"definitions.SharedLink.properties.preview_count.type": "integer",
	"definitions.SharedLink.properties.unshared_at.type": "string",
	"definitions.SharedLink.properties.url.type": "string",
	"definitions.SharedLink.properties.vanity_url.type": "string",
	"definitions.SharedLink.type": "object",
	"definitions.SharedLinkPermissions.properties.can_download.type": "boolean",
	"definitions.SharedLinkPermissions.properties.can_preview.type": "boolean",
	"definitions.SharedLinkPermissions.type": "object",
	"definitions.Task.allOf.length": 2,
	"definitions.Task.allOf[0].$ref": "#/definitions/Reference",
	"definitions.Task.allOf[1].properties.action.description": "The action the task assignee will be prompted to do. Must be review",
	"definitions.Task.allOf[1].properties.action.enum.length": 1,
	"definitions.Task.allOf[1].properties.action.enum[0]": "review",
	"definitions.Task.allOf[1].properties.action.type": "string",
	"definitions.Task.allOf[1].properties.created_at.description": "When this task was created",
	"definitions.Task.allOf[1].properties.created_at.format": "date-time",
	"definitions.Task.allOf[1].properties.created_at.type": "string",
	"definitions.Task.allOf[1].properties.created_by.$ref": "#/definitions/UserReference",
	"definitions.Task.allOf[1].properties.created_by.description": "The user who created this task",
	"definitions.Task.allOf[1].properties.due_at.description": "The date at which this task is due",
	"definitions.Task.allOf[1].properties.due_at.format": "date-time",
	"definitions.Task.allOf[1].properties.due_at.type": "string",
	"definitions.Task.allOf[1].properties.is_completed.description": "Whether or not this task has been completed",
	"definitions.Task.allOf[1].properties.is_completed.type": "boolean",
	"definitions.Task.allOf[1].properties.item.$ref": "#/definitions/FileReference",
	"definitions.Task.allOf[1].properties.message.description": "A message that will be included with this task",
	"definitions.Task.allOf[1].properties.message.type": "string",
	"definitions.Task.allOf[1].properties.task_assignment_collection.$ref": "#/definitions/TaskAssignmentList",
	"definitions.Task.description": "Tasks enabled file-centric workflows in Box. User can create tasks on files and assign them to collaborators on Box. You can read more about tasks in Box here.\n\n\t\t\t",
	"definitions.Task.title": "Task Object",
	"definitions.Task.type": "object",
	"definitions.TaskAssignment.allOf.length": 2,
	"definitions.TaskAssignment.allOf[0].$ref": "#/definitions/Reference",
	"definitions.TaskAssignment.allOf[1].properties.assigned_at.description": "The date at which this task assignment was assigned",
	"definitions.TaskAssignment.allOf[1].properties.assigned_at.format": "date-time",
	"definitions.TaskAssignment.allOf[1].properties.assigned_at.type": "string",
	"definitions.TaskAssignment.allOf[1].properties.assigned_by.$ref": "#/definitions/UserReference",
	"definitions.TaskAssignment.allOf[1].properties.assigned_by.description": "The user who assigned this task assignment",
	"definitions.TaskAssignment.allOf[1].properties.assigned_to.$ref": "#/definitions/UserReference",
	"definitions.TaskAssignment.allOf[1].properties.completed_at.description": "The date at which this task assignment was completed",
	"definitions.TaskAssignment.allOf[1].properties.completed_at.format": "date-time",
	"definitions.TaskAssignment.allOf[1].properties.completed_at.type": "string",
	"definitions.TaskAssignment.allOf[1].properties.item.$ref": "#/definitions/FileReference",
	"definitions.TaskAssignment.allOf[1].properties.message.description": "A message that will be included with this task assignment",
	"definitions.TaskAssignment.allOf[1].properties.message.type": "string",
	"definitions.TaskAssignment.allOf[1].properties.reminded_at.description": "The date at which this task assignment was reminded",
	"definitions.TaskAssignment.allOf[1].properties.reminded_at.format": "date-time",
	"definitions.TaskAssignment.allOf[1].properties.reminded_at.type": "string",
	"definitions.TaskAssignment.allOf[1].properties.resolution_state.description": "State of this assignment (complete/incomplete)",
	"definitions.TaskAssignment.allOf[1].properties.resolution_state.enum.length": 4,
	"definitions.TaskAssignment.allOf[1].properties.resolution_state.enum[0]": "completed",
	"definitions.TaskAssignment.allOf[1].properties.resolution_state.enum[1]": "incomplete",
	"definitions.TaskAssignment.allOf[1].properties.resolution_state.enum[2]": "approved",
	"definitions.TaskAssignment.allOf[1].properties.resolution_state.enum[3]": "rejected",
	"definitions.TaskAssignment.allOf[1].properties.resolution_state.type": "string",
	"definitions.TaskAssignment.type": "object",
	"definitions.TaskAssignmentList.allOf.length": 2,
	"definitions.TaskAssignmentList.allOf[0].$ref": "#/definitions/Pagination",
	"definitions.TaskAssignmentList.allOf[1].properties.entries.items.$ref": "#/definitions/TaskAssignment",
	"definitions.TaskAssignmentList.allOf[1].properties.entries.type": "array",
	"definitions.TaskAssignmentList.description": "A collection Task Assignment.",
	"definitions.TaskAssignmentList.type": "object",
	"definitions.TaskList.allOf.length": 2,
	"definitions.TaskList.allOf[0].$ref": "#/definitions/Pagination",
	"definitions.TaskList.allOf[1].properties.entries.items.$ref": "#/definitions/Task",
	"definitions.TaskList.allOf[1].properties.entries.type": "array",
	"definitions.TaskList.description": "A collection Tasks.",
	"definitions.TaskList.type": "object",
	"definitions.TemplateFields.properties.description.description": "A description of the field. The character limit is 4096. All characters are allowed.",
	"definitions.TemplateFields.properties.description.type": "string",
	"definitions.TemplateFields.properties.displayName.description": "The display name of the field. The character limit is 4096. All characters are allowed.",
	"definitions.TemplateFields.properties.displayName.type": "string",
	"definitions.TemplateFields.properties.hidden.type": "boolean",
	"definitions.TemplateFields.properties.key.description": "A unique identifier for the field. The identifier must be unique within the template to which it belongs. The character limit is 256. All characters are allowed.",
	"definitions.TemplateFields.properties.key.type": "string",
	"definitions.TemplateFields.properties.options.items.properties.key.type": "string",
	"definitions.TemplateFields.properties.options.items.type": "object",
	"definitions.TemplateFields.properties.options.type": "array",
	"definitions.TemplateFields.properties.type.description": "The data type of the field's value.",
	"definitions.TemplateFields.properties.type.enum.length": 4,
	"definitions.TemplateFields.properties.type.enum[0]": "string",
	"definitions.TemplateFields.properties.type.enum[1]": "enum",
	"definitions.TemplateFields.properties.type.enum[2]": "float",
	"definitions.TemplateFields.properties.type.enum[3]": "date",
	"definitions.TemplateFields.properties.type.type": "string",
	"definitions.TemplateFields.type": "object",
	"definitions.UpdateMetadata.example.length": 1,
	"definitions.UpdateMetadata.example[0].op": "replace",
	"definitions.UpdateMetadata.example[0].path": "/test",
	"definitions.UpdateMetadata.example[0].value": "changedvalue",
	"definitions.UpdateMetadata.items.properties.from.description": "Required for move or copy. The path that designates the source key, in the format of a JSON-Pointer, formatted in the same way as path. Used in conjunction with path: from specifies the source, path specifies the destination.",
	"definitions.UpdateMetadata.items.properties.from.type": "string",
	"definitions.UpdateMetadata.items.properties.op.description": "The operation type. Must be add, replace, remove , test, move, or copy.",
	"definitions.UpdateMetadata.items.properties.op.enum.length": 6,
	"definitions.UpdateMetadata.items.properties.op.enum[0]": "add",
	"definitions.UpdateMetadata.items.properties.op.enum[1]": "replace",
	"definitions.UpdateMetadata.items.properties.op.enum[2]": "remove",
	"definitions.UpdateMetadata.items.properties.op.enum[3]": "test",
	"definitions.UpdateMetadata.items.properties.op.enum[4]": "move",
	"definitions.UpdateMetadata.items.properties.op.enum[5]": "copy",
	"definitions.UpdateMetadata.items.properties.op.type": "string",
	"definitions.UpdateMetadata.items.properties.path.description": "The path that designates the key, in the format of a JSON-Pointer. Since all keys are located at the root of the metadata instance, the key must be prefixed with a /. Special characters ~ and / in the key must be escaped according to JSON-Pointer specification. The value at the path must exist for the operation to be successful.",
	"definitions.UpdateMetadata.items.properties.path.type": "string",
	"definitions.UpdateMetadata.items.properties.value.description": "The value to be set or tested. Required for add, replace, and test operations. For add, if value already exists, then previous value will be overwritten by the new value. For replace, the metadata value must exist before replacing.For test, the value of the existing metadata instance must match the specified value.",
	"definitions.UpdateMetadata.items.properties.value.type": "string",
	"definitions.UpdateMetadata.items.required.length": 2,
	"definitions.UpdateMetadata.items.required[0]": "op",
	"definitions.UpdateMetadata.items.required[1]": "path",
	"definitions.UpdateMetadata.items.type": "object",
	"definitions.UpdateMetadata.type": "array",
	"definitions.UpdateMetadataTemplate.example.length": 1,
	"definitions.UpdateMetadataTemplate.example[0].data.description": "Test",
	"definitions.UpdateMetadataTemplate.example[0].fieldKey": "test",
	"definitions.UpdateMetadataTemplate.example[0].op": "editField",
	"definitions.UpdateMetadataTemplate.items.properties.data.description": "The data for the operation.  Can vary depending on the operation.",
	"definitions.UpdateMetadataTemplate.items.properties.data.type": "object",
	"definitions.UpdateMetadataTemplate.items.properties.enumOptionKeys.description": "For operations that affect multiple enum options, the keys of the enum options to be affected.",
	"definitions.UpdateMetadataTemplate.items.properties.enumOptionKeys.items.type": "string",
	"definitions.UpdateMetadataTemplate.items.properties.enumOptionKeys.type": "array",
	"definitions.UpdateMetadataTemplate.items.properties.fieldKey.description": "For operations that affect a specific field, the key of the field to be affected.",
	"definitions.UpdateMetadataTemplate.items.properties.fieldKey.type": "string",
	"definitions.UpdateMetadataTemplate.items.properties.fieldKeys.description": "For operations that affect multiple fields, the keys of the fields to be affected.",
	"definitions.UpdateMetadataTemplate.items.properties.fieldKeys.items.type": "string",
	"definitions.UpdateMetadataTemplate.items.properties.fieldKeys.type": "array",
	"definitions.UpdateMetadataTemplate.items.properties.op.description": "The operation name.",
	"definitions.UpdateMetadataTemplate.items.properties.op.enum.length": 9,
	"definitions.UpdateMetadataTemplate.items.properties.op.enum[0]": "addEnumOption",
	"definitions.UpdateMetadataTemplate.items.properties.op.enum[1]": "addField",
	"definitions.UpdateMetadataTemplate.items.properties.op.enum[2]": "editEnumOption",
	"definitions.UpdateMetadataTemplate.items.properties.op.enum[3]": "editField",
	"definitions.UpdateMetadataTemplate.items.properties.op.enum[4]": "editTemplate",
	"definitions.UpdateMetadataTemplate.items.properties.op.enum[5]": "removeEnumOption",
	"definitions.UpdateMetadataTemplate.items.properties.op.enum[6]": "removeField",
	"definitions.UpdateMetadataTemplate.items.properties.op.enum[7]": "reorderEnumOptions",
	"definitions.UpdateMetadataTemplate.items.properties.op.enum[8]": "reorderFields",
	"definitions.UpdateMetadataTemplate.items.properties.op.type": "string",
	"definitions.UpdateMetadataTemplate.items.required.length": 1,
	"definitions.UpdateMetadataTemplate.items.required[0]": "op",
	"definitions.UpdateMetadataTemplate.items.type": "object",
	"definitions.UpdateMetadataTemplate.type": "array",
	"definitions.User.allOf.length": 2,
	"definitions.User.allOf[0].$ref": "#/definitions/UserReference",
	"definitions.User.allOf[1].properties.address.description": "The user’s address.",
	"definitions.User.allOf[1].properties.address.type": "string",
	"definitions.User.allOf[1].properties.avatar_url.description": "URL of this user’s avatar image.",
	"definitions.User.allOf[1].properties.avatar_url.type": "string",
	"definitions.User.allOf[1].properties.can_see_managed_users.description": "Whether this user can see other enterprise users in her contact list.",
	"definitions.User.allOf[1].properties.can_see_managed_users.type": "boolean",
	"definitions.User.allOf[1].properties.created_at.description": "The time this user was created.",
	"definitions.User.allOf[1].properties.created_at.format": "date-time",
	"definitions.User.allOf[1].properties.created_at.type": "string",
	"definitions.User.allOf[1].properties.enterprise.$ref": "#/definitions/Enterprise",
	"definitions.User.allOf[1].properties.hostname.description": "The root (protocol, subdomain, domain) of any links that need to be generated for this user",
	"definitions.User.allOf[1].properties.hostname.type": "string",
	"definitions.User.allOf[1].properties.is_exempt_from_device_limits.description": "Whether to exempt this user from Enterprise device limits.",
	"definitions.User.allOf[1].properties.is_exempt_from_device_limits.type": "boolean",
	"definitions.User.allOf[1].properties.is_exempt_from_login_verification.description": "Whether or not this user must use two-factor authentication.",
	"definitions.User.allOf[1].properties.is_exempt_from_login_verification.type": "boolean",
	"definitions.User.allOf[1].properties.is_external_collab_restricted.description": "Whether this user is allowed to collaborate with users outside her enterprise.",
	"definitions.User.allOf[1].properties.is_external_collab_restricted.type": "boolean",
	"definitions.User.allOf[1].properties.is_sync_enabled.description": "Whether or not this user can use Box Sync.",
	"definitions.User.allOf[1].properties.is_sync_enabled.type": "boolean",
	"definitions.User.allOf[1].properties.job_title.description": "The user’s job title.",
	"definitions.User.allOf[1].properties.job_title.type": "string",
	"definitions.User.allOf[1].properties.language.description": "The language of this user. (ISO 639-1 Language Code)",
	"definitions.User.allOf[1].properties.language.type": "string",
	"definitions.User.allOf[1].properties.max_upload_size.description": "The maximum individual file size in bytes this user can have.",
	"definitions.User.allOf[1].properties.max_upload_size.format": "int64",
	"definitions.User.allOf[1].properties.max_upload_size.type": "integer",
	"definitions.User.allOf[1].properties.modified_at.description": "The time this user was last modified.",
	"definitions.User.allOf[1].properties.modified_at.format": "date-time",
	"definitions.User.allOf[1].properties.modified_at.type": "string",
	"definitions.User.allOf[1].properties.my_tags.description": "Tags for all files and folders owned by this user.",
	"definitions.User.allOf[1].properties.my_tags.items.type": "string",
	"definitions.User.allOf[1].properties.my_tags.type": "array",
	"definitions.User.allOf[1].properties.phone.description": "The user’s phone number.",
	"definitions.User.allOf[1].properties.phone.type": "string",
	"definitions.User.allOf[1].properties.role.description": "This user’s enterprise role. Can be admin, coadmin, or user.",
	"definitions.User.allOf[1].properties.role.enum.length": 3,
	"definitions.User.allOf[1].properties.role.enum[0]": "admin",
	"definitions.User.allOf[1].properties.role.enum[1]": "coadmin",
	"definitions.User.allOf[1].properties.role.enum[2]": "user",
	"definitions.User.allOf[1].properties.role.type": "string",
	"definitions.User.allOf[1].properties.space_amount.description": "The user’s total available space amount in bytes.",
	"definitions.User.allOf[1].properties.space_amount.format": "int64",
	"definitions.User.allOf[1].properties.space_amount.type": "integer",
	"definitions.User.allOf[1].properties.space_used.description": "The amount of space in use by the user.",
	"definitions.User.allOf[1].properties.space_used.format": "int64",
	"definitions.User.allOf[1].properties.space_used.type": "integer",
	"definitions.User.allOf[1].properties.status.description": "Can be active, inactive, cannot_delete_edit, or cannot_delete_edit_upload.",
	"definitions.User.allOf[1].properties.status.enum.length": 4,
	"definitions.User.allOf[1].properties.status.enum[0]": "active",
	"definitions.User.allOf[1].properties.status.enum[1]": "inactive",
	"definitions.User.allOf[1].properties.status.enum[2]": "cannot_delete_edit",
	"definitions.User.allOf[1].properties.status.enum[3]": "cannot_delete_edit_upload",
	"definitions.User.allOf[1].properties.status.type": "string",
	"definitions.User.allOf[1].properties.timezone.description": "The timezone of this user. (tz Database timezones)",
	"definitions.User.allOf[1].properties.timezone.type": "string",
	"definitions.User.allOf[1].properties.tracking_codes.description": "An array of key/value pairs set by the user’s admin.",
	"definitions.User.allOf[1].properties.tracking_codes.items.type": "object",
	"definitions.User.allOf[1].properties.tracking_codes.type": "array",
	"definitions.User.description": "The users endpoint is used for managing a user and its content. For an individual user, this includes their own user information and content. For an enterprise admin, this includes both the individual user and any other users in the admin’s enterprise account.",
	"definitions.User.title": "User Object",
	"definitions.User.type": "object",
	"definitions.UserList.allOf.length": 2,
	"definitions.UserList.allOf[0].$ref": "#/definitions/Pagination",
	"definitions.UserList.allOf[1].properties.entries.items.$ref": "#/definitions/User",
	"definitions.UserList.allOf[1].properties.entries.type": "array",
	"definitions.UserList.type": "object",
	"definitions.UserReference.description": "It references a user",
	"definitions.UserReference.properties.id.description": "Unqiue string identifying this user.",
	"definitions.UserReference.properties.id.type": "string",
	"definitions.UserReference.properties.login.description": "The email address this user uses to login.",
	"definitions.UserReference.properties.login.type": "string",
	"definitions.UserReference.properties.name.description": "Name of this user",
	"definitions.UserReference.properties.name.type": "string",
	"definitions.UserReference.properties.type.enum.length": 1,
	"definitions.UserReference.properties.type.enum[0]": "user",
	"definitions.UserReference.properties.type.type": "string",
	"definitions.UserReference.type": "object",
	"definitions.Watermark.properties.watermark.$ref": "#/definitions/WatermarkReference",
	"definitions.Watermark.type": "object",
	"definitions.WatermarkInfo.items.properties.is_watermarked.type": "boolean",
	"definitions.WatermarkInfo.type": "array",
	"definitions.WatermarkReference.description": "Waternmark a semi-transparent overlay on an embedded file preview that displays a viewer's email address or user ID and the time of access over a file's content",
	"definitions.WatermarkReference.properties.created_at.description": "When this watermark was created",
	"definitions.WatermarkReference.properties.created_at.format": "date-time",
	"definitions.WatermarkReference.properties.created_at.type": "string",
	"definitions.WatermarkReference.properties.imprint.enum.length": 1,
	"definitions.WatermarkReference.properties.imprint.enum[0]": "default",
	"definitions.WatermarkReference.properties.imprint.type": "string",
	"definitions.WatermarkReference.properties.modified_at.description": "When this task was modified",
	"definitions.WatermarkReference.properties.modified_at.format": "date-time",
	"definitions.WatermarkReference.properties.modified_at.type": "string",
	"definitions.WatermarkReference.type": "object",
	"definitions.WebLink.allOf.length": 2,
	"definitions.WebLink.allOf[0].$ref": "#/definitions/ItemReference",
	"definitions.WebLink.allOf[1].properties.created_at.description": "When this file was created on Box’s servers.",
	"definitions.WebLink.allOf[1].properties.created_at.format": "date-time",
	"definitions.WebLink.allOf[1].properties.created_at.type": "string",
	"definitions.WebLink.allOf[1].properties.created_by.$ref": "#/definitions/UserReference",
	"definitions.WebLink.allOf[1].properties.created_by.description": "The user who first created file.",
	"definitions.WebLink.allOf[1].properties.description.description": "The description accompanying the web link. This is visible within the Box web application.",
	"definitions.WebLink.allOf[1].properties.description.type": "string",
	"definitions.WebLink.allOf[1].properties.item_status.description": "Whether this item is deleted or not.",
	"definitions.WebLink.allOf[1].properties.item_status.type": "string",
	"definitions.WebLink.allOf[1].properties.modified_at.description": "When this file was last updated on the Box servers.",
	"definitions.WebLink.allOf[1].properties.modified_at.format": "date-time",
	"definitions.WebLink.allOf[1].properties.modified_at.type": "string",
	"definitions.WebLink.allOf[1].properties.modified_by.$ref": "#/definitions/UserReference",
	"definitions.WebLink.allOf[1].properties.modified_by.description": "The user who last updated this file.",
	"definitions.WebLink.allOf[1].properties.owned_by.$ref": "#/definitions/UserReference",
	"definitions.WebLink.allOf[1].properties.owned_by.description": "The user who owns this file.",
	"definitions.WebLink.allOf[1].properties.parent.$ref": "#/definitions/ItemReference",
	"definitions.WebLink.allOf[1].properties.parent.description": "The parent object the web link belongs to",
	"definitions.WebLink.allOf[1].properties.path_collection.$ref": "#/definitions/PathCollection",
	"definitions.WebLink.allOf[1].properties.path_collection.description": "The path of folders to this item, starting at the root.",
	"definitions.WebLink.allOf[1].properties.purged_at.description": "When this file will be permanently deleted.",
	"definitions.WebLink.allOf[1].properties.purged_at.format": "date-time",
	"definitions.WebLink.allOf[1].properties.purged_at.type": "string",
	"definitions.WebLink.allOf[1].properties.shared_link.$ref": "#/definitions/SharedLink",
	"definitions.WebLink.allOf[1].properties.shared_link.description": "The shared link object for this file.",
	"definitions.WebLink.allOf[1].properties.trashed_at.description": "When this file was last moved to the trash.",
	"definitions.WebLink.allOf[1].properties.trashed_at.format": "date-time",
	"definitions.WebLink.allOf[1].properties.trashed_at.type": "string",
	"definitions.WebLink.allOf[1].properties.url.description": "The URL this web link points to.",
	"definitions.WebLink.allOf[1].properties.url.type": "string",
	"definitions.WebLink.description": "Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application. Web link objects are treated similarly to file objects, so they will also support shared links, copy, permanent delete, and restore with the format /web_links/{WEB_LINK_ID} in place of /files/{FILE_ID}.",
	"definitions.WebLink.title": "Web Link Object",
	"definitions.WebLink.type": "object",
	"definitions.Webhook.allOf.length": 2,
	"definitions.Webhook.allOf[0].$ref": "#/definitions/Reference",
	"definitions.Webhook.allOf[1].properties.address.description": "The notification URL of the webhook. The notification URL is the URL used by Box to send a notification when the webhook is triggered.",
	"definitions.Webhook.allOf[1].properties.address.type": "string",
	"definitions.Webhook.allOf[1].properties.created_at.description": "An RFC-3339 timestamp identifying the time that the webhook was created.",
	"definitions.Webhook.allOf[1].properties.created_at.format": "date-time",
	"definitions.Webhook.allOf[1].properties.created_at.type": "string",
	"definitions.Webhook.allOf[1].properties.created_by.$ref": "#/definitions/UserReference",
	"definitions.Webhook.allOf[1].properties.target.$ref": "#/definitions/Reference",
	"definitions.Webhook.allOf[1].properties.target.description": "A target is a file or folder",
	"definitions.Webhook.allOf[1].properties.triggers.description": "An array of event names. The events that webhooks support are listed in the 'Event Triggers' (https://docs.box.com/reference#event-triggers) section.",
	"definitions.Webhook.allOf[1].properties.triggers.items.type": "string",
	"definitions.Webhook.allOf[1].properties.triggers.type": "array",
	"definitions.Webhook.description": "When you create or retrieve a webhook a JSON object representing the webhook is returned to you. This JSON object's fields contain the name and ID of the webhook, along with configuration details such as its target and its notification URL.",
	"definitions.Webhook.title": "Webhook Object",
	"definitions.Webhook.type": "object",
	"definitions.WebhookList.allOf.length": 2,
	"definitions.WebhookList.allOf[0].$ref": "#/definitions/Pagination",
	"definitions.WebhookList.allOf[1].properties.entries.items.$ref": "#/definitions/Webhook",
	"definitions.WebhookList.allOf[1].properties.entries.type": "array",
	"definitions.WebhookList.type": "object",
	"host": "api.box.com",
	"info.description": "The Box Content API gives you access to secure content management and content experience features for use in your own app. It strives to be RESTful and is organized around the main resources you’re familiar with from the Box web interface.",
	"info.license.name": "Apache 2.0",
	"info.license.url": "http://www.apache.org/licenses/LICENSE-2.0",
	"info.title": "Box 2.0",
	"info.version": "2.0",
	"info.x-apisguru-categories.length": 1,
	"info.x-apisguru-categories[0]": "cloud",
	"info.x-logo.url": "https://api.apis.guru/v2/cache/logo/https_pbs.twimg.com_profile_images_852979584169410562_etZ6V0rx_400x400.jpg",
	"info.x-origin.length": 1,
	"info.x-origin[0].format": "swagger",
	"info.x-origin[0].url": "https://raw.githubusercontent.com/box/box-openapi/master/v2.0/openapi-v2.json",
	"info.x-origin[0].version": "2.0",
	"info.x-preferred": true,
	"info.x-providerName": "box.com",
	"info.x-serviceName": "content",
	"paths./collaborations.get.description": "Used to retrieve all pending collaboration invites for this user.",
	"paths./collaborations.get.externalDocs.url": "https://docs.box.com/reference#get-pending-collaborations",
	"paths./collaborations.get.operationId": "getPendingCollaborations",
	"paths./collaborations.get.parameters.length": 2,
	"paths./collaborations.get.parameters[0].description": "Attribute(s) to include in the response",
	"paths./collaborations.get.parameters[0].in": "query",
	"paths./collaborations.get.parameters[0].name": "fields",
	"paths./collaborations.get.parameters[0].required": false,
	"paths./collaborations.get.parameters[0].type": "string",
	"paths./collaborations.get.parameters[1].description": "Must be 'pending'",
	"paths./collaborations.get.parameters[1].enum.length": 1,
	"paths./collaborations.get.parameters[1].enum[0]": "pending",
	"paths./collaborations.get.parameters[1].in": "query",
	"paths./collaborations.get.parameters[1].name": "status",
	"paths./collaborations.get.parameters[1].required": true,
	"paths./collaborations.get.parameters[1].type": "string",
	"paths./collaborations.get.responses.200.description": "A collection of pending collaboration objects are returned. If the user has no pending collaborations, the collection will be empty.",
	"paths./collaborations.get.responses.200.examples.application/json.entries.length": 1,
	"paths./collaborations.get.responses.200.examples.application/json.entries[0].accessible_by.id": "181216415",
	"paths./collaborations.get.responses.200.examples.application/json.entries[0].accessible_by.login": "sean+awesome@box.com",
	"paths./collaborations.get.responses.200.examples.application/json.entries[0].accessible_by.name": "sean rose",
	"paths./collaborations.get.responses.200.examples.application/json.entries[0].accessible_by.type": "user",
	"paths./collaborations.get.responses.200.examples.application/json.entries[0].created_at": "2012-10-17T23:14:42-07:00",
	"paths./collaborations.get.responses.200.examples.application/json.entries[0].created_by.id": "11993747",
	"paths./collaborations.get.responses.200.examples.application/json.entries[0].created_by.login": "sean@box.com",
	"paths./collaborations.get.responses.200.examples.application/json.entries[0].created_by.name": "sean",
	"paths./collaborations.get.responses.200.examples.application/json.entries[0].created_by.type": "user",
	"paths./collaborations.get.responses.200.examples.application/json.entries[0].id": "27513888",
	"paths./collaborations.get.responses.200.examples.application/json.entries[0].modified_at": "2012-10-17T23:14:42-07:00",
	"paths./collaborations.get.responses.200.examples.application/json.entries[0].role": "Editor",
	"paths./collaborations.get.responses.200.examples.application/json.entries[0].status": "Pending",
	"paths./collaborations.get.responses.200.examples.application/json.entries[0].type": "collaboration",
	"paths./collaborations.get.responses.200.examples.application/json.total_count": 1,
	"paths./collaborations.get.responses.200.schema.$ref": "#/definitions/CollaborationList",
	"paths./collaborations.get.responses.default.description": "Get pending collaborations operation error",
	"paths./collaborations.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./collaborations.get.summary": "Pending Collaborations",
	"paths./collaborations.get.tags.length": 1,
	"paths./collaborations.get.tags[0]": "Collaborations",
	"paths./collaborations.post.description": "Used to add a collaboration for a single user or a single group to a folder. Either an email address, a user ID, or a group id can be used to create the collaboration. If the collaboration is being created with a group, access to this endpoint is granted based on the group's invitability_level.",
	"paths./collaborations.post.externalDocs.url": "https://docs.box.com/reference#add-a-collaboration",
	"paths./collaborations.post.operationId": "createCollaboration",
	"paths./collaborations.post.parameters.length": 1,
	"paths./collaborations.post.parameters[0].in": "body",
	"paths./collaborations.post.parameters[0].name": "body",
	"paths./collaborations.post.parameters[0].required": true,
	"paths./collaborations.post.parameters[0].schema.$ref": "#/definitions/Collaboration",
	"paths./collaborations.post.responses.201.description": "The new collaboration object is returned. Errors may occur if the IDs are invalid or if the user does not have permissions to create a collaboration.",
	"paths./collaborations.post.responses.201.examples.application/json.accessible_by.id": "18203124",
	"paths./collaborations.post.responses.201.examples.application/json.accessible_by.login": "sean+test@box.com",
	"paths./collaborations.post.responses.201.examples.application/json.accessible_by.name": "sean",
	"paths./collaborations.post.responses.201.examples.application/json.accessible_by.type": "user",
	"paths./collaborations.post.responses.201.examples.application/json.acknowledged_at": "2012-12-12T11:30:43-08:00",
	"paths./collaborations.post.responses.201.examples.application/json.created_at": "2012-12-12T10:54:37-08:00",
	"paths./collaborations.post.responses.201.examples.application/json.created_by.id": "17738362",
	"paths./collaborations.post.responses.201.examples.application/json.created_by.login": "sean@box.com",
	"paths./collaborations.post.responses.201.examples.application/json.created_by.name": "sean rose",
	"paths./collaborations.post.responses.201.examples.application/json.created_by.type": "user",
	"paths./collaborations.post.responses.201.examples.application/json.id": "791293",
	"paths./collaborations.post.responses.201.examples.application/json.item.etag": "0",
	"paths./collaborations.post.responses.201.examples.application/json.item.id": "11446500",
	"paths./collaborations.post.responses.201.examples.application/json.item.name": "Shared Pictures",
	"paths./collaborations.post.responses.201.examples.application/json.item.sequence_id": "0",
	"paths./collaborations.post.responses.201.examples.application/json.item.type": "folder",
	"paths./collaborations.post.responses.201.examples.application/json.modified_at": "2012-12-12T11:30:43-08:00",
	"paths./collaborations.post.responses.201.examples.application/json.role": "editor",
	"paths./collaborations.post.responses.201.examples.application/json.status": "accepted",
	"paths./collaborations.post.responses.201.examples.application/json.type": "collaboration",
	"paths./collaborations.post.responses.201.schema.$ref": "#/definitions/Collaboration",
	"paths./collaborations.post.responses.default.description": "Add a collaboration operation error",
	"paths./collaborations.post.responses.default.schema.$ref": "#/definitions/Error",
	"paths./collaborations.post.summary": "Create Collaboration",
	"paths./collaborations.post.tags.length": 1,
	"paths./collaborations.post.tags[0]": "Collaborations",
	"paths./collaborations/{COLLAB_ID}.delete.description": "Used to delete a single collaboration.",
	"paths./collaborations/{COLLAB_ID}.delete.externalDocs.url": "https://docs.box.com/reference#remove-a-collaboration",
	"paths./collaborations/{COLLAB_ID}.delete.operationId": "deleteCollaboration",
	"paths./collaborations/{COLLAB_ID}.delete.parameters.length": 1,
	"paths./collaborations/{COLLAB_ID}.delete.parameters[0].in": "path",
	"paths./collaborations/{COLLAB_ID}.delete.parameters[0].name": "COLLAB_ID",
	"paths./collaborations/{COLLAB_ID}.delete.parameters[0].required": true,
	"paths./collaborations/{COLLAB_ID}.delete.parameters[0].type": "string",
	"paths./collaborations/{COLLAB_ID}.delete.responses.204.description": "A blank 204 response is returned if the ID is valid, and the user has permissions to remove the collaboration.",
	"paths./collaborations/{COLLAB_ID}.delete.responses.default.description": "Delete a collaboration operation error",
	"paths./collaborations/{COLLAB_ID}.delete.responses.default.schema.$ref": "#/definitions/Error",
	"paths./collaborations/{COLLAB_ID}.delete.summary": "Delete Collaboration",
	"paths./collaborations/{COLLAB_ID}.delete.tags.length": 1,
	"paths./collaborations/{COLLAB_ID}.delete.tags[0]": "Collaborations",
	"paths./collaborations/{COLLAB_ID}.get.description": "Used to get information about a single collaboration. All collaborations for a single folder can be retrieved through GET /folders/{id}/collaborations. A complete list of the user’s pending collaborations can also be retrieved.",
	"paths./collaborations/{COLLAB_ID}.get.externalDocs.url": "https://docs.box.com/reference#get-collabs",
	"paths./collaborations/{COLLAB_ID}.get.operationId": "getCollaboration",
	"paths./collaborations/{COLLAB_ID}.get.parameters.length": 3,
	"paths./collaborations/{COLLAB_ID}.get.parameters[0].in": "path",
	"paths./collaborations/{COLLAB_ID}.get.parameters[0].name": "COLLAB_ID",
	"paths./collaborations/{COLLAB_ID}.get.parameters[0].required": true,
	"paths./collaborations/{COLLAB_ID}.get.parameters[0].type": "string",
	"paths./collaborations/{COLLAB_ID}.get.parameters[1].description": "Attribute(s) to include in the response",
	"paths./collaborations/{COLLAB_ID}.get.parameters[1].in": "query",
	"paths./collaborations/{COLLAB_ID}.get.parameters[1].name": "fields",
	"paths./collaborations/{COLLAB_ID}.get.parameters[1].required": false,
	"paths./collaborations/{COLLAB_ID}.get.parameters[1].type": "string",
	"paths./collaborations/{COLLAB_ID}.get.parameters[2].description": "Can only be pending",
	"paths./collaborations/{COLLAB_ID}.get.parameters[2].enum.length": 1,
	"paths./collaborations/{COLLAB_ID}.get.parameters[2].enum[0]": "pending",
	"paths./collaborations/{COLLAB_ID}.get.parameters[2].in": "query",
	"paths./collaborations/{COLLAB_ID}.get.parameters[2].name": "status",
	"paths./collaborations/{COLLAB_ID}.get.parameters[2].required": false,
	"paths./collaborations/{COLLAB_ID}.get.parameters[2].type": "string",
	"paths./collaborations/{COLLAB_ID}.get.responses.200.description": "The collaboration object is returned. Errors may occur if the IDs are invalid or if the user does not have permissions to see the collaboration.",
	"paths./collaborations/{COLLAB_ID}.get.responses.200.schema.$ref": "#/definitions/Collaboration",
	"paths./collaborations/{COLLAB_ID}.get.responses.default.description": "Get a collaboration error",
	"paths./collaborations/{COLLAB_ID}.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./collaborations/{COLLAB_ID}.get.summary": "Get Collaboration",
	"paths./collaborations/{COLLAB_ID}.get.tags.length": 1,
	"paths./collaborations/{COLLAB_ID}.get.tags[0]": "Collaborations",
	"paths./collaborations/{COLLAB_ID}.put.description": "Used to edit an existing collaboration. Descriptions of the various roles can be found here.",
	"paths./collaborations/{COLLAB_ID}.put.externalDocs.url": "https://docs.box.com/reference#edit-a-collaboration",
	"paths./collaborations/{COLLAB_ID}.put.operationId": "updateCollaboation",
	"paths./collaborations/{COLLAB_ID}.put.parameters.length": 2,
	"paths./collaborations/{COLLAB_ID}.put.parameters[0].in": "path",
	"paths./collaborations/{COLLAB_ID}.put.parameters[0].name": "COLLAB_ID",
	"paths./collaborations/{COLLAB_ID}.put.parameters[0].required": true,
	"paths./collaborations/{COLLAB_ID}.put.parameters[0].type": "string",
	"paths./collaborations/{COLLAB_ID}.put.parameters[1].in": "body",
	"paths./collaborations/{COLLAB_ID}.put.parameters[1].name": "body",
	"paths./collaborations/{COLLAB_ID}.put.parameters[1].required": true,
	"paths./collaborations/{COLLAB_ID}.put.parameters[1].schema.$ref": "#/definitions/Collaboration",
	"paths./collaborations/{COLLAB_ID}.put.responses.200.description": "The updated collaboration object is returned.",
	"paths./collaborations/{COLLAB_ID}.put.responses.200.examples.application/json.accessible_by.id": "18203124",
	"paths./collaborations/{COLLAB_ID}.put.responses.200.examples.application/json.accessible_by.login": "sean+test@box.com",
	"paths./collaborations/{COLLAB_ID}.put.responses.200.examples.application/json.accessible_by.name": "sean",
	"paths./collaborations/{COLLAB_ID}.put.responses.200.examples.application/json.accessible_by.type": "user",
	"paths./collaborations/{COLLAB_ID}.put.responses.200.examples.application/json.acknowledged_at": "2012-12-12T11:30:43-08:00",
	"paths./collaborations/{COLLAB_ID}.put.responses.200.examples.application/json.created_at": "2012-12-12T10:54:37-08:00",
	"paths./collaborations/{COLLAB_ID}.put.responses.200.examples.application/json.created_by.id": "17738362",
	"paths./collaborations/{COLLAB_ID}.put.responses.200.examples.application/json.created_by.login": "sean@box.com",
	"paths./collaborations/{COLLAB_ID}.put.responses.200.examples.application/json.created_by.name": "sean rose",
	"paths./collaborations/{COLLAB_ID}.put.responses.200.examples.application/json.created_by.type": "user",
	"paths./collaborations/{COLLAB_ID}.put.responses.200.examples.application/json.id": "791293",
	"paths./collaborations/{COLLAB_ID}.put.responses.200.examples.application/json.item.etag": "0",
	"paths./collaborations/{COLLAB_ID}.put.responses.200.examples.application/json.item.id": "11446500",
	"paths./collaborations/{COLLAB_ID}.put.responses.200.examples.application/json.item.name": "Shared Pictures",
	"paths./collaborations/{COLLAB_ID}.put.responses.200.examples.application/json.item.sequence_id": "0",
	"paths./collaborations/{COLLAB_ID}.put.responses.200.examples.application/json.item.type": "folder",
	"paths./collaborations/{COLLAB_ID}.put.responses.200.examples.application/json.modified_at": "2012-12-12T11:30:43-08:00",
	"paths./collaborations/{COLLAB_ID}.put.responses.200.examples.application/json.role": "viewer",
	"paths./collaborations/{COLLAB_ID}.put.responses.200.examples.application/json.status": "accepted",
	"paths./collaborations/{COLLAB_ID}.put.responses.200.examples.application/json.type": "collaboration",
	"paths./collaborations/{COLLAB_ID}.put.responses.200.schema.$ref": "#/definitions/Collaboration",
	"paths./collaborations/{COLLAB_ID}.put.responses.204.description": "If the role is changed to owner, the collaboration is deleted with a new one created for the previous owner.",
	"paths./collaborations/{COLLAB_ID}.put.responses.204.schema.$ref": "#/definitions/Collaboration",
	"paths./collaborations/{COLLAB_ID}.put.responses.default.description": "Update collaboration error",
	"paths./collaborations/{COLLAB_ID}.put.responses.default.schema.$ref": "#/definitions/Error",
	"paths./collaborations/{COLLAB_ID}.put.summary": "Update Collaboration",
	"paths./collaborations/{COLLAB_ID}.put.tags.length": 1,
	"paths./collaborations/{COLLAB_ID}.put.tags[0]": "Collaborations",
	"paths./collections.get.description": "Retrieves the collections for the given user. Currently, only the favorites collection is supported.",
	"paths./collections.get.externalDocs.url": "https://docs.box.com/reference#get-collections",
	"paths./collections.get.operationId": "getCollections",
	"paths./collections.get.parameters.length": 0,
	"paths./collections.get.responses.200.description": "Collections for the given user",
	"paths./collections.get.responses.200.examples.application/json.entries.length": 1,
	"paths./collections.get.responses.200.examples.application/json.entries[0].collection_type": "favorites",
	"paths./collections.get.responses.200.examples.application/json.entries[0].id": "405151",
	"paths./collections.get.responses.200.examples.application/json.entries[0].name": "Favorites",
	"paths./collections.get.responses.200.examples.application/json.entries[0].type": "collection",
	"paths./collections.get.responses.200.examples.application/json.limit": 100,
	"paths./collections.get.responses.200.examples.application/json.offset": 0,
	"paths./collections.get.responses.200.examples.application/json.total_count": 1,
	"paths./collections.get.responses.200.schema.$ref": "#/definitions/CollectionList",
	"paths./collections.get.responses.default.description": "Get Collections error",
	"paths./collections.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./collections.get.summary": "Get Collections",
	"paths./collections.get.tags.length": 1,
	"paths./collections.get.tags[0]": "Collections",
	"paths./collections/{COLLECTION_ID}/items.get.description": "Retrieves the files and/or folders contained within this collection. Collection item lists behave a lot like getting a folder’s items.\nPaginated results can be retrieved using the limit and offset parameters.\nSub-object fields can be requested via the ?fields parameter",
	"paths./collections/{COLLECTION_ID}/items.get.externalDocs.url": "https://docs.box.com/reference#collections-beta",
	"paths./collections/{COLLECTION_ID}/items.get.operationId": "getCollectionItems",
	"paths./collections/{COLLECTION_ID}/items.get.parameters.length": 4,
	"paths./collections/{COLLECTION_ID}/items.get.parameters[0].in": "path",
	"paths./collections/{COLLECTION_ID}/items.get.parameters[0].name": "COLLECTION_ID",
	"paths./collections/{COLLECTION_ID}/items.get.parameters[0].required": true,
	"paths./collections/{COLLECTION_ID}/items.get.parameters[0].type": "string",
	"paths./collections/{COLLECTION_ID}/items.get.parameters[1].description": "Attribute(s) to include in the response",
	"paths./collections/{COLLECTION_ID}/items.get.parameters[1].in": "query",
	"paths./collections/{COLLECTION_ID}/items.get.parameters[1].name": "fields",
	"paths./collections/{COLLECTION_ID}/items.get.parameters[1].required": false,
	"paths./collections/{COLLECTION_ID}/items.get.parameters[1].type": "string",
	"paths./collections/{COLLECTION_ID}/items.get.parameters[2].description": "The maximum number of items to return in a page.",
	"paths./collections/{COLLECTION_ID}/items.get.parameters[2].format": "int64",
	"paths./collections/{COLLECTION_ID}/items.get.parameters[2].in": "query",
	"paths./collections/{COLLECTION_ID}/items.get.parameters[2].name": "limit",
	"paths./collections/{COLLECTION_ID}/items.get.parameters[2].required": false,
	"paths./collections/{COLLECTION_ID}/items.get.parameters[2].type": "integer",
	"paths./collections/{COLLECTION_ID}/items.get.parameters[3].description": "The offset at which to begin the response. An offset of value of 0 will start at the beginning of the folder-listing. Offset of 2 would start at the 2nd record, not the second page. Note: If there are hidden items in your previous response, your next offset should be = offset + limit, not the # of records you received back.",
	"paths./collections/{COLLECTION_ID}/items.get.parameters[3].in": "query",
	"paths./collections/{COLLECTION_ID}/items.get.parameters[3].name": "offset",
	"paths./collections/{COLLECTION_ID}/items.get.parameters[3].required": false,
	"paths./collections/{COLLECTION_ID}/items.get.parameters[3].type": "string",
	"paths./collections/{COLLECTION_ID}/items.get.responses.200.description": "An array of items contained in the collection is returned.",
	"paths./collections/{COLLECTION_ID}/items.get.responses.200.schema.$ref": "#/definitions/ItemReferenceList",
	"paths./collections/{COLLECTION_ID}/items.get.responses.default.description": "An error is thrown if the collection does not exist, or if any of the parameters are invalid.",
	"paths./collections/{COLLECTION_ID}/items.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./collections/{COLLECTION_ID}/items.get.summary": "Get Collection Items",
	"paths./collections/{COLLECTION_ID}/items.get.tags.length": 1,
	"paths./collections/{COLLECTION_ID}/items.get.tags[0]": "Collections",
	"paths./comments.post.description": "Used to add a comment by the user to a specific file or comment (i.e. as a reply comment).",
	"paths./comments.post.externalDocs.url": "https://docs.box.com/reference#add-a-comment-to-an-item",
	"paths./comments.post.operationId": "createComment",
	"paths./comments.post.parameters.length": 2,
	"paths./comments.post.parameters[0].description": "Attribute(s) to include in the response.",
	"paths./comments.post.parameters[0].in": "query",
	"paths./comments.post.parameters[0].name": "fields",
	"paths./comments.post.parameters[0].required": false,
	"paths./comments.post.parameters[0].type": "string",
	"paths./comments.post.parameters[1].in": "body",
	"paths./comments.post.parameters[1].name": "body",
	"paths./comments.post.parameters[1].required": true,
	"paths./comments.post.parameters[1].schema.$ref": "#/definitions/Comment",
	"paths./comments.post.responses.201.description": "The new comment object is returned. Errors may occur if the item id is invalid, the item type is invalid/unsupported, you don’t include either a message or a tagged_message, or if the user does not have access to the item being commented on.",
	"paths./comments.post.responses.201.examples.application/json.created_at": "2012-12-12T11:25:01-08:00",
	"paths./comments.post.responses.201.examples.application/json.created_by.id": "17738362",
	"paths./comments.post.responses.201.examples.application/json.created_by.login": "sean@box.com",
	"paths./comments.post.responses.201.examples.application/json.created_by.name": "sean rose",
	"paths./comments.post.responses.201.examples.application/json.created_by.type": "user",
	"paths./comments.post.responses.201.examples.application/json.id": "191969",
	"paths./comments.post.responses.201.examples.application/json.is_reply_comment": false,
	"paths./comments.post.responses.201.examples.application/json.item.id": "5000948880",
	"paths./comments.post.responses.201.examples.application/json.item.type": "file",
	"paths./comments.post.responses.201.examples.application/json.message": "These tigers are cool!",
	"paths./comments.post.responses.201.examples.application/json.modified_at": "2012-12-12T11:25:01-08:00",
	"paths./comments.post.responses.201.examples.application/json.type": "comment",
	"paths./comments.post.responses.201.schema.$ref": "#/definitions/Comment",
	"paths./comments.post.responses.default.description": "Errors may occur if the item id is invalid, the item type is invalid/unsupported, you don’t include either a message or a tagged_message, or if the user does not have access to the item being commented on.",
	"paths./comments.post.responses.default.schema.$ref": "#/definitions/Error",
	"paths./comments.post.summary": "Create Comment",
	"paths./comments.post.tags.length": 1,
	"paths./comments.post.tags[0]": "Comments",
	"paths./comments/{COMMENT_ID}.delete.description": "Permanently deletes a comment.",
	"paths./comments/{COMMENT_ID}.delete.externalDocs.url": "https://docs.box.com/reference#delete-a-comment",
	"paths./comments/{COMMENT_ID}.delete.operationId": "deleteComment",
	"paths./comments/{COMMENT_ID}.delete.parameters.length": 1,
	"paths./comments/{COMMENT_ID}.delete.parameters[0].in": "path",
	"paths./comments/{COMMENT_ID}.delete.parameters[0].name": "COMMENT_ID",
	"paths./comments/{COMMENT_ID}.delete.parameters[0].required": true,
	"paths./comments/{COMMENT_ID}.delete.parameters[0].type": "string",
	"paths./comments/{COMMENT_ID}.delete.responses.204.description": "An empty 204 response is returned to confirm deletion of the comment. Errors can be thrown if the ID is invalid or if the user is not authorized to delete this particular comment.",
	"paths./comments/{COMMENT_ID}.delete.responses.default.description": "Errors can be thrown if the ID is invalid or if the user is not authorized to delete this particular comment.",
	"paths./comments/{COMMENT_ID}.delete.responses.default.schema.$ref": "#/definitions/Error",
	"paths./comments/{COMMENT_ID}.delete.summary": "Delete Comment",
	"paths./comments/{COMMENT_ID}.delete.tags.length": 1,
	"paths./comments/{COMMENT_ID}.delete.tags[0]": "Comments",
	"paths./comments/{COMMENT_ID}.get.description": "Used to retrieve the message and metadata about a specific comment. Information about the user who created the comment is also included.",
	"paths./comments/{COMMENT_ID}.get.externalDocs.url": "https://docs.box.com/reference#comments",
	"paths./comments/{COMMENT_ID}.get.operationId": "getComment",
	"paths./comments/{COMMENT_ID}.get.parameters.length": 2,
	"paths./comments/{COMMENT_ID}.get.parameters[0].in": "path",
	"paths./comments/{COMMENT_ID}.get.parameters[0].name": "COMMENT_ID",
	"paths./comments/{COMMENT_ID}.get.parameters[0].required": true,
	"paths./comments/{COMMENT_ID}.get.parameters[0].type": "string",
	"paths./comments/{COMMENT_ID}.get.parameters[1].description": "Attribute(s) to include in the response.",
	"paths./comments/{COMMENT_ID}.get.parameters[1].in": "query",
	"paths./comments/{COMMENT_ID}.get.parameters[1].name": "fields",
	"paths./comments/{COMMENT_ID}.get.parameters[1].required": false,
	"paths./comments/{COMMENT_ID}.get.parameters[1].type": "string",
	"paths./comments/{COMMENT_ID}.get.responses.200.description": "A full comment object is returned is the ID is valid and if the user has access to the comment.",
	"paths./comments/{COMMENT_ID}.get.responses.200.examples.application/json.created_at": "2012-12-12T11:25:01-08:00",
	"paths./comments/{COMMENT_ID}.get.responses.200.examples.application/json.created_by.id": "17738362",
	"paths./comments/{COMMENT_ID}.get.responses.200.examples.application/json.created_by.login": "sean@box.com",
	"paths./comments/{COMMENT_ID}.get.responses.200.examples.application/json.created_by.name": "sean rose",
	"paths./comments/{COMMENT_ID}.get.responses.200.examples.application/json.created_by.type": "user",
	"paths./comments/{COMMENT_ID}.get.responses.200.examples.application/json.id": "191969",
	"paths./comments/{COMMENT_ID}.get.responses.200.examples.application/json.is_reply_comment": false,
	"paths./comments/{COMMENT_ID}.get.responses.200.examples.application/json.item.id": "5000948880",
	"paths./comments/{COMMENT_ID}.get.responses.200.examples.application/json.item.type": "file",
	"paths./comments/{COMMENT_ID}.get.responses.200.examples.application/json.message": "These tigers are cool!",
	"paths./comments/{COMMENT_ID}.get.responses.200.examples.application/json.modified_at": "2012-12-12T11:25:01-08:00",
	"paths./comments/{COMMENT_ID}.get.responses.200.examples.application/json.type": "comment",
	"paths./comments/{COMMENT_ID}.get.responses.200.schema.$ref": "#/definitions/Comment",
	"paths./comments/{COMMENT_ID}.get.responses.default.description": "Get comment error",
	"paths./comments/{COMMENT_ID}.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./comments/{COMMENT_ID}.get.summary": "Get Comment",
	"paths./comments/{COMMENT_ID}.get.tags.length": 1,
	"paths./comments/{COMMENT_ID}.get.tags[0]": "Comments",
	"paths./comments/{COMMENT_ID}.put.description": "Used to update the message of the comment.",
	"paths./comments/{COMMENT_ID}.put.externalDocs.url": "https://docs.box.com/reference#change-a-comments-message",
	"paths./comments/{COMMENT_ID}.put.operationId": "updateComment",
	"paths./comments/{COMMENT_ID}.put.parameters.length": 3,
	"paths./comments/{COMMENT_ID}.put.parameters[0].in": "path",
	"paths./comments/{COMMENT_ID}.put.parameters[0].name": "COMMENT_ID",
	"paths./comments/{COMMENT_ID}.put.parameters[0].required": true,
	"paths./comments/{COMMENT_ID}.put.parameters[0].type": "string",
	"paths./comments/{COMMENT_ID}.put.parameters[1].description": "Attribute(s) to include in the response.",
	"paths./comments/{COMMENT_ID}.put.parameters[1].in": "query",
	"paths./comments/{COMMENT_ID}.put.parameters[1].name": "fields",
	"paths./comments/{COMMENT_ID}.put.parameters[1].required": false,
	"paths./comments/{COMMENT_ID}.put.parameters[1].type": "string",
	"paths./comments/{COMMENT_ID}.put.parameters[2].in": "body",
	"paths./comments/{COMMENT_ID}.put.parameters[2].name": "body",
	"paths./comments/{COMMENT_ID}.put.parameters[2].required": true,
	"paths./comments/{COMMENT_ID}.put.parameters[2].schema.$ref": "#/definitions/Comment",
	"paths./comments/{COMMENT_ID}.put.responses.200.description": "The full updated comment object is returned if the ID is valid and if the user has access to the comment.",
	"paths./comments/{COMMENT_ID}.put.responses.200.examples.application/json.created_at": "2012-12-12T11:25:01-08:00",
	"paths./comments/{COMMENT_ID}.put.responses.200.examples.application/json.created_by.id": "17738362",
	"paths./comments/{COMMENT_ID}.put.responses.200.examples.application/json.created_by.login": "sean@box.com",
	"paths./comments/{COMMENT_ID}.put.responses.200.examples.application/json.created_by.name": "sean rose",
	"paths./comments/{COMMENT_ID}.put.responses.200.examples.application/json.created_by.type": "user",
	"paths./comments/{COMMENT_ID}.put.responses.200.examples.application/json.id": "191969",
	"paths./comments/{COMMENT_ID}.put.responses.200.examples.application/json.is_reply_comment": false,
	"paths./comments/{COMMENT_ID}.put.responses.200.examples.application/json.item.id": "5000948880",
	"paths./comments/{COMMENT_ID}.put.responses.200.examples.application/json.item.type": "file",
	"paths./comments/{COMMENT_ID}.put.responses.200.examples.application/json.message": "These tigers are cool!",
	"paths./comments/{COMMENT_ID}.put.responses.200.examples.application/json.modified_at": "2012-12-12T11:25:01-08:00",
	"paths./comments/{COMMENT_ID}.put.responses.200.examples.application/json.type": "comment",
	"paths./comments/{COMMENT_ID}.put.responses.200.schema.$ref": "#/definitions/Comment",
	"paths./comments/{COMMENT_ID}.put.responses.default.description": "Update comment error",
	"paths./comments/{COMMENT_ID}.put.responses.default.schema.$ref": "#/definitions/Error",
	"paths./comments/{COMMENT_ID}.put.summary": "Update Comment",
	"paths./comments/{COMMENT_ID}.put.tags.length": 1,
	"paths./comments/{COMMENT_ID}.put.tags[0]": "Comments",
	"paths./device_pinners/{ID}.delete.description": "Delete individual device pin.",
	"paths./device_pinners/{ID}.delete.externalDocs.url": "https://docs.box.com/reference#delete-device-pin",
	"paths./device_pinners/{ID}.delete.operationId": "deleteDevicePin",
	"paths./device_pinners/{ID}.delete.parameters.length": 1,
	"paths./device_pinners/{ID}.delete.parameters[0].in": "path",
	"paths./device_pinners/{ID}.delete.parameters[0].name": "ID",
	"paths./device_pinners/{ID}.delete.parameters[0].required": true,
	"paths./device_pinners/{ID}.delete.parameters[0].type": "string",
	"paths./device_pinners/{ID}.delete.responses.204.description": "A 204 will be returned if deletion is successful",
	"paths./device_pinners/{ID}.delete.responses.default.description": "Delete device pinner error",
	"paths./device_pinners/{ID}.delete.responses.default.schema.$ref": "#/definitions/Error",
	"paths./device_pinners/{ID}.delete.summary": "Delete Device Pin",
	"paths./device_pinners/{ID}.delete.tags.length": 1,
	"paths./device_pinners/{ID}.delete.tags[0]": "Devices",
	"paths./device_pinners/{ID}.get.description": "Gets information about an individual device pin.",
	"paths./device_pinners/{ID}.get.externalDocs.url": "https://docs.box.com/reference#get-device-pin",
	"paths./device_pinners/{ID}.get.operationId": "getDevicePin",
	"paths./device_pinners/{ID}.get.parameters.length": 1,
	"paths./device_pinners/{ID}.get.parameters[0].in": "path",
	"paths./device_pinners/{ID}.get.parameters[0].name": "ID",
	"paths./device_pinners/{ID}.get.parameters[0].required": true,
	"paths./device_pinners/{ID}.get.parameters[0].type": "string",
	"paths./device_pinners/{ID}.get.responses.200.description": "Returns information about a single device pin.",
	"paths./device_pinners/{ID}.get.responses.200.examples.application/json.created_at": "2014-09-23T22:56:18-07:00",
	"paths./device_pinners/{ID}.get.responses.200.examples.application/json.id": "788804",
	"paths./device_pinners/{ID}.get.responses.200.examples.application/json.modified_at": "2014-09-23T22:56:18-07:00",
	"paths./device_pinners/{ID}.get.responses.200.examples.application/json.owned_by.id": "222276603",
	"paths./device_pinners/{ID}.get.responses.200.examples.application/json.owned_by.login": "ted+boxworks2@box.com",
	"paths./device_pinners/{ID}.get.responses.200.examples.application/json.owned_by.name": "Ted Blosser",
	"paths./device_pinners/{ID}.get.responses.200.examples.application/json.owned_by.type": "user",
	"paths./device_pinners/{ID}.get.responses.200.examples.application/json.product_name": "iPad",
	"paths./device_pinners/{ID}.get.responses.200.examples.application/json.type": "device_pinner",
	"paths./device_pinners/{ID}.get.responses.200.schema.$ref": "#/definitions/DevicePinner",
	"paths./device_pinners/{ID}.get.responses.default.description": "Get device pinner error",
	"paths./device_pinners/{ID}.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./device_pinners/{ID}.get.summary": "Get Device Pin",
	"paths./device_pinners/{ID}.get.tags.length": 1,
	"paths./device_pinners/{ID}.get.tags[0]": "Devices",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.description": "Gets all the device pins within a given enterprise. Must be an enterprise admin with the manage enterprise scope to make this call.",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.externalDocs.url": "https://docs.box.com/reference#get-device-pins",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.operationId": "getEnterpriseDevicePins",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.parameters.length": 4,
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.parameters[0].in": "path",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.parameters[0].name": "ENTERPRISE_ID",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.parameters[0].required": true,
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.parameters[0].type": "string",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.parameters[1].description": "Needs not be passed or can be empty for first invocation of the API. Use the one returned in response for each subsequent call.",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.parameters[1].in": "query",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.parameters[1].name": "marker",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.parameters[1].required": false,
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.parameters[1].type": "string",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.parameters[2].description": "Default value is 100. Max value is 10000",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.parameters[2].in": "query",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.parameters[2].name": "limit",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.parameters[2].required": false,
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.parameters[2].type": "string",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.parameters[3].description": "Default is \"asc\". Valid values are asc, desc. Case in-sensitive, ASC/DESC works just fine.",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.parameters[3].in": "query",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.parameters[3].name": "direction",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.parameters[3].required": false,
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.parameters[3].type": "string",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.responses.200.description": "Returns a list of device pins for a given enterprise.",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.responses.200.examples.application/json.entries.length": 2,
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.responses.200.examples.application/json.entries[0].id": "788804",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.responses.200.examples.application/json.entries[0].owned_by.id": "222276603",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.responses.200.examples.application/json.entries[0].owned_by.login": "ted+boxworks2@box.com",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.responses.200.examples.application/json.entries[0].owned_by.name": "Ted Blosser",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.responses.200.examples.application/json.entries[0].owned_by.type": "user",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.responses.200.examples.application/json.entries[0].product_name": "iPad",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.responses.200.examples.application/json.entries[0].type": "device_pinner",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.responses.200.examples.application/json.entries[1].id": "1003086",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.responses.200.examples.application/json.entries[1].owned_by.id": "222276603",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.responses.200.examples.application/json.entries[1].owned_by.login": "ted+boxworks2@box.com",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.responses.200.examples.application/json.entries[1].owned_by.name": "Ted Blosser",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.responses.200.examples.application/json.entries[1].owned_by.type": "user",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.responses.200.examples.application/json.entries[1].product_name": "iPhone",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.responses.200.examples.application/json.entries[1].type": "device_pinner",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.responses.200.examples.application/json.limit": 100,
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.responses.200.examples.application/json.order.length": 1,
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.responses.200.examples.application/json.order[0].by": "id",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.responses.200.examples.application/json.order[0].direction": "ASC",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.responses.200.schema.$ref": "#/definitions/DevicePinnerList",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.responses.default.description": "Get device pinners for an enterprise error",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.summary": "Get Enterprise Device Pins",
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.tags.length": 1,
	"paths./enterprises/{ENTERPRISE_ID}/device_pinners.get.tags[0]": "Devices",
	"paths./events.get.description": "Use this to get events for a given user. A chunk of event objects is returned for the user based on the parameters passed in. Parameters indicating how many chunks are left as well as the next stream_position are also returned.\n\nTo retrieve Enterprise Events specify 'stream_type=admin_logs'. Retrieves up to a year' events for all users in an enterprise. Upper and lower bounds as well as filters can be applied to the results.",
	"paths./events.get.externalDocs.url": "https://docs.box.com/reference#get-events-for-a-user",
	"paths./events.get.operationId": "getUserEvents",
	"paths./events.get.parameters.length": 6,
	"paths./events.get.parameters[0].description": "The location in the event stream at which you want to start receiving events. Can specify special case ‘now’ to get 0 events and the latest stream position for initialization.",
	"paths./events.get.parameters[0].in": "query",
	"paths./events.get.parameters[0].name": "stream_position",
	"paths./events.get.parameters[0].required": false,
	"paths./events.get.parameters[0].type": "string",
	"paths./events.get.parameters[1].description": "Limits the type of events returned: all: returns everything, changes: returns tree changes, sync: returns tree changes only for sync folders",
	"paths./events.get.parameters[1].enum.length": 4,
	"paths./events.get.parameters[1].enum[0]": "all",
	"paths./events.get.parameters[1].enum[1]": "changes",
	"paths./events.get.parameters[1].enum[2]": "sync",
	"paths./events.get.parameters[1].enum[3]": "admin_logs",
	"paths./events.get.parameters[1].in": "query",
	"paths./events.get.parameters[1].name": "stream_type",
	"paths./events.get.parameters[1].required": false,
	"paths./events.get.parameters[1].type": "string",
	"paths./events.get.parameters[2].description": "Limits the number of events returned",
	"paths./events.get.parameters[2].format": "int64",
	"paths./events.get.parameters[2].in": "query",
	"paths./events.get.parameters[2].name": "limit",
	"paths./events.get.parameters[2].required": false,
	"paths./events.get.parameters[2].type": "integer",
	"paths./events.get.parameters[3].description": "A comma-separated list of events to filter by",
	"paths./events.get.parameters[3].in": "query",
	"paths./events.get.parameters[3].name": "event_type",
	"paths./events.get.parameters[3].required": false,
	"paths./events.get.parameters[3].type": "string",
	"paths./events.get.parameters[4].description": "A lower bound on the timestamp of the events returned",
	"paths./events.get.parameters[4].format": "date-time",
	"paths./events.get.parameters[4].in": "query",
	"paths./events.get.parameters[4].name": "created_after",
	"paths./events.get.parameters[4].required": false,
	"paths./events.get.parameters[4].type": "string",
	"paths./events.get.parameters[5].description": "An upper bound on the timestamp of the events returned",
	"paths./events.get.parameters[5].format": "date-time",
	"paths./events.get.parameters[5].in": "query",
	"paths./events.get.parameters[5].name": "created_before",
	"paths./events.get.parameters[5].required": false,
	"paths./events.get.parameters[5].type": "string",
	"paths./events.get.responses.200.description": "A collection of events is returned. See the above table for descriptions of the event types.",
	"paths./events.get.responses.200.examples.application/json.chunk_size": 1,
	"paths./events.get.responses.200.examples.application/json.entries.length": 1,
	"paths./events.get.responses.200.examples.application/json.entries[0].created_at": "2012-12-12T10:53:43-08:00",
	"paths./events.get.responses.200.examples.application/json.entries[0].created_by.id": "17738362",
	"paths./events.get.responses.200.examples.application/json.entries[0].created_by.login": "sean@box.com",
	"paths./events.get.responses.200.examples.application/json.entries[0].created_by.name": "sean rose",
	"paths./events.get.responses.200.examples.application/json.entries[0].created_by.type": "user",
	"paths./events.get.responses.200.examples.application/json.entries[0].event_id": "f82c3ba03e41f7e8a7608363cc6c0390183c3f83",
	"paths./events.get.responses.200.examples.application/json.entries[0].event_type": "ITEM_CREATE",
	"paths./events.get.responses.200.examples.application/json.entries[0].recorded_at": "2012-12-12T10:53:48-08:00",
	"paths./events.get.responses.200.examples.application/json.entries[0].session_id": "70090280850c8d2a1933c1",
	"paths./events.get.responses.200.examples.application/json.entries[0].source.created_at": "2012-12-12T10:53:43-08:00",
	"paths./events.get.responses.200.examples.application/json.entries[0].source.created_by.id": "17738362",
	"paths./events.get.responses.200.examples.application/json.entries[0].source.created_by.login": "sean@box.com",
	"paths./events.get.responses.200.examples.application/json.entries[0].source.created_by.name": "sean rose",
	"paths./events.get.responses.200.examples.application/json.entries[0].source.created_by.type": "user",
	"paths./events.get.responses.200.examples.application/json.entries[0].source.etag": "0",
	"paths./events.get.responses.200.examples.application/json.entries[0].source.id": "11446498",
	"paths./events.get.responses.200.examples.application/json.entries[0].source.item_status": "active",
	"paths./events.get.responses.200.examples.application/json.entries[0].source.modified_at": "2012-12-12T10:53:43-08:00",
	"paths./events.get.responses.200.examples.application/json.entries[0].source.modified_by.id": "17738362",
	"paths./events.get.responses.200.examples.application/json.entries[0].source.modified_by.login": "sean@box.com",
	"paths./events.get.responses.200.examples.application/json.entries[0].source.modified_by.name": "sean rose",
	"paths./events.get.responses.200.examples.application/json.entries[0].source.modified_by.type": "user",
	"paths./events.get.responses.200.examples.application/json.entries[0].source.name": "Pictures",
	"paths./events.get.responses.200.examples.application/json.entries[0].source.owned_by.id": "17738362",
	"paths./events.get.responses.200.examples.application/json.entries[0].source.owned_by.login": "sean@box.com",
	"paths./events.get.responses.200.examples.application/json.entries[0].source.owned_by.name": "sean rose",
	"paths./events.get.responses.200.examples.application/json.entries[0].source.owned_by.type": "user",
	"paths./events.get.responses.200.examples.application/json.entries[0].source.parent.id": "0",
	"paths./events.get.responses.200.examples.application/json.entries[0].source.parent.name": "All Files",
	"paths./events.get.responses.200.examples.application/json.entries[0].source.parent.type": "folder",
	"paths./events.get.responses.200.examples.application/json.entries[0].source.sequence_id": "0",
	"paths./events.get.responses.200.examples.application/json.entries[0].source.size": 0,
	"paths./events.get.responses.200.examples.application/json.entries[0].source.synced": false,
	"paths./events.get.responses.200.examples.application/json.entries[0].source.type": "folder",
	"paths./events.get.responses.200.examples.application/json.entries[0].type": "event",
	"paths./events.get.responses.200.examples.application/json.next_stream_position": 1348790499819,
	"paths./events.get.responses.200.schema.$ref": "#/definitions/EventList",
	"paths./events.get.responses.default.description": "Get events error",
	"paths./events.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./events.get.summary": "User Events, Enterprise Events",
	"paths./events.get.tags.length": 1,
	"paths./events.get.tags[0]": "Events",
	"paths./events.options.description": "To get real-time notification of activity in a Box account, use the long poll feature of the /events API. To do so, first call the /events API with an OPTIONS call to retrieve the long poll URL to use. Next, make a GET request to the provided URL to begin listening for events. If an event occurs within an account you are monitoring, you will receive a response with the value new_change. It’s important to note that this response will not come with any other details, but should serve as a prompt to take further action such as calling the /events endpoint with your last known stream_position. After sending this response, the server will close the connection and you will need to repeat the long poll process to begin listening for events again.\nIf no events occur for a period of time after you make the GET request to the long poll URL, you will receive a response with the value reconnect. When you receive this response, you’ll make another OPTIONS call to the /events endpoint and repeat the long poll process.\nIf you receive no events in retry_timeout seconds, you should make another GET request to the real time server (i.e. URL in the response). This might be necessary in case you do not receive the reconnect message in the face of network errors.\nIf you receive max_retries error when making GET requests to the real time server, you should make another OPTIONS request.",
	"paths./events.options.externalDocs.url": "https://docs.box.com/reference#long-polling",
	"paths./events.options.operationId": "eventLongPolling",
	"paths./events.options.parameters.length": 0,
	"paths./events.options.responses.200.description": "Paginated array of Realtime server instances",
	"paths./events.options.responses.200.schema.$ref": "#/definitions/RealtimeServerList",
	"paths./events.options.responses.default.description": "Options Long polling error",
	"paths./events.options.responses.default.schema.$ref": "#/definitions/Error",
	"paths./events.options.summary": "Long polling",
	"paths./events.options.tags.length": 1,
	"paths./events.options.tags[0]": "Events",
	"paths./file_version_legal_holds.get.description": "Get list of non-deleted Holds for a single Policy.",
	"paths./file_version_legal_holds.get.externalDocs.url": "https://docs.box.com/reference#get-list-of-file-version-legal-holds",
	"paths./file_version_legal_holds.get.operationId": "getFileVersionLegalHoldPolicies",
	"paths./file_version_legal_holds.get.parameters.length": 1,
	"paths./file_version_legal_holds.get.parameters[0].in": "query",
	"paths./file_version_legal_holds.get.parameters[0].name": "policy_id",
	"paths./file_version_legal_holds.get.parameters[0].required": true,
	"paths./file_version_legal_holds.get.parameters[0].type": "string",
	"paths./file_version_legal_holds.get.responses.200.description": "Returns the list of File Version Legal Holds for the passed in Policy. By default, will only return only type, and id, but you can specify more by using the fields parameter.",
	"paths./file_version_legal_holds.get.responses.200.schema.$ref": "#/definitions/FileVersionLegalHoldList",
	"paths./file_version_legal_holds.get.responses.default.description": "Get File Version Legal Hold policy error",
	"paths./file_version_legal_holds.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./file_version_legal_holds.get.summary": "Get List of File Version Legal Holds",
	"paths./file_version_legal_holds.get.tags.length": 1,
	"paths./file_version_legal_holds.get.tags[0]": "Legal Hold Policies",
	"paths./file_version_legal_holds/{ID}.get.description": "Get details of a single File Version Legal Hold.",
	"paths./file_version_legal_holds/{ID}.get.externalDocs.url": "https://docs.box.com/reference#get-hold-by-id",
	"paths./file_version_legal_holds/{ID}.get.operationId": "getFileVersionLegalHoldPolicy",
	"paths./file_version_legal_holds/{ID}.get.parameters.length": 1,
	"paths./file_version_legal_holds/{ID}.get.parameters[0].in": "path",
	"paths./file_version_legal_holds/{ID}.get.parameters[0].name": "ID",
	"paths./file_version_legal_holds/{ID}.get.parameters[0].required": true,
	"paths./file_version_legal_holds/{ID}.get.parameters[0].type": "string",
	"paths./file_version_legal_holds/{ID}.get.responses.200.description": "If the ID is valid, information about the Hold is returned with a 200.",
	"paths./file_version_legal_holds/{ID}.get.responses.200.schema.$ref": "#/definitions/FileVersionLegalHold",
	"paths./file_version_legal_holds/{ID}.get.responses.404.description": "If the ID is for a non-existent Hold, a 404 is returned.",
	"paths./file_version_legal_holds/{ID}.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./file_version_legal_holds/{ID}.get.responses.default.description": "Get File Version Legal Hold policy error",
	"paths./file_version_legal_holds/{ID}.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./file_version_legal_holds/{ID}.get.summary": "Get File Version Legal Hold",
	"paths./file_version_legal_holds/{ID}.get.tags.length": 1,
	"paths./file_version_legal_holds/{ID}.get.tags[0]": "Legal Hold Policies",
	"paths./file_version_retentions.get.description": "Retrieves all file version retentions for the given enterprise.",
	"paths./file_version_retentions.get.externalDocs.url": "https://docs.box.com/reference#get-file-version-retentions",
	"paths./file_version_retentions.get.operationId": "getFileVersionRetentions",
	"paths./file_version_retentions.get.parameters.length": 8,
	"paths./file_version_retentions.get.parameters[0].description": "A file id to filter the file version retentions by.",
	"paths./file_version_retentions.get.parameters[0].in": "query",
	"paths./file_version_retentions.get.parameters[0].name": "file_id",
	"paths./file_version_retentions.get.parameters[0].required": false,
	"paths./file_version_retentions.get.parameters[0].type": "string",
	"paths./file_version_retentions.get.parameters[1].description": "A file version id to filter the file version retentions by.",
	"paths./file_version_retentions.get.parameters[1].in": "query",
	"paths./file_version_retentions.get.parameters[1].name": "file_version_id",
	"paths./file_version_retentions.get.parameters[1].required": false,
	"paths./file_version_retentions.get.parameters[1].type": "string",
	"paths./file_version_retentions.get.parameters[2].description": "A policy id to filter the file version retentions by.",
	"paths./file_version_retentions.get.parameters[2].in": "query",
	"paths./file_version_retentions.get.parameters[2].name": "policy_id",
	"paths./file_version_retentions.get.parameters[2].required": false,
	"paths./file_version_retentions.get.parameters[2].type": "string",
	"paths./file_version_retentions.get.parameters[3].description": "The disposition action of the retention policy. This action can be permanently_delete, which will cause the content retained by the policy to be permanently deleted, or remove_retention, which will lift the retention policy from the content, allowing it to be deleted by users, once the retention policy time period has passed.",
	"paths./file_version_retentions.get.parameters[3].enum.length": 2,
	"paths./file_version_retentions.get.parameters[3].enum[0]": "permanently_delete",
	"paths./file_version_retentions.get.parameters[3].enum[1]": "remove_retention",
	"paths./file_version_retentions.get.parameters[3].in": "query",
	"paths./file_version_retentions.get.parameters[3].name": "disposition_action",
	"paths./file_version_retentions.get.parameters[3].required": false,
	"paths./file_version_retentions.get.parameters[3].type": "string",
	"paths./file_version_retentions.get.parameters[4].description": "See content times for formatting",
	"paths./file_version_retentions.get.parameters[4].in": "query",
	"paths./file_version_retentions.get.parameters[4].name": "disposition_before",
	"paths./file_version_retentions.get.parameters[4].required": false,
	"paths./file_version_retentions.get.parameters[4].type": "string",
	"paths./file_version_retentions.get.parameters[5].description": "See content times for formatting",
	"paths./file_version_retentions.get.parameters[5].in": "query",
	"paths./file_version_retentions.get.parameters[5].name": "disposition_after",
	"paths./file_version_retentions.get.parameters[5].required": false,
	"paths./file_version_retentions.get.parameters[5].type": "string",
	"paths./file_version_retentions.get.parameters[6].description": "The maximum number of items to return in a page",
	"paths./file_version_retentions.get.parameters[6].format": "int64",
	"paths./file_version_retentions.get.parameters[6].in": "query",
	"paths./file_version_retentions.get.parameters[6].name": "limit",
	"paths./file_version_retentions.get.parameters[6].required": false,
	"paths./file_version_retentions.get.parameters[6].type": "integer",
	"paths./file_version_retentions.get.parameters[7].description": "Base 64 encoded string that represents where the paging should being. It should be left blank to begin paging.",
	"paths./file_version_retentions.get.parameters[7].in": "query",
	"paths./file_version_retentions.get.parameters[7].name": "marker",
	"paths./file_version_retentions.get.parameters[7].required": false,
	"paths./file_version_retentions.get.parameters[7].type": "string",
	"paths./file_version_retentions.get.responses.200.description": "Returns the list of all file version retentions for the enterprise. If the query parameters are given, only the file version retentions that match the query parameters are returned.",
	"paths./file_version_retentions.get.responses.200.examples.application/json.entries.length": 3,
	"paths./file_version_retentions.get.responses.200.examples.application/json.entries[0].id": "112725",
	"paths./file_version_retentions.get.responses.200.examples.application/json.entries[0].type": "file_version_retention",
	"paths./file_version_retentions.get.responses.200.examples.application/json.entries[1].id": "112729",
	"paths./file_version_retentions.get.responses.200.examples.application/json.entries[1].type": "file_version_retention",
	"paths./file_version_retentions.get.responses.200.examples.application/json.entries[2].id": "112733",
	"paths./file_version_retentions.get.responses.200.examples.application/json.entries[2].type": "file_version_retention",
	"paths./file_version_retentions.get.responses.200.examples.application/json.limit": 100,
	"paths./file_version_retentions.get.responses.200.examples.application/json.order.length": 1,
	"paths./file_version_retentions.get.responses.200.examples.application/json.order[0].by": "file_version_id",
	"paths./file_version_retentions.get.responses.200.examples.application/json.order[0].direction": "ASC",
	"paths./file_version_retentions.get.responses.200.schema.$ref": "#/definitions/FileVersionRetentionList",
	"paths./file_version_retentions.get.responses.default.description": "Get File version retentions error",
	"paths./file_version_retentions.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./file_version_retentions.get.summary": "Get File Version Retentions",
	"paths./file_version_retentions.get.tags.length": 1,
	"paths./file_version_retentions.get.tags[0]": "Files",
	"paths./file_version_retentions/{FILE_VERSION_RETENTION_ID}.get.description": "Used to retrieve information about a file version retention",
	"paths./file_version_retentions/{FILE_VERSION_RETENTION_ID}.get.externalDocs.url": "https://docs.box.com/reference#get-file-version-retention",
	"paths./file_version_retentions/{FILE_VERSION_RETENTION_ID}.get.operationId": "getFileVersionRetention",
	"paths./file_version_retentions/{FILE_VERSION_RETENTION_ID}.get.parameters.length": 1,
	"paths./file_version_retentions/{FILE_VERSION_RETENTION_ID}.get.parameters[0].in": "path",
	"paths./file_version_retentions/{FILE_VERSION_RETENTION_ID}.get.parameters[0].name": "FILE_VERSION_RETENTION_ID",
	"paths./file_version_retentions/{FILE_VERSION_RETENTION_ID}.get.parameters[0].required": true,
	"paths./file_version_retentions/{FILE_VERSION_RETENTION_ID}.get.parameters[0].type": "string",
	"paths./file_version_retentions/{FILE_VERSION_RETENTION_ID}.get.responses.200.description": "The specified file version retention will be returned upon success.",
	"paths./file_version_retentions/{FILE_VERSION_RETENTION_ID}.get.responses.200.examples.application/json.applied_at": "2015-08-06T22:02:24-07:00",
	"paths./file_version_retentions/{FILE_VERSION_RETENTION_ID}.get.responses.200.examples.application/json.disposition_at": "2016-08-06T21:45:28-07:00",
	"paths./file_version_retentions/{FILE_VERSION_RETENTION_ID}.get.responses.200.examples.application/json.file.etag": "2",
	"paths./file_version_retentions/{FILE_VERSION_RETENTION_ID}.get.responses.200.examples.application/json.file.id": "5011706273",
	"paths./file_version_retentions/{FILE_VERSION_RETENTION_ID}.get.responses.200.examples.application/json.file.type": "file_version",
	"paths./file_version_retentions/{FILE_VERSION_RETENTION_ID}.get.responses.200.examples.application/json.file_version.id": "124887629",
	"paths./file_version_retentions/{FILE_VERSION_RETENTION_ID}.get.responses.200.examples.application/json.file_version.sha1": "4262d6250b0e6f440dca43a2337bd4621bad9136",
	"paths./file_version_retentions/{FILE_VERSION_RETENTION_ID}.get.responses.200.examples.application/json.file_version.type": "file_version",
	"paths./file_version_retentions/{FILE_VERSION_RETENTION_ID}.get.responses.200.examples.application/json.id": "112729",
	"paths./file_version_retentions/{FILE_VERSION_RETENTION_ID}.get.responses.200.examples.application/json.type": "file_version_retention",
	"paths./file_version_retentions/{FILE_VERSION_RETENTION_ID}.get.responses.200.examples.application/json.winning_retention_policy.id": "41173",
	"paths./file_version_retentions/{FILE_VERSION_RETENTION_ID}.get.responses.200.examples.application/json.winning_retention_policy.policy_name": "Tax Documents",
	"paths./file_version_retentions/{FILE_VERSION_RETENTION_ID}.get.responses.200.examples.application/json.winning_retention_policy.type": "retention_policy",
	"paths./file_version_retentions/{FILE_VERSION_RETENTION_ID}.get.responses.200.schema.$ref": "#/definitions/FileVersionRetention",
	"paths./file_version_retentions/{FILE_VERSION_RETENTION_ID}.get.responses.404.description": "If the file version retention specified does not exist, a 404 HTTP status code of not_found is returned.",
	"paths./file_version_retentions/{FILE_VERSION_RETENTION_ID}.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./file_version_retentions/{FILE_VERSION_RETENTION_ID}.get.responses.default.description": "Get file version Retention error",
	"paths./file_version_retentions/{FILE_VERSION_RETENTION_ID}.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./file_version_retentions/{FILE_VERSION_RETENTION_ID}.get.summary": "Get File Version Retention",
	"paths./file_version_retentions/{FILE_VERSION_RETENTION_ID}.get.tags.length": 1,
	"paths./file_version_retentions/{FILE_VERSION_RETENTION_ID}.get.tags[0]": "Files",
	"paths./files/content.options.description": "The Pre-flight check API will verify that a file will be accepted by Box before you send all the bytes over the wire.",
	"paths./files/content.options.externalDocs.url": "https://docs.box.com/reference#preflight-check",
	"paths./files/content.options.operationId": "fileUploadPreflightCheck",
	"paths./files/content.options.parameters.length": 1,
	"paths./files/content.options.parameters[0].in": "body",
	"paths./files/content.options.parameters[0].name": "body",
	"paths./files/content.options.parameters[0].required": true,
	"paths./files/content.options.parameters[0].schema.$ref": "#/definitions/BoxFile",
	"paths./files/content.options.responses.200.description": "The upload would be successful",
	"paths./files/content.options.responses.default.description": "File upload preflight check error",
	"paths./files/content.options.responses.default.schema.$ref": "#/definitions/Error",
	"paths./files/content.options.summary": "File upload preflight check",
	"paths./files/content.options.tags.length": 1,
	"paths./files/content.options.tags[0]": "Files",
	"paths./files/{FILE_ID}.delete.description": "Discards a file to the trash. The etag of the file can be included as an ‘If-Match’ header to prevent race conditions.",
	"paths./files/{FILE_ID}.delete.externalDocs.url": "https://docs.box.com/reference#delete-a-file",
	"paths./files/{FILE_ID}.delete.operationId": "deleteFile",
	"paths./files/{FILE_ID}.delete.parameters.length": 2,
	"paths./files/{FILE_ID}.delete.parameters[0].in": "path",
	"paths./files/{FILE_ID}.delete.parameters[0].name": "FILE_ID",
	"paths./files/{FILE_ID}.delete.parameters[0].required": true,
	"paths./files/{FILE_ID}.delete.parameters[0].type": "string",
	"paths./files/{FILE_ID}.delete.parameters[1].description": "The etag of the file. This is in the ‘etag’ field of the file object.",
	"paths./files/{FILE_ID}.delete.parameters[1].in": "header",
	"paths./files/{FILE_ID}.delete.parameters[1].name": "If-Match",
	"paths./files/{FILE_ID}.delete.parameters[1].required": false,
	"paths./files/{FILE_ID}.delete.parameters[1].type": "string",
	"paths./files/{FILE_ID}.delete.responses.204.description": "An empty 204 response is sent to confirm deletion of the file.",
	"paths./files/{FILE_ID}.delete.responses.412.description": "If the If-Match header is sent and fails, a 412 Precondition Failed error is returned.",
	"paths./files/{FILE_ID}.delete.responses.412.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}.delete.responses.default.description": "Delete file error",
	"paths./files/{FILE_ID}.delete.responses.default.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}.delete.summary": "Delete File",
	"paths./files/{FILE_ID}.delete.tags.length": 1,
	"paths./files/{FILE_ID}.delete.tags[0]": "Files",
	"paths./files/{FILE_ID}.get.description": "Used to retrieve the metadata about a file.",
	"paths./files/{FILE_ID}.get.externalDocs.url": "https://docs.box.com/reference#files",
	"paths./files/{FILE_ID}.get.operationId": "getFile",
	"paths./files/{FILE_ID}.get.parameters.length": 2,
	"paths./files/{FILE_ID}.get.parameters[0].in": "path",
	"paths./files/{FILE_ID}.get.parameters[0].name": "FILE_ID",
	"paths./files/{FILE_ID}.get.parameters[0].required": true,
	"paths./files/{FILE_ID}.get.parameters[0].type": "string",
	"paths./files/{FILE_ID}.get.parameters[1].description": "Attribute(s) to include in the response.",
	"paths./files/{FILE_ID}.get.parameters[1].in": "query",
	"paths./files/{FILE_ID}.get.parameters[1].name": "fields",
	"paths./files/{FILE_ID}.get.parameters[1].required": false,
	"paths./files/{FILE_ID}.get.parameters[1].type": "string",
	"paths./files/{FILE_ID}.get.responses.200.description": "A full file object is returned if the ID is valid and if the user has access to the file.",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.created_at": "2012-12-12T10:55:30-08:00",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.created_by.id": "17738362",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.created_by.login": "sean@box.com",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.created_by.name": "sean rose",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.created_by.type": "user",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.description": "a picture of tigers",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.etag": "3",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.file_version.id": "26261748416",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.file_version.sha1": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.file_version.type": "file_version",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.id": "5000948880",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.item_status": "active",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.modified_at": "2012-12-12T11:04:26-08:00",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.modified_by.id": "17738362",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.modified_by.login": "sean@box.com",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.modified_by.name": "sean rose",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.modified_by.type": "user",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.name": "tigers.jpeg",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.owned_by.id": "17738362",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.owned_by.login": "sean@box.com",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.owned_by.name": "sean rose",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.owned_by.type": "user",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.parent.etag": "1",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.parent.id": "11446498",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.parent.name": "Pictures",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.parent.sequence_id": "1",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.parent.type": "folder",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.path_collection.entries.length": 2,
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.path_collection.entries[0].id": "0",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.path_collection.entries[0].name": "All Files",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.path_collection.entries[0].type": "folder",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.path_collection.entries[1].etag": "1",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.path_collection.entries[1].id": "11446498",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.path_collection.entries[1].name": "Pictures",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.path_collection.entries[1].sequence_id": "1",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.path_collection.entries[1].type": "folder",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.path_collection.total_count": 2,
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.sequence_id": "3",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.sha1": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.shared_link.access": "open",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.shared_link.download_count": 0,
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.shared_link.download_url": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.shared_link.is_password_enabled": false,
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.shared_link.permissions.can_download": true,
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.shared_link.permissions.can_preview": true,
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.shared_link.preview_count": 0,
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.shared_link.url": "https://www.box.com/s/rh935iit6ewrmw0unyul",
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.size": 629644,
	"paths./files/{FILE_ID}.get.responses.200.examples.application/json.type": "file",
	"paths./files/{FILE_ID}.get.responses.200.schema.$ref": "#/definitions/BoxFile",
	"paths./files/{FILE_ID}.get.responses.404.description": "File Not Found",
	"paths./files/{FILE_ID}.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}.get.responses.415.description": "Media Type Not Supported",
	"paths./files/{FILE_ID}.get.responses.415.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}.get.responses.default.description": "Get file info error",
	"paths./files/{FILE_ID}.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}.get.summary": "Get File's Info, Get Embed Link",
	"paths./files/{FILE_ID}.get.tags.length": 1,
	"paths./files/{FILE_ID}.get.tags[0]": "Files",
	"paths./files/{FILE_ID}.post.description": "Restores an item that has been moved to the trash. Default behavior is to restore the item to the folder it was in before it was moved to the trash. If that parent folder no longer exists or if there is now an item with the same name in that parent folder, the new parent folder and/or new name will need to be included in the request.",
	"paths./files/{FILE_ID}.post.externalDocs.url": "https://docs.box.com/reference#restore-a-trashed-item",
	"paths./files/{FILE_ID}.post.operationId": "restoreTrashedFile",
	"paths./files/{FILE_ID}.post.parameters.length": 2,
	"paths./files/{FILE_ID}.post.parameters[0].in": "path",
	"paths./files/{FILE_ID}.post.parameters[0].name": "FILE_ID",
	"paths./files/{FILE_ID}.post.parameters[0].required": true,
	"paths./files/{FILE_ID}.post.parameters[0].type": "string",
	"paths./files/{FILE_ID}.post.parameters[1].in": "body",
	"paths./files/{FILE_ID}.post.parameters[1].name": "body",
	"paths./files/{FILE_ID}.post.parameters[1].required": true,
	"paths./files/{FILE_ID}.post.parameters[1].schema.$ref": "#/definitions/BoxFile",
	"paths./files/{FILE_ID}.post.responses.201.description": "The full item will be returned with a 201 Created status. By default it is restored to the parent folder it was in before it was trashed.",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.content_created_at": "2013-01-30T18:43:56-08:00",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.content_modified_at": "2013-02-07T10:56:58-08:00",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.created_at": "2013-01-30T18:43:56-08:00",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.created_by.id": "181757341",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.created_by.login": "sean+test@box.com",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.created_by.name": "sean test",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.created_by.type": "user",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.description": "",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.etag": "3",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.id": "5859258256",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.item_status": "active",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.modified_at": "2013-02-07T10:56:58-08:00",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.modified_by.id": "181757341",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.modified_by.login": "sean+test@box.com",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.modified_by.name": "sean test",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.modified_by.type": "user",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.name": "Screenshot_1_30_13_6_37_PM.png",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.owned_by.id": "181757341",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.owned_by.login": "sean+test@box.com",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.owned_by.name": "sean test",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.owned_by.type": "user",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.parent.id": "0",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.parent.name": "All Files",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.parent.type": "folder",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.path_collection.entries.length": 1,
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.path_collection.entries[0].id": "0",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.path_collection.entries[0].name": "All Files",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.path_collection.entries[0].type": "folder",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.path_collection.total_count": 1,
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.sequence_id": "3",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.sha1": "4bd9e98652799fc57cf9423e13629c151152ce6c",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.shared_link.access": "open",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.shared_link.download_count": 0,
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.shared_link.download_url": "https://seanrose.box.com/shared/static/ebgti08mtmhbpb4vlp55.png",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.shared_link.is_password_enabled": false,
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.shared_link.permissions.can_download": true,
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.shared_link.permissions.can_preview": true,
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.shared_link.preview_count": 4,
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.shared_link.url": "https://seanrose.box.com/s/ebgti08mtmhbpb4vlp55",
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.size": 163265,
	"paths./files/{FILE_ID}.post.responses.201.examples.application/json.type": "file",
	"paths./files/{FILE_ID}.post.responses.201.schema.$ref": "#/definitions/BoxFile",
	"paths./files/{FILE_ID}.post.responses.403.description": "The user doesn’t have access to the folder the item is being restored to or the user doesn’t have permission to restore items from the trash",
	"paths./files/{FILE_ID}.post.responses.403.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}.post.responses.404.description": "The item is not in the trash",
	"paths./files/{FILE_ID}.post.responses.404.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}.post.responses.409.description": "There is an item with the same name in the folder the item is being restored to",
	"paths./files/{FILE_ID}.post.responses.409.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}.post.responses.default.description": "Restore file error",
	"paths./files/{FILE_ID}.post.responses.default.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}.post.summary": "Restore Item",
	"paths./files/{FILE_ID}.post.tags.length": 1,
	"paths./files/{FILE_ID}.post.tags[0]": "Files",
	"paths./files/{FILE_ID}.put.description": "Used to update individual or multiple fields in the file object, including renaming the file, changing its description, and creating a shared link for the file. To move a file, change the ID of its parent folder. An optional If-Match header can be included to prevent race conditions.\n\nTo lock and unlock files, you execute a PUT operation on the /files/{file id} endpoint and set or clear the lock properties on the file.\n\nUsed to create a shared link for this particular file. Please see here for more information on the permissions available for shared links. In order to get default shared link status, set it to an empty access level, i.e. {\"shared_link\": {}}. In order to disable a shared link, send this same type of PUT request with the value of shared_link set to null, i.e. {\"shared_link\": null}",
	"paths./files/{FILE_ID}.put.externalDocs.url": "https://docs.box.com/reference#update-a-files-information",
	"paths./files/{FILE_ID}.put.operationId": "updateFileInfo",
	"paths./files/{FILE_ID}.put.parameters.length": 3,
	"paths./files/{FILE_ID}.put.parameters[0].in": "path",
	"paths./files/{FILE_ID}.put.parameters[0].name": "FILE_ID",
	"paths./files/{FILE_ID}.put.parameters[0].required": true,
	"paths./files/{FILE_ID}.put.parameters[0].type": "string",
	"paths./files/{FILE_ID}.put.parameters[1].in": "body",
	"paths./files/{FILE_ID}.put.parameters[1].name": "body",
	"paths./files/{FILE_ID}.put.parameters[1].required": true,
	"paths./files/{FILE_ID}.put.parameters[1].schema.$ref": "#/definitions/BoxFile",
	"paths./files/{FILE_ID}.put.parameters[2].description": "The etag of the file can be included as an ‘If-Match’ header to prevent race conditions.",
	"paths./files/{FILE_ID}.put.parameters[2].in": "header",
	"paths./files/{FILE_ID}.put.parameters[2].name": "If-Match",
	"paths./files/{FILE_ID}.put.parameters[2].required": false,
	"paths./files/{FILE_ID}.put.parameters[2].type": "string",
	"paths./files/{FILE_ID}.put.responses.200.description": "A full file object is returned if the ID is valid and if the user has access to the file.",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.created_at": "2012-12-12T10:55:30-08:00",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.created_by.id": "17738362",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.created_by.login": "sean@box.com",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.created_by.name": "sean rose",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.created_by.type": "user",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.description": "a picture of tigers",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.etag": "3",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.id": "5000948880",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.item_status": "active",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.modified_at": "2012-12-12T11:04:26-08:00",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.modified_by.id": "17738362",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.modified_by.login": "sean@box.com",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.modified_by.name": "sean rose",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.modified_by.type": "user",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.name": "new name.jpg",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.owned_by.id": "17738362",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.owned_by.login": "sean@box.com",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.owned_by.name": "sean rose",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.owned_by.type": "user",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.parent.etag": "1",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.parent.id": "11446498",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.parent.name": "Pictures",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.parent.sequence_id": "1",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.parent.type": "folder",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.path_collection.entries.length": 2,
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.path_collection.entries[0].id": "0",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.path_collection.entries[0].name": "All Files",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.path_collection.entries[0].type": "folder",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.path_collection.entries[1].etag": "1",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.path_collection.entries[1].id": "11446498",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.path_collection.entries[1].name": "Pictures",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.path_collection.entries[1].sequence_id": "1",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.path_collection.entries[1].type": "folder",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.path_collection.total_count": 2,
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.sequence_id": "3",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.sha1": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.shared_link.access": "open",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.shared_link.download_count": 0,
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.shared_link.download_url": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.shared_link.is_password_enabled": false,
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.shared_link.permissions.can_download": true,
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.shared_link.permissions.can_preview": true,
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.shared_link.preview_count": 0,
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.shared_link.url": "https://www.box.com/s/rh935iit6ewrmw0unyul",
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.size": 629644,
	"paths./files/{FILE_ID}.put.responses.200.examples.application/json.type": "file",
	"paths./files/{FILE_ID}.put.responses.200.schema.$ref": "#/definitions/BoxFile",
	"paths./files/{FILE_ID}.put.responses.default.description": "Update file info error",
	"paths./files/{FILE_ID}.put.responses.default.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}.put.summary": "Update File Info, Lock and Unlock, Create Shared Link",
	"paths./files/{FILE_ID}.put.tags.length": 1,
	"paths./files/{FILE_ID}.put.tags[0]": "Files",
	"paths./files/{FILE_ID}/collaborations.get.description": "Use this to get a list of all the collaborations on a file",
	"paths./files/{FILE_ID}/collaborations.get.externalDocs.url": "https://docs.box.com/reference#get-file-collaborations",
	"paths./files/{FILE_ID}/collaborations.get.operationId": "getFileCollaborations",
	"paths./files/{FILE_ID}/collaborations.get.parameters.length": 4,
	"paths./files/{FILE_ID}/collaborations.get.parameters[0].in": "path",
	"paths./files/{FILE_ID}/collaborations.get.parameters[0].name": "FILE_ID",
	"paths./files/{FILE_ID}/collaborations.get.parameters[0].required": true,
	"paths./files/{FILE_ID}/collaborations.get.parameters[0].type": "string",
	"paths./files/{FILE_ID}/collaborations.get.parameters[1].description": "Attribute(s) to include in the response",
	"paths./files/{FILE_ID}/collaborations.get.parameters[1].in": "query",
	"paths./files/{FILE_ID}/collaborations.get.parameters[1].name": "fields",
	"paths./files/{FILE_ID}/collaborations.get.parameters[1].required": false,
	"paths./files/{FILE_ID}/collaborations.get.parameters[1].type": "string",
	"paths./files/{FILE_ID}/collaborations.get.parameters[2].description": "The maximum number of items to return in a page",
	"paths./files/{FILE_ID}/collaborations.get.parameters[2].format": "int32",
	"paths./files/{FILE_ID}/collaborations.get.parameters[2].in": "query",
	"paths./files/{FILE_ID}/collaborations.get.parameters[2].name": "limit",
	"paths./files/{FILE_ID}/collaborations.get.parameters[2].required": false,
	"paths./files/{FILE_ID}/collaborations.get.parameters[2].type": "integer",
	"paths./files/{FILE_ID}/collaborations.get.parameters[3].description": "The item at which to begin the response",
	"paths./files/{FILE_ID}/collaborations.get.parameters[3].format": "int32",
	"paths./files/{FILE_ID}/collaborations.get.parameters[3].in": "query",
	"paths./files/{FILE_ID}/collaborations.get.parameters[3].name": "offset",
	"paths./files/{FILE_ID}/collaborations.get.parameters[3].required": false,
	"paths./files/{FILE_ID}/collaborations.get.parameters[3].type": "integer",
	"paths./files/{FILE_ID}/collaborations.get.responses.200.description": "A collection of collaboration objects is returned",
	"paths./files/{FILE_ID}/collaborations.get.responses.200.examples.application/json.entries.length": 1,
	"paths./files/{FILE_ID}/collaborations.get.responses.200.examples.application/json.entries[0].created_at": "2012-12-12T11:25:01-08:00",
	"paths./files/{FILE_ID}/collaborations.get.responses.200.examples.application/json.entries[0].created_by.id": "17738362",
	"paths./files/{FILE_ID}/collaborations.get.responses.200.examples.application/json.entries[0].created_by.login": "sean@box.com",
	"paths./files/{FILE_ID}/collaborations.get.responses.200.examples.application/json.entries[0].created_by.name": "sean rose",
	"paths./files/{FILE_ID}/collaborations.get.responses.200.examples.application/json.entries[0].created_by.type": "user",
	"paths./files/{FILE_ID}/collaborations.get.responses.200.examples.application/json.entries[0].id": "191969",
	"paths./files/{FILE_ID}/collaborations.get.responses.200.examples.application/json.entries[0].is_reply_comment": false,
	"paths./files/{FILE_ID}/collaborations.get.responses.200.examples.application/json.entries[0].item.id": "5000948880",
	"paths./files/{FILE_ID}/collaborations.get.responses.200.examples.application/json.entries[0].item.type": "file",
	"paths./files/{FILE_ID}/collaborations.get.responses.200.examples.application/json.entries[0].message": "These tigers are cool!",
	"paths./files/{FILE_ID}/collaborations.get.responses.200.examples.application/json.entries[0].modified_at": "2012-12-12T11:25:01-08:00",
	"paths./files/{FILE_ID}/collaborations.get.responses.200.examples.application/json.entries[0].type": "comment",
	"paths./files/{FILE_ID}/collaborations.get.responses.200.examples.application/json.total_count": 1,
	"paths./files/{FILE_ID}/collaborations.get.responses.200.schema.$ref": "#/definitions/CollaborationList",
	"paths./files/{FILE_ID}/collaborations.get.responses.default.description": "Get File's Collaborations error",
	"paths./files/{FILE_ID}/collaborations.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}/collaborations.get.summary": "Get File's Collaborations",
	"paths./files/{FILE_ID}/collaborations.get.tags.length": 1,
	"paths./files/{FILE_ID}/collaborations.get.tags[0]": "Files",
	"paths./files/{FILE_ID}/comments.get.description": "Retrieves the comments on a particular file, if any exist.",
	"paths./files/{FILE_ID}/comments.get.externalDocs.url": "https://docs.box.com/reference#view-the-comments-on-a-file",
	"paths./files/{FILE_ID}/comments.get.operationId": "getFileComments",
	"paths./files/{FILE_ID}/comments.get.parameters.length": 2,
	"paths./files/{FILE_ID}/comments.get.parameters[0].in": "path",
	"paths./files/{FILE_ID}/comments.get.parameters[0].name": "FILE_ID",
	"paths./files/{FILE_ID}/comments.get.parameters[0].required": true,
	"paths./files/{FILE_ID}/comments.get.parameters[0].type": "string",
	"paths./files/{FILE_ID}/comments.get.parameters[1].description": "Attribute(s) to include in the response",
	"paths./files/{FILE_ID}/comments.get.parameters[1].in": "query",
	"paths./files/{FILE_ID}/comments.get.parameters[1].name": "fields",
	"paths./files/{FILE_ID}/comments.get.parameters[1].required": false,
	"paths./files/{FILE_ID}/comments.get.parameters[1].type": "string",
	"paths./files/{FILE_ID}/comments.get.responses.200.description": "A collection of comment objects are returned. If there are no comments on the file, an empty comments array is returned.",
	"paths./files/{FILE_ID}/comments.get.responses.200.examples.application/json.entries.length": 1,
	"paths./files/{FILE_ID}/comments.get.responses.200.examples.application/json.entries[0].created_at": "2012-12-12T11:25:01-08:00",
	"paths./files/{FILE_ID}/comments.get.responses.200.examples.application/json.entries[0].created_by.id": "17738362",
	"paths./files/{FILE_ID}/comments.get.responses.200.examples.application/json.entries[0].created_by.login": "sean@box.com",
	"paths./files/{FILE_ID}/comments.get.responses.200.examples.application/json.entries[0].created_by.name": "sean rose",
	"paths./files/{FILE_ID}/comments.get.responses.200.examples.application/json.entries[0].created_by.type": "user",
	"paths./files/{FILE_ID}/comments.get.responses.200.examples.application/json.entries[0].id": "191969",
	"paths./files/{FILE_ID}/comments.get.responses.200.examples.application/json.entries[0].is_reply_comment": false,
	"paths./files/{FILE_ID}/comments.get.responses.200.examples.application/json.entries[0].item.id": "5000948880",
	"paths./files/{FILE_ID}/comments.get.responses.200.examples.application/json.entries[0].item.type": "file",
	"paths./files/{FILE_ID}/comments.get.responses.200.examples.application/json.entries[0].message": "These tigers are cool!",
	"paths./files/{FILE_ID}/comments.get.responses.200.examples.application/json.entries[0].modified_at": "2012-12-12T11:25:01-08:00",
	"paths./files/{FILE_ID}/comments.get.responses.200.examples.application/json.entries[0].type": "comment",
	"paths./files/{FILE_ID}/comments.get.responses.200.examples.application/json.total_count": 1,
	"paths./files/{FILE_ID}/comments.get.responses.200.schema.$ref": "#/definitions/CommentList",
	"paths./files/{FILE_ID}/comments.get.responses.default.description": "Get file's comments error",
	"paths./files/{FILE_ID}/comments.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}/comments.get.summary": "Get File's Comments",
	"paths./files/{FILE_ID}/comments.get.tags.length": 1,
	"paths./files/{FILE_ID}/comments.get.tags[0]": "Files",
	"paths./files/{FILE_ID}/content.get.description": "Retrieves the actual data of the file. An optional version parameter can be set to download a previous version of the file.",
	"paths./files/{FILE_ID}/content.get.externalDocs.url": "https://docs.box.com/reference#download-a-file",
	"paths./files/{FILE_ID}/content.get.operationId": "getFileContent",
	"paths./files/{FILE_ID}/content.get.parameters.length": 4,
	"paths./files/{FILE_ID}/content.get.parameters[0].in": "path",
	"paths./files/{FILE_ID}/content.get.parameters[0].name": "FILE_ID",
	"paths./files/{FILE_ID}/content.get.parameters[0].required": true,
	"paths./files/{FILE_ID}/content.get.parameters[0].type": "string",
	"paths./files/{FILE_ID}/content.get.parameters[1].description": "The range value in bytes. Format should be bytes={start_range}-{end_range}",
	"paths./files/{FILE_ID}/content.get.parameters[1].in": "header",
	"paths./files/{FILE_ID}/content.get.parameters[1].name": "Range",
	"paths./files/{FILE_ID}/content.get.parameters[1].required": false,
	"paths./files/{FILE_ID}/content.get.parameters[1].type": "string",
	"paths./files/{FILE_ID}/content.get.parameters[2].description": "The ID specific version of this file to download.",
	"paths./files/{FILE_ID}/content.get.parameters[2].in": "query",
	"paths./files/{FILE_ID}/content.get.parameters[2].name": "version",
	"paths./files/{FILE_ID}/content.get.parameters[2].required": false,
	"paths./files/{FILE_ID}/content.get.parameters[2].type": "string",
	"paths./files/{FILE_ID}/content.get.parameters[3].description": "The shared link for this item. Format should be shared_link=SHARED_LINK",
	"paths./files/{FILE_ID}/content.get.parameters[3].in": "header",
	"paths./files/{FILE_ID}/content.get.parameters[3].name": "BoxApi",
	"paths./files/{FILE_ID}/content.get.parameters[3].required": false,
	"paths./files/{FILE_ID}/content.get.parameters[3].type": "string",
	"paths./files/{FILE_ID}/content.get.responses.202.description": "If the file is not ready to be downloaded (i.e. in the case where the file was uploaded immediately before the download request), a response with an HTTP status of 202 Accepted will be returned with a Retry-After header indicating the time in seconds after which the file will be available for the client to download.",
	"paths./files/{FILE_ID}/content.get.responses.302.description": "If the file is available to be downloaded, the response will be a 302 Found to a URL at dl.boxcloud.com. The dl.boxcloud.com URL is not persistent. Clients will need to follow the redirect in order to actually download the file. The raw data of the file is returned unless the file ID is invalid or the user does not have access to it.",
	"paths./files/{FILE_ID}/content.get.responses.default.description": "Download file error",
	"paths./files/{FILE_ID}/content.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}/content.get.summary": "Download File",
	"paths./files/{FILE_ID}/content.get.tags.length": 1,
	"paths./files/{FILE_ID}/content.get.tags[0]": "Files",
	"paths./files/{FILE_ID}/copy.post.description": "Used to create a copy of a file in another folder. The original version of the file will not be altered.",
	"paths./files/{FILE_ID}/copy.post.externalDocs.url": "https://docs.box.com/reference#copy-a-file",
	"paths./files/{FILE_ID}/copy.post.operationId": "copyFile",
	"paths./files/{FILE_ID}/copy.post.parameters.length": 2,
	"paths./files/{FILE_ID}/copy.post.parameters[0].in": "path",
	"paths./files/{FILE_ID}/copy.post.parameters[0].name": "FILE_ID",
	"paths./files/{FILE_ID}/copy.post.parameters[0].required": true,
	"paths./files/{FILE_ID}/copy.post.parameters[0].type": "string",
	"paths./files/{FILE_ID}/copy.post.parameters[1].in": "body",
	"paths./files/{FILE_ID}/copy.post.parameters[1].name": "body",
	"paths./files/{FILE_ID}/copy.post.parameters[1].required": true,
	"paths./files/{FILE_ID}/copy.post.parameters[1].schema.$ref": "#/definitions/CopyFile",
	"paths./files/{FILE_ID}/copy.post.responses.201.description": "A full file object is returned if the ID is valid and if the update is successful.",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.created_at": "2012-12-12T10:55:30-08:00",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.created_by.id": "17738362",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.created_by.login": "sean@box.com",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.created_by.name": "sean rose",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.created_by.type": "user",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.description": "a picture of tigers",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.etag": "3",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.id": "5000948880",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.item_status": "active",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.modified_at": "2012-12-12T11:04:26-08:00",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.modified_by.id": "17738362",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.modified_by.login": "sean@box.com",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.modified_by.name": "sean rose",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.modified_by.type": "user",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.name": "tigers.jpeg",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.owned_by.id": "17738362",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.owned_by.login": "sean@box.com",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.owned_by.name": "sean rose",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.owned_by.type": "user",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.parent.etag": "1",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.parent.id": "11446498",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.parent.name": "Pictures",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.parent.sequence_id": "1",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.parent.type": "folder",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.path_collection.entries.length": 2,
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.path_collection.entries[0].id": "0",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.path_collection.entries[0].name": "All Files",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.path_collection.entries[0].type": "folder",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.path_collection.entries[1].etag": "1",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.path_collection.entries[1].id": "11446498",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.path_collection.entries[1].name": "Pictures",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.path_collection.entries[1].sequence_id": "1",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.path_collection.entries[1].type": "folder",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.path_collection.total_count": 2,
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.sequence_id": "3",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.sha1": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.shared_link.access": "open",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.shared_link.download_count": 0,
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.shared_link.download_url": "https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.shared_link.is_password_enabled": false,
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.shared_link.permissions.can_download": true,
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.shared_link.permissions.can_preview": true,
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.shared_link.preview_count": 0,
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.shared_link.url": "https://www.box.com/s/rh935iit6ewrmw0unyul",
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.size": 629644,
	"paths./files/{FILE_ID}/copy.post.responses.201.examples.application/json.type": "file",
	"paths./files/{FILE_ID}/copy.post.responses.201.schema.$ref": "#/definitions/BoxFile",
	"paths./files/{FILE_ID}/copy.post.responses.409.description": "A 409 will be returned if the intended destination folder is the same, as this will cause a name collision.",
	"paths./files/{FILE_ID}/copy.post.responses.409.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}/copy.post.responses.default.description": "Copy file error",
	"paths./files/{FILE_ID}/copy.post.responses.default.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}/copy.post.summary": "Copy File",
	"paths./files/{FILE_ID}/copy.post.tags.length": 1,
	"paths./files/{FILE_ID}/copy.post.tags[0]": "Files",
	"paths./files/{FILE_ID}/metadata.get.description": "Used to retrieve all metadata associated with a given file",
	"paths./files/{FILE_ID}/metadata.get.externalDocs.url": "https://docs.box.com/reference#create-web-link",
	"paths./files/{FILE_ID}/metadata.get.operationId": "getAllFileMetadata",
	"paths./files/{FILE_ID}/metadata.get.parameters.length": 1,
	"paths./files/{FILE_ID}/metadata.get.parameters[0].in": "path",
	"paths./files/{FILE_ID}/metadata.get.parameters[0].name": "FILE_ID",
	"paths./files/{FILE_ID}/metadata.get.parameters[0].required": true,
	"paths./files/{FILE_ID}/metadata.get.parameters[0].type": "string",
	"paths./files/{FILE_ID}/metadata.get.responses.200.description": "An array of metadata instances associated with the file.",
	"paths./files/{FILE_ID}/metadata.get.responses.200.examples.application/json.entries.length": 3,
	"paths./files/{FILE_ID}/metadata.get.responses.200.examples.application/json.entries[0].$id": "50ba0dba-0f89-4395-b867-3e057c1f6ed9",
	"paths./files/{FILE_ID}/metadata.get.responses.200.examples.application/json.entries[0].$parent": "file_5010739061",
	"paths./files/{FILE_ID}/metadata.get.responses.200.examples.application/json.entries[0].$scope": "enterprise_12345",
	"paths./files/{FILE_ID}/metadata.get.responses.200.examples.application/json.entries[0].$template": "documentFlow",
	"paths./files/{FILE_ID}/metadata.get.responses.200.examples.application/json.entries[0].$type": "documentFlow-452b4c9d-c3ad-4ac7-b1ad-9d5192f2fc5f",
	"paths./files/{FILE_ID}/metadata.get.responses.200.examples.application/json.entries[0].$typeVersion": 2,
	"paths./files/{FILE_ID}/metadata.get.responses.200.examples.application/json.entries[0].$version": 4,
	"paths./files/{FILE_ID}/metadata.get.responses.200.examples.application/json.entries[0].currentDocumentStage": "Init",
	"paths./files/{FILE_ID}/metadata.get.responses.200.examples.application/json.entries[0].needsApprovalFrom": "Smith",
	"paths./files/{FILE_ID}/metadata.get.responses.200.examples.application/json.entries[1].$id": "15d1014a-06c2-47ad-9916-014eab456194",
	"paths./files/{FILE_ID}/metadata.get.responses.200.examples.application/json.entries[1].$parent": "file_5010739061",
	"paths./files/{FILE_ID}/metadata.get.responses.200.examples.application/json.entries[1].$scope": "enterprise_12345",
	"paths./files/{FILE_ID}/metadata.get.responses.200.examples.application/json.entries[1].$template": "productInfo",
	"paths./files/{FILE_ID}/metadata.get.responses.200.examples.application/json.entries[1].$type": "productInfo-9d7b6993-b09e-4e52-b197-e42f0ea995b9",
	"paths./files/{FILE_ID}/metadata.get.responses.200.examples.application/json.entries[1].$typeVersion": 1,
	"paths./files/{FILE_ID}/metadata.get.responses.200.examples.application/json.entries[1].$version": 2,
	"paths./files/{FILE_ID}/metadata.get.responses.200.examples.application/json.entries[1].description": "Watch",
	"paths./files/{FILE_ID}/metadata.get.responses.200.examples.application/json.entries[1].skuNumber": 45334223,
	"paths./files/{FILE_ID}/metadata.get.responses.200.examples.application/json.entries[2].$id": "b6f36cbc-fc7a-4eda-8889-130f350cc057",
	"paths./files/{FILE_ID}/metadata.get.responses.200.examples.application/json.entries[2].$parent": "file_5010739061",
	"paths./files/{FILE_ID}/metadata.get.responses.200.examples.application/json.entries[2].$scope": "global",
	"paths./files/{FILE_ID}/metadata.get.responses.200.examples.application/json.entries[2].$template": "properties",
	"paths./files/{FILE_ID}/metadata.get.responses.200.examples.application/json.entries[2].$type": "properties",
	"paths./files/{FILE_ID}/metadata.get.responses.200.examples.application/json.entries[2].$typeVersion": 2,
	"paths./files/{FILE_ID}/metadata.get.responses.200.examples.application/json.entries[2].$version": 0,
	"paths./files/{FILE_ID}/metadata.get.responses.200.examples.application/json.entries[2].Popularity": "25",
	"paths./files/{FILE_ID}/metadata.get.responses.200.examples.application/json.limit": 100,
	"paths./files/{FILE_ID}/metadata.get.responses.200.schema.$ref": "#/definitions/MetadataList",
	"paths./files/{FILE_ID}/metadata.get.summary": "Get all Metadata on File",
	"paths./files/{FILE_ID}/metadata.get.tags.length": 1,
	"paths./files/{FILE_ID}/metadata.get.tags[0]": "Metadata",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.description": "Used to delete the template instance. To delete custom key:value pairs within a template instance, you should refer to the updating metadata section.",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.externalDocs.url": "https://docs.box.com/reference#delete-metadata",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.operationId": "deleteFileMetadata",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.parameters.length": 3,
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.parameters[0].in": "path",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.parameters[0].name": "FILE_ID",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.parameters[0].required": true,
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.parameters[0].type": "string",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.parameters[1].in": "path",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.parameters[1].name": "SCOPE",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.parameters[1].required": true,
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.parameters[1].type": "string",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.parameters[2].in": "path",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.parameters[2].name": "TEMPLATE",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.parameters[2].required": true,
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.parameters[2].type": "string",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.responses.204.description": "An empty HTTP 204 response to confirm the deletion of the template instance.",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.responses.default.description": "Delete file metadata error",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.responses.default.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.summary": "Delete Metadata on File",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.tags.length": 1,
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.tags[0]": "Metadata",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.description": "Used to retrieve the metadata template instance for a corresponding Box file.",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.externalDocs.url": "https://docs.box.com/reference#get-metadata",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.operationId": "getFileMetadata",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.parameters.length": 3,
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.parameters[0].in": "path",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.parameters[0].name": "FILE_ID",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.parameters[0].required": true,
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.parameters[0].type": "string",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.parameters[1].in": "path",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.parameters[1].name": "SCOPE",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.parameters[1].required": true,
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.parameters[1].type": "string",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.parameters[2].in": "path",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.parameters[2].name": "TEMPLATE",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.parameters[2].required": true,
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.parameters[2].type": "string",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.201.description": "An instance of the template that includes key:value pairs defined by a user or application.",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.201.examples.application/json.$id": "2094c584-68e1-475c-a581-534a4609594e",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.201.examples.application/json.$parent": "file_5010739061",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.201.examples.application/json.$scope": "enterprise_12345",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.201.examples.application/json.$template": "marketingCollateral",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.201.examples.application/json.$type": "marketingCollateral-d086c908-2498-4d3e-8a1f-01e82bfc2abe",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.201.examples.application/json.$typeVersion": 0,
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.201.examples.application/json.$version": 0,
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.201.examples.application/json.audience1": "internal",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.201.examples.application/json.author": "Jones",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.201.examples.application/json.competitiveDocument": "no",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.201.examples.application/json.currentState": "proposal",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.201.examples.application/json.documentType": "Q1 plans",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.201.examples.application/json.status": "active",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.201.schema.$ref": "#/definitions/Metadata",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.404.description": "If there is no template instance present, a 404 HTTP status code of not_found will be returned.",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.default.description": "Get File metdata error",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.summary": "Get Metadata on File",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.tags.length": 1,
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.get.tags[0]": "Metadata",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.description": "Used to create the metadata template instance for a corresponding Box file. When creating metadata, only values that adhere to the metadata template schema will be accepted.",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.externalDocs.url": "https://docs.box.com/reference#create-metadata",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.operationId": "createFileMetadata",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters.length": 4,
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[0].in": "path",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[0].name": "FILE_ID",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[0].required": true,
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[0].type": "string",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[1].in": "path",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[1].name": "SCOPE",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[1].required": true,
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[1].type": "string",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[2].in": "path",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[2].name": "TEMPLATE",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[2].required": true,
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[2].type": "string",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[3].in": "body",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[3].name": "body",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[3].required": true,
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[3].schema.$ref": "#/definitions/Metadata",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.200.description": "An instance of the template that includes key:value pairs defined by a user or application.",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.200.examples.application/json.$id": "2094c584-68e1-475c-a581-534a4609594e",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.200.examples.application/json.$parent": "file_5010739061",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.200.examples.application/json.$scope": "enterprise_12345",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.200.examples.application/json.$template": "marketingCollateral",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.200.examples.application/json.$type": "marketingCollateral-d086c908-2498-4d3e-8a1f-01e82bfc2abe",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.200.examples.application/json.$typeVersion": 0,
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.200.examples.application/json.$version": 0,
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.200.examples.application/json.audience1": "internal",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.200.examples.application/json.author": "Jones",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.200.examples.application/json.competitiveDocument": "no",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.200.examples.application/json.currentState": "proposal",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.200.examples.application/json.documentType": "Q1 plans",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.200.examples.application/json.status": "active",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.200.schema.$ref": "#/definitions/Metadata",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.409.description": "If the template instance already exists, a 409 HTTP status code of conflict will be returned and the update method should be used.",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.409.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.default.description": "Create File metadata error",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.default.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.summary": "Create Metadata on File",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.tags.length": 1,
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.post.tags[0]": "Metadata",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.consumes.length": 1,
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.consumes[0]": "application/json-patch+json",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.description": "Used to update the template instance. The request body must follow the JSON-Patch specification, which is represented as a JSON array of operation objects (see examples for more details). Updates can be either add, replace, remove , test, move, or copy. The template instance can only be updated if the template instance already exists. When editing metadata, only values that adhere to the metadata template schema will be accepted.\nThe update is applied atomically. If any errors occur during the application of the update operations, the metadata instance remains unchanged.",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.externalDocs.url": "https://docs.box.com/reference#update-metadata",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.operationId": "updateFileMetadata",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters.length": 4,
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[0].in": "path",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[0].name": "FILE_ID",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[0].required": true,
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[0].type": "string",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[1].in": "path",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[1].name": "SCOPE",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[1].required": true,
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[1].type": "string",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[2].in": "path",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[2].name": "TEMPLATE",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[2].required": true,
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[2].type": "string",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[3].in": "body",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[3].name": "body",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[3].required": true,
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[3].schema.$ref": "#/definitions/UpdateMetadata",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.200.description": "An instance of the template that includes key:value pairs defined by a user or application.",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.200.examples.application/json.$id": "2094c584-68e1-475c-a581-534a4609594e",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.200.examples.application/json.$parent": "file_5010739061",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.200.examples.application/json.$scope": "enterprise_12345",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.200.examples.application/json.$template": "marketingCollateral",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.200.examples.application/json.$type": "marketingCollateral-d086c908-2498-4d3e-8a1f-01e82bfc2abe",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.200.examples.application/json.$typeVersion": 0,
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.200.examples.application/json.$version": 1,
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.200.examples.application/json.audience1": "internal",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.200.examples.application/json.author": "Jones",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.200.examples.application/json.currentState": "reviewed",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.200.examples.application/json.documentType": "Q1 plans",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.200.examples.application/json.editor": "Jones",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.200.examples.application/json.previousState": "proposal",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.200.examples.application/json.status": "inactive",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.200.schema.$ref": "#/definitions/Metadata",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.404.description": "If there is no template instance present, a 404 HTTP status code of not_found will be returned.",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.404.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.default.description": "Update file metadata error",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.default.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.summary": "Update Metadata on File",
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.tags.length": 1,
	"paths./files/{FILE_ID}/metadata/{SCOPE}/{TEMPLATE}.put.tags[0]": "Metadata",
	"paths./files/{FILE_ID}/tasks.get.description": "Retrieves all of the tasks for given file.",
	"paths./files/{FILE_ID}/tasks.get.externalDocs.url": "https://docs.box.com/reference#get-the-tasks-for-a-file",
	"paths./files/{FILE_ID}/tasks.get.operationId": "getFileTasks",
	"paths./files/{FILE_ID}/tasks.get.parameters.length": 2,
	"paths./files/{FILE_ID}/tasks.get.parameters[0].in": "path",
	"paths./files/{FILE_ID}/tasks.get.parameters[0].name": "FILE_ID",
	"paths./files/{FILE_ID}/tasks.get.parameters[0].required": true,
	"paths./files/{FILE_ID}/tasks.get.parameters[0].type": "string",
	"paths./files/{FILE_ID}/tasks.get.parameters[1].description": "Attribute(s) to include in the response",
	"paths./files/{FILE_ID}/tasks.get.parameters[1].in": "query",
	"paths./files/{FILE_ID}/tasks.get.parameters[1].name": "fields",
	"paths./files/{FILE_ID}/tasks.get.parameters[1].required": false,
	"paths./files/{FILE_ID}/tasks.get.parameters[1].type": "string",
	"paths./files/{FILE_ID}/tasks.get.responses.200.description": "A collection of mini task objects is returned. If there are no tasks, an empty collection will be returned.",
	"paths./files/{FILE_ID}/tasks.get.responses.200.schema.$ref": "#/definitions/TaskList",
	"paths./files/{FILE_ID}/tasks.get.responses.default.description": "Get file's tasks error",
	"paths./files/{FILE_ID}/tasks.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}/tasks.get.summary": "Get File's Tasks",
	"paths./files/{FILE_ID}/tasks.get.tags.length": 1,
	"paths./files/{FILE_ID}/tasks.get.tags[0]": "Files",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.description": "Retrieves a thumbnail, or smaller image representation, of this file. Sizes of 32x32,64x64, 128x128, and 256x256 can be returned in the .png format and sizes of 32x32, 94x94, 160x160, and 320x320 can be returned in the .jpg format. Thumbnails can be generated for the image and video file formats listed here.",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.externalDocs.url": "https://docs.box.com/reference#get-a-thumbnail-for-a-file",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.operationId": "getFileThumbnail",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters.length": 6,
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[0].in": "path",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[0].name": "FILE_ID",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[0].required": true,
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[0].type": "string",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[1].description": "The preview format, e.g. png or jpg",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[1].in": "path",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[1].name": "EXTENSION",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[1].required": true,
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[1].type": "string",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[2].description": "The minimum height of the thumbnail",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[2].format": "int64",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[2].in": "query",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[2].name": "min_height",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[2].required": false,
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[2].type": "integer",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[3].description": "The minimum width of the thumbnail",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[3].format": "int64",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[3].in": "query",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[3].name": "min_width",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[3].required": false,
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[3].type": "integer",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[4].description": "The maximum height of the thumbnail",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[4].format": "int64",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[4].in": "query",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[4].name": "max_height",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[4].required": false,
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[4].type": "integer",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[5].description": "The maximum width of the thumbnail",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[5].format": "int64",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[5].in": "query",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[5].name": "max_width",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[5].required": false,
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.parameters[5].type": "integer",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.responses.200.description": "If the thumbnail is available, a 200 OK response will be returned with the contents of the thumbnail in the body.",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.responses.200.schema.$ref": "#/definitions/BoxFile",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.responses.202.description": "If the thumbnail isn’t available yet, a 202 Accepted HTTP status will be returned, including a Location header pointing to a placeholder graphic that can be used until the thumbnail is returned.",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.responses.202.headers.Location.description": "Pointing to a placeholder graphic that can be used until the thumbnail is returned.",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.responses.202.headers.Location.format": "url",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.responses.202.headers.Location.type": "string",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.responses.202.headers.Retry-After.description": "The time in seconds after which the thumbnail will be available. Your application should only attempt to get the thumbnail again after Retry-After time.",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.responses.202.headers.Retry-After.format": "int64",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.responses.202.headers.Retry-After.type": "integer",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.responses.302.description": "If Box can’t generate a thumbnail for this file type, a 302 Found response will be returned, redirecting to a placeholder graphic in the requested size for this particular file type, e.g. this for a CSV file).",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.responses.400.description": "If there are any bad parameters sent in, a standard 400 Bad Request will be returned.",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.responses.400.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.responses.404.description": "If Box is unable to generate a thumbnail for this particular file, a 404 Not Found response will be returned with a code of preview_cannot_be_generated.",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.responses.default.description": "Get thumbnail error",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.summary": "Get Thumbnail",
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.tags.length": 1,
	"paths./files/{FILE_ID}/thumbnail.{EXTENSION}.get.tags[0]": "Files",
	"paths./files/{FILE_ID}/trash.delete.description": "Permanently deletes an item that is in the trash. The item will no longer exist in Box. This action cannot be undone.",
	"paths./files/{FILE_ID}/trash.delete.operationId": "deleteTrashedFile",
	"paths./files/{FILE_ID}/trash.delete.parameters.length": 1,
	"paths./files/{FILE_ID}/trash.delete.parameters[0].in": "path",
	"paths./files/{FILE_ID}/trash.delete.parameters[0].name": "FILE_ID",
	"paths./files/{FILE_ID}/trash.delete.parameters[0].required": true,
	"paths./files/{FILE_ID}/trash.delete.parameters[0].type": "string",
	"paths./files/{FILE_ID}/trash.delete.responses.204.description": "An empty 204 No Content response will be returned upon successful deletion.",
	"paths./files/{FILE_ID}/trash.delete.responses.404.description": "A 404 will be returned if the item is not in the trash.",
	"paths./files/{FILE_ID}/trash.delete.summary": "Permanently Delete",
	"paths./files/{FILE_ID}/trash.delete.tags.length": 1,
	"paths./files/{FILE_ID}/trash.delete.tags[0]": "Files",
	"paths./files/{FILE_ID}/trash.get.description": "Retrieves an item that has been moved to the trash.",
	"paths./files/{FILE_ID}/trash.get.externalDocs.url": "https://docs.box.com/reference#get-a-trashed-file",
	"paths./files/{FILE_ID}/trash.get.operationId": "getTrashedFile",
	"paths./files/{FILE_ID}/trash.get.parameters.length": 1,
	"paths./files/{FILE_ID}/trash.get.parameters[0].in": "path",
	"paths./files/{FILE_ID}/trash.get.parameters[0].name": "FILE_ID",
	"paths./files/{FILE_ID}/trash.get.parameters[0].required": true,
	"paths./files/{FILE_ID}/trash.get.parameters[0].type": "string",
	"paths./files/{FILE_ID}/trash.get.responses.200.description": "The full item will be returned, including information about when the it was moved to the trash.",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.content_created_at": "2013-01-30T18:43:56-08:00",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.content_modified_at": "2013-01-30T18:44:00-08:00",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.created_at": "2013-01-30T18:43:56-08:00",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.created_by.id": "181757341",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.created_by.login": "sean+test@box.com",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.created_by.name": "sean test",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.created_by.type": "user",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.description": "",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.etag": "2",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.id": "5859258256",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.item_status": "trashed",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.modified_at": "2013-01-30T18:44:00-08:00",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.modified_by.id": "181757341",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.modified_by.login": "sean+test@box.com",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.modified_by.name": "sean test",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.modified_by.type": "user",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.name": "Screenshot_1_30_13_6_37_PM.png",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.owned_by.id": "181757341",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.owned_by.login": "sean+test@box.com",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.owned_by.name": "sean test",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.owned_by.type": "user",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.parent.id": "0",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.parent.name": "All Files",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.parent.type": "folder",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.path_collection.entries.length": 1,
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.path_collection.entries[0].id": "1",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.path_collection.entries[0].name": "Trash",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.path_collection.entries[0].type": "folder",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.path_collection.total_count": 1,
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.purged_at": "2013-03-09T10:49:34-08:00",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.sequence_id": "2",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.sha1": "4bd9e98652799fc57cf9423e13629c151152ce6c",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.shared_link.access": "open",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.shared_link.download_count": 0,
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.shared_link.is_password_enabled": false,
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.shared_link.permissions.can_download": true,
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.shared_link.permissions.can_preview": true,
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.shared_link.preview_count": 0,
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.size": 163265,
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.trashed_at": "2013-02-07T10:49:34-08:00",
	"paths./files/{FILE_ID}/trash.get.responses.200.examples.application/json.type": "file",
	"paths./files/{FILE_ID}/trash.get.responses.200.schema.$ref": "#/definitions/BoxFile",
	"paths./files/{FILE_ID}/trash.get.responses.404.description": "A 404 will be returned if the item is not in the trash.",
	"paths./files/{FILE_ID}/trash.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}/trash.get.responses.default.description": "Get trashed file error",
	"paths./files/{FILE_ID}/trash.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}/trash.get.summary": "Get Trashed File",
	"paths./files/{FILE_ID}/trash.get.tags.length": 1,
	"paths./files/{FILE_ID}/trash.get.tags[0]": "Files",
	"paths./files/{FILE_ID}/versions.get.description": "If there are previous versions of this file, this method can be used to retrieve information about the older versions. (Versions are only tracked for Box users with premium accounts.)",
	"paths./files/{FILE_ID}/versions.get.externalDocs.url": "https://docs.box.com/reference#view-versions-of-a-file",
	"paths./files/{FILE_ID}/versions.get.operationId": "getFileVersions",
	"paths./files/{FILE_ID}/versions.get.parameters.length": 2,
	"paths./files/{FILE_ID}/versions.get.parameters[0].in": "path",
	"paths./files/{FILE_ID}/versions.get.parameters[0].name": "FILE_ID",
	"paths./files/{FILE_ID}/versions.get.parameters[0].required": true,
	"paths./files/{FILE_ID}/versions.get.parameters[0].type": "string",
	"paths./files/{FILE_ID}/versions.get.parameters[1].description": "Attribute(s) to include in the response",
	"paths./files/{FILE_ID}/versions.get.parameters[1].in": "query",
	"paths./files/{FILE_ID}/versions.get.parameters[1].name": "fields",
	"paths./files/{FILE_ID}/versions.get.parameters[1].required": false,
	"paths./files/{FILE_ID}/versions.get.parameters[1].type": "string",
	"paths./files/{FILE_ID}/versions.get.responses.200.description": "An array of version objects are returned. If there are no previous versions of this file, then an empty array will be returned.",
	"paths./files/{FILE_ID}/versions.get.responses.200.schema.$ref": "#/definitions/FileVersionList",
	"paths./files/{FILE_ID}/versions.get.responses.default.description": "View file version error",
	"paths./files/{FILE_ID}/versions.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}/versions.get.summary": "View Versions",
	"paths./files/{FILE_ID}/versions.get.tags.length": 1,
	"paths./files/{FILE_ID}/versions.get.tags[0]": "Files",
	"paths./files/{FILE_ID}/versions/current.post.description": "If there are previous versions of this file, this method can be used to promote one of the older versions to the top of the stack. This actually mints a copy of the old version and puts it on the top of the versions stack. The file will have the exact same contents, the same SHA1/etag, and the same name as the original. Other properties such as comments do not get updated to their former values.",
	"paths./files/{FILE_ID}/versions/current.post.externalDocs.url": "https://docs.box.com/reference#promote-an-old-version-of-a-file",
	"paths./files/{FILE_ID}/versions/current.post.operationId": "promotoeFileVersion",
	"paths./files/{FILE_ID}/versions/current.post.parameters.length": 2,
	"paths./files/{FILE_ID}/versions/current.post.parameters[0].in": "path",
	"paths./files/{FILE_ID}/versions/current.post.parameters[0].name": "FILE_ID",
	"paths./files/{FILE_ID}/versions/current.post.parameters[0].required": true,
	"paths./files/{FILE_ID}/versions/current.post.parameters[0].type": "string",
	"paths./files/{FILE_ID}/versions/current.post.parameters[1].in": "body",
	"paths./files/{FILE_ID}/versions/current.post.parameters[1].name": "body",
	"paths./files/{FILE_ID}/versions/current.post.parameters[1].required": true,
	"paths./files/{FILE_ID}/versions/current.post.parameters[1].schema.$ref": "#/definitions/Reference",
	"paths./files/{FILE_ID}/versions/current.post.responses.201.description": "The newly promoted file_version object is returned, along with a ‘201 Created’ status.",
	"paths./files/{FILE_ID}/versions/current.post.responses.201.schema.$ref": "#/definitions/FileVersion",
	"paths./files/{FILE_ID}/versions/current.post.responses.default.description": "Promote file version error",
	"paths./files/{FILE_ID}/versions/current.post.responses.default.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}/versions/current.post.summary": "Promote Version",
	"paths./files/{FILE_ID}/versions/current.post.tags.length": 1,
	"paths./files/{FILE_ID}/versions/current.post.tags[0]": "Files",
	"paths./files/{FILE_ID}/versions/{VERSION_ID}.delete.description": "Discards a specific file version to the trash. (Depending on the enterprise settings for this user, the item will either be actually deleted from Box or moved to the trash.)",
	"paths./files/{FILE_ID}/versions/{VERSION_ID}.delete.externalDocs.url": "https://docs.box.com/reference#delete-an-old-version-of-a-file",
	"paths./files/{FILE_ID}/versions/{VERSION_ID}.delete.operationId": "deleteFileVersion",
	"paths./files/{FILE_ID}/versions/{VERSION_ID}.delete.parameters.length": 3,
	"paths./files/{FILE_ID}/versions/{VERSION_ID}.delete.parameters[0].in": "path",
	"paths./files/{FILE_ID}/versions/{VERSION_ID}.delete.parameters[0].name": "FILE_ID",
	"paths./files/{FILE_ID}/versions/{VERSION_ID}.delete.parameters[0].required": true,
	"paths./files/{FILE_ID}/versions/{VERSION_ID}.delete.parameters[0].type": "string",
	"paths./files/{FILE_ID}/versions/{VERSION_ID}.delete.parameters[1].in": "path",
	"paths./files/{FILE_ID}/versions/{VERSION_ID}.delete.parameters[1].name": "VERSION_ID",
	"paths./files/{FILE_ID}/versions/{VERSION_ID}.delete.parameters[1].required": true,
	"paths./files/{FILE_ID}/versions/{VERSION_ID}.delete.parameters[1].type": "string",
	"paths./files/{FILE_ID}/versions/{VERSION_ID}.delete.parameters[2].description": "The etag of the file. This is in the ‘etag’ field of the file object.",
	"paths./files/{FILE_ID}/versions/{VERSION_ID}.delete.parameters[2].in": "header",
	"paths./files/{FILE_ID}/versions/{VERSION_ID}.delete.parameters[2].name": "If-Match",
	"paths./files/{FILE_ID}/versions/{VERSION_ID}.delete.parameters[2].required": false,
	"paths./files/{FILE_ID}/versions/{VERSION_ID}.delete.parameters[2].type": "string",
	"paths./files/{FILE_ID}/versions/{VERSION_ID}.delete.responses.204.description": "An empty 204 response is sent to confirm deletion of the file.",
	"paths./files/{FILE_ID}/versions/{VERSION_ID}.delete.responses.412.description": "If the If-Match header is sent and fails, a ‘412 Precondition Failed’ error is returned.",
	"paths./files/{FILE_ID}/versions/{VERSION_ID}.delete.responses.412.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}/versions/{VERSION_ID}.delete.responses.default.description": "Delete file version error",
	"paths./files/{FILE_ID}/versions/{VERSION_ID}.delete.responses.default.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}/versions/{VERSION_ID}.delete.summary": "Delete Old Version",
	"paths./files/{FILE_ID}/versions/{VERSION_ID}.delete.tags.length": 1,
	"paths./files/{FILE_ID}/versions/{VERSION_ID}.delete.tags[0]": "Files",
	"paths./files/{FILE_ID}/watermark.delete.description": "Used to remove the watermark for a corresponding Box file.",
	"paths./files/{FILE_ID}/watermark.delete.externalDocs.url": "https://docs.box.com/reference#remove-watermark-on-file",
	"paths./files/{FILE_ID}/watermark.delete.operationId": "deleteFileWatermark",
	"paths./files/{FILE_ID}/watermark.delete.parameters.length": 1,
	"paths./files/{FILE_ID}/watermark.delete.parameters[0].in": "path",
	"paths./files/{FILE_ID}/watermark.delete.parameters[0].name": "FILE_ID",
	"paths./files/{FILE_ID}/watermark.delete.parameters[0].required": true,
	"paths./files/{FILE_ID}/watermark.delete.parameters[0].type": "string",
	"paths./files/{FILE_ID}/watermark.delete.responses.204.description": "An empty 204 No Content response to confirm the watermark has been removed.",
	"paths./files/{FILE_ID}/watermark.delete.responses.204.schema.$ref": "#/definitions/Watermark",
	"paths./files/{FILE_ID}/watermark.delete.responses.404.description": "If the file did not have a watermark applied to it, a 404 Not Found will be returned.",
	"paths./files/{FILE_ID}/watermark.delete.responses.404.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}/watermark.delete.responses.default.description": "Remove watermark on file error",
	"paths./files/{FILE_ID}/watermark.delete.responses.default.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}/watermark.delete.summary": "Remove Watermark on File",
	"paths./files/{FILE_ID}/watermark.delete.tags.length": 1,
	"paths./files/{FILE_ID}/watermark.delete.tags[0]": "Watermark",
	"paths./files/{FILE_ID}/watermark.get.description": "Used to retrieve the watermark for a corresponding Box file.",
	"paths./files/{FILE_ID}/watermark.get.externalDocs.url": "https://docs.box.com/reference#get-watermark-on-file",
	"paths./files/{FILE_ID}/watermark.get.operationId": "getFileWatermark",
	"paths./files/{FILE_ID}/watermark.get.parameters.length": 1,
	"paths./files/{FILE_ID}/watermark.get.parameters[0].in": "path",
	"paths./files/{FILE_ID}/watermark.get.parameters[0].name": "FILE_ID",
	"paths./files/{FILE_ID}/watermark.get.parameters[0].required": true,
	"paths./files/{FILE_ID}/watermark.get.parameters[0].type": "string",
	"paths./files/{FILE_ID}/watermark.get.responses.200.description": "An object containing information about the watermark associated for this file.",
	"paths./files/{FILE_ID}/watermark.get.responses.200.schema.$ref": "#/definitions/Watermark",
	"paths./files/{FILE_ID}/watermark.get.responses.404.description": "An 404 error is thrown if the the file does not have the watermark.",
	"paths./files/{FILE_ID}/watermark.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}/watermark.get.responses.default.description": "Get watermark on file error",
	"paths./files/{FILE_ID}/watermark.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}/watermark.get.summary": "Get Watermark on File",
	"paths./files/{FILE_ID}/watermark.get.tags.length": 1,
	"paths./files/{FILE_ID}/watermark.get.tags[0]": "Watermark",
	"paths./files/{FILE_ID}/watermark.put.description": "Used to apply or update the watermark for a corresponding Box file. The endpoint accepts a JSON body describing the watermark to apply.",
	"paths./files/{FILE_ID}/watermark.put.externalDocs.url": "https://docs.box.com/reference#apply-watermark-on-file",
	"paths./files/{FILE_ID}/watermark.put.operationId": "updateFileWatermark",
	"paths./files/{FILE_ID}/watermark.put.parameters.length": 2,
	"paths./files/{FILE_ID}/watermark.put.parameters[0].in": "path",
	"paths./files/{FILE_ID}/watermark.put.parameters[0].name": "FILE_ID",
	"paths./files/{FILE_ID}/watermark.put.parameters[0].required": true,
	"paths./files/{FILE_ID}/watermark.put.parameters[0].type": "string",
	"paths./files/{FILE_ID}/watermark.put.parameters[1].in": "body",
	"paths./files/{FILE_ID}/watermark.put.parameters[1].name": "body",
	"paths./files/{FILE_ID}/watermark.put.parameters[1].required": true,
	"paths./files/{FILE_ID}/watermark.put.parameters[1].schema.$ref": "#/definitions/Watermark",
	"paths./files/{FILE_ID}/watermark.put.responses.200.description": "An object containing information about the watermark associated for this file.",
	"paths./files/{FILE_ID}/watermark.put.responses.200.schema.$ref": "#/definitions/Watermark",
	"paths./files/{FILE_ID}/watermark.put.responses.201.description": "If the file did not previously have a watermark applied to it, 201 Created is returned.",
	"paths./files/{FILE_ID}/watermark.put.responses.201.schema.$ref": "#/definitions/Watermark",
	"paths./files/{FILE_ID}/watermark.put.responses.default.description": "Apply watermark on file error",
	"paths./files/{FILE_ID}/watermark.put.responses.default.schema.$ref": "#/definitions/Error",
	"paths./files/{FILE_ID}/watermark.put.summary": "Apply Watermark on File",
	"paths./files/{FILE_ID}/watermark.put.tags.length": 1,
	"paths./files/{FILE_ID}/watermark.put.tags[0]": "Watermark",
	"paths./folders.post.description": "Used to create a new empty folder. The new folder will be created inside of the specified parent folder",
	"paths./folders.post.externalDocs.url": "https://docs.box.com/reference#create-a-new-folder",
	"paths./folders.post.operationId": "createFolder",
	"paths./folders.post.parameters.length": 2,
	"paths./folders.post.parameters[0].description": "Attribute(s) to include in the response",
	"paths./folders.post.parameters[0].in": "query",
	"paths./folders.post.parameters[0].name": "fields",
	"paths./folders.post.parameters[0].required": false,
	"paths./folders.post.parameters[0].type": "string",
	"paths./folders.post.parameters[1].in": "body",
	"paths./folders.post.parameters[1].name": "body",
	"paths./folders.post.parameters[1].required": true,
	"paths./folders.post.parameters[1].schema.$ref": "#/definitions/Folder",
	"paths./folders.post.responses.201.description": "A full folder object is returned if the parent folder ID is valid and if no name collisions occur.",
	"paths./folders.post.responses.201.examples.application/json.created_at": "2012-12-12T10:53:43-08:00",
	"paths./folders.post.responses.201.examples.application/json.created_by.id": "17738362",
	"paths./folders.post.responses.201.examples.application/json.created_by.login": "sean@box.com",
	"paths./folders.post.responses.201.examples.application/json.created_by.name": "sean rose",
	"paths./folders.post.responses.201.examples.application/json.created_by.type": "user",
	"paths./folders.post.responses.201.examples.application/json.description": "Some pictures I took",
	"paths./folders.post.responses.201.examples.application/json.etag": "1",
	"paths./folders.post.responses.201.examples.application/json.folder_upload_email.access": "open",
	"paths./folders.post.responses.201.examples.application/json.folder_upload_email.email": "upload.Picture.k13sdz1@u.box.com",
	"paths./folders.post.responses.201.examples.application/json.id": "11446498",
	"paths./folders.post.responses.201.examples.application/json.item_collection.entries.length": 0,
	"paths./folders.post.responses.201.examples.application/json.item_collection.limit": 100,
	"paths./folders.post.responses.201.examples.application/json.item_collection.offset": 0,
	"paths./folders.post.responses.201.examples.application/json.item_collection.total_count": 0,
	"paths./folders.post.responses.201.examples.application/json.item_status": "active",
	"paths./folders.post.responses.201.examples.application/json.modified_at": "2012-12-12T11:15:04-08:00",
	"paths./folders.post.responses.201.examples.application/json.modified_by.id": "17738362",
	"paths./folders.post.responses.201.examples.application/json.modified_by.login": "sean@box.com",
	"paths./folders.post.responses.201.examples.application/json.modified_by.name": "sean rose",
	"paths./folders.post.responses.201.examples.application/json.modified_by.type": "user",
	"paths./folders.post.responses.201.examples.application/json.name": "Pictures",
	"paths./folders.post.responses.201.examples.application/json.owned_by.id": "17738362",
	"paths./folders.post.responses.201.examples.application/json.owned_by.login": "sean@box.com",
	"paths./folders.post.responses.201.examples.application/json.owned_by.name": "sean rose",
	"paths./folders.post.responses.201.examples.application/json.owned_by.type": "user",
	"paths./folders.post.responses.201.examples.application/json.parent.id": "0",
	"paths./folders.post.responses.201.examples.application/json.parent.name": "All Files",
	"paths./folders.post.responses.201.examples.application/json.parent.type": "folder",
	"paths./folders.post.responses.201.examples.application/json.path_collection.entries.length": 1,
	"paths./folders.post.responses.201.examples.application/json.path_collection.entries[0].id": "0",
	"paths./folders.post.responses.201.examples.application/json.path_collection.entries[0].name": "All Files",
	"paths./folders.post.responses.201.examples.application/json.path_collection.entries[0].type": "folder",
	"paths./folders.post.responses.201.examples.application/json.path_collection.total_count": 1,
	"paths./folders.post.responses.201.examples.application/json.sequence_id": "1",
	"paths./folders.post.responses.201.examples.application/json.shared_link.access": "open",
	"paths./folders.post.responses.201.examples.application/json.shared_link.download_count": 0,
	"paths./folders.post.responses.201.examples.application/json.shared_link.is_password_enabled": false,
	"paths./folders.post.responses.201.examples.application/json.shared_link.permissions.can_download": true,
	"paths./folders.post.responses.201.examples.application/json.shared_link.permissions.can_preview": true,
	"paths./folders.post.responses.201.examples.application/json.shared_link.preview_count": 0,
	"paths./folders.post.responses.201.examples.application/json.shared_link.url": "https://www.box.com/s/vspke7y05sb214wjokpk",
	"paths./folders.post.responses.201.examples.application/json.size": 629644,
	"paths./folders.post.responses.201.examples.application/json.type": "folder",
	"paths./folders.post.responses.201.schema.$ref": "#/definitions/Folder",
	"paths./folders.post.responses.default.description": "Create folder operation error",
	"paths./folders.post.responses.default.schema.$ref": "#/definitions/Error",
	"paths./folders.post.summary": "Create Folder",
	"paths./folders.post.tags.length": 1,
	"paths./folders.post.tags[0]": "Folders",
	"paths./folders/trash/items.get.description": "Retrieves the files and/or folders that have been moved to the trash. Any attribute in the full files or folders objects can be passed in with the fields parameter to get specific attributes, and only those specific attributes back; otherwise, the mini format is returned for each item by default. Multiple attributes can be passed in separated by commas e.g. fields=name,created_at. Paginated results can be retrieved using the limit and offset parameters.",
	"paths./folders/trash/items.get.externalDocs.url": "https://docs.box.com/reference#create-a-new-folder",
	"paths./folders/trash/items.get.operationId": "getTrashedItems",
	"paths./folders/trash/items.get.parameters.length": 3,
	"paths./folders/trash/items.get.parameters[0].description": "Attribute(s) to include in the response",
	"paths./folders/trash/items.get.parameters[0].in": "query",
	"paths./folders/trash/items.get.parameters[0].name": "fields",
	"paths./folders/trash/items.get.parameters[0].required": false,
	"paths./folders/trash/items.get.parameters[0].type": "string",
	"paths./folders/trash/items.get.parameters[1].description": "The maximum number of items to return",
	"paths./folders/trash/items.get.parameters[1].format": "int64",
	"paths./folders/trash/items.get.parameters[1].in": "query",
	"paths./folders/trash/items.get.parameters[1].name": "limit",
	"paths./folders/trash/items.get.parameters[1].required": false,
	"paths./folders/trash/items.get.parameters[1].type": "integer",
	"paths./folders/trash/items.get.parameters[2].description": "The item at which to begin the response",
	"paths./folders/trash/items.get.parameters[2].format": "int64",
	"paths./folders/trash/items.get.parameters[2].in": "query",
	"paths./folders/trash/items.get.parameters[2].name": "offset",
	"paths./folders/trash/items.get.parameters[2].required": false,
	"paths./folders/trash/items.get.parameters[2].type": "integer",
	"paths./folders/trash/items.get.responses.200.description": "A collection of items contained in the trash is returned",
	"paths./folders/trash/items.get.responses.200.schema.$ref": "#/definitions/FileReferenceList",
	"paths./folders/trash/items.get.responses.default.description": "Get trashed items operation error",
	"paths./folders/trash/items.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./folders/trash/items.get.summary": "Get Trashed Items",
	"paths./folders/trash/items.get.tags.length": 1,
	"paths./folders/trash/items.get.tags[0]": "Folders",
	"paths./folders/{FOLDER_ID}.delete.description": "Used to delete a folder. A recursive parameter must be included in order to delete folders that have items inside of them. An optional If-Match header can be included to ensure that client only deletes the folder if it knows about the latest version.",
	"paths./folders/{FOLDER_ID}.delete.externalDocs.url": "https://docs.box.com/reference#delete-a-folder",
	"paths./folders/{FOLDER_ID}.delete.operationId": "deleteFolder",
	"paths./folders/{FOLDER_ID}.delete.parameters.length": 3,
	"paths./folders/{FOLDER_ID}.delete.parameters[0].in": "path",
	"paths./folders/{FOLDER_ID}.delete.parameters[0].name": "FOLDER_ID",
	"paths./folders/{FOLDER_ID}.delete.parameters[0].required": true,
	"paths./folders/{FOLDER_ID}.delete.parameters[0].type": "string",
	"paths./folders/{FOLDER_ID}.delete.parameters[1].in": "query",
	"paths./folders/{FOLDER_ID}.delete.parameters[1].name": "recursive",
	"paths./folders/{FOLDER_ID}.delete.parameters[1].required": false,
	"paths./folders/{FOLDER_ID}.delete.parameters[1].type": "boolean",
	"paths./folders/{FOLDER_ID}.delete.parameters[2].description": "This is in the ‘etag’ field of the folder object.",
	"paths./folders/{FOLDER_ID}.delete.parameters[2].in": "header",
	"paths./folders/{FOLDER_ID}.delete.parameters[2].name": "If-Match",
	"paths./folders/{FOLDER_ID}.delete.parameters[2].required": false,
	"paths./folders/{FOLDER_ID}.delete.parameters[2].type": "string",
	"paths./folders/{FOLDER_ID}.delete.responses.204.description": "An empty 204 response will be returned upon successful deletion.",
	"paths./folders/{FOLDER_ID}.delete.responses.400.description": "An error is thrown if the folder is not empty and the ‘recursive’ parameter is not included.",
	"paths./folders/{FOLDER_ID}.delete.responses.400.schema.$ref": "#/definitions/Error",
	"paths./folders/{FOLDER_ID}.delete.responses.default.description": "Delete folder operation error",
	"paths./folders/{FOLDER_ID}.delete.responses.default.schema.$ref": "#/definitions/Error",
	"paths./folders/{FOLDER_ID}.delete.summary": "Delete Folder",
	"paths./folders/{FOLDER_ID}.delete.tags.length": 1,
	"paths./folders/{FOLDER_ID}.delete.tags[0]": "Folders",
	"paths./folders/{FOLDER_ID}.get.description": "Retrieves the full metadata about a folder, including information about when it was last updated as well as the files and folders contained in it. The root folder of a Box account is always represented by the id “0”.",
	"paths./folders/{FOLDER_ID}.get.externalDocs.url": "https://docs.box.com/reference#get-folder-info",
	"paths./folders/{FOLDER_ID}.get.operationId": "getFolder",
	"paths./folders/{FOLDER_ID}.get.parameters.length": 2,
	"paths./folders/{FOLDER_ID}.get.parameters[0].description": "Attribute(s) to include in the response",
	"paths./folders/{FOLDER_ID}.get.parameters[0].in": "query",
	"paths./folders/{FOLDER_ID}.get.parameters[0].name": "fields",
	"paths./folders/{FOLDER_ID}.get.parameters[0].required": false,
	"paths./folders/{FOLDER_ID}.get.parameters[0].type": "string",
	"paths./folders/{FOLDER_ID}.get.parameters[1].in": "path",
	"paths./folders/{FOLDER_ID}.get.parameters[1].name": "FOLDER_ID",
	"paths./folders/{FOLDER_ID}.get.parameters[1].required": true,
	"paths./folders/{FOLDER_ID}.get.parameters[1].type": "string",
	"paths./folders/{FOLDER_ID}.get.responses.200.description": "A full folder object is returned, including the most current information available about it.",
	"paths./folders/{FOLDER_ID}.get.responses.200.schema.$ref": "#/definitions/Folder",
	"paths./folders/{FOLDER_ID}.get.responses.401.description": "4xx if the user does not have access to it.",
	"paths./folders/{FOLDER_ID}.get.responses.401.schema.$ref": "#/definitions/Error",
	"paths./folders/{FOLDER_ID}.get.responses.404.description": "An 404 error is thrown if the folder does not exist.",
	"paths./folders/{FOLDER_ID}.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./folders/{FOLDER_ID}.get.responses.default.description": "Get Folder's info error",
	"paths./folders/{FOLDER_ID}.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./folders/{FOLDER_ID}.get.summary": "Get Folder's Info",
	"paths./folders/{FOLDER_ID}.get.tags.length": 1,
	"paths./folders/{FOLDER_ID}.get.tags[0]": "Folders",
	"paths./folders/{FOLDER_ID}.post.description": "Restores an item that has been moved to the trash. Default behavior is to restore the item to the folder it was in before it was moved to the trash. If that parent folder no longer exists or if there is now an item with the same name in that parent folder, the new parent folder and/or new name will need to be included in the request.",
	"paths./folders/{FOLDER_ID}.post.externalDocs.url": "https://docs.box.com/reference#restore-a-trashed-folder",
	"paths./folders/{FOLDER_ID}.post.operationId": "restoreTrashedFolder",
	"paths./folders/{FOLDER_ID}.post.parameters.length": 3,
	"paths./folders/{FOLDER_ID}.post.parameters[0].in": "path",
	"paths./folders/{FOLDER_ID}.post.parameters[0].name": "FOLDER_ID",
	"paths./folders/{FOLDER_ID}.post.parameters[0].required": true,
	"paths./folders/{FOLDER_ID}.post.parameters[0].type": "string",
	"paths./folders/{FOLDER_ID}.post.parameters[1].description": "Attribute(s) to include in the response",
	"paths./folders/{FOLDER_ID}.post.parameters[1].in": "query",
	"paths./folders/{FOLDER_ID}.post.parameters[1].name": "fields",
	"paths./folders/{FOLDER_ID}.post.parameters[1].required": false,
	"paths./folders/{FOLDER_ID}.post.parameters[1].type": "string",
	"paths./folders/{FOLDER_ID}.post.parameters[2].in": "body",
	"paths./folders/{FOLDER_ID}.post.parameters[2].name": "body",
	"paths./folders/{FOLDER_ID}.post.parameters[2].required": true,
	"paths./folders/{FOLDER_ID}.post.parameters[2].schema.$ref": "#/definitions/Folder",
	"paths./folders/{FOLDER_ID}.post.responses.201.description": "The full item will be returned with a 201 Created status. By default it is restored to the parent folder it was in before it was trashed.",
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.content_created_at": "2013-01-15T16:15:27-08:00",
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.content_modified_at": "2013-02-07T13:26:00-08:00",
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.created_at": "2013-01-15T16:15:27-08:00",
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.created_by.id": "181757341",
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.created_by.login": "sean+test@box.com",
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.created_by.name": "sean test",
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.created_by.type": "user",
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.description": "",
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.etag": "2",
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.id": "588970022",
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.item_status": "active",
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.modified_at": "2013-02-07T13:26:00-08:00",
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.modified_by.id": "181757341",
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.modified_by.login": "sean+test@box.com",
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.modified_by.name": "sean test",
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.modified_by.type": "user",
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.name": "heloo world",
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.owned_by.id": "181757341",
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.owned_by.login": "sean+test@box.com",
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.owned_by.name": "sean test",
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.owned_by.type": "user",
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.parent.id": "0",
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.parent.name": "All Files",
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.parent.type": "folder",
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.path_collection.entries.length": 1,
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.path_collection.entries[0].id": "0",
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.path_collection.entries[0].name": "All Files",
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.path_collection.entries[0].type": "folder",
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.path_collection.total_count": 1,
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.sequence_id": "2",
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.size": 0,
	"paths./folders/{FOLDER_ID}.post.responses.201.examples.application/json.type": "folder",
	"paths./folders/{FOLDER_ID}.post.responses.201.schema.$ref": "#/definitions/Folder",
	"paths./folders/{FOLDER_ID}.post.responses.403.description": "The user doesn’t have access to the folder the item is being restored to or the user doesn’t have permission to restore items from the trash",
	"paths./folders/{FOLDER_ID}.post.responses.403.schema.$ref": "#/definitions/Error",
	"paths./folders/{FOLDER_ID}.post.responses.405.description": "The item is not in the trash",
	"paths./folders/{FOLDER_ID}.post.responses.405.schema.$ref": "#/definitions/Error",
	"paths./folders/{FOLDER_ID}.post.responses.409.description": "There is an item with the same name in the folder the item is being restored to",
	"paths./folders/{FOLDER_ID}.post.responses.409.schema.$ref": "#/definitions/Error",
	"paths./folders/{FOLDER_ID}.post.responses.default.description": "Restore folder operation error",
	"paths./folders/{FOLDER_ID}.post.responses.default.schema.$ref": "#/definitions/Error",
	"paths./folders/{FOLDER_ID}.post.summary": "Restore Folder",
	"paths./folders/{FOLDER_ID}.post.tags.length": 1,
	"paths./folders/{FOLDER_ID}.post.tags[0]": "Folders",
	"paths./folders/{FOLDER_ID}.put.description": "Used to update information about the folder. To move a folder, update the ID of its parent. To enable an email address that can be used to upload files to this folder, update the folder_upload_email attribute. An optional If-Match header can be included to ensure that client only updates the folder if it knows about the latest version.\n\nUsed to create a shared link for this particular folder. Please see here for more information on the permissions available for shared links. In order to get default shared link status, set it to an empty access level, i.e. {\"shared_link\": {}}. In order to disable a shared link, send this same type of PUT request with the value of shared_link set to null, i.e. {\"shared_link\": null}\n\nTo add or remove an item from a collection, you do a PUT on that item and change the list of collections it belongs to. Philosophically, this is similar to the way “move” operations work on files and folders: you do a PUT on the item and change its parent. It’s the same idea with collections, except you’re changing which collection(s) the item belongs to instead of the folder it belongs to. Currently the only collection available is the favorites collection, and you’ll need to know it’s ID for the user that is making the API call, since every user has a different favorites collection_id.\nThe Add/Remove API handling will check all ids passed in before performing any add/removal operations. If any collection ids are malformed or do not exist in the user’s account, the API call will throw a 400. Only if all of the collection ids are valid will the adds and removals be carried out.",
	"paths./folders/{FOLDER_ID}.put.externalDocs.url": "https://docs.box.com/reference#update-information-about-a-folder",
	"paths./folders/{FOLDER_ID}.put.operationId": "updateFolder",
	"paths./folders/{FOLDER_ID}.put.parameters.length": 4,
	"paths./folders/{FOLDER_ID}.put.parameters[0].in": "path",
	"paths./folders/{FOLDER_ID}.put.parameters[0].name": "FOLDER_ID",
	"paths./folders/{FOLDER_ID}.put.parameters[0].required": true,
	"paths./folders/{FOLDER_ID}.put.parameters[0].type": "string",
	"paths./folders/{FOLDER_ID}.put.parameters[1].description": "Attribute(s) to include in the response",
	"paths./folders/{FOLDER_ID}.put.parameters[1].in": "query",
	"paths./folders/{FOLDER_ID}.put.parameters[1].name": "fields",
	"paths./folders/{FOLDER_ID}.put.parameters[1].required": false,
	"paths./folders/{FOLDER_ID}.put.parameters[1].type": "string",
	"paths./folders/{FOLDER_ID}.put.parameters[2].in": "body",
	"paths./folders/{FOLDER_ID}.put.parameters[2].name": "body",
	"paths./folders/{FOLDER_ID}.put.parameters[2].required": true,
	"paths./folders/{FOLDER_ID}.put.parameters[2].schema.$ref": "#/definitions/Folder",
	"paths./folders/{FOLDER_ID}.put.parameters[3].description": "This is in the ‘etag’ field of the folder object.",
	"paths./folders/{FOLDER_ID}.put.parameters[3].in": "header",
	"paths./folders/{FOLDER_ID}.put.parameters[3].name": "If-Match",
	"paths./folders/{FOLDER_ID}.put.parameters[3].required": false,
	"paths./folders/{FOLDER_ID}.put.parameters[3].type": "string",
	"paths./folders/{FOLDER_ID}.put.responses.200.description": "The updated folder",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.created_at": "2012-12-12T10:53:43-08:00",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.created_by.id": "17738362",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.created_by.login": "sean@box.com",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.created_by.name": "sean rose",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.created_by.type": "user",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.description": "Some pictures I took",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.etag": "1",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.folder_upload_email.access": "open",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.folder_upload_email.email": "upload.Picture.k13sdz1@u.box.com",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.id": "11446498",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.item_collection.entries.length": 1,
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.item_collection.entries[0].etag": "3",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.item_collection.entries[0].id": "5000948880",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.item_collection.entries[0].name": "tigers.jpeg",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.item_collection.entries[0].sequence_id": "3",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.item_collection.entries[0].sha1": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.item_collection.entries[0].type": "file",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.item_collection.limit": 100,
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.item_collection.offset": 0,
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.item_collection.total_count": 1,
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.item_status": "active",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.modified_at": "2012-12-12T11:15:04-08:00",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.modified_by.id": "17738362",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.modified_by.login": "sean@box.com",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.modified_by.name": "sean rose",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.modified_by.type": "user",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.name": "New Folder Name!",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.owned_by.id": "17738362",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.owned_by.login": "sean@box.com",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.owned_by.name": "sean rose",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.owned_by.type": "user",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.parent.id": "0",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.parent.name": "All Files",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.parent.type": "folder",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.path_collection.entries.length": 1,
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.path_collection.entries[0].id": "0",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.path_collection.entries[0].name": "All Files",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.path_collection.entries[0].type": "folder",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.path_collection.total_count": 1,
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.sequence_id": "1",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.shared_link.access": "open",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.shared_link.download_count": 0,
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.shared_link.is_password_enabled": false,
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.shared_link.permissions.can_download": true,
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.shared_link.permissions.can_preview": true,
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.shared_link.preview_count": 0,
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.shared_link.url": "https://www.box.com/s/vspke7y05sb214wjokpk",
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.size": 629644,
	"paths./folders/{FOLDER_ID}.put.responses.200.examples.application/json.type": "folder",
	"paths./folders/{FOLDER_ID}.put.responses.200.schema.$ref": "#/definitions/Folder",
	"paths./folders/{FOLDER_ID}.put.responses.201.description": "When 'collections' is specified in body the folder is moved into collection with the ID",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.created_at": "2012-12-12T10:53:43-08:00",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.created_by.id": "17738362",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.created_by.login": "sean@box.com",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.created_by.name": "sean rose",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.created_by.type": "user",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.description": "Some pictures I took",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.etag": "1",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.folder_upload_email.access": "open",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.folder_upload_email.email": "upload.Picture.k13sdz1@u.box.com",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.id": "11446498",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.item_collection.entries.length": 1,
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.item_collection.entries[0].etag": "3",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.item_collection.entries[0].id": "5000948880",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.item_collection.entries[0].name": "tigers.jpeg",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.item_collection.entries[0].sequence_id": "3",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.item_collection.entries[0].sha1": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.item_collection.entries[0].type": "file",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.item_collection.limit": 100,
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.item_collection.offset": 0,
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.item_collection.total_count": 1,
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.item_status": "active",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.modified_at": "2012-12-12T11:15:04-08:00",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.modified_by.id": "17738362",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.modified_by.login": "sean@box.com",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.modified_by.name": "sean rose",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.modified_by.type": "user",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.name": "New Folder Name!",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.owned_by.id": "17738362",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.owned_by.login": "sean@box.com",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.owned_by.name": "sean rose",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.owned_by.type": "user",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.parent.id": "0",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.parent.name": "All Files",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.parent.type": "folder",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.path_collection.entries.length": 1,
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.path_collection.entries[0].id": "0",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.path_collection.entries[0].name": "All Files",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.path_collection.entries[0].type": "folder",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.path_collection.total_count": 1,
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.sequence_id": "1",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.shared_link.access": "open",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.shared_link.download_count": 0,
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.shared_link.is_password_enabled": false,
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.shared_link.permissions.can_download": true,
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.shared_link.permissions.can_preview": true,
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.shared_link.preview_count": 0,
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.shared_link.url": "https://www.box.com/s/vspke7y05sb214wjokpk",
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.size": 629644,
	"paths./folders/{FOLDER_ID}.put.responses.201.examples.application/json.type": "folder",
	"paths./folders/{FOLDER_ID}.put.responses.201.schema.$ref": "#/definitions/Folder",
	"paths./folders/{FOLDER_ID}.put.responses.default.description": "Update Folder info error",
	"paths./folders/{FOLDER_ID}.put.responses.default.schema.$ref": "#/definitions/Error",
	"paths./folders/{FOLDER_ID}.put.summary": "Update Folder, Create Shared Link, Create or Delete",
	"paths./folders/{FOLDER_ID}.put.tags.length": 1,
	"paths./folders/{FOLDER_ID}.put.tags[0]": "Folders",
	"paths./folders/{FOLDER_ID}/collaborations.get.description": "Use this to get a list of all the collaborations on a folder i.e. all of the users that have access to that folder.",
	"paths./folders/{FOLDER_ID}/collaborations.get.externalDocs.url": "https://docs.box.com/reference#view-a-folders-collaborations",
	"paths./folders/{FOLDER_ID}/collaborations.get.operationId": "getFolderCollaborations",
	"paths./folders/{FOLDER_ID}/collaborations.get.parameters.length": 4,
	"paths./folders/{FOLDER_ID}/collaborations.get.parameters[0].in": "path",
	"paths./folders/{FOLDER_ID}/collaborations.get.parameters[0].name": "FOLDER_ID",
	"paths./folders/{FOLDER_ID}/collaborations.get.parameters[0].required": true,
	"paths./folders/{FOLDER_ID}/collaborations.get.parameters[0].type": "string",
	"paths./folders/{FOLDER_ID}/collaborations.get.parameters[1].description": "Attribute(s) to include in the response",
	"paths./folders/{FOLDER_ID}/collaborations.get.parameters[1].in": "query",
	"paths./folders/{FOLDER_ID}/collaborations.get.parameters[1].name": "fields",
	"paths./folders/{FOLDER_ID}/collaborations.get.parameters[1].required": false,
	"paths./folders/{FOLDER_ID}/collaborations.get.parameters[1].type": "string",
	"paths./folders/{FOLDER_ID}/collaborations.get.parameters[2].description": "The maximum number of items to return in a page. The default is 100 and the max is 1000.",
	"paths./folders/{FOLDER_ID}/collaborations.get.parameters[2].format": "int64",
	"paths./folders/{FOLDER_ID}/collaborations.get.parameters[2].in": "query",
	"paths./folders/{FOLDER_ID}/collaborations.get.parameters[2].name": "limit",
	"paths./folders/{FOLDER_ID}/collaborations.get.parameters[2].required": false,
	"paths./folders/{FOLDER_ID}/collaborations.get.parameters[2].type": "integer",
	"paths./folders/{FOLDER_ID}/collaborations.get.parameters[3].description": "The item at which to begin the response",
	"paths./folders/{FOLDER_ID}/collaborations.get.parameters[3].format": "int64",
	"paths./folders/{FOLDER_ID}/collaborations.get.parameters[3].in": "query",
	"paths./folders/{FOLDER_ID}/collaborations.get.parameters[3].name": "offset",
	"paths./folders/{FOLDER_ID}/collaborations.get.parameters[3].required": false,
	"paths./folders/{FOLDER_ID}/collaborations.get.parameters[3].type": "integer",
	"paths./folders/{FOLDER_ID}/collaborations.get.responses.200.description": "A collection of collaboration objects are returned. If there are no collaborations on this folder, an empty collection will be returned.",
	"paths./folders/{FOLDER_ID}/collaborations.get.responses.200.examples.application/json.entries.length": 1,
	"paths./folders/{FOLDER_ID}/collaborations.get.responses.200.examples.application/json.entries[0].accessible_by.id": "755492",
	"paths./folders/{FOLDER_ID}/collaborations.get.responses.200.examples.application/json.entries[0].accessible_by.login": "simon@box.net",
	"paths./folders/{FOLDER_ID}/collaborations.get.responses.200.examples.application/json.entries[0].accessible_by.name": "Simon Tan",
	"paths./folders/{FOLDER_ID}/collaborations.get.responses.200.examples.application/json.entries[0].accessible_by.type": "user",
	"paths./folders/{FOLDER_ID}/collaborations.get.responses.200.examples.application/json.entries[0].acknowledged_at": "2011-11-29T12:59:40-08:00",
	"paths./folders/{FOLDER_ID}/collaborations.get.responses.200.examples.application/json.entries[0].created_at": "2011-11-29T12:56:35-08:00",
	"paths./folders/{FOLDER_ID}/collaborations.get.responses.200.examples.application/json.entries[0].created_by.id": "4276790",
	"paths./folders/{FOLDER_ID}/collaborations.get.responses.200.examples.application/json.entries[0].created_by.login": "david@box.com",
	"paths./folders/{FOLDER_ID}/collaborations.get.responses.200.examples.application/json.entries[0].created_by.name": "David Lee",
	"paths./folders/{FOLDER_ID}/collaborations.get.responses.200.examples.application/json.entries[0].created_by.type": "user",
	"paths./folders/{FOLDER_ID}/collaborations.get.responses.200.examples.application/json.entries[0].id": "14176246",
	"paths./folders/{FOLDER_ID}/collaborations.get.responses.200.examples.application/json.entries[0].modified_at": "2012-09-11T15:12:32-07:00",
	"paths./folders/{FOLDER_ID}/collaborations.get.responses.200.examples.application/json.entries[0].role": "editor",
	"paths./folders/{FOLDER_ID}/collaborations.get.responses.200.examples.application/json.entries[0].status": "accepted",
	"paths./folders/{FOLDER_ID}/collaborations.get.responses.200.examples.application/json.entries[0].type": "collaboration",
	"paths./folders/{FOLDER_ID}/collaborations.get.responses.200.examples.application/json.total_count": 1,
	"paths./folders/{FOLDER_ID}/collaborations.get.responses.200.schema.$ref": "#/definitions/CollaborationList",
	"paths./folders/{FOLDER_ID}/collaborations.get.responses.default.description": "Get folder collaboartions operation error",
	"paths./folders/{FOLDER_ID}/collaborations.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./folders/{FOLDER_ID}/collaborations.get.summary": "Get Folder Collaborations",
	"paths./folders/{FOLDER_ID}/collaborations.get.tags.length": 1,
	"paths./folders/{FOLDER_ID}/collaborations.get.tags[0]": "Folders",
	"paths./folders/{FOLDER_ID}/copy.post.description": "Used to create a copy of a folder in another folder. The original version of the folder will not be altered.",
	"paths./folders/{FOLDER_ID}/copy.post.externalDocs.url": "https://docs.box.com/reference#copy-a-folder",
	"paths./folders/{FOLDER_ID}/copy.post.operationId": "copyFolder",
	"paths./folders/{FOLDER_ID}/copy.post.parameters.length": 3,
	"paths./folders/{FOLDER_ID}/copy.post.parameters[0].in": "path",
	"paths./folders/{FOLDER_ID}/copy.post.parameters[0].name": "FOLDER_ID",
	"paths./folders/{FOLDER_ID}/copy.post.parameters[0].required": true,
	"paths./folders/{FOLDER_ID}/copy.post.parameters[0].type": "string",
	"paths./folders/{FOLDER_ID}/copy.post.parameters[1].description": "Attribute(s) to include in the response",
	"paths./folders/{FOLDER_ID}/copy.post.parameters[1].in": "query",
	"paths./folders/{FOLDER_ID}/copy.post.parameters[1].name": "fields",
	"paths./folders/{FOLDER_ID}/copy.post.parameters[1].required": false,
	"paths./folders/{FOLDER_ID}/copy.post.parameters[1].type": "string",
	"paths./folders/{FOLDER_ID}/copy.post.parameters[2].in": "body",
	"paths./folders/{FOLDER_ID}/copy.post.parameters[2].name": "body",
	"paths./folders/{FOLDER_ID}/copy.post.parameters[2].required": true,
	"paths./folders/{FOLDER_ID}/copy.post.parameters[2].schema.$ref": "#/definitions/Folder",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.description": "A full folder object is returned if the ID is valid and if the update is successful.",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.created_at": "2012-12-12T10:53:43-08:00",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.created_by.id": "17738362",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.created_by.login": "sean@box.com",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.created_by.name": "sean rose",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.created_by.type": "user",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.description": "Some pictures I took",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.etag": "1",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.folder_upload_email.access": "open",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.folder_upload_email.email": "upload.Picture.k13sdz1@u.box.com",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.id": "11446498",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.item_collection.entries.length": 1,
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.item_collection.entries[0].etag": "3",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.item_collection.entries[0].id": "5000948880",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.item_collection.entries[0].name": "tigers.jpeg",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.item_collection.entries[0].sequence_id": "3",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.item_collection.entries[0].sha1": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.item_collection.entries[0].type": "file",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.item_collection.limit": 100,
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.item_collection.offset": 0,
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.item_collection.total_count": 1,
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.item_status": "active",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.modified_at": "2012-12-12T11:15:04-08:00",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.modified_by.id": "17738362",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.modified_by.login": "sean@box.com",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.modified_by.name": "sean rose",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.modified_by.type": "user",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.name": "Pictures",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.owned_by.id": "17738362",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.owned_by.login": "sean@box.com",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.owned_by.name": "sean rose",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.owned_by.type": "user",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.parent.id": "0",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.parent.name": "All Files",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.parent.type": "folder",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.path_collection.entries.length": 1,
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.path_collection.entries[0].id": "0",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.path_collection.entries[0].name": "All Files",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.path_collection.entries[0].type": "folder",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.path_collection.total_count": 1,
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.sequence_id": "1",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.shared_link.access": "open",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.shared_link.download_count": 0,
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.shared_link.is_password_enabled": false,
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.shared_link.permissions.can_download": true,
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.shared_link.permissions.can_preview": true,
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.shared_link.preview_count": 0,
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.shared_link.url": "https://www.box.com/s/vspke7y05sb214wjokpk",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.size": 629644,
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.examples.application/json.type": "folder",
	"paths./folders/{FOLDER_ID}/copy.post.responses.201.schema.$ref": "#/definitions/Folder",
	"paths./folders/{FOLDER_ID}/copy.post.responses.409.description": "If the intended destination folder is the same, as this will cause a name collision.",
	"paths./folders/{FOLDER_ID}/copy.post.responses.409.schema.$ref": "#/definitions/Error",
	"paths./folders/{FOLDER_ID}/copy.post.responses.default.description": "Copy folder operation error",
	"paths./folders/{FOLDER_ID}/copy.post.responses.default.schema.$ref": "#/definitions/Error",
	"paths./folders/{FOLDER_ID}/copy.post.summary": "Copy Folder",
	"paths./folders/{FOLDER_ID}/copy.post.tags.length": 1,
	"paths./folders/{FOLDER_ID}/copy.post.tags[0]": "Folders",
	"paths./folders/{FOLDER_ID}/items.get.description": "Retrieves the files and/or folders contained within this folder without any other metadata about the folder. Any attribute in the full files or folders objects can be passed in with the fields parameter to get specific attributes, and only those specific attributes back; otherwise, the mini format is returned for each item by default. Multiple attributes can be passed in separated by commas e.g. fields=name,created_at. Paginated results can be retrieved using the limit and offset parameters.",
	"paths./folders/{FOLDER_ID}/items.get.externalDocs.url": "https://docs.box.com/reference#get-a-folders-items",
	"paths./folders/{FOLDER_ID}/items.get.operationId": "getFolderItems",
	"paths./folders/{FOLDER_ID}/items.get.parameters.length": 4,
	"paths./folders/{FOLDER_ID}/items.get.parameters[0].in": "path",
	"paths./folders/{FOLDER_ID}/items.get.parameters[0].name": "FOLDER_ID",
	"paths./folders/{FOLDER_ID}/items.get.parameters[0].required": true,
	"paths./folders/{FOLDER_ID}/items.get.parameters[0].type": "string",
	"paths./folders/{FOLDER_ID}/items.get.parameters[1].description": "Attribute(s) to include in the response",
	"paths./folders/{FOLDER_ID}/items.get.parameters[1].in": "query",
	"paths./folders/{FOLDER_ID}/items.get.parameters[1].name": "fields",
	"paths./folders/{FOLDER_ID}/items.get.parameters[1].required": false,
	"paths./folders/{FOLDER_ID}/items.get.parameters[1].type": "string",
	"paths./folders/{FOLDER_ID}/items.get.parameters[2].description": "The maximum number of items to return in a page. The default is 100 and the max is 1000.",
	"paths./folders/{FOLDER_ID}/items.get.parameters[2].format": "int64",
	"paths./folders/{FOLDER_ID}/items.get.parameters[2].in": "query",
	"paths./folders/{FOLDER_ID}/items.get.parameters[2].name": "limit",
	"paths./folders/{FOLDER_ID}/items.get.parameters[2].required": false,
	"paths./folders/{FOLDER_ID}/items.get.parameters[2].type": "integer",
	"paths./folders/{FOLDER_ID}/items.get.parameters[3].description": "The offset at which to begin the response. An offset of value of 0 will start at the beginning of the folder-listing. Note: If there are hidden items in your previous response, your next offset should be = offset + limit, not the # of records you received back. The default is 0.",
	"paths./folders/{FOLDER_ID}/items.get.parameters[3].in": "query",
	"paths./folders/{FOLDER_ID}/items.get.parameters[3].name": "offset",
	"paths./folders/{FOLDER_ID}/items.get.parameters[3].required": false,
	"paths./folders/{FOLDER_ID}/items.get.parameters[3].type": "string",
	"paths./folders/{FOLDER_ID}/items.get.responses.200.description": "A collection of items contained in the folder is returned.",
	"paths./folders/{FOLDER_ID}/items.get.responses.200.schema.$ref": "#/definitions/ItemReferenceList",
	"paths./folders/{FOLDER_ID}/items.get.responses.default.description": "Get Folder items error",
	"paths./folders/{FOLDER_ID}/items.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./folders/{FOLDER_ID}/items.get.summary": "Get Folder’s Items",
	"paths./folders/{FOLDER_ID}/items.get.tags.length": 1,
	"paths./folders/{FOLDER_ID}/items.get.tags[0]": "Folders",
	"paths./folders/{FOLDER_ID}/metadata.get.description": "Used to retrieve all metadata associated with a given folder",
	"paths./folders/{FOLDER_ID}/metadata.get.externalDocs.url": "https://docs.box.com/reference#get-all-metadata-on-folder",
	"paths./folders/{FOLDER_ID}/metadata.get.operationId": "getAllFolderMetadata",
	"paths./folders/{FOLDER_ID}/metadata.get.parameters.length": 1,
	"paths./folders/{FOLDER_ID}/metadata.get.parameters[0].in": "path",
	"paths./folders/{FOLDER_ID}/metadata.get.parameters[0].name": "FOLDER_ID",
	"paths./folders/{FOLDER_ID}/metadata.get.parameters[0].required": true,
	"paths./folders/{FOLDER_ID}/metadata.get.parameters[0].type": "string",
	"paths./folders/{FOLDER_ID}/metadata.get.responses.200.description": "An array of metadata instances associated with the folder.",
	"paths./folders/{FOLDER_ID}/metadata.get.responses.200.examples.application/json.entries.length": 2,
	"paths./folders/{FOLDER_ID}/metadata.get.responses.200.examples.application/json.entries[0].$id": "e57f90ff-0044-48c2-807d-06b908765baf",
	"paths./folders/{FOLDER_ID}/metadata.get.responses.200.examples.application/json.entries[0].$parent": "folder_998951261",
	"paths./folders/{FOLDER_ID}/metadata.get.responses.200.examples.application/json.entries[0].$scope": "enterprise_12345",
	"paths./folders/{FOLDER_ID}/metadata.get.responses.200.examples.application/json.entries[0].$template": "documentFlow",
	"paths./folders/{FOLDER_ID}/metadata.get.responses.200.examples.application/json.entries[0].$type": "documentFlow-452b4c9d-c3ad-4ac7-b1ad-9d5192f2fc5f",
	"paths./folders/{FOLDER_ID}/metadata.get.responses.200.examples.application/json.entries[0].$typeVersion": 2,
	"paths./folders/{FOLDER_ID}/metadata.get.responses.200.examples.application/json.entries[0].$version": 1,
	"paths./folders/{FOLDER_ID}/metadata.get.responses.200.examples.application/json.entries[0].currentDocumentStage": "prioritization",
	"paths./folders/{FOLDER_ID}/metadata.get.responses.200.examples.application/json.entries[0].maximumDaysAllowedInCurrentStage": 5,
	"paths./folders/{FOLDER_ID}/metadata.get.responses.200.examples.application/json.entries[0].needsApprovalFrom": "planning team",
	"paths./folders/{FOLDER_ID}/metadata.get.responses.200.examples.application/json.entries[1].$id": "0dd54220-8340-4ea1-bd3f-59a23c68ccdd",
	"paths./folders/{FOLDER_ID}/metadata.get.responses.200.examples.application/json.entries[1].$parent": "folder_998951261",
	"paths./folders/{FOLDER_ID}/metadata.get.responses.200.examples.application/json.entries[1].$scope": "enterprise_12345",
	"paths./folders/{FOLDER_ID}/metadata.get.responses.200.examples.application/json.entries[1].$template": "productInfo",
	"paths./folders/{FOLDER_ID}/metadata.get.responses.200.examples.application/json.entries[1].$type": "productInfo-9d7b6993-b09e-4e52-b197-e42f0ea995b9",
	"paths./folders/{FOLDER_ID}/metadata.get.responses.200.examples.application/json.entries[1].$typeVersion": 1,
	"paths./folders/{FOLDER_ID}/metadata.get.responses.200.examples.application/json.entries[1].$version": 0,
	"paths./folders/{FOLDER_ID}/metadata.get.responses.200.examples.application/json.entries[1].department": "Accessories",
	"paths./folders/{FOLDER_ID}/metadata.get.responses.200.examples.application/json.entries[1].description": "Hat",
	"paths./folders/{FOLDER_ID}/metadata.get.responses.200.examples.application/json.entries[1].skuNumber": 45234522115075,
	"paths./folders/{FOLDER_ID}/metadata.get.responses.200.examples.application/json.limit": 100,
	"paths./folders/{FOLDER_ID}/metadata.get.responses.200.schema.$ref": "#/definitions/MetadataList",
	"paths./folders/{FOLDER_ID}/metadata.get.responses.default.description": "Get folder metadata error",
	"paths./folders/{FOLDER_ID}/metadata.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./folders/{FOLDER_ID}/metadata.get.summary": "Get All Metadata on Folder",
	"paths./folders/{FOLDER_ID}/metadata.get.tags.length": 1,
	"paths./folders/{FOLDER_ID}/metadata.get.tags[0]": "Metadata",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.description": "Used to delete the template instance. To delete custom key:value pairs within a template instance, you should refer to the updating metadata section.",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.externalDocs.url": "https://docs.box.com/reference#delete-metadata-on-folder",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.operationId": "deleteFolderMetadata",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.parameters.length": 3,
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.parameters[0].in": "path",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.parameters[0].name": "FOLDER_ID",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.parameters[0].required": true,
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.parameters[0].type": "string",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.parameters[1].in": "path",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.parameters[1].name": "SCOPE",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.parameters[1].required": true,
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.parameters[1].type": "string",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.parameters[2].in": "path",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.parameters[2].name": "TEMPLATE",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.parameters[2].required": true,
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.parameters[2].type": "string",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.responses.204.description": "An empty HTTP 204 response to confirm the deletion of the template instance.",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.responses.default.description": "Delete folder metadata error",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.responses.default.schema.$ref": "#/definitions/Error",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.summary": "Delete Metadata on Folder",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.tags.length": 1,
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.delete.tags[0]": "Metadata",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.description": "Used to retrieve the metadata template instance for a corresponding Box folder.",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.externalDocs.url": "https://docs.box.com/reference#get-metadata-on-folder",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.operationId": "getFolderMetadata",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.parameters.length": 3,
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.parameters[0].in": "path",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.parameters[0].name": "FOLDER_ID",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.parameters[0].required": true,
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.parameters[0].type": "string",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.parameters[1].in": "path",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.parameters[1].name": "SCOPE",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.parameters[1].required": true,
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.parameters[1].type": "string",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.parameters[2].in": "path",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.parameters[2].name": "TEMPLATE",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.parameters[2].required": true,
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.parameters[2].type": "string",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.201.description": "An instance of the template that includes key:value pairs defined by a user or application.",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.201.examples.application/json.$id": "e57f90ff-0044-48c2-807d-06b908765baf",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.201.examples.application/json.$parent": "folder_998951261",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.201.examples.application/json.$scope": "enterprise_12345",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.201.examples.application/json.$template": "documentFlow",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.201.examples.application/json.$type": "documentFlow-452b4c9d-c3ad-4ac7-b1ad-9d5192f2fc5f",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.201.examples.application/json.$typeVersion": 0,
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.201.examples.application/json.$version": 0,
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.201.examples.application/json.currentDocumentStage": "initial vetting",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.201.examples.application/json.needsApprovalFrom": "vetting team",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.201.examples.application/json.nextDocumentStage": "prioritization",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.201.schema.$ref": "#/definitions/Metadata",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.404.description": "If there is no template instance present, a 404 HTTP status code of not_found will be returned.",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.default.description": "Get metadata error",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.summary": "Get Metadata on Folder",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.tags.length": 1,
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.get.tags[0]": "Metadata",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.description": "Used to create the metadata template instance for a corresponding Box folder. When creating metadata, only values that adhere to the metadata template schema will be accepted.",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.externalDocs.url": "https://docs.box.com/reference#create-metadata-on-folder",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.operationId": "createFolderMetadata",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters.length": 4,
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[0].in": "path",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[0].name": "FOLDER_ID",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[0].required": true,
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[0].type": "string",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[1].in": "path",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[1].name": "SCOPE",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[1].required": true,
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[1].type": "string",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[2].in": "path",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[2].name": "TEMPLATE",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[2].required": true,
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[2].type": "string",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[3].in": "body",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[3].name": "body",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[3].required": true,
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.parameters[3].schema.$ref": "#/definitions/Metadata",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.200.description": "An instance of the template that includes key:value pairs defined by a user or application.",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.200.examples.application/json.$id": "e57f90ff-0044-48c2-807d-06b908765baf",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.200.examples.application/json.$parent": "folder_998951261",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.200.examples.application/json.$scope": "enterprise_12345",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.200.examples.application/json.$template": "documentFlow",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.200.examples.application/json.$type": "documentFlow-452b4c9d-c3ad-4ac7-b1ad-9d5192f2fc5f",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.200.examples.application/json.$typeVersion": 0,
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.200.examples.application/json.$version": 0,
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.200.examples.application/json.currentDocumentStage": "initial vetting",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.200.examples.application/json.needsApprovalFrom": "vetting team",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.200.examples.application/json.nextDocumentStage": "prioritization",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.200.schema.$ref": "#/definitions/Metadata",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.409.description": "If the template instance already exists, a 409 HTTP status code of conflict will be returned and the update method should be used.",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.409.schema.$ref": "#/definitions/Error",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.default.description": "Create Folder metadata error",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.responses.default.schema.$ref": "#/definitions/Error",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.summary": "Create Metadata on Folder",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.tags.length": 1,
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.post.tags[0]": "Metadata",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.consumes.length": 1,
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.consumes[0]": "application/json-patch+json",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.description": "Used to update the template instance. Updates can be either add, replace, remove , or test. The template instance can only be updated if the template instance already exists. When editing metadata, only values that adhere to the metadata template schema will be accepted.",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.externalDocs.url": "https://docs.box.com/reference#update-metadata-1",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.operationId": "updateFolderMetadata",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters.length": 4,
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[0].in": "path",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[0].name": "FOLDER_ID",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[0].required": true,
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[0].type": "string",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[1].in": "path",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[1].name": "SCOPE",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[1].required": true,
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[1].type": "string",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[2].in": "path",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[2].name": "TEMPLATE",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[2].required": true,
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[2].type": "string",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[3].in": "body",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[3].name": "body",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[3].required": true,
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.parameters[3].schema.$ref": "#/definitions/UpdateMetadata",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.200.description": "An instance of the template that includes key:value pairs defined by a user or application.",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.200.examples.application/json.$id": "e57f90ff-0044-48c2-807d-06b908765baf",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.200.examples.application/json.$parent": "folder_998951261",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.200.examples.application/json.$scope": "enterprise_12345",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.200.examples.application/json.$template": "documentFlow",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.200.examples.application/json.$type": "documentFlow-452b4c9d-c3ad-4ac7-b1ad-9d5192f2fc5f",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.200.examples.application/json.$typeVersion": 2,
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.200.examples.application/json.$version": 1,
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.200.examples.application/json.currentDocumentStage": "prioritization",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.200.examples.application/json.maximumDaysAllowedInCurrentStage": 5,
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.200.examples.application/json.needsApprovalFrom": "planning team",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.200.schema.$ref": "#/definitions/Metadata",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.404.description": "If there is no template instance present, a 404 HTTP status code of not_found will be returned",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.404.schema.$ref": "#/definitions/Error",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.default.description": "Create Web link error",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.responses.default.schema.$ref": "#/definitions/Error",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.summary": "Update Metadata on Folder",
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.tags.length": 1,
	"paths./folders/{FOLDER_ID}/metadata/{SCOPE}/{TEMPLATE}.put.tags[0]": "Metadata",
	"paths./folders/{FOLDER_ID}/trash.delete.description": "Permanently deletes an folder that is in the trash. The item will no longer exist in Box. This action cannot be undone.",
	"paths./folders/{FOLDER_ID}/trash.delete.externalDocs.url": "https://docs.box.com/reference#permanently-delete-a-trashed-folder",
	"paths./folders/{FOLDER_ID}/trash.delete.operationId": "deleteTrashedFolder",
	"paths./folders/{FOLDER_ID}/trash.delete.parameters.length": 1,
	"paths./folders/{FOLDER_ID}/trash.delete.parameters[0].in": "path",
	"paths./folders/{FOLDER_ID}/trash.delete.parameters[0].name": "FOLDER_ID",
	"paths./folders/{FOLDER_ID}/trash.delete.parameters[0].required": true,
	"paths./folders/{FOLDER_ID}/trash.delete.parameters[0].type": "string",
	"paths./folders/{FOLDER_ID}/trash.delete.responses.204.description": "An empty 204 No Content response will be returned upon successful deletion.",
	"paths./folders/{FOLDER_ID}/trash.delete.responses.404.description": "If the folder is not in the trash.",
	"paths./folders/{FOLDER_ID}/trash.delete.responses.404.schema.$ref": "#/definitions/Error",
	"paths./folders/{FOLDER_ID}/trash.delete.responses.default.description": "Permanently delete a folder operation error",
	"paths./folders/{FOLDER_ID}/trash.delete.responses.default.schema.$ref": "#/definitions/Error",
	"paths./folders/{FOLDER_ID}/trash.delete.summary": "Permanently Delete",
	"paths./folders/{FOLDER_ID}/trash.delete.tags.length": 1,
	"paths./folders/{FOLDER_ID}/trash.delete.tags[0]": "Folders",
	"paths./folders/{FOLDER_ID}/trash.get.description": "Retrieves an folder that has been moved to the trash.",
	"paths./folders/{FOLDER_ID}/trash.get.externalDocs.url": "https://docs.box.com/reference#get-a-trashed-folder",
	"paths./folders/{FOLDER_ID}/trash.get.operationId": "getTrashedFolder",
	"paths./folders/{FOLDER_ID}/trash.get.parameters.length": 2,
	"paths./folders/{FOLDER_ID}/trash.get.parameters[0].in": "path",
	"paths./folders/{FOLDER_ID}/trash.get.parameters[0].name": "FOLDER_ID",
	"paths./folders/{FOLDER_ID}/trash.get.parameters[0].required": true,
	"paths./folders/{FOLDER_ID}/trash.get.parameters[0].type": "string",
	"paths./folders/{FOLDER_ID}/trash.get.parameters[1].description": "Attribute(s) to include in the response",
	"paths./folders/{FOLDER_ID}/trash.get.parameters[1].in": "query",
	"paths./folders/{FOLDER_ID}/trash.get.parameters[1].name": "fields",
	"paths./folders/{FOLDER_ID}/trash.get.parameters[1].required": false,
	"paths./folders/{FOLDER_ID}/trash.get.parameters[1].type": "string",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.description": "The full folder will be returned, including information about when the it was moved to the trash.",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.content_created_at": "2013-01-15T16:15:27-08:00",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.content_modified_at": "2013-01-17T13:48:23-08:00",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.created_at": "2013-01-15T16:15:27-08:00",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.created_by.id": "181757341",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.created_by.login": "sean+test@box.com",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.created_by.name": "sean test",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.created_by.type": "user",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.description": "",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.etag": "1",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.id": "588970022",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.item_status": "trashed",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.modified_at": "2013-01-17T13:48:23-08:00",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.modified_by.id": "181757341",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.modified_by.login": "sean+test@box.com",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.modified_by.name": "sean test",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.modified_by.type": "user",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.name": "heloo world",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.owned_by.id": "181757341",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.owned_by.login": "sean+test@box.com",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.owned_by.name": "sean test",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.owned_by.type": "user",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.parent.id": "0",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.parent.name": "All Files",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.parent.type": "folder",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.path_collection.entries.length": 1,
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.path_collection.entries[0].id": "1",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.path_collection.entries[0].name": "Trash",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.path_collection.entries[0].type": "folder",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.path_collection.total_count": 1,
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.purged_at": "2013-03-09T12:53:32-08:00",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.sequence_id": "1",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.size": 0,
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.trashed_at": "2013-02-07T12:53:32-08:00",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.examples.application/json.type": "folder",
	"paths./folders/{FOLDER_ID}/trash.get.responses.200.schema.$ref": "#/definitions/Folder",
	"paths./folders/{FOLDER_ID}/trash.get.responses.404.description": "If the folder is not in the trash.",
	"paths./folders/{FOLDER_ID}/trash.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./folders/{FOLDER_ID}/trash.get.responses.default.description": "Get Trashed Folder operation error",
	"paths./folders/{FOLDER_ID}/trash.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./folders/{FOLDER_ID}/trash.get.summary": "Get Trashed Folder",
	"paths./folders/{FOLDER_ID}/trash.get.tags.length": 1,
	"paths./folders/{FOLDER_ID}/trash.get.tags[0]": "Folders",
	"paths./folders/{FOLDER_ID}/watermark.delete.description": "Used to remove the watermark for a corresponding Box Folder.",
	"paths./folders/{FOLDER_ID}/watermark.delete.externalDocs.url": "https://docs.box.com/reference#remove-watermark-on-folder",
	"paths./folders/{FOLDER_ID}/watermark.delete.operationId": "deleteFolderWatermark",
	"paths./folders/{FOLDER_ID}/watermark.delete.parameters.length": 1,
	"paths./folders/{FOLDER_ID}/watermark.delete.parameters[0].in": "path",
	"paths./folders/{FOLDER_ID}/watermark.delete.parameters[0].name": "FOLDER_ID",
	"paths./folders/{FOLDER_ID}/watermark.delete.parameters[0].required": true,
	"paths./folders/{FOLDER_ID}/watermark.delete.parameters[0].type": "string",
	"paths./folders/{FOLDER_ID}/watermark.delete.responses.204.description": "An empty 204 No Content response to confirm the watermark has been removed.",
	"paths./folders/{FOLDER_ID}/watermark.delete.responses.204.schema.$ref": "#/definitions/Watermark",
	"paths./folders/{FOLDER_ID}/watermark.delete.responses.404.description": "If the folder did not have a watermark applied to it, a 404 Not Found will be returned.",
	"paths./folders/{FOLDER_ID}/watermark.delete.responses.404.schema.$ref": "#/definitions/Error",
	"paths./folders/{FOLDER_ID}/watermark.delete.responses.default.description": "Remove watermark on folder error",
	"paths./folders/{FOLDER_ID}/watermark.delete.responses.default.schema.$ref": "#/definitions/Error",
	"paths./folders/{FOLDER_ID}/watermark.delete.summary": "Remove Watermark on Folder",
	"paths./folders/{FOLDER_ID}/watermark.delete.tags.length": 1,
	"paths./folders/{FOLDER_ID}/watermark.delete.tags[0]": "Watermark",
	"paths./folders/{FOLDER_ID}/watermark.get.description": "Used to retrieve the watermark for a corresponding Box folder.",
	"paths./folders/{FOLDER_ID}/watermark.get.externalDocs.url": "https://docs.box.com/reference#get-watermark-on-folder",
	"paths./folders/{FOLDER_ID}/watermark.get.operationId": "getFolderWatermark",
	"paths./folders/{FOLDER_ID}/watermark.get.parameters.length": 1,
	"paths./folders/{FOLDER_ID}/watermark.get.parameters[0].in": "path",
	"paths./folders/{FOLDER_ID}/watermark.get.parameters[0].name": "FOLDER_ID",
	"paths./folders/{FOLDER_ID}/watermark.get.parameters[0].required": true,
	"paths./folders/{FOLDER_ID}/watermark.get.parameters[0].type": "string",
	"paths./folders/{FOLDER_ID}/watermark.get.responses.200.description": "An object containing information about the watermark associated for this folder.",
	"paths./folders/{FOLDER_ID}/watermark.get.responses.200.schema.$ref": "#/definitions/Watermark",
	"paths./folders/{FOLDER_ID}/watermark.get.responses.404.description": "If the folder does not have a watermark applied to it, a 404 Not Found will be returned.",
	"paths./folders/{FOLDER_ID}/watermark.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./folders/{FOLDER_ID}/watermark.get.responses.default.description": "Get watermark on folder error",
	"paths./folders/{FOLDER_ID}/watermark.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./folders/{FOLDER_ID}/watermark.get.summary": "Get Watermark on Folder",
	"paths./folders/{FOLDER_ID}/watermark.get.tags.length": 1,
	"paths./folders/{FOLDER_ID}/watermark.get.tags[0]": "Watermark",
	"paths./folders/{FOLDER_ID}/watermark.put.description": "Used to apply or update the watermark for a corresponding Box folder. The endpoints accepts a JSON body describing the watermark to apply.",
	"paths./folders/{FOLDER_ID}/watermark.put.externalDocs.url": "https://docs.box.com/reference#apply-watermark-on-folder",
	"paths./folders/{FOLDER_ID}/watermark.put.operationId": "updateFolderWatermark",
	"paths./folders/{FOLDER_ID}/watermark.put.parameters.length": 2,
	"paths./folders/{FOLDER_ID}/watermark.put.parameters[0].in": "path",
	"paths./folders/{FOLDER_ID}/watermark.put.parameters[0].name": "FOLDER_ID",
	"paths./folders/{FOLDER_ID}/watermark.put.parameters[0].required": true,
	"paths./folders/{FOLDER_ID}/watermark.put.parameters[0].type": "string",
	"paths./folders/{FOLDER_ID}/watermark.put.parameters[1].in": "body",
	"paths./folders/{FOLDER_ID}/watermark.put.parameters[1].name": "body",
	"paths./folders/{FOLDER_ID}/watermark.put.parameters[1].required": true,
	"paths./folders/{FOLDER_ID}/watermark.put.parameters[1].schema.$ref": "#/definitions/Watermark",
	"paths./folders/{FOLDER_ID}/watermark.put.responses.200.description": "An object containing information about the watermark associated for this folder. ",
	"paths./folders/{FOLDER_ID}/watermark.put.responses.200.schema.$ref": "#/definitions/Watermark",
	"paths./folders/{FOLDER_ID}/watermark.put.responses.201.description": "If the folder did not previously have a watermark applied to it, 201 Created is returned.",
	"paths./folders/{FOLDER_ID}/watermark.put.responses.201.schema.$ref": "#/definitions/Watermark",
	"paths./folders/{FOLDER_ID}/watermark.put.responses.default.description": "Apply watermark on folder error",
	"paths./folders/{FOLDER_ID}/watermark.put.responses.default.schema.$ref": "#/definitions/Error",
	"paths./folders/{FOLDER_ID}/watermark.put.summary": "Apply Watermark on Folder",
	"paths./folders/{FOLDER_ID}/watermark.put.tags.length": 1,
	"paths./folders/{FOLDER_ID}/watermark.put.tags[0]": "Watermark",
	"paths./group_memberships.post.description": "Used to add a member to a Group.",
	"paths./group_memberships.post.externalDocs.url": "https://docs.box.com/reference#add-a-member-to-a-group",
	"paths./group_memberships.post.operationId": "createGroupMembership",
	"paths./group_memberships.post.parameters.length": 2,
	"paths./group_memberships.post.parameters[0].description": "Attribute(s) to include in the response",
	"paths./group_memberships.post.parameters[0].in": "query",
	"paths./group_memberships.post.parameters[0].name": "fields",
	"paths./group_memberships.post.parameters[0].required": false,
	"paths./group_memberships.post.parameters[0].type": "string",
	"paths./group_memberships.post.parameters[1].in": "body",
	"paths./group_memberships.post.parameters[1].name": "body",
	"paths./group_memberships.post.parameters[1].required": true,
	"paths./group_memberships.post.parameters[1].schema.$ref": "#/definitions/GroupMembership",
	"paths./group_memberships.post.responses.201.description": "A new group membership object will be returned upon success.",
	"paths./group_memberships.post.responses.201.examples.application/json.group.id": "119720",
	"paths./group_memberships.post.responses.201.examples.application/json.group.name": "family",
	"paths./group_memberships.post.responses.201.examples.application/json.group.type": "group",
	"paths./group_memberships.post.responses.201.examples.application/json.id": "1560354",
	"paths./group_memberships.post.responses.201.examples.application/json.role": "member",
	"paths./group_memberships.post.responses.201.examples.application/json.type": "group_membership",
	"paths./group_memberships.post.responses.201.examples.application/json.user.id": "13130406",
	"paths./group_memberships.post.responses.201.examples.application/json.user.login": "alice@gmail.com",
	"paths./group_memberships.post.responses.201.examples.application/json.user.name": "Alison Wonderland",
	"paths./group_memberships.post.responses.201.examples.application/json.user.type": "user",
	"paths./group_memberships.post.responses.201.schema.$ref": "#/definitions/GroupMembership",
	"paths./group_memberships.post.responses.default.description": "Create Group membership error",
	"paths./group_memberships.post.responses.default.schema.$ref": "#/definitions/Error",
	"paths./group_memberships.post.summary": "Create Membership",
	"paths./group_memberships.post.tags.length": 1,
	"paths./group_memberships.post.tags[0]": "Groups",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.delete.description": "Deletes a specific group membership.",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.delete.externalDocs.url": "https://docs.box.com/reference#delete-a-group-membership",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.delete.operationId": "deleteGroupMembership",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.delete.parameters.length": 1,
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.delete.parameters[0].in": "path",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.delete.parameters[0].name": "GROUP_MEMBERSHIP_ID",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.delete.parameters[0].required": true,
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.delete.parameters[0].type": "string",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.delete.responses.204.description": "An empty 204 No Content response will be returned upon success.",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.delete.responses.default.description": "Delete Group membership error",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.delete.responses.default.schema.$ref": "#/definitions/Error",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.delete.summary": "Delete Membership",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.delete.tags.length": 1,
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.delete.tags[0]": "Groups",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.description": "Fetches a specific group membership entry.",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.externalDocs.url": "https://docs.box.com/reference#get-a-group-membership-entry",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.operationId": "getGroupMembership",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.parameters.length": 2,
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.parameters[0].in": "path",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.parameters[0].name": "GROUP_MEMBERSHIP_ID",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.parameters[0].required": true,
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.parameters[0].type": "string",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.parameters[1].description": "Attribute(s) to include in the response",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.parameters[1].in": "query",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.parameters[1].name": "fields",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.parameters[1].required": false,
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.parameters[1].type": "string",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.responses.200.description": "The specified group_membership object will be returned upon success.",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.responses.200.examples.application/json.created_at": "2013-05-16T15:27:57-07:00",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.responses.200.examples.application/json.group.id": "119720",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.responses.200.examples.application/json.group.name": "family",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.responses.200.examples.application/json.group.type": "group",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.responses.200.examples.application/json.id": "1560354",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.responses.200.examples.application/json.modified_at": "2013-05-16T15:27:57-07:00",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.responses.200.examples.application/json.role": "member",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.responses.200.examples.application/json.type": "group_membership",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.responses.200.examples.application/json.user.id": "13130406",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.responses.200.examples.application/json.user.login": "alice@gmail.com",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.responses.200.examples.application/json.user.name": "Alison Wonderland",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.responses.200.examples.application/json.user.type": "user",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.responses.200.schema.$ref": "#/definitions/GroupMembership",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.responses.default.description": "Get Group membership error",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.summary": "Get Membership",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.tags.length": 1,
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.get.tags[0]": "Groups",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.description": "Used to update a group membership.",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.externalDocs.url": "https://docs.box.com/reference#update-a-group-membership",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.operationId": "updateGroupMembership",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.parameters.length": 3,
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.parameters[0].in": "path",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.parameters[0].name": "GROUP_MEMBERSHIP_ID",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.parameters[0].required": true,
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.parameters[0].type": "string",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.parameters[1].description": "Attribute(s) to include in the response",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.parameters[1].in": "query",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.parameters[1].name": "fields",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.parameters[1].required": false,
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.parameters[1].type": "string",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.parameters[2].in": "body",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.parameters[2].name": "body",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.parameters[2].required": true,
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.parameters[2].schema.$ref": "#/definitions/GroupMembership",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.responses.200.description": "A new group membership object will be returned upon success.",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.responses.200.examples.application/json.created_at": "2013-05-16T15:27:57-07:00",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.responses.200.examples.application/json.group.id": "119720",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.responses.200.examples.application/json.group.name": "family",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.responses.200.examples.application/json.group.type": "group",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.responses.200.examples.application/json.id": "1560354",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.responses.200.examples.application/json.modified_at": "2013-05-16T15:27:57-07:00",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.responses.200.examples.application/json.role": "submaster",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.responses.200.examples.application/json.type": "group_membership",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.responses.200.examples.application/json.user.id": "13130406",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.responses.200.examples.application/json.user.login": "alice@gmail.com",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.responses.200.examples.application/json.user.name": "Alison Wonderland",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.responses.200.examples.application/json.user.type": "user",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.responses.200.schema.$ref": "#/definitions/GroupMembership",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.responses.default.description": "Update Group memebership error",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.responses.default.schema.$ref": "#/definitions/Error",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.summary": "Update Membership",
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.tags.length": 1,
	"paths./group_memberships/{GROUP_MEMBERSHIP_ID}.put.tags[0]": "Groups",
	"paths./groups.get.description": "Retrieves all of the groups for given enterprise. Must have permissions to see an enterprise's groups.",
	"paths./groups.get.externalDocs.url": "https://docs.box.com/reference#groups",
	"paths./groups.get.operationId": "getEnterpriseGroups",
	"paths./groups.get.parameters.length": 3,
	"paths./groups.get.parameters[0].description": "Attribute(s) to include in the response",
	"paths./groups.get.parameters[0].in": "query",
	"paths./groups.get.parameters[0].name": "fields",
	"paths./groups.get.parameters[0].required": false,
	"paths./groups.get.parameters[0].type": "string",
	"paths./groups.get.parameters[1].description": "The maximum number of items to return in a page. The default is 100 and the max is 1000.",
	"paths./groups.get.parameters[1].format": "int64",
	"paths./groups.get.parameters[1].in": "query",
	"paths./groups.get.parameters[1].name": "limit",
	"paths./groups.get.parameters[1].required": false,
	"paths./groups.get.parameters[1].type": "integer",
	"paths./groups.get.parameters[2].description": "The item at which to begin the response.",
	"paths./groups.get.parameters[2].format": "int64",
	"paths./groups.get.parameters[2].in": "query",
	"paths./groups.get.parameters[2].name": "offset",
	"paths./groups.get.parameters[2].required": false,
	"paths./groups.get.parameters[2].type": "integer",
	"paths./groups.get.responses.200.description": "A collection of mini group objects is returned. If there are no groups, an empty collection will be returned.",
	"paths./groups.get.responses.200.examples.application/json.entries.length": 1,
	"paths./groups.get.responses.200.examples.application/json.entries[0].id": "1786931",
	"paths./groups.get.responses.200.examples.application/json.entries[0].name": "friends",
	"paths./groups.get.responses.200.examples.application/json.entries[0].type": "group",
	"paths./groups.get.responses.200.examples.application/json.limit": 100,
	"paths./groups.get.responses.200.examples.application/json.offset": 0,
	"paths./groups.get.responses.200.examples.application/json.total_count": 1,
	"paths./groups.get.responses.200.schema.$ref": "#/definitions/GroupList",
	"paths./groups.get.responses.default.description": "Get groups error",
	"paths./groups.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./groups.get.summary": "Get Groups for an Enterprise",
	"paths./groups.get.tags.length": 1,
	"paths./groups.get.tags[0]": "Groups",
	"paths./groups.post.description": "Used to create a group.",
	"paths./groups.post.externalDocs.url": "https://docs.box.com/reference#create-a-group",
	"paths./groups.post.operationId": "createGroup",
	"paths./groups.post.parameters.length": 2,
	"paths./groups.post.parameters[0].description": "Attribute(s) to include in the response",
	"paths./groups.post.parameters[0].in": "query",
	"paths./groups.post.parameters[0].name": "fields",
	"paths./groups.post.parameters[0].required": false,
	"paths./groups.post.parameters[0].type": "string",
	"paths./groups.post.parameters[1].in": "body",
	"paths./groups.post.parameters[1].name": "body",
	"paths./groups.post.parameters[1].required": true,
	"paths./groups.post.parameters[1].schema.$ref": "#/definitions/Group",
	"paths./groups.post.responses.201.description": "A new group object will be returned upon success.",
	"paths./groups.post.responses.201.examples.application/json.created_at": "2013-05-16T15:27:57-07:00",
	"paths./groups.post.responses.201.examples.application/json.id": "119720",
	"paths./groups.post.responses.201.examples.application/json.modified_at": "2013-05-16T15:27:57-07:00",
	"paths./groups.post.responses.201.examples.application/json.name": "Box Employees",
	"paths./groups.post.responses.201.examples.application/json.type": "group",
	"paths./groups.post.responses.201.schema.$ref": "#/definitions/Group",
	"paths./groups.post.responses.default.description": "Create Group error",
	"paths./groups.post.responses.default.schema.$ref": "#/definitions/Error",
	"paths./groups.post.summary": "Create Group",
	"paths./groups.post.tags.length": 1,
	"paths./groups.post.tags[0]": "Groups",
	"paths./groups/{GROUP_ID}.delete.description": "Permanently deletes a specific group.",
	"paths./groups/{GROUP_ID}.delete.externalDocs.url": "https://docs.box.com/reference#delete-a-group",
	"paths./groups/{GROUP_ID}.delete.operationId": "deleteGroup",
	"paths./groups/{GROUP_ID}.delete.parameters.length": 1,
	"paths./groups/{GROUP_ID}.delete.parameters[0].in": "path",
	"paths./groups/{GROUP_ID}.delete.parameters[0].name": "GROUP_ID",
	"paths./groups/{GROUP_ID}.delete.parameters[0].required": true,
	"paths./groups/{GROUP_ID}.delete.parameters[0].type": "string",
	"paths./groups/{GROUP_ID}.delete.responses.204.description": "An empty 204 response will be returned upon success.",
	"paths./groups/{GROUP_ID}.delete.responses.default.description": "Delete Group error",
	"paths./groups/{GROUP_ID}.delete.responses.default.schema.$ref": "#/definitions/Error",
	"paths./groups/{GROUP_ID}.delete.summary": "Delete Group",
	"paths./groups/{GROUP_ID}.delete.tags.length": 1,
	"paths./groups/{GROUP_ID}.delete.tags[0]": "Groups",
	"paths./groups/{GROUP_ID}.get.description": "Used to get information about a group.",
	"paths./groups/{GROUP_ID}.get.externalDocs.url": "https://docs.box.com/reference#get-group",
	"paths./groups/{GROUP_ID}.get.operationId": "getGroup",
	"paths./groups/{GROUP_ID}.get.parameters.length": 2,
	"paths./groups/{GROUP_ID}.get.parameters[0].in": "path",
	"paths./groups/{GROUP_ID}.get.parameters[0].name": "GROUP_ID",
	"paths./groups/{GROUP_ID}.get.parameters[0].required": true,
	"paths./groups/{GROUP_ID}.get.parameters[0].type": "string",
	"paths./groups/{GROUP_ID}.get.parameters[1].description": "Attribute(s) to include in the response",
	"paths./groups/{GROUP_ID}.get.parameters[1].in": "query",
	"paths./groups/{GROUP_ID}.get.parameters[1].name": "fields",
	"paths./groups/{GROUP_ID}.get.parameters[1].required": false,
	"paths./groups/{GROUP_ID}.get.parameters[1].type": "string",
	"paths./groups/{GROUP_ID}.get.responses.200.description": "A group object that was requested.",
	"paths./groups/{GROUP_ID}.get.responses.200.examples.application/json.created_at": "2014-09-15T13:15:35-07:00",
	"paths./groups/{GROUP_ID}.get.responses.200.examples.application/json.id": "255224",
	"paths./groups/{GROUP_ID}.get.responses.200.examples.application/json.modified_at": "2014-09-15T13:15:35-07:00",
	"paths./groups/{GROUP_ID}.get.responses.200.examples.application/json.name": "Everyone",
	"paths./groups/{GROUP_ID}.get.responses.200.examples.application/json.type": "group",
	"paths./groups/{GROUP_ID}.get.responses.200.schema.$ref": "#/definitions/Group",
	"paths./groups/{GROUP_ID}.get.responses.default.description": "Get Group error",
	"paths./groups/{GROUP_ID}.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./groups/{GROUP_ID}.get.summary": "Get Group",
	"paths./groups/{GROUP_ID}.get.tags.length": 1,
	"paths./groups/{GROUP_ID}.get.tags[0]": "Groups",
	"paths./groups/{GROUP_ID}.put.description": "Updates a specific group.",
	"paths./groups/{GROUP_ID}.put.externalDocs.url": "https://docs.box.com/reference#update-a-group",
	"paths./groups/{GROUP_ID}.put.operationId": "updateGroup",
	"paths./groups/{GROUP_ID}.put.parameters.length": 3,
	"paths./groups/{GROUP_ID}.put.parameters[0].in": "path",
	"paths./groups/{GROUP_ID}.put.parameters[0].name": "GROUP_ID",
	"paths./groups/{GROUP_ID}.put.parameters[0].required": true,
	"paths./groups/{GROUP_ID}.put.parameters[0].type": "string",
	"paths./groups/{GROUP_ID}.put.parameters[1].description": "Attribute(s) to include in the response",
	"paths./groups/{GROUP_ID}.put.parameters[1].in": "query",
	"paths./groups/{GROUP_ID}.put.parameters[1].name": "fields",
	"paths./groups/{GROUP_ID}.put.parameters[1].required": false,
	"paths./groups/{GROUP_ID}.put.parameters[1].type": "string",
	"paths./groups/{GROUP_ID}.put.parameters[2].in": "body",
	"paths./groups/{GROUP_ID}.put.parameters[2].name": "body",
	"paths./groups/{GROUP_ID}.put.parameters[2].required": true,
	"paths./groups/{GROUP_ID}.put.parameters[2].schema.$ref": "#/definitions/Group",
	"paths./groups/{GROUP_ID}.put.responses.200.description": "The updated group object will be returned upon success.",
	"paths./groups/{GROUP_ID}.put.responses.200.examples.application/json.created_at": "2013-05-16T15:27:57-07:00",
	"paths./groups/{GROUP_ID}.put.responses.200.examples.application/json.id": "119720",
	"paths./groups/{GROUP_ID}.put.responses.200.examples.application/json.modified_at": "2013-05-16T15:27:57-07:00",
	"paths./groups/{GROUP_ID}.put.responses.200.examples.application/json.name": "framily",
	"paths./groups/{GROUP_ID}.put.responses.200.examples.application/json.type": "group",
	"paths./groups/{GROUP_ID}.put.responses.200.schema.$ref": "#/definitions/Group",
	"paths./groups/{GROUP_ID}.put.responses.default.description": "Update Group error",
	"paths./groups/{GROUP_ID}.put.responses.default.schema.$ref": "#/definitions/Error",
	"paths./groups/{GROUP_ID}.put.summary": "Update Group",
	"paths./groups/{GROUP_ID}.put.tags.length": 1,
	"paths./groups/{GROUP_ID}.put.tags[0]": "Groups",
	"paths./groups/{GROUP_ID}/collaborations.get.description": "Retrieves all of the group collaborations for a given group. Note this is only available to group admins.",
	"paths./groups/{GROUP_ID}/collaborations.get.externalDocs.url": "https://docs.box.com/reference#get-all-collaborations-for-a-group",
	"paths./groups/{GROUP_ID}/collaborations.get.operationId": "getGroupCollaborations",
	"paths./groups/{GROUP_ID}/collaborations.get.parameters.length": 4,
	"paths./groups/{GROUP_ID}/collaborations.get.parameters[0].in": "path",
	"paths./groups/{GROUP_ID}/collaborations.get.parameters[0].name": "GROUP_ID",
	"paths./groups/{GROUP_ID}/collaborations.get.parameters[0].required": true,
	"paths./groups/{GROUP_ID}/collaborations.get.parameters[0].type": "string",
	"paths./groups/{GROUP_ID}/collaborations.get.parameters[1].description": "Attribute(s) to include in the response",
	"paths./groups/{GROUP_ID}/collaborations.get.parameters[1].in": "query",
	"paths./groups/{GROUP_ID}/collaborations.get.parameters[1].name": "fields",
	"paths./groups/{GROUP_ID}/collaborations.get.parameters[1].required": false,
	"paths./groups/{GROUP_ID}/collaborations.get.parameters[1].type": "string",
	"paths./groups/{GROUP_ID}/collaborations.get.parameters[2].description": "The maximum number of items to return in a page. The default is 100 and the max is 1000.",
	"paths./groups/{GROUP_ID}/collaborations.get.parameters[2].format": "int64",
	"paths./groups/{GROUP_ID}/collaborations.get.parameters[2].in": "query",
	"paths./groups/{GROUP_ID}/collaborations.get.parameters[2].name": "limit",
	"paths./groups/{GROUP_ID}/collaborations.get.parameters[2].required": false,
	"paths./groups/{GROUP_ID}/collaborations.get.parameters[2].type": "integer",
	"paths./groups/{GROUP_ID}/collaborations.get.parameters[3].description": "The item at which to begin the response.",
	"paths./groups/{GROUP_ID}/collaborations.get.parameters[3].format": "int64",
	"paths./groups/{GROUP_ID}/collaborations.get.parameters[3].in": "query",
	"paths./groups/{GROUP_ID}/collaborations.get.parameters[3].name": "offset",
	"paths./groups/{GROUP_ID}/collaborations.get.parameters[3].required": false,
	"paths./groups/{GROUP_ID}/collaborations.get.parameters[3].type": "integer",
	"paths./groups/{GROUP_ID}/collaborations.get.responses.200.description": "A collection of collaboration objects will be returned upon success.",
	"paths./groups/{GROUP_ID}/collaborations.get.responses.200.examples.application/json.entries.length": 1,
	"paths./groups/{GROUP_ID}/collaborations.get.responses.200.examples.application/json.entries[0].accessible_by.id": "160018",
	"paths./groups/{GROUP_ID}/collaborations.get.responses.200.examples.application/json.entries[0].accessible_by.name": "Hand of the King inner counsel",
	"paths./groups/{GROUP_ID}/collaborations.get.responses.200.examples.application/json.entries[0].accessible_by.type": "group",
	"paths./groups/{GROUP_ID}/collaborations.get.responses.200.examples.application/json.entries[0].acknowledged_at": "2013-11-14T16:16:20-08:00",
	"paths./groups/{GROUP_ID}/collaborations.get.responses.200.examples.application/json.entries[0].created_at": "2013-11-14T16:16:20-08:00",
	"paths./groups/{GROUP_ID}/collaborations.get.responses.200.examples.application/json.entries[0].created_by.id": "13130406",
	"paths./groups/{GROUP_ID}/collaborations.get.responses.200.examples.application/json.entries[0].created_by.login": "ned@winterfell.com",
	"paths./groups/{GROUP_ID}/collaborations.get.responses.200.examples.application/json.entries[0].created_by.name": "Eddard Stark",
	"paths./groups/{GROUP_ID}/collaborations.get.responses.200.examples.application/json.entries[0].created_by.type": "user",
	"paths./groups/{GROUP_ID}/collaborations.get.responses.200.examples.application/json.entries[0].id": "52123184",
	"paths./groups/{GROUP_ID}/collaborations.get.responses.200.examples.application/json.entries[0].item.etag": "0",
	"paths./groups/{GROUP_ID}/collaborations.get.responses.200.examples.application/json.entries[0].item.id": "541014843",
	"paths./groups/{GROUP_ID}/collaborations.get.responses.200.examples.application/json.entries[0].item.name": "People killed by Ice",
	"paths./groups/{GROUP_ID}/collaborations.get.responses.200.examples.application/json.entries[0].item.sequence_id": "0",
	"paths./groups/{GROUP_ID}/collaborations.get.responses.200.examples.application/json.entries[0].item.type": "folder",
	"paths./groups/{GROUP_ID}/collaborations.get.responses.200.examples.application/json.entries[0].modified_at": "2013-11-14T16:16:20-08:00",
	"paths./groups/{GROUP_ID}/collaborations.get.responses.200.examples.application/json.entries[0].role": "viewer",
	"paths./groups/{GROUP_ID}/collaborations.get.responses.200.examples.application/json.entries[0].status": "accepted",
	"paths./groups/{GROUP_ID}/collaborations.get.responses.200.examples.application/json.entries[0].type": "collaboration",
	"paths./groups/{GROUP_ID}/collaborations.get.responses.200.examples.application/json.limit": 100,
	"paths./groups/{GROUP_ID}/collaborations.get.responses.200.examples.application/json.offset": 0,
	"paths./groups/{GROUP_ID}/collaborations.get.responses.200.examples.application/json.total_count": 1,
	"paths./groups/{GROUP_ID}/collaborations.get.responses.200.schema.$ref": "#/definitions/CollaborationList",
	"paths./groups/{GROUP_ID}/collaborations.get.responses.default.description": "Get Group collaborations error",
	"paths./groups/{GROUP_ID}/collaborations.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./groups/{GROUP_ID}/collaborations.get.summary": "Get Collaborations for Group",
	"paths./groups/{GROUP_ID}/collaborations.get.tags.length": 1,
	"paths./groups/{GROUP_ID}/collaborations.get.tags[0]": "Groups",
	"paths./groups/{GROUP_ID}/memberships.get.description": "Retrieves all of the members for a given group if the requesting user has access (see Group Object member_viewability_level).",
	"paths./groups/{GROUP_ID}/memberships.get.externalDocs.url": "https://docs.box.com/reference#get-the-membership-list-for-a-group",
	"paths./groups/{GROUP_ID}/memberships.get.operationId": "getGroupMemberships",
	"paths./groups/{GROUP_ID}/memberships.get.parameters.length": 4,
	"paths./groups/{GROUP_ID}/memberships.get.parameters[0].in": "path",
	"paths./groups/{GROUP_ID}/memberships.get.parameters[0].name": "GROUP_ID",
	"paths./groups/{GROUP_ID}/memberships.get.parameters[0].required": true,
	"paths./groups/{GROUP_ID}/memberships.get.parameters[0].type": "string",
	"paths./groups/{GROUP_ID}/memberships.get.parameters[1].description": "Attribute(s) to include in the response",
	"paths./groups/{GROUP_ID}/memberships.get.parameters[1].in": "query",
	"paths./groups/{GROUP_ID}/memberships.get.parameters[1].name": "fields",
	"paths./groups/{GROUP_ID}/memberships.get.parameters[1].required": false,
	"paths./groups/{GROUP_ID}/memberships.get.parameters[1].type": "string",
	"paths./groups/{GROUP_ID}/memberships.get.parameters[2].description": "The maximum number of items to return in a page. The default is 100 and the max is 1000.",
	"paths./groups/{GROUP_ID}/memberships.get.parameters[2].format": "int64",
	"paths./groups/{GROUP_ID}/memberships.get.parameters[2].in": "query",
	"paths./groups/{GROUP_ID}/memberships.get.parameters[2].name": "limit",
	"paths./groups/{GROUP_ID}/memberships.get.parameters[2].required": false,
	"paths./groups/{GROUP_ID}/memberships.get.parameters[2].type": "integer",
	"paths./groups/{GROUP_ID}/memberships.get.parameters[3].description": "The item at which to begin the response.",
	"paths./groups/{GROUP_ID}/memberships.get.parameters[3].format": "int64",
	"paths./groups/{GROUP_ID}/memberships.get.parameters[3].in": "query",
	"paths./groups/{GROUP_ID}/memberships.get.parameters[3].name": "offset",
	"paths./groups/{GROUP_ID}/memberships.get.parameters[3].required": false,
	"paths./groups/{GROUP_ID}/memberships.get.parameters[3].type": "integer",
	"paths./groups/{GROUP_ID}/memberships.get.responses.200.description": "A collection of group membership objects will be returned upon success.",
	"paths./groups/{GROUP_ID}/memberships.get.responses.200.examples.application/json.entries.length": 2,
	"paths./groups/{GROUP_ID}/memberships.get.responses.200.examples.application/json.entries[0].group.id": "119720",
	"paths./groups/{GROUP_ID}/memberships.get.responses.200.examples.application/json.entries[0].group.name": "family",
	"paths./groups/{GROUP_ID}/memberships.get.responses.200.examples.application/json.entries[0].group.type": "group",
	"paths./groups/{GROUP_ID}/memberships.get.responses.200.examples.application/json.entries[0].id": "1560354",
	"paths./groups/{GROUP_ID}/memberships.get.responses.200.examples.application/json.entries[0].role": "member",
	"paths./groups/{GROUP_ID}/memberships.get.responses.200.examples.application/json.entries[0].type": "group_membership",
	"paths./groups/{GROUP_ID}/memberships.get.responses.200.examples.application/json.entries[0].user.id": "13130906",
	"paths./groups/{GROUP_ID}/memberships.get.responses.200.examples.application/json.entries[0].user.login": "alice@gmail.com",
	"paths./groups/{GROUP_ID}/memberships.get.responses.200.examples.application/json.entries[0].user.name": "Alice",
	"paths./groups/{GROUP_ID}/memberships.get.responses.200.examples.application/json.entries[0].user.type": "user",
	"paths./groups/{GROUP_ID}/memberships.get.responses.200.examples.application/json.entries[1].group.id": "119720",
	"paths./groups/{GROUP_ID}/memberships.get.responses.200.examples.application/json.entries[1].group.name": "family",
	"paths./groups/{GROUP_ID}/memberships.get.responses.200.examples.application/json.entries[1].group.type": "group",
	"paths./groups/{GROUP_ID}/memberships.get.responses.200.examples.application/json.entries[1].id": "1560356",
	"paths./groups/{GROUP_ID}/memberships.get.responses.200.examples.application/json.entries[1].role": "member",
	"paths./groups/{GROUP_ID}/memberships.get.responses.200.examples.application/json.entries[1].type": "group_membership",
	"paths./groups/{GROUP_ID}/memberships.get.responses.200.examples.application/json.entries[1].user.id": "192633962",
	"paths./groups/{GROUP_ID}/memberships.get.responses.200.examples.application/json.entries[1].user.login": "rabbit@gmail.com",
	"paths./groups/{GROUP_ID}/memberships.get.responses.200.examples.application/json.entries[1].user.name": "rabbit",
	"paths./groups/{GROUP_ID}/memberships.get.responses.200.examples.application/json.entries[1].user.type": "user",
	"paths./groups/{GROUP_ID}/memberships.get.responses.200.examples.application/json.limit": 100,
	"paths./groups/{GROUP_ID}/memberships.get.responses.200.examples.application/json.offset": 0,
	"paths./groups/{GROUP_ID}/memberships.get.responses.200.examples.application/json.total_count": 2,
	"paths./groups/{GROUP_ID}/memberships.get.responses.200.schema.$ref": "#/definitions/GroupMembershipList",
	"paths./groups/{GROUP_ID}/memberships.get.responses.default.description": "Group Group membership error",
	"paths./groups/{GROUP_ID}/memberships.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./groups/{GROUP_ID}/memberships.get.summary": "Get Memberships for Group",
	"paths./groups/{GROUP_ID}/memberships.get.tags.length": 1,
	"paths./groups/{GROUP_ID}/memberships.get.tags[0]": "Groups",
	"paths./invites.post.description": "Invites an existing user to join an Enterprise. The existing user can not be part of another Enterprise and must already have a Box account. Once invited, the user will receive an email and prompt to accept the invitation within the Box web application. This method requires the \"Manage An Enterprise\" scope for the enterprise, which can be enabled within your developer console.",
	"paths./invites.post.externalDocs.url": "https://docs.box.com/reference#invite-existing-user-to-join-enterprise",
	"paths./invites.post.operationId": "createInvite",
	"paths./invites.post.parameters.length": 2,
	"paths./invites.post.parameters[0].description": "Attribute(s) to include in the response",
	"paths./invites.post.parameters[0].in": "query",
	"paths./invites.post.parameters[0].name": "fields",
	"paths./invites.post.parameters[0].required": false,
	"paths./invites.post.parameters[0].type": "string",
	"paths./invites.post.parameters[1].in": "body",
	"paths./invites.post.parameters[1].name": "body",
	"paths./invites.post.parameters[1].required": true,
	"paths./invites.post.parameters[1].schema.$ref": "#/definitions/InviteUser",
	"paths./invites.post.responses.200.description": "A new invite object will be returned if successful. The status of the invite can also be queried by retrieving the invite object. This can be done by making a GET request to /invites/{invite_id}.",
	"paths./invites.post.responses.200.examples.application/json.actionable_by.id": "229667663",
	"paths./invites.post.responses.200.examples.application/json.actionable_by.login": "freeuser@box.com",
	"paths./invites.post.responses.200.examples.application/json.actionable_by.name": "Lleyton Hewitt",
	"paths./invites.post.responses.200.examples.application/json.actionable_by.type": "user",
	"paths./invites.post.responses.200.examples.application/json.created_at": "2014-12-23T12:55:53-08:00",
	"paths./invites.post.responses.200.examples.application/json.id": "238632",
	"paths./invites.post.responses.200.examples.application/json.invited_by.id": "10523870",
	"paths./invites.post.responses.200.examples.application/json.invited_by.login": "ted@box.com",
	"paths./invites.post.responses.200.examples.application/json.invited_by.name": "Ted Blosser",
	"paths./invites.post.responses.200.examples.application/json.invited_by.type": "user",
	"paths./invites.post.responses.200.examples.application/json.invited_to.id": "42500",
	"paths./invites.post.responses.200.examples.application/json.invited_to.name": "Blosser Account",
	"paths./invites.post.responses.200.examples.application/json.invited_to.type": "enterprise",
	"paths./invites.post.responses.200.examples.application/json.modified_at": "2014-12-23T12:55:53-08:00",
	"paths./invites.post.responses.200.examples.application/json.status": "pending",
	"paths./invites.post.responses.200.examples.application/json.type": "invite",
	"paths./invites.post.responses.200.schema.$ref": "#/definitions/Invite",
	"paths./invites.post.responses.default.description": "Create Web link error",
	"paths./invites.post.responses.default.schema.$ref": "#/definitions/Error",
	"paths./invites.post.summary": "Invite User",
	"paths./invites.post.tags.length": 1,
	"paths./invites.post.tags[0]": "Users",
	"paths./invites/{INVITE_ID}.get.operationId": "getInvite",
	"paths./invites/{INVITE_ID}.get.parameters.length": 2,
	"paths./invites/{INVITE_ID}.get.parameters[0].in": "path",
	"paths./invites/{INVITE_ID}.get.parameters[0].name": "INVITE_ID",
	"paths./invites/{INVITE_ID}.get.parameters[0].required": true,
	"paths./invites/{INVITE_ID}.get.parameters[0].type": "string",
	"paths./invites/{INVITE_ID}.get.parameters[1].description": "Attribute(s) to include in the response",
	"paths./invites/{INVITE_ID}.get.parameters[1].in": "query",
	"paths./invites/{INVITE_ID}.get.parameters[1].name": "fields",
	"paths./invites/{INVITE_ID}.get.parameters[1].required": false,
	"paths./invites/{INVITE_ID}.get.parameters[1].type": "string",
	"paths./invites/{INVITE_ID}.get.responses.200.description": "Status of the invite is returned",
	"paths./invites/{INVITE_ID}.get.responses.200.schema.$ref": "#/definitions/Invite",
	"paths./invites/{INVITE_ID}.get.responses.default.description": "Get invite error",
	"paths./invites/{INVITE_ID}.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./invites/{INVITE_ID}.get.summary": "Get status of the invite",
	"paths./invites/{INVITE_ID}.get.tags.length": 1,
	"paths./invites/{INVITE_ID}.get.tags[0]": "Users",
	"paths./legal_hold_policies.get.description": "Get a list of Legal Hold Policies that belong to your Enterprise.",
	"paths./legal_hold_policies.get.externalDocs.url": "https://docs.box.com/reference#list-of-legal-hold-policies",
	"paths./legal_hold_policies.get.operationId": "getLegalHoldPolicies",
	"paths./legal_hold_policies.get.parameters.length": 3,
	"paths./legal_hold_policies.get.parameters[0].description": "Case insensitive prefix-match filter on Policy name.",
	"paths./legal_hold_policies.get.parameters[0].in": "query",
	"paths./legal_hold_policies.get.parameters[0].name": "policy_name",
	"paths./legal_hold_policies.get.parameters[0].required": false,
	"paths./legal_hold_policies.get.parameters[0].type": "string",
	"paths./legal_hold_policies.get.parameters[1].description": "Limit result size to this number. Defaults to 100, maximum is 1,000.",
	"paths./legal_hold_policies.get.parameters[1].format": "int32",
	"paths./legal_hold_policies.get.parameters[1].in": "query",
	"paths./legal_hold_policies.get.parameters[1].name": "limit",
	"paths./legal_hold_policies.get.parameters[1].required": false,
	"paths./legal_hold_policies.get.parameters[1].type": "integer",
	"paths./legal_hold_policies.get.parameters[2].description": "Take from next_marker column of a prior call to get the next page",
	"paths./legal_hold_policies.get.parameters[2].in": "query",
	"paths./legal_hold_policies.get.parameters[2].name": "marker",
	"paths./legal_hold_policies.get.parameters[2].required": false,
	"paths./legal_hold_policies.get.parameters[2].type": "string",
	"paths./legal_hold_policies.get.responses.200.description": "Returns the list of Legal Hold Policies in your Enterprise that match the filter parameters. By default, will only return only 'type', 'id', and 'policy_name', but you can specify more by using the 'fields' parameter.",
	"paths./legal_hold_policies.get.responses.200.schema.$ref": "#/definitions/LegalHoldPolicyList",
	"paths./legal_hold_policies.get.responses.default.description": "Get Legal Hold policies error",
	"paths./legal_hold_policies.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./legal_hold_policies.get.summary": "Get Legal Hold Policies",
	"paths./legal_hold_policies.get.tags.length": 1,
	"paths./legal_hold_policies.get.tags[0]": "Legal Hold Policies",
	"paths./legal_hold_policies.post.description": "Create a new Legal Hold Policy. Optional date filter may be passed. If Policy has a date filter, any Custodian assignments will apply only to file versions created or uploaded inside of the date range.",
	"paths./legal_hold_policies.post.externalDocs.url": "https://docs.box.com/reference#create-new-legal-hold-policy",
	"paths./legal_hold_policies.post.operationId": "createLegalHoldPolicy",
	"paths./legal_hold_policies.post.parameters.length": 1,
	"paths./legal_hold_policies.post.parameters[0].in": "body",
	"paths./legal_hold_policies.post.parameters[0].name": "body",
	"paths./legal_hold_policies.post.parameters[0].required": true,
	"paths./legal_hold_policies.post.parameters[0].schema.$ref": "#/definitions/LegalHoldPolicy",
	"paths./legal_hold_policies.post.responses.201.description": "A new retention policy object will be returned upon success.",
	"paths./legal_hold_policies.post.responses.201.schema.$ref": "#/definitions/LegalHoldPolicy",
	"paths./legal_hold_policies.post.responses.409.description": "If the Policy Name is in use for your enterprise, will return a 409.",
	"paths./legal_hold_policies.post.responses.409.schema.$ref": "#/definitions/Error",
	"paths./legal_hold_policies.post.responses.default.description": "Create Legal hold policy error",
	"paths./legal_hold_policies.post.responses.default.schema.$ref": "#/definitions/Error",
	"paths./legal_hold_policies.post.summary": "Create New Legal Hold Policy",
	"paths./legal_hold_policies.post.tags.length": 1,
	"paths./legal_hold_policies.post.tags[0]": "Legal Hold Policies",
	"paths./legal_hold_policies/{ID}.delete.description": "Sends request to delete an existing Legal Hold Policy. Note that this is an asynchronous process - the Policy will not be fully deleted yet when the response comes back.",
	"paths./legal_hold_policies/{ID}.delete.externalDocs.url": "https://docs.box.com/reference#delete-legal-hold-policy",
	"paths./legal_hold_policies/{ID}.delete.operationId": "deleteLegalHoldPolicy",
	"paths./legal_hold_policies/{ID}.delete.parameters.length": 1,
	"paths./legal_hold_policies/{ID}.delete.parameters[0].in": "path",
	"paths./legal_hold_policies/{ID}.delete.parameters[0].name": "ID",
	"paths./legal_hold_policies/{ID}.delete.parameters[0].required": true,
	"paths./legal_hold_policies/{ID}.delete.parameters[0].type": "string",
	"paths./legal_hold_policies/{ID}.delete.responses.202.description": "Returns a 202 if the request to delete the Policy was accepted.",
	"paths./legal_hold_policies/{ID}.delete.responses.default.description": "Delete Legal Hold policy error",
	"paths./legal_hold_policies/{ID}.delete.responses.default.schema.$ref": "#/definitions/Error",
	"paths./legal_hold_policies/{ID}.delete.summary": "Delete Legal Hold Policy",
	"paths./legal_hold_policies/{ID}.delete.tags.length": 1,
	"paths./legal_hold_policies/{ID}.delete.tags[0]": "Legal Hold Policies",
	"paths./legal_hold_policies/{ID}.get.description": "Get details of a single Legal Hold Policy",
	"paths./legal_hold_policies/{ID}.get.externalDocs.url": "https://docs.box.com/reference#legal-hold-policy",
	"paths./legal_hold_policies/{ID}.get.operationId": "getLegalHoldPolicy",
	"paths./legal_hold_policies/{ID}.get.parameters.length": 1,
	"paths./legal_hold_policies/{ID}.get.parameters[0].in": "path",
	"paths./legal_hold_policies/{ID}.get.parameters[0].name": "ID",
	"paths./legal_hold_policies/{ID}.get.parameters[0].required": true,
	"paths./legal_hold_policies/{ID}.get.parameters[0].type": "string",
	"paths./legal_hold_policies/{ID}.get.responses.200.description": "If the ID is valid, information about the Legal Hold Policy is returned with a 200",
	"paths./legal_hold_policies/{ID}.get.responses.200.schema.$ref": "#/definitions/LegalHoldPolicy",
	"paths./legal_hold_policies/{ID}.get.responses.404.description": "If the ID is for a non-existent Legal Hold Policy, a 404 is returned.",
	"paths./legal_hold_policies/{ID}.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./legal_hold_policies/{ID}.get.responses.default.description": "Get Legal Hold policy error",
	"paths./legal_hold_policies/{ID}.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./legal_hold_policies/{ID}.get.summary": "Get Legal Hold Policy",
	"paths./legal_hold_policies/{ID}.get.tags.length": 1,
	"paths./legal_hold_policies/{ID}.get.tags[0]": "Legal Hold Policies",
	"paths./legal_hold_policies/{ID}.put.description": "Update existing Legal Hold Policy. Only name and description can be modified.",
	"paths./legal_hold_policies/{ID}.put.externalDocs.url": "https://docs.box.com/reference#update-existing-legal-hold-policy",
	"paths./legal_hold_policies/{ID}.put.operationId": "updateLegalHoldPolicy",
	"paths./legal_hold_policies/{ID}.put.parameters.length": 2,
	"paths./legal_hold_policies/{ID}.put.parameters[0].in": "path",
	"paths./legal_hold_policies/{ID}.put.parameters[0].name": "ID",
	"paths./legal_hold_policies/{ID}.put.parameters[0].required": true,
	"paths./legal_hold_policies/{ID}.put.parameters[0].type": "string",
	"paths./legal_hold_policies/{ID}.put.parameters[1].in": "body",
	"paths./legal_hold_policies/{ID}.put.parameters[1].name": "body",
	"paths./legal_hold_policies/{ID}.put.parameters[1].required": true,
	"paths./legal_hold_policies/{ID}.put.parameters[1].schema.$ref": "#/definitions/LegalHoldPolicy",
	"paths./legal_hold_policies/{ID}.put.responses.201.description": "Returns information about the Legal Hold Policy updated.",
	"paths./legal_hold_policies/{ID}.put.responses.201.schema.$ref": "#/definitions/LegalHoldPolicy",
	"paths./legal_hold_policies/{ID}.put.responses.default.description": "Update Legal hold policy error",
	"paths./legal_hold_policies/{ID}.put.responses.default.schema.$ref": "#/definitions/Error",
	"paths./legal_hold_policies/{ID}.put.summary": "Update Existing Legal Hold Policy",
	"paths./legal_hold_policies/{ID}.put.tags.length": 1,
	"paths./legal_hold_policies/{ID}.put.tags[0]": "Legal Hold Policies",
	"paths./legal_hold_policies/{ID}/assignments.get.description": "Get list of assignments for a single Policy.",
	"paths./legal_hold_policies/{ID}/assignments.get.externalDocs.url": "https://docs.box.com/reference#get-list-of-assignments",
	"paths./legal_hold_policies/{ID}/assignments.get.operationId": "getLegalHoldPolicyAssignments",
	"paths./legal_hold_policies/{ID}/assignments.get.parameters.length": 1,
	"paths./legal_hold_policies/{ID}/assignments.get.parameters[0].in": "path",
	"paths./legal_hold_policies/{ID}/assignments.get.parameters[0].name": "ID",
	"paths./legal_hold_policies/{ID}/assignments.get.parameters[0].required": true,
	"paths./legal_hold_policies/{ID}/assignments.get.parameters[0].type": "string",
	"paths./legal_hold_policies/{ID}/assignments.get.responses.200.description": "Returns the list of Assignments for the passed in Policy, as well as any optional filter parameters passed in. By default, will only return only type, and id, but you can specify more by using the fields parameter.",
	"paths./legal_hold_policies/{ID}/assignments.get.responses.200.schema.$ref": "#/definitions/LegalHoldPolicyAssignmentList",
	"paths./legal_hold_policies/{ID}/assignments.get.responses.default.description": "Get Legal Hold policy assignments error",
	"paths./legal_hold_policies/{ID}/assignments.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./legal_hold_policies/{ID}/assignments.get.summary": "Get Legal hold policy assignments",
	"paths./legal_hold_policies/{ID}/assignments.get.tags.length": 1,
	"paths./legal_hold_policies/{ID}/assignments.get.tags[0]": "Legal Hold Policies",
	"paths./legal_hold_policy_assignments.post.description": "Create a new Assignment, which will apply the Legal Hold Policy to the target of the Assignment.",
	"paths./legal_hold_policy_assignments.post.externalDocs.url": "https://docs.box.com/reference#create-new-assignment",
	"paths./legal_hold_policy_assignments.post.operationId": "createLegalHoldPolicyAssignment",
	"paths./legal_hold_policy_assignments.post.parameters.length": 1,
	"paths./legal_hold_policy_assignments.post.parameters[0].in": "body",
	"paths./legal_hold_policy_assignments.post.parameters[0].name": "body",
	"paths./legal_hold_policy_assignments.post.parameters[0].required": true,
	"paths./legal_hold_policy_assignments.post.parameters[0].schema.$ref": "#/definitions/CreateLegalHoldPolicyAssignment",
	"paths./legal_hold_policy_assignments.post.responses.201.description": "For a successful request, returns a 200 with information about the Assignment created.",
	"paths./legal_hold_policy_assignments.post.responses.201.schema.$ref": "#/definitions/LegalHoldPolicyAssignment",
	"paths./legal_hold_policy_assignments.post.responses.404.description": "If the policy or assign-to target cannot be found, a 404 will be returned.",
	"paths./legal_hold_policy_assignments.post.responses.404.schema.$ref": "#/definitions/Error",
	"paths./legal_hold_policy_assignments.post.responses.default.description": "Create Legal hold policy assignment error",
	"paths./legal_hold_policy_assignments.post.responses.default.schema.$ref": "#/definitions/Error",
	"paths./legal_hold_policy_assignments.post.summary": "Create New Legal Hold Policy Assignment",
	"paths./legal_hold_policy_assignments.post.tags.length": 1,
	"paths./legal_hold_policy_assignments.post.tags[0]": "Legal Hold Policies",
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.delete.description": "Sends request to delete an existing Assignment. Note that this is an asynchronous process - the Assignment will not be fully deleted yet when the response comes back.",
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.delete.externalDocs.url": "https://docs.box.com/reference#delete-assignment",
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.delete.operationId": "deleteLegalHoldPolicyAssignment",
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.delete.parameters.length": 1,
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.delete.parameters[0].in": "path",
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.delete.parameters[0].name": "ASSIGNMENT_ID",
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.delete.parameters[0].required": true,
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.delete.parameters[0].type": "string",
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.delete.responses.204.description": "A successful request returns 204 No Content.",
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.delete.responses.409.description": "If the Assignment is still initializing, will return a 409.",
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.delete.responses.409.schema.$ref": "#/definitions/Error",
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.delete.responses.default.description": "Delete Legal Hold policy error",
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.delete.responses.default.schema.$ref": "#/definitions/Error",
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.delete.summary": "Delete Legal Hold Policy Assignment",
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.delete.tags.length": 1,
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.delete.tags[0]": "Legal Hold Policies",
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.get.description": "Get details of a single assignment.",
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.get.externalDocs.url": "https://docs.box.com/reference#get-legal-hold-policy-1",
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.get.operationId": "getLegalHoldPolicyAssignment",
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.get.parameters.length": 1,
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.get.parameters[0].in": "path",
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.get.parameters[0].name": "ASSIGNMENT_ID",
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.get.parameters[0].required": true,
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.get.parameters[0].type": "string",
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.get.responses.200.description": "If the ID is valid, information about the Assignment is returned with a 200.",
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.get.responses.404.description": "If the ID is for a non-existent Assignment, a 404 is returned.",
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.get.responses.default.description": "Delete Legal Hold policy Assignment error",
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.get.summary": "Get Legal Hold Policy Assignment",
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.get.tags.length": 1,
	"paths./legal_hold_policy_assignments/{ASSIGNMENT_ID}.get.tags[0]": "Legal Hold Policies",
	"paths./metadata_templates/schema.post.description": "Used to create a new metadata template with the specified schema.",
	"paths./metadata_templates/schema.post.externalDocs.url": "https://docs.box.com/reference#create-metadata-schema",
	"paths./metadata_templates/schema.post.operationId": "createMetadataTemplate",
	"paths./metadata_templates/schema.post.parameters.length": 1,
	"paths./metadata_templates/schema.post.parameters[0].in": "body",
	"paths./metadata_templates/schema.post.parameters[0].name": "body",
	"paths./metadata_templates/schema.post.parameters[0].required": true,
	"paths./metadata_templates/schema.post.parameters[0].schema.$ref": "#/definitions/MetadataTemplate",
	"paths./metadata_templates/schema.post.responses.201.description": "The schema representing the metadata template created.",
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.displayName": "Customer",
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields.length": 5,
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields[0].displayName": "Customer team",
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields[0].hidden": false,
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields[0].key": "customerTeam",
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields[0].type": "string",
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields[1].displayName": "Category",
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields[1].hidden": false,
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields[1].key": "category",
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields[1].type": "string",
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields[2].displayName": "Brand",
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields[2].hidden": false,
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields[2].key": "brand",
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields[2].type": "string",
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields[3].displayName": "FY",
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields[3].hidden": false,
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields[3].key": "fy",
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields[3].options.length": 5,
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields[3].options[0].key": "FY11",
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields[3].options[1].key": "FY12",
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields[3].options[2].key": "FY13",
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields[3].options[3].key": "FY14",
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields[3].options[4].key": "FY15",
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields[3].type": "enum",
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields[4].displayName": "Qtr",
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields[4].hidden": false,
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields[4].key": "qtr",
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields[4].options.length": 4,
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields[4].options[0].key": "First",
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields[4].options[1].key": "Second",
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields[4].options[2].key": "Third",
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields[4].options[3].key": "Fourth",
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.fields[4].type": "enum",
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.scope": "enterprise_490685",
	"paths./metadata_templates/schema.post.responses.201.examples.application/json.templateKey": "customer",
	"paths./metadata_templates/schema.post.responses.201.schema.$ref": "#/definitions/MetadataTemplate",
	"paths./metadata_templates/schema.post.responses.400.description": "Request body contains invalid metadata schema.",
	"paths./metadata_templates/schema.post.responses.400.examples.application/json.code": "bad_request",
	"paths./metadata_templates/schema.post.responses.400.examples.application/json.help_url": "http://developers.box.com/docs/#errors",
	"paths./metadata_templates/schema.post.responses.400.examples.application/json.message": "\"displayName\" is required and not set",
	"paths./metadata_templates/schema.post.responses.400.examples.application/json.request_id": "616776114571858dc4ab8f",
	"paths./metadata_templates/schema.post.responses.400.examples.application/json.status": 400,
	"paths./metadata_templates/schema.post.responses.400.examples.application/json.type": "error",
	"paths./metadata_templates/schema.post.responses.400.schema.$ref": "#/definitions/Error",
	"paths./metadata_templates/schema.post.responses.403.description": "Request body contains a scope that the user is not allowed to create a template for.",
	"paths./metadata_templates/schema.post.responses.403.examples.application/json.code": "forbidden",
	"paths./metadata_templates/schema.post.responses.403.examples.application/json.help_url": "http://developers.box.com/docs/#errors",
	"paths./metadata_templates/schema.post.responses.403.examples.application/json.message": "Forbidden",
	"paths./metadata_templates/schema.post.responses.403.examples.application/json.request_id": "616776114571858dc4ab8f",
	"paths./metadata_templates/schema.post.responses.403.examples.application/json.status": 403,
	"paths./metadata_templates/schema.post.responses.403.examples.application/json.type": "error",
	"paths./metadata_templates/schema.post.responses.403.schema.$ref": "#/definitions/Error",
	"paths./metadata_templates/schema.post.responses.default.description": "Create Metadata template error",
	"paths./metadata_templates/schema.post.responses.default.schema.$ref": "#/definitions/Error",
	"paths./metadata_templates/schema.post.summary": "Create Metadata Template",
	"paths./metadata_templates/schema.post.tags.length": 1,
	"paths./metadata_templates/schema.post.tags[0]": "Metadata",
	"paths./metadata_templates/{SCOPE}.get.description": "Used to retrieve all metadata templates within a user's enterprise. Currently only the enterprise scope is supported.",
	"paths./metadata_templates/{SCOPE}.get.externalDocs.url": "https://docs.box.com/reference#get-enterprise-templates",
	"paths./metadata_templates/{SCOPE}.get.operationId": "getEnterpriseMetadataTemplates",
	"paths./metadata_templates/{SCOPE}.get.parameters.length": 1,
	"paths./metadata_templates/{SCOPE}.get.parameters[0].in": "path",
	"paths./metadata_templates/{SCOPE}.get.parameters[0].name": "SCOPE",
	"paths./metadata_templates/{SCOPE}.get.parameters[0].required": true,
	"paths./metadata_templates/{SCOPE}.get.parameters[0].type": "string",
	"paths./metadata_templates/{SCOPE}.get.responses.200.description": "All the templates within an enterprise and their corresponding schema",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries.length": 3,
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[0].displayName": "Document Flow",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[0].fields.length": 4,
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[0].fields[0].description": "What stage in the process the document is in",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[0].fields[0].displayName": "Current Document Stage",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[0].fields[0].hidden": false,
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[0].fields[0].key": "currentDocumentStage",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[0].fields[0].type": "string",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[0].fields[1].displayName": "Needs Approval From",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[0].fields[1].hidden": false,
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[0].fields[1].key": "needsApprovalFrom",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[0].fields[1].type": "string",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[0].fields[2].description": "Next document stage after approval is given",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[0].fields[2].displayName": "Next Document Stage",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[0].fields[2].hidden": false,
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[0].fields[2].key": "nextDocumentStage",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[0].fields[2].type": "string",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[0].fields[3].description": "Maximum number of days that the document is allowed to be in this stage.",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[0].fields[3].displayName": "Maximum Days Allowed In Current Stage",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[0].fields[3].hidden": false,
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[0].fields[3].key": "maximumDaysAllowedInCurrentStage",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[0].fields[3].type": "float",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[0].hidden": false,
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[0].scope": "enterprise_12345",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[0].templateKey": "documentFlow",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].displayName": "Marketing Collateral",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields.length": 8,
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[0].displayName": "Audience",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[0].hidden": false,
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[0].key": "audience1",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[0].type": "string",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[1].displayName": "Document Type",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[1].hidden": false,
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[1].key": "documentType",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[1].type": "string",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[2].displayName": "Competitive Document",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[2].hidden": false,
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[2].key": "competitiveDocument",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[2].type": "string",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[3].displayName": "Status",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[3].hidden": false,
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[3].key": "status",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[3].type": "string",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[4].displayName": "Author",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[4].hidden": false,
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[4].key": "author",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[4].type": "string",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[5].displayName": "Editor",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[5].hidden": false,
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[5].key": "editor",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[5].type": "string",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[6].displayName": "Current State",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[6].hidden": false,
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[6].key": "currentState",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[6].type": "string",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[7].displayName": "Previous State",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[7].hidden": false,
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[7].key": "previousState",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].fields[7].type": "string",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].hidden": false,
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].scope": "enterprise_12345",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[1].templateKey": "marketingCollateral",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[2].displayName": "Product Info",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[2].fields.length": 4,
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[2].fields[0].displayName": "SKU Number",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[2].fields[0].hidden": false,
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[2].fields[0].key": "skuNumber",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[2].fields[0].type": "float",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[2].fields[1].displayName": "Description",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[2].fields[1].hidden": false,
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[2].fields[1].key": "description",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[2].fields[1].type": "string",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[2].fields[2].displayName": "Department",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[2].fields[2].hidden": false,
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[2].fields[2].key": "department",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[2].fields[2].options.length": 7,
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[2].fields[2].options[0].key": "Beauty",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[2].fields[2].options[1].key": "Shoes",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[2].fields[2].options[2].key": "Accessories",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[2].fields[2].options[3].key": "Clothing",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[2].fields[2].options[4].key": "Handbags",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[2].fields[2].options[5].key": "Bedding",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[2].fields[2].options[6].key": "Watches",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[2].fields[2].type": "enum",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[2].fields[3].displayName": "Display Date",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[2].fields[3].hidden": false,
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[2].fields[3].key": "displayDate",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[2].fields[3].type": "date",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[2].hidden": false,
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[2].scope": "enterprise_12345",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.entries[2].templateKey": "productInfo",
	"paths./metadata_templates/{SCOPE}.get.responses.200.examples.application/json.limit": 100,
	"paths./metadata_templates/{SCOPE}.get.responses.200.schema.$ref": "#/definitions/MetadataTemplateList",
	"paths./metadata_templates/{SCOPE}.get.responses.default.description": "Get Metadata Template error",
	"paths./metadata_templates/{SCOPE}.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./metadata_templates/{SCOPE}.get.summary": "Get Enterprise Metadata",
	"paths./metadata_templates/{SCOPE}.get.tags.length": 1,
	"paths./metadata_templates/{SCOPE}.get.tags[0]": "Metadata",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.description": "Used to retrieve the schema for a given metadata template.",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.externalDocs.url": "https://docs.box.com/reference#get-metadata-schema",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.operationId": "getMetadataTemplate",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.parameters.length": 2,
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.parameters[0].in": "path",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.parameters[0].name": "SCOPE",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.parameters[0].required": true,
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.parameters[0].type": "string",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.parameters[1].in": "path",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.parameters[1].name": "TEMPLATE",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.parameters[1].required": true,
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.parameters[1].type": "string",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.200.description": "The schema representing the metadata template queried",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.200.examples.application/json.displayName": "Product Info",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.200.examples.application/json.fields.length": 4,
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.200.examples.application/json.fields[0].displayName": "SKU Number",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.200.examples.application/json.fields[0].hidden": false,
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.200.examples.application/json.fields[0].key": "skuNumber",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.200.examples.application/json.fields[0].type": "float",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.200.examples.application/json.fields[1].displayName": "Description",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.200.examples.application/json.fields[1].hidden": false,
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.200.examples.application/json.fields[1].key": "description",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.200.examples.application/json.fields[1].type": "string",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.200.examples.application/json.fields[2].displayName": "Department",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.200.examples.application/json.fields[2].hidden": false,
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.200.examples.application/json.fields[2].key": "department",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.200.examples.application/json.fields[2].options.length": 7,
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.200.examples.application/json.fields[2].options[0].key": "Beauty",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.200.examples.application/json.fields[2].options[1].key": "Shoes",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.200.examples.application/json.fields[2].options[2].key": "Accessories",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.200.examples.application/json.fields[2].options[3].key": "Clothing",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.200.examples.application/json.fields[2].options[4].key": "Handbags",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.200.examples.application/json.fields[2].options[5].key": "Bedding",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.200.examples.application/json.fields[2].options[6].key": "Watches",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.200.examples.application/json.fields[2].type": "enum",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.200.examples.application/json.fields[3].displayName": "Display Date",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.200.examples.application/json.fields[3].hidden": false,
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.200.examples.application/json.fields[3].key": "displayDate",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.200.examples.application/json.fields[3].type": "date",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.200.examples.application/json.hidden": false,
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.200.examples.application/json.scope": "enterprise_12345",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.200.examples.application/json.templateKey": "productInfo",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.200.schema.$ref": "#/definitions/MetadataTemplate",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.default.description": "Get Metadata Template error",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.summary": "Get Metadata Template",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.tags.length": 1,
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.get.tags[0]": "Metadata",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.description": "Used to update the schema of an existing template.",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.externalDocs.url": "https://docs.box.com/reference#update-metadata-schema",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.operationId": "updateMetadataTemplate",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.parameters.length": 3,
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.parameters[0].in": "path",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.parameters[0].name": "SCOPE",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.parameters[0].required": true,
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.parameters[0].type": "string",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.parameters[1].in": "path",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.parameters[1].name": "TEMPLATE",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.parameters[1].required": true,
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.parameters[1].type": "string",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.parameters[2].in": "body",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.parameters[2].name": "body",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.parameters[2].required": true,
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.parameters[2].schema.$ref": "#/definitions/UpdateMetadataTemplate",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.description": "The schema representing the updated metadata template.",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.displayName": "Customer",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields.length": 5,
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields[0].displayName": "Customer team",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields[0].hidden": false,
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields[0].key": "customerTeam",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields[0].type": "string",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields[1].displayName": "Customer Group",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields[1].hidden": false,
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields[1].key": "category",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields[1].type": "string",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields[2].displayName": "Brand",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields[2].hidden": false,
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields[2].key": "brand",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields[2].type": "string",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields[3].displayName": "FY",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields[3].hidden": false,
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields[3].key": "fy",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields[3].options.length": 5,
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields[3].options[0].key": "FY11",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields[3].options[1].key": "FY12",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields[3].options[2].key": "FY13",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields[3].options[3].key": "FY14",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields[3].options[4].key": "FY15",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields[3].type": "enum",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields[4].displayName": "Qtr",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields[4].hidden": false,
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields[4].key": "qtr",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields[4].options.length": 4,
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields[4].options[0].key": "First",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields[4].options[1].key": "Second",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields[4].options[2].key": "Third",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields[4].options[3].key": "Fourth",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.fields[4].type": "enum",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.scope": "enterprise_490685",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.examples.application/json.templateKey": "customer",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.200.schema.$ref": "#/definitions/MetadataTemplate",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.400.description": "Request body contains invalid metadata schema.",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.400.examples.application/json.code": "bad_request",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.400.examples.application/json.help_url": "http://developers.box.com/docs/#errors",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.400.examples.application/json.message": "\"displayName\" is required and not set",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.400.examples.application/json.request_id": "616776114571858dc4ab8f",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.400.examples.application/json.status": 400,
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.400.examples.application/json.type": "error",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.400.schema.$ref": "#/definitions/Error",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.403.description": "Request body contains a scope that the user is not allowed to create templates for.",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.403.examples.application/json.code": "forbidden",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.403.examples.application/json.help_url": "http://developers.box.com/docs/#errors",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.403.examples.application/json.message": "Forbidden",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.403.examples.application/json.request_id": "616776114571858dc4ab8f",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.403.examples.application/json.status": 403,
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.403.examples.application/json.type": "error",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.403.schema.$ref": "#/definitions/Error",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.404.description": "Requested template is not found.",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.404.schema.$ref": "#/definitions/Error",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.default.description": "Patch Metadata template error",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.responses.default.schema.$ref": "#/definitions/Error",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.summary": "Update Metadata Template",
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.tags.length": 1,
	"paths./metadata_templates/{SCOPE}/{TEMPLATE}/schema.put.tags[0]": "Metadata",
	"paths./retention_policies.get.description": "Retrieves all of the retention policies for the given enterprise.",
	"paths./retention_policies.get.externalDocs.url": "https://docs.box.com/reference#get-retention-policies",
	"paths./retention_policies.get.operationId": "getRetentionPolicies",
	"paths./retention_policies.get.parameters.length": 3,
	"paths./retention_policies.get.parameters[0].description": "A name to filter the retention policies by. A trailing partial match search is performed.",
	"paths./retention_policies.get.parameters[0].in": "query",
	"paths./retention_policies.get.parameters[0].name": "policy_name",
	"paths./retention_policies.get.parameters[0].required": false,
	"paths./retention_policies.get.parameters[0].type": "string",
	"paths./retention_policies.get.parameters[1].description": "A policy type to filter the retention policies by.",
	"paths./retention_policies.get.parameters[1].enum.length": 2,
	"paths./retention_policies.get.parameters[1].enum[0]": "finite",
	"paths./retention_policies.get.parameters[1].enum[1]": "indefinite",
	"paths./retention_policies.get.parameters[1].in": "query",
	"paths./retention_policies.get.parameters[1].name": "policy_type",
	"paths./retention_policies.get.parameters[1].required": false,
	"paths./retention_policies.get.parameters[1].type": "string",
	"paths./retention_policies.get.parameters[2].description": "A user id to filter the retention policies by.",
	"paths./retention_policies.get.parameters[2].in": "query",
	"paths./retention_policies.get.parameters[2].name": "created_by_user_id",
	"paths./retention_policies.get.parameters[2].required": false,
	"paths./retention_policies.get.parameters[2].type": "string",
	"paths./retention_policies.get.responses.200.description": "Returns the list of all retention policies for the enterprise. If query parameters are given, only the retention policies that match the query parameters are returned.",
	"paths./retention_policies.get.responses.200.examples.application/json.entries.length": 1,
	"paths./retention_policies.get.responses.200.examples.application/json.entries[0].id": "123456789",
	"paths./retention_policies.get.responses.200.examples.application/json.entries[0].name": "TaxDocuments",
	"paths./retention_policies.get.responses.200.examples.application/json.entries[0].type": "retention_policy",
	"paths./retention_policies.get.responses.200.schema.$ref": "#/definitions/RetentionPolicyList",
	"paths./retention_policies.get.responses.400.description": "If a bad “policy_type” is given, a 400 HTTP status code of bad_request is returned.",
	"paths./retention_policies.get.responses.400.schema.$ref": "#/definitions/Error",
	"paths./retention_policies.get.responses.404.description": "If the user specified in the “created_by_user_id” does not exist, a 404 HTTP status code of not_found is returned.",
	"paths./retention_policies.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./retention_policies.get.responses.default.description": "Get Retention policies error",
	"paths./retention_policies.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./retention_policies.get.summary": "Get Retention Policies",
	"paths./retention_policies.get.tags.length": 1,
	"paths./retention_policies.get.tags[0]": "Retention Policies",
	"paths./retention_policies.post.description": "Used to create a new retention policy.",
	"paths./retention_policies.post.externalDocs.url": "https://docs.box.com/reference#create-retention-policy",
	"paths./retention_policies.post.operationId": "createRetentionPolicy",
	"paths./retention_policies.post.parameters.length": 1,
	"paths./retention_policies.post.parameters[0].in": "body",
	"paths./retention_policies.post.parameters[0].name": "body",
	"paths./retention_policies.post.parameters[0].required": true,
	"paths./retention_policies.post.parameters[0].schema.$ref": "#/definitions/RetentionPolicy",
	"paths./retention_policies.post.responses.201.description": "A new retention policy object will be returned upon success.",
	"paths./retention_policies.post.responses.201.examples.application/json.created_at": "2015-05-01T11:12:54-07:00",
	"paths./retention_policies.post.responses.201.examples.application/json.created_by.id": "11993747",
	"paths./retention_policies.post.responses.201.examples.application/json.created_by.login": "sean@box.com",
	"paths./retention_policies.post.responses.201.examples.application/json.created_by.name": "Sean",
	"paths./retention_policies.post.responses.201.examples.application/json.created_by.type": "user",
	"paths./retention_policies.post.responses.201.examples.application/json.disposition_action": "permanently_delete",
	"paths./retention_policies.post.responses.201.examples.application/json.id": "123456789",
	"paths./retention_policies.post.responses.201.examples.application/json.policy_name": "Tax Documents",
	"paths./retention_policies.post.responses.201.examples.application/json.policy_type": "finite",
	"paths./retention_policies.post.responses.201.examples.application/json.retention_length": 365,
	"paths./retention_policies.post.responses.201.examples.application/json.status": "active",
	"paths./retention_policies.post.responses.201.examples.application/json.type": "retention_policy",
	"paths./retention_policies.post.responses.201.schema.$ref": "#/definitions/RetentionPolicy",
	"paths./retention_policies.post.responses.400.description": "If a “retention_length” or incorrect “disposition_action” is specified for an indefinite policy, a 400 HTTP status code of bad_request will be returned.",
	"paths./retention_policies.post.responses.400.schema.$ref": "#/definitions/Error",
	"paths./retention_policies.post.responses.409.description": "If a retention policy with the given name already exists, a 409 HTTP status code of conflict will be returned.",
	"paths./retention_policies.post.responses.409.schema.$ref": "#/definitions/Error",
	"paths./retention_policies.post.responses.default.description": "Create Retention policy error",
	"paths./retention_policies.post.responses.default.schema.$ref": "#/definitions/Error",
	"paths./retention_policies.post.summary": "Create Retention Policy",
	"paths./retention_policies.post.tags.length": 1,
	"paths./retention_policies.post.tags[0]": "Retention Policies",
	"paths./retention_policies/{POLICY_ID}.get.description": "Used to retrieve information about a retention policy",
	"paths./retention_policies/{POLICY_ID}.get.externalDocs.url": "https://docs.box.com/reference#get-retention-policy",
	"paths./retention_policies/{POLICY_ID}.get.operationId": "getRetentionPolicy",
	"paths./retention_policies/{POLICY_ID}.get.parameters.length": 1,
	"paths./retention_policies/{POLICY_ID}.get.parameters[0].in": "path",
	"paths./retention_policies/{POLICY_ID}.get.parameters[0].name": "POLICY_ID",
	"paths./retention_policies/{POLICY_ID}.get.parameters[0].required": true,
	"paths./retention_policies/{POLICY_ID}.get.parameters[0].type": "string",
	"paths./retention_policies/{POLICY_ID}.get.responses.200.description": "The specified retention policy will be returned upon success.",
	"paths./retention_policies/{POLICY_ID}.get.responses.200.examples.application/json.created_at": "2015-05-01T11:12:54-07:00",
	"paths./retention_policies/{POLICY_ID}.get.responses.200.examples.application/json.created_by.id": "11993747",
	"paths./retention_policies/{POLICY_ID}.get.responses.200.examples.application/json.created_by.login": "sean@box.com",
	"paths./retention_policies/{POLICY_ID}.get.responses.200.examples.application/json.created_by.name": "Sean",
	"paths./retention_policies/{POLICY_ID}.get.responses.200.examples.application/json.created_by.type": "user",
	"paths./retention_policies/{POLICY_ID}.get.responses.200.examples.application/json.disposition_action": "remove_retention",
	"paths./retention_policies/{POLICY_ID}.get.responses.200.examples.application/json.id": "123456789",
	"paths./retention_policies/{POLICY_ID}.get.responses.200.examples.application/json.modified_at": "2015-06-08T11:11:50-07:00",
	"paths./retention_policies/{POLICY_ID}.get.responses.200.examples.application/json.policy_name": "Tax Documents",
	"paths./retention_policies/{POLICY_ID}.get.responses.200.examples.application/json.policy_type": "finite",
	"paths./retention_policies/{POLICY_ID}.get.responses.200.examples.application/json.retention_length": 365,
	"paths./retention_policies/{POLICY_ID}.get.responses.200.examples.application/json.status": "active",
	"paths./retention_policies/{POLICY_ID}.get.responses.200.examples.application/json.type": "retention_policy",
	"paths./retention_policies/{POLICY_ID}.get.responses.200.schema.$ref": "#/definitions/RetentionPolicy",
	"paths./retention_policies/{POLICY_ID}.get.responses.404.description": "If the retention policy specified does not exist, a 404 HTTP status code of not_found is returned.",
	"paths./retention_policies/{POLICY_ID}.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./retention_policies/{POLICY_ID}.get.responses.default.description": "Get Retention Policy error",
	"paths./retention_policies/{POLICY_ID}.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./retention_policies/{POLICY_ID}.get.summary": "Get Retention Policy",
	"paths./retention_policies/{POLICY_ID}.get.tags.length": 1,
	"paths./retention_policies/{POLICY_ID}.get.tags[0]": "Retention Policies",
	"paths./retention_policies/{POLICY_ID}.put.description": "Used to update a retention policy.",
	"paths./retention_policies/{POLICY_ID}.put.externalDocs.url": "https://docs.box.com/reference#update-retention-policy",
	"paths./retention_policies/{POLICY_ID}.put.operationId": "updateRetentionPolicy",
	"paths./retention_policies/{POLICY_ID}.put.parameters.length": 2,
	"paths./retention_policies/{POLICY_ID}.put.parameters[0].in": "path",
	"paths./retention_policies/{POLICY_ID}.put.parameters[0].name": "POLICY_ID",
	"paths./retention_policies/{POLICY_ID}.put.parameters[0].required": true,
	"paths./retention_policies/{POLICY_ID}.put.parameters[0].type": "string",
	"paths./retention_policies/{POLICY_ID}.put.parameters[1].in": "body",
	"paths./retention_policies/{POLICY_ID}.put.parameters[1].name": "body",
	"paths./retention_policies/{POLICY_ID}.put.parameters[1].required": true,
	"paths./retention_policies/{POLICY_ID}.put.parameters[1].schema.$ref": "#/definitions/RetentionPolicy",
	"paths./retention_policies/{POLICY_ID}.put.responses.200.description": "An updated retention policy object will be returned upon success. ",
	"paths./retention_policies/{POLICY_ID}.put.responses.200.examples.application/json.created_at": "2015-05-01T11:12:54-07:00",
	"paths./retention_policies/{POLICY_ID}.put.responses.200.examples.application/json.created_by.id": "11993747",
	"paths./retention_policies/{POLICY_ID}.put.responses.200.examples.application/json.created_by.login": "sean@box.com",
	"paths./retention_policies/{POLICY_ID}.put.responses.200.examples.application/json.created_by.name": "Sean",
	"paths./retention_policies/{POLICY_ID}.put.responses.200.examples.application/json.created_by.type": "user",
	"paths./retention_policies/{POLICY_ID}.put.responses.200.examples.application/json.disposition_action": "remove_retention",
	"paths./retention_policies/{POLICY_ID}.put.responses.200.examples.application/json.id": "123456789",
	"paths./retention_policies/{POLICY_ID}.put.responses.200.examples.application/json.modified_at": "2015-06-08T11:11:50-07:00",
	"paths./retention_policies/{POLICY_ID}.put.responses.200.examples.application/json.policy_name": "Tax Documents",
	"paths./retention_policies/{POLICY_ID}.put.responses.200.examples.application/json.policy_type": "finite",
	"paths./retention_policies/{POLICY_ID}.put.responses.200.examples.application/json.retention_length": 365,
	"paths./retention_policies/{POLICY_ID}.put.responses.200.examples.application/json.status": "active",
	"paths./retention_policies/{POLICY_ID}.put.responses.200.examples.application/json.type": "retention_policy",
	"paths./retention_policies/{POLICY_ID}.put.responses.200.schema.$ref": "#/definitions/RetentionPolicy",
	"paths./retention_policies/{POLICY_ID}.put.responses.400.description": "If an incorrect “disposition_action” is specified for an indefinite policy, a 400 HTTP status code of bad_request will be returned.",
	"paths./retention_policies/{POLICY_ID}.put.responses.400.schema.$ref": "#/definitions/Error",
	"paths./retention_policies/{POLICY_ID}.put.responses.409.description": "If a retention policy with the given name already exists, a 409 HTTP status code of conflict will be returned.",
	"paths./retention_policies/{POLICY_ID}.put.responses.409.schema.$ref": "#/definitions/Error",
	"paths./retention_policies/{POLICY_ID}.put.responses.default.description": "Update Retention policy error",
	"paths./retention_policies/{POLICY_ID}.put.responses.default.schema.$ref": "#/definitions/Error",
	"paths./retention_policies/{POLICY_ID}.put.summary": "Update Retention Policy",
	"paths./retention_policies/{POLICY_ID}.put.tags.length": 1,
	"paths./retention_policies/{POLICY_ID}.put.tags[0]": "Retention Policies",
	"paths./retention_policies/{POLICY_ID}/assignments.get.description": "Returns a list of all retention policy assignments associated with a specified retention policy.",
	"paths./retention_policies/{POLICY_ID}/assignments.get.externalDocs.url": "https://docs.box.com/reference#get-retention-policy-assignments",
	"paths./retention_policies/{POLICY_ID}/assignments.get.operationId": "getRetentionPolicyAssignments",
	"paths./retention_policies/{POLICY_ID}/assignments.get.parameters.length": 2,
	"paths./retention_policies/{POLICY_ID}/assignments.get.parameters[0].in": "path",
	"paths./retention_policies/{POLICY_ID}/assignments.get.parameters[0].name": "POLICY_ID",
	"paths./retention_policies/{POLICY_ID}/assignments.get.parameters[0].required": true,
	"paths./retention_policies/{POLICY_ID}/assignments.get.parameters[0].type": "string",
	"paths./retention_policies/{POLICY_ID}/assignments.get.parameters[1].description": "The type of the retention policy assignment to retrieve. Can either be folder or enterprise.",
	"paths./retention_policies/{POLICY_ID}/assignments.get.parameters[1].enum.length": 2,
	"paths./retention_policies/{POLICY_ID}/assignments.get.parameters[1].enum[0]": "folder",
	"paths./retention_policies/{POLICY_ID}/assignments.get.parameters[1].enum[1]": "enterprise",
	"paths./retention_policies/{POLICY_ID}/assignments.get.parameters[1].in": "query",
	"paths./retention_policies/{POLICY_ID}/assignments.get.parameters[1].name": "type",
	"paths./retention_policies/{POLICY_ID}/assignments.get.parameters[1].required": false,
	"paths./retention_policies/{POLICY_ID}/assignments.get.parameters[1].type": "string",
	"paths./retention_policies/{POLICY_ID}/assignments.get.responses.200.description": "Returns a list of the retention policy assignments associated with the specified retention policy.",
	"paths./retention_policies/{POLICY_ID}/assignments.get.responses.200.examples.application/json.entries.length": 1,
	"paths./retention_policies/{POLICY_ID}/assignments.get.responses.200.examples.application/json.entries[0].id": "12345678",
	"paths./retention_policies/{POLICY_ID}/assignments.get.responses.200.examples.application/json.entries[0].type": "retention_policy_assignment",
	"paths./retention_policies/{POLICY_ID}/assignments.get.responses.200.schema.$ref": "#/definitions/RetentionPolicyAssignmentList",
	"paths./retention_policies/{POLICY_ID}/assignments.get.responses.400.description": "If a bad “type” parameter is given, a 400 HTTP status code of bad_request is returned.",
	"paths./retention_policies/{POLICY_ID}/assignments.get.responses.400.schema.$ref": "#/definitions/Error",
	"paths./retention_policies/{POLICY_ID}/assignments.get.responses.default.description": "Get Retention policy assignments error",
	"paths./retention_policies/{POLICY_ID}/assignments.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./retention_policies/{POLICY_ID}/assignments.get.summary": "Get Retention Policy Assignments",
	"paths./retention_policies/{POLICY_ID}/assignments.get.tags.length": 1,
	"paths./retention_policies/{POLICY_ID}/assignments.get.tags[0]": "Retention Policies",
	"paths./retention_policy_assignments.post.description": "Returns a list of all retention policy assignments associated with a specified retention policy.",
	"paths./retention_policy_assignments.post.externalDocs.url": "https://docs.box.com/reference#create-retention-policy-assignment",
	"paths./retention_policy_assignments.post.operationId": "createRetentionPolicyAssignment",
	"paths./retention_policy_assignments.post.parameters.length": 1,
	"paths./retention_policy_assignments.post.parameters[0].in": "body",
	"paths./retention_policy_assignments.post.parameters[0].name": "body",
	"paths./retention_policy_assignments.post.parameters[0].required": true,
	"paths./retention_policy_assignments.post.parameters[0].schema.$ref": "#/definitions/CreateRetentionPolicyAssignment",
	"paths./retention_policy_assignments.post.responses.201.description": "A new retention policy assignment will be returned upon success.",
	"paths./retention_policy_assignments.post.responses.201.examples.application/json.assigned_at": "2015-07-20T14:28:09-07:00",
	"paths./retention_policy_assignments.post.responses.201.examples.application/json.assigned_by.id": "123456789",
	"paths./retention_policy_assignments.post.responses.201.examples.application/json.assigned_by.login": "sean@box.com",
	"paths./retention_policy_assignments.post.responses.201.examples.application/json.assigned_by.name": "Sean",
	"paths./retention_policy_assignments.post.responses.201.examples.application/json.assigned_by.type": "user",
	"paths./retention_policy_assignments.post.responses.201.examples.application/json.assigned_to.id": "99922219",
	"paths./retention_policy_assignments.post.responses.201.examples.application/json.assigned_to.type": "folder",
	"paths./retention_policy_assignments.post.responses.201.examples.application/json.id": "3233225",
	"paths./retention_policy_assignments.post.responses.201.examples.application/json.retention_policy.id": "32131",
	"paths./retention_policy_assignments.post.responses.201.examples.application/json.retention_policy.policy_name": "TaxDocuments",
	"paths./retention_policy_assignments.post.responses.201.examples.application/json.retention_policy.type": "retention_policy",
	"paths./retention_policy_assignments.post.responses.201.examples.application/json.type": "retention_policy_assignment",
	"paths./retention_policy_assignments.post.responses.201.schema.$ref": "#/definitions/RetentionPolicyAssignment",
	"paths./retention_policy_assignments.post.responses.400.description": "If an “id” is specified while assigning a retention policy to an enterprise, a 400 HTTP status code of bad_request is returned.",
	"paths./retention_policy_assignments.post.responses.400.schema.$ref": "#/definitions/Error",
	"paths./retention_policy_assignments.post.responses.404.description": "If no retention policy with the given “policy_id” exists, a 404 HTTP status code of not_found is returned.",
	"paths./retention_policy_assignments.post.responses.404.schema.$ref": "#/definitions/Error",
	"paths./retention_policy_assignments.post.responses.409.description": "If a retention policy of equal or greater length has already been assigned to this content, a 409 HTTP status_code of conflict is returned.",
	"paths./retention_policy_assignments.post.responses.409.schema.$ref": "#/definitions/Error",
	"paths./retention_policy_assignments.post.responses.default.description": "Create Retention Policy Assignment error",
	"paths./retention_policy_assignments.post.responses.default.schema.$ref": "#/definitions/Error",
	"paths./retention_policy_assignments.post.summary": "Create Retention Policy Assignment",
	"paths./retention_policy_assignments.post.tags.length": 1,
	"paths./retention_policy_assignments.post.tags[0]": "Retention Policies",
	"paths./retention_policy_assignments/{RETENTION_POLICY_ASSIGNMENT_ID}.get.description": "Used to retrieve information about a retention policy assignment.",
	"paths./retention_policy_assignments/{RETENTION_POLICY_ASSIGNMENT_ID}.get.externalDocs.url": "https://docs.box.com/reference#get-retention-policy-assignment",
	"paths./retention_policy_assignments/{RETENTION_POLICY_ASSIGNMENT_ID}.get.operationId": "getRetentionPolicyAssignment",
	"paths./retention_policy_assignments/{RETENTION_POLICY_ASSIGNMENT_ID}.get.parameters.length": 1,
	"paths./retention_policy_assignments/{RETENTION_POLICY_ASSIGNMENT_ID}.get.parameters[0].in": "path",
	"paths./retention_policy_assignments/{RETENTION_POLICY_ASSIGNMENT_ID}.get.parameters[0].name": "RETENTION_POLICY_ASSIGNMENT_ID",
	"paths./retention_policy_assignments/{RETENTION_POLICY_ASSIGNMENT_ID}.get.parameters[0].required": true,
	"paths./retention_policy_assignments/{RETENTION_POLICY_ASSIGNMENT_ID}.get.parameters[0].type": "string",
	"paths./retention_policy_assignments/{RETENTION_POLICY_ASSIGNMENT_ID}.get.responses.200.description": "The specified retention policy assignment will be returned upon success.",
	"paths./retention_policy_assignments/{RETENTION_POLICY_ASSIGNMENT_ID}.get.responses.200.examples.application/json.assigned_at": "2015-07-20T14:28:09-07:00",
	"paths./retention_policy_assignments/{RETENTION_POLICY_ASSIGNMENT_ID}.get.responses.200.examples.application/json.assigned_by.id": "123456789",
	"paths./retention_policy_assignments/{RETENTION_POLICY_ASSIGNMENT_ID}.get.responses.200.examples.application/json.assigned_by.login": "sean@box.com",
	"paths./retention_policy_assignments/{RETENTION_POLICY_ASSIGNMENT_ID}.get.responses.200.examples.application/json.assigned_by.name": "Sean",
	"paths./retention_policy_assignments/{RETENTION_POLICY_ASSIGNMENT_ID}.get.responses.200.examples.application/json.assigned_by.type": "user",
	"paths./retention_policy_assignments/{RETENTION_POLICY_ASSIGNMENT_ID}.get.responses.200.examples.application/json.assigned_to.id": "99922219",
	"paths./retention_policy_assignments/{RETENTION_POLICY_ASSIGNMENT_ID}.get.responses.200.examples.application/json.assigned_to.type": "folder",
	"paths./retention_policy_assignments/{RETENTION_POLICY_ASSIGNMENT_ID}.get.responses.200.examples.application/json.id": "3233225",
	"paths./retention_policy_assignments/{RETENTION_POLICY_ASSIGNMENT_ID}.get.responses.200.examples.application/json.retention_policy.id": "32131",
	"paths./retention_policy_assignments/{RETENTION_POLICY_ASSIGNMENT_ID}.get.responses.200.examples.application/json.retention_policy.policy_name": "TaxDocuments",
	"paths./retention_policy_assignments/{RETENTION_POLICY_ASSIGNMENT_ID}.get.responses.200.examples.application/json.retention_policy.type": "retention_policy",
	"paths./retention_policy_assignments/{RETENTION_POLICY_ASSIGNMENT_ID}.get.responses.200.examples.application/json.type": "retention_policy_assignment",
	"paths./retention_policy_assignments/{RETENTION_POLICY_ASSIGNMENT_ID}.get.responses.200.schema.$ref": "#/definitions/RetentionPolicyAssignment",
	"paths./retention_policy_assignments/{RETENTION_POLICY_ASSIGNMENT_ID}.get.responses.404.description": "If no retention policy assignment with the given ID exists, a 404 HTTP status code of not_found is returned.",
	"paths./retention_policy_assignments/{RETENTION_POLICY_ASSIGNMENT_ID}.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./retention_policy_assignments/{RETENTION_POLICY_ASSIGNMENT_ID}.get.responses.default.description": "Get Retention Policy Assignment error",
	"paths./retention_policy_assignments/{RETENTION_POLICY_ASSIGNMENT_ID}.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./retention_policy_assignments/{RETENTION_POLICY_ASSIGNMENT_ID}.get.summary": "Get Retention Policy Assignment",
	"paths./retention_policy_assignments/{RETENTION_POLICY_ASSIGNMENT_ID}.get.tags.length": 1,
	"paths./retention_policy_assignments/{RETENTION_POLICY_ASSIGNMENT_ID}.get.tags[0]": "Retention Policies",
	"paths./search.get.description": "The search endpoint provides a powerful way of finding items that are accessible by a single user or an entire enterprise. Leverage the parameters listed below to generate targeted advanced searches.",
	"paths./search.get.externalDocs.url": "https://docs.box.com/reference#searching-for-content",
	"paths./search.get.operationId": "search",
	"paths./search.get.parameters.length": 14,
	"paths./search.get.parameters[0].description": "The string to search for; can be matched against item names, descriptions, text content of a file, and other fields of the different item types.",
	"paths./search.get.parameters[0].in": "query",
	"paths./search.get.parameters[0].name": "query",
	"paths./search.get.parameters[0].required": true,
	"paths./search.get.parameters[0].type": "string",
	"paths./search.get.parameters[10].description": "Allows you to search within the trash. Can be trashed_only or non_trashed_only. Searches without this parameter default to non_trashed_only.",
	"paths./search.get.parameters[10].in": "query",
	"paths./search.get.parameters[10].name": "trash_content",
	"paths./search.get.parameters[10].required": false,
	"paths./search.get.parameters[10].type": "string",
	"paths./search.get.parameters[11].description": "Filters for a specific metadata template for files with metadata object associations. The filters are to be placed in a single JSON object. Please refer the MDFilters object in the definitions section of the swagger.json",
	"paths./search.get.parameters[11].in": "query",
	"paths./search.get.parameters[11].name": "mdfilters",
	"paths./search.get.parameters[11].required": false,
	"paths./search.get.parameters[11].type": "string",
	"paths./search.get.parameters[12].description": "Number of search results to return. The default is 30 and the max is 200.",
	"paths./search.get.parameters[12].format": "int64",
	"paths./search.get.parameters[12].in": "query",
	"paths./search.get.parameters[12].name": "limit",
	"paths./search.get.parameters[12].required": false,
	"paths./search.get.parameters[12].type": "integer",
	"paths./search.get.parameters[13].description": "The search result at which to start the response. The default is 0.",
	"paths./search.get.parameters[13].format": "int64",
	"paths./search.get.parameters[13].in": "query",
	"paths./search.get.parameters[13].name": "offset",
	"paths./search.get.parameters[13].required": false,
	"paths./search.get.parameters[13].type": "integer",
	"paths./search.get.parameters[1].description": "The scope for which you want to limit your search to. Can be user_content for a search limited to only the current user or enterprise_content for the entire enterprise. To enable the enterprise_content scope for an administrator, please contact us.",
	"paths./search.get.parameters[1].in": "query",
	"paths./search.get.parameters[1].name": "scope",
	"paths./search.get.parameters[1].required": false,
	"paths./search.get.parameters[1].type": "string",
	"paths./search.get.parameters[2].description": "Limit searches to specific file extensions like pdf,png,doc. Requires one or a set of comma delimited file extensions: file_extension_1,file_extension_2,....",
	"paths./search.get.parameters[2].in": "query",
	"paths./search.get.parameters[2].name": "file_extensions",
	"paths./search.get.parameters[2].required": false,
	"paths./search.get.parameters[2].type": "string",
	"paths./search.get.parameters[3].description": "The date for when the item was created. Specify the date range by using RFC3339 timestamp variables separated by a comma: from_date,to_date (e.g 2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00). Trailing from_date, and leading ,to_date commas are also accepted, where the current date and earliest known date will be designated respectively.",
	"paths./search.get.parameters[3].format": "date-time",
	"paths./search.get.parameters[3].in": "query",
	"paths./search.get.parameters[3].name": "created_at_range",
	"paths./search.get.parameters[3].required": false,
	"paths./search.get.parameters[3].type": "string",
	"paths./search.get.parameters[4].description": "The date for when the item was last updated. Specify the date range by using RFC3339 variables separated by a comma: from_date,to_date(e.g 2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00). Trailing from_date, and leading ,to_date commas are also accepted, where the current date and earliest known date will be designated respectively.",
	"paths./search.get.parameters[4].format": "date-time",
	"paths./search.get.parameters[4].in": "query",
	"paths./search.get.parameters[4].name": "updated_at_range",
	"paths./search.get.parameters[4].required": false,
	"paths./search.get.parameters[4].type": "string",
	"paths./search.get.parameters[5].description": "Filter by a file size range. Specify the file size range in bytes separated by a comma:lower_bound_size,upper_bound_size, where 1MB is equivalent to 1000000 bytes. Trailing lower_bound_size, and leading ,upper_bound_size commas are also accepted as parameters.",
	"paths./search.get.parameters[5].format": "int64",
	"paths./search.get.parameters[5].in": "query",
	"paths./search.get.parameters[5].name": "size_range",
	"paths./search.get.parameters[5].required": false,
	"paths./search.get.parameters[5].type": "integer",
	"paths./search.get.parameters[6].description": "Search by item owners. Requires one or a set of comma delimited user_ids: user_id_1,user_id_2,...",
	"paths./search.get.parameters[6].in": "query",
	"paths./search.get.parameters[6].name": "owner_user_ids",
	"paths./search.get.parameters[6].required": false,
	"paths./search.get.parameters[6].type": "string",
	"paths./search.get.parameters[7].description": "Limit searches to specific parent folders. Requires one or a set of comma delimited folder_ids: folder_id_1,folder_id_2,.... Parent folder results will also include items within subfolders.",
	"paths./search.get.parameters[7].in": "query",
	"paths./search.get.parameters[7].name": "ancestor_folder_ids",
	"paths./search.get.parameters[7].required": false,
	"paths./search.get.parameters[7].type": "string",
	"paths./search.get.parameters[8].description": "Limit searches to specific Box designated content types. Can be name, description, file_content, comments, or tags. Requires one or a set of comma delimited content_types: content_type_1,content_type_2,....",
	"paths./search.get.parameters[8].in": "query",
	"paths./search.get.parameters[8].name": "content_types",
	"paths./search.get.parameters[8].required": false,
	"paths./search.get.parameters[8].type": "string",
	"paths./search.get.parameters[9].description": "The type you want to return in your search. Can be file, folder, or web_link.",
	"paths./search.get.parameters[9].enum.length": 3,
	"paths./search.get.parameters[9].enum[0]": "file",
	"paths./search.get.parameters[9].enum[1]": "folder",
	"paths./search.get.parameters[9].enum[2]": "web_link",
	"paths./search.get.parameters[9].in": "query",
	"paths./search.get.parameters[9].name": "type",
	"paths./search.get.parameters[9].required": false,
	"paths./search.get.parameters[9].type": "string",
	"paths./search.get.responses.200.description": "A collection of search results is returned. If there are no matching search results, the entries array will be empty.",
	"paths./search.get.responses.200.schema.$ref": "#/definitions/ObjectList",
	"paths./search.get.responses.default.description": "Search operation error",
	"paths./search.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./search.get.summary": "Searching for Content",
	"paths./search.get.tags.length": 1,
	"paths./search.get.tags[0]": "Search",
	"paths./shared_items.get.description": "Shared items are any files or folders that are represented by a shared link. Shared items are different from other API resources in that a shared resource doesn’t necessarily have to be in the account of the user accessing it. The actual shared link itself is used along with a normal access token.\nUsed to retrieve the metadata about a shared item when only given a shared link. Because of varying permission for shared links, a password may be required to retrieve the shared item. Once the item has been retrieved, you can make API requests against the actual resource /files/{id} or /folders/{id} as long as the shared link and optional password are in the header.",
	"paths./shared_items.get.externalDocs.url": "https://docs.box.com/reference#get-a-shared-item",
	"paths./shared_items.get.operationId": "getSharedItems",
	"paths./shared_items.get.parameters.length": 1,
	"paths./shared_items.get.parameters[0].description": "The usage is 'BoxApi: shared_link=SHARED_LINK\u0026shared_link_password=SHARED_LINK_PASSWORD'",
	"paths./shared_items.get.parameters[0].in": "header",
	"paths./shared_items.get.parameters[0].name": "BoxApi",
	"paths./shared_items.get.parameters[0].required": true,
	"paths./shared_items.get.parameters[0].type": "string",
	"paths./shared_items.get.responses.200.description": "A full file or folder object is returned if the shared link is valid and the user has access to it.",
	"paths./shared_items.get.responses.200.examples.application/json.created_at": "2012-12-12T10:53:43-08:00",
	"paths./shared_items.get.responses.200.examples.application/json.created_by.id": "17738362",
	"paths./shared_items.get.responses.200.examples.application/json.created_by.login": "sean@box.com",
	"paths./shared_items.get.responses.200.examples.application/json.created_by.name": "sean rose",
	"paths./shared_items.get.responses.200.examples.application/json.created_by.type": "user",
	"paths./shared_items.get.responses.200.examples.application/json.description": "Some pictures I took",
	"paths./shared_items.get.responses.200.examples.application/json.etag": "1",
	"paths./shared_items.get.responses.200.examples.application/json.folder_upload_email.access": "open",
	"paths./shared_items.get.responses.200.examples.application/json.folder_upload_email.email": "upload.Picture.k13sdz1@u.box.com",
	"paths./shared_items.get.responses.200.examples.application/json.id": "11446498",
	"paths./shared_items.get.responses.200.examples.application/json.item_collection.entries.length": 1,
	"paths./shared_items.get.responses.200.examples.application/json.item_collection.entries[0].etag": "3",
	"paths./shared_items.get.responses.200.examples.application/json.item_collection.entries[0].id": "5000948880",
	"paths./shared_items.get.responses.200.examples.application/json.item_collection.entries[0].name": "tigers.jpeg",
	"paths./shared_items.get.responses.200.examples.application/json.item_collection.entries[0].sequence_id": "3",
	"paths./shared_items.get.responses.200.examples.application/json.item_collection.entries[0].sha1": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
	"paths./shared_items.get.responses.200.examples.application/json.item_collection.entries[0].type": "file",
	"paths./shared_items.get.responses.200.examples.application/json.item_collection.limit": 100,
	"paths./shared_items.get.responses.200.examples.application/json.item_collection.offset": 0,
	"paths./shared_items.get.responses.200.examples.application/json.item_collection.total_count": 1,
	"paths./shared_items.get.responses.200.examples.application/json.item_status": "active",
	"paths./shared_items.get.responses.200.examples.application/json.modified_at": "2012-12-12T11:15:04-08:00",
	"paths./shared_items.get.responses.200.examples.application/json.modified_by.id": "17738362",
	"paths./shared_items.get.responses.200.examples.application/json.modified_by.login": "sean@box.com",
	"paths./shared_items.get.responses.200.examples.application/json.modified_by.name": "sean rose",
	"paths./shared_items.get.responses.200.examples.application/json.modified_by.type": "user",
	"paths./shared_items.get.responses.200.examples.application/json.name": "Pictures",
	"paths./shared_items.get.responses.200.examples.application/json.owned_by.id": "17738362",
	"paths./shared_items.get.responses.200.examples.application/json.owned_by.login": "sean@box.com",
	"paths./shared_items.get.responses.200.examples.application/json.owned_by.name": "sean rose",
	"paths./shared_items.get.responses.200.examples.application/json.owned_by.type": "user",
	"paths./shared_items.get.responses.200.examples.application/json.parent.id": "0",
	"paths./shared_items.get.responses.200.examples.application/json.parent.name": "All Files",
	"paths./shared_items.get.responses.200.examples.application/json.parent.type": "folder",
	"paths./shared_items.get.responses.200.examples.application/json.path_collection.entries.length": 1,
	"paths./shared_items.get.responses.200.examples.application/json.path_collection.entries[0].id": "0",
	"paths./shared_items.get.responses.200.examples.application/json.path_collection.entries[0].name": "All Files",
	"paths./shared_items.get.responses.200.examples.application/json.path_collection.entries[0].type": "folder",
	"paths./shared_items.get.responses.200.examples.application/json.path_collection.total_count": 1,
	"paths./shared_items.get.responses.200.examples.application/json.sequence_id": "1",
	"paths./shared_items.get.responses.200.examples.application/json.shared_link.access": "open",
	"paths./shared_items.get.responses.200.examples.application/json.shared_link.download_count": 0,
	"paths./shared_items.get.responses.200.examples.application/json.shared_link.is_password_enabled": false,
	"paths./shared_items.get.responses.200.examples.application/json.shared_link.permissions.can_download": true,
	"paths./shared_items.get.responses.200.examples.application/json.shared_link.permissions.can_preview": true,
	"paths./shared_items.get.responses.200.examples.application/json.shared_link.preview_count": 0,
	"paths./shared_items.get.responses.200.examples.application/json.shared_link.url": "https://www.box.com/s/vspke7y05sb214wjokpk",
	"paths./shared_items.get.responses.200.examples.application/json.size": 629644,
	"paths./shared_items.get.responses.200.examples.application/json.type": "folder",
	"paths./shared_items.get.responses.200.schema.type": "object",
	"paths./shared_items.get.responses.default.description": "Get shared items operation error",
	"paths./shared_items.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./shared_items.get.summary": "Shared Items",
	"paths./shared_items.get.tags.length": 1,
	"paths./shared_items.get.tags[0]": "Shared Items",
	"paths./task_assignments.post.description": "Used to assign a task to a single user. There can be multiple assignments on a given task.",
	"paths./task_assignments.post.externalDocs.url": "https://docs.box.com/reference#create-a-task-assignment",
	"paths./task_assignments.post.operationId": "createTaskAssignment",
	"paths./task_assignments.post.parameters.length": 1,
	"paths./task_assignments.post.parameters[0].in": "body",
	"paths./task_assignments.post.parameters[0].name": "body",
	"paths./task_assignments.post.parameters[0].required": true,
	"paths./task_assignments.post.parameters[0].schema.$ref": "#/definitions/CreateTaskAssignment",
	"paths./task_assignments.post.responses.201.description": "A new task assignment object will be returned upon success.",
	"paths./task_assignments.post.responses.201.examples.application/json.assigned_at": "2013-05-10T11:43:41-07:00",
	"paths./task_assignments.post.responses.201.examples.application/json.assigned_by.id": "11993747",
	"paths./task_assignments.post.responses.201.examples.application/json.assigned_by.login": "sean@box.com",
	"paths./task_assignments.post.responses.201.examples.application/json.assigned_by.name": "☁ sean ☁",
	"paths./task_assignments.post.responses.201.examples.application/json.assigned_by.type": "user",
	"paths./task_assignments.post.responses.201.examples.application/json.assigned_to.id": "1992432",
	"paths./task_assignments.post.responses.201.examples.application/json.assigned_to.login": "rhaegar@box.com",
	"paths./task_assignments.post.responses.201.examples.application/json.assigned_to.name": "rhaegar@box.com",
	"paths./task_assignments.post.responses.201.examples.application/json.assigned_to.type": "user",
	"paths./task_assignments.post.responses.201.examples.application/json.id": "2698512",
	"paths./task_assignments.post.responses.201.examples.application/json.item.etag": "0",
	"paths./task_assignments.post.responses.201.examples.application/json.item.id": "8018809384",
	"paths./task_assignments.post.responses.201.examples.application/json.item.name": "scrumworksToTrello.js",
	"paths./task_assignments.post.responses.201.examples.application/json.item.sequence_id": "0",
	"paths./task_assignments.post.responses.201.examples.application/json.item.sha1": "7840095ee096ee8297676a138d4e316eabb3ec96",
	"paths./task_assignments.post.responses.201.examples.application/json.item.type": "file",
	"paths./task_assignments.post.responses.201.examples.application/json.resolution_state": "incomplete",
	"paths./task_assignments.post.responses.201.examples.application/json.type": "task_assignment",
	"paths./task_assignments.post.responses.201.schema.$ref": "#/definitions/TaskAssignment",
	"paths./task_assignments.post.responses.default.description": "Create Task assginment error",
	"paths./task_assignments.post.responses.default.schema.$ref": "#/definitions/Error",
	"paths./task_assignments.post.summary": "Create Task Assignment",
	"paths./task_assignments.post.tags.length": 1,
	"paths./task_assignments.post.tags[0]": "Tasks",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.delete.description": "Deletes a specific task assignment.",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.delete.externalDocs.url": "https://docs.box.com/reference#delete-a-task-assignment",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.delete.operationId": "deleteTaskAssignment",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.delete.parameters.length": 1,
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.delete.parameters[0].in": "path",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.delete.parameters[0].name": "TASK_ASSIGNMENT_ID",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.delete.parameters[0].required": true,
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.delete.parameters[0].type": "string",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.delete.responses.204.description": "An empty 204 No Content response will be returned upon success.",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.delete.responses.default.description": "Delete Task assignment error",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.delete.responses.default.schema.$ref": "#/definitions/Error",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.delete.summary": "Delete Task Assignment",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.delete.tags.length": 1,
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.delete.tags[0]": "Tasks",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.description": "Fetches a specific task assignment.",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.externalDocs.url": "https://docs.box.com/reference#get-a-task-assignment",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.operationId": "getTaskAssignment",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.parameters.length": 2,
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.parameters[0].in": "path",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.parameters[0].name": "TASK_ASSIGNMENT_ID",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.parameters[0].required": true,
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.parameters[0].type": "string",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.parameters[1].description": "Attribute(s) to include in the response",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.parameters[1].in": "query",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.parameters[1].name": "fields",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.parameters[1].required": false,
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.parameters[1].type": "string",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.responses.200.description": "The specified task assignment object will be returned upon success.",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.responses.200.examples.application/json.assigned_at": "2013-05-10T11:43:41-07:00",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.responses.200.examples.application/json.assigned_by.id": "11993747",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.responses.200.examples.application/json.assigned_by.login": "sean@box.com",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.responses.200.examples.application/json.assigned_by.name": "☁ sean ☁",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.responses.200.examples.application/json.assigned_by.type": "user",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.responses.200.examples.application/json.assigned_to.id": "1992432",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.responses.200.examples.application/json.assigned_to.login": "rhaegar@box.com",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.responses.200.examples.application/json.assigned_to.name": "rhaegar@box.com",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.responses.200.examples.application/json.assigned_to.type": "user",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.responses.200.examples.application/json.id": "2698512",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.responses.200.examples.application/json.item.etag": "0",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.responses.200.examples.application/json.item.id": "8018809384",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.responses.200.examples.application/json.item.name": "scrumworksToTrello.js",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.responses.200.examples.application/json.item.sequence_id": "0",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.responses.200.examples.application/json.item.sha1": "7840095ee096ee8297676a138d4e316eabb3ec96",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.responses.200.examples.application/json.item.type": "file",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.responses.200.examples.application/json.resolution_state": "incomplete",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.responses.200.examples.application/json.type": "task_assignment",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.responses.200.schema.$ref": "#/definitions/TaskAssignment",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.responses.default.description": "Get Task assginment error",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.summary": "Get Task Assignment",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.tags.length": 1,
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.get.tags[0]": "Tasks",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.description": "Used to update a task assignment.",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.externalDocs.url": "https://docs.box.com/reference#update-a-task-assignment",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.operationId": "updateTaskAssignment",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.parameters.length": 2,
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.parameters[0].in": "path",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.parameters[0].name": "TASK_ASSIGNMENT_ID",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.parameters[0].required": true,
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.parameters[0].type": "string",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.parameters[1].in": "body",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.parameters[1].name": "body",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.parameters[1].required": true,
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.parameters[1].schema.$ref": "#/definitions/TaskAssignment",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.responses.200.description": "A new task assignment object will be returned upon success.",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.responses.200.examples.application/json.assigned_at": "2013-05-10T11:43:41-07:00",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.responses.200.examples.application/json.assigned_by.id": "11993747",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.responses.200.examples.application/json.assigned_by.login": "sean@box.com",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.responses.200.examples.application/json.assigned_by.name": "☁ sean ☁",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.responses.200.examples.application/json.assigned_by.type": "user",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.responses.200.examples.application/json.assigned_to.id": "1992432",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.responses.200.examples.application/json.assigned_to.login": "rhaegar@box.com",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.responses.200.examples.application/json.assigned_to.name": "rhaegar@box.com",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.responses.200.examples.application/json.assigned_to.type": "user",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.responses.200.examples.application/json.id": "2698512",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.responses.200.examples.application/json.item.etag": "0",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.responses.200.examples.application/json.item.id": "8018809384",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.responses.200.examples.application/json.item.name": "scrumworksToTrello.js",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.responses.200.examples.application/json.item.sequence_id": "0",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.responses.200.examples.application/json.item.sha1": "7840095ee096ee8297676a138d4e316eabb3ec96",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.responses.200.examples.application/json.item.type": "file",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.responses.200.examples.application/json.message": "hello!!!",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.responses.200.examples.application/json.resolution_state": "incomplete",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.responses.200.examples.application/json.type": "task_assignment",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.responses.200.schema.$ref": "#/definitions/TaskAssignment",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.responses.default.description": "Update Task assginment error",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.responses.default.schema.$ref": "#/definitions/Error",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.summary": "Update Task Assignment",
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.tags.length": 1,
	"paths./task_assignments/{TASK_ASSIGNMENT_ID}.put.tags[0]": "Tasks",
	"paths./tasks.post.description": "Used to create a single task for single user on a single file.",
	"paths./tasks.post.externalDocs.url": "https://docs.box.com/reference#create-a-task",
	"paths./tasks.post.operationId": "createTask",
	"paths./tasks.post.parameters.length": 1,
	"paths./tasks.post.parameters[0].in": "body",
	"paths./tasks.post.parameters[0].name": "body",
	"paths./tasks.post.parameters[0].required": true,
	"paths./tasks.post.parameters[0].schema.$ref": "#/definitions/Task",
	"paths./tasks.post.responses.201.description": "A new task object will be returned upon success.",
	"paths./tasks.post.responses.201.examples.application/json.action": "review",
	"paths./tasks.post.responses.201.examples.application/json.created_at": "2013-04-03T11:12:54-07:00",
	"paths./tasks.post.responses.201.examples.application/json.created_by.id": "11993747",
	"paths./tasks.post.responses.201.examples.application/json.created_by.login": "sean@box.com",
	"paths./tasks.post.responses.201.examples.application/json.created_by.name": "☁ sean ☁",
	"paths./tasks.post.responses.201.examples.application/json.created_by.type": "user",
	"paths./tasks.post.responses.201.examples.application/json.due_at": "2014-04-03T11:09:43-07:00",
	"paths./tasks.post.responses.201.examples.application/json.id": "1839355",
	"paths./tasks.post.responses.201.examples.application/json.is_completed": false,
	"paths./tasks.post.responses.201.examples.application/json.item.etag": "0",
	"paths./tasks.post.responses.201.examples.application/json.item.id": "7287087200",
	"paths./tasks.post.responses.201.examples.application/json.item.name": "box-logo.png",
	"paths./tasks.post.responses.201.examples.application/json.item.sequence_id": "0",
	"paths./tasks.post.responses.201.examples.application/json.item.sha1": "0bbd79a105c504f99573e3799756debba4c760cd",
	"paths./tasks.post.responses.201.examples.application/json.item.type": "file",
	"paths./tasks.post.responses.201.examples.application/json.message": "REVIEW PLZ K THX",
	"paths./tasks.post.responses.201.examples.application/json.task_assignment_collection.entries.length": 0,
	"paths./tasks.post.responses.201.examples.application/json.task_assignment_collection.total_count": 0,
	"paths./tasks.post.responses.201.examples.application/json.type": "task",
	"paths./tasks.post.responses.201.schema.$ref": "#/definitions/Task",
	"paths./tasks.post.responses.default.description": "Create Task error",
	"paths./tasks.post.responses.default.schema.$ref": "#/definitions/Error",
	"paths./tasks.post.summary": "Create Task",
	"paths./tasks.post.tags.length": 1,
	"paths./tasks.post.tags[0]": "Tasks",
	"paths./tasks/{TASK_ID}.delete.description": "Permanently deletes a specific task.",
	"paths./tasks/{TASK_ID}.delete.externalDocs.url": "https://docs.box.com/reference#delete-a-task",
	"paths./tasks/{TASK_ID}.delete.operationId": "deleteTask",
	"paths./tasks/{TASK_ID}.delete.parameters.length": 1,
	"paths./tasks/{TASK_ID}.delete.parameters[0].in": "path",
	"paths./tasks/{TASK_ID}.delete.parameters[0].name": "TASK_ID",
	"paths./tasks/{TASK_ID}.delete.parameters[0].required": true,
	"paths./tasks/{TASK_ID}.delete.parameters[0].type": "string",
	"paths./tasks/{TASK_ID}.delete.responses.204.description": "An empty 204 response will be returned upon success.",
	"paths./tasks/{TASK_ID}.delete.responses.default.description": "Delete Task error",
	"paths./tasks/{TASK_ID}.delete.responses.default.schema.$ref": "#/definitions/Error",
	"paths./tasks/{TASK_ID}.delete.summary": "Delete Task",
	"paths./tasks/{TASK_ID}.delete.tags.length": 1,
	"paths./tasks/{TASK_ID}.delete.tags[0]": "Tasks",
	"paths./tasks/{TASK_ID}.get.description": "Fetches a specific task.",
	"paths./tasks/{TASK_ID}.get.externalDocs.url": "https://docs.box.com/reference#task-object",
	"paths./tasks/{TASK_ID}.get.operationId": "getTask",
	"paths./tasks/{TASK_ID}.get.parameters.length": 2,
	"paths./tasks/{TASK_ID}.get.parameters[0].in": "path",
	"paths./tasks/{TASK_ID}.get.parameters[0].name": "TASK_ID",
	"paths./tasks/{TASK_ID}.get.parameters[0].required": true,
	"paths./tasks/{TASK_ID}.get.parameters[0].type": "string",
	"paths./tasks/{TASK_ID}.get.parameters[1].description": "Attribute(s) to include in the response",
	"paths./tasks/{TASK_ID}.get.parameters[1].in": "query",
	"paths./tasks/{TASK_ID}.get.parameters[1].name": "fields",
	"paths./tasks/{TASK_ID}.get.parameters[1].required": false,
	"paths./tasks/{TASK_ID}.get.parameters[1].type": "string",
	"paths./tasks/{TASK_ID}.get.responses.200.description": "The specified task object will be returned upon success.",
	"paths./tasks/{TASK_ID}.get.responses.200.examples.application/json.action": "review",
	"paths./tasks/{TASK_ID}.get.responses.200.examples.application/json.created_at": "2013-04-03T11:12:54-07:00",
	"paths./tasks/{TASK_ID}.get.responses.200.examples.application/json.created_by.id": "11993747",
	"paths./tasks/{TASK_ID}.get.responses.200.examples.application/json.created_by.login": "sean@box.com",
	"paths./tasks/{TASK_ID}.get.responses.200.examples.application/json.created_by.name": "☁ sean ☁",
	"paths./tasks/{TASK_ID}.get.responses.200.examples.application/json.created_by.type": "user",
	"paths./tasks/{TASK_ID}.get.responses.200.examples.application/json.due_at": "2014-04-03T11:09:43-07:00",
	"paths./tasks/{TASK_ID}.get.responses.200.examples.application/json.id": "1839355",
	"paths./tasks/{TASK_ID}.get.responses.200.examples.application/json.is_completed": false,
	"paths./tasks/{TASK_ID}.get.responses.200.examples.application/json.item.etag": "0",
	"paths./tasks/{TASK_ID}.get.responses.200.examples.application/json.item.id": "7287087200",
	"paths./tasks/{TASK_ID}.get.responses.200.examples.application/json.item.name": "box-logo.png",
	"paths./tasks/{TASK_ID}.get.responses.200.examples.application/json.item.sequence_id": "0",
	"paths./tasks/{TASK_ID}.get.responses.200.examples.application/json.item.sha1": "0bbd79a105c504f99573e3799756debba4c760cd",
	"paths./tasks/{TASK_ID}.get.responses.200.examples.application/json.item.type": "file",
	"paths./tasks/{TASK_ID}.get.responses.200.examples.application/json.message": "REVIEW PLZ K THX",
	"paths./tasks/{TASK_ID}.get.responses.200.examples.application/json.task_assignment_collection.entries.length": 0,
	"paths./tasks/{TASK_ID}.get.responses.200.examples.application/json.task_assignment_collection.total_count": 0,
	"paths./tasks/{TASK_ID}.get.responses.200.examples.application/json.type": "task",
	"paths./tasks/{TASK_ID}.get.responses.200.schema.$ref": "#/definitions/Task",
	"paths./tasks/{TASK_ID}.get.responses.default.description": "Get task error",
	"paths./tasks/{TASK_ID}.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./tasks/{TASK_ID}.get.summary": "Get Task",
	"paths./tasks/{TASK_ID}.get.tags.length": 1,
	"paths./tasks/{TASK_ID}.get.tags[0]": "Tasks",
	"paths./tasks/{TASK_ID}.put.description": "Updates a specific task.",
	"paths./tasks/{TASK_ID}.put.externalDocs.url": "https://docs.box.com/reference#update-a-task",
	"paths./tasks/{TASK_ID}.put.operationId": "updateTask",
	"paths./tasks/{TASK_ID}.put.parameters.length": 3,
	"paths./tasks/{TASK_ID}.put.parameters[0].in": "path",
	"paths./tasks/{TASK_ID}.put.parameters[0].name": "TASK_ID",
	"paths./tasks/{TASK_ID}.put.parameters[0].required": true,
	"paths./tasks/{TASK_ID}.put.parameters[0].type": "string",
	"paths./tasks/{TASK_ID}.put.parameters[1].description": "Attribute(s) to include in the response",
	"paths./tasks/{TASK_ID}.put.parameters[1].in": "query",
	"paths./tasks/{TASK_ID}.put.parameters[1].name": "fields",
	"paths./tasks/{TASK_ID}.put.parameters[1].required": false,
	"paths./tasks/{TASK_ID}.put.parameters[1].type": "string",
	"paths./tasks/{TASK_ID}.put.parameters[2].in": "body",
	"paths./tasks/{TASK_ID}.put.parameters[2].name": "body",
	"paths./tasks/{TASK_ID}.put.parameters[2].required": true,
	"paths./tasks/{TASK_ID}.put.parameters[2].schema.$ref": "#/definitions/Task",
	"paths./tasks/{TASK_ID}.put.responses.200.description": "The updated task object will be returned upon success.",
	"paths./tasks/{TASK_ID}.put.responses.200.examples.application/json.action": "review",
	"paths./tasks/{TASK_ID}.put.responses.200.examples.application/json.created_at": "2013-04-03T11:12:54-07:00",
	"paths./tasks/{TASK_ID}.put.responses.200.examples.application/json.created_by.id": "11993747",
	"paths./tasks/{TASK_ID}.put.responses.200.examples.application/json.created_by.login": "sean@box.com",
	"paths./tasks/{TASK_ID}.put.responses.200.examples.application/json.created_by.name": "☁ sean ☁",
	"paths./tasks/{TASK_ID}.put.responses.200.examples.application/json.created_by.type": "user",
	"paths./tasks/{TASK_ID}.put.responses.200.examples.application/json.due_at": "2014-04-03T11:09:43-07:00",
	"paths./tasks/{TASK_ID}.put.responses.200.examples.application/json.id": "1839355",
	"paths./tasks/{TASK_ID}.put.responses.200.examples.application/json.is_completed": false,
	"paths./tasks/{TASK_ID}.put.responses.200.examples.application/json.item.etag": "0",
	"paths./tasks/{TASK_ID}.put.responses.200.examples.application/json.item.id": "7287087200",
	"paths./tasks/{TASK_ID}.put.responses.200.examples.application/json.item.name": "box-logo.png",
	"paths./tasks/{TASK_ID}.put.responses.200.examples.application/json.item.sequence_id": "0",
	"paths./tasks/{TASK_ID}.put.responses.200.examples.application/json.item.sha1": "0bbd79a105c504f99573e3799756debba4c760cd",
	"paths./tasks/{TASK_ID}.put.responses.200.examples.application/json.item.type": "file",
	"paths./tasks/{TASK_ID}.put.responses.200.examples.application/json.message": "REVIEW PLZ K THX",
	"paths./tasks/{TASK_ID}.put.responses.200.examples.application/json.task_assignment_collection.entries.length": 0,
	"paths./tasks/{TASK_ID}.put.responses.200.examples.application/json.task_assignment_collection.total_count": 0,
	"paths./tasks/{TASK_ID}.put.responses.200.examples.application/json.type": "task",
	"paths./tasks/{TASK_ID}.put.responses.200.schema.$ref": "#/definitions/Task",
	"paths./tasks/{TASK_ID}.put.responses.default.description": "Update Task error",
	"paths./tasks/{TASK_ID}.put.responses.default.schema.$ref": "#/definitions/Error",
	"paths./tasks/{TASK_ID}.put.summary": "Update Task",
	"paths./tasks/{TASK_ID}.put.tags.length": 1,
	"paths./tasks/{TASK_ID}.put.tags[0]": "Tasks",
	"paths./tasks/{TASK_ID}/assignments.get.description": "Retrieves all of the assignments for a given task.",
	"paths./tasks/{TASK_ID}/assignments.get.externalDocs.url": "https://docs.box.com/reference#get-the-assignments-for-a-task",
	"paths./tasks/{TASK_ID}/assignments.get.operationId": "getTaskAssignments",
	"paths./tasks/{TASK_ID}/assignments.get.parameters.length": 2,
	"paths./tasks/{TASK_ID}/assignments.get.parameters[0].in": "path",
	"paths./tasks/{TASK_ID}/assignments.get.parameters[0].name": "TASK_ID",
	"paths./tasks/{TASK_ID}/assignments.get.parameters[0].required": true,
	"paths./tasks/{TASK_ID}/assignments.get.parameters[0].type": "string",
	"paths./tasks/{TASK_ID}/assignments.get.parameters[1].description": "Attribute(s) to include in the response",
	"paths./tasks/{TASK_ID}/assignments.get.parameters[1].in": "query",
	"paths./tasks/{TASK_ID}/assignments.get.parameters[1].name": "fields",
	"paths./tasks/{TASK_ID}/assignments.get.parameters[1].required": false,
	"paths./tasks/{TASK_ID}/assignments.get.parameters[1].type": "string",
	"paths./tasks/{TASK_ID}/assignments.get.responses.200.description": "A collection of task assignment mini objects will be returned upon success.",
	"paths./tasks/{TASK_ID}/assignments.get.responses.200.examples.application/json.entries.length": 1,
	"paths./tasks/{TASK_ID}/assignments.get.responses.200.examples.application/json.entries[0].assigned_to.id": "193425559",
	"paths./tasks/{TASK_ID}/assignments.get.responses.200.examples.application/json.entries[0].assigned_to.login": "rhaegar@box.com",
	"paths./tasks/{TASK_ID}/assignments.get.responses.200.examples.application/json.entries[0].assigned_to.name": "Rhaegar Targaryen",
	"paths./tasks/{TASK_ID}/assignments.get.responses.200.examples.application/json.entries[0].assigned_to.type": "user",
	"paths./tasks/{TASK_ID}/assignments.get.responses.200.examples.application/json.entries[0].id": "2485961",
	"paths./tasks/{TASK_ID}/assignments.get.responses.200.examples.application/json.entries[0].item.etag": "0",
	"paths./tasks/{TASK_ID}/assignments.get.responses.200.examples.application/json.entries[0].item.id": "7287087200",
	"paths./tasks/{TASK_ID}/assignments.get.responses.200.examples.application/json.entries[0].item.name": "box-logo.png",
	"paths./tasks/{TASK_ID}/assignments.get.responses.200.examples.application/json.entries[0].item.sequence_id": "0",
	"paths./tasks/{TASK_ID}/assignments.get.responses.200.examples.application/json.entries[0].item.sha1": "0bbd79a105c504f99573e3799756debba4c760cd",
	"paths./tasks/{TASK_ID}/assignments.get.responses.200.examples.application/json.entries[0].item.type": "file",
	"paths./tasks/{TASK_ID}/assignments.get.responses.200.examples.application/json.entries[0].type": "task_assignment",
	"paths./tasks/{TASK_ID}/assignments.get.responses.200.examples.application/json.total_count": 1,
	"paths./tasks/{TASK_ID}/assignments.get.responses.200.schema.$ref": "#/definitions/TaskAssignmentList",
	"paths./tasks/{TASK_ID}/assignments.get.responses.default.description": "Get Task assginments error",
	"paths./tasks/{TASK_ID}/assignments.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./tasks/{TASK_ID}/assignments.get.summary": "Get Assignments",
	"paths./tasks/{TASK_ID}/assignments.get.tags.length": 1,
	"paths./tasks/{TASK_ID}/assignments.get.tags[0]": "Tasks",
	"paths./users.get.description": "Returns a list of all users for the Enterprise along with their user_id, public_name, and login.",
	"paths./users.get.externalDocs.url": "https://docs.box.com/reference#get-all-users-in-an-enterprise",
	"paths./users.get.operationId": "getEnterpriseUsers",
	"paths./users.get.parameters.length": 5,
	"paths./users.get.parameters[0].description": "Attribute(s) to include in the response",
	"paths./users.get.parameters[0].in": "query",
	"paths./users.get.parameters[0].name": "fields",
	"paths./users.get.parameters[0].required": false,
	"paths./users.get.parameters[0].type": "string",
	"paths./users.get.parameters[1].description": "A string used to filter the results to only users starting with the filter_term in either the name or the login.",
	"paths./users.get.parameters[1].in": "query",
	"paths./users.get.parameters[1].name": "filter_term",
	"paths./users.get.parameters[1].required": false,
	"paths./users.get.parameters[1].type": "string",
	"paths./users.get.parameters[2].description": "The number of records to return. The default is 100 and the max is 1000.",
	"paths./users.get.parameters[2].format": "int64",
	"paths./users.get.parameters[2].in": "query",
	"paths./users.get.parameters[2].name": "limit",
	"paths./users.get.parameters[2].required": false,
	"paths./users.get.parameters[2].type": "integer",
	"paths./users.get.parameters[3].description": "The record at which to start. The default is 0.",
	"paths./users.get.parameters[3].format": "int64",
	"paths./users.get.parameters[3].in": "query",
	"paths./users.get.parameters[3].name": "offset",
	"paths./users.get.parameters[3].required": false,
	"paths./users.get.parameters[3].type": "integer",
	"paths./users.get.parameters[4].description": "The type of user to search for. Valid values are all, external or managed.  If nothing is provided, the default behavior will be managed only",
	"paths./users.get.parameters[4].enum.length": 3,
	"paths./users.get.parameters[4].enum[0]": "all",
	"paths./users.get.parameters[4].enum[1]": "external",
	"paths./users.get.parameters[4].enum[2]": "managed",
	"paths./users.get.parameters[4].in": "query",
	"paths./users.get.parameters[4].name": "user_type",
	"paths./users.get.parameters[4].required": false,
	"paths./users.get.parameters[4].type": "string",
	"paths./users.get.responses.200.description": "",
	"paths./users.get.responses.200.schema.$ref": "#/definitions/UserList",
	"paths./users.get.responses.default.description": "Get Enterprise users error",
	"paths./users.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./users.get.summary": "Get Enterprise Users",
	"paths./users.get.tags.length": 1,
	"paths./users.get.tags[0]": "Users",
	"paths./users.post.description": "Used to provision a new user in an enterprise. This method only works for enterprise admins.",
	"paths./users.post.externalDocs.url": "https://docs.box.com/reference#create-an-enterprise-user",
	"paths./users.post.operationId": "createUser",
	"paths./users.post.parameters.length": 2,
	"paths./users.post.parameters[0].description": "Attribute(s) to include in the response",
	"paths./users.post.parameters[0].in": "query",
	"paths./users.post.parameters[0].name": "fields",
	"paths./users.post.parameters[0].required": false,
	"paths./users.post.parameters[0].type": "string",
	"paths./users.post.parameters[1].in": "body",
	"paths./users.post.parameters[1].name": "body",
	"paths./users.post.parameters[1].required": true,
	"paths./users.post.parameters[1].schema.$ref": "#/definitions/User",
	"paths./users.post.responses.201.description": "Returns the full user object for the newly created user. Errors may be thrown when the fields are invalid or this API call is made from a non-admin account.",
	"paths./users.post.responses.201.examples.application/json.address": "555 Box Lane",
	"paths./users.post.responses.201.examples.application/json.avatar_url": "https://www.box.com/api/avatar/large/187273718",
	"paths./users.post.responses.201.examples.application/json.can_see_managed_users": true,
	"paths./users.post.responses.201.examples.application/json.created_at": "2012-11-15T16:34:28-08:00",
	"paths./users.post.responses.201.examples.application/json.id": "187273718",
	"paths./users.post.responses.201.examples.application/json.is_exempt_from_device_limits": false,
	"paths./users.post.responses.201.examples.application/json.is_exempt_from_login_verification": false,
	"paths./users.post.responses.201.examples.application/json.is_sync_enabled": true,
	"paths./users.post.responses.201.examples.application/json.job_title": "",
	"paths./users.post.responses.201.examples.application/json.language": "en",
	"paths./users.post.responses.201.examples.application/json.login": "eddard@box.com",
	"paths./users.post.responses.201.examples.application/json.max_upload_size": 2147483648,
	"paths./users.post.responses.201.examples.application/json.modified_at": "2012-11-15T16:34:29-08:00",
	"paths./users.post.responses.201.examples.application/json.name": "Ned Stark",
	"paths./users.post.responses.201.examples.application/json.phone": "555-555-5555",
	"paths./users.post.responses.201.examples.application/json.role": "user",
	"paths./users.post.responses.201.examples.application/json.space_amount": 5368709120,
	"paths./users.post.responses.201.examples.application/json.space_used": 0,
	"paths./users.post.responses.201.examples.application/json.status": "active",
	"paths./users.post.responses.201.examples.application/json.tracking_codes.length": 0,
	"paths./users.post.responses.201.examples.application/json.type": "user",
	"paths./users.post.responses.201.schema.$ref": "#/definitions/User",
	"paths./users.post.responses.default.description": "Create User error",
	"paths./users.post.responses.default.schema.$ref": "#/definitions/Error",
	"paths./users.post.summary": "Create User",
	"paths./users.post.tags.length": 1,
	"paths./users.post.tags[0]": "Users",
	"paths./users/me.get.description": "Retrieves information about the user who is currently logged in i.e. the user for whom this auth token was generated.",
	"paths./users/me.get.externalDocs.url": "https://docs.box.com/reference#get-the-current-users-information",
	"paths./users/me.get.operationId": "getCurrentUser",
	"paths./users/me.get.parameters.length": 1,
	"paths./users/me.get.parameters[0].description": "Attribute(s) to include in the response",
	"paths./users/me.get.parameters[0].in": "query",
	"paths./users/me.get.parameters[0].name": "fields",
	"paths./users/me.get.parameters[0].required": false,
	"paths./users/me.get.parameters[0].type": "string",
	"paths./users/me.get.responses.200.description": "Returns a single complete user object.",
	"paths./users/me.get.responses.200.examples.application/json.address": "555 Office Drive",
	"paths./users/me.get.responses.200.examples.application/json.avatar_url": "https://app.box.com/api/avatar/large/17738362",
	"paths./users/me.get.responses.200.examples.application/json.created_at": "2012-03-26T15:43:07-07:00",
	"paths./users/me.get.responses.200.examples.application/json.id": "17738362",
	"paths./users/me.get.responses.200.examples.application/json.job_title": "Employee",
	"paths./users/me.get.responses.200.examples.application/json.language": "en",
	"paths./users/me.get.responses.200.examples.application/json.login": "sean@box.com",
	"paths./users/me.get.responses.200.examples.application/json.max_upload_size": 262144000,
	"paths./users/me.get.responses.200.examples.application/json.modified_at": "2012-12-12T11:34:29-08:00",
	"paths./users/me.get.responses.200.examples.application/json.name": "sean rose",
	"paths./users/me.get.responses.200.examples.application/json.phone": "5555555555",
	"paths./users/me.get.responses.200.examples.application/json.space_amount": 5368709120,
	"paths./users/me.get.responses.200.examples.application/json.space_used": 2377016,
	"paths./users/me.get.responses.200.examples.application/json.status": "active",
	"paths./users/me.get.responses.200.examples.application/json.type": "user",
	"paths./users/me.get.responses.200.schema.$ref": "#/definitions/User",
	"paths./users/me.get.responses.default.description": "Get current user error",
	"paths./users/me.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./users/me.get.summary": "Get Current User",
	"paths./users/me.get.tags.length": 1,
	"paths./users/me.get.tags[0]": "Users",
	"paths./users/{USER_ID}.delete.description": "Deletes a user in an enterprise account.",
	"paths./users/{USER_ID}.delete.externalDocs.url": "https://docs.box.com/reference#delete-an-enterprise-user",
	"paths./users/{USER_ID}.delete.operationId": "deleteUser",
	"paths./users/{USER_ID}.delete.parameters.length": 3,
	"paths./users/{USER_ID}.delete.parameters[0].in": "path",
	"paths./users/{USER_ID}.delete.parameters[0].name": "USER_ID",
	"paths./users/{USER_ID}.delete.parameters[0].required": true,
	"paths./users/{USER_ID}.delete.parameters[0].type": "string",
	"paths./users/{USER_ID}.delete.parameters[1].in": "query",
	"paths./users/{USER_ID}.delete.parameters[1].name": "notify",
	"paths./users/{USER_ID}.delete.parameters[1].type": "boolean",
	"paths./users/{USER_ID}.delete.parameters[2].in": "query",
	"paths./users/{USER_ID}.delete.parameters[2].name": "force",
	"paths./users/{USER_ID}.delete.parameters[2].type": "boolean",
	"paths./users/{USER_ID}.delete.responses.204.description": "An empty 204 response is sent to confirm deletion of the user. If the user still has files in their account and the ‘force’ parameter is not sent, an error is returned.",
	"paths./users/{USER_ID}.delete.responses.default.description": "If the user still has files in their account and the ‘force’ parameter is not sent, an error is returned.",
	"paths./users/{USER_ID}.delete.responses.default.schema.$ref": "#/definitions/Error",
	"paths./users/{USER_ID}.delete.summary": "Delete User",
	"paths./users/{USER_ID}.delete.tags.length": 1,
	"paths./users/{USER_ID}.delete.tags[0]": "Users",
	"paths./users/{USER_ID}.get.description": "Retrieves information about a user in the enterprise. Requires enterprise administration authorization.",
	"paths./users/{USER_ID}.get.externalDocs.url": "https://docs.box.com/reference#users",
	"paths./users/{USER_ID}.get.operationId": "getUser",
	"paths./users/{USER_ID}.get.parameters.length": 2,
	"paths./users/{USER_ID}.get.parameters[0].in": "path",
	"paths./users/{USER_ID}.get.parameters[0].name": "USER_ID",
	"paths./users/{USER_ID}.get.parameters[0].required": true,
	"paths./users/{USER_ID}.get.parameters[0].type": "string",
	"paths./users/{USER_ID}.get.parameters[1].description": "Attribute(s) to include in the response",
	"paths./users/{USER_ID}.get.parameters[1].in": "query",
	"paths./users/{USER_ID}.get.parameters[1].name": "fields",
	"paths./users/{USER_ID}.get.parameters[1].required": false,
	"paths./users/{USER_ID}.get.parameters[1].type": "string",
	"paths./users/{USER_ID}.get.responses.200.description": "Returns a single complete user object. Note: The GET /users{id} endpoint also returns a limited set of information for external users who are collaborated on content owned by the enterprise for certain admin scopes/users. Disallowed fields will return null.",
	"paths./users/{USER_ID}.get.responses.200.examples.application/json.address": "",
	"paths./users/{USER_ID}.get.responses.200.examples.application/json.avatar_url": "https://blosserdemoaccount.app.box.com/api/avatar/large/10543465",
	"paths./users/{USER_ID}.get.responses.200.examples.application/json.created_at": "2011-01-07T12:37:09-08:00",
	"paths./users/{USER_ID}.get.responses.200.examples.application/json.id": "10543463",
	"paths./users/{USER_ID}.get.responses.200.examples.application/json.job_title": "",
	"paths./users/{USER_ID}.get.responses.200.examples.application/json.language": "en",
	"paths./users/{USER_ID}.get.responses.200.examples.application/json.login": "ariellefrey@box.com",
	"paths./users/{USER_ID}.get.responses.200.examples.application/json.max_upload_size": 5368709120,
	"paths./users/{USER_ID}.get.responses.200.examples.application/json.modified_at": "2014-05-30T10:39:47-07:00",
	"paths./users/{USER_ID}.get.responses.200.examples.application/json.name": "Arielle Frey",
	"paths./users/{USER_ID}.get.responses.200.examples.application/json.phone": "",
	"paths./users/{USER_ID}.get.responses.200.examples.application/json.space_amount": 10737418240,
	"paths./users/{USER_ID}.get.responses.200.examples.application/json.space_used": 558732,
	"paths./users/{USER_ID}.get.responses.200.examples.application/json.status": "active",
	"paths./users/{USER_ID}.get.responses.200.examples.application/json.timezone": "America/Los_Angeles",
	"paths./users/{USER_ID}.get.responses.200.examples.application/json.type": "user",
	"paths./users/{USER_ID}.get.responses.200.schema.$ref": "#/definitions/User",
	"paths./users/{USER_ID}.get.responses.default.description": "Get User info error",
	"paths./users/{USER_ID}.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./users/{USER_ID}.get.summary": "Get User's Info",
	"paths./users/{USER_ID}.get.tags.length": 1,
	"paths./users/{USER_ID}.get.tags[0]": "Users",
	"paths./users/{USER_ID}.put.description": "Used to edit the settings and information about a user. This method only works for enterprise admins. To roll a user out of the enterprise (and convert them to a standalone free user), update the special enterprise attribute to be null.\n\nUsed to convert one of the user’s confirmed email aliases into the user’s primary login.",
	"paths./users/{USER_ID}.put.externalDocs.url": "https://docs.box.com/reference#update-a-users-information",
	"paths./users/{USER_ID}.put.operationId": "updateUser",
	"paths./users/{USER_ID}.put.parameters.length": 3,
	"paths./users/{USER_ID}.put.parameters[0].in": "path",
	"paths./users/{USER_ID}.put.parameters[0].name": "USER_ID",
	"paths./users/{USER_ID}.put.parameters[0].required": true,
	"paths./users/{USER_ID}.put.parameters[0].type": "string",
	"paths./users/{USER_ID}.put.parameters[1].description": "Attribute(s) to include in the response",
	"paths./users/{USER_ID}.put.parameters[1].in": "query",
	"paths./users/{USER_ID}.put.parameters[1].name": "fields",
	"paths./users/{USER_ID}.put.parameters[1].required": false,
	"paths./users/{USER_ID}.put.parameters[1].type": "string",
	"paths./users/{USER_ID}.put.parameters[2].in": "body",
	"paths./users/{USER_ID}.put.parameters[2].name": "body",
	"paths./users/{USER_ID}.put.parameters[2].required": true,
	"paths./users/{USER_ID}.put.parameters[2].schema.$ref": "#/definitions/User",
	"paths./users/{USER_ID}.put.responses.200.description": "Returns the a full user object for the updated user. Errors may be thrown when the fields are invalid or this API call is made from a non-admin account.",
	"paths./users/{USER_ID}.put.responses.200.examples.application/json.address": "",
	"paths./users/{USER_ID}.put.responses.200.examples.application/json.avatar_url": "https://www.box.com/api/avatar/large/181216415",
	"paths./users/{USER_ID}.put.responses.200.examples.application/json.can_see_managed_users": true,
	"paths./users/{USER_ID}.put.responses.200.examples.application/json.created_at": "2012-05-03T21:39:11-07:00",
	"paths./users/{USER_ID}.put.responses.200.examples.application/json.id": "181216415",
	"paths./users/{USER_ID}.put.responses.200.examples.application/json.is_exempt_from_device_limits": false,
	"paths./users/{USER_ID}.put.responses.200.examples.application/json.is_exempt_from_login_verification": false,
	"paths./users/{USER_ID}.put.responses.200.examples.application/json.is_sync_enabled": true,
	"paths./users/{USER_ID}.put.responses.200.examples.application/json.job_title": "",
	"paths./users/{USER_ID}.put.responses.200.examples.application/json.language": "en",
	"paths./users/{USER_ID}.put.responses.200.examples.application/json.login": "sean+awesome@box.com",
	"paths./users/{USER_ID}.put.responses.200.examples.application/json.max_upload_size": 2147483648,
	"paths./users/{USER_ID}.put.responses.200.examples.application/json.modified_at": "2012-12-06T18:17:16-08:00",
	"paths./users/{USER_ID}.put.responses.200.examples.application/json.name": "sean",
	"paths./users/{USER_ID}.put.responses.200.examples.application/json.phone": "6509241374",
	"paths./users/{USER_ID}.put.responses.200.examples.application/json.role": "admin",
	"paths./users/{USER_ID}.put.responses.200.examples.application/json.space_amount": 5368709120,
	"paths./users/{USER_ID}.put.responses.200.examples.application/json.space_used": 1237179286,
	"paths./users/{USER_ID}.put.responses.200.examples.application/json.status": "active",
	"paths./users/{USER_ID}.put.responses.200.examples.application/json.tracking_codes.length": 0,
	"paths./users/{USER_ID}.put.responses.200.examples.application/json.type": "user",
	"paths./users/{USER_ID}.put.responses.200.schema.$ref": "#/definitions/User",
	"paths./users/{USER_ID}.put.responses.default.description": "Errors may be thrown when the fields are invalid or this API call is made from a non-admin account.",
	"paths./users/{USER_ID}.put.responses.default.schema.$ref": "#/definitions/Error",
	"paths./users/{USER_ID}.put.summary": "Update User, Change User's Login",
	"paths./users/{USER_ID}.put.tags.length": 1,
	"paths./users/{USER_ID}.put.tags[0]": "Users",
	"paths./users/{USER_ID}/email_aliases.get.description": "Retrieves all email aliases for this user. The collection of email aliases does not include the primary login for the user; use GET /users/USER_ID to retrieve the login email address.",
	"paths./users/{USER_ID}/email_aliases.get.externalDocs.url": "https://docs.box.com/reference#get-all-email-aliases-for-a-user",
	"paths./users/{USER_ID}/email_aliases.get.operationId": "getEmailAliases",
	"paths./users/{USER_ID}/email_aliases.get.parameters.length": 1,
	"paths./users/{USER_ID}/email_aliases.get.parameters[0].in": "path",
	"paths./users/{USER_ID}/email_aliases.get.parameters[0].name": "USER_ID",
	"paths./users/{USER_ID}/email_aliases.get.parameters[0].required": true,
	"paths./users/{USER_ID}/email_aliases.get.parameters[0].type": "string",
	"paths./users/{USER_ID}/email_aliases.get.responses.200.description": "If the user_id is valid a collection of email aliases will be returned.",
	"paths./users/{USER_ID}/email_aliases.get.responses.200.schema.$ref": "#/definitions/EmailAliasList",
	"paths./users/{USER_ID}/email_aliases.get.responses.default.description": "Get Email alias error",
	"paths./users/{USER_ID}/email_aliases.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./users/{USER_ID}/email_aliases.get.summary": "Get Email Aliases",
	"paths./users/{USER_ID}/email_aliases.get.tags.length": 1,
	"paths./users/{USER_ID}/email_aliases.get.tags[0]": "Users",
	"paths./users/{USER_ID}/email_aliases.post.description": "Adds a new email alias to the given user’s account.",
	"paths./users/{USER_ID}/email_aliases.post.externalDocs.url": "https://docs.box.com/reference#add-an-email-alias-for-a-user",
	"paths./users/{USER_ID}/email_aliases.post.operationId": "addEmailAlias",
	"paths./users/{USER_ID}/email_aliases.post.parameters.length": 2,
	"paths./users/{USER_ID}/email_aliases.post.parameters[0].in": "path",
	"paths./users/{USER_ID}/email_aliases.post.parameters[0].name": "USER_ID",
	"paths./users/{USER_ID}/email_aliases.post.parameters[0].required": true,
	"paths./users/{USER_ID}/email_aliases.post.parameters[0].type": "string",
	"paths./users/{USER_ID}/email_aliases.post.parameters[1].in": "body",
	"paths./users/{USER_ID}/email_aliases.post.parameters[1].name": "body",
	"paths./users/{USER_ID}/email_aliases.post.parameters[1].required": true,
	"paths./users/{USER_ID}/email_aliases.post.parameters[1].schema.$ref": "#/definitions/EmailAlias",
	"paths./users/{USER_ID}/email_aliases.post.responses.201.description": "Returns the newly created email_alias object.",
	"paths./users/{USER_ID}/email_aliases.post.responses.201.schema.$ref": "#/definitions/EmailAlias",
	"paths./users/{USER_ID}/email_aliases.post.responses.default.description": "Errors will be thrown if the user_id is not valid or the particular user’s email alias cannot be modified.",
	"paths./users/{USER_ID}/email_aliases.post.responses.default.schema.$ref": "#/definitions/Error",
	"paths./users/{USER_ID}/email_aliases.post.summary": "Add Email Alias",
	"paths./users/{USER_ID}/email_aliases.post.tags.length": 1,
	"paths./users/{USER_ID}/email_aliases.post.tags[0]": "Users",
	"paths./users/{USER_ID}/email_aliases/{EMAIL_ALIAS_ID}.delete.description": "Removes an email alias from a user.",
	"paths./users/{USER_ID}/email_aliases/{EMAIL_ALIAS_ID}.delete.externalDocs.url": "https://docs.box.com/reference#remove-an-email-alias-from-a-user",
	"paths./users/{USER_ID}/email_aliases/{EMAIL_ALIAS_ID}.delete.operationId": "deleteUserEmailAlias",
	"paths./users/{USER_ID}/email_aliases/{EMAIL_ALIAS_ID}.delete.parameters.length": 2,
	"paths./users/{USER_ID}/email_aliases/{EMAIL_ALIAS_ID}.delete.parameters[0].in": "path",
	"paths./users/{USER_ID}/email_aliases/{EMAIL_ALIAS_ID}.delete.parameters[0].name": "USER_ID",
	"paths./users/{USER_ID}/email_aliases/{EMAIL_ALIAS_ID}.delete.parameters[0].required": true,
	"paths./users/{USER_ID}/email_aliases/{EMAIL_ALIAS_ID}.delete.parameters[0].type": "string",
	"paths./users/{USER_ID}/email_aliases/{EMAIL_ALIAS_ID}.delete.parameters[1].in": "path",
	"paths./users/{USER_ID}/email_aliases/{EMAIL_ALIAS_ID}.delete.parameters[1].name": "EMAIL_ALIAS_ID",
	"paths./users/{USER_ID}/email_aliases/{EMAIL_ALIAS_ID}.delete.parameters[1].required": true,
	"paths./users/{USER_ID}/email_aliases/{EMAIL_ALIAS_ID}.delete.parameters[1].type": "string",
	"paths./users/{USER_ID}/email_aliases/{EMAIL_ALIAS_ID}.delete.responses.204.description": "If the user has permission to remove this email alias, an empty 204 No Content response will be returned to confirm deletion.",
	"paths./users/{USER_ID}/email_aliases/{EMAIL_ALIAS_ID}.delete.responses.default.description": "Delete Email alias error",
	"paths./users/{USER_ID}/email_aliases/{EMAIL_ALIAS_ID}.delete.responses.default.schema.$ref": "#/definitions/Error",
	"paths./users/{USER_ID}/email_aliases/{EMAIL_ALIAS_ID}.delete.summary": "Delete Email Alias",
	"paths./users/{USER_ID}/email_aliases/{EMAIL_ALIAS_ID}.delete.tags.length": 1,
	"paths./users/{USER_ID}/email_aliases/{EMAIL_ALIAS_ID}.delete.tags[0]": "Users",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.description": "Moves all of the owned content from within one user’s folder into a new folder in another user’s account. You can move folders across users as long as the you have administrative permissions and the ‘source’ user owns the folders. To move everything from the root folder, use “0” which always represents the root folder of a Box account.",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.externalDocs.url": "https://docs.box.com/reference#move-folder-into-another-users-folder",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.operationId": "updateUserFolder",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.parameters.length": 5,
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.parameters[0].in": "path",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.parameters[0].name": "USER_ID",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.parameters[0].required": true,
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.parameters[0].type": "string",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.parameters[1].in": "path",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.parameters[1].name": "FOLDER_ID",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.parameters[1].required": true,
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.parameters[1].type": "string",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.parameters[2].in": "query",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.parameters[2].name": "notify",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.parameters[2].required": false,
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.parameters[2].type": "boolean",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.parameters[3].description": "Attribute(s) to include in the response",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.parameters[3].in": "query",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.parameters[3].name": "fields",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.parameters[3].required": false,
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.parameters[3].type": "string",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.parameters[4].in": "body",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.parameters[4].name": "body",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.parameters[4].required": true,
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.parameters[4].schema.$ref": "#/definitions/Folder",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.description": "Returns the information for the newly created destination folder.. An error is thrown if you do not have the necessary permissions to move the folder.",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.created_at": "2012-12-12T10:53:43-08:00",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.created_by.id": "17738362",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.created_by.login": "sean@box.com",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.created_by.name": "sean rose",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.created_by.type": "user",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.description": "Some pictures I took",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.etag": "1",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.folder_upload_email.access": "open",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.folder_upload_email.email": "upload.Picture.k13sdz1@u.box.com",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.id": "11446498",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.item_collection.entries.length": 1,
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.item_collection.entries[0].etag": "3",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.item_collection.entries[0].id": "5000948880",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.item_collection.entries[0].name": "tigers.jpeg",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.item_collection.entries[0].sequence_id": "3",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.item_collection.entries[0].sha1": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.item_collection.entries[0].type": "file",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.item_collection.limit": 100,
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.item_collection.offset": 0,
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.item_collection.total_count": 1,
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.item_status": "active",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.modified_at": "2012-12-12T11:15:04-08:00",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.modified_by.id": "17738362",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.modified_by.login": "sean@box.com",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.modified_by.name": "sean rose",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.modified_by.type": "user",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.name": "Pictures",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.owned_by.id": "17738362",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.owned_by.login": "sean@box.com",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.owned_by.name": "sean rose",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.owned_by.type": "user",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.parent.id": "0",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.parent.name": "All Files",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.parent.type": "folder",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.path_collection.entries.length": 1,
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.path_collection.entries[0].id": "0",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.path_collection.entries[0].name": "All Files",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.path_collection.entries[0].type": "folder",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.path_collection.total_count": 1,
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.sequence_id": "1",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.shared_link.access": "open",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.shared_link.download_count": 0,
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.shared_link.is_password_enabled": false,
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.shared_link.permissions.can_download": true,
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.shared_link.permissions.can_preview": true,
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.shared_link.preview_count": 0,
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.shared_link.url": "https://www.box.com/s/vspke7y05sb214wjokpk",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.size": 629644,
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.examples.application/json.type": "folder",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.200.schema.$ref": "#/definitions/Folder",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.default.description": "An error is thrown if you do not have the necessary permissions to move the folder.",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.responses.default.schema.$ref": "#/definitions/Error",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.summary": "Move User's Folder",
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.tags.length": 1,
	"paths./users/{USER_ID}/folders/{FOLDER_ID}.put.tags[0]": "Users",
	"paths./users/{USER_ID}/memberships.get.description": "Retrieves all of the group memberships for a given user. Note this is only available to group admins. To retrieve group memberships for the user making the API request, use the users/me/memberships endpoint.",
	"paths./users/{USER_ID}/memberships.get.externalDocs.url": "https://docs.box.com/reference#get-all-group-memberships-for-a-user",
	"paths./users/{USER_ID}/memberships.get.operationId": "getUserGroupMembership",
	"paths./users/{USER_ID}/memberships.get.parameters.length": 4,
	"paths./users/{USER_ID}/memberships.get.parameters[0].in": "path",
	"paths./users/{USER_ID}/memberships.get.parameters[0].name": "USER_ID",
	"paths./users/{USER_ID}/memberships.get.parameters[0].required": true,
	"paths./users/{USER_ID}/memberships.get.parameters[0].type": "string",
	"paths./users/{USER_ID}/memberships.get.parameters[1].description": "Attribute(s) to include in the response",
	"paths./users/{USER_ID}/memberships.get.parameters[1].in": "query",
	"paths./users/{USER_ID}/memberships.get.parameters[1].name": "fields",
	"paths./users/{USER_ID}/memberships.get.parameters[1].required": false,
	"paths./users/{USER_ID}/memberships.get.parameters[1].type": "string",
	"paths./users/{USER_ID}/memberships.get.parameters[2].description": "Default is 100. Max is 1000",
	"paths./users/{USER_ID}/memberships.get.parameters[2].format": "int64",
	"paths./users/{USER_ID}/memberships.get.parameters[2].in": "query",
	"paths./users/{USER_ID}/memberships.get.parameters[2].name": "limit",
	"paths./users/{USER_ID}/memberships.get.parameters[2].required": false,
	"paths./users/{USER_ID}/memberships.get.parameters[2].type": "integer",
	"paths./users/{USER_ID}/memberships.get.parameters[3].description": "The item at which to begin the response",
	"paths./users/{USER_ID}/memberships.get.parameters[3].format": "int64",
	"paths./users/{USER_ID}/memberships.get.parameters[3].in": "query",
	"paths./users/{USER_ID}/memberships.get.parameters[3].name": "offset",
	"paths./users/{USER_ID}/memberships.get.parameters[3].required": false,
	"paths./users/{USER_ID}/memberships.get.parameters[3].type": "integer",
	"paths./users/{USER_ID}/memberships.get.responses.200.description": "",
	"paths./users/{USER_ID}/memberships.get.responses.200.examples.application/json.entries.length": 2,
	"paths./users/{USER_ID}/memberships.get.responses.200.examples.application/json.entries[0].group.id": "119720",
	"paths./users/{USER_ID}/memberships.get.responses.200.examples.application/json.entries[0].group.name": "family",
	"paths./users/{USER_ID}/memberships.get.responses.200.examples.application/json.entries[0].group.type": "group",
	"paths./users/{USER_ID}/memberships.get.responses.200.examples.application/json.entries[0].id": "1560354",
	"paths./users/{USER_ID}/memberships.get.responses.200.examples.application/json.entries[0].role": "member",
	"paths./users/{USER_ID}/memberships.get.responses.200.examples.application/json.entries[0].type": "group_membership",
	"paths./users/{USER_ID}/memberships.get.responses.200.examples.application/json.entries[0].user.id": "13130906",
	"paths./users/{USER_ID}/memberships.get.responses.200.examples.application/json.entries[0].user.login": "alice@gmail.com",
	"paths./users/{USER_ID}/memberships.get.responses.200.examples.application/json.entries[0].user.name": "Alice",
	"paths./users/{USER_ID}/memberships.get.responses.200.examples.application/json.entries[0].user.type": "user",
	"paths./users/{USER_ID}/memberships.get.responses.200.examples.application/json.entries[1].group.id": "119720",
	"paths./users/{USER_ID}/memberships.get.responses.200.examples.application/json.entries[1].group.name": "family",
	"paths./users/{USER_ID}/memberships.get.responses.200.examples.application/json.entries[1].group.type": "group",
	"paths./users/{USER_ID}/memberships.get.responses.200.examples.application/json.entries[1].id": "1560356",
	"paths./users/{USER_ID}/memberships.get.responses.200.examples.application/json.entries[1].role": "member",
	"paths./users/{USER_ID}/memberships.get.responses.200.examples.application/json.entries[1].type": "group_membership",
	"paths./users/{USER_ID}/memberships.get.responses.200.examples.application/json.entries[1].user.id": "192633962",
	"paths./users/{USER_ID}/memberships.get.responses.200.examples.application/json.entries[1].user.login": "rabbit@gmail.com",
	"paths./users/{USER_ID}/memberships.get.responses.200.examples.application/json.entries[1].user.name": "rabbit",
	"paths./users/{USER_ID}/memberships.get.responses.200.examples.application/json.entries[1].user.type": "user",
	"paths./users/{USER_ID}/memberships.get.responses.200.examples.application/json.limit": 100,
	"paths./users/{USER_ID}/memberships.get.responses.200.examples.application/json.offset": 0,
	"paths./users/{USER_ID}/memberships.get.responses.200.examples.application/json.total_count": 2,
	"paths./users/{USER_ID}/memberships.get.responses.200.schema.$ref": "#/definitions/GroupMembershipList",
	"paths./users/{USER_ID}/memberships.get.responses.default.description": "Get user membership error",
	"paths./users/{USER_ID}/memberships.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./users/{USER_ID}/memberships.get.summary": "Get Memberships for User",
	"paths./users/{USER_ID}/memberships.get.tags.length": 1,
	"paths./users/{USER_ID}/memberships.get.tags[0]": "Users",
	"paths./web_links.post.description": "Creates a web link object within a given folder.",
	"paths./web_links.post.externalDocs.url": "https://docs.box.com/reference#create-web-link",
	"paths./web_links.post.operationId": "createWebLink",
	"paths./web_links.post.parameters.length": 1,
	"paths./web_links.post.parameters[0].in": "body",
	"paths./web_links.post.parameters[0].name": "body",
	"paths./web_links.post.parameters[0].required": true,
	"paths./web_links.post.parameters[0].schema.$ref": "#/definitions/WebLink",
	"paths./web_links.post.responses.200.description": "Created Web link object",
	"paths./web_links.post.responses.200.examples.application/json.created_at": "2015-05-07T15:00:01-07:00",
	"paths./web_links.post.responses.200.examples.application/json.created_by.id": "10523870",
	"paths./web_links.post.responses.200.examples.application/json.created_by.login": "ted+demo@box.com",
	"paths./web_links.post.responses.200.examples.application/json.created_by.name": "Ted Blosser",
	"paths./web_links.post.responses.200.examples.application/json.created_by.type": "user",
	"paths./web_links.post.responses.200.examples.application/json.description": "Cloud Content Management",
	"paths./web_links.post.responses.200.examples.application/json.etag": "0",
	"paths./web_links.post.responses.200.examples.application/json.id": "6743065",
	"paths./web_links.post.responses.200.examples.application/json.item_status": "active",
	"paths./web_links.post.responses.200.examples.application/json.modified_at": "2015-05-07T15:00:01-07:00",
	"paths./web_links.post.responses.200.examples.application/json.modified_by.id": "10523870",
	"paths./web_links.post.responses.200.examples.application/json.modified_by.login": "ted+demo@box.com",
	"paths./web_links.post.responses.200.examples.application/json.modified_by.name": "Ted Blosser",
	"paths./web_links.post.responses.200.examples.application/json.modified_by.type": "user",
	"paths./web_links.post.responses.200.examples.application/json.name": "Box Website!",
	"paths./web_links.post.responses.200.examples.application/json.owned_by.id": "10523870",
	"paths./web_links.post.responses.200.examples.application/json.owned_by.login": "ted+demo@box.com",
	"paths./web_links.post.responses.200.examples.application/json.owned_by.name": "Ted Blosser",
	"paths./web_links.post.responses.200.examples.application/json.owned_by.type": "user",
	"paths./web_links.post.responses.200.examples.application/json.parent.etag": "1",
	"paths./web_links.post.responses.200.examples.application/json.parent.id": "848123342",
	"paths./web_links.post.responses.200.examples.application/json.parent.name": "Documentation",
	"paths./web_links.post.responses.200.examples.application/json.parent.sequence_id": "1",
	"paths./web_links.post.responses.200.examples.application/json.parent.type": "folder",
	"paths./web_links.post.responses.200.examples.application/json.path_collection.entries.length": 2,
	"paths./web_links.post.responses.200.examples.application/json.path_collection.entries[0].id": "0",
	"paths./web_links.post.responses.200.examples.application/json.path_collection.entries[0].name": "All Files",
	"paths./web_links.post.responses.200.examples.application/json.path_collection.entries[0].type": "folder",
	"paths./web_links.post.responses.200.examples.application/json.path_collection.entries[1].etag": "1",
	"paths./web_links.post.responses.200.examples.application/json.path_collection.entries[1].id": "848123342",
	"paths./web_links.post.responses.200.examples.application/json.path_collection.entries[1].name": "Documentation",
	"paths./web_links.post.responses.200.examples.application/json.path_collection.entries[1].sequence_id": "1",
	"paths./web_links.post.responses.200.examples.application/json.path_collection.entries[1].type": "folder",
	"paths./web_links.post.responses.200.examples.application/json.path_collection.total_count": 2,
	"paths./web_links.post.responses.200.examples.application/json.sequence_id": "0",
	"paths./web_links.post.responses.200.examples.application/json.type": "web_link",
	"paths./web_links.post.responses.200.examples.application/json.url": "https://www.box.com",
	"paths./web_links.post.responses.200.schema.$ref": "#/definitions/WebLink",
	"paths./web_links.post.responses.default.description": "Create Web link error",
	"paths./web_links.post.responses.default.schema.$ref": "#/definitions/Error",
	"paths./web_links.post.summary": "Create Web Link",
	"paths./web_links.post.tags.length": 1,
	"paths./web_links.post.tags[0]": "Web Links",
	"paths./web_links/{WEB_LINK_ID}.delete.description": "Deletes a web link and moves it to the trash",
	"paths./web_links/{WEB_LINK_ID}.delete.externalDocs.url": "https://docs.box.com/reference#delete-web-link",
	"paths./web_links/{WEB_LINK_ID}.delete.operationId": "deleteWebLink",
	"paths./web_links/{WEB_LINK_ID}.delete.parameters.length": 1,
	"paths./web_links/{WEB_LINK_ID}.delete.parameters[0].in": "path",
	"paths./web_links/{WEB_LINK_ID}.delete.parameters[0].name": "WEB_LINK_ID",
	"paths./web_links/{WEB_LINK_ID}.delete.parameters[0].required": true,
	"paths./web_links/{WEB_LINK_ID}.delete.parameters[0].type": "string",
	"paths./web_links/{WEB_LINK_ID}.delete.responses.204.description": "An empty 204 response if successfully deleted and moved to trash.",
	"paths./web_links/{WEB_LINK_ID}.delete.responses.default.description": "Delete web link error",
	"paths./web_links/{WEB_LINK_ID}.delete.responses.default.schema.$ref": "#/definitions/Error",
	"paths./web_links/{WEB_LINK_ID}.delete.summary": "Delete Web Link",
	"paths./web_links/{WEB_LINK_ID}.delete.tags.length": 1,
	"paths./web_links/{WEB_LINK_ID}.delete.tags[0]": "Web Links",
	"paths./web_links/{WEB_LINK_ID}.get.description": "Use to get information about the web link.",
	"paths./web_links/{WEB_LINK_ID}.get.externalDocs.url": "https://docs.box.com/reference#get-web-link",
	"paths./web_links/{WEB_LINK_ID}.get.operationId": "getWebLink",
	"paths./web_links/{WEB_LINK_ID}.get.parameters.length": 2,
	"paths./web_links/{WEB_LINK_ID}.get.parameters[0].in": "path",
	"paths./web_links/{WEB_LINK_ID}.get.parameters[0].name": "WEB_LINK_ID",
	"paths./web_links/{WEB_LINK_ID}.get.parameters[0].required": true,
	"paths./web_links/{WEB_LINK_ID}.get.parameters[0].type": "string",
	"paths./web_links/{WEB_LINK_ID}.get.parameters[1].description": "Attribute(s) to include in the response",
	"paths./web_links/{WEB_LINK_ID}.get.parameters[1].in": "query",
	"paths./web_links/{WEB_LINK_ID}.get.parameters[1].name": "fields",
	"paths./web_links/{WEB_LINK_ID}.get.parameters[1].required": false,
	"paths./web_links/{WEB_LINK_ID}.get.parameters[1].type": "string",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.description": "The web link object is returned.",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.created_at": "2015-05-07T14:31:16-07:00",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.created_by.id": "10523870",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.created_by.login": "ted+demo@box.com",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.created_by.name": "Ted Blosser",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.created_by.type": "user",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.description": "Cloud Content Management",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.etag": "0",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.id": "6742981",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.item_status": "active",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.modified_at": "2015-05-07T14:31:16-07:00",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.modified_by.id": "10523870",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.modified_by.login": "ted+demo@box.com",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.modified_by.name": "Ted Blosser",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.modified_by.type": "user",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.name": "Box Website",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.owned_by.id": "10523870",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.owned_by.login": "ted+demo@box.com",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.owned_by.name": "Ted Blosser",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.owned_by.type": "user",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.parent.etag": "1",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.parent.id": "848123342",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.parent.name": "Documentation",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.parent.sequence_id": "1",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.parent.type": "folder",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.path_collection.entries.length": 2,
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.path_collection.entries[0].id": "0",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.path_collection.entries[0].name": "All Files",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.path_collection.entries[0].type": "folder",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.path_collection.entries[1].etag": "1",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.path_collection.entries[1].id": "848123342",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.path_collection.entries[1].name": "Documentation",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.path_collection.entries[1].sequence_id": "1",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.path_collection.entries[1].type": "folder",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.path_collection.total_count": 2,
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.sequence_id": "0",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.type": "web_link",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.examples.application/json.url": "https://www.box.com",
	"paths./web_links/{WEB_LINK_ID}.get.responses.200.schema.$ref": "#/definitions/WebLink",
	"paths./web_links/{WEB_LINK_ID}.get.responses.default.description": "Get web link error",
	"paths./web_links/{WEB_LINK_ID}.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./web_links/{WEB_LINK_ID}.get.summary": "Get Web Link",
	"paths./web_links/{WEB_LINK_ID}.get.tags.length": 1,
	"paths./web_links/{WEB_LINK_ID}.get.tags[0]": "Web Links",
	"paths./web_links/{WEB_LINK_ID}.put.description": "Updates information for a web link.",
	"paths./web_links/{WEB_LINK_ID}.put.externalDocs.url": "https://docs.box.com/reference#update-web-link",
	"paths./web_links/{WEB_LINK_ID}.put.operationId": "updateWebLink",
	"paths./web_links/{WEB_LINK_ID}.put.parameters.length": 3,
	"paths./web_links/{WEB_LINK_ID}.put.parameters[0].in": "path",
	"paths./web_links/{WEB_LINK_ID}.put.parameters[0].name": "WEB_LINK_ID",
	"paths./web_links/{WEB_LINK_ID}.put.parameters[0].required": true,
	"paths./web_links/{WEB_LINK_ID}.put.parameters[0].type": "string",
	"paths./web_links/{WEB_LINK_ID}.put.parameters[1].description": "Attribute(s) to include in the response",
	"paths./web_links/{WEB_LINK_ID}.put.parameters[1].in": "query",
	"paths./web_links/{WEB_LINK_ID}.put.parameters[1].name": "fields",
	"paths./web_links/{WEB_LINK_ID}.put.parameters[1].required": false,
	"paths./web_links/{WEB_LINK_ID}.put.parameters[1].type": "string",
	"paths./web_links/{WEB_LINK_ID}.put.parameters[2].in": "body",
	"paths./web_links/{WEB_LINK_ID}.put.parameters[2].name": "body",
	"paths./web_links/{WEB_LINK_ID}.put.parameters[2].required": true,
	"paths./web_links/{WEB_LINK_ID}.put.parameters[2].schema.$ref": "#/definitions/WebLink",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.description": "An updated web link object if the update was successful.",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.created_at": "2015-05-07T14:31:16-07:00",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.created_by.id": "10523870",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.created_by.login": "ted+demo@box.com",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.created_by.name": "Ted Blosser",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.created_by.type": "user",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.description": "Cloud Content Management",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.etag": "2",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.id": "6742981",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.item_status": "active",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.modified_at": "2015-05-07T15:45:04-07:00",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.modified_by.id": "10523870",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.modified_by.login": "ted+demo@box.com",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.modified_by.name": "Ted Blosser",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.modified_by.type": "user",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.name": "Box Marketing Web Page",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.owned_by.id": "10523870",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.owned_by.login": "ted+demo@box.com",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.owned_by.name": "Ted Blosser",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.owned_by.type": "user",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.parent.etag": "1",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.parent.id": "848123342",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.parent.name": "Documentation",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.parent.sequence_id": "1",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.parent.type": "folder",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.path_collection.entries.length": 2,
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.path_collection.entries[0].id": "0",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.path_collection.entries[0].name": "All Files",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.path_collection.entries[0].type": "folder",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.path_collection.entries[1].etag": "1",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.path_collection.entries[1].id": "848123342",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.path_collection.entries[1].name": "Documentation",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.path_collection.entries[1].sequence_id": "1",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.path_collection.entries[1].type": "folder",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.path_collection.total_count": 2,
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.sequence_id": "2",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.type": "web_link",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.examples.application/json.url": "https://www.box.com",
	"paths./web_links/{WEB_LINK_ID}.put.responses.200.schema.$ref": "#/definitions/WebLink",
	"paths./web_links/{WEB_LINK_ID}.put.responses.default.description": "Update Web link error",
	"paths./web_links/{WEB_LINK_ID}.put.responses.default.schema.$ref": "#/definitions/Error",
	"paths./web_links/{WEB_LINK_ID}.put.summary": "Update Web Link",
	"paths./web_links/{WEB_LINK_ID}.put.tags.length": 1,
	"paths./web_links/{WEB_LINK_ID}.put.tags[0]": "Web Links",
	"paths./webhooks.get.description": "Returns all defined webhooks for the requesting application and user, up to the limit. If no limit is supplied then Box uses the default limit of 100.\nIf more than limit webhooks are defined then Box returns the webhooks in batches. When the results are batched, Box sends limit webhooks along with a next_marker field in the response object. The value of the next_marker field is a marker string that you can use in later requests to tell Box which batch to send next.\nWhen you send a request that includes a marker string, Box sends the next batch of webhooks, beginning after the last webhook of the previous batch. When the response contains the last of the defined webhooks, Box omits the next_marker field from its response.\nYou can use limit and marker together with the marker string returned in the next_marker field to paginate lists of webhooks.",
	"paths./webhooks.get.externalDocs.url": "https://docs.box.com/reference#get-webhooks",
	"paths./webhooks.get.operationId": "getWebhooks",
	"paths./webhooks.get.parameters.length": 2,
	"paths./webhooks.get.parameters[0].description": "The maximum number of webhooks to return per page",
	"paths./webhooks.get.parameters[0].format": "int64",
	"paths./webhooks.get.parameters[0].in": "query",
	"paths./webhooks.get.parameters[0].name": "limit",
	"paths./webhooks.get.parameters[0].required": false,
	"paths./webhooks.get.parameters[0].type": "integer",
	"paths./webhooks.get.parameters[1].description": "A marker string returned by Box if the result contains less than the full number of webhooks that are defined",
	"paths./webhooks.get.parameters[1].in": "query",
	"paths./webhooks.get.parameters[1].name": "marker",
	"paths./webhooks.get.parameters[1].required": false,
	"paths./webhooks.get.parameters[1].type": "string",
	"paths./webhooks.get.responses.200.description": "A collection of webhooks.",
	"paths./webhooks.get.responses.200.examples.application/json.entries.length": 2,
	"paths./webhooks.get.responses.200.examples.application/json.entries[0].id": "4161",
	"paths./webhooks.get.responses.200.examples.application/json.entries[0].target.id": "5018326685",
	"paths./webhooks.get.responses.200.examples.application/json.entries[0].target.type": "folder",
	"paths./webhooks.get.responses.200.examples.application/json.entries[0].type": "webhook",
	"paths./webhooks.get.responses.200.examples.application/json.entries[1].id": "4165",
	"paths./webhooks.get.responses.200.examples.application/json.entries[1].target.id": "5016243669",
	"paths./webhooks.get.responses.200.examples.application/json.entries[1].target.type": "file",
	"paths./webhooks.get.responses.200.examples.application/json.entries[1].type": "webhook",
	"paths./webhooks.get.responses.200.examples.application/json.limit": 3,
	"paths./webhooks.get.responses.200.schema.$ref": "#/definitions/WebhookList",
	"paths./webhooks.get.responses.403.description": "Insufficient permissions",
	"paths./webhooks.get.responses.403.schema.$ref": "#/definitions/Error",
	"paths./webhooks.get.responses.default.description": "Create webhook error",
	"paths./webhooks.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./webhooks.get.summary": "Get Webhooks",
	"paths./webhooks.get.tags.length": 1,
	"paths./webhooks.get.tags[0]": "Webhooks",
	"paths./webhooks.post.description": "Create Webhook",
	"paths./webhooks.post.externalDocs.url": "https://docs.box.com/reference#create-webhook",
	"paths./webhooks.post.operationId": "createWebhook",
	"paths./webhooks.post.parameters.length": 1,
	"paths./webhooks.post.parameters[0].in": "body",
	"paths./webhooks.post.parameters[0].name": "body",
	"paths./webhooks.post.parameters[0].required": true,
	"paths./webhooks.post.parameters[0].schema.$ref": "#/definitions/Webhook",
	"paths./webhooks.post.responses.201.description": "Returns a webhook object if creation succeeds",
	"paths./webhooks.post.responses.201.examples.application/json.address": "https://example.net/actions/file_changed",
	"paths./webhooks.post.responses.201.examples.application/json.created_at": "2016-05-09T17:41:27-07:00",
	"paths./webhooks.post.responses.201.examples.application/json.created_by.id": "2030392653",
	"paths./webhooks.post.responses.201.examples.application/json.created_by.login": "johnq@example.net",
	"paths./webhooks.post.responses.201.examples.application/json.created_by.name": "John Q. Developer",
	"paths./webhooks.post.responses.201.examples.application/json.created_by.type": "user",
	"paths./webhooks.post.responses.201.examples.application/json.id": "4165",
	"paths./webhooks.post.responses.201.examples.application/json.target.id": "5016243669",
	"paths./webhooks.post.responses.201.examples.application/json.target.type": "file",
	"paths./webhooks.post.responses.201.examples.application/json.triggers.length": 2,
	"paths./webhooks.post.responses.201.examples.application/json.triggers[0]": "FILE.DOWNLOADED",
	"paths./webhooks.post.responses.201.examples.application/json.triggers[1]": "FILE.PREVIEWED",
	"paths./webhooks.post.responses.201.examples.application/json.type": "webhook",
	"paths./webhooks.post.responses.201.schema.$ref": "#/definitions/Webhook",
	"paths./webhooks.post.responses.400.description": "Bad request",
	"paths./webhooks.post.responses.400.schema.$ref": "#/definitions/Error",
	"paths./webhooks.post.responses.403.description": "Insufficient permissions",
	"paths./webhooks.post.responses.403.schema.$ref": "#/definitions/Error",
	"paths./webhooks.post.responses.404.description": "Target could not be found",
	"paths./webhooks.post.responses.404.schema.$ref": "#/definitions/Error",
	"paths./webhooks.post.responses.409.description": "Webhook already exists",
	"paths./webhooks.post.responses.409.schema.$ref": "#/definitions/Error",
	"paths./webhooks.post.responses.default.description": "Create webhook error",
	"paths./webhooks.post.responses.default.schema.$ref": "#/definitions/Error",
	"paths./webhooks.post.summary": "Create Webhook",
	"paths./webhooks.post.tags.length": 1,
	"paths./webhooks.post.tags[0]": "Webhooks",
	"paths./webhooks/{WEBHOOK_ID}.delete.description": "Permanently deletes a webhook",
	"paths./webhooks/{WEBHOOK_ID}.delete.externalDocs.url": "https://docs.box.com/reference#delete-webhook",
	"paths./webhooks/{WEBHOOK_ID}.delete.operationId": "deleteWebhook",
	"paths./webhooks/{WEBHOOK_ID}.delete.parameters.length": 1,
	"paths./webhooks/{WEBHOOK_ID}.delete.parameters[0].in": "path",
	"paths./webhooks/{WEBHOOK_ID}.delete.parameters[0].name": "WEBHOOK_ID",
	"paths./webhooks/{WEBHOOK_ID}.delete.parameters[0].required": true,
	"paths./webhooks/{WEBHOOK_ID}.delete.parameters[0].type": "string",
	"paths./webhooks/{WEBHOOK_ID}.delete.responses.204.description": "An empty 204 response is returned to confirm deletion of the webhook.",
	"paths./webhooks/{WEBHOOK_ID}.delete.responses.403.description": "Insufficient permissions",
	"paths./webhooks/{WEBHOOK_ID}.delete.responses.403.schema.$ref": "#/definitions/Error",
	"paths./webhooks/{WEBHOOK_ID}.delete.responses.404.description": "Webhook ID not found",
	"paths./webhooks/{WEBHOOK_ID}.delete.responses.404.schema.$ref": "#/definitions/Error",
	"paths./webhooks/{WEBHOOK_ID}.delete.responses.default.description": "Delete webhook error",
	"paths./webhooks/{WEBHOOK_ID}.delete.responses.default.schema.$ref": "#/definitions/Error",
	"paths./webhooks/{WEBHOOK_ID}.delete.summary": "Delete Webhook",
	"paths./webhooks/{WEBHOOK_ID}.delete.tags.length": 1,
	"paths./webhooks/{WEBHOOK_ID}.delete.tags[0]": "Webhooks",
	"paths./webhooks/{WEBHOOK_ID}.get.description": "Get a Webhook",
	"paths./webhooks/{WEBHOOK_ID}.get.externalDocs.url": "https://docs.box.com/reference#get-webhook",
	"paths./webhooks/{WEBHOOK_ID}.get.operationId": "getWebhook",
	"paths./webhooks/{WEBHOOK_ID}.get.parameters.length": 1,
	"paths./webhooks/{WEBHOOK_ID}.get.parameters[0].in": "path",
	"paths./webhooks/{WEBHOOK_ID}.get.parameters[0].name": "WEBHOOK_ID",
	"paths./webhooks/{WEBHOOK_ID}.get.parameters[0].required": true,
	"paths./webhooks/{WEBHOOK_ID}.get.parameters[0].type": "string",
	"paths./webhooks/{WEBHOOK_ID}.get.responses.200.description": "Returns a webhook object",
	"paths./webhooks/{WEBHOOK_ID}.get.responses.200.examples.application/json.address": "https://example.net/actions/file_changed",
	"paths./webhooks/{WEBHOOK_ID}.get.responses.200.examples.application/json.created_at": "2016-05-04T18:51:45-07:00",
	"paths./webhooks/{WEBHOOK_ID}.get.responses.200.examples.application/json.created_by.id": "2030392653",
	"paths./webhooks/{WEBHOOK_ID}.get.responses.200.examples.application/json.created_by.login": "johnq@example.net",
	"paths./webhooks/{WEBHOOK_ID}.get.responses.200.examples.application/json.created_by.name": "John Q. Developer",
	"paths./webhooks/{WEBHOOK_ID}.get.responses.200.examples.application/json.created_by.type": "user",
	"paths./webhooks/{WEBHOOK_ID}.get.responses.200.examples.application/json.id": "4137",
	"paths./webhooks/{WEBHOOK_ID}.get.responses.200.examples.application/json.target.id": "5018848529",
	"paths./webhooks/{WEBHOOK_ID}.get.responses.200.examples.application/json.target.type": "file",
	"paths./webhooks/{WEBHOOK_ID}.get.responses.200.examples.application/json.triggers.length": 1,
	"paths./webhooks/{WEBHOOK_ID}.get.responses.200.examples.application/json.triggers[0]": "FILE.PREVIEWED",
	"paths./webhooks/{WEBHOOK_ID}.get.responses.200.examples.application/json.type": "webhook",
	"paths./webhooks/{WEBHOOK_ID}.get.responses.200.schema.$ref": "#/definitions/Webhook",
	"paths./webhooks/{WEBHOOK_ID}.get.responses.403.description": "Insufficient permissions",
	"paths./webhooks/{WEBHOOK_ID}.get.responses.403.schema.$ref": "#/definitions/Error",
	"paths./webhooks/{WEBHOOK_ID}.get.responses.404.description": "Webhook ID not found",
	"paths./webhooks/{WEBHOOK_ID}.get.responses.404.schema.$ref": "#/definitions/Error",
	"paths./webhooks/{WEBHOOK_ID}.get.responses.default.description": "Get webhook error",
	"paths./webhooks/{WEBHOOK_ID}.get.responses.default.schema.$ref": "#/definitions/Error",
	"paths./webhooks/{WEBHOOK_ID}.get.summary": "Get Webhook",
	"paths./webhooks/{WEBHOOK_ID}.get.tags.length": 1,
	"paths./webhooks/{WEBHOOK_ID}.get.tags[0]": "Webhooks",
	"paths./webhooks/{WEBHOOK_ID}.put.description": "Update a Webhook",
	"paths./webhooks/{WEBHOOK_ID}.put.externalDocs.url": "https://docs.box.com/reference#update-webhook",
	"paths./webhooks/{WEBHOOK_ID}.put.operationId": "updateWebhook",
	"paths./webhooks/{WEBHOOK_ID}.put.parameters.length": 2,
	"paths./webhooks/{WEBHOOK_ID}.put.parameters[0].in": "path",
	"paths./webhooks/{WEBHOOK_ID}.put.parameters[0].name": "WEBHOOK_ID",
	"paths./webhooks/{WEBHOOK_ID}.put.parameters[0].required": true,
	"paths./webhooks/{WEBHOOK_ID}.put.parameters[0].type": "string",
	"paths./webhooks/{WEBHOOK_ID}.put.parameters[1].in": "body",
	"paths./webhooks/{WEBHOOK_ID}.put.parameters[1].name": "body",
	"paths./webhooks/{WEBHOOK_ID}.put.parameters[1].required": true,
	"paths./webhooks/{WEBHOOK_ID}.put.parameters[1].schema.$ref": "#/definitions/Webhook",
	"paths./webhooks/{WEBHOOK_ID}.put.responses.200.description": "Returns the updated webhook object.",
	"paths./webhooks/{WEBHOOK_ID}.put.responses.200.examples.application/json.address": "https://notification.example.net",
	"paths./webhooks/{WEBHOOK_ID}.put.responses.200.examples.application/json.created_at": "2016-05-04T18:51:17-07:00",
	"paths./webhooks/{WEBHOOK_ID}.put.responses.200.examples.application/json.created_by.id": "2030392653",
	"paths./webhooks/{WEBHOOK_ID}.put.responses.200.examples.application/json.created_by.login": "john2@example.net",
	"paths./webhooks/{WEBHOOK_ID}.put.responses.200.examples.application/json.created_by.name": "John Q. Developer",
	"paths./webhooks/{WEBHOOK_ID}.put.responses.200.examples.application/json.created_by.type": "user",
	"paths./webhooks/{WEBHOOK_ID}.put.responses.200.examples.application/json.id": "4133",
	"paths./webhooks/{WEBHOOK_ID}.put.responses.200.examples.application/json.target.id": "1000605797",
	"paths./webhooks/{WEBHOOK_ID}.put.responses.200.examples.application/json.target.type": "folder",
	"paths./webhooks/{WEBHOOK_ID}.put.responses.200.examples.application/json.triggers.length": 1,
	"paths./webhooks/{WEBHOOK_ID}.put.responses.200.examples.application/json.triggers[0]": "FILE.PREVIEWED",
	"paths./webhooks/{WEBHOOK_ID}.put.responses.200.examples.application/json.type": "webhook",
	"paths./webhooks/{WEBHOOK_ID}.put.responses.200.schema.$ref": "#/definitions/Webhook",
	"paths./webhooks/{WEBHOOK_ID}.put.responses.400.description": "Bad request",
	"paths./webhooks/{WEBHOOK_ID}.put.responses.400.schema.$ref": "#/definitions/Error",
	"paths./webhooks/{WEBHOOK_ID}.put.responses.403.description": "Insufficient permissions",
	"paths./webhooks/{WEBHOOK_ID}.put.responses.403.schema.$ref": "#/definitions/Error",
	"paths./webhooks/{WEBHOOK_ID}.put.responses.404.description": "Webhook ID not found",
	"paths./webhooks/{WEBHOOK_ID}.put.responses.404.schema.$ref": "#/definitions/Error",
	"paths./webhooks/{WEBHOOK_ID}.put.responses.default.description": "Update webhook error",
	"paths./webhooks/{WEBHOOK_ID}.put.responses.default.schema.$ref": "#/definitions/Error",
	"paths./webhooks/{WEBHOOK_ID}.put.summary": "Update Webhook",
	"paths./webhooks/{WEBHOOK_ID}.put.tags.length": 1,
	"paths./webhooks/{WEBHOOK_ID}.put.tags[0]": "Webhooks",
	"produces.length": 1,
	"produces[0]": "application/json",
	"schemes.length": 1,
	"schemes[0]": "https",
	"security.length": 1,
	"securityDefinitions.OAuth2Security.authorizationUrl": "https://account.box.com/api/oauth2/authorize",
	"securityDefinitions.OAuth2Security.flow": "accessCode",
	"securityDefinitions.OAuth2Security.tokenUrl": "https://api.box.com/oauth2/token",
	"securityDefinitions.OAuth2Security.type": "oauth2",
	"security[0].OAuth2Security.length": 0,
	"swagger": "2.0",
	"tags.length": 17,
	"tags[0].description": "Folders operations",
	"tags[0].name": "Folders",
	"tags[10].description": "Events operations",
	"tags[10].name": "Events",
	"tags[11].description": "Webhooks operations",
	"tags[11].name": "Webhooks",
	"tags[12].description": "Users operations",
	"tags[12].name": "Users",
	"tags[13].description": "Groups operations",
	"tags[13].name": "Groups",
	"tags[14].description": "Devices operations",
	"tags[14].name": "Devices",
	"tags[15].description": "Retention Policies operations",
	"tags[15].name": "Retention Policies",
	"tags[16].description": "Legal Holds Policies operations",
	"tags[16].name": "Legal Holds Policies",
	"tags[1].description": "Files operations",
	"tags[1].name": "Files",
	"tags[2].description": "Web Links operations",
	"tags[2].name": "Web Links",
	"tags[3].description": "Metadata operations",
	"tags[3].name": "Metadata",
	"tags[4].description": "Collections operations",
	"tags[4].name": "Collections",
	"tags[5].description": "Search operations",
	"tags[5].name": "Search",
	"tags[6].description": "Collaborations operations",
	"tags[6].name": "Collaborations",
	"tags[7].description": "Shared Items operations",
	"tags[7].name": "Shared Items",
	"tags[8].description": "Comments operations",
	"tags[8].name": "Comments",
	"tags[9].description": "Tasks operations",
	"tags[9].name": "Tasks"
}