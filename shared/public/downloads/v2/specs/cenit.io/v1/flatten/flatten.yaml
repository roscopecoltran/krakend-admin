basePath: /api/v1
consumes.length: 2
consumes[0]: application/json
consumes[1]: application/xml
definitions.connection.properties.headers.items.properties.key.type: string
definitions.connection.properties.headers.items.properties.value.type: string
definitions.connection.properties.headers.items.type: object
definitions.connection.properties.headers.type: array
definitions.connection.properties.id.type: string
definitions.connection.properties.key.type: string
definitions.connection.properties.name.type: string
definitions.connection.properties.namespace.$ref: '#/definitions/namespace'
definitions.connection.properties.parameters.items.properties.key.type: string
definitions.connection.properties.parameters.items.properties.value.type: string
definitions.connection.properties.parameters.items.type: object
definitions.connection.properties.parameters.type: array
definitions.connection.properties.token.type: string
definitions.connection.properties.url.type: string
definitions.connection.type: object
definitions.connection_role.properties.connection.items.$ref: '#/definitions/connection'
definitions.connection_role.properties.connection.type: array
definitions.connection_role.properties.id.type: string
definitions.connection_role.properties.name.type: string
definitions.connection_role.properties.namespace.$ref: '#/definitions/namespace'
definitions.connection_role.properties.webhook.items.$ref: '#/definitions/webhook'
definitions.connection_role.properties.webhook.type: array
definitions.connection_role.type: object
definitions.data_type.properties.id.type: string
definitions.data_type.properties.model_schema.type: string
definitions.data_type.properties.name.type: string
definitions.data_type.properties.namespace.$ref: '#/definitions/namespace'
definitions.data_type.properties.show_navigation_link.type: string
definitions.data_type.properties.slug.type: string
definitions.data_type.properties.title.type: string
definitions.data_type.properties.type.type: object
definitions.data_type.type: object
definitions.flow.properties.active.type: boolean
definitions.flow.properties.connection_role.$ref: '#/definitions/connection_role'
definitions.flow.properties.custom_data_type.$ref: '#/definitions/data_type'
definitions.flow.properties.event.type: object
definitions.flow.properties.id.type: string
definitions.flow.properties.name.type: string
definitions.flow.properties.namespace.$ref: '#/definitions/namespace'
definitions.flow.properties.notify_request.type: boolean
definitions.flow.properties.notify_response.type: boolean
definitions.flow.properties.response_translator.$ref: '#/definitions/translator'
definitions.flow.properties.translator.$ref: '#/definitions/translator'
definitions.flow.properties.webhook.$ref: '#/definitions/webhook'
definitions.flow.type: object
definitions.namespace.properties.id.type: string
definitions.namespace.properties.name.type: string
definitions.namespace.properties.slug.type: string
definitions.namespace.type: object
definitions.observer.properties.data_type.$ref: '#/definitions/data_type'
definitions.observer.properties.id.type: string
definitions.observer.properties.name.type: string
definitions.observer.properties.namespace.$ref: '#/definitions/namespace'
definitions.observer.properties.triggers.type: string
definitions.observer.properties.type.type: object
definitions.observer.type: object
definitions.scheduler.properties.activated.type: boolean
definitions.scheduler.properties.expression.type: string
definitions.scheduler.properties.id.type: string
definitions.scheduler.properties.name.type: string
definitions.scheduler.properties.namespace.$ref: '#/definitions/namespace'
definitions.scheduler.type: object
definitions.schema.properties.id.type: string
definitions.schema.properties.namespace.$ref: '#/definitions/namespace'
definitions.schema.properties.schema.type: string
definitions.schema.properties.uri.type: string
definitions.schema.type: object
definitions.translator.properties.custom_data_type.$ref: '#/definitions/data_type'
definitions.translator.properties.id.type: string
definitions.translator.properties.name.type: string
definitions.translator.properties.namespace.$ref: '#/definitions/namespace'
definitions.translator.properties.source_data_type.$ref: '#/definitions/data_type'
definitions.translator.properties.style.enum.length: 3
definitions.translator.properties.style.enum[0]: Ruby
definitions.translator.properties.style.enum[1]: Liquid
definitions.translator.properties.style.enum[2]: xslt
definitions.translator.properties.style.type: string
definitions.translator.properties.target_data_type.$ref: '#/definitions/data_type'
definitions.translator.properties.transformation.type: string
definitions.translator.properties.type.enum.length: 4
definitions.translator.properties.type.enum[0]: Import
definitions.translator.properties.type.enum[1]: Export
definitions.translator.properties.type.enum[2]: Convert
definitions.translator.properties.type.enum[3]: Update
definitions.translator.properties.type.type: string
definitions.translator.type: object
definitions.webhook.properties.headers.items.properties.key.type: string
definitions.webhook.properties.headers.items.properties.value.type: string
definitions.webhook.properties.headers.items.type: object
definitions.webhook.properties.headers.type: array
definitions.webhook.properties.id.type: string
definitions.webhook.properties.name.type: string
definitions.webhook.properties.namespace.$ref: '#/definitions/namespace'
definitions.webhook.properties.parameters.items.properties.key.type: string
definitions.webhook.properties.parameters.items.properties.value.type: string
definitions.webhook.properties.parameters.items.type: object
definitions.webhook.properties.parameters.type: array
definitions.webhook.properties.path.type: string
definitions.webhook.type: object
externalDocs.url: https://github.com/cenit-io/openapi
host: cenit.io
info.contact.email: support@cenit.io
info.contact.name: Cenit IO Support
info.contact.url: https://cenit.io
info.description: |
  Cenit IO is an Open Platform for Data and Business Integration (iPaaS)
info.termsOfService: https://cenit-portal.herokuapp.com/terms_of_service
info.title: Cenit IO - REST API Specification
info.version: v1
info.x-logo.url: https://api.apis.guru/v2/cache/logo/https_cenit.io_images_logo.png
info.x-origin.length: 1
info.x-origin[0].format: swagger
info.x-origin[0].url: https://cenit-io.github.io/openapi/swagger.json
info.x-origin[0].version: "2.0"
info.x-preferred: true
info.x-providerName: cenit.io
paths./setup/connection.get.description: Returns a list of connections you've previously
  created. The connections are returned in sorted order, with the most recent connection
  appearing first.
paths./setup/connection.get.responses.200.description: OK
paths./setup/connection.get.responses.200.schema.items.$ref: '#/definitions/connection'
paths./setup/connection.get.responses.200.schema.type: array
paths./setup/connection.get.summary: Returns a list of connections
paths./setup/connection.get.tags.length: 1
paths./setup/connection.get.tags[0]: Connection
paths./setup/connection.post.description: Creates or updates the specified connection
  by setting the values of the parameters passed. Any parameters not provided will
  be left unchanged.
paths./setup/connection.post.responses.200.description: OK
paths./setup/connection.post.responses.200.schema.$ref: '#/definitions/connection'
paths./setup/connection.post.summary: Create or update a connection
paths./setup/connection.post.tags.length: 1
paths./setup/connection.post.tags[0]: Connection
paths./setup/connection/{id}.delete.description: Permanently deletes a connection.
  It cannot be undone.
paths./setup/connection/{id}.delete.parameters.length: 1
paths./setup/connection/{id}.delete.parameters[0].description: Connection ID
paths./setup/connection/{id}.delete.parameters[0].in: path
paths./setup/connection/{id}.delete.parameters[0].name: id
paths./setup/connection/{id}.delete.parameters[0].required: true
paths./setup/connection/{id}.delete.parameters[0].type: string
paths./setup/connection/{id}.delete.responses.200.description: OK
paths./setup/connection/{id}.delete.responses.404.description: Item not found
paths./setup/connection/{id}.delete.summary: Delete a connection
paths./setup/connection/{id}.delete.tags.length: 1
paths./setup/connection/{id}.delete.tags[0]: Connection
paths./setup/connection/{id}.get.description: Retrieves the details of an existing
  connection. You need only supply the unique connection identifier that was returned
  upon connection creation.
paths./setup/connection/{id}.get.parameters.length: 1
paths./setup/connection/{id}.get.parameters[0].description: Connection ID
paths./setup/connection/{id}.get.parameters[0].in: path
paths./setup/connection/{id}.get.parameters[0].name: id
paths./setup/connection/{id}.get.parameters[0].required: true
paths./setup/connection/{id}.get.parameters[0].type: string
paths./setup/connection/{id}.get.responses.200.description: OK
paths./setup/connection/{id}.get.responses.200.schema.$ref: '#/definitions/connection'
paths./setup/connection/{id}.get.responses.404.description: Item not found
paths./setup/connection/{id}.get.summary: Retrieve an existing connection
paths./setup/connection/{id}.get.tags.length: 1
paths./setup/connection/{id}.get.tags[0]: Connection
paths./setup/connection_role.get.description: Returns a list of connection roles you've
  previously created. The connection roles are returned in sorted order, with the
  most recent connection role appearing first.
paths./setup/connection_role.get.responses.200.description: OK
paths./setup/connection_role.get.responses.200.schema.items.$ref: '#/definitions/connection_role'
paths./setup/connection_role.get.responses.200.schema.type: array
paths./setup/connection_role.get.summary: Returns a list of connection roles
paths./setup/connection_role.get.tags.length: 1
paths./setup/connection_role.get.tags[0]: Connection Role
paths./setup/connection_role.post.description: Creates or updates the specified connection
  role by setting the values of the parameters passed. Any parameters not provided
  will be left unchanged.
paths./setup/connection_role.post.responses.200.description: OK
paths./setup/connection_role.post.responses.200.schema.$ref: '#/definitions/connection_role'
paths./setup/connection_role.post.summary: Create or update a connection role
paths./setup/connection_role.post.tags.length: 1
paths./setup/connection_role.post.tags[0]: Connection Role
paths./setup/connection_role/{id}.delete.description: Deletes the specified connection
  role.
paths./setup/connection_role/{id}.delete.parameters.length: 1
paths./setup/connection_role/{id}.delete.parameters[0].description: Connection role
  ID
paths./setup/connection_role/{id}.delete.parameters[0].in: path
paths./setup/connection_role/{id}.delete.parameters[0].name: id
paths./setup/connection_role/{id}.delete.parameters[0].required: true
paths./setup/connection_role/{id}.delete.parameters[0].type: string
paths./setup/connection_role/{id}.delete.responses.200.description: OK
paths./setup/connection_role/{id}.delete.responses.404.description: Item not found
paths./setup/connection_role/{id}.delete.summary: Delete a connection role.
paths./setup/connection_role/{id}.delete.tags.length: 1
paths./setup/connection_role/{id}.delete.tags[0]: Connection Role
paths./setup/connection_role/{id}.get.description: Returns a connection role
paths./setup/connection_role/{id}.get.parameters.length: 1
paths./setup/connection_role/{id}.get.parameters[0].description: Connection role ID
paths./setup/connection_role/{id}.get.parameters[0].in: path
paths./setup/connection_role/{id}.get.parameters[0].name: id
paths./setup/connection_role/{id}.get.parameters[0].required: true
paths./setup/connection_role/{id}.get.parameters[0].type: string
paths./setup/connection_role/{id}.get.responses.200.description: OK
paths./setup/connection_role/{id}.get.responses.200.schema.$ref: '#/definitions/connection_role'
paths./setup/connection_role/{id}.get.responses.404.description: Item not found
paths./setup/connection_role/{id}.get.summary: Return a connection role
paths./setup/connection_role/{id}.get.tags.length: 1
paths./setup/connection_role/{id}.get.tags[0]: Connection Role
paths./setup/data_type/.get.description: Returns a list of data types you've previously
  created. The data types are returned in sorted order, with the most recent DataType
  appearing first.
paths./setup/data_type/.get.responses.200.description: OK
paths./setup/data_type/.get.responses.200.schema.items.$ref: '#/definitions/data_type'
paths./setup/data_type/.get.responses.200.schema.type: array
paths./setup/data_type/.get.summary: Returns a list of data types
paths./setup/data_type/.get.tags.length: 1
paths./setup/data_type/.get.tags[0]: Data Type
paths./setup/data_type/.post.description: Creates or updates the specified data type
  by setting the values of the parameters passed. Any parameters not provided will
  be left unchanged.
paths./setup/data_type/.post.responses.200.description: OK
paths./setup/data_type/.post.responses.200.schema.$ref: '#/definitions/data_type'
paths./setup/data_type/.post.summary: Create or update a data type
paths./setup/data_type/.post.tags.length: 1
paths./setup/data_type/.post.tags[0]: Data Type
paths./setup/data_type/{id}.delete.description: Deletes the specified data type.
paths./setup/data_type/{id}.delete.parameters.length: 1
paths./setup/data_type/{id}.delete.parameters[0].description: data type ID
paths./setup/data_type/{id}.delete.parameters[0].in: path
paths./setup/data_type/{id}.delete.parameters[0].name: id
paths./setup/data_type/{id}.delete.parameters[0].required: true
paths./setup/data_type/{id}.delete.parameters[0].type: string
paths./setup/data_type/{id}.delete.responses.200.description: OK
paths./setup/data_type/{id}.delete.responses.404.description: Item not found
paths./setup/data_type/{id}.delete.summary: Delete a data type
paths./setup/data_type/{id}.delete.tags.length: 1
paths./setup/data_type/{id}.delete.tags[0]: Data Type
paths./setup/data_type/{id}.get.description: Retrieves the details of an existing
  data type. You need only supply the unique data  type identifier that was returned
  upon DataType creation.
paths./setup/data_type/{id}.get.parameters.length: 1
paths./setup/data_type/{id}.get.parameters[0].description: data type ID
paths./setup/data_type/{id}.get.parameters[0].in: path
paths./setup/data_type/{id}.get.parameters[0].name: id
paths./setup/data_type/{id}.get.parameters[0].required: true
paths./setup/data_type/{id}.get.parameters[0].type: string
paths./setup/data_type/{id}.get.responses.200.description: OK
paths./setup/data_type/{id}.get.responses.200.schema.$ref: '#/definitions/data_type'
paths./setup/data_type/{id}.get.responses.404.description: Item not found.
paths./setup/data_type/{id}.get.summary: Retrieve a data type
paths./setup/data_type/{id}.get.tags.length: 1
paths./setup/data_type/{id}.get.tags[0]: Data Type
paths./setup/flow/.get.description: Returns a list of flows you've previously created.
  The flows are returned in sorted order, with the most recent flow appearing first.
paths./setup/flow/.get.responses.200.description: OK
paths./setup/flow/.get.responses.200.schema.items.$ref: '#/definitions/flow'
paths./setup/flow/.get.responses.200.schema.type: array
paths./setup/flow/.get.summary: Returns a list of flows
paths./setup/flow/.get.tags.length: 1
paths./setup/flow/.get.tags[0]: Flow
paths./setup/flow/.post.description: Creates or updates the specified flow. Any parameters
  not provided will be left unchanged.
paths./setup/flow/.post.responses.200.description: OK
paths./setup/flow/.post.responses.200.schema.$ref: '#/definitions/flow'
paths./setup/flow/.post.summary: Create or update a flow
paths./setup/flow/.post.tags.length: 1
paths./setup/flow/.post.tags[0]: Flow
paths./setup/flow/{id}.delete.description: Deletes the specified flow.
paths./setup/flow/{id}.delete.parameters.length: 1
paths./setup/flow/{id}.delete.parameters[0].description: Flow ID
paths./setup/flow/{id}.delete.parameters[0].in: path
paths./setup/flow/{id}.delete.parameters[0].name: id
paths./setup/flow/{id}.delete.parameters[0].required: true
paths./setup/flow/{id}.delete.parameters[0].type: string
paths./setup/flow/{id}.delete.responses.200.description: OK
paths./setup/flow/{id}.delete.responses.404.description: Item not found
paths./setup/flow/{id}.delete.summary: Delete a flow.
paths./setup/flow/{id}.delete.tags.length: 1
paths./setup/flow/{id}.delete.tags[0]: Flow
paths./setup/flow/{id}.get.description: Retrieves the details of an existing flow.
  You need only supply the unique flow identifier that was returned upon flow creation.
paths./setup/flow/{id}.get.parameters.length: 1
paths./setup/flow/{id}.get.parameters[0].description: Flow ID
paths./setup/flow/{id}.get.parameters[0].in: path
paths./setup/flow/{id}.get.parameters[0].name: id
paths./setup/flow/{id}.get.parameters[0].required: true
paths./setup/flow/{id}.get.parameters[0].type: string
paths./setup/flow/{id}.get.responses.200.description: OK
paths./setup/flow/{id}.get.responses.200.schema.$ref: '#/definitions/flow'
paths./setup/flow/{id}.get.responses.404.description: Item not found.
paths./setup/flow/{id}.get.summary: Retrieve an existing flow
paths./setup/flow/{id}.get.tags.length: 1
paths./setup/flow/{id}.get.tags[0]: Flow
paths./setup/namespace/.get.description: Returns a list of namespaces you've previously
  created. The namespaces are returned in sorted order, with the most recent namespace
  appearing first.
paths./setup/namespace/.get.responses.200.description: OK
paths./setup/namespace/.get.responses.200.schema.items.$ref: '#/definitions/namespace'
paths./setup/namespace/.get.responses.200.schema.type: array
paths./setup/namespace/.get.summary: Returns a list of namespaces
paths./setup/namespace/.get.tags.length: 1
paths./setup/namespace/.get.tags[0]: Namespace
paths./setup/namespace/.post.description: Creates or updates the specified namespace.
  Any parameters not provided will be left unchanged.
paths./setup/namespace/.post.responses.200.description: OK
paths./setup/namespace/.post.responses.200.schema.$ref: '#/definitions/namespace'
paths./setup/namespace/.post.summary: Create or update a namespace
paths./setup/namespace/.post.tags.length: 1
paths./setup/namespace/.post.tags[0]: Namespace
paths./setup/namespace/{id}.delete.description: Deletes the specified namespace.
paths./setup/namespace/{id}.delete.parameters.length: 1
paths./setup/namespace/{id}.delete.parameters[0].description: Namespace ID.
paths./setup/namespace/{id}.delete.parameters[0].in: path
paths./setup/namespace/{id}.delete.parameters[0].name: id
paths./setup/namespace/{id}.delete.parameters[0].required: true
paths./setup/namespace/{id}.delete.parameters[0].type: string
paths./setup/namespace/{id}.delete.responses.200.description: OK
paths./setup/namespace/{id}.delete.responses.404.description: Item not found
paths./setup/namespace/{id}.delete.summary: Delete a namespace
paths./setup/namespace/{id}.delete.tags.length: 1
paths./setup/namespace/{id}.delete.tags[0]: Namespace
paths./setup/namespace/{id}.get.description: Retrieves the details of an existing
  namespace. You need only supply the unique webhook namespace that was returned upon
  namespace creation.
paths./setup/namespace/{id}.get.parameters.length: 1
paths./setup/namespace/{id}.get.parameters[0].description: Namespace ID.
paths./setup/namespace/{id}.get.parameters[0].in: path
paths./setup/namespace/{id}.get.parameters[0].name: id
paths./setup/namespace/{id}.get.parameters[0].required: true
paths./setup/namespace/{id}.get.parameters[0].type: string
paths./setup/namespace/{id}.get.responses.200.description: OK
paths./setup/namespace/{id}.get.responses.200.schema.$ref: '#/definitions/namespace'
paths./setup/namespace/{id}.get.responses.404.description: Item not found.
paths./setup/namespace/{id}.get.summary: Retrieve an existing namespace
paths./setup/namespace/{id}.get.tags.length: 1
paths./setup/namespace/{id}.get.tags[0]: Namespace
paths./setup/observer/.get.description: Returns a list of events you've previously
  created. The events are returned in sorted order, with the most recent event appearing
  first.
paths./setup/observer/.get.responses.200.description: OK
paths./setup/observer/.get.responses.200.schema.items.$ref: '#/definitions/observer'
paths./setup/observer/.get.responses.200.schema.type: array
paths./setup/observer/.get.summary: Returns a list of events
paths./setup/observer/.get.tags.length: 1
paths./setup/observer/.get.tags[0]: Data Event
paths./setup/observer/.post.description: Creates or updates the specified event observer.
  Any parameters not provided will be left unchanged.
paths./setup/observer/.post.responses.200.description: OK
paths./setup/observer/.post.responses.200.schema.$ref: '#/definitions/observer'
paths./setup/observer/.post.summary: Create or update an event
paths./setup/observer/.post.tags.length: 1
paths./setup/observer/.post.tags[0]: Data Event
paths./setup/observer/{id}.delete.description: Deletes the specified event observer.
paths./setup/observer/{id}.delete.parameters.length: 1
paths./setup/observer/{id}.delete.parameters[0].description: Observer ID
paths./setup/observer/{id}.delete.parameters[0].in: path
paths./setup/observer/{id}.delete.parameters[0].name: id
paths./setup/observer/{id}.delete.parameters[0].required: true
paths./setup/observer/{id}.delete.parameters[0].type: string
paths./setup/observer/{id}.delete.responses.200.description: OK
paths./setup/observer/{id}.delete.responses.404.description: Item not found
paths./setup/observer/{id}.delete.summary: Delete an event
paths./setup/observer/{id}.delete.tags.length: 1
paths./setup/observer/{id}.delete.tags[0]: Data Event
paths./setup/observer/{id}.get.description: Retrieves the details of an existing event.
  You need only supply the unique event identifier that was returned upon event creation.
paths./setup/observer/{id}.get.parameters.length: 1
paths./setup/observer/{id}.get.parameters[0].description: Observer ID
paths./setup/observer/{id}.get.parameters[0].in: path
paths./setup/observer/{id}.get.parameters[0].name: id
paths./setup/observer/{id}.get.parameters[0].required: true
paths./setup/observer/{id}.get.parameters[0].type: string
paths./setup/observer/{id}.get.responses.200.description: OK
paths./setup/observer/{id}.get.responses.200.schema.$ref: '#/definitions/observer'
paths./setup/observer/{id}.get.responses.404.description: Item not found.
paths./setup/observer/{id}.get.summary: Retrieve an existing event
paths./setup/observer/{id}.get.tags.length: 1
paths./setup/observer/{id}.get.tags[0]: Data Event
paths./setup/scheduler/.get.description: Returns a list of schedulers you've previously
  created. The schedulers are returned in sorted order, with the most recent scheduler
  appearing first.
paths./setup/scheduler/.get.responses.200.description: OK
paths./setup/scheduler/.get.responses.200.schema.items.$ref: '#/definitions/scheduler'
paths./setup/scheduler/.get.responses.200.schema.type: array
paths./setup/scheduler/.get.summary: Returns a list of schedulers
paths./setup/scheduler/.get.tags.length: 1
paths./setup/scheduler/.get.tags[0]: Scheduler
paths./setup/scheduler/.post.description: Creates or updates the specified scheduler.
  Any parameters not provided will be left unchanged.
paths./setup/scheduler/.post.responses.200.description: OK
paths./setup/scheduler/.post.responses.200.schema.$ref: '#/definitions/scheduler'
paths./setup/scheduler/.post.summary: Create or update an scheduler
paths./setup/scheduler/.post.tags.length: 1
paths./setup/scheduler/.post.tags[0]: Scheduler
paths./setup/scheduler/{id}.delete.description: Deletes the specified scheduler.
paths./setup/scheduler/{id}.delete.parameters.length: 1
paths./setup/scheduler/{id}.delete.parameters[0].description: Scheduler ID
paths./setup/scheduler/{id}.delete.parameters[0].in: path
paths./setup/scheduler/{id}.delete.parameters[0].name: id
paths./setup/scheduler/{id}.delete.parameters[0].required: true
paths./setup/scheduler/{id}.delete.parameters[0].type: string
paths./setup/scheduler/{id}.delete.responses.200.description: OK
paths./setup/scheduler/{id}.delete.responses.404.description: Item not found
paths./setup/scheduler/{id}.delete.summary: Delete an schedule
paths./setup/scheduler/{id}.delete.tags.length: 1
paths./setup/scheduler/{id}.delete.tags[0]: Scheduler
paths./setup/scheduler/{id}.get.description: Retrieves the details of an existing
  scheduler. You need only supply the unique scheduler identifier that was returned
  upon scheduler creation.
paths./setup/scheduler/{id}.get.parameters.length: 1
paths./setup/scheduler/{id}.get.parameters[0].description: Scheduler ID
paths./setup/scheduler/{id}.get.parameters[0].in: path
paths./setup/scheduler/{id}.get.parameters[0].name: id
paths./setup/scheduler/{id}.get.parameters[0].required: true
paths./setup/scheduler/{id}.get.parameters[0].type: string
paths./setup/scheduler/{id}.get.responses.200.description: OK
paths./setup/scheduler/{id}.get.responses.200.schema.$ref: '#/definitions/scheduler'
paths./setup/scheduler/{id}.get.responses.404.description: Item not found.
paths./setup/scheduler/{id}.get.summary: Retrieve an existing schedule
paths./setup/scheduler/{id}.get.tags.length: 1
paths./setup/scheduler/{id}.get.tags[0]: Scheduler
paths./setup/schema/.get.description: Returns a list of schemas you've previously
  created. The schemas are returned in sorted order, with the most recent schema appearing
  first.
paths./setup/schema/.get.responses.200.description: OK
paths./setup/schema/.get.responses.200.schema.items.$ref: '#/definitions/schema'
paths./setup/schema/.get.responses.200.schema.type: array
paths./setup/schema/.get.summary: Returns a list of schemas
paths./setup/schema/.get.tags.length: 1
paths./setup/schema/.get.tags[0]: Schema
paths./setup/schema/.post.description: Creates or updates the specified schema. Any
  parameters not provided will be left unchanged.
paths./setup/schema/.post.responses.200.description: OK
paths./setup/schema/.post.responses.200.schema.$ref: '#/definitions/schema'
paths./setup/schema/.post.summary: Create or update an schema
paths./setup/schema/.post.tags.length: 1
paths./setup/schema/.post.tags[0]: Schema
paths./setup/schema/{id}.delete.description: Deletes the specified schema.
paths./setup/schema/{id}.delete.parameters.length: 1
paths./setup/schema/{id}.delete.parameters[0].description: Schema ID
paths./setup/schema/{id}.delete.parameters[0].in: path
paths./setup/schema/{id}.delete.parameters[0].name: id
paths./setup/schema/{id}.delete.parameters[0].required: true
paths./setup/schema/{id}.delete.parameters[0].type: string
paths./setup/schema/{id}.delete.responses.200.description: OK
paths./setup/schema/{id}.delete.responses.404.description: Item not found
paths./setup/schema/{id}.delete.summary: Delete an schema.
paths./setup/schema/{id}.delete.tags.length: 1
paths./setup/schema/{id}.delete.tags[0]: Schema
paths./setup/schema/{id}.get.description: Retrieves the details of an existing schema.
  You need only supply the unique schema identifier that was returned upon schema
  creation.
paths./setup/schema/{id}.get.parameters.length: 1
paths./setup/schema/{id}.get.parameters[0].description: Schema ID
paths./setup/schema/{id}.get.parameters[0].in: path
paths./setup/schema/{id}.get.parameters[0].name: id
paths./setup/schema/{id}.get.parameters[0].required: true
paths./setup/schema/{id}.get.parameters[0].type: string
paths./setup/schema/{id}.get.responses.200.description: OK
paths./setup/schema/{id}.get.responses.200.schema.$ref: '#/definitions/schema'
paths./setup/schema/{id}.get.responses.404.description: Item not found.
paths./setup/schema/{id}.get.summary: Retrieve an existing schema
paths./setup/schema/{id}.get.tags.length: 1
paths./setup/schema/{id}.get.tags[0]: Schema
paths./setup/translator/.get.description: Returns a list of translators you've previously
  created. The translators are returned in sorted order, with the most recent translator
  appearing first.
paths./setup/translator/.get.responses.200.description: OK
paths./setup/translator/.get.responses.200.schema.items.$ref: '#/definitions/translator'
paths./setup/translator/.get.responses.200.schema.type: array
paths./setup/translator/.get.summary: Returns a list of translators
paths./setup/translator/.get.tags.length: 1
paths./setup/translator/.get.tags[0]: Translator
paths./setup/translator/.post.description: Creates or updates the specified translator.
  Any parameters not provided will be left unchanged.
paths./setup/translator/.post.responses.200.description: OK
paths./setup/translator/.post.responses.200.schema.$ref: '#/definitions/translator'
paths./setup/translator/.post.summary: Create or update a translator
paths./setup/translator/.post.tags.length: 1
paths./setup/translator/.post.tags[0]: Translator
paths./setup/translator/{id}.delete.description: Deletes the specified translator.
paths./setup/translator/{id}.delete.parameters.length: 1
paths./setup/translator/{id}.delete.parameters[0].description: Translator ID.
paths./setup/translator/{id}.delete.parameters[0].in: path
paths./setup/translator/{id}.delete.parameters[0].name: id
paths./setup/translator/{id}.delete.parameters[0].required: true
paths./setup/translator/{id}.delete.parameters[0].type: string
paths./setup/translator/{id}.delete.responses.200.description: OK
paths./setup/translator/{id}.delete.responses.404.description: Item not found
paths./setup/translator/{id}.delete.summary: Delete a translator
paths./setup/translator/{id}.delete.tags.length: 1
paths./setup/translator/{id}.delete.tags[0]: Translator
paths./setup/translator/{id}.get.description: Retrieves the details of an existing
  translator. You need only supply the unique translator identifier that was returned
  upon translator creation.
paths./setup/translator/{id}.get.parameters.length: 1
paths./setup/translator/{id}.get.parameters[0].description: Translator ID.
paths./setup/translator/{id}.get.parameters[0].in: path
paths./setup/translator/{id}.get.parameters[0].name: id
paths./setup/translator/{id}.get.parameters[0].required: true
paths./setup/translator/{id}.get.parameters[0].type: string
paths./setup/translator/{id}.get.responses.200.description: OK
paths./setup/translator/{id}.get.responses.200.schema.$ref: '#/definitions/translator'
paths./setup/translator/{id}.get.responses.404.description: Item not found.
paths./setup/translator/{id}.get.summary: Retrieve an existing translator
paths./setup/translator/{id}.get.tags.length: 1
paths./setup/translator/{id}.get.tags[0]: Translator
paths./setup/webhook/.get.description: Returns a list of webhooks you've previously
  created. The webhooks are returned in sorted order, with the most recent webhook
  appearing first.
paths./setup/webhook/.get.responses.200.description: OK
paths./setup/webhook/.get.responses.200.schema.items.$ref: '#/definitions/webhook'
paths./setup/webhook/.get.responses.200.schema.type: array
paths./setup/webhook/.get.summary: Returns a list of webhooks
paths./setup/webhook/.get.tags.length: 1
paths./setup/webhook/.get.tags[0]: Webhook
paths./setup/webhook/.post.description: Creates or updates the specified webhook.
  Any parameters not provided will be left unchanged.
paths./setup/webhook/.post.responses.200.description: OK
paths./setup/webhook/.post.responses.200.schema.$ref: '#/definitions/webhook'
paths./setup/webhook/.post.summary: Create or update a webhook
paths./setup/webhook/.post.tags.length: 1
paths./setup/webhook/.post.tags[0]: Webhook
paths./setup/webhook/{id}.delete.description: Deletes the specified webhook.
paths./setup/webhook/{id}.delete.parameters.length: 1
paths./setup/webhook/{id}.delete.parameters[0].description: Webhook ID.
paths./setup/webhook/{id}.delete.parameters[0].in: path
paths./setup/webhook/{id}.delete.parameters[0].name: id
paths./setup/webhook/{id}.delete.parameters[0].required: true
paths./setup/webhook/{id}.delete.parameters[0].type: string
paths./setup/webhook/{id}.delete.responses.200.description: OK
paths./setup/webhook/{id}.delete.responses.404.description: Item not found
paths./setup/webhook/{id}.delete.summary: Delete a webhook
paths./setup/webhook/{id}.delete.tags.length: 1
paths./setup/webhook/{id}.delete.tags[0]: Webhook
paths./setup/webhook/{id}.get.description: Retrieves the details of an existing webhook.
  You need only supply the unique webhook identifier that was returned upon webhook
  creation.
paths./setup/webhook/{id}.get.parameters.length: 1
paths./setup/webhook/{id}.get.parameters[0].description: Webhook ID.
paths./setup/webhook/{id}.get.parameters[0].in: path
paths./setup/webhook/{id}.get.parameters[0].name: id
paths./setup/webhook/{id}.get.parameters[0].required: true
paths./setup/webhook/{id}.get.parameters[0].type: string
paths./setup/webhook/{id}.get.responses.200.description: OK
paths./setup/webhook/{id}.get.responses.200.schema.$ref: '#/definitions/webhook'
paths./setup/webhook/{id}.get.responses.404.description: Item not found.
paths./setup/webhook/{id}.get.summary: Retrieve an existing webhook
paths./setup/webhook/{id}.get.tags.length: 1
paths./setup/webhook/{id}.get.tags[0]: Webhook
produces.length: 1
produces[0]: application/json
schemes.length: 1
schemes[0]: https
security.length: 1
security[0].X-User-Access-Key.length: 0
security[0].X-User-Access-Token.length: 0
securityDefinitions.X-User-Access-Key.in: header
securityDefinitions.X-User-Access-Key.name: X-User-Access-Key
securityDefinitions.X-User-Access-Key.type: apiKey
securityDefinitions.X-User-Access-Token.in: header
securityDefinitions.X-User-Access-Token.name: X-User-Access-Token
securityDefinitions.X-User-Access-Token.type: apiKey
swagger: "2.0"
tags.length: 11
tags[0].description: "The Cenit IO API is organized around REST. Cenit IO is an Open
  Platform for Data \nand Business Integration (iPaaS) to process, storage and move
  data in connection \nwith Cloud or On-Premise services. \n\nIt has been designed
  to orchestrate data flows that may involve several kind of \nendpoints (APIs, Datasets,
  EDI). It makes possible the automation of all operational \nprocesses in a company,
  connecting between organization's on-premises infrastructure \nand cloud provider
  services.\n"
tags[0].name: Introduction
tags[1].description: "When you sign up for an account, you are given your first API
  key.\nYou can generate additional API keys, and delete API keys (as you may\nneed
  to rotate your keys in the future). You authenticate to Cenit IO API \nby providing
  your endpoint API keys and token in the header parameters into \nrequest. You can
  have multiple API keys and token active at one time for \nany endpoint.\n"
tags[1].name: Authentication
tags[2].description: "Connection are the representation of endpoint. \n"
tags[2].name: Connection
tags[3].description: "Define a group of webhooks that can apply to several connections.
  \      \n"
tags[3].name: Connection Role
tags[4].description: "Allow that objects flow through the hub. The creation of new
  objects \nand/or changes in existing objects will result in events. These events
  \nultimately result in calls being made to various Flows in your endpoints.\n"
tags[4].name: Data Event
tags[5].description: |
  Schedulers are events triggered on a certain moment and can be optionally recurrent.
tags[5].name: Scheduler
tags[6].description: |
  Define an HTTP Method and params.
tags[6].name: Webhook
tags[7].description: |
  A translator defines a logic for data manipulation. Data manipulation can occurs in the following scenarios:
    - Importing outside data into Cenit
    - Updating data already stored in Cenit
    - Converting data already stored in Cenit
    - Exporting data outside Cenit
tags[7].name: Translator
tags[8].description: "A flow defines how data is processed by the execution of one
  or more actions, if \nthe data is coming in to Cenit or going out of Cenit. Data
  processing involve:\n\n  ₋ An execution trigger to start the data processing\n  \n
  \ ₋ Data types\n  \n  ₋ Translators\n  \n  ₋ Connections & Webhooks\n"
tags[8].name: Flow
tags[9].description: |
  Define a data type is as simple as a JSON Schema http://json-schema.org
tags[9].name: Data Type
tags[10].description: "Define space of names to use across all the tenants    \n \n"
tags[10].name: Namespace
