{
	"basePath": "/v1",
	"consumes.length": 1,
	"consumes[0]": "application/json",
	"host": "api.lufthansa.com",
	"info.license.name": "LH",
	"info.license.url": "https://developer.lufthansa.com",
	"info.title": "LH Public",
	"info.version": "1.0",
	"info.x-apisguru-categories.length": 1,
	"info.x-apisguru-categories[0]": "transport",
	"info.x-logo.backgroundColor": "#FFFFFF",
	"info.x-logo.url": "https://api.apis.guru/v2/cache/logo/https_avatars2.githubusercontent.com_u_22329684.png",
	"info.x-origin.length": 1,
	"info.x-origin[0].format": "swagger",
	"info.x-origin[0].url": "https://raw.githubusercontent.com/LufthansaOpenAPI/Swagger/master/LH_public_API_swagger_2_0.json",
	"info.x-origin[0].version": "2.0",
	"info.x-preferred": true,
	"info.x-providerName": "lufthansa.com",
	"info.x-serviceName": "public",
	"paths./offers/lounges/{location}.get.description": "Lounge information",
	"paths./offers/lounges/{location}.get.operationId": "Lounges",
	"paths./offers/lounges/{location}.get.parameters.length": 5,
	"paths./offers/lounges/{location}.get.parameters[0].description": "3-leter IATA airport or city code (e.g. 'ZRH')",
	"paths./offers/lounges/{location}.get.parameters[0].in": "path",
	"paths./offers/lounges/{location}.get.parameters[0].name": "location",
	"paths./offers/lounges/{location}.get.parameters[0].required": true,
	"paths./offers/lounges/{location}.get.parameters[0].type": "string",
	"paths./offers/lounges/{location}.get.parameters[1].description": "http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")",
	"paths./offers/lounges/{location}.get.parameters[1].in": "header",
	"paths./offers/lounges/{location}.get.parameters[1].name": "Accept",
	"paths./offers/lounges/{location}.get.parameters[1].required": true,
	"paths./offers/lounges/{location}.get.parameters[1].type": "string",
	"paths./offers/lounges/{location}.get.parameters[2].description": "Cabin class: 'M', 'E', 'C', 'F' (Acceptable values are: \"\", \"M\", \"E\", \"C\", \"F\")",
	"paths./offers/lounges/{location}.get.parameters[2].in": "query",
	"paths./offers/lounges/{location}.get.parameters[2].name": "cabinClass",
	"paths./offers/lounges/{location}.get.parameters[2].required": false,
	"paths./offers/lounges/{location}.get.parameters[2].type": "string",
	"paths./offers/lounges/{location}.get.parameters[3].description": "Frequent flyer level ('FTL', 'SGC', 'SEN', 'HON') (Acceptable values are: \"\", \"FTL\", \"SGC\", \"SEN\", \"HON\")",
	"paths./offers/lounges/{location}.get.parameters[3].in": "query",
	"paths./offers/lounges/{location}.get.parameters[3].name": "tierCode",
	"paths./offers/lounges/{location}.get.parameters[3].required": false,
	"paths./offers/lounges/{location}.get.parameters[3].type": "string",
	"paths./offers/lounges/{location}.get.parameters[4].description": "Language code.",
	"paths./offers/lounges/{location}.get.parameters[4].in": "query",
	"paths./offers/lounges/{location}.get.parameters[4].name": "lang",
	"paths./offers/lounges/{location}.get.parameters[4].required": false,
	"paths./offers/lounges/{location}.get.parameters[4].type": "string",
	"paths./offers/lounges/{location}.get.responses.200.description": "",
	"paths./offers/lounges/{location}.get.responses.200.schema.type": "string",
	"paths./offers/lounges/{location}.get.security.length": 1,
	"paths./offers/lounges/{location}.get.security[0].auth.length": 0,
	"paths./offers/lounges/{location}.get.summary": "Lounges",
	"paths./offers/lounges/{location}.get.tags.length": 1,
	"paths./offers/lounges/{location}.get.tags[0]": "Offers",
	"paths./offers/lounges/{location}.get.x-operation-settings.AllowDynamicFormParameters": false,
	"paths./offers/lounges/{location}.get.x-operation-settings.AllowDynamicQueryParameters": false,
	"paths./offers/lounges/{location}.get.x-operation-settings.CollectParameters": false,
	"paths./offers/lounges/{location}.get.x-operation-settings.IsMultiContentStreaming": false,
	"paths./offers/lounges/{location}.get.x-unitTests.length": 0,
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.description": "Cabin layout and seat characteristics.",
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.operationId": "Seat Maps",
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.parameters.length": 6,
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.parameters[0].description": "Flight number including carrier code and any suffix (e.g. 'LH2037')",
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.parameters[0].in": "path",
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.parameters[0].name": "flightNumber",
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.parameters[0].required": true,
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.parameters[0].type": "string",
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.parameters[1].description": "Departure airport. 3-letter IATA airport code (e.g. 'TXL')",
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.parameters[1].in": "path",
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.parameters[1].name": "origin",
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.parameters[1].required": true,
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.parameters[1].type": "string",
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.parameters[2].description": "Destination airport. 3-letter IATA airport code (e.g. 'MUC')",
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.parameters[2].in": "path",
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.parameters[2].name": "destination",
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.parameters[2].required": true,
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.parameters[2].type": "string",
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.parameters[3].description": "Departure date (YYYY-MM-DD)",
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.parameters[3].in": "path",
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.parameters[3].name": "date",
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.parameters[3].required": true,
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.parameters[3].type": "string",
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.parameters[4].description": "Cabin class: 'M', 'E', 'C', 'F'. Some flights have fewer classes (Acceptable values are: \"M\", \"E\", \"C\", \"F\")",
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.parameters[4].in": "path",
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.parameters[4].name": "cabinClass",
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.parameters[4].required": true,
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.parameters[4].type": "string",
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.parameters[5].description": "http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")",
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.parameters[5].in": "header",
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.parameters[5].name": "Accept",
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.parameters[5].required": true,
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.parameters[5].type": "string",
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.responses.200.description": "",
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.responses.200.schema.type": "string",
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.security.length": 1,
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.security[0].auth.length": 0,
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.summary": "Seat Maps",
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.tags.length": 1,
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.tags[0]": "Offers",
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.x-operation-settings.AllowDynamicFormParameters": false,
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.x-operation-settings.AllowDynamicQueryParameters": false,
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.x-operation-settings.CollectParameters": false,
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.x-operation-settings.IsMultiContentStreaming": false,
	"paths./offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}.get.x-unitTests.length": 0,
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.description": "Status of all arrivals at a given airport up to 4 hours from the provided date time.",
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.operationId": "Flight Status at Arrival Airport",
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.parameters.length": 5,
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.parameters[0].description": "3-letter IATA aiport code (e.g. 'ZRH')",
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.parameters[0].in": "path",
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.parameters[0].name": "airportCode",
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.parameters[0].required": true,
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.parameters[0].type": "string",
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.parameters[1].description": "Start of time range in local time of arrival airport (YYYY-MM-DDTHH:mm)",
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.parameters[1].in": "path",
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.parameters[1].name": "fromDateTime",
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.parameters[1].required": true,
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.parameters[1].type": "string",
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.parameters[2].description": "http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")",
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.parameters[2].in": "header",
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.parameters[2].name": "Accept",
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.parameters[2].required": true,
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.parameters[2].type": "string",
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.parameters[3].description": "Number of records returned per request. Defaults to 20, maximum is 100 (if a value bigger than 100 is given, 100 will be taken)",
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.parameters[3].in": "query",
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.parameters[3].name": "limit",
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.parameters[3].required": false,
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.parameters[3].type": "string",
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.parameters[4].description": "Number of records skipped. Defaults to 0",
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.parameters[4].in": "query",
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.parameters[4].name": "offset",
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.parameters[4].required": false,
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.parameters[4].type": "string",
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.responses.200.description": "",
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.responses.200.schema.type": "string",
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.security.length": 1,
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.security[0].auth.length": 0,
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.summary": "Flight Status at Arrival Airport",
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.tags.length": 1,
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.tags[0]": "Operations",
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.x-operation-settings.AllowDynamicFormParameters": false,
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.x-operation-settings.AllowDynamicQueryParameters": false,
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.x-operation-settings.CollectParameters": false,
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.x-operation-settings.IsMultiContentStreaming": false,
	"paths./operations/flightstatus/arrivals/{airportCode}/{fromDateTime}.get.x-unitTests.length": 0,
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.description": "Status of all departures from a given airport up to 4 hours from the provided date time.",
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.operationId": "Flight Status at Departure Airport",
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.parameters.length": 5,
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.parameters[0].description": "Departure airport. 3-letter IATA airport code (e.g. 'HAM')",
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.parameters[0].in": "path",
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.parameters[0].name": "airportCode",
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.parameters[0].required": true,
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.parameters[0].type": "string",
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.parameters[1].description": "Start of time range in local time of departure airport (YYYY-MM-DDTHH:mm)",
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.parameters[1].in": "path",
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.parameters[1].name": "fromDateTime",
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.parameters[1].required": true,
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.parameters[1].type": "string",
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.parameters[2].description": "http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")",
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.parameters[2].in": "header",
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.parameters[2].name": "Accept",
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.parameters[2].required": true,
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.parameters[2].type": "string",
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.parameters[3].description": "Number of records returned per request. Defaults to 20, maximum is 100 (if a value bigger than 100 is given, 100 will be taken)",
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.parameters[3].in": "query",
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.parameters[3].name": "limit",
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.parameters[3].required": false,
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.parameters[3].type": "string",
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.parameters[4].description": "Number of records skipped. Defaults to 0",
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.parameters[4].in": "query",
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.parameters[4].name": "offset",
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.parameters[4].required": false,
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.parameters[4].type": "string",
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.responses.200.description": "",
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.responses.200.schema.type": "string",
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.security.length": 1,
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.security[0].auth.length": 0,
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.summary": "Flight Status at Departure Airport",
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.tags.length": 1,
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.tags[0]": "Operations",
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.x-operation-settings.AllowDynamicFormParameters": false,
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.x-operation-settings.AllowDynamicQueryParameters": false,
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.x-operation-settings.CollectParameters": false,
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.x-operation-settings.IsMultiContentStreaming": false,
	"paths./operations/flightstatus/departures/{airportCode}/{fromDateTime}.get.x-unitTests.length": 0,
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.description": "Status of flights between a given origin and destination on a given date.",
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.operationId": "Flight Status by Route",
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.parameters.length": 6,
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.parameters[0].description": "3-letter IATA airport (e.g. 'FRA')",
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.parameters[0].in": "path",
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.parameters[0].name": "origin",
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.parameters[0].required": true,
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.parameters[0].type": "string",
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.parameters[1].description": "3-letter IATA airport code (e.g. 'JFK')",
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.parameters[1].in": "path",
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.parameters[1].name": "destination",
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.parameters[1].required": true,
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.parameters[1].type": "string",
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.parameters[2].description": "Departure date (YYYY-MM-DD) in local time of departure airport",
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.parameters[2].in": "path",
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.parameters[2].name": "date",
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.parameters[2].required": true,
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.parameters[2].type": "string",
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.parameters[3].description": "http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")",
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.parameters[3].in": "header",
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.parameters[3].name": "Accept",
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.parameters[3].required": true,
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.parameters[3].type": "string",
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.parameters[4].description": "Number of records returned per request. Defaults to 20, maximum is 100 (if a value bigger than 100 is given, 100 will be taken)",
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.parameters[4].in": "query",
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.parameters[4].name": "limit",
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.parameters[4].required": false,
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.parameters[4].type": "string",
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.parameters[5].description": "Number of records skipped. Defaults to 0",
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.parameters[5].in": "query",
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.parameters[5].name": "offset",
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.parameters[5].required": false,
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.parameters[5].type": "string",
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.responses.200.description": "",
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.responses.200.schema.type": "string",
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.security.length": 1,
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.security[0].auth.length": 0,
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.summary": "Flight Status by Route",
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.tags.length": 1,
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.tags[0]": "Operations",
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.x-operation-settings.AllowDynamicFormParameters": false,
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.x-operation-settings.AllowDynamicQueryParameters": false,
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.x-operation-settings.CollectParameters": false,
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.x-operation-settings.IsMultiContentStreaming": false,
	"paths./operations/flightstatus/route/{origin}/{destination}/{date}.get.x-unitTests.length": 0,
	"paths./operations/flightstatus/{flightNumber}/{date}.get.description": "Status of a particular flight (boarding, delayed, etc.).",
	"paths./operations/flightstatus/{flightNumber}/{date}.get.operationId": "Flight Status",
	"paths./operations/flightstatus/{flightNumber}/{date}.get.parameters.length": 5,
	"paths./operations/flightstatus/{flightNumber}/{date}.get.parameters[0].description": "Flight number including carrier code and any suffix (e.g. 'LH400')",
	"paths./operations/flightstatus/{flightNumber}/{date}.get.parameters[0].in": "path",
	"paths./operations/flightstatus/{flightNumber}/{date}.get.parameters[0].name": "flightNumber",
	"paths./operations/flightstatus/{flightNumber}/{date}.get.parameters[0].required": true,
	"paths./operations/flightstatus/{flightNumber}/{date}.get.parameters[0].type": "string",
	"paths./operations/flightstatus/{flightNumber}/{date}.get.parameters[1].description": "The departure date (YYYY-MM-DD) in the local time of the departure airport",
	"paths./operations/flightstatus/{flightNumber}/{date}.get.parameters[1].in": "path",
	"paths./operations/flightstatus/{flightNumber}/{date}.get.parameters[1].name": "date",
	"paths./operations/flightstatus/{flightNumber}/{date}.get.parameters[1].required": true,
	"paths./operations/flightstatus/{flightNumber}/{date}.get.parameters[1].type": "string",
	"paths./operations/flightstatus/{flightNumber}/{date}.get.parameters[2].description": "http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")",
	"paths./operations/flightstatus/{flightNumber}/{date}.get.parameters[2].in": "header",
	"paths./operations/flightstatus/{flightNumber}/{date}.get.parameters[2].name": "Accept",
	"paths./operations/flightstatus/{flightNumber}/{date}.get.parameters[2].required": true,
	"paths./operations/flightstatus/{flightNumber}/{date}.get.parameters[2].type": "string",
	"paths./operations/flightstatus/{flightNumber}/{date}.get.parameters[3].description": "Number of records returned per request. Defaults to 20, maximum is 100 (if a value bigger than 100 is given, 100 will be taken)",
	"paths./operations/flightstatus/{flightNumber}/{date}.get.parameters[3].in": "query",
	"paths./operations/flightstatus/{flightNumber}/{date}.get.parameters[3].name": "limit",
	"paths./operations/flightstatus/{flightNumber}/{date}.get.parameters[3].required": false,
	"paths./operations/flightstatus/{flightNumber}/{date}.get.parameters[3].type": "string",
	"paths./operations/flightstatus/{flightNumber}/{date}.get.parameters[4].description": "Number of records skipped. Defaults to 0",
	"paths./operations/flightstatus/{flightNumber}/{date}.get.parameters[4].in": "query",
	"paths./operations/flightstatus/{flightNumber}/{date}.get.parameters[4].name": "offset",
	"paths./operations/flightstatus/{flightNumber}/{date}.get.parameters[4].required": false,
	"paths./operations/flightstatus/{flightNumber}/{date}.get.parameters[4].type": "string",
	"paths./operations/flightstatus/{flightNumber}/{date}.get.responses.200.description": "",
	"paths./operations/flightstatus/{flightNumber}/{date}.get.responses.200.schema.type": "string",
	"paths./operations/flightstatus/{flightNumber}/{date}.get.security.length": 1,
	"paths./operations/flightstatus/{flightNumber}/{date}.get.security[0].auth.length": 0,
	"paths./operations/flightstatus/{flightNumber}/{date}.get.summary": "Flight Status",
	"paths./operations/flightstatus/{flightNumber}/{date}.get.tags.length": 1,
	"paths./operations/flightstatus/{flightNumber}/{date}.get.tags[0]": "Operations",
	"paths./operations/flightstatus/{flightNumber}/{date}.get.x-operation-settings.AllowDynamicFormParameters": false,
	"paths./operations/flightstatus/{flightNumber}/{date}.get.x-operation-settings.AllowDynamicQueryParameters": false,
	"paths./operations/flightstatus/{flightNumber}/{date}.get.x-operation-settings.CollectParameters": false,
	"paths./operations/flightstatus/{flightNumber}/{date}.get.x-operation-settings.IsMultiContentStreaming": false,
	"paths./operations/flightstatus/{flightNumber}/{date}.get.x-unitTests.length": 0,
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.description": "Scheduled flights between given airports on a given date.",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.operationId": "Flight Schedules",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters.length": 7,
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[0].description": "Departure airport. 3-letter IATA airport code (e.g. 'ZRH')",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[0].in": "path",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[0].name": "origin",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[0].required": true,
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[0].type": "string",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[1].description": "Destination airport. 3-letter IATA airport code (e.g. 'FRA')",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[1].in": "path",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[1].name": "destination",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[1].required": true,
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[1].type": "string",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[2].description": "Local departure date and optionally departure time (YYYY-MM-DD or YYYY-MM-DDTHH:mm). When not provided, time is assumed to be 00:01",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[2].in": "path",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[2].name": "fromDateTime",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[2].required": true,
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[2].type": "string",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[3].description": "http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[3].in": "header",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[3].name": "Accept",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[3].required": true,
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[3].type": "string",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[4].description": "Show only direct flights (false=0, true=1). Default is false",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[4].in": "query",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[4].name": "directFlights",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[4].required": false,
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[4].type": "boolean",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[5].description": "Number of records returned per request. Defaults to 20, maximum is 100 (if a value bigger than 100 is given, 100 will be taken)",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[5].in": "query",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[5].name": "limit",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[5].required": false,
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[5].type": "string",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[6].description": "Number of records skipped. Defaults to 0",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[6].in": "query",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[6].name": "offset",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[6].required": false,
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.parameters[6].type": "string",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.responses.200.description": "",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.responses.200.schema.type": "string",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.security.length": 1,
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.security[0].auth.length": 0,
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.summary": "Flight Schedules",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.tags.length": 1,
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.tags[0]": "Operations",
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.x-operation-settings.AllowDynamicFormParameters": false,
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.x-operation-settings.AllowDynamicQueryParameters": false,
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.x-operation-settings.CollectParameters": false,
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.x-operation-settings.IsMultiContentStreaming": false,
	"paths./operations/schedules/{origin}/{destination}/{fromDateTime}.get.x-unitTests.length": 0,
	"paths./references/aircraft/{aircraftCode}.get.description": "List all aircraft types or one specific aircraft type.",
	"paths./references/aircraft/{aircraftCode}.get.operationId": "Aircraft",
	"paths./references/aircraft/{aircraftCode}.get.parameters.length": 4,
	"paths./references/aircraft/{aircraftCode}.get.parameters[0].description": "http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")",
	"paths./references/aircraft/{aircraftCode}.get.parameters[0].in": "header",
	"paths./references/aircraft/{aircraftCode}.get.parameters[0].name": "Accept",
	"paths./references/aircraft/{aircraftCode}.get.parameters[0].required": true,
	"paths./references/aircraft/{aircraftCode}.get.parameters[0].type": "string",
	"paths./references/aircraft/{aircraftCode}.get.parameters[1].default": "33P",
	"paths./references/aircraft/{aircraftCode}.get.parameters[1].description": "3-character IATA aircraft code",
	"paths./references/aircraft/{aircraftCode}.get.parameters[1].in": "path",
	"paths./references/aircraft/{aircraftCode}.get.parameters[1].name": "aircraftCode",
	"paths./references/aircraft/{aircraftCode}.get.parameters[1].required": true,
	"paths./references/aircraft/{aircraftCode}.get.parameters[1].type": "string",
	"paths./references/aircraft/{aircraftCode}.get.parameters[2].default": "20",
	"paths./references/aircraft/{aircraftCode}.get.parameters[2].description": "Number of records returned per request. Defaults to 20, maximum is 100 (if a value bigger than 100 is given, 100 will be taken)",
	"paths./references/aircraft/{aircraftCode}.get.parameters[2].in": "query",
	"paths./references/aircraft/{aircraftCode}.get.parameters[2].name": "limit",
	"paths./references/aircraft/{aircraftCode}.get.parameters[2].required": false,
	"paths./references/aircraft/{aircraftCode}.get.parameters[2].type": "string",
	"paths./references/aircraft/{aircraftCode}.get.parameters[3].default": "0",
	"paths./references/aircraft/{aircraftCode}.get.parameters[3].description": "Number of records skipped. Defaults to 0",
	"paths./references/aircraft/{aircraftCode}.get.parameters[3].in": "query",
	"paths./references/aircraft/{aircraftCode}.get.parameters[3].name": "offset",
	"paths./references/aircraft/{aircraftCode}.get.parameters[3].required": false,
	"paths./references/aircraft/{aircraftCode}.get.parameters[3].type": "string",
	"paths./references/aircraft/{aircraftCode}.get.responses.200.description": "",
	"paths./references/aircraft/{aircraftCode}.get.responses.200.schema.type": "string",
	"paths./references/aircraft/{aircraftCode}.get.security.length": 1,
	"paths./references/aircraft/{aircraftCode}.get.security[0].auth.length": 0,
	"paths./references/aircraft/{aircraftCode}.get.summary": "Aircraft",
	"paths./references/aircraft/{aircraftCode}.get.tags.length": 1,
	"paths./references/aircraft/{aircraftCode}.get.tags[0]": "Reference Data",
	"paths./references/aircraft/{aircraftCode}.get.x-operation-settings.AllowDynamicFormParameters": false,
	"paths./references/aircraft/{aircraftCode}.get.x-operation-settings.AllowDynamicQueryParameters": false,
	"paths./references/aircraft/{aircraftCode}.get.x-operation-settings.CollectParameters": false,
	"paths./references/aircraft/{aircraftCode}.get.x-operation-settings.IsMultiContentStreaming": false,
	"paths./references/aircraft/{aircraftCode}.get.x-unitTests.length": 0,
	"paths./references/airlines/{airlineCode}.get.description": "List all airlines or one specific airline.",
	"paths./references/airlines/{airlineCode}.get.operationId": "Airlines",
	"paths./references/airlines/{airlineCode}.get.parameters.length": 4,
	"paths./references/airlines/{airlineCode}.get.parameters[0].description": "http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")",
	"paths./references/airlines/{airlineCode}.get.parameters[0].in": "header",
	"paths./references/airlines/{airlineCode}.get.parameters[0].name": "Accept",
	"paths./references/airlines/{airlineCode}.get.parameters[0].required": true,
	"paths./references/airlines/{airlineCode}.get.parameters[0].type": "string",
	"paths./references/airlines/{airlineCode}.get.parameters[1].default": "LH",
	"paths./references/airlines/{airlineCode}.get.parameters[1].description": "2-character IATA airline/carrier code",
	"paths./references/airlines/{airlineCode}.get.parameters[1].in": "path",
	"paths./references/airlines/{airlineCode}.get.parameters[1].name": "airlineCode",
	"paths./references/airlines/{airlineCode}.get.parameters[1].required": true,
	"paths./references/airlines/{airlineCode}.get.parameters[1].type": "string",
	"paths./references/airlines/{airlineCode}.get.parameters[2].default": "20",
	"paths./references/airlines/{airlineCode}.get.parameters[2].description": "Number of records returned per request. Defaults to 20, maximum is 100 (if a value bigger than 100 is given, 100 will be taken)",
	"paths./references/airlines/{airlineCode}.get.parameters[2].in": "query",
	"paths./references/airlines/{airlineCode}.get.parameters[2].name": "limit",
	"paths./references/airlines/{airlineCode}.get.parameters[2].required": false,
	"paths./references/airlines/{airlineCode}.get.parameters[2].type": "string",
	"paths./references/airlines/{airlineCode}.get.parameters[3].default": "0",
	"paths./references/airlines/{airlineCode}.get.parameters[3].description": "Number of records skipped. Defaults to 0",
	"paths./references/airlines/{airlineCode}.get.parameters[3].in": "query",
	"paths./references/airlines/{airlineCode}.get.parameters[3].name": "offset",
	"paths./references/airlines/{airlineCode}.get.parameters[3].required": false,
	"paths./references/airlines/{airlineCode}.get.parameters[3].type": "string",
	"paths./references/airlines/{airlineCode}.get.responses.200.description": "",
	"paths./references/airlines/{airlineCode}.get.responses.200.schema.type": "string",
	"paths./references/airlines/{airlineCode}.get.security.length": 1,
	"paths./references/airlines/{airlineCode}.get.security[0].auth.length": 0,
	"paths./references/airlines/{airlineCode}.get.summary": "Airlines",
	"paths./references/airlines/{airlineCode}.get.tags.length": 1,
	"paths./references/airlines/{airlineCode}.get.tags[0]": "Reference Data",
	"paths./references/airlines/{airlineCode}.get.x-operation-settings.AllowDynamicFormParameters": false,
	"paths./references/airlines/{airlineCode}.get.x-operation-settings.AllowDynamicQueryParameters": false,
	"paths./references/airlines/{airlineCode}.get.x-operation-settings.CollectParameters": false,
	"paths./references/airlines/{airlineCode}.get.x-operation-settings.IsMultiContentStreaming": false,
	"paths./references/airlines/{airlineCode}.get.x-unitTests.length": 0,
	"paths./references/airports/nearest/{latitude},{longitude}.get.description": "List the 5 closest airports to the given latitude and longitude, irrespective of the radius of the reference point.",
	"paths./references/airports/nearest/{latitude},{longitude}.get.operationId": "Nearest Airports",
	"paths./references/airports/nearest/{latitude},{longitude}.get.parameters.length": 4,
	"paths./references/airports/nearest/{latitude},{longitude}.get.parameters[0].description": "Latitude in decimal format to at most 3 decimal places",
	"paths./references/airports/nearest/{latitude},{longitude}.get.parameters[0].format": "int32",
	"paths./references/airports/nearest/{latitude},{longitude}.get.parameters[0].in": "path",
	"paths./references/airports/nearest/{latitude},{longitude}.get.parameters[0].name": "latitude",
	"paths./references/airports/nearest/{latitude},{longitude}.get.parameters[0].required": true,
	"paths./references/airports/nearest/{latitude},{longitude}.get.parameters[0].type": "integer",
	"paths./references/airports/nearest/{latitude},{longitude}.get.parameters[1].description": "Longitude in decimal format to at most 3 decimal places",
	"paths./references/airports/nearest/{latitude},{longitude}.get.parameters[1].format": "int32",
	"paths./references/airports/nearest/{latitude},{longitude}.get.parameters[1].in": "path",
	"paths./references/airports/nearest/{latitude},{longitude}.get.parameters[1].name": "longitude",
	"paths./references/airports/nearest/{latitude},{longitude}.get.parameters[1].required": true,
	"paths./references/airports/nearest/{latitude},{longitude}.get.parameters[1].type": "integer",
	"paths./references/airports/nearest/{latitude},{longitude}.get.parameters[2].description": "http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")",
	"paths./references/airports/nearest/{latitude},{longitude}.get.parameters[2].in": "header",
	"paths./references/airports/nearest/{latitude},{longitude}.get.parameters[2].name": "Accept",
	"paths./references/airports/nearest/{latitude},{longitude}.get.parameters[2].required": true,
	"paths./references/airports/nearest/{latitude},{longitude}.get.parameters[2].type": "string",
	"paths./references/airports/nearest/{latitude},{longitude}.get.parameters[3].description": "2 letter ISO 3166-1 language code",
	"paths./references/airports/nearest/{latitude},{longitude}.get.parameters[3].in": "query",
	"paths./references/airports/nearest/{latitude},{longitude}.get.parameters[3].name": "lang",
	"paths./references/airports/nearest/{latitude},{longitude}.get.parameters[3].required": false,
	"paths./references/airports/nearest/{latitude},{longitude}.get.parameters[3].type": "string",
	"paths./references/airports/nearest/{latitude},{longitude}.get.responses.200.description": "",
	"paths./references/airports/nearest/{latitude},{longitude}.get.responses.200.schema.type": "string",
	"paths./references/airports/nearest/{latitude},{longitude}.get.security.length": 1,
	"paths./references/airports/nearest/{latitude},{longitude}.get.security[0].auth.length": 0,
	"paths./references/airports/nearest/{latitude},{longitude}.get.summary": "Nearest Airports",
	"paths./references/airports/nearest/{latitude},{longitude}.get.tags.length": 1,
	"paths./references/airports/nearest/{latitude},{longitude}.get.tags[0]": "Reference Data",
	"paths./references/airports/nearest/{latitude},{longitude}.get.x-operation-settings.AllowDynamicFormParameters": false,
	"paths./references/airports/nearest/{latitude},{longitude}.get.x-operation-settings.AllowDynamicQueryParameters": false,
	"paths./references/airports/nearest/{latitude},{longitude}.get.x-operation-settings.CollectParameters": false,
	"paths./references/airports/nearest/{latitude},{longitude}.get.x-operation-settings.IsMultiContentStreaming": false,
	"paths./references/airports/nearest/{latitude},{longitude}.get.x-unitTests.length": 0,
	"paths./references/airports/{airportCode}.get.description": "List all airports or one specific airport. All airports response is very large. It is possible to request the response in a specific language.",
	"paths./references/airports/{airportCode}.get.operationId": "Airports",
	"paths./references/airports/{airportCode}.get.parameters.length": 6,
	"paths./references/airports/{airportCode}.get.parameters[0].description": "http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")",
	"paths./references/airports/{airportCode}.get.parameters[0].in": "header",
	"paths./references/airports/{airportCode}.get.parameters[0].name": "Accept",
	"paths./references/airports/{airportCode}.get.parameters[0].required": true,
	"paths./references/airports/{airportCode}.get.parameters[0].type": "string",
	"paths./references/airports/{airportCode}.get.parameters[1].default": "TXL",
	"paths./references/airports/{airportCode}.get.parameters[1].description": "3-letter IATA airport code",
	"paths./references/airports/{airportCode}.get.parameters[1].in": "path",
	"paths./references/airports/{airportCode}.get.parameters[1].name": "airportCode",
	"paths./references/airports/{airportCode}.get.parameters[1].required": true,
	"paths./references/airports/{airportCode}.get.parameters[1].type": "string",
	"paths./references/airports/{airportCode}.get.parameters[2].description": "2-letter ISO 3166-1 language code",
	"paths./references/airports/{airportCode}.get.parameters[2].in": "query",
	"paths./references/airports/{airportCode}.get.parameters[2].name": "lang",
	"paths./references/airports/{airportCode}.get.parameters[2].required": false,
	"paths./references/airports/{airportCode}.get.parameters[2].type": "string",
	"paths./references/airports/{airportCode}.get.parameters[3].default": "20",
	"paths./references/airports/{airportCode}.get.parameters[3].description": "Number of records returned per request. Defaults to 20, maximum is 100 (if a value bigger than 100 is given, 100 will be taken)",
	"paths./references/airports/{airportCode}.get.parameters[3].in": "query",
	"paths./references/airports/{airportCode}.get.parameters[3].name": "limit",
	"paths./references/airports/{airportCode}.get.parameters[3].required": false,
	"paths./references/airports/{airportCode}.get.parameters[3].type": "string",
	"paths./references/airports/{airportCode}.get.parameters[4].default": "0",
	"paths./references/airports/{airportCode}.get.parameters[4].description": "Number of records skipped. Defaults to 0",
	"paths./references/airports/{airportCode}.get.parameters[4].in": "query",
	"paths./references/airports/{airportCode}.get.parameters[4].name": "offset",
	"paths./references/airports/{airportCode}.get.parameters[4].required": false,
	"paths./references/airports/{airportCode}.get.parameters[4].type": "string",
	"paths./references/airports/{airportCode}.get.parameters[5].description": "Restrict the results to locations with flights operated by LH (false=0, true=1)",
	"paths./references/airports/{airportCode}.get.parameters[5].in": "query",
	"paths./references/airports/{airportCode}.get.parameters[5].name": "LHoperated",
	"paths./references/airports/{airportCode}.get.parameters[5].required": false,
	"paths./references/airports/{airportCode}.get.parameters[5].type": "boolean",
	"paths./references/airports/{airportCode}.get.responses.200.description": "",
	"paths./references/airports/{airportCode}.get.responses.200.schema.type": "string",
	"paths./references/airports/{airportCode}.get.security.length": 1,
	"paths./references/airports/{airportCode}.get.security[0].auth.length": 0,
	"paths./references/airports/{airportCode}.get.summary": "Airports",
	"paths./references/airports/{airportCode}.get.tags.length": 1,
	"paths./references/airports/{airportCode}.get.tags[0]": "Reference Data",
	"paths./references/airports/{airportCode}.get.x-operation-settings.AllowDynamicFormParameters": false,
	"paths./references/airports/{airportCode}.get.x-operation-settings.AllowDynamicQueryParameters": false,
	"paths./references/airports/{airportCode}.get.x-operation-settings.CollectParameters": false,
	"paths./references/airports/{airportCode}.get.x-operation-settings.IsMultiContentStreaming": false,
	"paths./references/airports/{airportCode}.get.x-unitTests.length": 0,
	"paths./references/cities/{cityCode}.get.description": "List all cities or one specific city. It is possible to request the response in a specific language.",
	"paths./references/cities/{cityCode}.get.operationId": "Cities",
	"paths./references/cities/{cityCode}.get.parameters.length": 5,
	"paths./references/cities/{cityCode}.get.parameters[0].description": "http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")",
	"paths./references/cities/{cityCode}.get.parameters[0].in": "header",
	"paths./references/cities/{cityCode}.get.parameters[0].name": "Accept",
	"paths./references/cities/{cityCode}.get.parameters[0].required": true,
	"paths./references/cities/{cityCode}.get.parameters[0].type": "string",
	"paths./references/cities/{cityCode}.get.parameters[1].default": "BER",
	"paths./references/cities/{cityCode}.get.parameters[1].description": "3-letter IATA city code",
	"paths./references/cities/{cityCode}.get.parameters[1].in": "path",
	"paths./references/cities/{cityCode}.get.parameters[1].name": "cityCode",
	"paths./references/cities/{cityCode}.get.parameters[1].required": true,
	"paths./references/cities/{cityCode}.get.parameters[1].type": "string",
	"paths./references/cities/{cityCode}.get.parameters[2].description": "2 letter ISO 3166-1 language code",
	"paths./references/cities/{cityCode}.get.parameters[2].in": "query",
	"paths./references/cities/{cityCode}.get.parameters[2].name": "lang",
	"paths./references/cities/{cityCode}.get.parameters[2].required": false,
	"paths./references/cities/{cityCode}.get.parameters[2].type": "string",
	"paths./references/cities/{cityCode}.get.parameters[3].default": "20",
	"paths./references/cities/{cityCode}.get.parameters[3].description": "Number of records returned per request. Defaults to 20, maximum is 100 (if a value bigger than 100 is given, 100 will be taken)",
	"paths./references/cities/{cityCode}.get.parameters[3].in": "query",
	"paths./references/cities/{cityCode}.get.parameters[3].name": "limit",
	"paths./references/cities/{cityCode}.get.parameters[3].required": false,
	"paths./references/cities/{cityCode}.get.parameters[3].type": "string",
	"paths./references/cities/{cityCode}.get.parameters[4].default": "0",
	"paths./references/cities/{cityCode}.get.parameters[4].description": "Number of records skipped. Defaults to 0",
	"paths./references/cities/{cityCode}.get.parameters[4].in": "query",
	"paths./references/cities/{cityCode}.get.parameters[4].name": "offset",
	"paths./references/cities/{cityCode}.get.parameters[4].required": false,
	"paths./references/cities/{cityCode}.get.parameters[4].type": "string",
	"paths./references/cities/{cityCode}.get.responses.200.description": "",
	"paths./references/cities/{cityCode}.get.responses.200.schema.type": "string",
	"paths./references/cities/{cityCode}.get.security.length": 1,
	"paths./references/cities/{cityCode}.get.security[0].auth.length": 0,
	"paths./references/cities/{cityCode}.get.summary": "Cities",
	"paths./references/cities/{cityCode}.get.tags.length": 1,
	"paths./references/cities/{cityCode}.get.tags[0]": "Reference Data",
	"paths./references/cities/{cityCode}.get.x-operation-settings.AllowDynamicFormParameters": false,
	"paths./references/cities/{cityCode}.get.x-operation-settings.AllowDynamicQueryParameters": false,
	"paths./references/cities/{cityCode}.get.x-operation-settings.CollectParameters": false,
	"paths./references/cities/{cityCode}.get.x-operation-settings.IsMultiContentStreaming": false,
	"paths./references/cities/{cityCode}.get.x-unitTests.length": 0,
	"paths./references/countries/{countryCode}.get.description": "List all countries or one specific country. It is possible to request the response in a specific language.",
	"paths./references/countries/{countryCode}.get.operationId": "Countries",
	"paths./references/countries/{countryCode}.get.parameters.length": 5,
	"paths./references/countries/{countryCode}.get.parameters[0].description": "http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")",
	"paths./references/countries/{countryCode}.get.parameters[0].in": "header",
	"paths./references/countries/{countryCode}.get.parameters[0].name": "Accept",
	"paths./references/countries/{countryCode}.get.parameters[0].required": true,
	"paths./references/countries/{countryCode}.get.parameters[0].type": "string",
	"paths./references/countries/{countryCode}.get.parameters[1].default": "DK",
	"paths./references/countries/{countryCode}.get.parameters[1].description": "2-letter ISO 3166-1 country code",
	"paths./references/countries/{countryCode}.get.parameters[1].in": "path",
	"paths./references/countries/{countryCode}.get.parameters[1].name": "countryCode",
	"paths./references/countries/{countryCode}.get.parameters[1].required": true,
	"paths./references/countries/{countryCode}.get.parameters[1].type": "string",
	"paths./references/countries/{countryCode}.get.parameters[2].description": "2 letter ISO 3166-1 language code",
	"paths./references/countries/{countryCode}.get.parameters[2].in": "query",
	"paths./references/countries/{countryCode}.get.parameters[2].name": "lang",
	"paths./references/countries/{countryCode}.get.parameters[2].required": false,
	"paths./references/countries/{countryCode}.get.parameters[2].type": "string",
	"paths./references/countries/{countryCode}.get.parameters[3].default": "20",
	"paths./references/countries/{countryCode}.get.parameters[3].description": "Number of records returned per request. Defaults to 20, maximum is 100 (if a value bigger than 100 is given, 100 will be taken)",
	"paths./references/countries/{countryCode}.get.parameters[3].in": "query",
	"paths./references/countries/{countryCode}.get.parameters[3].name": "limit",
	"paths./references/countries/{countryCode}.get.parameters[3].required": false,
	"paths./references/countries/{countryCode}.get.parameters[3].type": "string",
	"paths./references/countries/{countryCode}.get.parameters[4].default": "0",
	"paths./references/countries/{countryCode}.get.parameters[4].description": "Number of records skipped. Defaults to 0",
	"paths./references/countries/{countryCode}.get.parameters[4].in": "query",
	"paths./references/countries/{countryCode}.get.parameters[4].name": "offset",
	"paths./references/countries/{countryCode}.get.parameters[4].required": false,
	"paths./references/countries/{countryCode}.get.parameters[4].type": "string",
	"paths./references/countries/{countryCode}.get.responses.200.description": "",
	"paths./references/countries/{countryCode}.get.responses.200.schema.type": "string",
	"paths./references/countries/{countryCode}.get.security.length": 1,
	"paths./references/countries/{countryCode}.get.security[0].auth.length": 0,
	"paths./references/countries/{countryCode}.get.summary": "Countries",
	"paths./references/countries/{countryCode}.get.tags.length": 1,
	"paths./references/countries/{countryCode}.get.tags[0]": "Reference Data",
	"paths./references/countries/{countryCode}.get.x-operation-settings.AllowDynamicFormParameters": false,
	"paths./references/countries/{countryCode}.get.x-operation-settings.AllowDynamicQueryParameters": false,
	"paths./references/countries/{countryCode}.get.x-operation-settings.CollectParameters": false,
	"paths./references/countries/{countryCode}.get.x-operation-settings.IsMultiContentStreaming": false,
	"paths./references/countries/{countryCode}.get.x-unitTests.length": 0,
	"produces.length": 1,
	"produces[0]": "application/json",
	"schemes.length": 1,
	"schemes[0]": "https",
	"securityDefinitions.auth.flow": "application",
	"securityDefinitions.auth.scopes.read:LH Open API": "read access",
	"securityDefinitions.auth.tokenUrl": "https://api.lufthansa.com/v1/oauth/token",
	"securityDefinitions.auth.type": "oauth2",
	"swagger": "2.0"
}