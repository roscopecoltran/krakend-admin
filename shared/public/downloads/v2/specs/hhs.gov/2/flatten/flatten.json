{
	"basePath": "/api/v2",
	"consumes.length": 1,
	"consumes[0]": "",
	"definitions.AlternateImage.properties.height.format": "int32",
	"definitions.AlternateImage.properties.height.type": "integer",
	"definitions.AlternateImage.properties.id.format": "int64",
	"definitions.AlternateImage.properties.id.type": "integer",
	"definitions.AlternateImage.properties.name.type": "string",
	"definitions.AlternateImage.properties.url.type": "string",
	"definitions.AlternateImage.properties.width.format": "int32",
	"definitions.AlternateImage.properties.width.type": "integer",
	"definitions.AlternateImage.required.length": 2,
	"definitions.AlternateImage.required[0]": "id",
	"definitions.AlternateImage.required[1]": "url",
	"definitions.ApiResponse.properties.callback.type": "string",
	"definitions.ApiResponse.properties.meta.$ref": "#/definitions/Meta",
	"definitions.ApiResponse.properties.results.items.$ref": "#/definitions/MediaItem",
	"definitions.ApiResponse.properties.results.type": "array",
	"definitions.ApiResponse.required.length": 3,
	"definitions.ApiResponse.required[0]": "meta",
	"definitions.ApiResponse.required[1]": "results",
	"definitions.ApiResponse.required[2]": "callback",
	"definitions.Campaign.properties.contactEmail.type": "string",
	"definitions.Campaign.properties.description.type": "string",
	"definitions.Campaign.properties.endDate.format": "date",
	"definitions.Campaign.properties.endDate.type": "string",
	"definitions.Campaign.properties.id.format": "int64",
	"definitions.Campaign.properties.id.type": "integer",
	"definitions.Campaign.properties.mediaItems.items.$ref": "#/definitions/MediaItem",
	"definitions.Campaign.properties.mediaItems.type": "array",
	"definitions.Campaign.properties.name.type": "string",
	"definitions.Campaign.properties.source.$ref": "#/definitions/Source",
	"definitions.Campaign.properties.startDate.format": "date",
	"definitions.Campaign.properties.startDate.type": "string",
	"definitions.Campaign.required.length": 3,
	"definitions.Campaign.required[0]": "id",
	"definitions.Campaign.required[1]": "name",
	"definitions.Campaign.required[2]": "startDate",
	"definitions.Campaigns.properties.callback.type": "string",
	"definitions.Campaigns.properties.meta.$ref": "#/definitions/Meta",
	"definitions.Campaigns.properties.results.items.$ref": "#/definitions/Campaign",
	"definitions.Campaigns.properties.results.type": "array",
	"definitions.Campaigns.required.length": 3,
	"definitions.Campaigns.required[0]": "meta",
	"definitions.Campaigns.required[1]": "callback",
	"definitions.Campaigns.required[2]": "results",
	"definitions.Collection.properties.campaigns.items.$ref": "#/definitions/Campaign",
	"definitions.Collection.properties.campaigns.type": "array",
	"definitions.Collection.properties.dateContentAuthored.format": "date",
	"definitions.Collection.properties.dateContentAuthored.type": "string",
	"definitions.Collection.properties.dateContentPublished.format": "date",
	"definitions.Collection.properties.dateContentPublished.type": "string",
	"definitions.Collection.properties.dateContentReviewed.format": "date",
	"definitions.Collection.properties.dateContentReviewed.type": "string",
	"definitions.Collection.properties.dateContentUpdated.format": "date",
	"definitions.Collection.properties.dateContentUpdated.type": "string",
	"definitions.Collection.properties.dateSyndicationCaptured.format": "date",
	"definitions.Collection.properties.dateSyndicationCaptured.type": "string",
	"definitions.Collection.properties.dateSyndicationUpdated.format": "date",
	"definitions.Collection.properties.dateSyndicationUpdated.type": "string",
	"definitions.Collection.properties.dateSyndicationVisible.format": "date",
	"definitions.Collection.properties.dateSyndicationVisible.type": "string",
	"definitions.Collection.properties.description.type": "string",
	"definitions.Collection.properties.externalGuid.type": "string",
	"definitions.Collection.properties.hash.type": "string",
	"definitions.Collection.properties.id.format": "int64",
	"definitions.Collection.properties.id.type": "integer",
	"definitions.Collection.properties.language.$ref": "#/definitions/Language",
	"definitions.Collection.properties.mediaItems.items.$ref": "#/definitions/MediaItem",
	"definitions.Collection.properties.mediaItems.type": "array",
	"definitions.Collection.properties.name.type": "string",
	"definitions.Collection.properties.source.$ref": "#/definitions/Source",
	"definitions.Collection.properties.sourceUrl.type": "string",
	"definitions.EmbedCode.properties.callback.type": "string",
	"definitions.EmbedCode.properties.meta.$ref": "#/definitions/Meta",
	"definitions.EmbedCode.properties.results.items.$ref": "#/definitions/Snippet",
	"definitions.EmbedCode.properties.results.type": "array",
	"definitions.EmbedCode.required.length": 3,
	"definitions.EmbedCode.required[0]": "meta",
	"definitions.EmbedCode.required[1]": "callback",
	"definitions.EmbedCode.required[2]": "results",
	"definitions.Html.properties.createdBy.type": "string",
	"definitions.Html.properties.customAttributionUrl.type": "string",
	"definitions.Html.properties.customPreviewUrl.type": "string",
	"definitions.Html.properties.customThumbnailUrl.type": "string",
	"definitions.Html.properties.dateContentAuthored.format": "date",
	"definitions.Html.properties.dateContentAuthored.type": "string",
	"definitions.Html.properties.dateContentPublished.format": "date",
	"definitions.Html.properties.dateContentPublished.type": "string",
	"definitions.Html.properties.dateContentReviewed.format": "date",
	"definitions.Html.properties.dateContentReviewed.type": "string",
	"definitions.Html.properties.dateContentUpdated.format": "date",
	"definitions.Html.properties.dateContentUpdated.type": "string",
	"definitions.Html.properties.dateSyndicationCaptured.format": "date",
	"definitions.Html.properties.dateSyndicationCaptured.type": "string",
	"definitions.Html.properties.dateSyndicationUpdated.format": "date",
	"definitions.Html.properties.dateSyndicationUpdated.type": "string",
	"definitions.Html.properties.dateSyndicationVisible.format": "date",
	"definitions.Html.properties.dateSyndicationVisible.type": "string",
	"definitions.Html.properties.description.type": "string",
	"definitions.Html.properties.extendedAttributes.type": "object",
	"definitions.Html.properties.externalGuid.type": "string",
	"definitions.Html.properties.foreignSyndicationAPIUrl.type": "string",
	"definitions.Html.properties.hash.type": "string",
	"definitions.Html.properties.id.format": "int64",
	"definitions.Html.properties.id.type": "integer",
	"definitions.Html.properties.language.$ref": "#/definitions/Language",
	"definitions.Html.properties.mediaType.type": "string",
	"definitions.Html.properties.name.type": "string",
	"definitions.Html.properties.source.$ref": "#/definitions/Source",
	"definitions.Html.properties.sourceUrl.type": "string",
	"definitions.Html.properties.targetUrl.type": "string",
	"definitions.Html.required.length": 11,
	"definitions.Html.required[0]": "id",
	"definitions.Html.required[10]": "foreignSyndicationAPIUrl",
	"definitions.Html.required[1]": "name",
	"definitions.Html.required[2]": "mediaType",
	"definitions.Html.required[3]": "sourceUrl",
	"definitions.Html.required[4]": "dateSyndicationCaptured",
	"definitions.Html.required[5]": "dateSyndicationUpdated",
	"definitions.Html.required[6]": "dateSyndicationVisible",
	"definitions.Html.required[7]": "language",
	"definitions.Html.required[8]": "source",
	"definitions.Html.required[9]": "createdBy",
	"definitions.Image.properties.altText.type": "string",
	"definitions.Image.properties.createdBy.type": "string",
	"definitions.Image.properties.customAttributionUrl.type": "string",
	"definitions.Image.properties.customPreviewUrl.type": "string",
	"definitions.Image.properties.customThumbnailUrl.type": "string",
	"definitions.Image.properties.dateContentAuthored.format": "date",
	"definitions.Image.properties.dateContentAuthored.type": "string",
	"definitions.Image.properties.dateContentPublished.format": "date",
	"definitions.Image.properties.dateContentPublished.type": "string",
	"definitions.Image.properties.dateContentReviewed.format": "date",
	"definitions.Image.properties.dateContentReviewed.type": "string",
	"definitions.Image.properties.dateContentUpdated.format": "date",
	"definitions.Image.properties.dateContentUpdated.type": "string",
	"definitions.Image.properties.dateSyndicationCaptured.format": "date",
	"definitions.Image.properties.dateSyndicationCaptured.type": "string",
	"definitions.Image.properties.dateSyndicationUpdated.format": "date",
	"definitions.Image.properties.dateSyndicationUpdated.type": "string",
	"definitions.Image.properties.dateSyndicationVisible.format": "date",
	"definitions.Image.properties.dateSyndicationVisible.type": "string",
	"definitions.Image.properties.description.type": "string",
	"definitions.Image.properties.extendedAttributes.type": "object",
	"definitions.Image.properties.externalGuid.type": "string",
	"definitions.Image.properties.foreignSyndicationAPIUrl.type": "string",
	"definitions.Image.properties.hash.type": "string",
	"definitions.Image.properties.height.format": "int32",
	"definitions.Image.properties.height.type": "integer",
	"definitions.Image.properties.id.format": "int64",
	"definitions.Image.properties.id.type": "integer",
	"definitions.Image.properties.imageFormat.type": "string",
	"definitions.Image.properties.language.$ref": "#/definitions/Language",
	"definitions.Image.properties.mediaType.type": "string",
	"definitions.Image.properties.name.type": "string",
	"definitions.Image.properties.source.$ref": "#/definitions/Source",
	"definitions.Image.properties.sourceUrl.type": "string",
	"definitions.Image.properties.targetUrl.type": "string",
	"definitions.Image.properties.width.format": "int32",
	"definitions.Image.properties.width.type": "integer",
	"definitions.Image.required.length": 15,
	"definitions.Image.required[0]": "id",
	"definitions.Image.required[10]": "foreignSyndicationAPIUrl",
	"definitions.Image.required[11]": "width",
	"definitions.Image.required[12]": "height",
	"definitions.Image.required[13]": "imageFormat",
	"definitions.Image.required[14]": "altText",
	"definitions.Image.required[1]": "name",
	"definitions.Image.required[2]": "mediaType",
	"definitions.Image.required[3]": "sourceUrl",
	"definitions.Image.required[4]": "dateSyndicationCaptured",
	"definitions.Image.required[5]": "dateSyndicationUpdated",
	"definitions.Image.required[6]": "dateSyndicationVisible",
	"definitions.Image.required[7]": "language",
	"definitions.Image.required[8]": "source",
	"definitions.Image.required[9]": "createdBy",
	"definitions.Infographic.properties.altText.type": "string",
	"definitions.Infographic.properties.createdBy.type": "string",
	"definitions.Infographic.properties.customAttributionUrl.type": "string",
	"definitions.Infographic.properties.customPreviewUrl.type": "string",
	"definitions.Infographic.properties.customThumbnailUrl.type": "string",
	"definitions.Infographic.properties.dateContentAuthored.format": "date",
	"definitions.Infographic.properties.dateContentAuthored.type": "string",
	"definitions.Infographic.properties.dateContentPublished.format": "date",
	"definitions.Infographic.properties.dateContentPublished.type": "string",
	"definitions.Infographic.properties.dateContentReviewed.format": "date",
	"definitions.Infographic.properties.dateContentReviewed.type": "string",
	"definitions.Infographic.properties.dateContentUpdated.format": "date",
	"definitions.Infographic.properties.dateContentUpdated.type": "string",
	"definitions.Infographic.properties.dateSyndicationCaptured.format": "date",
	"definitions.Infographic.properties.dateSyndicationCaptured.type": "string",
	"definitions.Infographic.properties.dateSyndicationUpdated.format": "date",
	"definitions.Infographic.properties.dateSyndicationUpdated.type": "string",
	"definitions.Infographic.properties.dateSyndicationVisible.format": "date",
	"definitions.Infographic.properties.dateSyndicationVisible.type": "string",
	"definitions.Infographic.properties.description.type": "string",
	"definitions.Infographic.properties.extendedAttributes.type": "object",
	"definitions.Infographic.properties.externalGuid.type": "string",
	"definitions.Infographic.properties.foreignSyndicationAPIUrl.type": "string",
	"definitions.Infographic.properties.hash.type": "string",
	"definitions.Infographic.properties.height.format": "int32",
	"definitions.Infographic.properties.height.type": "integer",
	"definitions.Infographic.properties.id.format": "int64",
	"definitions.Infographic.properties.id.type": "integer",
	"definitions.Infographic.properties.imageFormat.type": "string",
	"definitions.Infographic.properties.language.$ref": "#/definitions/Language",
	"definitions.Infographic.properties.mediaType.type": "string",
	"definitions.Infographic.properties.name.type": "string",
	"definitions.Infographic.properties.source.$ref": "#/definitions/Source",
	"definitions.Infographic.properties.sourceUrl.type": "string",
	"definitions.Infographic.properties.targetUrl.type": "string",
	"definitions.Infographic.properties.width.format": "int32",
	"definitions.Infographic.properties.width.type": "integer",
	"definitions.Infographic.required.length": 15,
	"definitions.Infographic.required[0]": "id",
	"definitions.Infographic.required[10]": "foreignSyndicationAPIUrl",
	"definitions.Infographic.required[11]": "width",
	"definitions.Infographic.required[12]": "height",
	"definitions.Infographic.required[13]": "imageFormat",
	"definitions.Infographic.required[14]": "altText",
	"definitions.Infographic.required[1]": "name",
	"definitions.Infographic.required[2]": "mediaType",
	"definitions.Infographic.required[3]": "sourceUrl",
	"definitions.Infographic.required[4]": "dateSyndicationCaptured",
	"definitions.Infographic.required[5]": "dateSyndicationUpdated",
	"definitions.Infographic.required[6]": "dateSyndicationVisible",
	"definitions.Infographic.required[7]": "language",
	"definitions.Infographic.required[8]": "source",
	"definitions.Infographic.required[9]": "createdBy",
	"definitions.Language.properties.id.format": "int64",
	"definitions.Language.properties.id.type": "integer",
	"definitions.Language.properties.isActive.type": "boolean",
	"definitions.Language.properties.isoCode.type": "string",
	"definitions.Language.properties.name.type": "string",
	"definitions.Language.required.length": 4,
	"definitions.Language.required[0]": "id",
	"definitions.Language.required[1]": "name",
	"definitions.Language.required[2]": "isoCode",
	"definitions.Language.required[3]": "isActive",
	"definitions.Languages.properties.callback.type": "string",
	"definitions.Languages.properties.meta.$ref": "#/definitions/Meta",
	"definitions.Languages.properties.results.items.$ref": "#/definitions/Language",
	"definitions.Languages.properties.results.type": "array",
	"definitions.Languages.required.length": 3,
	"definitions.Languages.required[0]": "meta",
	"definitions.Languages.required[1]": "callback",
	"definitions.Languages.required[2]": "results",
	"definitions.Likes.properties.likes.format": "int32",
	"definitions.Likes.properties.likes.type": "integer",
	"definitions.Likes.required.length": 1,
	"definitions.Likes.required[0]": "likes",
	"definitions.MediaItem.properties.createdBy.type": "string",
	"definitions.MediaItem.properties.customAttributionUrl.type": "string",
	"definitions.MediaItem.properties.customPreviewUrl.type": "string",
	"definitions.MediaItem.properties.customThumbnailUrl.type": "string",
	"definitions.MediaItem.properties.dateContentAuthored.format": "date",
	"definitions.MediaItem.properties.dateContentAuthored.type": "string",
	"definitions.MediaItem.properties.dateContentPublished.format": "date",
	"definitions.MediaItem.properties.dateContentPublished.type": "string",
	"definitions.MediaItem.properties.dateContentReviewed.format": "date",
	"definitions.MediaItem.properties.dateContentReviewed.type": "string",
	"definitions.MediaItem.properties.dateContentUpdated.format": "date",
	"definitions.MediaItem.properties.dateContentUpdated.type": "string",
	"definitions.MediaItem.properties.dateSyndicationCaptured.format": "date",
	"definitions.MediaItem.properties.dateSyndicationCaptured.type": "string",
	"definitions.MediaItem.properties.dateSyndicationUpdated.format": "date",
	"definitions.MediaItem.properties.dateSyndicationUpdated.type": "string",
	"definitions.MediaItem.properties.dateSyndicationVisible.format": "date",
	"definitions.MediaItem.properties.dateSyndicationVisible.type": "string",
	"definitions.MediaItem.properties.description.type": "string",
	"definitions.MediaItem.properties.extendedAttributes.type": "object",
	"definitions.MediaItem.properties.externalGuid.type": "string",
	"definitions.MediaItem.properties.foreignSyndicationAPIUrl.type": "string",
	"definitions.MediaItem.properties.hash.type": "string",
	"definitions.MediaItem.properties.id.format": "int64",
	"definitions.MediaItem.properties.id.type": "integer",
	"definitions.MediaItem.properties.language.$ref": "#/definitions/Language",
	"definitions.MediaItem.properties.mediaType.type": "string",
	"definitions.MediaItem.properties.name.type": "string",
	"definitions.MediaItem.properties.source.$ref": "#/definitions/Source",
	"definitions.MediaItem.properties.sourceUrl.type": "string",
	"definitions.MediaItem.properties.targetUrl.type": "string",
	"definitions.MediaItem.required.length": 11,
	"definitions.MediaItem.required[0]": "id",
	"definitions.MediaItem.required[10]": "foreignSyndicationAPIUrl",
	"definitions.MediaItem.required[1]": "name",
	"definitions.MediaItem.required[2]": "mediaType",
	"definitions.MediaItem.required[3]": "sourceUrl",
	"definitions.MediaItem.required[4]": "dateSyndicationCaptured",
	"definitions.MediaItem.required[5]": "dateSyndicationUpdated",
	"definitions.MediaItem.required[6]": "dateSyndicationVisible",
	"definitions.MediaItem.required[7]": "language",
	"definitions.MediaItem.required[8]": "source",
	"definitions.MediaItem.required[9]": "createdBy",
	"definitions.MediaItems.properties.callback.type": "string",
	"definitions.MediaItems.properties.meta.$ref": "#/definitions/Meta",
	"definitions.MediaItems.properties.results.items.$ref": "#/definitions/MediaItem",
	"definitions.MediaItems.properties.results.type": "array",
	"definitions.MediaItems.required.length": 3,
	"definitions.MediaItems.required[0]": "meta",
	"definitions.MediaItems.required[1]": "callback",
	"definitions.MediaItems.required[2]": "results",
	"definitions.MediaType.properties.description.type": "string",
	"definitions.MediaType.properties.name.type": "string",
	"definitions.MediaType.required.length": 2,
	"definitions.MediaType.required[0]": "name",
	"definitions.MediaType.required[1]": "description",
	"definitions.MediaTypes.properties.callback.type": "string",
	"definitions.MediaTypes.properties.meta.$ref": "#/definitions/Meta",
	"definitions.MediaTypes.properties.results.items.$ref": "#/definitions/MediaType",
	"definitions.MediaTypes.properties.results.type": "array",
	"definitions.MediaTypes.required.length": 3,
	"definitions.MediaTypes.required[0]": "meta",
	"definitions.MediaTypes.required[1]": "callback",
	"definitions.MediaTypes.required[2]": "results",
	"definitions.Message.properties.errorCode.type": "string",
	"definitions.Message.properties.errorDetail.type": "string",
	"definitions.Message.properties.errorMessage.type": "string",
	"definitions.Message.properties.userMessage.type": "string",
	"definitions.Message.required.length": 1,
	"definitions.Message.required[0]": "userMessage",
	"definitions.Meta.properties.messages.items.$ref": "#/definitions/Message",
	"definitions.Meta.properties.messages.type": "array",
	"definitions.Meta.properties.pagination.$ref": "#/definitions/Pagination",
	"definitions.Meta.properties.status.format": "int64",
	"definitions.Meta.properties.status.type": "integer",
	"definitions.Meta.required.length": 3,
	"definitions.Meta.required[0]": "status",
	"definitions.Meta.required[1]": "messages",
	"definitions.Meta.required[2]": "pagination",
	"definitions.PDF.properties.createdBy.type": "string",
	"definitions.PDF.properties.customAttributionUrl.type": "string",
	"definitions.PDF.properties.customPreviewUrl.type": "string",
	"definitions.PDF.properties.customThumbnailUrl.type": "string",
	"definitions.PDF.properties.dateContentAuthored.format": "date",
	"definitions.PDF.properties.dateContentAuthored.type": "string",
	"definitions.PDF.properties.dateContentPublished.format": "date",
	"definitions.PDF.properties.dateContentPublished.type": "string",
	"definitions.PDF.properties.dateContentReviewed.format": "date",
	"definitions.PDF.properties.dateContentReviewed.type": "string",
	"definitions.PDF.properties.dateContentUpdated.format": "date",
	"definitions.PDF.properties.dateContentUpdated.type": "string",
	"definitions.PDF.properties.dateSyndicationCaptured.format": "date",
	"definitions.PDF.properties.dateSyndicationCaptured.type": "string",
	"definitions.PDF.properties.dateSyndicationUpdated.format": "date",
	"definitions.PDF.properties.dateSyndicationUpdated.type": "string",
	"definitions.PDF.properties.dateSyndicationVisible.format": "date",
	"definitions.PDF.properties.dateSyndicationVisible.type": "string",
	"definitions.PDF.properties.description.type": "string",
	"definitions.PDF.properties.extendedAttributes.type": "object",
	"definitions.PDF.properties.externalGuid.type": "string",
	"definitions.PDF.properties.foreignSyndicationAPIUrl.type": "string",
	"definitions.PDF.properties.hash.type": "string",
	"definitions.PDF.properties.id.format": "int64",
	"definitions.PDF.properties.id.type": "integer",
	"definitions.PDF.properties.language.$ref": "#/definitions/Language",
	"definitions.PDF.properties.mediaType.type": "string",
	"definitions.PDF.properties.name.type": "string",
	"definitions.PDF.properties.source.$ref": "#/definitions/Source",
	"definitions.PDF.properties.sourceUrl.type": "string",
	"definitions.PDF.properties.targetUrl.type": "string",
	"definitions.PDF.required.length": 11,
	"definitions.PDF.required[0]": "id",
	"definitions.PDF.required[10]": "foreignSyndicationAPIUrl",
	"definitions.PDF.required[1]": "name",
	"definitions.PDF.required[2]": "mediaType",
	"definitions.PDF.required[3]": "sourceUrl",
	"definitions.PDF.required[4]": "dateSyndicationCaptured",
	"definitions.PDF.required[5]": "dateSyndicationUpdated",
	"definitions.PDF.required[6]": "dateSyndicationVisible",
	"definitions.PDF.required[7]": "language",
	"definitions.PDF.required[8]": "source",
	"definitions.PDF.required[9]": "createdBy",
	"definitions.Pagination.properties.count.format": "int32",
	"definitions.Pagination.properties.count.type": "integer",
	"definitions.Pagination.properties.currentUrl.type": "string",
	"definitions.Pagination.properties.max.format": "int32",
	"definitions.Pagination.properties.max.type": "integer",
	"definitions.Pagination.properties.nextUrl.type": "string",
	"definitions.Pagination.properties.offset.format": "int32",
	"definitions.Pagination.properties.offset.type": "integer",
	"definitions.Pagination.properties.pageNum.format": "int32",
	"definitions.Pagination.properties.pageNum.type": "integer",
	"definitions.Pagination.properties.previousUrl.type": "string",
	"definitions.Pagination.properties.sort.type": "string",
	"definitions.Pagination.properties.total.format": "int32",
	"definitions.Pagination.properties.total.type": "integer",
	"definitions.Pagination.properties.totalPages.format": "int32",
	"definitions.Pagination.properties.totalPages.type": "integer",
	"definitions.Pagination.required.length": 8,
	"definitions.Pagination.required[0]": "max",
	"definitions.Pagination.required[1]": "offset",
	"definitions.Pagination.required[2]": "count",
	"definitions.Pagination.required[3]": "total",
	"definitions.Pagination.required[4]": "pageNum",
	"definitions.Pagination.required[5]": "totalPages",
	"definitions.Pagination.required[6]": "sort",
	"definitions.Pagination.required[7]": "currentUrl",
	"definitions.Ratings.properties.callback.type": "string",
	"definitions.Ratings.properties.meta.$ref": "#/definitions/Meta",
	"definitions.Ratings.properties.results.items.$ref": "#/definitions/Likes",
	"definitions.Ratings.properties.results.type": "array",
	"definitions.Ratings.required.length": 3,
	"definitions.Ratings.required[0]": "meta",
	"definitions.Ratings.required[1]": "callback",
	"definitions.Ratings.required[2]": "results",
	"definitions.Resource.properties.id.format": "int64",
	"definitions.Resource.properties.id.type": "integer",
	"definitions.Resource.properties.name.type": "string",
	"definitions.Resource.required.length": 1,
	"definitions.Resource.required[0]": "name",
	"definitions.ResourceList.properties.items.items.$ref": "#/definitions/Resource",
	"definitions.ResourceList.properties.items.type": "array",
	"definitions.ResourceList.properties.mediaType.type": "string",
	"definitions.ResourceList.required.length": 2,
	"definitions.ResourceList.required[0]": "items",
	"definitions.ResourceList.required[1]": "mediaType",
	"definitions.ResourceLists.properties.alternateImages.$ref": "#/definitions/ResourceList",
	"definitions.ResourceLists.properties.campaigns.$ref": "#/definitions/ResourceList",
	"definitions.ResourceLists.properties.collections.$ref": "#/definitions/ResourceList",
	"definitions.ResourceLists.properties.htmls.$ref": "#/definitions/ResourceList",
	"definitions.ResourceLists.properties.images.$ref": "#/definitions/ResourceList",
	"definitions.ResourceLists.properties.infographics.$ref": "#/definitions/ResourceList",
	"definitions.ResourceLists.properties.languages.$ref": "#/definitions/ResourceList",
	"definitions.ResourceLists.properties.socialMedias.$ref": "#/definitions/ResourceList",
	"definitions.ResourceLists.properties.sources.$ref": "#/definitions/ResourceList",
	"definitions.ResourceLists.properties.tagTypes.$ref": "#/definitions/ResourceList",
	"definitions.ResourceLists.properties.tags.$ref": "#/definitions/ResourceList",
	"definitions.ResourceLists.properties.videos.$ref": "#/definitions/ResourceList",
	"definitions.Resources.properties.callback.type": "string",
	"definitions.Resources.properties.meta.$ref": "#/definitions/Meta",
	"definitions.Resources.properties.results.items.$ref": "#/definitions/ResourceLists",
	"definitions.Resources.properties.results.type": "array",
	"definitions.Resources.required.length": 3,
	"definitions.Resources.required[0]": "meta",
	"definitions.Resources.required[1]": "callback",
	"definitions.Resources.required[2]": "results",
	"definitions.Snippet.properties.snippet.type": "string",
	"definitions.Snippet.required.length": 1,
	"definitions.Snippet.required[0]": "snippet",
	"definitions.Source.properties.acronym.type": "string",
	"definitions.Source.properties.contactEmail.type": "string",
	"definitions.Source.properties.id.format": "int64",
	"definitions.Source.properties.id.type": "integer",
	"definitions.Source.properties.largeLogoUrl.type": "string",
	"definitions.Source.properties.name.type": "string",
	"definitions.Source.properties.smallLogoUrl.type": "string",
	"definitions.Source.properties.websiteUrl.type": "string",
	"definitions.Source.required.length": 4,
	"definitions.Source.required[0]": "id",
	"definitions.Source.required[1]": "name",
	"definitions.Source.required[2]": "acronym",
	"definitions.Source.required[3]": "websiteUrl",
	"definitions.Sources.properties.callback.type": "string",
	"definitions.Sources.properties.meta.$ref": "#/definitions/Meta",
	"definitions.Sources.properties.results.items.$ref": "#/definitions/Source",
	"definitions.Sources.properties.results.type": "array",
	"definitions.Sources.required.length": 3,
	"definitions.Sources.required[0]": "meta",
	"definitions.Sources.required[1]": "callback",
	"definitions.Sources.required[2]": "results",
	"definitions.SyndicatedMediaItem.properties.content.type": "string",
	"definitions.SyndicatedMediaItem.properties.contentEncoding.type": "string",
	"definitions.SyndicatedMediaItem.properties.contentType.type": "string",
	"definitions.SyndicatedMediaItem.properties.description.type": "string",
	"definitions.SyndicatedMediaItem.properties.id.format": "int64",
	"definitions.SyndicatedMediaItem.properties.id.type": "integer",
	"definitions.SyndicatedMediaItem.properties.mediaType.type": "string",
	"definitions.SyndicatedMediaItem.properties.name.type": "string",
	"definitions.SyndicatedMediaItem.properties.text.type": "string",
	"definitions.SyndicatedMediaItems.properties.callback.type": "string",
	"definitions.SyndicatedMediaItems.properties.meta.$ref": "#/definitions/Meta",
	"definitions.SyndicatedMediaItems.properties.results.items.$ref": "#/definitions/SyndicatedMediaItem",
	"definitions.SyndicatedMediaItems.properties.results.type": "array",
	"definitions.SyndicatedMediaItems.required.length": 3,
	"definitions.SyndicatedMediaItems.required[0]": "meta",
	"definitions.SyndicatedMediaItems.required[1]": "callback",
	"definitions.SyndicatedMediaItems.required[2]": "results",
	"definitions.Tag.properties.id.format": "int64",
	"definitions.Tag.properties.id.type": "integer",
	"definitions.Tag.properties.language.$ref": "#/definitions/Language",
	"definitions.Tag.properties.name.type": "string",
	"definitions.Tag.properties.type.$ref": "#/definitions/TagType",
	"definitions.Tag.required.length": 4,
	"definitions.Tag.required[0]": "id",
	"definitions.Tag.required[1]": "name",
	"definitions.Tag.required[2]": "language",
	"definitions.Tag.required[3]": "type",
	"definitions.TagLanguage.properties.id.format": "int64",
	"definitions.TagLanguage.properties.id.type": "integer",
	"definitions.TagLanguage.properties.isoCode.type": "string",
	"definitions.TagLanguage.properties.name.type": "string",
	"definitions.TagLanguage.required.length": 3,
	"definitions.TagLanguage.required[0]": "id",
	"definitions.TagLanguage.required[1]": "name",
	"definitions.TagLanguage.required[2]": "isoCode",
	"definitions.TagLanguages.properties.callback.type": "string",
	"definitions.TagLanguages.properties.meta.$ref": "#/definitions/Meta",
	"definitions.TagLanguages.properties.results.items.$ref": "#/definitions/TagLanguage",
	"definitions.TagLanguages.properties.results.type": "array",
	"definitions.TagLanguages.required.length": 3,
	"definitions.TagLanguages.required[0]": "meta",
	"definitions.TagLanguages.required[1]": "callback",
	"definitions.TagLanguages.required[2]": "results",
	"definitions.TagType.properties.description.type": "string",
	"definitions.TagType.properties.id.format": "int64",
	"definitions.TagType.properties.id.type": "integer",
	"definitions.TagType.properties.name.type": "string",
	"definitions.TagType.required.length": 2,
	"definitions.TagType.required[0]": "id",
	"definitions.TagType.required[1]": "name",
	"definitions.TagTypes.properties.callback.type": "string",
	"definitions.TagTypes.properties.meta.$ref": "#/definitions/Meta",
	"definitions.TagTypes.properties.results.items.$ref": "#/definitions/TagType",
	"definitions.TagTypes.properties.results.type": "array",
	"definitions.TagTypes.required.length": 3,
	"definitions.TagTypes.required[0]": "meta",
	"definitions.TagTypes.required[1]": "callback",
	"definitions.TagTypes.required[2]": "results",
	"definitions.Tags.properties.callback.type": "string",
	"definitions.Tags.properties.meta.$ref": "#/definitions/Meta",
	"definitions.Tags.properties.results.items.$ref": "#/definitions/Tag",
	"definitions.Tags.properties.results.type": "array",
	"definitions.Tags.required.length": 3,
	"definitions.Tags.required[0]": "meta",
	"definitions.Tags.required[1]": "callback",
	"definitions.Tags.required[2]": "results",
	"definitions.Video.properties.createdBy.type": "string",
	"definitions.Video.properties.customAttributionUrl.type": "string",
	"definitions.Video.properties.customPreviewUrl.type": "string",
	"definitions.Video.properties.customThumbnailUrl.type": "string",
	"definitions.Video.properties.dateContentAuthored.format": "date",
	"definitions.Video.properties.dateContentAuthored.type": "string",
	"definitions.Video.properties.dateContentPublished.format": "date",
	"definitions.Video.properties.dateContentPublished.type": "string",
	"definitions.Video.properties.dateContentReviewed.format": "date",
	"definitions.Video.properties.dateContentReviewed.type": "string",
	"definitions.Video.properties.dateContentUpdated.format": "date",
	"definitions.Video.properties.dateContentUpdated.type": "string",
	"definitions.Video.properties.dateSyndicationCaptured.format": "date",
	"definitions.Video.properties.dateSyndicationCaptured.type": "string",
	"definitions.Video.properties.dateSyndicationUpdated.format": "date",
	"definitions.Video.properties.dateSyndicationUpdated.type": "string",
	"definitions.Video.properties.dateSyndicationVisible.format": "date",
	"definitions.Video.properties.dateSyndicationVisible.type": "string",
	"definitions.Video.properties.description.type": "string",
	"definitions.Video.properties.duration.format": "int32",
	"definitions.Video.properties.duration.type": "integer",
	"definitions.Video.properties.extendedAttributes.type": "object",
	"definitions.Video.properties.externalGuid.type": "string",
	"definitions.Video.properties.foreignSyndicationAPIUrl.type": "string",
	"definitions.Video.properties.hash.type": "string",
	"definitions.Video.properties.height.format": "int32",
	"definitions.Video.properties.height.type": "integer",
	"definitions.Video.properties.id.format": "int64",
	"definitions.Video.properties.id.type": "integer",
	"definitions.Video.properties.language.$ref": "#/definitions/Language",
	"definitions.Video.properties.mediaType.type": "string",
	"definitions.Video.properties.name.type": "string",
	"definitions.Video.properties.source.$ref": "#/definitions/Source",
	"definitions.Video.properties.sourceUrl.type": "string",
	"definitions.Video.properties.targetUrl.type": "string",
	"definitions.Video.properties.width.format": "int32",
	"definitions.Video.properties.width.type": "integer",
	"definitions.Video.required.length": 12,
	"definitions.Video.required[0]": "id",
	"definitions.Video.required[10]": "foreignSyndicationAPIUrl",
	"definitions.Video.required[11]": "duration",
	"definitions.Video.required[1]": "name",
	"definitions.Video.required[2]": "mediaType",
	"definitions.Video.required[3]": "sourceUrl",
	"definitions.Video.required[4]": "dateSyndicationCaptured",
	"definitions.Video.required[5]": "dateSyndicationUpdated",
	"definitions.Video.required[6]": "dateSyndicationVisible",
	"definitions.Video.required[7]": "language",
	"definitions.Video.required[8]": "source",
	"definitions.Video.required[9]": "createdBy",
	"definitions.YoutubeMetadata.properties.callback.type": "string",
	"definitions.YoutubeMetadata.properties.meta.$ref": "#/definitions/Meta",
	"definitions.YoutubeMetadata.properties.results.items.type": "object",
	"definitions.YoutubeMetadata.properties.results.type": "array",
	"definitions.YoutubeMetadata.required.length": 3,
	"definitions.YoutubeMetadata.required[0]": "meta",
	"definitions.YoutubeMetadata.required[1]": "callback",
	"definitions.YoutubeMetadata.required[2]": "results",
	"host": "api.digitalmedia.hhs.gov",
	"info.contact.email": "syndicationadmin@hhs.gov",
	"info.description": "\n\u003cdiv class=\"swagger-ui-wrap extraFooter\"\u003e\u003ch3\u003eCommon Features / Behaviors\u003c/h3\u003e\n    \u003cdiv class=\"features\"\u003e\n        \u003cul\u003e\n            \u003cli\u003e\u003cstrong\u003e* \"sort\" param:\u003c/strong\u003e supports multi column sorting through the use of commas as delimiters, and a hyphen to denote descending order.\n                \u003cbr/\u003e\n                \u003cstrong\u003e\u003cspan\u003eExamples:\u003c/span\u003e\u003c/strong\u003e\n                \u003cul\u003e\n                    \u003cli\u003e\u003cspan class=\"example\"\u003ename\u003c/span\u003e\u003cspan class=\"description\"\u003esort results by name ascending\u003c/span\u003e\u003c/li\u003e\n                    \u003cli\u003e\u003cspan class=\"example\"\u003e-name\u003c/span\u003e\u003cspan class=\"description\"\u003esort results by name descending\u003c/span\u003e\u003c/li\u003e\n                    \u003cli\u003e\u003cspan class=\"example\"\u003e-name,id\u003c/span\u003e\u003cspan class=\"description\"\u003esort results by name descending and then by id ascending\u003c/span\u003e\u003c/li\u003e\n                    \u003cli\u003e\u003cspan class=\"example\"\u003eid,-dateContentAuthored\u003c/span\u003e\u003cspan class=\"description\"\u003esort results by id ascending and then date descending\u003c/span\u003e\u003c/li\u003e\n                \u003c/ul\u003e\n            \u003c/li\u003e\n            \u003cli\u003e\u003cstrong\u003eDate formats:\u003c/strong\u003e Date input format is expected to be based on \u003ca href=\"http://www.ietf.org/rfc/rfc3339.txt\"\u003eRFC 3339\u003c/a\u003e. \u003cbr/\u003e\n                \u003cspan\u003e\u003cstrong\u003eExample:\u003c/strong\u003e\u003c/span\u003e\n                \u003cul\u003e\u003cli\u003e2013-11-18T18:43:01Z\u003c/li\u003e\u003c/ul\u003e\n            \u003c/li\u003e\n        \u003c/ul\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n",
	"info.license.name": "GNU GENERAL PUBLIC LICENSE",
	"info.license.url": "http://www.gnu.org/licenses/gpl.html",
	"info.termsOfService": "http://www.hhs.gov/web/socialmedia/policies/tos.html#ready",
	"info.title": "HHS Media Services",
	"info.version": "2",
	"info.x-apisguru-categories.length": 1,
	"info.x-apisguru-categories[0]": "open_data",
	"info.x-logo.backgroundColor": "#185394",
	"info.x-logo.url": "https://api.apis.guru/v2/cache/logo/http_www.hhs.gov_sites_all_themes_project_h_css_images_hhs_logo.png",
	"info.x-origin.length": 1,
	"info.x-origin[0].converter.url": "https://github.com/lucybot/api-spec-converter",
	"info.x-origin[0].converter.version": "2.5.0",
	"info.x-origin[0].format": "swagger",
	"info.x-origin[0].url": "https://api.digitalmedia.hhs.gov/swagger/api",
	"info.x-origin[0].version": "1.2",
	"info.x-preferred": true,
	"info.x-providerName": "hhs.gov",
	"paths./resources.json.get.description": "Returns the list of Resources matching the search query 'q'.\u003cp\u003eThe search query 'q' is a Lucene query.\u003cbr\u003eThe syntax for a Lucene query can be found \u003ca href=\"http://lucene.apache.org/core/2_9_4/queryparsersyntax.html\"\u003ehere\u003c/a\u003e.",
	"paths./resources.json.get.operationId": "getResources",
	"paths./resources.json.get.parameters.length": 1,
	"paths./resources.json.get.parameters[0].description": "The search query supplied by the user",
	"paths./resources.json.get.parameters[0].in": "query",
	"paths./resources.json.get.parameters[0].name": "q",
	"paths./resources.json.get.parameters[0].required": true,
	"paths./resources.json.get.parameters[0].type": "string",
	"paths./resources.json.get.produces.length": 1,
	"paths./resources.json.get.produces[0]": "application/json",
	"paths./resources.json.get.responses.200.description": "No response was specified",
	"paths./resources.json.get.responses.200.schema.$ref": "#/definitions/Resources",
	"paths./resources.json.get.responses.400.description": "Invalid search query",
	"paths./resources.json.get.responses.400.schema.type": "string",
	"paths./resources.json.get.responses.500.description": "Internal Server Error",
	"paths./resources.json.get.responses.500.schema.type": "string",
	"paths./resources.json.get.summary": "Get Resources by search query",
	"paths./resources.json.get.tags.length": 1,
	"paths./resources.json.get.tags[0]": "resources",
	"paths./resources/campaigns.json.get.description": "Returns the list of Campaigns.",
	"paths./resources/campaigns.json.get.operationId": "getCampaigns",
	"paths./resources/campaigns.json.get.parameters.length": 3,
	"paths./resources/campaigns.json.get.parameters[0].description": "The maximum number of records to return",
	"paths./resources/campaigns.json.get.parameters[0].format": "int32",
	"paths./resources/campaigns.json.get.parameters[0].in": "query",
	"paths./resources/campaigns.json.get.parameters[0].name": "max",
	"paths./resources/campaigns.json.get.parameters[0].required": false,
	"paths./resources/campaigns.json.get.parameters[0].type": "integer",
	"paths./resources/campaigns.json.get.parameters[1].description": "The offset of the records set to return for pagination",
	"paths./resources/campaigns.json.get.parameters[1].format": "int32",
	"paths./resources/campaigns.json.get.parameters[1].in": "query",
	"paths./resources/campaigns.json.get.parameters[1].name": "offset",
	"paths./resources/campaigns.json.get.parameters[1].required": false,
	"paths./resources/campaigns.json.get.parameters[1].type": "integer",
	"paths./resources/campaigns.json.get.parameters[2].description": "* Set of fields to sort the records by.",
	"paths./resources/campaigns.json.get.parameters[2].in": "query",
	"paths./resources/campaigns.json.get.parameters[2].name": "sort",
	"paths./resources/campaigns.json.get.parameters[2].required": false,
	"paths./resources/campaigns.json.get.parameters[2].type": "string",
	"paths./resources/campaigns.json.get.produces.length": 1,
	"paths./resources/campaigns.json.get.produces[0]": "application/json",
	"paths./resources/campaigns.json.get.responses.200.description": "No response was specified",
	"paths./resources/campaigns.json.get.responses.200.schema.$ref": "#/definitions/Campaigns",
	"paths./resources/campaigns.json.get.responses.400.description": "Bad Request",
	"paths./resources/campaigns.json.get.responses.400.schema.type": "string",
	"paths./resources/campaigns.json.get.responses.500.description": "Internal Server Error",
	"paths./resources/campaigns.json.get.responses.500.schema.type": "string",
	"paths./resources/campaigns.json.get.summary": "Get Campaigns",
	"paths./resources/campaigns.json.get.tags.length": 1,
	"paths./resources/campaigns.json.get.tags[0]": "campaigns",
	"paths./resources/campaigns/{id}.json.get.description": "Returns the Campaign identified by the 'id'.",
	"paths./resources/campaigns/{id}.json.get.operationId": "getCampaignById",
	"paths./resources/campaigns/{id}.json.get.parameters.length": 1,
	"paths./resources/campaigns/{id}.json.get.parameters[0].description": "The id of the record to look up",
	"paths./resources/campaigns/{id}.json.get.parameters[0].format": "int64",
	"paths./resources/campaigns/{id}.json.get.parameters[0].in": "path",
	"paths./resources/campaigns/{id}.json.get.parameters[0].name": "id",
	"paths./resources/campaigns/{id}.json.get.parameters[0].required": true,
	"paths./resources/campaigns/{id}.json.get.parameters[0].type": "integer",
	"paths./resources/campaigns/{id}.json.get.produces.length": 1,
	"paths./resources/campaigns/{id}.json.get.produces[0]": "application/json",
	"paths./resources/campaigns/{id}.json.get.responses.200.description": "No response was specified",
	"paths./resources/campaigns/{id}.json.get.responses.200.schema.$ref": "#/definitions/Campaigns",
	"paths./resources/campaigns/{id}.json.get.responses.400.description": "Invalid ID",
	"paths./resources/campaigns/{id}.json.get.responses.400.schema.type": "string",
	"paths./resources/campaigns/{id}.json.get.responses.500.description": "Internal Server Error",
	"paths./resources/campaigns/{id}.json.get.responses.500.schema.type": "string",
	"paths./resources/campaigns/{id}.json.get.summary": "Get Campaign by ID",
	"paths./resources/campaigns/{id}.json.get.tags.length": 1,
	"paths./resources/campaigns/{id}.json.get.tags[0]": "campaigns",
	"paths./resources/campaigns/{id}/media.json.get.description": "Returns the list of MediaItems for the Campaign identified by the 'id'.",
	"paths./resources/campaigns/{id}/media.json.get.operationId": "getMediaByCampaignId",
	"paths./resources/campaigns/{id}/media.json.get.parameters.length": 4,
	"paths./resources/campaigns/{id}/media.json.get.parameters[0].description": "The id of the campaign to find media items for",
	"paths./resources/campaigns/{id}/media.json.get.parameters[0].format": "int64",
	"paths./resources/campaigns/{id}/media.json.get.parameters[0].in": "path",
	"paths./resources/campaigns/{id}/media.json.get.parameters[0].name": "id",
	"paths./resources/campaigns/{id}/media.json.get.parameters[0].required": true,
	"paths./resources/campaigns/{id}/media.json.get.parameters[0].type": "integer",
	"paths./resources/campaigns/{id}/media.json.get.parameters[1].description": "The maximum number of records to return",
	"paths./resources/campaigns/{id}/media.json.get.parameters[1].format": "int32",
	"paths./resources/campaigns/{id}/media.json.get.parameters[1].in": "query",
	"paths./resources/campaigns/{id}/media.json.get.parameters[1].name": "max",
	"paths./resources/campaigns/{id}/media.json.get.parameters[1].required": false,
	"paths./resources/campaigns/{id}/media.json.get.parameters[1].type": "integer",
	"paths./resources/campaigns/{id}/media.json.get.parameters[2].description": "The offset of the records set to return for pagination",
	"paths./resources/campaigns/{id}/media.json.get.parameters[2].format": "int32",
	"paths./resources/campaigns/{id}/media.json.get.parameters[2].in": "query",
	"paths./resources/campaigns/{id}/media.json.get.parameters[2].name": "offset",
	"paths./resources/campaigns/{id}/media.json.get.parameters[2].required": false,
	"paths./resources/campaigns/{id}/media.json.get.parameters[2].type": "integer",
	"paths./resources/campaigns/{id}/media.json.get.parameters[3].description": "The name of the property to which sorting will be applied",
	"paths./resources/campaigns/{id}/media.json.get.parameters[3].in": "query",
	"paths./resources/campaigns/{id}/media.json.get.parameters[3].name": "sort",
	"paths./resources/campaigns/{id}/media.json.get.parameters[3].required": false,
	"paths./resources/campaigns/{id}/media.json.get.parameters[3].type": "string",
	"paths./resources/campaigns/{id}/media.json.get.produces.length": 1,
	"paths./resources/campaigns/{id}/media.json.get.produces[0]": "application/json",
	"paths./resources/campaigns/{id}/media.json.get.responses.200.description": "No response was specified",
	"paths./resources/campaigns/{id}/media.json.get.responses.200.schema.$ref": "#/definitions/MediaItems",
	"paths./resources/campaigns/{id}/media.json.get.responses.400.description": "Bad Request",
	"paths./resources/campaigns/{id}/media.json.get.responses.400.schema.type": "string",
	"paths./resources/campaigns/{id}/media.json.get.responses.500.description": "Internal Server Error",
	"paths./resources/campaigns/{id}/media.json.get.responses.500.schema.type": "string",
	"paths./resources/campaigns/{id}/media.json.get.summary": "Get MediaItems by Campaign ID",
	"paths./resources/campaigns/{id}/media.json.get.tags.length": 1,
	"paths./resources/campaigns/{id}/media.json.get.tags[0]": "campaigns",
	"paths./resources/campaigns/{id}/syndicate.json.get.description": "Renders the list of MediaItems associated with the Campaign identified by the 'id'.",
	"paths./resources/campaigns/{id}/syndicate.json.get.parameters.length": 2,
	"paths./resources/campaigns/{id}/syndicate.json.get.parameters[0].description": "The id of the record to look up",
	"paths./resources/campaigns/{id}/syndicate.json.get.parameters[0].format": "int64",
	"paths./resources/campaigns/{id}/syndicate.json.get.parameters[0].in": "path",
	"paths./resources/campaigns/{id}/syndicate.json.get.parameters[0].name": "id",
	"paths./resources/campaigns/{id}/syndicate.json.get.parameters[0].required": true,
	"paths./resources/campaigns/{id}/syndicate.json.get.parameters[0].type": "integer",
	"paths./resources/campaigns/{id}/syndicate.json.get.parameters[1].description": "Method used to render an html request. Accepts one: [mv, list, feed]",
	"paths./resources/campaigns/{id}/syndicate.json.get.parameters[1].in": "query",
	"paths./resources/campaigns/{id}/syndicate.json.get.parameters[1].name": "displayMethod",
	"paths./resources/campaigns/{id}/syndicate.json.get.parameters[1].required": false,
	"paths./resources/campaigns/{id}/syndicate.json.get.parameters[1].type": "string",
	"paths./resources/campaigns/{id}/syndicate.json.get.produces.length": 1,
	"paths./resources/campaigns/{id}/syndicate.json.get.produces[0]": "application/json",
	"paths./resources/campaigns/{id}/syndicate.json.get.responses.200.description": "No response was specified",
	"paths./resources/campaigns/{id}/syndicate.json.get.responses.200.schema.$ref": "#/definitions/MediaItems",
	"paths./resources/campaigns/{id}/syndicate.json.get.responses.400.description": "Bad Request",
	"paths./resources/campaigns/{id}/syndicate.json.get.responses.400.schema.type": "string",
	"paths./resources/campaigns/{id}/syndicate.json.get.responses.500.description": "Internal Server Error",
	"paths./resources/campaigns/{id}/syndicate.json.get.responses.500.schema.type": "string",
	"paths./resources/campaigns/{id}/syndicate.json.get.summary": "Get MediaItems for Campaign",
	"paths./resources/campaigns/{id}/syndicate.json.get.tags.length": 1,
	"paths./resources/campaigns/{id}/syndicate.json.get.tags[0]": "campaigns",
	"paths./resources/languages.json.get.description": "Returns the list Languages.",
	"paths./resources/languages.json.get.operationId": "getLanguages",
	"paths./resources/languages.json.get.parameters.length": 3,
	"paths./resources/languages.json.get.parameters[0].description": "The maximum number of records to return",
	"paths./resources/languages.json.get.parameters[0].format": "int32",
	"paths./resources/languages.json.get.parameters[0].in": "query",
	"paths./resources/languages.json.get.parameters[0].name": "max",
	"paths./resources/languages.json.get.parameters[0].required": false,
	"paths./resources/languages.json.get.parameters[0].type": "integer",
	"paths./resources/languages.json.get.parameters[1].description": "The offset of the records set to return for pagination",
	"paths./resources/languages.json.get.parameters[1].format": "int32",
	"paths./resources/languages.json.get.parameters[1].in": "query",
	"paths./resources/languages.json.get.parameters[1].name": "offset",
	"paths./resources/languages.json.get.parameters[1].required": false,
	"paths./resources/languages.json.get.parameters[1].type": "integer",
	"paths./resources/languages.json.get.parameters[2].description": "* Set of fields to sort the records by.",
	"paths./resources/languages.json.get.parameters[2].in": "query",
	"paths./resources/languages.json.get.parameters[2].name": "sort",
	"paths./resources/languages.json.get.parameters[2].required": false,
	"paths./resources/languages.json.get.parameters[2].type": "string",
	"paths./resources/languages.json.get.produces.length": 1,
	"paths./resources/languages.json.get.produces[0]": "application/json",
	"paths./resources/languages.json.get.responses.200.description": "No response was specified",
	"paths./resources/languages.json.get.responses.200.schema.$ref": "#/definitions/Languages",
	"paths./resources/languages.json.get.responses.400.description": "Bad Request",
	"paths./resources/languages.json.get.responses.400.schema.type": "string",
	"paths./resources/languages.json.get.responses.500.description": "Internal Server Error",
	"paths./resources/languages.json.get.responses.500.schema.type": "string",
	"paths./resources/languages.json.get.summary": "Get Languages",
	"paths./resources/languages.json.get.tags.length": 1,
	"paths./resources/languages.json.get.tags[0]": "languages",
	"paths./resources/languages/{id}.json.get.description": "Returns the Language identified by the 'id'.",
	"paths./resources/languages/{id}.json.get.operationId": "getLanguageById",
	"paths./resources/languages/{id}.json.get.parameters.length": 1,
	"paths./resources/languages/{id}.json.get.parameters[0].description": "The id of the language to look up",
	"paths./resources/languages/{id}.json.get.parameters[0].format": "int64",
	"paths./resources/languages/{id}.json.get.parameters[0].in": "path",
	"paths./resources/languages/{id}.json.get.parameters[0].name": "id",
	"paths./resources/languages/{id}.json.get.parameters[0].required": true,
	"paths./resources/languages/{id}.json.get.parameters[0].type": "integer",
	"paths./resources/languages/{id}.json.get.produces.length": 1,
	"paths./resources/languages/{id}.json.get.produces[0]": "application/json",
	"paths./resources/languages/{id}.json.get.responses.200.description": "No response was specified",
	"paths./resources/languages/{id}.json.get.responses.200.schema.$ref": "#/definitions/Languages",
	"paths./resources/languages/{id}.json.get.responses.400.description": "Invalid ID",
	"paths./resources/languages/{id}.json.get.responses.400.schema.type": "string",
	"paths./resources/languages/{id}.json.get.responses.500.description": "Internal Server Error",
	"paths./resources/languages/{id}.json.get.responses.500.schema.type": "string",
	"paths./resources/languages/{id}.json.get.summary": "Get Language by ID",
	"paths./resources/languages/{id}.json.get.tags.length": 1,
	"paths./resources/languages/{id}.json.get.tags[0]": "languages",
	"paths./resources/media.json.get.description": "Returns the list of MediaItems matching the specified query parameters.",
	"paths./resources/media.json.get.operationId": "getMedia",
	"paths./resources/media.json.get.parameters.length": 53,
	"paths./resources/media.json.get.parameters[0].description": "The maximum number of records to return",
	"paths./resources/media.json.get.parameters[0].format": "int32",
	"paths./resources/media.json.get.parameters[0].in": "query",
	"paths./resources/media.json.get.parameters[0].name": "max",
	"paths./resources/media.json.get.parameters[0].required": false,
	"paths./resources/media.json.get.parameters[0].type": "integer",
	"paths./resources/media.json.get.parameters[10].description": "Find all media items which contain the provided partial sourceUrl, case insensitive.",
	"paths./resources/media.json.get.parameters[10].in": "query",
	"paths./resources/media.json.get.parameters[10].name": "sourceUrlContains",
	"paths./resources/media.json.get.parameters[10].required": false,
	"paths./resources/media.json.get.parameters[10].type": "string",
	"paths./resources/media.json.get.parameters[11].description": "Find all media items which have the provided customThumbnailUrl, case insensitive.",
	"paths./resources/media.json.get.parameters[11].in": "query",
	"paths./resources/media.json.get.parameters[11].name": "customThumbnailUrl",
	"paths./resources/media.json.get.parameters[11].required": false,
	"paths./resources/media.json.get.parameters[11].type": "string",
	"paths./resources/media.json.get.parameters[12].description": "Find all media items which contain the provided partial customThumbnailUrl, case insensitive.",
	"paths./resources/media.json.get.parameters[12].in": "query",
	"paths./resources/media.json.get.parameters[12].name": "customThumbnailUrlContains",
	"paths./resources/media.json.get.parameters[12].required": false,
	"paths./resources/media.json.get.parameters[12].type": "string",
	"paths./resources/media.json.get.parameters[13].description": "Find all media items authored on the provided day (RFC 3339, time ignored).",
	"paths./resources/media.json.get.parameters[13].format": "date",
	"paths./resources/media.json.get.parameters[13].in": "query",
	"paths./resources/media.json.get.parameters[13].name": "dateContentAuthored",
	"paths./resources/media.json.get.parameters[13].required": false,
	"paths./resources/media.json.get.parameters[13].type": "string",
	"paths./resources/media.json.get.parameters[14].description": "Find all media items updated on the provided day (RFC 3339, time ignored).",
	"paths./resources/media.json.get.parameters[14].format": "date",
	"paths./resources/media.json.get.parameters[14].in": "query",
	"paths./resources/media.json.get.parameters[14].name": "dateContentUpdated",
	"paths./resources/media.json.get.parameters[14].required": false,
	"paths./resources/media.json.get.parameters[14].type": "string",
	"paths./resources/media.json.get.parameters[15].description": "Find all media items published on the provided day (RFC 3339, time ignored).",
	"paths./resources/media.json.get.parameters[15].format": "date",
	"paths./resources/media.json.get.parameters[15].in": "query",
	"paths./resources/media.json.get.parameters[15].name": "dateContentPublished",
	"paths./resources/media.json.get.parameters[15].required": false,
	"paths./resources/media.json.get.parameters[15].type": "string",
	"paths./resources/media.json.get.parameters[16].description": "Find all media items reviewed on the provided day (RFC 3339, time ignored).",
	"paths./resources/media.json.get.parameters[16].format": "date",
	"paths./resources/media.json.get.parameters[16].in": "query",
	"paths./resources/media.json.get.parameters[16].name": "dateContentReviewed",
	"paths./resources/media.json.get.parameters[16].required": false,
	"paths./resources/media.json.get.parameters[16].type": "string",
	"paths./resources/media.json.get.parameters[17].description": "Find all media items authored on the provided day (RFC 3339, time ignored).",
	"paths./resources/media.json.get.parameters[17].format": "date",
	"paths./resources/media.json.get.parameters[17].in": "query",
	"paths./resources/media.json.get.parameters[17].name": "dateSyndicationCaptured",
	"paths./resources/media.json.get.parameters[17].required": false,
	"paths./resources/media.json.get.parameters[17].type": "string",
	"paths./resources/media.json.get.parameters[18].description": "Find all media items updated on the provided day, (RFC 3339, time ignored).",
	"paths./resources/media.json.get.parameters[18].format": "date",
	"paths./resources/media.json.get.parameters[18].in": "query",
	"paths./resources/media.json.get.parameters[18].name": "dateSyndicationUpdated",
	"paths./resources/media.json.get.parameters[18].required": false,
	"paths./resources/media.json.get.parameters[18].type": "string",
	"paths./resources/media.json.get.parameters[19].description": "Find all media items authored since the provided day (RFC 3339, time ignored).",
	"paths./resources/media.json.get.parameters[19].format": "date",
	"paths./resources/media.json.get.parameters[19].in": "query",
	"paths./resources/media.json.get.parameters[19].name": "contentAuthoredSinceDate",
	"paths./resources/media.json.get.parameters[19].required": false,
	"paths./resources/media.json.get.parameters[19].type": "string",
	"paths./resources/media.json.get.parameters[1].description": "The offset of the records set to return for pagination.",
	"paths./resources/media.json.get.parameters[1].format": "int32",
	"paths./resources/media.json.get.parameters[1].in": "query",
	"paths./resources/media.json.get.parameters[1].name": "offset",
	"paths./resources/media.json.get.parameters[1].required": false,
	"paths./resources/media.json.get.parameters[1].type": "integer",
	"paths./resources/media.json.get.parameters[20].description": "Find all media items authored before the provided day (RFC 3339, time ignored).",
	"paths./resources/media.json.get.parameters[20].format": "date",
	"paths./resources/media.json.get.parameters[20].in": "query",
	"paths./resources/media.json.get.parameters[20].name": "contentAuthoredBeforeDate",
	"paths./resources/media.json.get.parameters[20].required": false,
	"paths./resources/media.json.get.parameters[20].type": "string",
	"paths./resources/media.json.get.parameters[21].description": "Find all media items authored between the provided start and end days (RFC 3339, comma separated, time ignored).",
	"paths./resources/media.json.get.parameters[21].in": "query",
	"paths./resources/media.json.get.parameters[21].name": "contentAuthoredInRange",
	"paths./resources/media.json.get.parameters[21].required": false,
	"paths./resources/media.json.get.parameters[21].type": "string",
	"paths./resources/media.json.get.parameters[22].description": "Find all media items updated since the provided day (RFC 3339, time ignored).",
	"paths./resources/media.json.get.parameters[22].format": "date",
	"paths./resources/media.json.get.parameters[22].in": "query",
	"paths./resources/media.json.get.parameters[22].name": "contentUpdatedSinceDate",
	"paths./resources/media.json.get.parameters[22].required": false,
	"paths./resources/media.json.get.parameters[22].type": "string",
	"paths./resources/media.json.get.parameters[23].description": "Find all media items updated before the provided day (RFC 3339, time ignored).",
	"paths./resources/media.json.get.parameters[23].format": "date",
	"paths./resources/media.json.get.parameters[23].in": "query",
	"paths./resources/media.json.get.parameters[23].name": "contentUpdatedBeforeDate",
	"paths./resources/media.json.get.parameters[23].required": false,
	"paths./resources/media.json.get.parameters[23].type": "string",
	"paths./resources/media.json.get.parameters[24].description": "Find all media items updated between the provided start and end days (RFC 3339, comma separated, time ignored).",
	"paths./resources/media.json.get.parameters[24].in": "query",
	"paths./resources/media.json.get.parameters[24].name": "contentUpdatedInRange",
	"paths./resources/media.json.get.parameters[24].required": false,
	"paths./resources/media.json.get.parameters[24].type": "string",
	"paths./resources/media.json.get.parameters[25].description": "Find all media items published since the provided day (RFC 3339, time ignored).",
	"paths./resources/media.json.get.parameters[25].format": "date",
	"paths./resources/media.json.get.parameters[25].in": "query",
	"paths./resources/media.json.get.parameters[25].name": "contentPublishedSinceDate",
	"paths./resources/media.json.get.parameters[25].required": false,
	"paths./resources/media.json.get.parameters[25].type": "string",
	"paths./resources/media.json.get.parameters[26].description": "Find all media items published before the provided day (RFC 3339, time ignored).",
	"paths./resources/media.json.get.parameters[26].format": "date",
	"paths./resources/media.json.get.parameters[26].in": "query",
	"paths./resources/media.json.get.parameters[26].name": "contentPublishedBeforeDate",
	"paths./resources/media.json.get.parameters[26].required": false,
	"paths./resources/media.json.get.parameters[26].type": "string",
	"paths./resources/media.json.get.parameters[27].description": "Find all media items published between the provided start and end days (RFC 3339, comma separated, time ignored).",
	"paths./resources/media.json.get.parameters[27].in": "query",
	"paths./resources/media.json.get.parameters[27].name": "contentPublishedInRange",
	"paths./resources/media.json.get.parameters[27].required": false,
	"paths./resources/media.json.get.parameters[27].type": "string",
	"paths./resources/media.json.get.parameters[28].description": "Find all media items reviewed since the provided day (RFC 3339, time ignored).",
	"paths./resources/media.json.get.parameters[28].format": "date",
	"paths./resources/media.json.get.parameters[28].in": "query",
	"paths./resources/media.json.get.parameters[28].name": "contentReviewedSinceDate",
	"paths./resources/media.json.get.parameters[28].required": false,
	"paths./resources/media.json.get.parameters[28].type": "string",
	"paths./resources/media.json.get.parameters[29].description": "Find all media items reviewed before the provided day (RFC 3339, time ignored).",
	"paths./resources/media.json.get.parameters[29].format": "date",
	"paths./resources/media.json.get.parameters[29].in": "query",
	"paths./resources/media.json.get.parameters[29].name": "contentReviewedBeforeDate",
	"paths./resources/media.json.get.parameters[29].required": false,
	"paths./resources/media.json.get.parameters[29].type": "string",
	"paths./resources/media.json.get.parameters[2].description": "* Set of fields to sort the records by.",
	"paths./resources/media.json.get.parameters[2].in": "query",
	"paths./resources/media.json.get.parameters[2].name": "sort",
	"paths./resources/media.json.get.parameters[2].required": false,
	"paths./resources/media.json.get.parameters[2].type": "string",
	"paths./resources/media.json.get.parameters[30].description": "Find all media items reviewed between the provided start and end days (RFC 3339, comma separated, time ignored).",
	"paths./resources/media.json.get.parameters[30].in": "query",
	"paths./resources/media.json.get.parameters[30].name": "contentReviewedInRange",
	"paths./resources/media.json.get.parameters[30].required": false,
	"paths./resources/media.json.get.parameters[30].type": "string",
	"paths./resources/media.json.get.parameters[31].description": "Find all media items authored since the provided day (RFC 3339, time ignored).",
	"paths./resources/media.json.get.parameters[31].format": "date",
	"paths./resources/media.json.get.parameters[31].in": "query",
	"paths./resources/media.json.get.parameters[31].name": "syndicationCapturedSinceDate",
	"paths./resources/media.json.get.parameters[31].required": false,
	"paths./resources/media.json.get.parameters[31].type": "string",
	"paths./resources/media.json.get.parameters[32].description": "Find all media items authored before the provided day (RFC 3339, time ignored).",
	"paths./resources/media.json.get.parameters[32].format": "date",
	"paths./resources/media.json.get.parameters[32].in": "query",
	"paths./resources/media.json.get.parameters[32].name": "syndicationCapturedBeforeDate",
	"paths./resources/media.json.get.parameters[32].required": false,
	"paths./resources/media.json.get.parameters[32].type": "string",
	"paths./resources/media.json.get.parameters[33].description": "Find all media items authored between the provided start and end days (RFC 3339, comma separated, time ignored).",
	"paths./resources/media.json.get.parameters[33].in": "query",
	"paths./resources/media.json.get.parameters[33].name": "syndicationCapturedInRange",
	"paths./resources/media.json.get.parameters[33].required": false,
	"paths./resources/media.json.get.parameters[33].type": "string",
	"paths./resources/media.json.get.parameters[34].description": "Find all media items updated since the provided day, (RFC 3339, time ignored).",
	"paths./resources/media.json.get.parameters[34].format": "date",
	"paths./resources/media.json.get.parameters[34].in": "query",
	"paths./resources/media.json.get.parameters[34].name": "syndicationUpdatedSinceDate",
	"paths./resources/media.json.get.parameters[34].required": false,
	"paths./resources/media.json.get.parameters[34].type": "string",
	"paths./resources/media.json.get.parameters[35].description": "Find all media items updated before the provided day, (RFC 3339, time ignored).",
	"paths./resources/media.json.get.parameters[35].format": "date",
	"paths./resources/media.json.get.parameters[35].in": "query",
	"paths./resources/media.json.get.parameters[35].name": "syndicationUpdatedBeforeDate",
	"paths./resources/media.json.get.parameters[35].required": false,
	"paths./resources/media.json.get.parameters[35].type": "string",
	"paths./resources/media.json.get.parameters[36].description": "Find all media items updated between the provided start and end days, (RFC 3339, comma separated, time ignored).",
	"paths./resources/media.json.get.parameters[36].in": "query",
	"paths./resources/media.json.get.parameters[36].name": "syndicationUpdatedInRange",
	"paths./resources/media.json.get.parameters[36].required": false,
	"paths./resources/media.json.get.parameters[36].type": "string",
	"paths./resources/media.json.get.parameters[37].description": "Find all media items visible since the provided day, (RFC 3339, time ignored).",
	"paths./resources/media.json.get.parameters[37].format": "date",
	"paths./resources/media.json.get.parameters[37].in": "query",
	"paths./resources/media.json.get.parameters[37].name": "syndicationVisibleSinceDate",
	"paths./resources/media.json.get.parameters[37].required": false,
	"paths./resources/media.json.get.parameters[37].type": "string",
	"paths./resources/media.json.get.parameters[38].description": "Find all media items visible before the provided day, (RFC 3339, time ignored).",
	"paths./resources/media.json.get.parameters[38].format": "date",
	"paths./resources/media.json.get.parameters[38].in": "query",
	"paths./resources/media.json.get.parameters[38].name": "syndicationVisibleBeforeDate",
	"paths./resources/media.json.get.parameters[38].required": false,
	"paths./resources/media.json.get.parameters[38].type": "string",
	"paths./resources/media.json.get.parameters[39].description": "Find all media items visible between the provided start and end days, (RFC 3339, comma separated, time ignored).",
	"paths./resources/media.json.get.parameters[39].in": "query",
	"paths./resources/media.json.get.parameters[39].name": "syndicationVisibleInRange",
	"paths./resources/media.json.get.parameters[39].required": false,
	"paths./resources/media.json.get.parameters[39].type": "string",
	"paths./resources/media.json.get.parameters[3].description": "* The ascending or descending order.",
	"paths./resources/media.json.get.parameters[3].in": "query",
	"paths./resources/media.json.get.parameters[3].name": "order",
	"paths./resources/media.json.get.parameters[3].required": false,
	"paths./resources/media.json.get.parameters[3].type": "string",
	"paths./resources/media.json.get.parameters[40].description": "Find all media items written in the language specified by Id.",
	"paths./resources/media.json.get.parameters[40].format": "int64",
	"paths./resources/media.json.get.parameters[40].in": "query",
	"paths./resources/media.json.get.parameters[40].name": "languageId",
	"paths./resources/media.json.get.parameters[40].required": false,
	"paths./resources/media.json.get.parameters[40].type": "integer",
	"paths./resources/media.json.get.parameters[41].description": "Find all media items written in the language specified by name, case insensitive.",
	"paths./resources/media.json.get.parameters[41].in": "query",
	"paths./resources/media.json.get.parameters[41].name": "languageName",
	"paths./resources/media.json.get.parameters[41].required": false,
	"paths./resources/media.json.get.parameters[41].type": "string",
	"paths./resources/media.json.get.parameters[42].description": "Find all media items written in the language specified by 639-2 isoCode , case insensitive.",
	"paths./resources/media.json.get.parameters[42].in": "query",
	"paths./resources/media.json.get.parameters[42].name": "languageIsoCode",
	"paths./resources/media.json.get.parameters[42].required": false,
	"paths./resources/media.json.get.parameters[42].type": "string",
	"paths./resources/media.json.get.parameters[43].description": "Find all media items which match the provided hash, case insensitive.",
	"paths./resources/media.json.get.parameters[43].in": "query",
	"paths./resources/media.json.get.parameters[43].name": "hash",
	"paths./resources/media.json.get.parameters[43].required": false,
	"paths./resources/media.json.get.parameters[43].type": "string",
	"paths./resources/media.json.get.parameters[44].description": "Find all media items which match the provided partial hash, case insensitive.",
	"paths./resources/media.json.get.parameters[44].in": "query",
	"paths./resources/media.json.get.parameters[44].name": "hashContains",
	"paths./resources/media.json.get.parameters[44].required": false,
	"paths./resources/media.json.get.parameters[44].type": "string",
	"paths./resources/media.json.get.parameters[45].description": "Find all media items that belong to the source specified by Id.",
	"paths./resources/media.json.get.parameters[45].format": "int64",
	"paths./resources/media.json.get.parameters[45].in": "query",
	"paths./resources/media.json.get.parameters[45].name": "sourceId",
	"paths./resources/media.json.get.parameters[45].required": false,
	"paths./resources/media.json.get.parameters[45].type": "integer",
	"paths./resources/media.json.get.parameters[46].description": "Find all media items that belong to the source specified by name, case insensitive.",
	"paths./resources/media.json.get.parameters[46].in": "query",
	"paths./resources/media.json.get.parameters[46].name": "sourceName",
	"paths./resources/media.json.get.parameters[46].required": false,
	"paths./resources/media.json.get.parameters[46].type": "string",
	"paths./resources/media.json.get.parameters[47].description": "Find all media items that belong to the source specified by partial name, case insensitive.",
	"paths./resources/media.json.get.parameters[47].in": "query",
	"paths./resources/media.json.get.parameters[47].name": "sourceNameContains",
	"paths./resources/media.json.get.parameters[47].required": false,
	"paths./resources/media.json.get.parameters[47].type": "string",
	"paths./resources/media.json.get.parameters[48].description": "Find all media items that belong to the source specified by acronym, case insensitive.",
	"paths./resources/media.json.get.parameters[48].in": "query",
	"paths./resources/media.json.get.parameters[48].name": "sourceAcronym",
	"paths./resources/media.json.get.parameters[48].required": false,
	"paths./resources/media.json.get.parameters[48].type": "string",
	"paths./resources/media.json.get.parameters[49].description": "Find all media items that belong to the source specified by partial acronym, case insensitive.",
	"paths./resources/media.json.get.parameters[49].in": "query",
	"paths./resources/media.json.get.parameters[49].name": "sourceAcronymContains",
	"paths./resources/media.json.get.parameters[49].required": false,
	"paths./resources/media.json.get.parameters[49].type": "string",
	"paths./resources/media.json.get.parameters[4].description": "Find all media items belonging to the specified media type[s].",
	"paths./resources/media.json.get.parameters[4].in": "query",
	"paths./resources/media.json.get.parameters[4].name": "mediaTypes",
	"paths./resources/media.json.get.parameters[4].required": false,
	"paths./resources/media.json.get.parameters[4].type": "string",
	"paths./resources/media.json.get.parameters[50].description": "Find only media items tagged with the specified tag Ids.",
	"paths./resources/media.json.get.parameters[50].in": "query",
	"paths./resources/media.json.get.parameters[50].name": "tagIds",
	"paths./resources/media.json.get.parameters[50].required": false,
	"paths./resources/media.json.get.parameters[50].type": "string",
	"paths./resources/media.json.get.parameters[51].description": "Find only media from within the supplied list of Ids.",
	"paths./resources/media.json.get.parameters[51].in": "query",
	"paths./resources/media.json.get.parameters[51].name": "restrictToSet",
	"paths./resources/media.json.get.parameters[51].required": false,
	"paths./resources/media.json.get.parameters[51].type": "string",
	"paths./resources/media.json.get.parameters[52].description": "Find all media items containing the createdBy value.",
	"paths./resources/media.json.get.parameters[52].in": "query",
	"paths./resources/media.json.get.parameters[52].name": "createdBy",
	"paths./resources/media.json.get.parameters[52].required": false,
	"paths./resources/media.json.get.parameters[52].type": "string",
	"paths./resources/media.json.get.parameters[5].description": "Find all media items containing the provided name, case insensitive.",
	"paths./resources/media.json.get.parameters[5].in": "query",
	"paths./resources/media.json.get.parameters[5].name": "name",
	"paths./resources/media.json.get.parameters[5].required": false,
	"paths./resources/media.json.get.parameters[5].type": "string",
	"paths./resources/media.json.get.parameters[6].description": "Restrict filtering to media items in a specific collection.",
	"paths./resources/media.json.get.parameters[6].format": "int32",
	"paths./resources/media.json.get.parameters[6].in": "query",
	"paths./resources/media.json.get.parameters[6].name": "collectionId",
	"paths./resources/media.json.get.parameters[6].required": false,
	"paths./resources/media.json.get.parameters[6].type": "integer",
	"paths./resources/media.json.get.parameters[7].description": "Find all media items containing the partial name, case insensitive.",
	"paths./resources/media.json.get.parameters[7].in": "query",
	"paths./resources/media.json.get.parameters[7].name": "nameContains",
	"paths./resources/media.json.get.parameters[7].required": false,
	"paths./resources/media.json.get.parameters[7].type": "string",
	"paths./resources/media.json.get.parameters[8].description": "Find all media items containing the provided partial description, case insensitive.",
	"paths./resources/media.json.get.parameters[8].in": "query",
	"paths./resources/media.json.get.parameters[8].name": "descriptionContains",
	"paths./resources/media.json.get.parameters[8].required": false,
	"paths./resources/media.json.get.parameters[8].type": "string",
	"paths./resources/media.json.get.parameters[9].description": "Find all media items which have the provided sourceUrl, case insensitive.",
	"paths./resources/media.json.get.parameters[9].in": "query",
	"paths./resources/media.json.get.parameters[9].name": "sourceUrl",
	"paths./resources/media.json.get.parameters[9].required": false,
	"paths./resources/media.json.get.parameters[9].type": "string",
	"paths./resources/media.json.get.produces.length": 1,
	"paths./resources/media.json.get.produces[0]": "application/json",
	"paths./resources/media.json.get.responses.200.description": "No response was specified",
	"paths./resources/media.json.get.responses.200.schema.$ref": "#/definitions/MediaItems",
	"paths./resources/media.json.get.responses.400.description": "Bad Request",
	"paths./resources/media.json.get.responses.400.schema.type": "string",
	"paths./resources/media.json.get.responses.500.description": "Internal Server Error",
	"paths./resources/media.json.get.responses.500.schema.type": "string",
	"paths./resources/media.json.get.summary": "Get MediaItems",
	"paths./resources/media.json.get.tags.length": 1,
	"paths./resources/media.json.get.tags[0]": "media",
	"paths./resources/media/featured.json.get.description": "Get the list of featured content in the syndication system",
	"paths./resources/media/featured.json.get.operationId": "getFeaturedMedia",
	"paths./resources/media/featured.json.get.parameters.length": 3,
	"paths./resources/media/featured.json.get.parameters[0].description": "* Set of fields to sort the records by.",
	"paths./resources/media/featured.json.get.parameters[0].in": "query",
	"paths./resources/media/featured.json.get.parameters[0].name": "sort",
	"paths./resources/media/featured.json.get.parameters[0].required": false,
	"paths./resources/media/featured.json.get.parameters[0].type": "string",
	"paths./resources/media/featured.json.get.parameters[1].description": "The maximum number of records to return.",
	"paths./resources/media/featured.json.get.parameters[1].format": "int64",
	"paths./resources/media/featured.json.get.parameters[1].in": "query",
	"paths./resources/media/featured.json.get.parameters[1].name": "max",
	"paths./resources/media/featured.json.get.parameters[1].required": false,
	"paths./resources/media/featured.json.get.parameters[1].type": "integer",
	"paths./resources/media/featured.json.get.parameters[2].description": "How many records to offset the query by.",
	"paths./resources/media/featured.json.get.parameters[2].format": "int64",
	"paths./resources/media/featured.json.get.parameters[2].in": "query",
	"paths./resources/media/featured.json.get.parameters[2].name": "offset",
	"paths./resources/media/featured.json.get.parameters[2].required": false,
	"paths./resources/media/featured.json.get.parameters[2].type": "integer",
	"paths./resources/media/featured.json.get.produces.length": 1,
	"paths./resources/media/featured.json.get.produces[0]": "application/json",
	"paths./resources/media/featured.json.get.responses.200.description": "No response was specified",
	"paths./resources/media/featured.json.get.responses.200.schema.type": "string",
	"paths./resources/media/featured.json.get.responses.400.description": "Bad Request",
	"paths./resources/media/featured.json.get.responses.400.schema.type": "string",
	"paths./resources/media/featured.json.get.responses.500.description": "Internal Server Error",
	"paths./resources/media/featured.json.get.responses.500.schema.type": "string",
	"paths./resources/media/featured.json.get.summary": "Get the list of featured content in the syndication system",
	"paths./resources/media/featured.json.get.tags.length": 1,
	"paths./resources/media/featured.json.get.tags[0]": "media",
	"paths./resources/media/mostPopularMedia.json.get.description": "Returns the list of MediaItems with the highest ratings.",
	"paths./resources/media/mostPopularMedia.json.get.operationId": "getMostPopularMedia",
	"paths./resources/media/mostPopularMedia.json.get.parameters.length": 2,
	"paths./resources/media/mostPopularMedia.json.get.parameters[0].description": "The maximum number of records to return",
	"paths./resources/media/mostPopularMedia.json.get.parameters[0].format": "int32",
	"paths./resources/media/mostPopularMedia.json.get.parameters[0].in": "query",
	"paths./resources/media/mostPopularMedia.json.get.parameters[0].name": "max",
	"paths./resources/media/mostPopularMedia.json.get.parameters[0].required": false,
	"paths./resources/media/mostPopularMedia.json.get.parameters[0].type": "integer",
	"paths./resources/media/mostPopularMedia.json.get.parameters[1].description": "The offset of the records set to return for pagination.",
	"paths./resources/media/mostPopularMedia.json.get.parameters[1].format": "int32",
	"paths./resources/media/mostPopularMedia.json.get.parameters[1].in": "query",
	"paths./resources/media/mostPopularMedia.json.get.parameters[1].name": "offset",
	"paths./resources/media/mostPopularMedia.json.get.parameters[1].required": false,
	"paths./resources/media/mostPopularMedia.json.get.parameters[1].type": "integer",
	"paths./resources/media/mostPopularMedia.json.get.produces.length": 1,
	"paths./resources/media/mostPopularMedia.json.get.produces[0]": "application/json",
	"paths./resources/media/mostPopularMedia.json.get.responses.200.description": "No response was specified",
	"paths./resources/media/mostPopularMedia.json.get.responses.200.schema.$ref": "#/definitions/MediaItems",
	"paths./resources/media/mostPopularMedia.json.get.responses.400.description": "Bad Request",
	"paths./resources/media/mostPopularMedia.json.get.responses.400.schema.type": "string",
	"paths./resources/media/mostPopularMedia.json.get.responses.500.description": "Internal Server Error",
	"paths./resources/media/mostPopularMedia.json.get.responses.500.schema.type": "string",
	"paths./resources/media/mostPopularMedia.json.get.summary": "Get MediaItems by popularity",
	"paths./resources/media/mostPopularMedia.json.get.tags.length": 1,
	"paths./resources/media/mostPopularMedia.json.get.tags[0]": "media",
	"paths./resources/media/searchResults.json.get.description": "Returns the list of MediaItems matching the search query 'q'.\u003cp\u003eThe search query 'q' is a Lucene query.\u003cbr\u003eThe syntax for a Lucene query can be found \u003ca href=\"http://lucene.apache.org/core/2_9_4/queryparsersyntax.html\"\u003ehere\u003c/a\u003e",
	"paths./resources/media/searchResults.json.get.operationId": "searchMedia",
	"paths./resources/media/searchResults.json.get.parameters.length": 3,
	"paths./resources/media/searchResults.json.get.parameters[0].description": "The search query supplied by the user",
	"paths./resources/media/searchResults.json.get.parameters[0].in": "query",
	"paths./resources/media/searchResults.json.get.parameters[0].name": "q",
	"paths./resources/media/searchResults.json.get.parameters[0].required": true,
	"paths./resources/media/searchResults.json.get.parameters[0].type": "string",
	"paths./resources/media/searchResults.json.get.parameters[1].description": "The maximum number of records to return",
	"paths./resources/media/searchResults.json.get.parameters[1].format": "int32",
	"paths./resources/media/searchResults.json.get.parameters[1].in": "query",
	"paths./resources/media/searchResults.json.get.parameters[1].name": "max",
	"paths./resources/media/searchResults.json.get.parameters[1].required": false,
	"paths./resources/media/searchResults.json.get.parameters[1].type": "integer",
	"paths./resources/media/searchResults.json.get.parameters[2].description": "The offset of the records set to return for pagination.",
	"paths./resources/media/searchResults.json.get.parameters[2].format": "int32",
	"paths./resources/media/searchResults.json.get.parameters[2].in": "query",
	"paths./resources/media/searchResults.json.get.parameters[2].name": "offset",
	"paths./resources/media/searchResults.json.get.parameters[2].required": false,
	"paths./resources/media/searchResults.json.get.parameters[2].type": "integer",
	"paths./resources/media/searchResults.json.get.produces.length": 1,
	"paths./resources/media/searchResults.json.get.produces[0]": "application/json",
	"paths./resources/media/searchResults.json.get.responses.200.description": "No response was specified",
	"paths./resources/media/searchResults.json.get.responses.200.schema.$ref": "#/definitions/MediaItems",
	"paths./resources/media/searchResults.json.get.responses.400.description": "Bad Request",
	"paths./resources/media/searchResults.json.get.responses.400.schema.type": "string",
	"paths./resources/media/searchResults.json.get.responses.500.description": "Internal Server Error",
	"paths./resources/media/searchResults.json.get.responses.500.schema.type": "string",
	"paths./resources/media/searchResults.json.get.summary": "Get MediaItems by search query",
	"paths./resources/media/searchResults.json.get.tags.length": 1,
	"paths./resources/media/searchResults.json.get.tags[0]": "media",
	"paths./resources/media/{id}.json.get.description": "Returns the MediaItem identified by the 'id'.",
	"paths./resources/media/{id}.json.get.operationId": "getMediaById",
	"paths./resources/media/{id}.json.get.parameters.length": 1,
	"paths./resources/media/{id}.json.get.parameters[0].description": "The id of the record to look up",
	"paths./resources/media/{id}.json.get.parameters[0].format": "int64",
	"paths./resources/media/{id}.json.get.parameters[0].in": "path",
	"paths./resources/media/{id}.json.get.parameters[0].name": "id",
	"paths./resources/media/{id}.json.get.parameters[0].required": true,
	"paths./resources/media/{id}.json.get.parameters[0].type": "integer",
	"paths./resources/media/{id}.json.get.produces.length": 1,
	"paths./resources/media/{id}.json.get.produces[0]": "application/json",
	"paths./resources/media/{id}.json.get.responses.200.description": "No response was specified",
	"paths./resources/media/{id}.json.get.responses.200.schema.$ref": "#/definitions/MediaItems",
	"paths./resources/media/{id}.json.get.responses.400.description": "Invalid ID",
	"paths./resources/media/{id}.json.get.responses.400.schema.type": "string",
	"paths./resources/media/{id}.json.get.responses.500.description": "Internal Server Error",
	"paths./resources/media/{id}.json.get.responses.500.schema.type": "string",
	"paths./resources/media/{id}.json.get.summary": "Get MediaItem by ID",
	"paths./resources/media/{id}.json.get.tags.length": 1,
	"paths./resources/media/{id}.json.get.tags[0]": "media",
	"paths./resources/media/{id}/content.get.description": "Returns the raw content (html, image, etc...) for the MediaItem identified by the 'id'.",
	"paths./resources/media/{id}/content.get.operationId": "getMediaContentById",
	"paths./resources/media/{id}/content.get.parameters.length": 2,
	"paths./resources/media/{id}/content.get.parameters[0].description": "The id of the media to show content for.",
	"paths./resources/media/{id}/content.get.parameters[0].format": "int64",
	"paths./resources/media/{id}/content.get.parameters[0].in": "path",
	"paths./resources/media/{id}/content.get.parameters[0].name": "id",
	"paths./resources/media/{id}/content.get.parameters[0].required": true,
	"paths./resources/media/{id}/content.get.parameters[0].type": "integer",
	"paths./resources/media/{id}/content.get.parameters[1].description": "The method that called this method",
	"paths./resources/media/{id}/content.get.parameters[1].in": "query",
	"paths./resources/media/{id}/content.get.parameters[1].name": "calledByBuild",
	"paths./resources/media/{id}/content.get.parameters[1].required": false,
	"paths./resources/media/{id}/content.get.parameters[1].type": "boolean",
	"paths./resources/media/{id}/content.get.produces.length": 4,
	"paths./resources/media/{id}/content.get.produces[0]": "application/json",
	"paths./resources/media/{id}/content.get.produces[1]": "text/html",
	"paths./resources/media/{id}/content.get.produces[2]": "image/jpeg",
	"paths./resources/media/{id}/content.get.produces[3]": "image/png",
	"paths./resources/media/{id}/content.get.responses.200.description": "No response was specified",
	"paths./resources/media/{id}/content.get.responses.200.schema.type": "string",
	"paths./resources/media/{id}/content.get.responses.400.description": "Invalid ID",
	"paths./resources/media/{id}/content.get.responses.400.schema.type": "string",
	"paths./resources/media/{id}/content.get.responses.500.description": "Internal Server Error",
	"paths./resources/media/{id}/content.get.responses.500.schema.type": "string",
	"paths./resources/media/{id}/content.get.summary": "Get content for MediaItem",
	"paths./resources/media/{id}/content.get.tags.length": 1,
	"paths./resources/media/{id}/content.get.tags[0]": "media",
	"paths./resources/media/{id}/embed.json.get.description": "Returns the javascript or iframe embed code for the MediaItem identified by 'id'.",
	"paths./resources/media/{id}/embed.json.get.operationId": "getMediaEmbedById",
	"paths./resources/media/{id}/embed.json.get.parameters.length": 9,
	"paths./resources/media/{id}/embed.json.get.parameters[0].description": "The id of the media to get embed code for.",
	"paths./resources/media/{id}/embed.json.get.parameters[0].format": "int64",
	"paths./resources/media/{id}/embed.json.get.parameters[0].in": "path",
	"paths./resources/media/{id}/embed.json.get.parameters[0].name": "id",
	"paths./resources/media/{id}/embed.json.get.parameters[0].required": true,
	"paths./resources/media/{id}/embed.json.get.parameters[0].type": "integer",
	"paths./resources/media/{id}/embed.json.get.parameters[1].description": "Currently supports 'iframe', defaults to 'javascript'.",
	"paths./resources/media/{id}/embed.json.get.parameters[1].in": "query",
	"paths./resources/media/{id}/embed.json.get.parameters[1].name": "flavor",
	"paths./resources/media/{id}/embed.json.get.parameters[1].required": false,
	"paths./resources/media/{id}/embed.json.get.parameters[1].type": "string",
	"paths./resources/media/{id}/embed.json.get.parameters[2].description": "The width of the generated iframe.",
	"paths./resources/media/{id}/embed.json.get.parameters[2].format": "int32",
	"paths./resources/media/{id}/embed.json.get.parameters[2].in": "query",
	"paths./resources/media/{id}/embed.json.get.parameters[2].name": "width",
	"paths./resources/media/{id}/embed.json.get.parameters[2].required": false,
	"paths./resources/media/{id}/embed.json.get.parameters[2].type": "integer",
	"paths./resources/media/{id}/embed.json.get.parameters[3].description": "The height of the generated iframe.",
	"paths./resources/media/{id}/embed.json.get.parameters[3].format": "int32",
	"paths./resources/media/{id}/embed.json.get.parameters[3].in": "query",
	"paths./resources/media/{id}/embed.json.get.parameters[3].name": "height",
	"paths./resources/media/{id}/embed.json.get.parameters[3].required": false,
	"paths./resources/media/{id}/embed.json.get.parameters[3].type": "integer",
	"paths./resources/media/{id}/embed.json.get.parameters[4].description": "The name of the iframe element",
	"paths./resources/media/{id}/embed.json.get.parameters[4].in": "query",
	"paths./resources/media/{id}/embed.json.get.parameters[4].name": "iframeName",
	"paths./resources/media/{id}/embed.json.get.parameters[4].required": false,
	"paths./resources/media/{id}/embed.json.get.parameters[4].type": "string",
	"paths./resources/media/{id}/embed.json.get.parameters[5].default": false,
	"paths./resources/media/{id}/embed.json.get.parameters[5].description": "Should a reference to the JQuery Library be omitted?",
	"paths./resources/media/{id}/embed.json.get.parameters[5].in": "query",
	"paths./resources/media/{id}/embed.json.get.parameters[5].name": "excludeJquery",
	"paths./resources/media/{id}/embed.json.get.parameters[5].required": false,
	"paths./resources/media/{id}/embed.json.get.parameters[5].type": "boolean",
	"paths./resources/media/{id}/embed.json.get.parameters[6].default": false,
	"paths./resources/media/{id}/embed.json.get.parameters[6].description": "Should the div to insert content into be omitted?",
	"paths./resources/media/{id}/embed.json.get.parameters[6].in": "query",
	"paths./resources/media/{id}/embed.json.get.parameters[6].name": "excludeDiv",
	"paths./resources/media/{id}/embed.json.get.parameters[6].required": false,
	"paths./resources/media/{id}/embed.json.get.parameters[6].type": "boolean",
	"paths./resources/media/{id}/embed.json.get.parameters[7].description": "Should the div to insert content into have a specific name?",
	"paths./resources/media/{id}/embed.json.get.parameters[7].in": "query",
	"paths./resources/media/{id}/embed.json.get.parameters[7].name": "divId",
	"paths./resources/media/{id}/embed.json.get.parameters[7].required": false,
	"paths./resources/media/{id}/embed.json.get.parameters[7].type": "string",
	"paths./resources/media/{id}/embed.json.get.parameters[8].description": "Method used to render an html request. Accepts one: [mv, list, feed]",
	"paths./resources/media/{id}/embed.json.get.parameters[8].in": "query",
	"paths./resources/media/{id}/embed.json.get.parameters[8].name": "displayMethod",
	"paths./resources/media/{id}/embed.json.get.parameters[8].required": false,
	"paths./resources/media/{id}/embed.json.get.parameters[8].type": "string",
	"paths./resources/media/{id}/embed.json.get.produces.length": 1,
	"paths./resources/media/{id}/embed.json.get.produces[0]": "text/html",
	"paths./resources/media/{id}/embed.json.get.responses.200.description": "No response was specified",
	"paths./resources/media/{id}/embed.json.get.responses.200.schema.$ref": "#/definitions/EmbedCode",
	"paths./resources/media/{id}/embed.json.get.responses.400.description": "Bad Request",
	"paths./resources/media/{id}/embed.json.get.responses.400.schema.type": "string",
	"paths./resources/media/{id}/embed.json.get.responses.500.description": "Internal Server Error",
	"paths./resources/media/{id}/embed.json.get.responses.500.schema.type": "string",
	"paths./resources/media/{id}/embed.json.get.summary": "Get embed code for MediaItem",
	"paths./resources/media/{id}/embed.json.get.tags.length": 1,
	"paths./resources/media/{id}/embed.json.get.tags[0]": "media",
	"paths./resources/media/{id}/preview.jpg.get.description": "Returns the JPG preview, where applicable, for the MediaItem identified by the 'id'.",
	"paths./resources/media/{id}/preview.jpg.get.operationId": "getMediaPreviewById",
	"paths./resources/media/{id}/preview.jpg.get.parameters.length": 1,
	"paths./resources/media/{id}/preview.jpg.get.parameters[0].description": "The id of the media to get a preview for.",
	"paths./resources/media/{id}/preview.jpg.get.parameters[0].format": "int64",
	"paths./resources/media/{id}/preview.jpg.get.parameters[0].in": "path",
	"paths./resources/media/{id}/preview.jpg.get.parameters[0].name": "id",
	"paths./resources/media/{id}/preview.jpg.get.parameters[0].required": true,
	"paths./resources/media/{id}/preview.jpg.get.parameters[0].type": "integer",
	"paths./resources/media/{id}/preview.jpg.get.produces.length": 1,
	"paths./resources/media/{id}/preview.jpg.get.produces[0]": "image/jpeg",
	"paths./resources/media/{id}/preview.jpg.get.responses.200.description": "No response was specified",
	"paths./resources/media/{id}/preview.jpg.get.responses.200.schema.$ref": "#/definitions/MediaItems",
	"paths./resources/media/{id}/preview.jpg.get.responses.400.description": "Bad Request",
	"paths./resources/media/{id}/preview.jpg.get.responses.400.schema.type": "string",
	"paths./resources/media/{id}/preview.jpg.get.responses.500.description": "Internal Server Error",
	"paths./resources/media/{id}/preview.jpg.get.responses.500.schema.type": "string",
	"paths./resources/media/{id}/preview.jpg.get.summary": "Get JPG preview for MediaItem",
	"paths./resources/media/{id}/preview.jpg.get.tags.length": 1,
	"paths./resources/media/{id}/preview.jpg.get.tags[0]": "media",
	"paths./resources/media/{id}/ratings.json.get.description": "Get the Ratings (number of 'likes') for the MediaItem identified by the 'id'.",
	"paths./resources/media/{id}/ratings.json.get.operationId": "getMediaRatingsById",
	"paths./resources/media/{id}/ratings.json.get.parameters.length": 1,
	"paths./resources/media/{id}/ratings.json.get.parameters[0].description": "The ID of the media item to 'like'.",
	"paths./resources/media/{id}/ratings.json.get.parameters[0].format": "int64",
	"paths./resources/media/{id}/ratings.json.get.parameters[0].in": "path",
	"paths./resources/media/{id}/ratings.json.get.parameters[0].name": "id",
	"paths./resources/media/{id}/ratings.json.get.parameters[0].required": true,
	"paths./resources/media/{id}/ratings.json.get.parameters[0].type": "integer",
	"paths./resources/media/{id}/ratings.json.get.produces.length": 1,
	"paths./resources/media/{id}/ratings.json.get.produces[0]": "application/json",
	"paths./resources/media/{id}/ratings.json.get.responses.200.description": "No response was specified",
	"paths./resources/media/{id}/ratings.json.get.responses.200.schema.$ref": "#/definitions/Ratings",
	"paths./resources/media/{id}/ratings.json.get.responses.400.description": "Invalid ID",
	"paths./resources/media/{id}/ratings.json.get.responses.400.schema.type": "string",
	"paths./resources/media/{id}/ratings.json.get.responses.500.description": "Internal Server Error",
	"paths./resources/media/{id}/ratings.json.get.responses.500.schema.type": "string",
	"paths./resources/media/{id}/ratings.json.get.summary": "Get Ratings for MediaItem",
	"paths./resources/media/{id}/ratings.json.get.tags.length": 1,
	"paths./resources/media/{id}/ratings.json.get.tags[0]": "media",
	"paths./resources/media/{id}/relatedMedia.json.get.description": "Returns the list of MediaItems related to the MediaItem identified by the 'id'.",
	"paths./resources/media/{id}/relatedMedia.json.get.operationId": "getRelatedMediaById",
	"paths./resources/media/{id}/relatedMedia.json.get.parameters.length": 4,
	"paths./resources/media/{id}/relatedMedia.json.get.parameters[0].description": "The id of the media item to get related media for",
	"paths./resources/media/{id}/relatedMedia.json.get.parameters[0].format": "int64",
	"paths./resources/media/{id}/relatedMedia.json.get.parameters[0].in": "path",
	"paths./resources/media/{id}/relatedMedia.json.get.parameters[0].name": "id",
	"paths./resources/media/{id}/relatedMedia.json.get.parameters[0].required": true,
	"paths./resources/media/{id}/relatedMedia.json.get.parameters[0].type": "integer",
	"paths./resources/media/{id}/relatedMedia.json.get.parameters[1].description": "The maximum number of records to return",
	"paths./resources/media/{id}/relatedMedia.json.get.parameters[1].format": "int32",
	"paths./resources/media/{id}/relatedMedia.json.get.parameters[1].in": "query",
	"paths./resources/media/{id}/relatedMedia.json.get.parameters[1].name": "max",
	"paths./resources/media/{id}/relatedMedia.json.get.parameters[1].required": false,
	"paths./resources/media/{id}/relatedMedia.json.get.parameters[1].type": "integer",
	"paths./resources/media/{id}/relatedMedia.json.get.parameters[2].description": "The offset of the records set to return for pagination.",
	"paths./resources/media/{id}/relatedMedia.json.get.parameters[2].format": "int32",
	"paths./resources/media/{id}/relatedMedia.json.get.parameters[2].in": "query",
	"paths./resources/media/{id}/relatedMedia.json.get.parameters[2].name": "offset",
	"paths./resources/media/{id}/relatedMedia.json.get.parameters[2].required": false,
	"paths./resources/media/{id}/relatedMedia.json.get.parameters[2].type": "integer",
	"paths./resources/media/{id}/relatedMedia.json.get.parameters[3].description": "Which field to sort the records by.",
	"paths./resources/media/{id}/relatedMedia.json.get.parameters[3].in": "query",
	"paths./resources/media/{id}/relatedMedia.json.get.parameters[3].name": "sort",
	"paths./resources/media/{id}/relatedMedia.json.get.parameters[3].required": false,
	"paths./resources/media/{id}/relatedMedia.json.get.parameters[3].type": "string",
	"paths./resources/media/{id}/relatedMedia.json.get.produces.length": 1,
	"paths./resources/media/{id}/relatedMedia.json.get.produces[0]": "application/json",
	"paths./resources/media/{id}/relatedMedia.json.get.responses.200.description": "No response was specified",
	"paths./resources/media/{id}/relatedMedia.json.get.responses.200.schema.$ref": "#/definitions/MediaItems",
	"paths./resources/media/{id}/relatedMedia.json.get.responses.400.description": "Bad Request",
	"paths./resources/media/{id}/relatedMedia.json.get.responses.400.schema.type": "string",
	"paths./resources/media/{id}/relatedMedia.json.get.responses.500.description": "Internal Server Error",
	"paths./resources/media/{id}/relatedMedia.json.get.responses.500.schema.type": "string",
	"paths./resources/media/{id}/relatedMedia.json.get.summary": "Get related MediaItems by ID",
	"paths./resources/media/{id}/relatedMedia.json.get.tags.length": 1,
	"paths./resources/media/{id}/relatedMedia.json.get.tags[0]": "media",
	"paths./resources/media/{id}/syndicate.json.get.description": "Returns the syndicated content for a given MediaItem in the specified 'format' (HTML or JSON).",
	"paths./resources/media/{id}/syndicate.json.get.operationId": "getMediaSyndicateById",
	"paths./resources/media/{id}/syndicate.json.get.parameters.length": 12,
	"paths./resources/media/{id}/syndicate.json.get.parameters[0].description": "The id of the media to show embed code for.",
	"paths./resources/media/{id}/syndicate.json.get.parameters[0].format": "int64",
	"paths./resources/media/{id}/syndicate.json.get.parameters[0].in": "path",
	"paths./resources/media/{id}/syndicate.json.get.parameters[0].name": "id",
	"paths./resources/media/{id}/syndicate.json.get.parameters[0].required": true,
	"paths./resources/media/{id}/syndicate.json.get.parameters[0].type": "integer",
	"paths./resources/media/{id}/syndicate.json.get.parameters[10].default": true,
	"paths./resources/media/{id}/syndicate.json.get.parameters[10].description": "If content is a video, the embeded video will auto play when loaded.",
	"paths./resources/media/{id}/syndicate.json.get.parameters[10].in": "query",
	"paths./resources/media/{id}/syndicate.json.get.parameters[10].name": "autoplay",
	"paths./resources/media/{id}/syndicate.json.get.parameters[10].required": false,
	"paths./resources/media/{id}/syndicate.json.get.parameters[10].type": "boolean",
	"paths./resources/media/{id}/syndicate.json.get.parameters[11].default": false,
	"paths./resources/media/{id}/syndicate.json.get.parameters[11].description": "If content is a video, related items will be shown at the end of playback.",
	"paths./resources/media/{id}/syndicate.json.get.parameters[11].in": "query",
	"paths./resources/media/{id}/syndicate.json.get.parameters[11].name": "rel",
	"paths./resources/media/{id}/syndicate.json.get.parameters[11].required": false,
	"paths./resources/media/{id}/syndicate.json.get.parameters[11].type": "boolean",
	"paths./resources/media/{id}/syndicate.json.get.parameters[1].default": "syndicate",
	"paths./resources/media/{id}/syndicate.json.get.parameters[1].description": "The css class to target for extraction.",
	"paths./resources/media/{id}/syndicate.json.get.parameters[1].in": "query",
	"paths./resources/media/{id}/syndicate.json.get.parameters[1].name": "cssClass",
	"paths./resources/media/{id}/syndicate.json.get.parameters[1].required": false,
	"paths./resources/media/{id}/syndicate.json.get.parameters[1].type": "string",
	"paths./resources/media/{id}/syndicate.json.get.parameters[2].default": false,
	"paths./resources/media/{id}/syndicate.json.get.parameters[2].description": "Remove in-line styles from content.",
	"paths./resources/media/{id}/syndicate.json.get.parameters[2].in": "query",
	"paths./resources/media/{id}/syndicate.json.get.parameters[2].name": "stripStyles",
	"paths./resources/media/{id}/syndicate.json.get.parameters[2].required": false,
	"paths./resources/media/{id}/syndicate.json.get.parameters[2].type": "boolean",
	"paths./resources/media/{id}/syndicate.json.get.parameters[3].default": false,
	"paths./resources/media/{id}/syndicate.json.get.parameters[3].description": "Remove script tags from content.",
	"paths./resources/media/{id}/syndicate.json.get.parameters[3].in": "query",
	"paths./resources/media/{id}/syndicate.json.get.parameters[3].name": "stripScripts",
	"paths./resources/media/{id}/syndicate.json.get.parameters[3].required": false,
	"paths./resources/media/{id}/syndicate.json.get.parameters[3].type": "boolean",
	"paths./resources/media/{id}/syndicate.json.get.parameters[4].default": false,
	"paths./resources/media/{id}/syndicate.json.get.parameters[4].description": "Remove image tags from content.",
	"paths./resources/media/{id}/syndicate.json.get.parameters[4].in": "query",
	"paths./resources/media/{id}/syndicate.json.get.parameters[4].name": "stripImages",
	"paths./resources/media/{id}/syndicate.json.get.parameters[4].required": false,
	"paths./resources/media/{id}/syndicate.json.get.parameters[4].type": "boolean",
	"paths./resources/media/{id}/syndicate.json.get.parameters[5].default": false,
	"paths./resources/media/{id}/syndicate.json.get.parameters[5].description": "Remove break tags from content.",
	"paths./resources/media/{id}/syndicate.json.get.parameters[5].in": "query",
	"paths./resources/media/{id}/syndicate.json.get.parameters[5].name": "stripBreaks",
	"paths./resources/media/{id}/syndicate.json.get.parameters[5].required": false,
	"paths./resources/media/{id}/syndicate.json.get.parameters[5].type": "boolean",
	"paths./resources/media/{id}/syndicate.json.get.parameters[6].default": false,
	"paths./resources/media/{id}/syndicate.json.get.parameters[6].description": "Remove class attributes from content (except 'syndicate').",
	"paths./resources/media/{id}/syndicate.json.get.parameters[6].in": "query",
	"paths./resources/media/{id}/syndicate.json.get.parameters[6].name": "stripClasses",
	"paths./resources/media/{id}/syndicate.json.get.parameters[6].required": false,
	"paths./resources/media/{id}/syndicate.json.get.parameters[6].type": "boolean",
	"paths./resources/media/{id}/syndicate.json.get.parameters[7].description": "Set font size (in points) of p, div, and span tags.",
	"paths./resources/media/{id}/syndicate.json.get.parameters[7].format": "int32",
	"paths./resources/media/{id}/syndicate.json.get.parameters[7].in": "query",
	"paths./resources/media/{id}/syndicate.json.get.parameters[7].name": "font-size",
	"paths./resources/media/{id}/syndicate.json.get.parameters[7].required": false,
	"paths./resources/media/{id}/syndicate.json.get.parameters[7].type": "integer",
	"paths./resources/media/{id}/syndicate.json.get.parameters[8].description": "Accepts valid CSS float options, such as 'left' or 'right'. Will inject a style into the content before rendering.",
	"paths./resources/media/{id}/syndicate.json.get.parameters[8].in": "query",
	"paths./resources/media/{id}/syndicate.json.get.parameters[8].name": "imageFloat",
	"paths./resources/media/{id}/syndicate.json.get.parameters[8].required": false,
	"paths./resources/media/{id}/syndicate.json.get.parameters[8].type": "string",
	"paths./resources/media/{id}/syndicate.json.get.parameters[9].description": "Accepts 4 CSV values representing pixel sizes of margin similar to CSS. Default format is 'north,east,south,west' - for example '0,10,10,0' would put a 10 pixel margin on the right and bottom sides of an image. Will inject a style into the content before rendering.",
	"paths./resources/media/{id}/syndicate.json.get.parameters[9].in": "query",
	"paths./resources/media/{id}/syndicate.json.get.parameters[9].name": "imageMargin",
	"paths./resources/media/{id}/syndicate.json.get.parameters[9].required": false,
	"paths./resources/media/{id}/syndicate.json.get.parameters[9].type": "string",
	"paths./resources/media/{id}/syndicate.json.get.produces.length": 2,
	"paths./resources/media/{id}/syndicate.json.get.produces[0]": "application/json",
	"paths./resources/media/{id}/syndicate.json.get.produces[1]": "text/html",
	"paths./resources/media/{id}/syndicate.json.get.responses.200.description": "No response was specified",
	"paths./resources/media/{id}/syndicate.json.get.responses.200.schema.$ref": "#/definitions/SyndicatedMediaItems",
	"paths./resources/media/{id}/syndicate.json.get.responses.400.description": "Bad Request",
	"paths./resources/media/{id}/syndicate.json.get.responses.400.schema.type": "string",
	"paths./resources/media/{id}/syndicate.json.get.responses.500.description": "Internal Server Error",
	"paths./resources/media/{id}/syndicate.json.get.responses.500.schema.type": "string",
	"paths./resources/media/{id}/syndicate.json.get.summary": "Get syndicated content for MediaItem",
	"paths./resources/media/{id}/syndicate.json.get.tags.length": 1,
	"paths./resources/media/{id}/syndicate.json.get.tags[0]": "media",
	"paths./resources/media/{id}/thumbnail.jpg.get.description": "Returns the JPG thumbnail, where applicable, for the MediaItem identified by the 'id'.",
	"paths./resources/media/{id}/thumbnail.jpg.get.operationId": "getMediaThumbnailById",
	"paths./resources/media/{id}/thumbnail.jpg.get.parameters.length": 1,
	"paths./resources/media/{id}/thumbnail.jpg.get.parameters[0].description": "The id of the media to get a thumbnail for.",
	"paths./resources/media/{id}/thumbnail.jpg.get.parameters[0].format": "int64",
	"paths./resources/media/{id}/thumbnail.jpg.get.parameters[0].in": "path",
	"paths./resources/media/{id}/thumbnail.jpg.get.parameters[0].name": "id",
	"paths./resources/media/{id}/thumbnail.jpg.get.parameters[0].required": true,
	"paths./resources/media/{id}/thumbnail.jpg.get.parameters[0].type": "integer",
	"paths./resources/media/{id}/thumbnail.jpg.get.produces.length": 1,
	"paths./resources/media/{id}/thumbnail.jpg.get.produces[0]": "image/jpeg",
	"paths./resources/media/{id}/thumbnail.jpg.get.responses.200.description": "No response was specified",
	"paths./resources/media/{id}/thumbnail.jpg.get.responses.200.schema.type": "string",
	"paths./resources/media/{id}/thumbnail.jpg.get.responses.400.description": "Invalid ID",
	"paths./resources/media/{id}/thumbnail.jpg.get.responses.400.schema.type": "string",
	"paths./resources/media/{id}/thumbnail.jpg.get.responses.500.description": "Internal Server Error",
	"paths./resources/media/{id}/thumbnail.jpg.get.responses.500.schema.type": "string",
	"paths./resources/media/{id}/thumbnail.jpg.get.summary": "Get JPG thumbnail for MediaItem",
	"paths./resources/media/{id}/thumbnail.jpg.get.tags.length": 1,
	"paths./resources/media/{id}/thumbnail.jpg.get.tags[0]": "media",
	"paths./resources/media/{id}/youtubeMetaData.json.get.description": "Returns the Youtube metadata, where applicable, for the MediaItem identified by the 'id'.",
	"paths./resources/media/{id}/youtubeMetaData.json.get.operationId": "getMediaYoutubeMetaDataById",
	"paths./resources/media/{id}/youtubeMetaData.json.get.parameters.length": 1,
	"paths./resources/media/{id}/youtubeMetaData.json.get.parameters[0].description": "The id of the video to show meta data for.",
	"paths./resources/media/{id}/youtubeMetaData.json.get.parameters[0].format": "int64",
	"paths./resources/media/{id}/youtubeMetaData.json.get.parameters[0].in": "path",
	"paths./resources/media/{id}/youtubeMetaData.json.get.parameters[0].name": "id",
	"paths./resources/media/{id}/youtubeMetaData.json.get.parameters[0].required": true,
	"paths./resources/media/{id}/youtubeMetaData.json.get.parameters[0].type": "integer",
	"paths./resources/media/{id}/youtubeMetaData.json.get.produces.length": 1,
	"paths./resources/media/{id}/youtubeMetaData.json.get.produces[0]": "application/json",
	"paths./resources/media/{id}/youtubeMetaData.json.get.responses.200.description": "No response was specified",
	"paths./resources/media/{id}/youtubeMetaData.json.get.responses.200.schema.$ref": "#/definitions/YoutubeMetadata",
	"paths./resources/media/{id}/youtubeMetaData.json.get.responses.400.description": "Invalid ID or Invalid media type",
	"paths./resources/media/{id}/youtubeMetaData.json.get.responses.400.schema.type": "string",
	"paths./resources/media/{id}/youtubeMetaData.json.get.responses.500.description": "Internal Server Error",
	"paths./resources/media/{id}/youtubeMetaData.json.get.responses.500.schema.type": "string",
	"paths./resources/media/{id}/youtubeMetaData.json.get.summary": "Get Youtube metadata for MediaItem",
	"paths./resources/media/{id}/youtubeMetaData.json.get.tags.length": 1,
	"paths./resources/media/{id}/youtubeMetaData.json.get.tags[0]": "media",
	"paths./resources/mediaTypes.json.get.description": "Returns the list of available MediaTypes.",
	"paths./resources/mediaTypes.json.get.operationId": "getMediaTypes",
	"paths./resources/mediaTypes.json.get.produces.length": 1,
	"paths./resources/mediaTypes.json.get.produces[0]": "application/json",
	"paths./resources/mediaTypes.json.get.responses.200.description": "No response was specified",
	"paths./resources/mediaTypes.json.get.responses.200.schema.$ref": "#/definitions/MediaTypes",
	"paths./resources/mediaTypes.json.get.responses.500.description": "Internal Server Error",
	"paths./resources/mediaTypes.json.get.responses.500.schema.type": "string",
	"paths./resources/mediaTypes.json.get.summary": "Get MediaTypes",
	"paths./resources/mediaTypes.json.get.tags.length": 1,
	"paths./resources/mediaTypes.json.get.tags[0]": "mediaTypes",
	"paths./resources/sources.json.get.description": "Returns the list of Sources.",
	"paths./resources/sources.json.get.operationId": "getSources",
	"paths./resources/sources.json.get.parameters.length": 3,
	"paths./resources/sources.json.get.parameters[0].description": "The maximum number of records to return",
	"paths./resources/sources.json.get.parameters[0].format": "int32",
	"paths./resources/sources.json.get.parameters[0].in": "query",
	"paths./resources/sources.json.get.parameters[0].name": "max",
	"paths./resources/sources.json.get.parameters[0].required": false,
	"paths./resources/sources.json.get.parameters[0].type": "integer",
	"paths./resources/sources.json.get.parameters[1].description": "The offset of the records set to return for pagination",
	"paths./resources/sources.json.get.parameters[1].format": "int32",
	"paths./resources/sources.json.get.parameters[1].in": "query",
	"paths./resources/sources.json.get.parameters[1].name": "offset",
	"paths./resources/sources.json.get.parameters[1].required": false,
	"paths./resources/sources.json.get.parameters[1].type": "integer",
	"paths./resources/sources.json.get.parameters[2].description": "* Set of fields to sort the records by.",
	"paths./resources/sources.json.get.parameters[2].in": "query",
	"paths./resources/sources.json.get.parameters[2].name": "sort",
	"paths./resources/sources.json.get.parameters[2].required": false,
	"paths./resources/sources.json.get.parameters[2].type": "string",
	"paths./resources/sources.json.get.produces.length": 1,
	"paths./resources/sources.json.get.produces[0]": "application/json",
	"paths./resources/sources.json.get.responses.200.description": "No response was specified",
	"paths./resources/sources.json.get.responses.200.schema.$ref": "#/definitions/Sources",
	"paths./resources/sources.json.get.responses.400.description": "Bad Request",
	"paths./resources/sources.json.get.responses.400.schema.type": "string",
	"paths./resources/sources.json.get.responses.500.description": "Internal Server Error",
	"paths./resources/sources.json.get.responses.500.schema.type": "string",
	"paths./resources/sources.json.get.summary": "Get Sources",
	"paths./resources/sources.json.get.tags.length": 1,
	"paths./resources/sources.json.get.tags[0]": "sources",
	"paths./resources/sources/{id}.json.get.description": "Returns the Source identified by the 'id'.",
	"paths./resources/sources/{id}.json.get.operationId": "getSourceById",
	"paths./resources/sources/{id}.json.get.parameters.length": 1,
	"paths./resources/sources/{id}.json.get.parameters[0].description": "The id of the source to look up",
	"paths./resources/sources/{id}.json.get.parameters[0].format": "int64",
	"paths./resources/sources/{id}.json.get.parameters[0].in": "path",
	"paths./resources/sources/{id}.json.get.parameters[0].name": "id",
	"paths./resources/sources/{id}.json.get.parameters[0].required": true,
	"paths./resources/sources/{id}.json.get.parameters[0].type": "integer",
	"paths./resources/sources/{id}.json.get.produces.length": 1,
	"paths./resources/sources/{id}.json.get.produces[0]": "application/json",
	"paths./resources/sources/{id}.json.get.responses.200.description": "No response was specified",
	"paths./resources/sources/{id}.json.get.responses.200.schema.$ref": "#/definitions/Sources",
	"paths./resources/sources/{id}.json.get.responses.400.description": "Invalid ID",
	"paths./resources/sources/{id}.json.get.responses.400.schema.type": "string",
	"paths./resources/sources/{id}.json.get.responses.500.description": "Internal Server Error",
	"paths./resources/sources/{id}.json.get.responses.500.schema.type": "string",
	"paths./resources/sources/{id}.json.get.summary": "Get Source by ID",
	"paths./resources/sources/{id}.json.get.tags.length": 1,
	"paths./resources/sources/{id}.json.get.tags[0]": "sources",
	"paths./resources/sources/{id}/syndicate.json.get.description": "Renders the list of MediaItems associated with the Source identified by the 'id'.",
	"paths./resources/sources/{id}/syndicate.json.get.parameters.length": 2,
	"paths./resources/sources/{id}/syndicate.json.get.parameters[0].description": "The id of the record to look up",
	"paths./resources/sources/{id}/syndicate.json.get.parameters[0].format": "int64",
	"paths./resources/sources/{id}/syndicate.json.get.parameters[0].in": "path",
	"paths./resources/sources/{id}/syndicate.json.get.parameters[0].name": "id",
	"paths./resources/sources/{id}/syndicate.json.get.parameters[0].required": true,
	"paths./resources/sources/{id}/syndicate.json.get.parameters[0].type": "integer",
	"paths./resources/sources/{id}/syndicate.json.get.parameters[1].description": "Method used to render an html request. Accepts one: [mv, list, feed]",
	"paths./resources/sources/{id}/syndicate.json.get.parameters[1].in": "query",
	"paths./resources/sources/{id}/syndicate.json.get.parameters[1].name": "displayMethod",
	"paths./resources/sources/{id}/syndicate.json.get.parameters[1].required": false,
	"paths./resources/sources/{id}/syndicate.json.get.parameters[1].type": "string",
	"paths./resources/sources/{id}/syndicate.json.get.produces.length": 1,
	"paths./resources/sources/{id}/syndicate.json.get.produces[0]": "application/json",
	"paths./resources/sources/{id}/syndicate.json.get.responses.200.description": "No response was specified",
	"paths./resources/sources/{id}/syndicate.json.get.responses.200.schema.$ref": "#/definitions/MediaItems",
	"paths./resources/sources/{id}/syndicate.json.get.responses.400.description": "Bad Request",
	"paths./resources/sources/{id}/syndicate.json.get.responses.400.schema.type": "string",
	"paths./resources/sources/{id}/syndicate.json.get.responses.500.description": "Internal Server Error",
	"paths./resources/sources/{id}/syndicate.json.get.responses.500.schema.type": "string",
	"paths./resources/sources/{id}/syndicate.json.get.summary": "Get MediaItems for Source",
	"paths./resources/sources/{id}/syndicate.json.get.tags.length": 1,
	"paths./resources/sources/{id}/syndicate.json.get.tags[0]": "sources",
	"paths./resources/tags.json.get.description": "Returns the list of Tags matching the specified query parameters in the specified 'format'.",
	"paths./resources/tags.json.get.operationId": "getTags",
	"paths./resources/tags.json.get.parameters.length": 8,
	"paths./resources/tags.json.get.parameters[0].description": "The name of the property to which sorting will be applied",
	"paths./resources/tags.json.get.parameters[0].in": "query",
	"paths./resources/tags.json.get.parameters[0].name": "sort",
	"paths./resources/tags.json.get.parameters[0].required": false,
	"paths./resources/tags.json.get.parameters[0].type": "string",
	"paths./resources/tags.json.get.parameters[1].description": "The maximum number of records to return",
	"paths./resources/tags.json.get.parameters[1].format": "int32",
	"paths./resources/tags.json.get.parameters[1].in": "query",
	"paths./resources/tags.json.get.parameters[1].name": "max",
	"paths./resources/tags.json.get.parameters[1].required": false,
	"paths./resources/tags.json.get.parameters[1].type": "integer",
	"paths./resources/tags.json.get.parameters[2].description": "Return records starting at the offset index.",
	"paths./resources/tags.json.get.parameters[2].format": "int32",
	"paths./resources/tags.json.get.parameters[2].in": "query",
	"paths./resources/tags.json.get.parameters[2].name": "offset",
	"paths./resources/tags.json.get.parameters[2].required": false,
	"paths./resources/tags.json.get.parameters[2].type": "integer",
	"paths./resources/tags.json.get.parameters[3].description": "Return tags[s] matching the supplied name",
	"paths./resources/tags.json.get.parameters[3].in": "query",
	"paths./resources/tags.json.get.parameters[3].name": "name",
	"paths./resources/tags.json.get.parameters[3].required": false,
	"paths./resources/tags.json.get.parameters[3].type": "string",
	"paths./resources/tags.json.get.parameters[4].description": "Return tags which contain the supplied partial name.",
	"paths./resources/tags.json.get.parameters[4].in": "query",
	"paths./resources/tags.json.get.parameters[4].name": "nameContains",
	"paths./resources/tags.json.get.parameters[4].required": false,
	"paths./resources/tags.json.get.parameters[4].type": "string",
	"paths./resources/tags.json.get.parameters[5].description": "Return tags associated with the supplied media id.",
	"paths./resources/tags.json.get.parameters[5].format": "int64",
	"paths./resources/tags.json.get.parameters[5].in": "query",
	"paths./resources/tags.json.get.parameters[5].name": "mediaId",
	"paths./resources/tags.json.get.parameters[5].required": false,
	"paths./resources/tags.json.get.parameters[5].type": "integer",
	"paths./resources/tags.json.get.parameters[6].description": "Return tags belonging to the supplied tag type id.",
	"paths./resources/tags.json.get.parameters[6].format": "int64",
	"paths./resources/tags.json.get.parameters[6].in": "query",
	"paths./resources/tags.json.get.parameters[6].name": "typeId",
	"paths./resources/tags.json.get.parameters[6].required": false,
	"paths./resources/tags.json.get.parameters[6].type": "integer",
	"paths./resources/tags.json.get.parameters[7].description": "Return tags belonging to the supplied tag type name.",
	"paths./resources/tags.json.get.parameters[7].in": "query",
	"paths./resources/tags.json.get.parameters[7].name": "typeName",
	"paths./resources/tags.json.get.parameters[7].required": false,
	"paths./resources/tags.json.get.parameters[7].type": "string",
	"paths./resources/tags.json.get.produces.length": 1,
	"paths./resources/tags.json.get.produces[0]": "application/json",
	"paths./resources/tags.json.get.responses.200.description": "No response was specified",
	"paths./resources/tags.json.get.responses.200.schema.$ref": "#/definitions/Tags",
	"paths./resources/tags.json.get.responses.400.description": "Bad Request",
	"paths./resources/tags.json.get.responses.400.schema.type": "string",
	"paths./resources/tags.json.get.responses.500.description": "Internal Server Error",
	"paths./resources/tags.json.get.responses.500.schema.type": "string",
	"paths./resources/tags.json.get.summary": "Get Tags",
	"paths./resources/tags.json.get.tags.length": 1,
	"paths./resources/tags.json.get.tags[0]": "tags",
	"paths./resources/tags/tagLanguages.json.get.description": "Returns the list of TagLanguages",
	"paths./resources/tags/tagLanguages.json.get.operationId": "getTagLanguages",
	"paths./resources/tags/tagLanguages.json.get.produces.length": 1,
	"paths./resources/tags/tagLanguages.json.get.produces[0]": "application/json",
	"paths./resources/tags/tagLanguages.json.get.responses.200.description": "No response was specified",
	"paths./resources/tags/tagLanguages.json.get.responses.200.schema.$ref": "#/definitions/TagLanguages",
	"paths./resources/tags/tagLanguages.json.get.responses.500.description": "Internal Server Error",
	"paths./resources/tags/tagLanguages.json.get.responses.500.schema.type": "string",
	"paths./resources/tags/tagLanguages.json.get.summary": "Get TagLanguages",
	"paths./resources/tags/tagLanguages.json.get.tags.length": 1,
	"paths./resources/tags/tagLanguages.json.get.tags[0]": "tags",
	"paths./resources/tags/tagTypes.json.get.description": "Returns the list of TagTypes",
	"paths./resources/tags/tagTypes.json.get.operationId": "getTagTypes",
	"paths./resources/tags/tagTypes.json.get.produces.length": 1,
	"paths./resources/tags/tagTypes.json.get.produces[0]": "application/json",
	"paths./resources/tags/tagTypes.json.get.responses.200.description": "No response was specified",
	"paths./resources/tags/tagTypes.json.get.responses.200.schema.$ref": "#/definitions/TagTypes",
	"paths./resources/tags/tagTypes.json.get.responses.500.description": "Internal Server Error",
	"paths./resources/tags/tagTypes.json.get.responses.500.schema.type": "string",
	"paths./resources/tags/tagTypes.json.get.summary": "Get TagTypes",
	"paths./resources/tags/tagTypes.json.get.tags.length": 1,
	"paths./resources/tags/tagTypes.json.get.tags[0]": "tags",
	"paths./resources/tags/{id}.json.get.description": "Returns the Tag identified by the 'id' in the specified 'format'.",
	"paths./resources/tags/{id}.json.get.operationId": "getTagById",
	"paths./resources/tags/{id}.json.get.parameters.length": 1,
	"paths./resources/tags/{id}.json.get.parameters[0].description": "The id of the record to look up",
	"paths./resources/tags/{id}.json.get.parameters[0].format": "int64",
	"paths./resources/tags/{id}.json.get.parameters[0].in": "path",
	"paths./resources/tags/{id}.json.get.parameters[0].name": "id",
	"paths./resources/tags/{id}.json.get.parameters[0].required": true,
	"paths./resources/tags/{id}.json.get.parameters[0].type": "integer",
	"paths./resources/tags/{id}.json.get.produces.length": 1,
	"paths./resources/tags/{id}.json.get.produces[0]": "application/json",
	"paths./resources/tags/{id}.json.get.responses.200.description": "No response was specified",
	"paths./resources/tags/{id}.json.get.responses.200.schema.$ref": "#/definitions/Tags",
	"paths./resources/tags/{id}.json.get.responses.400.description": "Invalid ID",
	"paths./resources/tags/{id}.json.get.responses.400.schema.type": "string",
	"paths./resources/tags/{id}.json.get.responses.500.description": "Internal Server Error",
	"paths./resources/tags/{id}.json.get.responses.500.schema.type": "string",
	"paths./resources/tags/{id}.json.get.summary": "Get Tag by ID",
	"paths./resources/tags/{id}.json.get.tags.length": 1,
	"paths./resources/tags/{id}.json.get.tags[0]": "tags",
	"paths./resources/tags/{id}/media.json.get.description": "Returns the list of MediaItems associated with the Tag identified by the 'id'.",
	"paths./resources/tags/{id}/media.json.get.operationId": "getMediaByTagId",
	"paths./resources/tags/{id}/media.json.get.parameters.length": 4,
	"paths./resources/tags/{id}/media.json.get.parameters[0].description": "The id of the record to look up",
	"paths./resources/tags/{id}/media.json.get.parameters[0].format": "int64",
	"paths./resources/tags/{id}/media.json.get.parameters[0].in": "path",
	"paths./resources/tags/{id}/media.json.get.parameters[0].name": "id",
	"paths./resources/tags/{id}/media.json.get.parameters[0].required": true,
	"paths./resources/tags/{id}/media.json.get.parameters[0].type": "integer",
	"paths./resources/tags/{id}/media.json.get.parameters[1].description": "The maximum number of records to return",
	"paths./resources/tags/{id}/media.json.get.parameters[1].format": "int32",
	"paths./resources/tags/{id}/media.json.get.parameters[1].in": "query",
	"paths./resources/tags/{id}/media.json.get.parameters[1].name": "max",
	"paths./resources/tags/{id}/media.json.get.parameters[1].required": false,
	"paths./resources/tags/{id}/media.json.get.parameters[1].type": "integer",
	"paths./resources/tags/{id}/media.json.get.parameters[2].description": "The offset of the records set to return for pagination",
	"paths./resources/tags/{id}/media.json.get.parameters[2].format": "int32",
	"paths./resources/tags/{id}/media.json.get.parameters[2].in": "query",
	"paths./resources/tags/{id}/media.json.get.parameters[2].name": "offset",
	"paths./resources/tags/{id}/media.json.get.parameters[2].required": false,
	"paths./resources/tags/{id}/media.json.get.parameters[2].type": "integer",
	"paths./resources/tags/{id}/media.json.get.parameters[3].description": "The name of the property to which sorting will be applied",
	"paths./resources/tags/{id}/media.json.get.parameters[3].in": "query",
	"paths./resources/tags/{id}/media.json.get.parameters[3].name": "sort",
	"paths./resources/tags/{id}/media.json.get.parameters[3].required": false,
	"paths./resources/tags/{id}/media.json.get.parameters[3].type": "string",
	"paths./resources/tags/{id}/media.json.get.produces.length": 1,
	"paths./resources/tags/{id}/media.json.get.produces[0]": "application/json",
	"paths./resources/tags/{id}/media.json.get.responses.200.description": "No response was specified",
	"paths./resources/tags/{id}/media.json.get.responses.200.schema.$ref": "#/definitions/MediaItems",
	"paths./resources/tags/{id}/media.json.get.responses.400.description": "Bad Request",
	"paths./resources/tags/{id}/media.json.get.responses.400.schema.type": "string",
	"paths./resources/tags/{id}/media.json.get.responses.500.description": "Internal Server Error",
	"paths./resources/tags/{id}/media.json.get.responses.500.schema.type": "string",
	"paths./resources/tags/{id}/media.json.get.summary": "Get MediaItems for Tag",
	"paths./resources/tags/{id}/media.json.get.tags.length": 1,
	"paths./resources/tags/{id}/media.json.get.tags[0]": "tags",
	"paths./resources/tags/{id}/related.json.get.description": "Returns the list of Tags related to the Tag identified by the 'id' in the specified format.",
	"paths./resources/tags/{id}/related.json.get.operationId": "getRelatedTagsById",
	"paths./resources/tags/{id}/related.json.get.parameters.length": 4,
	"paths./resources/tags/{id}/related.json.get.parameters[0].description": "The id of the tag to look up",
	"paths./resources/tags/{id}/related.json.get.parameters[0].format": "int64",
	"paths./resources/tags/{id}/related.json.get.parameters[0].in": "path",
	"paths./resources/tags/{id}/related.json.get.parameters[0].name": "id",
	"paths./resources/tags/{id}/related.json.get.parameters[0].required": true,
	"paths./resources/tags/{id}/related.json.get.parameters[0].type": "integer",
	"paths./resources/tags/{id}/related.json.get.parameters[1].description": "The maximum number of records to return",
	"paths./resources/tags/{id}/related.json.get.parameters[1].format": "int32",
	"paths./resources/tags/{id}/related.json.get.parameters[1].in": "query",
	"paths./resources/tags/{id}/related.json.get.parameters[1].name": "max",
	"paths./resources/tags/{id}/related.json.get.parameters[1].required": false,
	"paths./resources/tags/{id}/related.json.get.parameters[1].type": "integer",
	"paths./resources/tags/{id}/related.json.get.parameters[2].description": "The offset of the records set to return for pagination",
	"paths./resources/tags/{id}/related.json.get.parameters[2].format": "int32",
	"paths./resources/tags/{id}/related.json.get.parameters[2].in": "query",
	"paths./resources/tags/{id}/related.json.get.parameters[2].name": "offset",
	"paths./resources/tags/{id}/related.json.get.parameters[2].required": false,
	"paths./resources/tags/{id}/related.json.get.parameters[2].type": "integer",
	"paths./resources/tags/{id}/related.json.get.parameters[3].description": "The name of the property to which sorting will be applied",
	"paths./resources/tags/{id}/related.json.get.parameters[3].in": "query",
	"paths./resources/tags/{id}/related.json.get.parameters[3].name": "sort",
	"paths./resources/tags/{id}/related.json.get.parameters[3].required": false,
	"paths./resources/tags/{id}/related.json.get.parameters[3].type": "string",
	"paths./resources/tags/{id}/related.json.get.produces.length": 1,
	"paths./resources/tags/{id}/related.json.get.produces[0]": "application/json",
	"paths./resources/tags/{id}/related.json.get.responses.200.description": "No response was specified",
	"paths./resources/tags/{id}/related.json.get.responses.200.schema.$ref": "#/definitions/Tags",
	"paths./resources/tags/{id}/related.json.get.responses.400.description": "Bad Request",
	"paths./resources/tags/{id}/related.json.get.responses.400.schema.type": "string",
	"paths./resources/tags/{id}/related.json.get.responses.500.description": "Internal Server Error",
	"paths./resources/tags/{id}/related.json.get.responses.500.schema.type": "string",
	"paths./resources/tags/{id}/related.json.get.summary": "Get related Tags by ID",
	"paths./resources/tags/{id}/related.json.get.tags.length": 1,
	"paths./resources/tags/{id}/related.json.get.tags[0]": "tags",
	"paths./resources/tags/{id}/syndicate.json.get.description": "Renders the list of MediaItems associated with the Tag identified by the 'id'.",
	"paths./resources/tags/{id}/syndicate.json.get.parameters.length": 2,
	"paths./resources/tags/{id}/syndicate.json.get.parameters[0].description": "The id of the record to look up",
	"paths./resources/tags/{id}/syndicate.json.get.parameters[0].format": "int64",
	"paths./resources/tags/{id}/syndicate.json.get.parameters[0].in": "path",
	"paths./resources/tags/{id}/syndicate.json.get.parameters[0].name": "id",
	"paths./resources/tags/{id}/syndicate.json.get.parameters[0].required": true,
	"paths./resources/tags/{id}/syndicate.json.get.parameters[0].type": "integer",
	"paths./resources/tags/{id}/syndicate.json.get.parameters[1].description": "Method used to render an html request. Accepts one: [mv, list, feed]",
	"paths./resources/tags/{id}/syndicate.json.get.parameters[1].in": "query",
	"paths./resources/tags/{id}/syndicate.json.get.parameters[1].name": "displayMethod",
	"paths./resources/tags/{id}/syndicate.json.get.parameters[1].required": false,
	"paths./resources/tags/{id}/syndicate.json.get.parameters[1].type": "string",
	"paths./resources/tags/{id}/syndicate.json.get.produces.length": 1,
	"paths./resources/tags/{id}/syndicate.json.get.produces[0]": "application/json",
	"paths./resources/tags/{id}/syndicate.json.get.responses.200.description": "No response was specified",
	"paths./resources/tags/{id}/syndicate.json.get.responses.200.schema.$ref": "#/definitions/MediaItems",
	"paths./resources/tags/{id}/syndicate.json.get.responses.400.description": "Bad Request",
	"paths./resources/tags/{id}/syndicate.json.get.responses.400.schema.type": "string",
	"paths./resources/tags/{id}/syndicate.json.get.responses.500.description": "Internal Server Error",
	"paths./resources/tags/{id}/syndicate.json.get.responses.500.schema.type": "string",
	"paths./resources/tags/{id}/syndicate.json.get.summary": "Get MediaItems for Tag",
	"paths./resources/tags/{id}/syndicate.json.get.tags.length": 1,
	"paths./resources/tags/{id}/syndicate.json.get.tags[0]": "tags",
	"paths./resources/userMediaLists/{id}.json.get.description": "Get a specific user media list by 'id'.",
	"paths./resources/userMediaLists/{id}.json.get.operationId": "getUserMediaList",
	"paths./resources/userMediaLists/{id}.json.get.parameters.length": 2,
	"paths./resources/userMediaLists/{id}.json.get.parameters[0].description": "The id of the record to look up",
	"paths./resources/userMediaLists/{id}.json.get.parameters[0].format": "int64",
	"paths./resources/userMediaLists/{id}.json.get.parameters[0].in": "path",
	"paths./resources/userMediaLists/{id}.json.get.parameters[0].name": "id",
	"paths./resources/userMediaLists/{id}.json.get.parameters[0].required": true,
	"paths./resources/userMediaLists/{id}.json.get.parameters[0].type": "integer",
	"paths./resources/userMediaLists/{id}.json.get.parameters[1].description": "Method used to render an html request. Accepts one: [mv, list, feed]",
	"paths./resources/userMediaLists/{id}.json.get.parameters[1].in": "query",
	"paths./resources/userMediaLists/{id}.json.get.parameters[1].name": "displayMethod",
	"paths./resources/userMediaLists/{id}.json.get.parameters[1].required": false,
	"paths./resources/userMediaLists/{id}.json.get.parameters[1].type": "string",
	"paths./resources/userMediaLists/{id}.json.get.produces.length": 1,
	"paths./resources/userMediaLists/{id}.json.get.produces[0]": "application/json",
	"paths./resources/userMediaLists/{id}.json.get.responses.200.description": "No response was specified",
	"paths./resources/userMediaLists/{id}.json.get.responses.200.schema.$ref": "#/definitions/MediaItems",
	"paths./resources/userMediaLists/{id}.json.get.responses.400.description": "Invalid ID",
	"paths./resources/userMediaLists/{id}.json.get.responses.400.schema.type": "string",
	"paths./resources/userMediaLists/{id}.json.get.responses.500.description": "Internal Server Error",
	"paths./resources/userMediaLists/{id}.json.get.responses.500.schema.type": "string",
	"paths./resources/userMediaLists/{id}.json.get.summary": "Get UserMediaList by ID",
	"paths./resources/userMediaLists/{id}.json.get.tags.length": 1,
	"paths./resources/userMediaLists/{id}.json.get.tags[0]": "userMediaLists",
	"schemes.length": 1,
	"schemes[0]": "https",
	"swagger": "2.0",
	"tags.length": 8,
	"tags[0].description": "Information about campaigns",
	"tags[0].name": "campaigns",
	"tags[1].description": "Information about languages",
	"tags[1].name": "languages",
	"tags[2].description": "Information about media",
	"tags[2].name": "media",
	"tags[3].description": "Information about media types",
	"tags[3].name": "mediaTypes",
	"tags[4].description": "Global Search",
	"tags[4].name": "resources",
	"tags[5].description": "Information about sources.",
	"tags[5].name": "sources",
	"tags[6].description": "Information about tags",
	"tags[6].name": "tags",
	"tags[7].description": "Get media from user generated lists.",
	"tags[7].name": "userMediaLists"
}