swagger: '2.0'
schemes:
  - https
host: api.digitalmedia.hhs.gov
basePath: /api/v2
info:
  contact:
    email: syndicationadmin@hhs.gov
  description: |

    <div class="swagger-ui-wrap extraFooter"><h3>Common Features / Behaviors</h3>
        <div class="features">
            <ul>
                <li><strong>* "sort" param:</strong> supports multi column sorting through the use of commas as delimiters, and a hyphen to denote descending order.
                    <br/>
                    <strong><span>Examples:</span></strong>
                    <ul>
                        <li><span class="example">name</span><span class="description">sort results by name ascending</span></li>
                        <li><span class="example">-name</span><span class="description">sort results by name descending</span></li>
                        <li><span class="example">-name,id</span><span class="description">sort results by name descending and then by id ascending</span></li>
                        <li><span class="example">id,-dateContentAuthored</span><span class="description">sort results by id ascending and then date descending</span></li>
                    </ul>
                </li>
                <li><strong>Date formats:</strong> Date input format is expected to be based on <a href="http://www.ietf.org/rfc/rfc3339.txt">RFC 3339</a>. <br/>
                    <span><strong>Example:</strong></span>
                    <ul><li>2013-11-18T18:43:01Z</li></ul>
                </li>
            </ul>
        </div>
    </div>
  license:
    name: GNU GENERAL PUBLIC LICENSE
    url: 'http://www.gnu.org/licenses/gpl.html'
  termsOfService: 'http://www.hhs.gov/web/socialmedia/policies/tos.html#ready'
  title: HHS Media Services
  version: '2'
  x-apisguru-categories:
    - open_data
  x-logo:
    backgroundColor: '#185394'
    url: 'https://api.apis.guru/v2/cache/logo/http_www.hhs.gov_sites_all_themes_project_h_css_images_hhs_logo.png'
  x-origin:
    - converter:
        url: 'https://github.com/lucybot/api-spec-converter'
        version: 2.5.0
      format: swagger
      url: 'https://api.digitalmedia.hhs.gov/swagger/api'
      version: '1.2'
  x-preferred: true
  x-providerName: hhs.gov
consumes:
  - ''
tags:
  - description: Information about campaigns
    name: campaigns
  - description: Information about languages
    name: languages
  - description: Information about media
    name: media
  - description: Information about media types
    name: mediaTypes
  - description: Global Search
    name: resources
  - description: Information about sources.
    name: sources
  - description: Information about tags
    name: tags
  - description: Get media from user generated lists.
    name: userMediaLists
paths:
  /resources.json:
    get:
      description: 'Returns the list of Resources matching the search query ''q''.<p>The search query ''q'' is a Lucene query.<br>The syntax for a Lucene query can be found <a href="http://lucene.apache.org/core/2_9_4/queryparsersyntax.html">here</a>.'
      operationId: getResources
      parameters:
        - description: The search query supplied by the user
          in: query
          name: q
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/Resources'
        '400':
          description: Invalid search query
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get Resources by search query
      tags:
        - resources
  /resources/campaigns.json:
    get:
      description: Returns the list of Campaigns.
      operationId: getCampaigns
      parameters:
        - description: The maximum number of records to return
          format: int32
          in: query
          name: max
          required: false
          type: integer
        - description: The offset of the records set to return for pagination
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: '* Set of fields to sort the records by.'
          in: query
          name: sort
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/Campaigns'
        '400':
          description: Bad Request
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get Campaigns
      tags:
        - campaigns
  '/resources/campaigns/{id}.json':
    get:
      description: Returns the Campaign identified by the 'id'.
      operationId: getCampaignById
      parameters:
        - description: The id of the record to look up
          format: int64
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/Campaigns'
        '400':
          description: Invalid ID
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get Campaign by ID
      tags:
        - campaigns
  '/resources/campaigns/{id}/media.json':
    get:
      description: Returns the list of MediaItems for the Campaign identified by the 'id'.
      operationId: getMediaByCampaignId
      parameters:
        - description: The id of the campaign to find media items for
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: The maximum number of records to return
          format: int32
          in: query
          name: max
          required: false
          type: integer
        - description: The offset of the records set to return for pagination
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: The name of the property to which sorting will be applied
          in: query
          name: sort
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/MediaItems'
        '400':
          description: Bad Request
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get MediaItems by Campaign ID
      tags:
        - campaigns
  '/resources/campaigns/{id}/syndicate.json':
    get:
      description: Renders the list of MediaItems associated with the Campaign identified by the 'id'.
      parameters:
        - description: The id of the record to look up
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: 'Method used to render an html request. Accepts one: [mv, list, feed]'
          in: query
          name: displayMethod
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/MediaItems'
        '400':
          description: Bad Request
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get MediaItems for Campaign
      tags:
        - campaigns
  /resources/languages.json:
    get:
      description: Returns the list Languages.
      operationId: getLanguages
      parameters:
        - description: The maximum number of records to return
          format: int32
          in: query
          name: max
          required: false
          type: integer
        - description: The offset of the records set to return for pagination
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: '* Set of fields to sort the records by.'
          in: query
          name: sort
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/Languages'
        '400':
          description: Bad Request
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get Languages
      tags:
        - languages
  '/resources/languages/{id}.json':
    get:
      description: Returns the Language identified by the 'id'.
      operationId: getLanguageById
      parameters:
        - description: The id of the language to look up
          format: int64
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/Languages'
        '400':
          description: Invalid ID
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get Language by ID
      tags:
        - languages
  /resources/media.json:
    get:
      description: Returns the list of MediaItems matching the specified query parameters.
      operationId: getMedia
      parameters:
        - description: The maximum number of records to return
          format: int32
          in: query
          name: max
          required: false
          type: integer
        - description: The offset of the records set to return for pagination.
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: '* Set of fields to sort the records by.'
          in: query
          name: sort
          required: false
          type: string
        - description: '* The ascending or descending order.'
          in: query
          name: order
          required: false
          type: string
        - description: 'Find all media items belonging to the specified media type[s].'
          in: query
          name: mediaTypes
          required: false
          type: string
        - description: 'Find all media items containing the provided name, case insensitive.'
          in: query
          name: name
          required: false
          type: string
        - description: Restrict filtering to media items in a specific collection.
          format: int32
          in: query
          name: collectionId
          required: false
          type: integer
        - description: 'Find all media items containing the partial name, case insensitive.'
          in: query
          name: nameContains
          required: false
          type: string
        - description: 'Find all media items containing the provided partial description, case insensitive.'
          in: query
          name: descriptionContains
          required: false
          type: string
        - description: 'Find all media items which have the provided sourceUrl, case insensitive.'
          in: query
          name: sourceUrl
          required: false
          type: string
        - description: 'Find all media items which contain the provided partial sourceUrl, case insensitive.'
          in: query
          name: sourceUrlContains
          required: false
          type: string
        - description: 'Find all media items which have the provided customThumbnailUrl, case insensitive.'
          in: query
          name: customThumbnailUrl
          required: false
          type: string
        - description: 'Find all media items which contain the provided partial customThumbnailUrl, case insensitive.'
          in: query
          name: customThumbnailUrlContains
          required: false
          type: string
        - description: 'Find all media items authored on the provided day (RFC 3339, time ignored).'
          format: date
          in: query
          name: dateContentAuthored
          required: false
          type: string
        - description: 'Find all media items updated on the provided day (RFC 3339, time ignored).'
          format: date
          in: query
          name: dateContentUpdated
          required: false
          type: string
        - description: 'Find all media items published on the provided day (RFC 3339, time ignored).'
          format: date
          in: query
          name: dateContentPublished
          required: false
          type: string
        - description: 'Find all media items reviewed on the provided day (RFC 3339, time ignored).'
          format: date
          in: query
          name: dateContentReviewed
          required: false
          type: string
        - description: 'Find all media items authored on the provided day (RFC 3339, time ignored).'
          format: date
          in: query
          name: dateSyndicationCaptured
          required: false
          type: string
        - description: 'Find all media items updated on the provided day, (RFC 3339, time ignored).'
          format: date
          in: query
          name: dateSyndicationUpdated
          required: false
          type: string
        - description: 'Find all media items authored since the provided day (RFC 3339, time ignored).'
          format: date
          in: query
          name: contentAuthoredSinceDate
          required: false
          type: string
        - description: 'Find all media items authored before the provided day (RFC 3339, time ignored).'
          format: date
          in: query
          name: contentAuthoredBeforeDate
          required: false
          type: string
        - description: 'Find all media items authored between the provided start and end days (RFC 3339, comma separated, time ignored).'
          in: query
          name: contentAuthoredInRange
          required: false
          type: string
        - description: 'Find all media items updated since the provided day (RFC 3339, time ignored).'
          format: date
          in: query
          name: contentUpdatedSinceDate
          required: false
          type: string
        - description: 'Find all media items updated before the provided day (RFC 3339, time ignored).'
          format: date
          in: query
          name: contentUpdatedBeforeDate
          required: false
          type: string
        - description: 'Find all media items updated between the provided start and end days (RFC 3339, comma separated, time ignored).'
          in: query
          name: contentUpdatedInRange
          required: false
          type: string
        - description: 'Find all media items published since the provided day (RFC 3339, time ignored).'
          format: date
          in: query
          name: contentPublishedSinceDate
          required: false
          type: string
        - description: 'Find all media items published before the provided day (RFC 3339, time ignored).'
          format: date
          in: query
          name: contentPublishedBeforeDate
          required: false
          type: string
        - description: 'Find all media items published between the provided start and end days (RFC 3339, comma separated, time ignored).'
          in: query
          name: contentPublishedInRange
          required: false
          type: string
        - description: 'Find all media items reviewed since the provided day (RFC 3339, time ignored).'
          format: date
          in: query
          name: contentReviewedSinceDate
          required: false
          type: string
        - description: 'Find all media items reviewed before the provided day (RFC 3339, time ignored).'
          format: date
          in: query
          name: contentReviewedBeforeDate
          required: false
          type: string
        - description: 'Find all media items reviewed between the provided start and end days (RFC 3339, comma separated, time ignored).'
          in: query
          name: contentReviewedInRange
          required: false
          type: string
        - description: 'Find all media items authored since the provided day (RFC 3339, time ignored).'
          format: date
          in: query
          name: syndicationCapturedSinceDate
          required: false
          type: string
        - description: 'Find all media items authored before the provided day (RFC 3339, time ignored).'
          format: date
          in: query
          name: syndicationCapturedBeforeDate
          required: false
          type: string
        - description: 'Find all media items authored between the provided start and end days (RFC 3339, comma separated, time ignored).'
          in: query
          name: syndicationCapturedInRange
          required: false
          type: string
        - description: 'Find all media items updated since the provided day, (RFC 3339, time ignored).'
          format: date
          in: query
          name: syndicationUpdatedSinceDate
          required: false
          type: string
        - description: 'Find all media items updated before the provided day, (RFC 3339, time ignored).'
          format: date
          in: query
          name: syndicationUpdatedBeforeDate
          required: false
          type: string
        - description: 'Find all media items updated between the provided start and end days, (RFC 3339, comma separated, time ignored).'
          in: query
          name: syndicationUpdatedInRange
          required: false
          type: string
        - description: 'Find all media items visible since the provided day, (RFC 3339, time ignored).'
          format: date
          in: query
          name: syndicationVisibleSinceDate
          required: false
          type: string
        - description: 'Find all media items visible before the provided day, (RFC 3339, time ignored).'
          format: date
          in: query
          name: syndicationVisibleBeforeDate
          required: false
          type: string
        - description: 'Find all media items visible between the provided start and end days, (RFC 3339, comma separated, time ignored).'
          in: query
          name: syndicationVisibleInRange
          required: false
          type: string
        - description: Find all media items written in the language specified by Id.
          format: int64
          in: query
          name: languageId
          required: false
          type: integer
        - description: 'Find all media items written in the language specified by name, case insensitive.'
          in: query
          name: languageName
          required: false
          type: string
        - description: 'Find all media items written in the language specified by 639-2 isoCode , case insensitive.'
          in: query
          name: languageIsoCode
          required: false
          type: string
        - description: 'Find all media items which match the provided hash, case insensitive.'
          in: query
          name: hash
          required: false
          type: string
        - description: 'Find all media items which match the provided partial hash, case insensitive.'
          in: query
          name: hashContains
          required: false
          type: string
        - description: Find all media items that belong to the source specified by Id.
          format: int64
          in: query
          name: sourceId
          required: false
          type: integer
        - description: 'Find all media items that belong to the source specified by name, case insensitive.'
          in: query
          name: sourceName
          required: false
          type: string
        - description: 'Find all media items that belong to the source specified by partial name, case insensitive.'
          in: query
          name: sourceNameContains
          required: false
          type: string
        - description: 'Find all media items that belong to the source specified by acronym, case insensitive.'
          in: query
          name: sourceAcronym
          required: false
          type: string
        - description: 'Find all media items that belong to the source specified by partial acronym, case insensitive.'
          in: query
          name: sourceAcronymContains
          required: false
          type: string
        - description: Find only media items tagged with the specified tag Ids.
          in: query
          name: tagIds
          required: false
          type: string
        - description: Find only media from within the supplied list of Ids.
          in: query
          name: restrictToSet
          required: false
          type: string
        - description: Find all media items containing the createdBy value.
          in: query
          name: createdBy
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/MediaItems'
        '400':
          description: Bad Request
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get MediaItems
      tags:
        - media
  /resources/media/featured.json:
    get:
      description: Get the list of featured content in the syndication system
      operationId: getFeaturedMedia
      parameters:
        - description: '* Set of fields to sort the records by.'
          in: query
          name: sort
          required: false
          type: string
        - description: The maximum number of records to return.
          format: int64
          in: query
          name: max
          required: false
          type: integer
        - description: How many records to offset the query by.
          format: int64
          in: query
          name: offset
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            type: string
        '400':
          description: Bad Request
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get the list of featured content in the syndication system
      tags:
        - media
  /resources/media/mostPopularMedia.json:
    get:
      description: Returns the list of MediaItems with the highest ratings.
      operationId: getMostPopularMedia
      parameters:
        - description: The maximum number of records to return
          format: int32
          in: query
          name: max
          required: false
          type: integer
        - description: The offset of the records set to return for pagination.
          format: int32
          in: query
          name: offset
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/MediaItems'
        '400':
          description: Bad Request
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get MediaItems by popularity
      tags:
        - media
  /resources/media/searchResults.json:
    get:
      description: 'Returns the list of MediaItems matching the search query ''q''.<p>The search query ''q'' is a Lucene query.<br>The syntax for a Lucene query can be found <a href="http://lucene.apache.org/core/2_9_4/queryparsersyntax.html">here</a>'
      operationId: searchMedia
      parameters:
        - description: The search query supplied by the user
          in: query
          name: q
          required: true
          type: string
        - description: The maximum number of records to return
          format: int32
          in: query
          name: max
          required: false
          type: integer
        - description: The offset of the records set to return for pagination.
          format: int32
          in: query
          name: offset
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/MediaItems'
        '400':
          description: Bad Request
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get MediaItems by search query
      tags:
        - media
  '/resources/media/{id}.json':
    get:
      description: Returns the MediaItem identified by the 'id'.
      operationId: getMediaById
      parameters:
        - description: The id of the record to look up
          format: int64
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/MediaItems'
        '400':
          description: Invalid ID
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get MediaItem by ID
      tags:
        - media
  '/resources/media/{id}/content':
    get:
      description: 'Returns the raw content (html, image, etc...) for the MediaItem identified by the ''id''.'
      operationId: getMediaContentById
      parameters:
        - description: The id of the media to show content for.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: The method that called this method
          in: query
          name: calledByBuild
          required: false
          type: boolean
      produces:
        - application/json
        - text/html
        - image/jpeg
        - image/png
      responses:
        '200':
          description: No response was specified
          schema:
            type: string
        '400':
          description: Invalid ID
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get content for MediaItem
      tags:
        - media
  '/resources/media/{id}/embed.json':
    get:
      description: Returns the javascript or iframe embed code for the MediaItem identified by 'id'.
      operationId: getMediaEmbedById
      parameters:
        - description: The id of the media to get embed code for.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: 'Currently supports ''iframe'', defaults to ''javascript''.'
          in: query
          name: flavor
          required: false
          type: string
        - description: The width of the generated iframe.
          format: int32
          in: query
          name: width
          required: false
          type: integer
        - description: The height of the generated iframe.
          format: int32
          in: query
          name: height
          required: false
          type: integer
        - description: The name of the iframe element
          in: query
          name: iframeName
          required: false
          type: string
        - default: false
          description: Should a reference to the JQuery Library be omitted?
          in: query
          name: excludeJquery
          required: false
          type: boolean
        - default: false
          description: Should the div to insert content into be omitted?
          in: query
          name: excludeDiv
          required: false
          type: boolean
        - description: Should the div to insert content into have a specific name?
          in: query
          name: divId
          required: false
          type: string
        - description: 'Method used to render an html request. Accepts one: [mv, list, feed]'
          in: query
          name: displayMethod
          required: false
          type: string
      produces:
        - text/html
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/EmbedCode'
        '400':
          description: Bad Request
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get embed code for MediaItem
      tags:
        - media
  '/resources/media/{id}/preview.jpg':
    get:
      description: 'Returns the JPG preview, where applicable, for the MediaItem identified by the ''id''.'
      operationId: getMediaPreviewById
      parameters:
        - description: The id of the media to get a preview for.
          format: int64
          in: path
          name: id
          required: true
          type: integer
      produces:
        - image/jpeg
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/MediaItems'
        '400':
          description: Bad Request
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get JPG preview for MediaItem
      tags:
        - media
  '/resources/media/{id}/ratings.json':
    get:
      description: Get the Ratings (number of 'likes') for the MediaItem identified by the 'id'.
      operationId: getMediaRatingsById
      parameters:
        - description: The ID of the media item to 'like'.
          format: int64
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/Ratings'
        '400':
          description: Invalid ID
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get Ratings for MediaItem
      tags:
        - media
  '/resources/media/{id}/relatedMedia.json':
    get:
      description: Returns the list of MediaItems related to the MediaItem identified by the 'id'.
      operationId: getRelatedMediaById
      parameters:
        - description: The id of the media item to get related media for
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: The maximum number of records to return
          format: int32
          in: query
          name: max
          required: false
          type: integer
        - description: The offset of the records set to return for pagination.
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: Which field to sort the records by.
          in: query
          name: sort
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/MediaItems'
        '400':
          description: Bad Request
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get related MediaItems by ID
      tags:
        - media
  '/resources/media/{id}/syndicate.json':
    get:
      description: Returns the syndicated content for a given MediaItem in the specified 'format' (HTML or JSON).
      operationId: getMediaSyndicateById
      parameters:
        - description: The id of the media to show embed code for.
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - default: syndicate
          description: The css class to target for extraction.
          in: query
          name: cssClass
          required: false
          type: string
        - default: false
          description: Remove in-line styles from content.
          in: query
          name: stripStyles
          required: false
          type: boolean
        - default: false
          description: Remove script tags from content.
          in: query
          name: stripScripts
          required: false
          type: boolean
        - default: false
          description: Remove image tags from content.
          in: query
          name: stripImages
          required: false
          type: boolean
        - default: false
          description: Remove break tags from content.
          in: query
          name: stripBreaks
          required: false
          type: boolean
        - default: false
          description: Remove class attributes from content (except 'syndicate').
          in: query
          name: stripClasses
          required: false
          type: boolean
        - description: 'Set font size (in points) of p, div, and span tags.'
          format: int32
          in: query
          name: font-size
          required: false
          type: integer
        - description: 'Accepts valid CSS float options, such as ''left'' or ''right''. Will inject a style into the content before rendering.'
          in: query
          name: imageFloat
          required: false
          type: string
        - description: 'Accepts 4 CSV values representing pixel sizes of margin similar to CSS. Default format is ''north,east,south,west'' - for example ''0,10,10,0'' would put a 10 pixel margin on the right and bottom sides of an image. Will inject a style into the content before rendering.'
          in: query
          name: imageMargin
          required: false
          type: string
        - default: true
          description: 'If content is a video, the embeded video will auto play when loaded.'
          in: query
          name: autoplay
          required: false
          type: boolean
        - default: false
          description: 'If content is a video, related items will be shown at the end of playback.'
          in: query
          name: rel
          required: false
          type: boolean
      produces:
        - application/json
        - text/html
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/SyndicatedMediaItems'
        '400':
          description: Bad Request
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get syndicated content for MediaItem
      tags:
        - media
  '/resources/media/{id}/thumbnail.jpg':
    get:
      description: 'Returns the JPG thumbnail, where applicable, for the MediaItem identified by the ''id''.'
      operationId: getMediaThumbnailById
      parameters:
        - description: The id of the media to get a thumbnail for.
          format: int64
          in: path
          name: id
          required: true
          type: integer
      produces:
        - image/jpeg
      responses:
        '200':
          description: No response was specified
          schema:
            type: string
        '400':
          description: Invalid ID
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get JPG thumbnail for MediaItem
      tags:
        - media
  '/resources/media/{id}/youtubeMetaData.json':
    get:
      description: 'Returns the Youtube metadata, where applicable, for the MediaItem identified by the ''id''.'
      operationId: getMediaYoutubeMetaDataById
      parameters:
        - description: The id of the video to show meta data for.
          format: int64
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/YoutubeMetadata'
        '400':
          description: Invalid ID or Invalid media type
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get Youtube metadata for MediaItem
      tags:
        - media
  /resources/mediaTypes.json:
    get:
      description: Returns the list of available MediaTypes.
      operationId: getMediaTypes
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/MediaTypes'
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get MediaTypes
      tags:
        - mediaTypes
  /resources/sources.json:
    get:
      description: Returns the list of Sources.
      operationId: getSources
      parameters:
        - description: The maximum number of records to return
          format: int32
          in: query
          name: max
          required: false
          type: integer
        - description: The offset of the records set to return for pagination
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: '* Set of fields to sort the records by.'
          in: query
          name: sort
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/Sources'
        '400':
          description: Bad Request
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get Sources
      tags:
        - sources
  '/resources/sources/{id}.json':
    get:
      description: Returns the Source identified by the 'id'.
      operationId: getSourceById
      parameters:
        - description: The id of the source to look up
          format: int64
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/Sources'
        '400':
          description: Invalid ID
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get Source by ID
      tags:
        - sources
  '/resources/sources/{id}/syndicate.json':
    get:
      description: Renders the list of MediaItems associated with the Source identified by the 'id'.
      parameters:
        - description: The id of the record to look up
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: 'Method used to render an html request. Accepts one: [mv, list, feed]'
          in: query
          name: displayMethod
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/MediaItems'
        '400':
          description: Bad Request
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get MediaItems for Source
      tags:
        - sources
  /resources/tags.json:
    get:
      description: Returns the list of Tags matching the specified query parameters in the specified 'format'.
      operationId: getTags
      parameters:
        - description: The name of the property to which sorting will be applied
          in: query
          name: sort
          required: false
          type: string
        - description: The maximum number of records to return
          format: int32
          in: query
          name: max
          required: false
          type: integer
        - description: Return records starting at the offset index.
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: 'Return tags[s] matching the supplied name'
          in: query
          name: name
          required: false
          type: string
        - description: Return tags which contain the supplied partial name.
          in: query
          name: nameContains
          required: false
          type: string
        - description: Return tags associated with the supplied media id.
          format: int64
          in: query
          name: mediaId
          required: false
          type: integer
        - description: Return tags belonging to the supplied tag type id.
          format: int64
          in: query
          name: typeId
          required: false
          type: integer
        - description: Return tags belonging to the supplied tag type name.
          in: query
          name: typeName
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/Tags'
        '400':
          description: Bad Request
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get Tags
      tags:
        - tags
  /resources/tags/tagLanguages.json:
    get:
      description: Returns the list of TagLanguages
      operationId: getTagLanguages
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/TagLanguages'
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get TagLanguages
      tags:
        - tags
  /resources/tags/tagTypes.json:
    get:
      description: Returns the list of TagTypes
      operationId: getTagTypes
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/TagTypes'
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get TagTypes
      tags:
        - tags
  '/resources/tags/{id}.json':
    get:
      description: Returns the Tag identified by the 'id' in the specified 'format'.
      operationId: getTagById
      parameters:
        - description: The id of the record to look up
          format: int64
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/Tags'
        '400':
          description: Invalid ID
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get Tag by ID
      tags:
        - tags
  '/resources/tags/{id}/media.json':
    get:
      description: Returns the list of MediaItems associated with the Tag identified by the 'id'.
      operationId: getMediaByTagId
      parameters:
        - description: The id of the record to look up
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: The maximum number of records to return
          format: int32
          in: query
          name: max
          required: false
          type: integer
        - description: The offset of the records set to return for pagination
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: The name of the property to which sorting will be applied
          in: query
          name: sort
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/MediaItems'
        '400':
          description: Bad Request
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get MediaItems for Tag
      tags:
        - tags
  '/resources/tags/{id}/related.json':
    get:
      description: Returns the list of Tags related to the Tag identified by the 'id' in the specified format.
      operationId: getRelatedTagsById
      parameters:
        - description: The id of the tag to look up
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: The maximum number of records to return
          format: int32
          in: query
          name: max
          required: false
          type: integer
        - description: The offset of the records set to return for pagination
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: The name of the property to which sorting will be applied
          in: query
          name: sort
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/Tags'
        '400':
          description: Bad Request
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get related Tags by ID
      tags:
        - tags
  '/resources/tags/{id}/syndicate.json':
    get:
      description: Renders the list of MediaItems associated with the Tag identified by the 'id'.
      parameters:
        - description: The id of the record to look up
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: 'Method used to render an html request. Accepts one: [mv, list, feed]'
          in: query
          name: displayMethod
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/MediaItems'
        '400':
          description: Bad Request
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get MediaItems for Tag
      tags:
        - tags
  '/resources/userMediaLists/{id}.json':
    get:
      description: Get a specific user media list by 'id'.
      operationId: getUserMediaList
      parameters:
        - description: The id of the record to look up
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: 'Method used to render an html request. Accepts one: [mv, list, feed]'
          in: query
          name: displayMethod
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/MediaItems'
        '400':
          description: Invalid ID
          schema:
            type: string
        '500':
          description: Internal Server Error
          schema:
            type: string
      summary: Get UserMediaList by ID
      tags:
        - userMediaLists
definitions:
  AlternateImage:
    properties:
      height:
        format: int32
        type: integer
      id:
        format: int64
        type: integer
      name:
        type: string
      url:
        type: string
      width:
        format: int32
        type: integer
    required:
      - id
      - url
  ApiResponse:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/MediaItem'
        type: array
    required:
      - meta
      - results
      - callback
  Campaign:
    properties:
      contactEmail:
        type: string
      description:
        type: string
      endDate:
        format: date
        type: string
      id:
        format: int64
        type: integer
      mediaItems:
        items:
          $ref: '#/definitions/MediaItem'
        type: array
      name:
        type: string
      source:
        $ref: '#/definitions/Source'
      startDate:
        format: date
        type: string
    required:
      - id
      - name
      - startDate
  Campaigns:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/Campaign'
        type: array
    required:
      - meta
      - callback
      - results
  Collection:
    properties:
      campaigns:
        items:
          $ref: '#/definitions/Campaign'
        type: array
      dateContentAuthored:
        format: date
        type: string
      dateContentPublished:
        format: date
        type: string
      dateContentReviewed:
        format: date
        type: string
      dateContentUpdated:
        format: date
        type: string
      dateSyndicationCaptured:
        format: date
        type: string
      dateSyndicationUpdated:
        format: date
        type: string
      dateSyndicationVisible:
        format: date
        type: string
      description:
        type: string
      externalGuid:
        type: string
      hash:
        type: string
      id:
        format: int64
        type: integer
      language:
        $ref: '#/definitions/Language'
      mediaItems:
        items:
          $ref: '#/definitions/MediaItem'
        type: array
      name:
        type: string
      source:
        $ref: '#/definitions/Source'
      sourceUrl:
        type: string
  EmbedCode:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/Snippet'
        type: array
    required:
      - meta
      - callback
      - results
  Html:
    properties:
      createdBy:
        type: string
      customAttributionUrl:
        type: string
      customPreviewUrl:
        type: string
      customThumbnailUrl:
        type: string
      dateContentAuthored:
        format: date
        type: string
      dateContentPublished:
        format: date
        type: string
      dateContentReviewed:
        format: date
        type: string
      dateContentUpdated:
        format: date
        type: string
      dateSyndicationCaptured:
        format: date
        type: string
      dateSyndicationUpdated:
        format: date
        type: string
      dateSyndicationVisible:
        format: date
        type: string
      description:
        type: string
      extendedAttributes:
        type: object
      externalGuid:
        type: string
      foreignSyndicationAPIUrl:
        type: string
      hash:
        type: string
      id:
        format: int64
        type: integer
      language:
        $ref: '#/definitions/Language'
      mediaType:
        type: string
      name:
        type: string
      source:
        $ref: '#/definitions/Source'
      sourceUrl:
        type: string
      targetUrl:
        type: string
    required:
      - id
      - name
      - mediaType
      - sourceUrl
      - dateSyndicationCaptured
      - dateSyndicationUpdated
      - dateSyndicationVisible
      - language
      - source
      - createdBy
      - foreignSyndicationAPIUrl
  Image:
    properties:
      altText:
        type: string
      createdBy:
        type: string
      customAttributionUrl:
        type: string
      customPreviewUrl:
        type: string
      customThumbnailUrl:
        type: string
      dateContentAuthored:
        format: date
        type: string
      dateContentPublished:
        format: date
        type: string
      dateContentReviewed:
        format: date
        type: string
      dateContentUpdated:
        format: date
        type: string
      dateSyndicationCaptured:
        format: date
        type: string
      dateSyndicationUpdated:
        format: date
        type: string
      dateSyndicationVisible:
        format: date
        type: string
      description:
        type: string
      extendedAttributes:
        type: object
      externalGuid:
        type: string
      foreignSyndicationAPIUrl:
        type: string
      hash:
        type: string
      height:
        format: int32
        type: integer
      id:
        format: int64
        type: integer
      imageFormat:
        type: string
      language:
        $ref: '#/definitions/Language'
      mediaType:
        type: string
      name:
        type: string
      source:
        $ref: '#/definitions/Source'
      sourceUrl:
        type: string
      targetUrl:
        type: string
      width:
        format: int32
        type: integer
    required:
      - id
      - name
      - mediaType
      - sourceUrl
      - dateSyndicationCaptured
      - dateSyndicationUpdated
      - dateSyndicationVisible
      - language
      - source
      - createdBy
      - foreignSyndicationAPIUrl
      - width
      - height
      - imageFormat
      - altText
  Infographic:
    properties:
      altText:
        type: string
      createdBy:
        type: string
      customAttributionUrl:
        type: string
      customPreviewUrl:
        type: string
      customThumbnailUrl:
        type: string
      dateContentAuthored:
        format: date
        type: string
      dateContentPublished:
        format: date
        type: string
      dateContentReviewed:
        format: date
        type: string
      dateContentUpdated:
        format: date
        type: string
      dateSyndicationCaptured:
        format: date
        type: string
      dateSyndicationUpdated:
        format: date
        type: string
      dateSyndicationVisible:
        format: date
        type: string
      description:
        type: string
      extendedAttributes:
        type: object
      externalGuid:
        type: string
      foreignSyndicationAPIUrl:
        type: string
      hash:
        type: string
      height:
        format: int32
        type: integer
      id:
        format: int64
        type: integer
      imageFormat:
        type: string
      language:
        $ref: '#/definitions/Language'
      mediaType:
        type: string
      name:
        type: string
      source:
        $ref: '#/definitions/Source'
      sourceUrl:
        type: string
      targetUrl:
        type: string
      width:
        format: int32
        type: integer
    required:
      - id
      - name
      - mediaType
      - sourceUrl
      - dateSyndicationCaptured
      - dateSyndicationUpdated
      - dateSyndicationVisible
      - language
      - source
      - createdBy
      - foreignSyndicationAPIUrl
      - width
      - height
      - imageFormat
      - altText
  Language:
    properties:
      id:
        format: int64
        type: integer
      isActive:
        type: boolean
      isoCode:
        type: string
      name:
        type: string
    required:
      - id
      - name
      - isoCode
      - isActive
  Languages:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/Language'
        type: array
    required:
      - meta
      - callback
      - results
  Likes:
    properties:
      likes:
        format: int32
        type: integer
    required:
      - likes
  MediaItem:
    properties:
      createdBy:
        type: string
      customAttributionUrl:
        type: string
      customPreviewUrl:
        type: string
      customThumbnailUrl:
        type: string
      dateContentAuthored:
        format: date
        type: string
      dateContentPublished:
        format: date
        type: string
      dateContentReviewed:
        format: date
        type: string
      dateContentUpdated:
        format: date
        type: string
      dateSyndicationCaptured:
        format: date
        type: string
      dateSyndicationUpdated:
        format: date
        type: string
      dateSyndicationVisible:
        format: date
        type: string
      description:
        type: string
      extendedAttributes:
        type: object
      externalGuid:
        type: string
      foreignSyndicationAPIUrl:
        type: string
      hash:
        type: string
      id:
        format: int64
        type: integer
      language:
        $ref: '#/definitions/Language'
      mediaType:
        type: string
      name:
        type: string
      source:
        $ref: '#/definitions/Source'
      sourceUrl:
        type: string
      targetUrl:
        type: string
    required:
      - id
      - name
      - mediaType
      - sourceUrl
      - dateSyndicationCaptured
      - dateSyndicationUpdated
      - dateSyndicationVisible
      - language
      - source
      - createdBy
      - foreignSyndicationAPIUrl
  MediaItems:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/MediaItem'
        type: array
    required:
      - meta
      - callback
      - results
  MediaType:
    properties:
      description:
        type: string
      name:
        type: string
    required:
      - name
      - description
  MediaTypes:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/MediaType'
        type: array
    required:
      - meta
      - callback
      - results
  Message:
    properties:
      errorCode:
        type: string
      errorDetail:
        type: string
      errorMessage:
        type: string
      userMessage:
        type: string
    required:
      - userMessage
  Meta:
    properties:
      messages:
        items:
          $ref: '#/definitions/Message'
        type: array
      pagination:
        $ref: '#/definitions/Pagination'
      status:
        format: int64
        type: integer
    required:
      - status
      - messages
      - pagination
  PDF:
    properties:
      createdBy:
        type: string
      customAttributionUrl:
        type: string
      customPreviewUrl:
        type: string
      customThumbnailUrl:
        type: string
      dateContentAuthored:
        format: date
        type: string
      dateContentPublished:
        format: date
        type: string
      dateContentReviewed:
        format: date
        type: string
      dateContentUpdated:
        format: date
        type: string
      dateSyndicationCaptured:
        format: date
        type: string
      dateSyndicationUpdated:
        format: date
        type: string
      dateSyndicationVisible:
        format: date
        type: string
      description:
        type: string
      extendedAttributes:
        type: object
      externalGuid:
        type: string
      foreignSyndicationAPIUrl:
        type: string
      hash:
        type: string
      id:
        format: int64
        type: integer
      language:
        $ref: '#/definitions/Language'
      mediaType:
        type: string
      name:
        type: string
      source:
        $ref: '#/definitions/Source'
      sourceUrl:
        type: string
      targetUrl:
        type: string
    required:
      - id
      - name
      - mediaType
      - sourceUrl
      - dateSyndicationCaptured
      - dateSyndicationUpdated
      - dateSyndicationVisible
      - language
      - source
      - createdBy
      - foreignSyndicationAPIUrl
  Pagination:
    properties:
      count:
        format: int32
        type: integer
      currentUrl:
        type: string
      max:
        format: int32
        type: integer
      nextUrl:
        type: string
      offset:
        format: int32
        type: integer
      pageNum:
        format: int32
        type: integer
      previousUrl:
        type: string
      sort:
        type: string
      total:
        format: int32
        type: integer
      totalPages:
        format: int32
        type: integer
    required:
      - max
      - offset
      - count
      - total
      - pageNum
      - totalPages
      - sort
      - currentUrl
  Ratings:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/Likes'
        type: array
    required:
      - meta
      - callback
      - results
  Resource:
    properties:
      id:
        format: int64
        type: integer
      name:
        type: string
    required:
      - name
  ResourceList:
    properties:
      items:
        items:
          $ref: '#/definitions/Resource'
        type: array
      mediaType:
        type: string
    required:
      - items
      - mediaType
  ResourceLists:
    properties:
      alternateImages:
        $ref: '#/definitions/ResourceList'
      campaigns:
        $ref: '#/definitions/ResourceList'
      collections:
        $ref: '#/definitions/ResourceList'
      htmls:
        $ref: '#/definitions/ResourceList'
      images:
        $ref: '#/definitions/ResourceList'
      infographics:
        $ref: '#/definitions/ResourceList'
      languages:
        $ref: '#/definitions/ResourceList'
      socialMedias:
        $ref: '#/definitions/ResourceList'
      sources:
        $ref: '#/definitions/ResourceList'
      tagTypes:
        $ref: '#/definitions/ResourceList'
      tags:
        $ref: '#/definitions/ResourceList'
      videos:
        $ref: '#/definitions/ResourceList'
  Resources:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/ResourceLists'
        type: array
    required:
      - meta
      - callback
      - results
  Snippet:
    properties:
      snippet:
        type: string
    required:
      - snippet
  Source:
    properties:
      acronym:
        type: string
      contactEmail:
        type: string
      id:
        format: int64
        type: integer
      largeLogoUrl:
        type: string
      name:
        type: string
      smallLogoUrl:
        type: string
      websiteUrl:
        type: string
    required:
      - id
      - name
      - acronym
      - websiteUrl
  Sources:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/Source'
        type: array
    required:
      - meta
      - callback
      - results
  SyndicatedMediaItem:
    properties:
      content:
        type: string
      contentEncoding:
        type: string
      contentType:
        type: string
      description:
        type: string
      id:
        format: int64
        type: integer
      mediaType:
        type: string
      name:
        type: string
      text:
        type: string
  SyndicatedMediaItems:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/SyndicatedMediaItem'
        type: array
    required:
      - meta
      - callback
      - results
  Tag:
    properties:
      id:
        format: int64
        type: integer
      language:
        $ref: '#/definitions/Language'
      name:
        type: string
      type:
        $ref: '#/definitions/TagType'
    required:
      - id
      - name
      - language
      - type
  TagLanguage:
    properties:
      id:
        format: int64
        type: integer
      isoCode:
        type: string
      name:
        type: string
    required:
      - id
      - name
      - isoCode
  TagLanguages:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/TagLanguage'
        type: array
    required:
      - meta
      - callback
      - results
  TagType:
    properties:
      description:
        type: string
      id:
        format: int64
        type: integer
      name:
        type: string
    required:
      - id
      - name
  TagTypes:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/TagType'
        type: array
    required:
      - meta
      - callback
      - results
  Tags:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          $ref: '#/definitions/Tag'
        type: array
    required:
      - meta
      - callback
      - results
  Video:
    properties:
      createdBy:
        type: string
      customAttributionUrl:
        type: string
      customPreviewUrl:
        type: string
      customThumbnailUrl:
        type: string
      dateContentAuthored:
        format: date
        type: string
      dateContentPublished:
        format: date
        type: string
      dateContentReviewed:
        format: date
        type: string
      dateContentUpdated:
        format: date
        type: string
      dateSyndicationCaptured:
        format: date
        type: string
      dateSyndicationUpdated:
        format: date
        type: string
      dateSyndicationVisible:
        format: date
        type: string
      description:
        type: string
      duration:
        format: int32
        type: integer
      extendedAttributes:
        type: object
      externalGuid:
        type: string
      foreignSyndicationAPIUrl:
        type: string
      hash:
        type: string
      height:
        format: int32
        type: integer
      id:
        format: int64
        type: integer
      language:
        $ref: '#/definitions/Language'
      mediaType:
        type: string
      name:
        type: string
      source:
        $ref: '#/definitions/Source'
      sourceUrl:
        type: string
      targetUrl:
        type: string
      width:
        format: int32
        type: integer
    required:
      - id
      - name
      - mediaType
      - sourceUrl
      - dateSyndicationCaptured
      - dateSyndicationUpdated
      - dateSyndicationVisible
      - language
      - source
      - createdBy
      - foreignSyndicationAPIUrl
      - duration
  YoutubeMetadata:
    properties:
      callback:
        type: string
      meta:
        $ref: '#/definitions/Meta'
      results:
        items:
          type: object
        type: array
    required:
      - meta
      - callback
      - results
