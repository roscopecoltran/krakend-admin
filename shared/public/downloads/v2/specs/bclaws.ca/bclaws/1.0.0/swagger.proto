syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package bclaws;

message GetContentAspectIdRequest {
    // The identifier of the 'aspect' (content group) to search
    enum GetContentAspectIdRequest_AspectId {
        GETCONTENTASPECTIDREQUEST_ASPECTID_COMPLETE = 0;
        GETCONTENTASPECTIDREQUEST_ASPECTID_CORPREG = 1;
        GETCONTENTASPECTIDREQUEST_ASPECTID_BCGAZ1 = 2;
        GETCONTENTASPECTIDREQUEST_ASPECTID_BCGAZ2 = 3;
        GETCONTENTASPECTIDREQUEST_ASPECTID_OIC = 4;
        GETCONTENTASPECTIDREQUEST_ASPECTID_PSL = 5;
        GETCONTENTASPECTIDREQUEST_ASPECTID_ECB = 6;
        GETCONTENTASPECTIDREQUEST_ASPECTID_HSCR = 7;
        GETCONTENTASPECTIDREQUEST_ASPECTID_ARCH_OIC = 8;
    }
    GetContentAspectIdRequest_AspectId aspectId = 1;
}

message GetContentAspectIdCivixDocumentIdRequest {
    // The identifier of the 'aspect' (content group) to search
    enum GetContentAspectIdCivixDocumentIdRequest_AspectId {
        GETCONTENTASPECTIDCIVIXDOCUMENTIDREQUEST_ASPECTID_COMPLETE = 0;
        GETCONTENTASPECTIDCIVIXDOCUMENTIDREQUEST_ASPECTID_CORPREG = 1;
        GETCONTENTASPECTIDCIVIXDOCUMENTIDREQUEST_ASPECTID_BCGAZ1 = 2;
        GETCONTENTASPECTIDCIVIXDOCUMENTIDREQUEST_ASPECTID_BCGAZ2 = 3;
        GETCONTENTASPECTIDCIVIXDOCUMENTIDREQUEST_ASPECTID_OIC = 4;
        GETCONTENTASPECTIDCIVIXDOCUMENTIDREQUEST_ASPECTID_PSL = 5;
        GETCONTENTASPECTIDCIVIXDOCUMENTIDREQUEST_ASPECTID_ECB = 6;
        GETCONTENTASPECTIDCIVIXDOCUMENTIDREQUEST_ASPECTID_HSCR = 7;
        GETCONTENTASPECTIDCIVIXDOCUMENTIDREQUEST_ASPECTID_ARCH_OIC = 8;
    }
    GetContentAspectIdCivixDocumentIdRequest_AspectId aspectId = 1;
    // The document identification code for an index or directory
    string civixDocumentId = 2;
}

message GetDocumentIdAspectIdCivixIndexIdCivixDocumentIdRequest {
    // The identifier of the 'aspect' (content group) to search
    enum GetDocumentIdAspectIdCivixIndexIdCivixDocumentIdRequest_AspectId {
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDREQUEST_ASPECTID_COMPLETE = 0;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDREQUEST_ASPECTID_CORPREG = 1;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDREQUEST_ASPECTID_BCGAZ1 = 2;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDREQUEST_ASPECTID_BCGAZ2 = 3;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDREQUEST_ASPECTID_OIC = 4;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDREQUEST_ASPECTID_PSL = 5;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDREQUEST_ASPECTID_ECB = 6;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDREQUEST_ASPECTID_HSCR = 7;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDREQUEST_ASPECTID_ARCH_OIC = 8;
    }
    GetDocumentIdAspectIdCivixIndexIdCivixDocumentIdRequest_AspectId aspectId = 1;
    // The document identification code for an index or directory
    string civixDocumentId = 2;
    // Index identification code
    string civixIndexId = 3;
}

message GetDocumentIdAspectIdCivixIndexIdCivixDocumentIdSearchSearchStringRequest {
    // The identifier of the 'aspect' (content group) to search
    enum GetDocumentIdAspectIdCivixIndexIdCivixDocumentIdSearchSearchStringRequest_AspectId {
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDSEARCHSEARCHSTRINGREQUEST_ASPECTID_COMPLETE = 0;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDSEARCHSEARCHSTRINGREQUEST_ASPECTID_CORPREG = 1;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDSEARCHSEARCHSTRINGREQUEST_ASPECTID_BCGAZ1 = 2;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDSEARCHSEARCHSTRINGREQUEST_ASPECTID_BCGAZ2 = 3;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDSEARCHSEARCHSTRINGREQUEST_ASPECTID_OIC = 4;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDSEARCHSEARCHSTRINGREQUEST_ASPECTID_PSL = 5;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDSEARCHSEARCHSTRINGREQUEST_ASPECTID_ECB = 6;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDSEARCHSEARCHSTRINGREQUEST_ASPECTID_HSCR = 7;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDSEARCHSEARCHSTRINGREQUEST_ASPECTID_ARCH_OIC = 8;
    }
    GetDocumentIdAspectIdCivixIndexIdCivixDocumentIdSearchSearchStringRequest_AspectId aspectId = 1;
    // The document identification code for an index or directory
    string civixDocumentId = 2;
    // Index identification code
    string civixIndexId = 3;
    // The text to search for within the document
    string searchString = 4;
}

message GetDocumentIdAspectIdCivixIndexIdCivixDocumentIdXmlRequest {
    // The identifier of the 'aspect' (content group) to search
    enum GetDocumentIdAspectIdCivixIndexIdCivixDocumentIdXmlRequest_AspectId {
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDXMLREQUEST_ASPECTID_COMPLETE = 0;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDXMLREQUEST_ASPECTID_CORPREG = 1;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDXMLREQUEST_ASPECTID_BCGAZ1 = 2;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDXMLREQUEST_ASPECTID_BCGAZ2 = 3;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDXMLREQUEST_ASPECTID_OIC = 4;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDXMLREQUEST_ASPECTID_PSL = 5;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDXMLREQUEST_ASPECTID_ECB = 6;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDXMLREQUEST_ASPECTID_HSCR = 7;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDXMLREQUEST_ASPECTID_ARCH_OIC = 8;
    }
    GetDocumentIdAspectIdCivixIndexIdCivixDocumentIdXmlRequest_AspectId aspectId = 1;
    // The document identification code for an index or directory
    string civixDocumentId = 2;
    // Index identification code
    string civixIndexId = 3;
}

message GetDocumentIdAspectIdCivixIndexIdCivixDocumentIdXmlSearchSearchStringRequest {
    // The identifier of the 'aspect' (content group) to search
    enum GetDocumentIdAspectIdCivixIndexIdCivixDocumentIdXmlSearchSearchStringRequest_AspectId {
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDXMLSEARCHSEARCHSTRINGREQUEST_ASPECTID_COMPLETE = 0;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDXMLSEARCHSEARCHSTRINGREQUEST_ASPECTID_CORPREG = 1;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDXMLSEARCHSEARCHSTRINGREQUEST_ASPECTID_BCGAZ1 = 2;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDXMLSEARCHSEARCHSTRINGREQUEST_ASPECTID_BCGAZ2 = 3;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDXMLSEARCHSEARCHSTRINGREQUEST_ASPECTID_OIC = 4;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDXMLSEARCHSEARCHSTRINGREQUEST_ASPECTID_PSL = 5;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDXMLSEARCHSEARCHSTRINGREQUEST_ASPECTID_ECB = 6;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDXMLSEARCHSEARCHSTRINGREQUEST_ASPECTID_HSCR = 7;
        GETDOCUMENTIDASPECTIDCIVIXINDEXIDCIVIXDOCUMENTIDXMLSEARCHSEARCHSTRINGREQUEST_ASPECTID_ARCH_OIC = 8;
    }
    GetDocumentIdAspectIdCivixIndexIdCivixDocumentIdXmlSearchSearchStringRequest_AspectId aspectId = 1;
    // The document identification code for an index or directory
    string civixDocumentId = 2;
    // Index identification code
    string civixIndexId = 3;
    // The text to search for within the document
    string searchString = 4;
}

message GetSearchAspectIdFullsearchRequest {
    // The identifier of the 'aspect' (content group) to search
    enum GetSearchAspectIdFullsearchRequest_AspectId {
        GETSEARCHASPECTIDFULLSEARCHREQUEST_ASPECTID_COMPLETE = 0;
        GETSEARCHASPECTIDFULLSEARCHREQUEST_ASPECTID_CORPREG = 1;
        GETSEARCHASPECTIDFULLSEARCHREQUEST_ASPECTID_BCGAZ1 = 2;
        GETSEARCHASPECTIDFULLSEARCHREQUEST_ASPECTID_BCGAZ2 = 3;
        GETSEARCHASPECTIDFULLSEARCHREQUEST_ASPECTID_OIC = 4;
        GETSEARCHASPECTIDFULLSEARCHREQUEST_ASPECTID_PSL = 5;
        GETSEARCHASPECTIDFULLSEARCHREQUEST_ASPECTID_ECB = 6;
        GETSEARCHASPECTIDFULLSEARCHREQUEST_ASPECTID_HSCR = 7;
        GETSEARCHASPECTIDFULLSEARCHREQUEST_ASPECTID_ARCH_OIC = 8;
    }
    GetSearchAspectIdFullsearchRequest_AspectId aspectId = 1;
    // last hit (end index)
    int32 e = 2;
    // length of fragment snippets (< 200)
    int32 lFrag = 3;
    // number of fragment snippets to return (< 10)
    int32 nFrag = 4;
    // query term
    string q = 5;
    // first hit (start index)
    string s = 6;
}

service BCLawsService {
    // Describes the documents and directories available within a specific 'aspect' (content group) of the BCLaws library
    rpc GetContentAspectId(GetContentAspectIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/civix/content/{aspectId}"
      };
    }
    // Lists the metadata available for the specified index or directory from the BCLaws legislative respository
    rpc GetContentAspectIdCivixDocumentId(GetContentAspectIdCivixDocumentIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/civix/content/{aspectId}/{civixDocumentId}"
      };
    }
    // Retrieves a specific document from the BCLaws legislative repository (HTML format)
    // 
    // The /document API allows you to retrieve actual documents from the BCLaws legislative repository. To retrieve a document from the repository you need the aspect identifier and two other specific pieces of information about the document: the index identifier and the document identifier. These unique identifiers can be retrieved from the /content API.
    rpc GetDocumentIdAspectIdCivixIndexIdCivixDocumentId(GetDocumentIdAspectIdCivixIndexIdCivixDocumentIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/civix/document/id/{aspectId}/{civixIndexId}/{civixDocumentId}"
      };
    }
    // Retrieves a specific document from the BCLaws legislative repository with search text highlighted (HTML format)
    // 
    // The /document API allows you to retrieve actual documents from the BCLaws legislative repository. To retrieve a document from the repository you need the aspect identifier and two other specific pieces of information about the document: the index identifier and the document identifier. These unique identifiers can be retrieved from the /content API.
    rpc GetDocumentIdAspectIdCivixIndexIdCivixDocumentIdSearchSearchString(GetDocumentIdAspectIdCivixIndexIdCivixDocumentIdSearchSearchStringRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/civix/document/id/{aspectId}/{civixIndexId}/{civixDocumentId}/search/{searchString}"
      };
    }
    // Retrieves a specific document from the BCLaws legislative repository (XML format)
    // 
    // The /document API allows you to retrieve actual documents from the BCLaws legislative repository. To retrieve a document from the repository you need the aspect identifier and two other specific pieces of information about the document: the index identifier and the document identifier. These unique identifiers can be retrieved from the /content API.
    rpc GetDocumentIdAspectIdCivixIndexIdCivixDocumentIdXml(GetDocumentIdAspectIdCivixIndexIdCivixDocumentIdXmlRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/civix/document/id/{aspectId}/{civixIndexId}/{civixDocumentId}/xml"
      };
    }
    // Retrieves a specific document from the BCLaws legislative repository with search text highlighted (XML format)
    // 
    // The /document API allows you to retrieve actual documents from the BCLaws legislative repository. To retrieve a document from the repository you need the aspect identifier and two other specific pieces of information about the document: the index identifier and the document identifier. These unique identifiers can be retrieved from the /content API.
    rpc GetDocumentIdAspectIdCivixIndexIdCivixDocumentIdXmlSearchSearchString(GetDocumentIdAspectIdCivixIndexIdCivixDocumentIdXmlSearchSearchStringRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/civix/document/id/{aspectId}/{civixIndexId}/{civixDocumentId}/xml/search/{searchString}"
      };
    }
    // A listing of metadata available for the specified aspect and search term from the BCLaws legislative repository
    rpc GetSearchAspectIdFullsearch(GetSearchAspectIdFullsearchRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/civix/search/{aspectId}/fullsearch"
      };
    }
}
