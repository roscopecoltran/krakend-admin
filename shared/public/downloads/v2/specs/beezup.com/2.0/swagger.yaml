swagger: '2.0'
schemes:
  - https
host: api.beezup.com
basePath: /v2
info:
  contact:
    email: support@beezup.com
  description: |
    # The REST API of BeezUP system
    ## Overview
    The REST APIs provide programmatic access to read and write BeezUP data. 
    Basically, with this API you will be able to do everything like you were with your browser on https://go.beezup.com !

    The main features are:
    - Register and manage your account
    - Create and manage and share your stores with your friends/co-workers.
    - Import your product catalog and schedule the auto importation
    - Search the channels your want to use
    - Configure your channels for your catalogs to export your product information:
        - cost and general settings
        - category and columns mappings
        - your will be able to create and manage your custom column
        - put in place exlusion filters based on simple conditions on your product data
        - override product values
        - get product vision for a channel catalog scope
    - Analyze and optimize your performance of your catalogs on all yours channels with different type of reportings by day, channel, category and by product.
    - Automatize your optimisation by using rules!
    - And of course... Manage your orders harvested from all your marketplaces:
        - Synchronize your orders in an uniformized way
        - Get the available actions and update the order status
    - ...and more!

    ## Authentication credentials
    The public API with the base path **/v2/public** have been put in place to give you an entry point to our system for the user registration, login and lost password. The public API does not require any credentials.
    We give you the some public list of values and public channels for our public commercial web site [www.beezup.com](http://www.beezup.com).

    The user API with the base path **/v2/user** requires a token which is available on this page:
    https://go.beezup.com/Account/MyAccount

    ## Things to keep in mind
    ### API Rate Limits
    - The BeezUP REST API is limited to 100 calls/minute.

    ### Media type
    The default media type for requests and responses is application/json. Where noted, some operations support other content types. If no additional content type is mentioned for a specific operation, then the media type is application/json.

    ### Required content type
    The required and default encoding for the request and responses is UTF8.

    ### Required date time format
    All our date time are formatted in ISO 8601 format: 2014-06-24T16:25:00Z.

    ### Base URL
    The Base URL of the BeezUP API Order Management REST API conforms to the following template.

    https://api.beezup.com

    All URLs returned by the BeezUP API are relative to this base URL, and all requests to the REST API must use this base URL template.

    You can test our API on https://api-docs.beezup.com/swagger-ui\
    You can contact us on [gitter, #BeezUP/API](https://gitter.im/beezUP/API)
  license:
    name: BeezUP
    url: 'http://www.beezup.com'
  title: BeezUP
  version: '2.0'
  x-apisguru-categories:
    - ecommerce
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://api.apis.guru/v2/cache/logo/https_avatars0.githubusercontent.com_u_25665430.png'
  x-origin:
    - format: swagger
      url: 'https://api-docs.beezup.com/swagger.json'
      version: '2.0'
  x-preferred: true
  x-providerName: beezup.com
externalDocs:
  description: Find the documentation for BeezUP's API here
  url: 'https://api-docs.beezup.com/'
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  api_key:
    in: header
    name: Ocp-Apim-Subscription-Key
    type: apiKey
parameters:
  acceptEncodingOptionalParameter:
    collectionFormat: csv
    description: Allows the client to indicate wether it accepts a compressed encoding to reduce traffic size.
    in: header
    items:
      type: string
    name: Accept-Encoding
    required: false
    type: array
  acceptEncodingRequiredParameter:
    collectionFormat: csv
    description: Allows the client to indicate wether it accepts a compressed encoding to reduce traffic size.
    in: header
    items:
      type: string
    name: Accept-Encoding
    required: true
    type: array
  acceptLanguageParameter:
    collectionFormat: csv
    description: Indicates that the client accepts the following languages.
    in: header
    items:
      type: string
    name: Accept-Language
    required: false
    type: array
  accountIdParameter:
    description: The account identifier
    format: int32
    in: path
    name: accountId
    required: true
    type: integer
    x-example: 1001
  beezUPOrderIdParameter:
    description: The BeezUP Order identifier
    format: uuid
    in: path
    name: beezUPOrderId
    required: true
    type: string
    x-example: '00000000000000000000000000000000000000000000000'
  catalogColumnId:
    description: The catalog column identifier
    format: guid
    in: path
    name: columnId
    required: true
    type: string
  changeOrderTypeParameter:
    description: The Order change type
    in: path
    name: changeOrderType
    required: true
    type: string
    x-lov: OrderChangeBusinessOperationType
  channelCatalogIdParameter:
    description: The channel catalog identifier
    format: guid
    in: path
    name: channelCatalogId
    required: true
    type: string
    x-example: 6d6b04de-406b-4539-8e7e-bf3e8da5dfb0
  channelIdParameter:
    description: The channel identifier
    format: guid
    in: path
    name: channelId
    required: true
    type: string
    x-example: 2dc136a7-0d3d-4cc9-a825-a28a42c53e28
  customColumnId:
    description: The custom column identifier
    format: guid
    in: path
    name: columnId
    required: true
    type: string
  executionId:
    description: The execution identifier of you catalog importation
    format: guid
    in: path
    name: executionId
    required: true
    type: string
  exportFormatInQueryGeneralParameter:
    description: The file type of the exportation
    enum:
      - xlsx
      - csv
    in: query
    name: format
    required: true
    type: string
  ifMatchParameter:
    description: |
      ETag value to identify the last known version of requested resource.\
      To ensure that you are making a change on the lastest version of the resource.\
      For more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3
    in: header
    name: If-Match
    required: true
    type: string
  ifNoneMatchParameter:
    description: |
      ETag value to identify the last known version of requested resource.\
      To avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\
      If the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\
      For more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3
    in: header
    name: If-None-Match
    required: false
    type: string
  marketplaceTechnicalCodeParameter:
    description: The marketplace technical code
    in: path
    name: marketplaceTechnicalCode
    required: true
    type: string
    x-example: Amazon
  optimisationActionNameGeneralParameters:
    enum:
      - reenable
      - disable
    format: optimisationActionName
    in: path
    name: actionName
    required: true
    type: string
  pageNumberQueryStrngParameter:
    description: The page number you want to get
    format: int32
    in: query
    minimum: 1
    name: pageNumber
    required: true
    type: integer
    x-example: 1
  pageSizeQueryStrngParameter:
    description: The entry count you want to get
    format: int32
    in: query
    maximum: 100
    minimum: 25
    name: pageSize
    required: true
    type: integer
    x-example: 25
  productIdParameter:
    description: The product identifier
    format: guid
    in: path
    name: productId
    required: true
    type: string
    x-example: 578419df-1bbf-41a6-96fa-862e42182b67
  productSampleIndex:
    description: Index of the product sample. Starting from 0 to 99.
    format: int32
    in: path
    maximum: 99
    minimum: 0
    name: productSampleIndex
    required: true
    type: integer
  reportFilterIdOnlyGeneralParameters:
    description: Your report filter identifier
    format: guid
    in: path
    name: reportFilterId
    required: true
    type: string
  ruleIdOnlyGeneralParameters:
    description: Your rule identifier
    format: guid
    in: path
    name: ruleId
    required: true
    type: string
  storeIdOnlyGeneralParameters:
    description: Your store identifier
    format: guid
    in: path
    name: storeId
    required: true
    type: string
  testModeInQueryParameter:
    default: false
    description: 'If true, the operation will be not be sent to marketplace. But the validation will be taken in account.'
    in: query
    name: testMode
    required: false
    type: boolean
    x-example: false
  userNameInQueryParameter:
    description: Sometimes the user in the e-commerce application is not the same as user associated with the current subscription key. We recommend providing your application's user login.
    in: query
    name: userName
    required: true
    type: string
responses:
  304_NotModified:
    description: The ETag sent in the http header If-None-Match did not change. So you are up to date !
    headers:
      ETag:
        description: |
          ETag value to identify the current version of the resource\
          For more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3
        type: string
      Last-Modified:
        description: |
          Last modification UTC date of the resource\
          For more details go to this link: https://tools.ietf.org/html/rfc7232#section-2.2
        format: date-time
        type: string
  412_PreConditionFailed:
    description: The ETag sent in the http header If-Match did not match with the current version. Please refresh the information related to this resource.
    headers:
      ETag:
        description: |
          The ETag value to identify the resource.\
          For more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3
        type: string
  GeneralError:
    description: Occurs when something goes wrong
    schema:
      $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
  importAlreadyInProgress:
    description: A catalog importation is already in progress!
    schema:
      $ref: '#/definitions/importAlreadyInProgressResponse'
  importStarted:
    description: Catalog importation started
    headers:
      Location:
        description: The location of the new resource to poll
        type: string
        x-example: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c
      Retry-After:
        default: 5
        description: The duration in second to wait before polling this resource
        minimum: 5
        type: integer
        x-example: 5
    schema:
      $ref: '#/definitions/links.Importation_GetImportationMonitoringLink'
  processingResponse:
    description: The marketplace configuration related to this channel catalog is currently in progress. Please retry later.
    headers:
      Retry-After:
        description: Indicate the duration to before the next retry in second.
        format: int32
        type: integer
        x-example: 120
tags:
  - name: Public - Security - Security
    x-displayName: Security
  - description: All our public channels operations
    name: Public - Channels - Public Channels
    x-displayName: Public Channels
  - description: All LOV operations
    name: Public - List of Values - LOV
    x-displayName: LOV
  - description: All LOV operations
    name: User - List of Values - LOV
    x-displayName: LOV
  - description: All global operations
    name: Customer - Global
    x-displayName: Global
  - description: All user account operations
    name: Customer - Account
    x-displayName: Account
  - description: All security operations
    name: Customer - Security
    x-displayName: Security
  - description: All stores operations
    name: Customer - Stores
    x-displayName: Stores
  - description: All store share operations
    name: Customer - Shares
    x-displayName: Shares
  - description: All stores's alerts operations
    name: Customer - Alerts
    x-displayName: Alerts
  - description: All store rights operations
    name: Customer - Rights
    x-displayName: Rights
  - description: All friends operations
    name: Customer - Friends
    x-displayName: Friends
  - description: All contracts and offer operations
    name: Customer - Contracts
    x-displayName: Contracts
  - description: All invoice operations
    name: Customer - Invoices
    x-displayName: Invoices
  - description: All operations related to the Auto importation
    name: Catalogs - Auto
    x-displayName: Auto
  - description: All operations related to global information
    name: Catalogs - Global
    x-displayName: Global
  - description: All operations concerning the importation process
    name: Catalogs - Importation Process
    x-displayName: Importation Process
  - description: All operations related to the catalog information during the importation
    name: Catalogs - Importation Catalog Info
    x-displayName: Importation Catalog Info
  - description: All operation related to the catalog
    name: Catalogs - Catalog
    x-displayName: Catalog
  - description: All global operations
    name: Channels - Channels Global
    x-displayName: Channels Global
  - description: All global operations
    name: Channel Catalogs - Global
    x-displayName: Global
  - description: All settings operations
    name: Channel Catalogs - Settings
    x-displayName: Settings
  - description: All column mapping operations
    name: Channel Catalogs - Column Mappings
    x-displayName: Column Mappings
  - description: All category mapping operations
    name: Channel Catalogs - Category Mappings
    x-displayName: Category Mappings
  - description: All exclusion filters operations
    name: Channel Catalogs - Exclusion Filters
    x-displayName: Exclusion Filters
  - description: All products operations
    name: Channel Catalogs - Products
    x-displayName: Products
  - description: All products overrides operations
    name: Channel Catalogs - Products Overrides
    x-displayName: Products Overrides
  - description: All products optimisation operations
    name: Channel Catalogs - Products Optimisation
    x-displayName: Products Optimisation
  - description: All channel catalog exportation operations
    name: Channel Catalogs - Exportations
    x-displayName: Exportations
  - description: Operations to fetch your marketplace account related to your channel catalogs
    name: Marketplaces - Channel catalogs - Global
    x-displayName: Global
  - description: Operations to fetch your marketplace account's catalog publication history
    name: Marketplaces - Channel catalogs - Publications
    x-displayName: Publications
  - description: Operations to manage your channel catalogs' marketplace settings
    name: Marketplaces - Channel catalogs - Settings
    x-displayName: Settings
  - description: All global operations (cross marketplace)
    name: Marketplaces - Orders - Global
    x-displayName: Global
  - description: All auto transitions operations
    name: Marketplaces - Orders - AutoTransitions
    x-displayName: AutoTransitions
  - description: All Order list operations
    name: Marketplaces - Orders - List
    x-displayName: List
  - description: All operations related to a single Order
    name: Marketplaces - Orders - Order
    x-displayName: Order
  - description: All batch operations on Orders to reduce call rate
    name: Marketplaces - Orders - Batches
    x-displayName: Batches
  - description: All Order report exportation operations
    name: Marketplaces - Orders - Exports
    x-displayName: Exports
  - description: All tracking operations
    name: Analytics - Tracking
    x-displayName: Tracking
  - description: All statitics operations
    name: Analytics - Statistics
    x-displayName: Statistics
  - description: All rules operations. Rules are automatic optimisations based on report filters.
    name: Analytics - Rules
    x-displayName: Rules
  - description: All reports operations
    name: Analytics - Reports
    x-displayName: Reports
  - description: All optmisations operations
    name: Analytics - Optimisations
    x-displayName: Optimisations
paths:
  /public/channels/:
    get:
      description: Use this operation to get the correct link to the channels and to the list of values
      operationId: GetChannelsIndex
      parameters:
        - $ref: '#/parameters/ifNoneMatchParameter'
      responses:
        '200':
          description: Channel list regrouped by country and links to list of values
          schema:
            $ref: '#/definitions/publicChannelIndex'
        '304':
          $ref: '#/responses/304_NotModified'
        default:
          $ref: '#/responses/GeneralError'
      summary: Get public channel index
      tags:
        - Public - Channels - Public Channels
  '/public/channels/{countryIsoCode}':
    get:
      operationId: GetChannels
      parameters:
        - description: |
            The country iso code alpha 3 based on this: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3#Decoding_table \
            To know which country are available you have to use the operation: GetChannelsByCountry
          in: path
          name: countryIsoCode
          required: true
          type: string
        - $ref: '#/parameters/acceptEncodingRequiredParameter'
        - $ref: '#/parameters/ifNoneMatchParameter'
      responses:
        '200':
          description: The channel list for one country
          examples:
            application/json:
              channels:
                - homeUrl: 'http://www.amazon.fr'
                  logoUrl: 'http://beezupcdn.blob.core.windows.net/comparators/Amazon%2520Direct%2520FRA.png'
                  name: Amazon Direct FRA
                  types:
                    - Marketplace
          schema:
            $ref: '#/definitions/channelInfoList'
        '304':
          $ref: '#/responses/304_NotModified'
        '404':
          description: Channel country not found
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      summary: The channel list for one country
      tags:
        - Public - Channels - Public Channels
  /public/lov/:
    get:
      operationId: GetPublicLovIndex
      parameters:
        - $ref: '#/parameters/ifNoneMatchParameter'
      responses:
        '200':
          description: Get the list names
          headers:
            Cache-Control:
              collectionFormat: csv
              description: |
                Indicates the directive around the caching mechanisms.\
                For more information, please go to this link: https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9
              items:
                type: string
              type: array
            ETag:
              description: The ETag corresponding to the LOV Index
              type: string
          schema:
            $ref: '#/definitions/publicLovIndex'
        '304':
          description: The ETag sent in the http header If-None-Match did not change. So you can keep your version.
          headers:
            Cache-Control:
              collectionFormat: csv
              description: |
                Indicates the directive around the caching mechanisms.\
                For more information, please go to this link: https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9
              items:
                type: string
              type: array
            ETag:
              description: The ETag corresponding to the LOV Index
              type: string
        default:
          $ref: '#/responses/GeneralError'
      summary: Get all list names
      tags:
        - Public - List of Values - LOV
  '/public/lov/{listName}':
    get:
      operationId: GetPublicListOfValues
      parameters:
        - description: The list of value name your want to get
          in: path
          name: listName
          required: true
          type: string
        - $ref: '#/parameters/acceptLanguageParameter'
        - $ref: '#/parameters/ifNoneMatchParameter'
      responses:
        '200':
          description: The list of values
          headers:
            Cache-Control:
              collectionFormat: csv
              description: |
                Indicates the directive around the caching mechanisms.\
                For more information, please go to this link: https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9
              items:
                type: string
              type: array
            Content-Language:
              collectionFormat: csv
              description: Indicates the language use in the response
              items:
                type: string
              type: array
            ETag:
              description: The ETag corresponding to the LOV Index
              type: string
          schema:
            $ref: '#/definitions/publicListOfValuesResponse'
        '304':
          description: The ETag sent in the http header If-None-Match did not change. So you can keep your version.
          headers:
            Cache-Control:
              collectionFormat: csv
              description: |
                Indicates the directive around the caching mechanisms.\
                For more information, please go to this link: https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9
              items:
                type: string
              type: array
            ETag:
              description: The ETag corresponding to the LOV Index
              type: string
        '404':
          description: List not found
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      summary: Get the list of values related to this list name
      tags:
        - Public - List of Values - LOV
  /public/security/login:
    post:
      description: User Login - The login will give your tokens
      operationId: Login
      parameters:
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/loginRequest'
      responses:
        '200':
          description: Your tokens
          schema:
            $ref: '#/definitions/apiCredentials'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '403':
          description: Invalid credentials
        '500':
          $ref: '#/responses/GeneralError'
      summary: Login
      tags:
        - Public - Security - Security
  /public/security/lostpassword:
    post:
      description: Lost password - Your password will be regenerated and sent to your email
      operationId: LostPassword
      parameters:
        - description: Your email
          in: body
          name: email
          required: true
          schema:
            $ref: '#/definitions/BeezUP.Common.Email'
      responses:
        '204':
          description: New password sent
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '404':
          description: Email not found
        '500':
          $ref: '#/responses/GeneralError'
        '502':
          description: Problem with SMTP service
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
      summary: Lost password
      tags:
        - Public - Security - Security
  /public/security/register:
    post:
      description: User Registration - Create a new user on BeezUP
      operationId: Register
      parameters:
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/registerRequest'
      responses:
        '204':
          description: Customer registered
        '400':
          description: Email or password is invalid. Disposable email are refused.
        '409':
          description: Email already used
        '500':
          $ref: '#/responses/GeneralError'
      summary: User Registration
      tags:
        - Public - Security - Security
  /user/analytics/tracking/status:
    get:
      description: |
        Your clicks and orders are eventually consistent. \
        This operation indicates you at which date the projections are.
      operationId: GetTrackingStatus
      responses:
        '200':
          description: The tracking status informations
          schema:
            $ref: '#/definitions/trackingStatus'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Display the synchronization status of the clicks and orders
      tags:
        - Analytics - Tracking
  '/user/analytics/{storeId}/optimisations/bycategory/{catalogCategoryId}/{actionName}':
    post:
      description: |
        /!\ WARNING /!\ \
        This operation will reenable or disable products's category for every channel indicated in the body. 
      operationId: OptimiseByCategory
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - description: The category identifier concerned by this optimisation
          format: guid
          in: path
          name: catalogCategoryId
          required: true
          type: string
        - $ref: '#/parameters/optimisationActionNameGeneralParameters'
        - description: The channel identifier list concerned by this optimisation
          in: body
          name: request
          required: false
          schema:
            example:
              - a2d38563-50f0-43f1-be2b-b16e7ec4f007
            items:
              format: guid
              type: string
            maxItems: 1
            minItems: 1
            type: array
            uniqueItems: true
      responses:
        '204':
          description: Products optimisatized
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Optimise products's category
      tags:
        - Analytics - Optimisations
  '/user/analytics/{storeId}/optimisations/bychannel/{channelId}/{actionName}':
    post:
      description: |
        /!\ WARNING /!\ \
        Apply the operation on every product on this channel.
      operationId: OptimiseByChannel
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - description: The channel identifier concerned by this optimisation
          format: guid
          in: path
          name: channelId
          required: true
          type: string
        - $ref: '#/parameters/optimisationActionNameGeneralParameters'
      responses:
        '204':
          description: Products optimisatized
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Optimise products's category
      tags:
        - Analytics - Optimisations
  '/user/analytics/{storeId}/optimisations/byproduct/{productId}/{actionName}':
    post:
      description: |
        /!\ WARNING /!\ \
        This operation will reenable or disable this product for every channel indicated in the body. 
      operationId: OptimiseByProduct
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - description: The product identifier concerned by this optimisation
          format: guid
          in: path
          name: productId
          required: true
          type: string
        - $ref: '#/parameters/optimisationActionNameGeneralParameters'
        - description: The channel identifier list concerned by this optimisation
          in: body
          name: request
          required: false
          schema:
            example:
              - a2d38563-50f0-43f1-be2b-b16e7ec4f007
            items:
              format: guid
              type: string
            maxItems: 1
            minItems: 1
            type: array
            uniqueItems: true
      responses:
        '204':
          description: Product(s) optimisatized
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Optimise products
      tags:
        - Analytics - Optimisations
  '/user/analytics/{storeId}/optimisations/{actionName}':
    post:
      description: |
        /!\ WARNING /!\ \
        Apply the operation on every product related to this request. \
        This operation is used at the bottom of the analytics page result.
      operationId: Optimise
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/optimisationActionNameGeneralParameters'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/optimiseRequest'
      responses:
        '204':
          description: Products optimisatized
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Optimise products
      tags:
        - Analytics - Optimisations
  '/user/analytics/{storeId}/reports/bycategory':
    post:
      description: Get the report by category
      operationId: GetStoreReportByCategory
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/reportByCategoryRequest'
      responses:
        '200':
          description: Your reporting by channel
          schema:
            $ref: '#/definitions/reportByCategoryResponse'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get the report by category
      tags:
        - Analytics - Reports
  '/user/analytics/{storeId}/reports/bycategory/export':
    post:
      description: Export the report by category
      operationId: ExportStoreReportByCategory
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/exportFormatInQueryGeneralParameter'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/reportByCategoryRequest'
      responses:
        '200':
          description: Your reporting by category exported
          examples:
            application/json:
              href: 'https://beezupchannel.blob.core.windows.net/reports/exports/Excel_Report_Channels.xslx'
              method: GET
          headers:
            Location:
              description: |
                To indicate the url of the export file
                Example: https://beezupchannel.blob.core.windows.net/reports/exports/Excel_Report_Categories.xslx
              type: string
          schema:
            $ref: '#/definitions/BeezUP.Common.Link3'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Export the report by category
      tags:
        - Analytics - Reports
  '/user/analytics/{storeId}/reports/bychannel':
    post:
      description: Get the report by channel
      operationId: GetStoreReportByChannel
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/reportByChannelRequest'
      responses:
        '200':
          description: Your reporting by channel
          schema:
            $ref: '#/definitions/reportByChannelResponse'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get the report by channel
      tags:
        - Analytics - Reports
  '/user/analytics/{storeId}/reports/bychannel/export':
    post:
      description: Export the report by channel
      operationId: ExportStoreReportByChannel
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/exportFormatInQueryGeneralParameter'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/reportByChannelRequest'
      responses:
        '200':
          description: Your reporting by channel exported
          examples:
            application/json:
              href: 'https://beezupchannel.blob.core.windows.net/reports/exports/Excel_Report_Channels.xslx'
              method: GET
          headers:
            Location:
              description: |
                To indicate the url of the export file
                Example: https://beezupchannel.blob.core.windows.net/reports/exports/Excel_Report_Channels.xslx
              type: string
          schema:
            $ref: '#/definitions/BeezUP.Common.Link3'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Export the report by channel
      tags:
        - Analytics - Reports
  '/user/analytics/{storeId}/reports/byday':
    post:
      description: Get the report by day
      operationId: GetStoreReportByDay
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/reportByDayRequest'
      responses:
        '200':
          description: Your reporting by day
          schema:
            $ref: '#/definitions/reportByDayResponse'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get the report by day
      tags:
        - Analytics - Reports
  '/user/analytics/{storeId}/reports/byday/export':
    post:
      description: Get the report by day
      operationId: GetStoreReportByDayExport
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/exportFormatInQueryGeneralParameter'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/reportByDayRequest'
      responses:
        '200':
          description: Your reporting by day exported into a file
          examples:
            application/json:
              href: 'https://beezupchannel.blob.core.windows.net/reports/exports/Excel_Report_Days.xslx'
              method: GET
          headers:
            Location:
              description: |
                To indicate the url of the export file
                Example: https://beezupchannel.blob.core.windows.net/reports/exports/Excel_Report_Days.xslx
              type: string
              x-example: 'https://beezupchannel.blob.core.windows.net/reports/exports/Excel_Report_Days.xslx'
          schema:
            $ref: '#/definitions/BeezUP.Common.Link3'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get the report by day
      tags:
        - Analytics - Reports
  '/user/analytics/{storeId}/reports/byproduct':
    post:
      description: Get the report by product
      operationId: GetStoreReportByProduct
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/reportByProductRequest'
      responses:
        '200':
          description: Your reporting by product
          schema:
            $ref: '#/definitions/reportByProductResponse'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get the report by product
      tags:
        - Analytics - Reports
  '/user/analytics/{storeId}/reports/byproduct/export':
    post:
      description: Export the report by product
      operationId: ExportStoreReportByProduct
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/exportFormatInQueryGeneralParameter'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/reportByProductRequest'
      responses:
        '200':
          description: Your reporting by product exported
          examples:
            application/json:
              href: 'https://beezupchannel.blob.core.windows.net/reports/exports/Excel_Report_Channels.xslx'
              method: GET
          headers:
            Location:
              description: |
                To indicate the url of the export file
                Example: https://beezupchannel.blob.core.windows.net/reports/exports/Excel_Report_Products.xslx
              type: string
          schema:
            $ref: '#/definitions/BeezUP.Common.Link3'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Export the report by product
      tags:
        - Analytics - Reports
  '/user/analytics/{storeId}/reports/filters':
    get:
      operationId: GetReportFilters
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
      responses:
        '200':
          description: Report filter list
          schema:
            $ref: '#/definitions/reportFilters'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get report filter list for the given store
      tags:
        - Analytics - Reports
  '/user/analytics/{storeId}/reports/filters/{reportFilterId}':
    delete:
      operationId: DeleteReportFilter
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/reportFilterIdOnlyGeneralParameters'
      responses:
        '204':
          description: Report filter deleted
        '401':
          description: This report filter is used by rule. In the error message you will find the rule identifier.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '404':
          description: Report filter not found
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Delete the report filter
      tags:
        - Analytics - Reports
    get:
      operationId: GetReportFilter
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/reportFilterIdOnlyGeneralParameters'
      responses:
        '200':
          description: Report filter
          schema:
            $ref: '#/definitions/reportFilter'
        '404':
          description: Report filter not found
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get the report filter description
      tags:
        - Analytics - Reports
    put:
      operationId: SaveReportFilter
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/reportFilterIdOnlyGeneralParameters'
        - in: body
          name: reportFilter
          required: true
          schema:
            $ref: '#/definitions/saveReportFilterRequest'
      responses:
        '204':
          description: Report filter saved
        '401':
          description: This report filter is used by rule. In the error message you will find the rule identifier.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '409':
          description: Report filter name already exists
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Save the report filter
      tags:
        - Analytics - Reports
  '/user/analytics/{storeId}/rules':
    get:
      operationId: GetRules
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
      responses:
        '200':
          description: Rule list
          schema:
            $ref: '#/definitions/ruleList'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Gets the list of rules for a given store
      tags:
        - Analytics - Rules
    post:
      operationId: CreateRule
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/createRuleRequest'
      produces: []
      responses:
        '204':
          description: Rule created
        '400':
          description: Period on filter cannot be custom or filter does not exist
        '401':
          description: Store not allowed to use rules. Please upgrade your offer or contact us.
        '403':
          description: Reached the maximum amount of rules allowed for your offer. Please upgrade your offer or contact us.
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Rule creation
      tags:
        - Analytics - Rules
  '/user/analytics/{storeId}/rules/executions':
    get:
      operationId: GetRulesExecutions
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - default: 1
          description: The page to retrieve
          in: query
          minimum: 1
          name: pageNumber
          required: true
          type: integer
        - default: 10
          description: The count of rule history to retrieve
          in: query
          maximum: 100
          minimum: 10
          name: pageSize
          required: true
          type: integer
      responses:
        '200':
          description: Rules executions list
          schema:
            $ref: '#/definitions/ruleExecutionReportings'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get the rules execution history
      tags:
        - Analytics - Rules
  '/user/analytics/{storeId}/rules/run':
    post:
      operationId: RunRules
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
      responses:
        '204':
          description: All rules executed.
        '401':
          description: Store not allowed to use rules. Please upgrade your offer or contact us.
        '404':
          description: Rule not found
        '409':
          description: Rules for this store are currently running. Please try again later.
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Run all rules for this store
      tags:
        - Analytics - Rules
  '/user/analytics/{storeId}/rules/{ruleId}':
    delete:
      operationId: DeleteRule
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/ruleIdOnlyGeneralParameters'
      responses:
        '204':
          description: Rule deleted
        '404':
          description: Rule not found
        '409':
          description: Rules for this store are currently running. Please try again later.
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Delete Rule
      tags:
        - Analytics - Rules
    get:
      operationId: GetRule
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/ruleIdOnlyGeneralParameters'
      responses:
        '200':
          description: Get Rule
          schema:
            $ref: '#/definitions/rule'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Gets the rule
      tags:
        - Analytics - Rules
    patch:
      operationId: UpdateRule
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/ruleIdOnlyGeneralParameters'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/updateRuleRequest'
      responses:
        '204':
          description: Rule updated
        '400':
          description: Filter does not exist or period on filter cannot be custom
        '401':
          description: Store not allowed to use rules. Please upgrade your offer or contact us.
        '404':
          description: Rule not found
        '409':
          description: Rules for this store are currently running. Please try again later.
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Update Rule
      tags:
        - Analytics - Rules
  '/user/analytics/{storeId}/rules/{ruleId}/disable':
    post:
      operationId: DisableRule
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/ruleIdOnlyGeneralParameters'
      responses:
        '204':
          description: Rule disabled
        '404':
          description: Rule not found
        '409':
          description: Rules for this store are currently running. Please try again later.
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Disable rule
      tags:
        - Analytics - Rules
  '/user/analytics/{storeId}/rules/{ruleId}/enable':
    post:
      operationId: EnableRule
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/ruleIdOnlyGeneralParameters'
      responses:
        '204':
          description: Rune enabled
        '404':
          description: Rule not found
        '409':
          description: Rules for this store are currently running. Please try again later.
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Enable rule
      tags:
        - Analytics - Rules
  '/user/analytics/{storeId}/rules/{ruleId}/movedown':
    post:
      operationId: MoveDownRule
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/ruleIdOnlyGeneralParameters'
      responses:
        '204':
          description: Rule moved down
        '400':
          description: Priority can only be changed when more than one rule is defined
        '404':
          description: Rule not found
        '409':
          description: Rules for this store are currently running. Please try again later.
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Move the rule down
      tags:
        - Analytics - Rules
  '/user/analytics/{storeId}/rules/{ruleId}/moveup':
    post:
      operationId: MoveUpRule
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/ruleIdOnlyGeneralParameters'
      responses:
        '204':
          description: Rule moved up
        '400':
          description: Priority can only be changed when more than one rule is defined
        '404':
          description: Rule not found
        '409':
          description: Rules for this store are currently running. Please try again later.
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Move the rule up
      tags:
        - Analytics - Rules
  '/user/analytics/{storeId}/rules/{ruleId}/run':
    post:
      operationId: RunRule
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/ruleIdOnlyGeneralParameters'
      responses:
        '204':
          description: Rule executed
        '400':
          description: Rule is not enabled. Please enable this run before trying to run it.
        '401':
          description: Store not allowed to use rules. Please upgrade your offer or contact us.
        '404':
          description: Rule not found
        '409':
          description: Rules for this store are currently running. Please try again later.
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Run rule
      tags:
        - Analytics - Rules
  '/user/analytics/{storeId}/tracking/clicks':
    get:
      operationId: GetStoreTrackedClicks
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - default: 100
          description: The click's count you want to get
          in: query
          maximum: 100
          minimum: 5
          name: count
          required: false
          type: integer
      responses:
        '200':
          description: Clicks information
          schema:
            $ref: '#/definitions/trackedClicks'
        '404':
          description: Store not found
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get the latest clicks tracked
      tags:
        - Analytics - Tracking
  '/user/analytics/{storeId}/tracking/externalorders':
    get:
      operationId: GetStoreTrackedExternalOrders
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - default: 100
          description: The external order's count you want to get
          in: query
          maximum: 100
          minimum: 5
          name: count
          required: false
          type: integer
      responses:
        '200':
          description: External Order list
          schema:
            $ref: '#/definitions/trackedExternalOrders'
        '404':
          description: Store not found
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get the latest external orders tracked
      tags:
        - Analytics - Tracking
  '/user/analytics/{storeId}/tracking/orders':
    get:
      operationId: GetStoreTrackedOrders
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - default: 100
          description: The order's count you want to get
          in: query
          maximum: 100
          minimum: 5
          name: count
          required: false
          type: integer
      responses:
        '200':
          description: Order list
          schema:
            $ref: '#/definitions/trackedOrders'
        '404':
          description: Store not found
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get the latest orders tracked
      tags:
        - Analytics - Tracking
  '/user/analytics/{storeId}/tracking/status':
    get:
      description: |
        Your clicks and orders are eventually consistent. \
        This operation indicates you at which date the projections are for this store.
      operationId: GetStoreTrackingStatus
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
      responses:
        '200':
          description: Store Tracking Status
          schema:
            $ref: '#/definitions/storeTrackingStatus'
        '404':
          description: Store not found
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get store tracking synchronization status
      tags:
        - Analytics - Tracking
  /user/catalogs/:
    get:
      description: The operation will give you all the operations you will be able to do and all the LOV used in this API.
      operationId: CatalogIndex
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/catalogIndex'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get the index of the catalog API
      tags:
        - Catalogs - Global
  /user/catalogs/beezupColumns:
    get:
      description: 'Get the BeezUP columns, this columns are used for mapping during the manual catalog importation process.'
      operationId: Catalog_GetBeezUPColumns
      responses:
        '200':
          description: The catalog API index
          schema:
            items:
              $ref: '#/definitions/beezUPColumnConfiguration'
            type: array
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get the BeezUP columns
      tags:
        - Catalogs - Global
  '/user/catalogs/{storeId}':
    get:
      description: The operation will give you all the operations you will be able to do on this store for this API.
      operationId: CatalogStoreIndex
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
      responses:
        '200':
          description: The catalog index
          schema:
            $ref: '#/definitions/catalogStoreIndex'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get the index of the catalog API for this store
      tags:
        - Catalogs - Catalog
  '/user/catalogs/{storeId}/autoImport':
    delete:
      operationId: Auto_DeleteAutoImport
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
      responses:
        '204':
          description: Auto import deleted
        '400':
          description: Occurs when the catalog auto import is not configured.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '404':
          description: Occurs when a user tries to work on the wrong store.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Delete Auto Import
      tags:
        - Catalogs - Auto
    get:
      operationId: Auto_GetAutoImportConfiguration
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
      responses:
        '200':
          description: Auto import configuration
          schema:
            $ref: '#/definitions/autoImportConfiguration'
        '404':
          description: StoreId or Auto Import configuration not found
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get the auto import configuration
      tags:
        - Catalogs - Auto
  '/user/catalogs/{storeId}/autoImport/activate':
    post:
      description: 'Once you have made your fist manual catalog importation with success, you can call this operation to import it automatically. No parameter required, we know which one it is.'
      operationId: Importation_ActivateAutoImport
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
      responses:
        '204':
          description: Auto import activated
        '400':
          description: Occurs when the user tries to auto import a local file.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '404':
          description: Occurs when a user tries to work on the wrong store.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '409':
          description: When a catalog importation is already in progress!
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Activate the auto importation of the last successful manual catalog importation.
      tags:
        - Catalogs - Auto
  '/user/catalogs/{storeId}/autoImport/pause':
    post:
      operationId: Auto_PauseAutoImport
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
      responses:
        '204':
          description: Auto import paused
        '400':
          description: Occurs when the catalog auto import is not configured.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '404':
          description: Occurs when a user tries to work on the wrong store.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Pause Auto Import
      tags:
        - Catalogs - Auto
  '/user/catalogs/{storeId}/autoImport/resume':
    post:
      operationId: Auto_ResumeAutoImport
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
      responses:
        '204':
          description: Auto import resumed
        '400':
          description: Occurs when the catalog auto import is not configured.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '404':
          description: Occurs when a user tries to work on the wrong store.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Resume Auto Import
      tags:
        - Catalogs - Auto
  '/user/catalogs/{storeId}/autoImport/scheduling/interval':
    post:
      operationId: Auto_ConfigureAutoImportInterval
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/configureAutoImportIntervalRequest'
      responses:
        '204':
          description: Auto import scheduling interval saved
        '400':
          description: |-

            When the min catalog Auto Import scheduling interval delay has been reached.
            When the max catalog Auto Import count has been reached.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '404':
          description: Occurs when a user tries to work on the wrong store.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Configure Auto Import Interval
      tags:
        - Catalogs - Auto
  '/user/catalogs/{storeId}/autoImport/scheduling/schedules':
    post:
      operationId: Auto_ScheduleAutoImport
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/scheduleAutoImportRequest'
      responses:
        '204':
          description: Auto import scheduling saved
        '400':
          description: |-

            When the max catalog Auto Import count has been reached.
            When the min catalog Auto Import scheduling interval delay has been reached.
            When the max catalog Auto Import count has been reached.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '404':
          description: Occurs when a user tries to work on the wrong store.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Configure Auto Import Schedules
      tags:
        - Catalogs - Auto
  '/user/catalogs/{storeId}/autoImport/start':
    post:
      operationId: Auto_StartAutoImport
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
      responses:
        '202':
          $ref: '#/responses/importStarted'
        '400':
          description: |-
            Occurs when the catalog auto import is not configured.
            When a user column name is duplicate.
            When the catalog column name are duplicate.
            When the BeezUP column have duplicate mapping.
            Occurs when the required beezup column is not mapped to any column.
            Occurs when the category hierarchy is not correctly mapped.
            Occurs when the duplicate strategy on {catalogColumnName} is not found.
            When the user tries to import to ofen the catalog file to download count max limit has been reached.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '404':
          description: Occurs when a user tries to work on the wrong store.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '409':
          description: When a catalog importation is already in progress!
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Start Auto Import Manually
      tags:
        - Catalogs - Auto
  '/user/catalogs/{storeId}/catalogColumns':
    get:
      operationId: Catalog_GetCatalogColumns
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
      responses:
        '200':
          description: Catalog column list
          schema:
            $ref: '#/definitions/catalogColumnList'
        '404':
          description: StoreId not found
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get catalog column list
      tags:
        - Catalogs - Catalog
  '/user/catalogs/{storeId}/catalogColumns/{columnId}/rename':
    post:
      operationId: Catalog_ChangeCatalogColumnUserName
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/catalogColumnId'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/changeUserColumnNameRequest'
      responses:
        '204':
          description: Catalog column user name changed
        '400':
          description: When a user column name is duplicate.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when a catalog column is not found.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '409':
          $ref: '#/responses/importAlreadyInProgress'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Change Catalog Column User Name
      tags:
        - Catalogs - Catalog
  '/user/catalogs/{storeId}/categories':
    get:
      operationId: Catalog_GetCategories
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - collectionFormat: csv
          description: Indicates that the client accepts that the response will be compressed to reduce traffic size.
          in: header
          items:
            type: string
          name: Accept-Encoding
          required: true
          type: array
      responses:
        '200':
          description: Categories
          headers:
            Content-Encoding:
              collectionFormat: csv
              description: Indicates the compression use in the response
              items:
                type: string
              type: array
          schema:
            $ref: '#/definitions/categoryList'
        '404':
          description: StoreId not found
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get category list
      tags:
        - Catalogs - Catalog
  '/user/catalogs/{storeId}/customColumns':
    get:
      operationId: Catalog_GetCustomColumns
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
      responses:
        '200':
          description: Custom column list
          schema:
            $ref: '#/definitions/customColumnList'
        '404':
          description: StoreId not found
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get custom column list
      tags:
        - Catalogs - Catalog
  '/user/catalogs/{storeId}/customColumns/computeExpression':
    post:
      operationId: Catalog_ComputeExpression
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/computeExpressionRequest'
      responses:
        '200':
          description: Compute an expression
          schema:
            type: string
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Compute the expression for this catalog.
      tags:
        - Catalogs - Catalog
  '/user/catalogs/{storeId}/customColumns/{columnId}':
    delete:
      operationId: Catalog_DeleteCustomColumn
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/customColumnId'
      responses:
        '204':
          description: Custom column deleted
        '403':
          description: Occurs when the parent category is not found.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '404':
          description: Occurs when a user tries to work on the wrong store.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '409':
          description: When a catalog importation is already in progress!
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Delete custom column
      tags:
        - Catalogs - Catalog
    put:
      operationId: Catalog_SaveCustomColumn
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/customColumnId'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/createCustomColumnRequest'
      responses:
        '204':
          description: Custom column saved
        '400':
          description: |-
            Occurs when a catalog custom column id is already used by a catalog column.
            When the catalog custom column count limit has been reached.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '404':
          description: Occurs when a user tries to work on the wrong store.
        '409':
          $ref: '#/responses/importAlreadyInProgress'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Create or replace a custom column
      tags:
        - Catalogs - Catalog
  '/user/catalogs/{storeId}/customColumns/{columnId}/expression':
    get:
      operationId: Catalog_GetCustomColumnExpression
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/customColumnId'
      responses:
        '200':
          description: Encrypted expression
          schema:
            example: zlkzjkzjlzlknzklnzlknaklnaklanlknaklan
            type: string
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when a catalog custom column is not found.
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get the encrypted custom column expression
      tags:
        - Catalogs - Catalog
    put:
      operationId: Catalog_ChangeCustomColumnExpression
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/customColumnId'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/changeCustomColumnExpressionRequest'
      responses:
        '204':
          description: Custom column expression saved
        '403':
          description: Occurs when the user try to change a custom column related to a Category. If you want to change this custom column expression you have to make a new manual importation.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when a catalog custom column is not found.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '409':
          $ref: '#/responses/importAlreadyInProgress'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Change custom column expression
      tags:
        - Catalogs - Catalog
  '/user/catalogs/{storeId}/customColumns/{columnId}/rename':
    post:
      operationId: Catalog_ChangeCustomColumnUserName
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/customColumnId'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/changeUserColumnNameRequest'
      responses:
        '204':
          description: Custom column renamed
        '400':
          description: When a user column name is duplicate.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when a catalog column is not found.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '409':
          $ref: '#/responses/importAlreadyInProgress'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Change Custom Column User Name
      tags:
        - Catalogs - Catalog
  '/user/catalogs/{storeId}/importations':
    get:
      operationId: Importation_GetReportings
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
      responses:
        '200':
          description: The last importation reportings
          schema:
            $ref: '#/definitions/importationsResponse'
        '404':
          description: StoreId not found
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get the latest catalog importation reporting
      tags:
        - Catalogs - Importation Process
  '/user/catalogs/{storeId}/importations/start':
    post:
      operationId: Importation_StartManualUpdate
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/startManualImportRequest'
      responses:
        '202':
          $ref: '#/responses/importStarted'
        '400':
          description: |-
            Missing Input configuration in the request
            Occurs when there is a duplicate file number in the input configuration
            Occurs when there is a duplicate file Uri in the input configuration
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '404':
          description: StoreId not found
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '409':
          $ref: '#/responses/importAlreadyInProgress'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Start Manual Import
      tags:
        - Catalogs - Importation Process
  '/user/catalogs/{storeId}/importations/{executionId}':
    get:
      operationId: Importation_GetImportationMonitoring
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/executionId'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/importationMonitoring'
        '404':
          description: 'ExecutionId not found or not yet synchronized. If not synchronized within 30 sec after the import has been started, please contact our support'
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get the importation status
      tags:
        - Catalogs - Importation Process
  '/user/catalogs/{storeId}/importations/{executionId}/cancel':
    post:
      operationId: Importation_Cancel
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/executionId'
      responses:
        '204':
          description: Catalog importation canceled
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '409':
          description: Occurs when this importation is already finished.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Cancel importation
      tags:
        - Catalogs - Importation Process
  '/user/catalogs/{storeId}/importations/{executionId}/catalogColumns':
    get:
      operationId: Importation_GetDetectedCatalogColumns
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/executionId'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/detectedCatalogColumnList'
        '404':
          description: 'ExecutionId not found or not yet synchronized. If not synchronized within 30 sec, please contact our support'
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '409':
          description: Catalog preparation read step is not completed. Please refer to the reporting of this execution for more details.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get detected catalog columns during this importation.
      tags:
        - Catalogs - Importation Catalog Info
  '/user/catalogs/{storeId}/importations/{executionId}/catalogColumns/{columnId}':
    post:
      operationId: Importation_ConfigureCatalogColumn
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/executionId'
        - $ref: '#/parameters/customColumnId'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/configureCatalogColumnCatalogRequest'
      responses:
        '204':
          description: Catalog column configured. This operation has no impact on the current catalog until you commit the catalog importation.
        '400':
          description: |-

            When the catalog column name is not found
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
            Occurs when a catalog column is not found.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '409':
          description: Occurs when this importation is already finished.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Configure catalog column
      tags:
        - Catalogs - Importation Catalog Info
  '/user/catalogs/{storeId}/importations/{executionId}/catalogColumns/{columnId}/ignore':
    post:
      operationId: Importation_IgnoreColumn
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/executionId'
        - $ref: '#/parameters/customColumnId'
      responses:
        '204':
          description: Catalog column ignored. This operation has no impact on the current catalog until you commit the catalog importation.
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
            Occurs when a catalog column is not found.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '409':
          description: Occurs when this importation is already finished.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Ignore Column
      tags:
        - Catalogs - Importation Catalog Info
  '/user/catalogs/{storeId}/importations/{executionId}/catalogColumns/{columnId}/map':
    post:
      operationId: Importation_MapCatalogColumn
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/executionId'
        - $ref: '#/parameters/catalogColumnId'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/mapBeezUPColumnRequest'
      responses:
        '204':
          description: Catalog column mapped. This operation has no impact on the current catalog until you commit the catalog importation.
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
            Occurs when a catalog column is not found.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '409':
          description: Occurs when this importation is already finished.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Map catalog column to a BeezUP column
      tags:
        - Catalogs - Importation Catalog Info
  '/user/catalogs/{storeId}/importations/{executionId}/catalogColumns/{columnId}/reattend':
    post:
      operationId: Importation_ReattendColumn
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/executionId'
        - $ref: '#/parameters/customColumnId'
      responses:
        '204':
          description: Catalog column reattended. This operation has no impact on the current catalog until you commit the catalog importation.
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
            Occurs when a catalog column is not found.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '409':
          description: Occurs when this importation is already finished.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Reattend Column
      tags:
        - Catalogs - Importation Catalog Info
  '/user/catalogs/{storeId}/importations/{executionId}/catalogColumns/{columnId}/unmap':
    post:
      operationId: Importation_UnmapCatalogColumn
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/executionId'
        - $ref: '#/parameters/catalogColumnId'
      responses:
        '204':
          description: Catalog Column unmapped. This operation has no impact on the current catalog until you commit the catalog importation.
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
            Occurs when a catalog column is not found.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '409':
          description: Occurs when this importation is already finished.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Unmap catalog column
      tags:
        - Catalogs - Importation Catalog Info
  '/user/catalogs/{storeId}/importations/{executionId}/commit':
    post:
      operationId: Importation_Commit
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/executionId'
      responses:
        '204':
          description: Catalog importation committed
        '400':
          description: ''
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '409':
          description: Occurs when this importation is already finished.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Commit Importation
      tags:
        - Catalogs - Importation Process
  '/user/catalogs/{storeId}/importations/{executionId}/commitColumns':
    post:
      operationId: Importation_CommitColumns
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/executionId'
      responses:
        '204':
          description: Columns configuration have been committed. This operation has no impact on the current catalog until you commit the catalog importation.
        '400':
          description: |-
            When a user column name is duplicate.
            When the catalog column name are duplicate.
            When the BeezUP column have duplicate mapping.
            Occurs when the required beezup column is not mapped to any column.
            Occurs when the category hierarchy is not correctly mapped.
            When the catalog column count limit has been reached.
            When the catalog custom column count limit has been reached.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
            Occurs when a catalog column is not found.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Commit columns
      tags:
        - Catalogs - Importation Process
  '/user/catalogs/{storeId}/importations/{executionId}/configureRemainingCatalogColumns':
    post:
      description: This operation should be used after you have mapped the required BeezUP Columns
      operationId: Importation_ConfigureRemainingCatalogColumns
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/executionId'
      responses:
        '204':
          description: Remaining catalog columns have been configured. This operation has no impact on the current catalog until you commit the catalog importation.
        '400':
          description: |-
            When a user column name is duplicate.
            When the catalog column name are duplicate.
            When the BeezUP column have duplicate mapping.
            Occurs when the required beezup column is not mapped to any column.
            Occurs when the category hierarchy is not correctly mapped.
            Occurs when the duplicate strategy on {catalogColumnName} is not found.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
            Occurs when a catalog column is not found.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '409':
          description: Occurs when this importation is already finished.
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Configure remaining catalog columns
      tags:
        - Catalogs - Importation Process
  '/user/catalogs/{storeId}/importations/{executionId}/customColumns':
    get:
      operationId: Importation_GetCustomColumns
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/executionId'
      responses:
        '200':
          description: Custom columns of current Importation successfully retrieved
          schema:
            $ref: '#/definitions/importationCustomColumnList'
        '404':
          description: 'ExecutionId not found or not yet synchronized. If not synchronized within 30 sec, please contact our support'
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '409':
          description: Catalog preparation read step is not completed. Please refer to the reporting of this execution for more details.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get custom columns currently place in this importation
      tags:
        - Catalogs - Importation Catalog Info
  '/user/catalogs/{storeId}/importations/{executionId}/customColumns/{columnId}':
    delete:
      operationId: Importation_DeleteCustomColumn
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/executionId'
        - $ref: '#/parameters/customColumnId'
      responses:
        '204':
          description: When the custom column for this importation is correctly deleted
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Delete Custom Column
      tags:
        - Catalogs - Importation Catalog Info
    put:
      operationId: Importation_SaveCustomColumn
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/executionId'
        - $ref: '#/parameters/customColumnId'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/changeCustomColumnRequest'
      responses:
        '204':
          description: Custom column configured. This operation has no impact on the current catalog until you commit the catalog importation.
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '409':
          description: Occurs when this importation is already finished.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Create or replace a custom column
      tags:
        - Catalogs - Importation Catalog Info
  '/user/catalogs/{storeId}/importations/{executionId}/customColumns/{columnId}/expression':
    get:
      operationId: Importation_GetCustomColumnExpression
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/executionId'
        - $ref: '#/parameters/customColumnId'
      responses:
        '200':
          description: Encrypted expression
          schema:
            example: zlkzjkzjlzlknzklnzlknaklnaklanlknaklan
            type: string
        '404':
          description: 'ExecutionId not found or not yet synchronized. If not synchronized within 30 sec, please contact our support'
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '409':
          description: Catalog preparation read step is not completed. Please refer to the reporting of this execution for more details.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get the encrypted custom column expression in this importation
      tags:
        - Catalogs - Importation Catalog Info
  '/user/catalogs/{storeId}/importations/{executionId}/customColumns/{columnId}/map':
    post:
      operationId: Importation_MapCustomColumn
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/executionId'
        - $ref: '#/parameters/customColumnId'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/mapBeezUPColumnRequest'
      responses:
        '204':
          description: Custom column mapped. This operation has no impact on the current catalog until you commit the catalog importation.
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
            Occurs when a catalog column is not found.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '409':
          description: Occurs when this importation is already finished.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Map custom column to a BeezUP column
      tags:
        - Catalogs - Importation Catalog Info
  '/user/catalogs/{storeId}/importations/{executionId}/customColumns/{columnId}/unmap':
    post:
      operationId: Importation_UnmapCustomColumn
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/executionId'
        - $ref: '#/parameters/customColumnId'
      responses:
        '204':
          description: Custom column unmapped. This operation has no impact on the current catalog until you commit the catalog importation.
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
            Occurs when a catalog column is not found.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '409':
          description: Occurs when this importation is already finished.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Unmap custom column
      tags:
        - Catalogs - Importation Catalog Info
  '/user/catalogs/{storeId}/importations/{executionId}/productSamples/{productSampleIndex}':
    get:
      operationId: Importation_GetProductSample
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/executionId'
        - $ref: '#/parameters/productSampleIndex'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/productSample'
        '404':
          description: |-
            ExecutionId not found or not yet synchronized. If not synchronized within 30 sec, please contact our support
                  schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '409':
          description: Catalog preparation read step is not completed. Please refer to the reporting of this execution for more details.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get the product sample related to this importation with all columns (catalog and custom)
      tags:
        - Catalogs - Importation Catalog Info
  '/user/catalogs/{storeId}/importations/{executionId}/productSamples/{productSampleIndex}/customColumns/{columnId}':
    get:
      description: /!\ Use this operation only when you just changed the custom column expression and you want to get a precise the property value. Otherwise use the operation Importation_GetProductSample which will give you all property values
      operationId: Importation_GetProductSampleCustomColumnValue
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/executionId'
        - $ref: '#/parameters/productSampleIndex'
        - $ref: '#/parameters/customColumnId'
      responses:
        '200':
          description: Product sample custom column value
          schema:
            example: A value computed from a expression
            type: string
        '404':
          description: 'ExecutionId not found or not yet synchronized. If not synchronized within 30 sec, please contact our support'
          headers:
            Retry-After:
              default: 5
              description: The duration in second to wait before polling this resource
              minimum: 5
              type: integer
              x-example: 5
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '409':
          description: Catalog preparation read step is not completed. Please refer to the reporting of this execution for more details.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get product sample custom column value related to this importation.
      tags:
        - Catalogs - Importation Catalog Info
  '/user/catalogs/{storeId}/importations/{executionId}/technicalProgression':
    get:
      operationId: Importation_TechnicalProgression
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/executionId'
      responses:
        '200':
          description: When the technical progression is correctly retrived
          schema:
            $ref: '#/definitions/importationTechnicalProgression'
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '409':
          description: Occurs when this importation is already finished.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get technical progression
      tags:
        - Catalogs - Importation Process
  '/user/catalogs/{storeId}/inputConfiguration':
    get:
      operationId: Importation_GetManualUpdateLastInputConfig
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/lastManualImportInputConfiguration'
        '404':
          description: StoreId or Manual Update last configuration not found
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get the last input configuration
      tags:
        - Catalogs - Catalog
  '/user/catalogs/{storeId}/products/list':
    post:
      operationId: Catalog_GetProducts
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/getProductsRequest'
      responses:
        '200':
          description: Product list
          schema:
            $ref: '#/definitions/productList'
        '404':
          description: StoreId not found
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get product list
      tags:
        - Catalogs - Catalog
  '/user/catalogs/{storeId}/products/random':
    get:
      description: We will return 10 products randomly selected with all product values
      operationId: Catalog_GetRandomProducts
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
      responses:
        '200':
          description: Random product list
          schema:
            $ref: '#/definitions/randomProductList'
        '404':
          description: StoreId not found
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get random product list
      tags:
        - Catalogs - Catalog
  '/user/catalogs/{storeId}/products/{productId}':
    get:
      operationId: Catalog_GetProduct
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - description: The product identifier you want to get
          format: guid
          in: path
          name: productId
          required: true
          type: string
      responses:
        '200':
          description: Product
          schema:
            $ref: '#/definitions/product'
        '404':
          description: StoreId not found
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get product
      tags:
        - Catalogs - Catalog
  /user/channelCatalogs/:
    get:
      operationId: GetChannelCatalogs
      parameters:
        - description: The store identifier
          format: guid
          in: query
          name: storeId
          required: false
          type: string
          x-example: 04730364-9826-4ff3-92e4-51fccd02bf10
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/channelCatalogList'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: List all your current channel catalogs
      tags:
        - Channel Catalogs - Global
    post:
      operationId: AddChannelCatalog
      parameters:
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/addChannelCatalogRequest'
      responses:
        '201':
          description: When the channel has been successfully added for this store
          headers:
            Location:
              description: The new location
              type: string
              x-example: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0
            Retry-After:
              default: 5
              description: The duration in second to wait before polling this resource
              minimum: 5
              type: integer
              x-example: 5
          schema:
            $ref: '#/definitions/links.GetChannelCatalogLink'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Add a new channel catalog
      tags:
        - Channel Catalogs - Global
  /user/channelCatalogs/exclusionFilterOperators:
    get:
      operationId: GetChannelCatalogExclusionFilterOperators
      responses:
        '200':
          description: Channel catalog exclusion filter operator list
          schema:
            items:
              $ref: '#/definitions/exclusionFilterOperator'
            type: array
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get channel catalog exclusion filter operators
      tags:
        - Channel Catalogs - Exclusion Filters
  '/user/channelCatalogs/products/{productId}':
    post:
      operationId: GetChannelCatalogProductByChannelCatalog
      parameters:
        - $ref: '#/parameters/productIdParameter'
        - in: body
          name: request
          schema:
            $ref: '#/definitions/channelCatalogProductByChannelCatalogRequest'
      responses:
        '200':
          description: The channel catalog product by channel catalog
          schema:
            $ref: '#/definitions/channelCatalogProductByChannelCatalogResponse'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get channel catalog products related to these channel catalogs
      tags:
        - Channel Catalogs - Products
  '/user/channelCatalogs/{channelCatalogId}':
    delete:
      operationId: DeleteChannelCatalog
      parameters:
        - $ref: '#/parameters/channelCatalogIdParameter'
      responses:
        '204':
          description: Channel catalog deleted
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Delete the channel catalog
      tags:
        - Channel Catalogs - Global
    get:
      operationId: GetChannelCatalog
      parameters:
        - $ref: '#/parameters/channelCatalogIdParameter'
      responses:
        '200':
          description: Channel catalog
          schema:
            $ref: '#/definitions/channelCatalog'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get the channel catalog information
      tags:
        - Channel Catalogs - Global
  '/user/channelCatalogs/{channelCatalogId}/categoryMappings':
    get:
      operationId: GetChannelCatalogCategories
      parameters:
        - $ref: '#/parameters/channelCatalogIdParameter'
      responses:
        '200':
          description: Channel catalog category mappings
          schema:
            $ref: '#/definitions/channelCatalogCategoryMappings'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get channel catalog categories
      tags:
        - Channel Catalogs - Category Mappings
  '/user/channelCatalogs/{channelCatalogId}/categoryMappings/disable':
    post:
      operationId: DisableChannelCatalogCategoryMapping
      parameters:
        - $ref: '#/parameters/channelCatalogIdParameter'
      responses:
        '204':
          description: Channel catalog category mapping disabled
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Disable a channel catalog category mapping
      tags:
        - Channel Catalogs - Category Mappings
  '/user/channelCatalogs/{channelCatalogId}/categoryMappings/map':
    post:
      operationId: MapChannelCatalogCategory
      parameters:
        - $ref: '#/parameters/channelCatalogIdParameter'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/mapCategoryRequest'
      responses:
        '204':
          description: Channel catalog category mapped
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Map channel catalog category
      tags:
        - Channel Catalogs - Category Mappings
  '/user/channelCatalogs/{channelCatalogId}/categoryMappings/reenable':
    post:
      operationId: ReenableChannelCatalogCategoryMapping
      parameters:
        - $ref: '#/parameters/channelCatalogIdParameter'
      responses:
        '204':
          description: Channel catalog category mapping reenabled
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Reenable a channel catalog category mapping
      tags:
        - Channel Catalogs - Category Mappings
  '/user/channelCatalogs/{channelCatalogId}/categoryMappings/unmap':
    post:
      operationId: UnmapChannelCatalogCategory
      parameters:
        - $ref: '#/parameters/channelCatalogIdParameter'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/unmapCategoryRequest'
      responses:
        '204':
          description: Channel catalog category unmapped
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Unmap channel catalog category
      tags:
        - Channel Catalogs - Category Mappings
  '/user/channelCatalogs/{channelCatalogId}/columnMappings':
    put:
      operationId: ConfigureChannelCatalogColumnMappings
      parameters:
        - $ref: '#/parameters/channelCatalogIdParameter'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/channelCatalogColumnMappingList'
      responses:
        '204':
          description: Channel catalog column mappings configured
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Configure channel catalog column mappings
      tags:
        - Channel Catalogs - Column Mappings
  '/user/channelCatalogs/{channelCatalogId}/disable':
    post:
      operationId: DisableChannelCatalog
      parameters:
        - $ref: '#/parameters/channelCatalogIdParameter'
      responses:
        '204':
          description: Channel catalog disabled
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Disable a channel catalog
      tags:
        - Channel Catalogs - Settings
  '/user/channelCatalogs/{channelCatalogId}/enable':
    post:
      operationId: EnableChannelCatalog
      parameters:
        - $ref: '#/parameters/channelCatalogIdParameter'
      responses:
        '204':
          description: Channel catalog enabled
        '402':
          description: You have to upgrade your offer to activate this channel catalog
          schema:
            $ref: '#/definitions/upgradeOfferRequired'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Enable a channel catalog
      tags:
        - Channel Catalogs - Settings
  '/user/channelCatalogs/{channelCatalogId}/exclusionFilters':
    get:
      operationId: GetChannelCatalogExclusionFilters
      parameters:
        - $ref: '#/parameters/channelCatalogIdParameter'
      responses:
        '200':
          description: Channel catalog exclusion filter list
          schema:
            $ref: '#/definitions/exclusionFiltersResponse'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get channel catalog exclusion filters
      tags:
        - Channel Catalogs - Exclusion Filters
    put:
      operationId: ConfigureChannelCatalogExclusionFilters
      parameters:
        - $ref: '#/parameters/channelCatalogIdParameter'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/exclusionFilters'
      responses:
        '204':
          description: Channel catalog exclusion filter list configured
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Configure channel catalog exclusion filters
      tags:
        - Channel Catalogs - Exclusion Filters
  '/user/channelCatalogs/{channelCatalogId}/exportations/cache':
    get:
      operationId: GetChannelCatalogExportationCacheInfo
      parameters:
        - $ref: '#/parameters/channelCatalogIdParameter'
      responses:
        '200':
          description: Channel catalog exportation cache information
          schema:
            $ref: '#/definitions/channelCatalogExportCacheInfoResponse'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get the exportation cache information
      tags:
        - Channel Catalogs - Exportations
  '/user/channelCatalogs/{channelCatalogId}/exportations/cache/clear':
    post:
      operationId: ClearChannelCatalogExportationCache
      parameters:
        - $ref: '#/parameters/channelCatalogIdParameter'
      responses:
        '204':
          description: Channel catalog exportation cache cleared
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Clear the exportation cache
      tags:
        - Channel Catalogs - Exportations
  '/user/channelCatalogs/{channelCatalogId}/exportations/history':
    get:
      operationId: GetChannelCatalogExportationHistory
      parameters:
        - $ref: '#/parameters/channelCatalogIdParameter'
        - $ref: '#/parameters/pageNumberQueryStrngParameter'
        - $ref: '#/parameters/pageSizeQueryStrngParameter'
      responses:
        '200':
          description: Channel catalog exportation history
          schema:
            $ref: '#/definitions/channelCatalogExportationHistory'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get the exportation history
      tags:
        - Channel Catalogs - Exportations
  '/user/channelCatalogs/{channelCatalogId}/products':
    post:
      operationId: GetChannelCatalogProductInfoList
      parameters:
        - $ref: '#/parameters/channelCatalogIdParameter'
        - description: The channel catalog product list filter
          in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/getChannelCatalogProductInfoListRequest'
      responses:
        '200':
          description: Channel catalog product information
          schema:
            $ref: '#/definitions/channelCatalogProductInfoList'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get channel catalog product information list
      tags:
        - Channel Catalogs - Products
  '/user/channelCatalogs/{channelCatalogId}/products/counters':
    get:
      operationId: GetChannelCatalogProductsCounters
      parameters:
        - $ref: '#/parameters/channelCatalogIdParameter'
      responses:
        '200':
          description: Channel catalog products' counters
          schema:
            $ref: '#/definitions/channelCatalogProductsCounters'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get channel catalog products' counters
      tags:
        - Channel Catalogs - Products
  '/user/channelCatalogs/{channelCatalogId}/products/export':
    post:
      operationId: ExportChannelCatalogProductInfoList
      parameters:
        - $ref: '#/parameters/channelCatalogIdParameter'
        - $ref: '#/parameters/exportFormatInQueryGeneralParameter'
        - description: The channel catalog product list filter
          in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/getChannelCatalogProductInfoListRequest'
      responses:
        '200':
          description: Channel catalog product information list exported
          examples:
            application/json:
              href: 'https://beezupchannel.blob.core.windows.net/reports/exports/Excel_Products.xslx'
              method: GET
          headers:
            Location:
              description: |
                To indicate the url of the export file
                Example: https://beezupchannel.blob.core.windows.net/reports/exports/Excel_Products.xslx
              type: string
          schema:
            $ref: '#/definitions/BeezUP.Common.Link3'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Export channel catalog product information list
      tags:
        - Channel Catalogs - Products
  '/user/channelCatalogs/{channelCatalogId}/products/{productId}':
    get:
      operationId: GetChannelCatalogProductInfo
      parameters:
        - $ref: '#/parameters/channelCatalogIdParameter'
        - $ref: '#/parameters/productIdParameter'
      responses:
        '200':
          description: Channel catalog product information
          schema:
            $ref: '#/definitions/channelCatalogProductInfo'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get channel catalog product information
      tags:
        - Channel Catalogs - Products
  '/user/channelCatalogs/{channelCatalogId}/products/{productId}/disable':
    post:
      description: |
        By default a all your catalog products are exposed to the channel.
        You can disable a product by using this operation.
        /!\ In case of massive optimisation we recommand you to use the analytics api
      operationId: DisableChannelCatalogProduct
      parameters:
        - $ref: '#/parameters/channelCatalogIdParameter'
        - $ref: '#/parameters/productIdParameter'
      responses:
        '204':
          description: Channel catalog product disabled
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Disable channel catalog product
      tags:
        - Channel Catalogs - Products Optimisation
  '/user/channelCatalogs/{channelCatalogId}/products/{productId}/overrides':
    put:
      operationId: OverrideChannelCatalogProductValues
      parameters:
        - $ref: '#/parameters/channelCatalogIdParameter'
        - $ref: '#/parameters/productIdParameter'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/productOverrides'
      responses:
        '204':
          description: Channel catalog product overriden
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Override channel catalog product values
      tags:
        - Channel Catalogs - Products Overrides
  '/user/channelCatalogs/{channelCatalogId}/products/{productId}/overrides/{channelColumnId}':
    delete:
      operationId: DeleteChannelCatalogProductValueOverride
      parameters:
        - $ref: '#/parameters/channelCatalogIdParameter'
        - $ref: '#/parameters/productIdParameter'
        - description: The channel column identifier
          format: guid
          in: path
          name: channelColumnId
          required: true
          type: string
          x-example: 8a76f06a-fefc-4c0d-bcfe-b210f1482977
      responses:
        '204':
          description: Channel catalog product value override deleted
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Delete a specific channel catalog product value override
      tags:
        - Channel Catalogs - Products Overrides
  '/user/channelCatalogs/{channelCatalogId}/products/{productId}/reenable':
    post:
      description: |
        By default a all your catalog products are exposed to the channel.
        You can reenable a product by using this operation.
        /!\ In case of massive optimisation we recommand you to use the analytics api
      operationId: ReenableChannelCatalogProduct
      parameters:
        - $ref: '#/parameters/channelCatalogIdParameter'
        - $ref: '#/parameters/productIdParameter'
      responses:
        '204':
          description: Channel catalog product reenabled
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Reenable channel catalog product
      tags:
        - Channel Catalogs - Products Optimisation
  '/user/channelCatalogs/{channelCatalogId}/settings/cost':
    put:
      operationId: ConfigureChannelCatalogCostSettings
      parameters:
        - $ref: '#/parameters/channelCatalogIdParameter'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/costSettings'
      responses:
        '204':
          description: Channel catalog cost settings configured
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Configure channel catalog cost settings
      tags:
        - Channel Catalogs - Settings
  '/user/channelCatalogs/{channelCatalogId}/settings/general':
    put:
      operationId: ConfigureChannelCatalogGeneralSettings
      parameters:
        - $ref: '#/parameters/channelCatalogIdParameter'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/generalSettings'
      responses:
        '204':
          description: Channel catalog general settings configured
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Configure channel catalog general settings
      tags:
        - Channel Catalogs - Settings
  /user/channels/:
    get:
      operationId: GetAvailableChannels
      parameters:
        - description: The store identifier
          format: guid
          in: query
          name: storeId
          required: true
          type: string
          x-example: 04730364-9826-4ff3-92e4-51fccd02bf10
      responses:
        '200':
          description: Available channel list for this store
          schema:
            items:
              $ref: '#/definitions/channelHeader'
            type: array
      security:
        - api_key: []
      summary: List all available channel for this store
      tags:
        - Channels - Channels Global
  '/user/channels/{channelId}':
    get:
      operationId: GetChannelInfo
      parameters:
        - $ref: '#/parameters/channelIdParameter'
      responses:
        '200':
          description: Channel information
          schema:
            $ref: '#/definitions/channelInfo'
      security:
        - api_key: []
      summary: Get channel information
      tags:
        - Channels - Channels Global
  '/user/channels/{channelId}/categories':
    get:
      operationId: GetChannelCategories
      parameters:
        - $ref: '#/parameters/channelIdParameter'
        - collectionFormat: csv
          description: Indicates that the client accepts that the response will be compressed to reduce traffic size.
          in: header
          items:
            type: string
          name: Accept-Encoding
          required: true
          type: array
      responses:
        '200':
          description: Channel categories
          headers:
            Content-Encoding:
              collectionFormat: csv
              description: Indicates the compression use in the response
              items:
                type: string
              type: array
          schema:
            $ref: '#/definitions/channelRootCategory'
      security:
        - api_key: []
      summary: Get channel categories
      tags:
        - Channels - Channels Global
  '/user/channels/{channelId}/columns':
    post:
      operationId: GetChannelColumns
      parameters:
        - $ref: '#/parameters/channelIdParameter'
        - collectionFormat: csv
          description: Indicates that the client accepts that the response will be compressed to reduce traffic size.
          in: header
          items:
            type: string
          name: Accept-Encoding
          required: true
          type: array
        - description: Allow you to filter the channel column identifier list your want to get
          in: body
          name: request
          required: false
          schema:
            items:
              $ref: '#/definitions/BeezUP.Common.ChannelColumnId'
            type: array
      responses:
        '200':
          description: Channel columns
          headers:
            Content-Encoding:
              collectionFormat: csv
              description: Indicates the compression use in the response
              items:
                type: string
              type: array
          schema:
            items:
              $ref: '#/definitions/channelColumn'
            type: array
      security:
        - api_key: []
      summary: Get channel columns
      tags:
        - Channels - Channels Global
  /user/customer/:
    get:
      operationId: GetCustomerIndex
      parameters:
        - $ref: '#/parameters/ifNoneMatchParameter'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/customerIndex'
        '304':
          $ref: '#/responses/304_NotModified'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: The index of all operations and LOV
      tags:
        - Customer - Global
  /user/customer/account:
    get:
      operationId: GetUserAccountInfo
      parameters:
        - $ref: '#/parameters/ifNoneMatchParameter'
      responses:
        '200':
          description: User account information
          schema:
            $ref: '#/definitions/accountInfo'
        '304':
          $ref: '#/responses/304_NotModified'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get user account information
      tags:
        - Customer - Account
  /user/customer/account/activate:
    post:
      operationId: ActivateUserAccount
      parameters:
        - description: The email activation id received by email.
          in: body
          name: emailActivationId
          required: true
          schema:
            format: guid
            type: string
      responses:
        '204':
          description: User account activated.
        '403':
          description: Invalid email activation id
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '409':
          description: User account already activated.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Activate the user account
      tags:
        - Customer - Account
  /user/customer/account/changePassword:
    post:
      operationId: ChangePassword
      parameters:
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/changePasswordRequest'
      responses:
        '204':
          description: Password updated
        '400':
          description: Old password is invalid or the new password does not respect the password's constraints
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Change user password
      tags:
        - Customer - Account
  /user/customer/account/companyInfo:
    put:
      operationId: SaveCompanyInfo
      parameters:
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/companyInfo'
      responses:
        '204':
          description: Company information saved
        '400':
          description: Bad request or invalid VATNumber.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '403':
          description: User not found or unauthorized
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Change company information
      tags:
        - Customer - Account
  /user/customer/account/creditCardInfo:
    get:
      operationId: GetCreditCardInfo
      parameters:
        - $ref: '#/parameters/ifNoneMatchParameter'
      responses:
        '200':
          description: User credit card information
          schema:
            $ref: '#/definitions/creditCardInfoResponse'
        '304':
          $ref: '#/responses/304_NotModified'
        '404':
          description: Credit Card not found
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '503':
          description: We are unable to get your credit card info. This is a temporary state. Please retry later
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get credit card information
      tags:
        - Customer - Account
    put:
      operationId: SaveCreditCardInfo
      parameters:
        - description: Credit card info
          in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/creditCardInfo'
      responses:
        '202':
          description: 'The credit card information has been accepted for processing, the authorization will be processed shortly.'
        '400':
          description: BadRequest
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '502':
          description: Communication problem with our payment service
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Save user credit card info
      tags:
        - Customer - Account
  /user/customer/account/personalInfo:
    put:
      operationId: SavePersonalInfo
      parameters:
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/personalInfo'
      responses:
        '204':
          description: User account information updated
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Save user personal information
      tags:
        - Customer - Account
  /user/customer/account/profilePictureInfo:
    get:
      operationId: GetProfilePictureInfo
      parameters:
        - $ref: '#/parameters/ifNoneMatchParameter'
      responses:
        '200':
          description: Profile picture information
          schema:
            $ref: '#/definitions/profilePictureInfoResponse'
        '304':
          $ref: '#/responses/304_NotModified'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get profile picture information
      tags:
        - Customer - Account
    put:
      operationId: SaveProfilePictureInfo
      parameters:
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/profilePictureInfo'
      responses:
        '204':
          description: User profile picture information saved.
        '400':
          description: BadRequest (Url invalid)
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '413':
          description: The picture size is too large
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '415':
          description: The content type of the image must be an image
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Change user picture information
      tags:
        - Customer - Account
  /user/customer/account/resendEmailActivation:
    post:
      operationId: ResendEmailActivation
      responses:
        '204':
          description: Email activation resent
        '400':
          description: Email activation not sent because of email problem. Ensure that your email is the correct one.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '409':
          description: Email activation not available because user account already activated.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '429':
          description: 'Email activation sent recently, must retry later. (One per hour)'
          headers:
            Retry-After:
              default: 60
              description: The duration in second to wait before making another request
              type: integer
              x-example: 60
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '502':
          description: Email activate send failed because of our email service. Ensure that your email is the correct one otherwise please contact our support if the problem persists.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Resend email activation
      tags:
        - Customer - Account
  /user/customer/billingPeriods:
    get:
      operationId: GetBillingPeriods
      parameters:
        - $ref: '#/parameters/ifNoneMatchParameter'
      responses:
        '200':
          description: Get the billing periods conditions
          schema:
            $ref: '#/definitions/billingPeriodList'
        '304':
          $ref: '#/responses/304_NotModified'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get billing periods conditions
      tags:
        - Customer - Contracts
  /user/customer/contracts:
    get:
      operationId: GetContracts
      parameters:
        - $ref: '#/parameters/ifNoneMatchParameter'
      responses:
        '200':
          description: Contract list
          schema:
            $ref: '#/definitions/contracts'
        '304':
          $ref: '#/responses/304_NotModified'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get contract list
      tags:
        - Customer - Contracts
    post:
      description: |
        Now you are ready to create your contract. Before that, please ensure that you check the offer with the same request parameterts. /offers
      operationId: CreateContract
      parameters:
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/createContract'
      responses:
        '200':
          description: New contract has been created. Some warnings can be present in response.
          schema:
            $ref: '#/definitions/createContractResponse'
        '400':
          description: 'Bad request. (Invalid billing period, invalid offer, etc.)'
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '403':
          description: The contract is not modifiable or the coupon offer has been already used
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Create a new contract
      tags:
        - Customer - Contracts
  /user/customer/contracts/current/disableAutoRenewal:
    post:
      description: By default your contract are automatically renew. By calling this operation you can disable the auto renewal.
      operationId: TerminateCurrentContract
      parameters:
        - description: Indicate the termination reason
          in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/terminateContract'
      responses:
        '204':
          description: Your current contract termination has been scheduled
        '400':
          description: Invalid reason type
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '404':
          description: No current contract
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Schedule termination of your current contract at the end of the commitment.
      tags:
        - Customer - Contracts
  /user/customer/contracts/current/reenableAutoRenewal:
    post:
      description: By calling this operation you can re-enable the auto renewal.
      operationId: ReactivateCurrentContract
      responses:
        '204':
          description: Your current contract has been resumed
        '404':
          description: No current contract
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Reactivate your terminated contract.
      tags:
        - Customer - Contracts
  /user/customer/contracts/next:
    delete:
      operationId: DeleteNextContract
      responses:
        '204':
          description: Next contract has been deleted
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Delete your next contract
      tags:
        - Customer - Contracts
  '/user/customer/friends/{userId}':
    get:
      operationId: GetFriendInfo
      parameters:
        - description: Your friend user id
          format: guid
          in: path
          name: userId
          required: true
          type: string
        - $ref: '#/parameters/ifNoneMatchParameter'
      responses:
        '200':
          description: Get friend info
          schema:
            $ref: '#/definitions/userFriendInfo'
        '304':
          $ref: '#/responses/304_NotModified'
        '404':
          description: User not found
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get friend information
      tags:
        - Customer - Friends
  /user/customer/invoices:
    get:
      operationId: GetInvoices
      parameters:
        - $ref: '#/parameters/ifNoneMatchParameter'
      responses:
        '200':
          description: Get all invoices of a customer
          schema:
            $ref: '#/definitions/invoiceList'
        '304':
          $ref: '#/responses/304_NotModified'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get all your invoices
      tags:
        - Customer - Invoices
  /user/customer/offers:
    get:
      operationId: GetStandardOffers
      parameters:
        - $ref: '#/parameters/ifNoneMatchParameter'
      responses:
        '200':
          description: Get all standard offers
          schema:
            $ref: '#/definitions/standardOffers'
        '304':
          $ref: '#/responses/304_NotModified'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get all standard offers
      tags:
        - Customer - Contracts
    post:
      description: |
        Get the offer pricing then you can create your contract with the same request parameters. /v2/user/customer/contracts
      operationId: GetOffer
      parameters:
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/offerRequest'
      responses:
        '200':
          description: Get the offer proposal considering your current contract
          schema:
            $ref: '#/definitions/offer'
        '400':
          description: 'Bad request. (Invalid billing period, invalid offer, etc.). You cannot get a pricing for a free offer.'
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '403':
          description: You current contract is not modifiable. Please choose another offer.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get offer pricing
      tags:
        - Customer - Contracts
  /user/customer/security/logout:
    post:
      description: Log out the current user from go2
      operationId: Logout
      responses:
        '204':
          description: User logout
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Log out the current user from go2
      tags:
        - Customer - Security
  /user/customer/stores:
    get:
      operationId: GetStores
      parameters:
        - $ref: '#/parameters/ifNoneMatchParameter'
      responses:
        '200':
          description: Store list
          schema:
            $ref: '#/definitions/storeList'
        '304':
          $ref: '#/responses/304_NotModified'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get store list
      tags:
        - Customer - Stores
    post:
      operationId: CreateStore
      parameters:
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/createStoreRequest'
      responses:
        '201':
          description: The store has been created successfully. The http header Location contains the new resource url. The body contains the link to the new resource.
          schema:
            $ref: '#/definitions/links.getStoreLink'
        '402':
          description: The maximum amount of store has been reached. Please upgrade your contract.
          schema:
            $ref: '#/definitions/errorResponseMessagePaymentRequired'
        '409':
          description: The customer has a store with the same name
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Create a new store
      tags:
        - Customer - Stores
  '/user/customer/stores/{storeId}':
    delete:
      operationId: DeleteStore
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
      responses:
        '204':
          description: Store deleted
        '404':
          description: Store not found or customer not the owner
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Delete a store
      tags:
        - Customer - Stores
    get:
      operationId: GetStore
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/ifNoneMatchParameter'
      responses:
        '200':
          description: The store information
          schema:
            $ref: '#/definitions/store'
        '304':
          $ref: '#/responses/304_NotModified'
        '404':
          description: Store not found or not authorized
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get store's information
      tags:
        - Customer - Stores
    patch:
      description: |
        Update some store's information. FYI, you cannot change the country.
      operationId: UpdateStore
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/updateStoreRequest'
      responses:
        '204':
          description: Store updated
        '404':
          description: Store not found or customer not the owner
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '409':
          description: The store name already used
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Update some store's information.
      tags:
        - Customer - Stores
  '/user/customer/stores/{storeId}/alerts':
    get:
      operationId: GetStoreAlerts
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/ifNoneMatchParameter'
      responses:
        '200':
          description: User account alerts information
          schema:
            $ref: '#/definitions/storeAlerts'
        '304':
          $ref: '#/responses/304_NotModified'
        '404':
          description: Store not found or not authorized
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get store's alerts
      tags:
        - Customer - Alerts
    post:
      description: 'You just have to send the alert you want to update, does not need all alerts. (PARTIAL UPDATE ACCEPTED)'
      operationId: SaveStoreAlerts
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/saveStoreAlertsRequest'
      responses:
        '204':
          description: Store alerts saved
        '400':
          description: BadRequest
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '404':
          description: Store not found or not authorized
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Save store alerts
      tags:
        - Customer - Alerts
  '/user/customer/stores/{storeId}/rights':
    get:
      operationId: GetRights
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
      responses:
        '200':
          description: The store's rights
          schema:
            items:
              $ref: '#/definitions/functionalityRightInfo'
            type: array
        '404':
          description: Store not found or not authorized
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get store's rights
      tags:
        - Customer - Rights
  '/user/customer/stores/{storeId}/shares':
    get:
      operationId: GetStoreShares
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - $ref: '#/parameters/ifNoneMatchParameter'
      responses:
        '200':
          description: The sharing list of the store
          schema:
            $ref: '#/definitions/storeShares'
        '304':
          $ref: '#/responses/304_NotModified'
        '404':
          description: Store not found or customer not the owner
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get shares related to this store
      tags:
        - Customer - Shares
    post:
      operationId: ShareStore
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - description: Your friend's email
          in: body
          name: email
          required: true
          schema:
            $ref: '#/definitions/friendEmail'
      responses:
        '204':
          description: Store shared
        '402':
          description: Free offer is not allowed to share store.
          schema:
            $ref: '#/definitions/errorResponseMessagePaymentRequired'
        '404':
          description: Only the owner of the store can make this operation or user not found
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Share a store to another user
      tags:
        - Customer - Shares
  '/user/customer/stores/{storeId}/shares/{userId}':
    delete:
      operationId: DeleteStoreShare
      parameters:
        - $ref: '#/parameters/storeIdOnlyGeneralParameters'
        - description: The friend user id
          format: guid
          in: path
          name: userId
          required: true
          type: string
      responses:
        '204':
          description: Share deleted
        '404':
          description: Store not found or customer not the owner
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Delete a share of a store to another user
      tags:
        - Customer - Shares
  /user/lov/:
    get:
      operationId: GetUserLovIndex
      responses:
        '200':
          description: Get the list names
          headers:
            Cache-Control:
              collectionFormat: csv
              description: |
                Indicates the directive around the caching mechanisms.\
                For more information, please go to this link: https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9
              items:
                type: string
              type: array
            ETag:
              description: The ETag corresponding to the LOV Index
              type: string
          schema:
            $ref: '#/definitions/userLovIndex'
        '304':
          description: The ETag sent in the http header If-None-Match did not change. So you can keep your version.
          headers:
            Cache-Control:
              collectionFormat: csv
              description: |
                Indicates the directive around the caching mechanisms.\
                For more information, please go to this link: https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9
              items:
                type: string
              type: array
            ETag:
              description: The ETag corresponding to the LOV Index
              type: string
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get all list names
      tags:
        - User - List of Values - LOV
  '/user/lov/{listName}':
    get:
      operationId: GetUserListOfValues
      parameters:
        - description: The list of value name your want to get
          in: path
          name: listName
          required: true
          type: string
        - $ref: '#/parameters/acceptLanguageParameter'
        - $ref: '#/parameters/ifNoneMatchParameter'
      responses:
        '200':
          description: The list of values
          headers:
            Cache-Control:
              collectionFormat: csv
              description: |
                Indicates the directive around the caching mechanisms.\
                For more information, please go to this link: https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9
              items:
                type: string
              type: array
            Content-Language:
              collectionFormat: csv
              description: Indicates the language use in the response
              items:
                type: string
              type: array
            ETag:
              description: The ETag corresponding to the LOV Index
              type: string
          schema:
            $ref: '#/definitions/userListOfValuesResponse'
        '304':
          description: The ETag sent in the http header If-None-Match did not change. So you can keep your version.
          headers:
            Cache-Control:
              collectionFormat: csv
              description: |
                Indicates the directive around the caching mechanisms.\
                For more information, please go to this link: https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9
              items:
                type: string
              type: array
            ETag:
              description: The ETag corresponding to the LOV Index
              type: string
        '404':
          description: List not found
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get the list of values related to this list name
      tags:
        - User - List of Values - LOV
  /user/marketplaces/channelcatalogs/:
    get:
      operationId: GetMarketplaceAccountStores
      responses:
        '200':
          description: Marketplace channel catalog list
          schema:
            $ref: '#/definitions/marketplaceChannelCatalogList'
      security:
        - api_key: []
      summary: Get  you marketplace channel catalog list
      tags:
        - Marketplaces - Channel catalogs - Global
  '/user/marketplaces/channelcatalogs/publications/{marketplaceTechnicalCode}/{accountId}/history':
    get:
      deprecated: false
      operationId: GetPublications
      parameters:
        - description: Marketplace Technical Code to query (required)
          in: path
          name: marketplaceTechnicalCode
          required: true
          type: string
          x-lov: MarketplaceTechnicalCode
        - description: Account Id to query (required)
          format: int32
          in: path
          name: accountId
          required: true
          type: integer
        - description: Channel Catalog Id by which to filter (optional)
          format: guid
          in: query
          name: channelCatalogId
          required: false
          type: string
        - default: 10
          description: 'Amount of entries to fetch (optional, default set to 10)'
          format: int32
          in: query
          maximum: 100
          minimum: 10
          name: count
          required: false
          type: integer
        - description: Publication types by which to filter (optional)
          in: query
          items:
            enum:
              - PublishProducts
              - PublishOffers
              - Unpublish
            format: publicationType
            type: string
          name: publicationTypes
          required: false
          type: array
          x-lov: MarketplacePublicationType
      responses:
        '200':
          description: Successfully fetched channel catalog settings
          schema:
            $ref: '#/definitions/accountPublications'
        '400':
          description: 'Feature only available for Amazon, Ebay, CDiscount and Mirakl marketplaces'
        '404':
          description: 'Requested account, marketplace or authorization for current user not found'
        '503':
          $ref: '#/responses/processingResponse'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: 'Fetch the publication history for an account, sorted by descending start date'
      tags:
        - Marketplaces - Channel catalogs - Publications
  '/user/marketplaces/channelcatalogs/{channelCatalogId}/properties':
    get:
      operationId: GetChannelCatalogMarketplaceProperties
      parameters:
        - format: guid
          in: path
          name: channelCatalogId
          required: true
          type: string
        - format: uri
          in: query
          name: redirectionPageUrl
          required: true
          type: string
      responses:
        '200':
          description: Successfully fetched channel catalog properties
          schema:
            $ref: '#/definitions/channelCatalogMarketplaceProperties'
        '404':
          description: Requested channel catalog or authorization for current user not found
        '503':
          $ref: '#/responses/processingResponse'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get the marketplace properties for a channel catalog
      tags:
        - Marketplaces - Channel catalogs - Settings
  '/user/marketplaces/channelcatalogs/{channelCatalogId}/settings':
    get:
      operationId: GetChannelCatalogMarketplaceSettings
      parameters:
        - description: Channel Catalog Id to query (required)
          format: guid
          in: path
          name: channelCatalogId
          required: true
          type: string
      responses:
        '200':
          description: Successfully fetched channel catalog settings
          schema:
            $ref: '#/definitions/channelCatalogMarketplaceSettings'
        '404':
          description: Requested channel catalog or authorization for current user not found
        '503':
          $ref: '#/responses/processingResponse'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get the marketplace settings for a channel catalog
      tags:
        - Marketplaces - Channel catalogs - Settings
    post:
      description: |
        Allow you to configure your marketplace settings. 
        Partial update accepted.
      operationId: SetChannelCatalogMarketplaceSettings
      parameters:
        - description: Channel Catalog Id to query
          format: guid
          in: path
          name: channelCatalogId
          required: true
          type: string
        - description: Settings to save
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/setChannelCatalogMarketplaceSettingsRequest'
      responses:
        '204':
          description: Successfully saved channel catalog settings
        '400':
          description: One or more channel catalog property keys or values are invalid for requested channel catalog. See response for details.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '404':
          description: Requested channel catalog or authorization for current user not found
        '503':
          $ref: '#/responses/processingResponse'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Save new marketplace settings for a channel catalog
      tags:
        - Marketplaces - Channel catalogs - Settings
  /user/marketplaces/orders/:
    get:
      deprecated: false
      operationId: GetOrderIndex
      parameters:
        - $ref: '#/parameters/ifNoneMatchParameter'
      responses:
        '200':
          description: Order index
          schema:
            $ref: '#/definitions/orderIndex'
        '304':
          $ref: '#/responses/304_NotModified'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get all actions you can do on the order API
      tags:
        - Marketplaces - Orders - Global
      x-tagGroups: Martketplaces Orders
  /user/marketplaces/orders/automaticTransitions:
    get:
      deprecated: false
      operationId: GetAutomaticTransitions
      parameters:
        - $ref: '#/parameters/ifNoneMatchParameter'
      responses:
        '200':
          description: Successfully fetched list of configured automatic Order status transitions
          schema:
            $ref: '#/definitions/automaticTransitionInfoList'
        '304':
          $ref: '#/responses/304_NotModified'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get list of configured automatic Order status transitions
      tags:
        - Marketplaces - Orders - AutoTransitions
    post:
      deprecated: false
      operationId: ConfigureAutomaticTransitions
      parameters:
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/configureAutomaticTransitionRequest'
      responses:
        '204':
          description: Successfully confirugred new or existing automatic Order status transition
        '400':
          description: Requested automatic Order status transition could not be configured
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Configure new or existing automatic Order status transition
      tags:
        - Marketplaces - Orders - AutoTransitions
  '/user/marketplaces/orders/batches/changeOrders/{changeOrderType}':
    post:
      deprecated: false
      description: The purpose of this operation is to reduce the amount of request to the API.
      operationId: ChangeOrderList
      parameters:
        - $ref: '#/parameters/changeOrderTypeParameter'
        - $ref: '#/parameters/userNameInQueryParameter'
        - $ref: '#/parameters/testModeInQueryParameter'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/changeOrderListRequest'
      responses:
        '202':
          description: Succesfully received and processed batched operations. Please check response to see the status per operation.
          schema:
            $ref: '#/definitions/batchOrderOperationResponse'
        '400':
          description: Requested too many batch operations
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: 'Send a batch of operations to change your marketplace Order information (accept, ship, etc.)'
      tags:
        - Marketplaces - Orders - Batches
  /user/marketplaces/orders/batches/clearMerchantOrderInfos:
    post:
      deprecated: false
      description: The purpose of this operation is to reduce the amount of request to the API.
      operationId: ClearMerchantOrderInfoList
      parameters:
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/clearMerchantOrderInfoListRequest'
      responses:
        '202':
          description: Succesfully received and processed batched operations. Please check response to see the status per operation.
          schema:
            $ref: '#/definitions/batchOrderOperationResponse'
        '400':
          description: Requested too many batch operations
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Send a batch of operations to clear an Order's merchant information (max 100 items per call)
      tags:
        - Marketplaces - Orders - Batches
  /user/marketplaces/orders/batches/setMerchantOrderInfos:
    post:
      deprecated: false
      description: The purpose of this operation is to reduce the amount of request to the API.
      operationId: SetMerchantOrderInfoList
      parameters:
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/setMerchantOrderInfoListRequest'
      responses:
        '202':
          description: Succesfully received and processed batched operations. Please check response to see the status per operation.
          schema:
            $ref: '#/definitions/batchOrderOperationResponse'
        '400':
          description: Requested too many batch operations
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Send a batch of operations to set an Order's merchant information  (max 100 items per call)
      tags:
        - Marketplaces - Orders - Batches
  /user/marketplaces/orders/exportations:
    get:
      deprecated: false
      operationId: GetOrderExportations
      parameters:
        - $ref: '#/parameters/pageNumberQueryStrngParameter'
        - $ref: '#/parameters/pageSizeQueryStrngParameter'
        - description: The store identifier to regroup the order exportations
          format: guid
          in: query
          name: storeId
          required: true
          type: string
        - $ref: '#/parameters/ifNoneMatchParameter'
      responses:
        '200':
          description: Successfully fetched the list of Order report exportations
          schema:
            $ref: '#/definitions/orderExportations'
        '304':
          $ref: '#/responses/304_NotModified'
        '400':
          description: Could not process request for given parameters values. Please check error message for more details.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get a paginated list of Order report exportations
      tags:
        - Marketplaces - Orders - Exports
    post:
      deprecated: false
      description: A new file will be generated containing a summary of all the Orders matching the requested filter settings.
      operationId: ExportOrders
      parameters:
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/exportOrderListRequest'
      responses:
        '202':
          description: Successfully requested new Order report exportation generation
        '400':
          description: Could not process request for given parameters values. Please check error message for more details.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '404':
          description: No orders have been found for this request.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Request a new Order report exportation to be generated
      tags:
        - Marketplaces - Orders - Exports
  /user/marketplaces/orders/harvest:
    post:
      deprecated: false
      operationId: HarvestAll
      responses:
        '202':
          description: Successfully sent harvest request to all marketplaces
          headers:
            Retry-After:
              description: Indicates the duration in seconds to wait to be able to make this request again
              type: integer
        '409':
          description: Failed to send harvest request because allowed rate limits have been exceeded
          headers:
            Retry-After:
              description: Indicates the duration in seconds to wait to be able to make this request again
              type: integer
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Send harvest request to all your marketplaces
      tags:
        - Marketplaces - Orders - Global
  /user/marketplaces/orders/list/full:
    post:
      deprecated: false
      description: |
        The purpose of this operation is to reduce the amount of request to the API.\
        \
        Previous implmentation of this feature only returned a partial (light) version of the Orders. The purpose of this API is to reduce the number of incoming requests by returning the complete (full) Order and Order Item(s) properties.
      operationId: GetOrderListFull
      parameters:
        - collectionFormat: csv
          description: Allows the client to indicate wether it accepts a compressed encoding to reduce traffic size
          in: header
          items:
            type: string
          name: Accept-Encoding
          required: true
          type: array
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/orderListRequest'
      responses:
        '200':
          description: Successfully fetched the full list of Orders
          schema:
            $ref: '#/definitions/orderListFull'
        '400':
          description: Could not process request for given parameters values. Please check error message for more details.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get a paginated list of all Orders with all Order and Order Item(s) properties
      tags:
        - Marketplaces - Orders - List
  /user/marketplaces/orders/list/light:
    post:
      deprecated: false
      operationId: GetOrderListLight
      parameters:
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/orderListRequest'
      responses:
        '200':
          description: Successfully fetched the list of Orders
          schema:
            $ref: '#/definitions/orderListLight'
        '400':
          description: Could not process request for given parameters values. Please check error message for more details.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get a paginated list of all Orders without details
      tags:
        - Marketplaces - Orders - List
  /user/marketplaces/orders/status:
    get:
      deprecated: false
      operationId: GetMarketplaceAccountsSynchronization
      parameters:
        - $ref: '#/parameters/ifNoneMatchParameter'
      responses:
        '200':
          description: Successfully fetched current synchronization status
          schema:
            $ref: '#/definitions/accountSynchronizationList'
        '304':
          $ref: '#/responses/304_NotModified'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get current synchronization status between your marketplaces and BeezUP accounts
      tags:
        - Marketplaces - Orders - Global
      x-tagGroups: Martketplaces Orders
  '/user/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}':
    get:
      deprecated: false
      operationId: GetOrder
      parameters:
        - $ref: '#/parameters/marketplaceTechnicalCodeParameter'
        - $ref: '#/parameters/accountIdParameter'
        - $ref: '#/parameters/beezUPOrderIdParameter'
        - $ref: '#/parameters/ifNoneMatchParameter'
      responses:
        '200':
          description: Successfully fetched Order and Order Item(s) properties
          headers:
            ETag:
              description: |
                ETag value to identify the current version of requested Order\
                For more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3
              type: string
            Last-Modified:
              description: |
                Last modification UTC date of the order\
                For more details go to this link: https://tools.ietf.org/html/rfc7232#section-2.2
              format: date-time
              type: string
          schema:
            $ref: '#/definitions/order'
        '304':
          $ref: '#/responses/304_NotModified'
        '404':
          description: Requested Order could not be found
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get full Order and Order Item(s) properties
      tags:
        - Marketplaces - Orders - Order
    head:
      deprecated: false
      description: |
        The purpose of this operation is to reduce the bandwith usage by getting just the meta information about the order (ETag, Last-Modified) with the body.
        This could be useful 
      operationId: HeadOrder
      parameters:
        - $ref: '#/parameters/marketplaceTechnicalCodeParameter'
        - $ref: '#/parameters/accountIdParameter'
        - $ref: '#/parameters/beezUPOrderIdParameter'
        - $ref: '#/parameters/ifNoneMatchParameter'
      responses:
        '200':
          description: Successfully fetched Order and Order Item(s) properties
          headers:
            ETag:
              description: |
                ETag value to identify the current version of requested Order\
                For more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3
              type: string
            Last-Modified:
              description: |
                Last modification UTC date of the order\
                For more details go to this link: https://tools.ietf.org/html/rfc7232#section-2.2
              format: date-time
              type: string
        '304':
          $ref: '#/responses/304_NotModified'
        '404':
          description: Requested Order could not be found
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: 'Get the meta information about the order (ETag, Last-Modified)'
      tags:
        - Marketplaces - Orders - Order
  '/user/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/clearMerchantOrderInfo':
    post:
      deprecated: false
      operationId: ClearMerchantOrderInfo
      parameters:
        - $ref: '#/parameters/marketplaceTechnicalCodeParameter'
        - $ref: '#/parameters/accountIdParameter'
        - $ref: '#/parameters/beezUPOrderIdParameter'
      responses:
        '204':
          description: Successfully cleared Order merchant order info set
        '400':
          description: Could not update Order merchant information. Please see body for more information.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '404':
          description: Requested Order could not be found
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Clear an Order's merchant information
      tags:
        - Marketplaces - Orders - Order
  '/user/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/harvest':
    post:
      deprecated: false
      operationId: HarvestOrder
      parameters:
        - $ref: '#/parameters/marketplaceTechnicalCodeParameter'
        - $ref: '#/parameters/accountIdParameter'
        - $ref: '#/parameters/beezUPOrderIdParameter'
      responses:
        '202':
          description: Successfully sent Order harvest request
          headers:
            Retry-After:
              description: Indicates the duration in seconds to wait to be able to make this request again
              type: integer
        '404':
          description: Requested Order could not be found
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '409':
          description: Failed to send harvest request because allowed rate limits have been exceeded
          headers:
            Retry-After:
              description: Indicates the duration in seconds to wait to be able to make this request again
              type: integer
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Send harvest request for a single Order
      tags:
        - Marketplaces - Orders - Order
  '/user/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/history':
    get:
      deprecated: false
      operationId: GetOrderHistory
      parameters:
        - $ref: '#/parameters/marketplaceTechnicalCodeParameter'
        - $ref: '#/parameters/accountIdParameter'
        - $ref: '#/parameters/beezUPOrderIdParameter'
        - $ref: '#/parameters/ifNoneMatchParameter'
      responses:
        '200':
          description: Successfully fetched Order history
          schema:
            $ref: '#/definitions/orderHistory'
        '304':
          $ref: '#/responses/304_NotModified'
        '404':
          description: Requested Order could not be found
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Get an Order's harvest and change history
      tags:
        - Marketplaces - Orders - Order
  '/user/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/setMerchantOrderInfo':
    post:
      deprecated: false
      operationId: SetMerchantOrderInfo
      parameters:
        - $ref: '#/parameters/marketplaceTechnicalCodeParameter'
        - $ref: '#/parameters/accountIdParameter'
        - $ref: '#/parameters/beezUPOrderIdParameter'
        - in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/setMerchantOrderInfoRequest'
      responses:
        '204':
          description: Successfully set Order merchant order info set
        '400':
          description: Could not update Order merchant information. Please see body for more information.
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '404':
          description: Requested Order could not be found
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: Set an Order's merchant information
      tags:
        - Marketplaces - Orders - Order
  '/user/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/{changeOrderType}':
    post:
      deprecated: false
      operationId: ChangeOrder
      parameters:
        - $ref: '#/parameters/marketplaceTechnicalCodeParameter'
        - $ref: '#/parameters/accountIdParameter'
        - $ref: '#/parameters/beezUPOrderIdParameter'
        - $ref: '#/parameters/changeOrderTypeParameter'
        - $ref: '#/parameters/userNameInQueryParameter'
        - $ref: '#/parameters/testModeInQueryParameter'
        - in: body
          name: request
          required: false
          schema:
            $ref: '#/definitions/changeOrderRequest'
        - $ref: '#/parameters/ifMatchParameter'
      responses:
        '202':
          description: Order change request accepted
        '400':
          description: 'Invalid order change request, could not be send to the marketplace. Please check the body of this request.'
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '404':
          description: Requested Order could not be found
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '409':
          description: |
            Already processing a change request for this Order.\
            Please refresh your clients Order information and retry later. 
          headers:
            Retry-After:
              description: Indicates the duration in seconds to wait to be able to make this request again
              type: integer
          schema:
            $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
        '412':
          $ref: '#/responses/412_PreConditionFailed'
        default:
          $ref: '#/responses/GeneralError'
      security:
        - api_key: []
      summary: 'Change your marketplace Order Information (accept, ship, etc.)'
      tags:
        - Marketplaces - Orders - Order
definitions:
  BeezUP.Common.AdditionalProductFilters:
    additionalProperties:
      $ref: '#/definitions/BeezUP.Common.AdditionalProductFiltersValue'
    description: |
      Describe a filter on a product's column.
      The key is the column identifier of your catalog or a custom column.
    type: object
  BeezUP.Common.AdditionalProductFiltersValue:
    example:
      672644c7-5bd0-4e25-88c1-1f732bda5e4c:
        operatorName: GreaterTo
        values:
          - 100
    properties:
      operatorName:
        $ref: '#/definitions/BeezUP.Common.ProductFilterOperatorName'
      values:
        description: |
          Must be null if the operator is "IsNull" or "IsNotNull". 
          Can contains multiple value in case of "InList" operator. Otherwise a single value is expected.
        example:
          - My value
        items:
          type: string
        type: array
    type: object
  BeezUP.Common.BeezUPColumnName:
    description: The BeezUP column name
    example: CategoryFirstLevel
    type: string
  BeezUP.Common.CatalogCategoryFilter:
    properties:
      categoryPath:
        description: Indicates on which catalog category path you want to make the filter
        example:
          - Maison
          - Chambre
        items:
          type: string
        type: array
    type: object
  BeezUP.Common.CatalogCategoryId:
    description: The catalog category identifier
    example: 81a058a6-0451-4b79-84ef-94c58d0ed4ac
    format: guid
    type: string
  BeezUP.Common.CatalogCategoryPath:
    description: The catalog category path
    example:
      - VÃªtements
      - Femmes
      - Chaussures
    items:
      type: string
    type: array
  BeezUP.Common.CatalogColumnId:
    description: The catalog column identifier (catalog or custom column)
    example: bea7c21e-948b-4ac3-9ffd-4396e62c4163
    format: guid
    type: string
  BeezUP.Common.CatalogColumnUserName:
    description: The catalog column named by the user (catalog or custom column)
    example: My title
    type: string
  BeezUP.Common.ChannelBasicInfo:
    description: The basic info related to a channel
    properties:
      channelId:
        $ref: '#/definitions/BeezUP.Common.ChannelId'
      channelImageUrl:
        $ref: '#/definitions/BeezUP.Common.HttpUrl'
      channelName:
        $ref: '#/definitions/BeezUP.Common.ChannelName'
    required:
      - channelId
      - channelName
      - channelImageUrl
    type: object
  BeezUP.Common.ChannelCatalogId:
    description: The channel catalog identifier
    example: 6d6b04de-406b-4539-8e7e-bf3e8da5dfb0
    format: guid
    type: string
  BeezUP.Common.ChannelCategoryFilter:
    properties:
      categoryPath:
        description: Indicates on which channel category path you want to make the filter
        example:
          - Home
          - Bedroom
        items:
          type: string
        type: array
    type: object
  BeezUP.Common.ChannelCategoryId:
    example: 24f508da-a069-4467-b9d3-15baebe9bac7
    format: guid
    type: string
  BeezUP.Common.ChannelCategoryPath:
    description: The channel category path
    example:
      - Clothing
      - Women
      - Shoes
    items:
      type: string
    type: array
  BeezUP.Common.ChannelColumnId:
    description: The channel column identifier
    example: 8a76f06a-fefc-4c0d-bcfe-b210f1482977
    format: guid
    type: string
  BeezUP.Common.ChannelColumnName:
    description: The channel column name
    example: NAME
    type: string
  BeezUP.Common.ChannelId:
    description: The channel identifier
    example: 2dc136a7-0d3d-4cc9-a825-a28a42c53e28
    format: guid
    type: string
  BeezUP.Common.ChannelName:
    description: The channel name
    example: Amazon FRA
    type: string
  BeezUP.Common.ColumnDataType:
    default: String
    description: 'Data type of the column, will be used for parsing and for consolidation proces'
    enum:
      - String
      - Url
      - Text
      - Decimal
      - DateTime
      - Int
      - SpecialInt
      - InStock
      - Unknown
      - ImageUrl
    example: String
    type: string
  BeezUP.Common.ColumnImportance:
    default: Optional
    description: Importance of the column
    enum:
      - Required
      - Recommended
      - Optional
    example: Required
    type: string
  BeezUP.Common.CountryIsoCodeAlpha3:
    description: 'The country iso code alpha 3 <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3">(ISO 3166-1_alpha-3)</a>'
    example: FRA
    type: string
    x-lov: Country
  BeezUP.Common.CurrencyCode:
    description: |
      The currency code <a href="https://en.wikipedia.org/wiki/ISO_4217">(ISO 4217)</a>
    example: EUR
    type: string
  BeezUP.Common.DocUrl:
    description: The documentation related to this operation.
    example: 'https://api-docs.beezup.com/#operation/EnableChannelCatalog'
    format: uri
    type: string
  BeezUP.Common.Email:
    description: The email
    example: paulsimon@mysupercompany.com
    format: email
    pattern: '^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$'
    type: string
  BeezUP.Common.ErrorResponseMessage:
    properties:
      errors:
        items:
          $ref: '#/definitions/BeezUP.Common.UserErrorMessage'
        type: array
        uniqueItems: false
    required:
      - errors
    type: object
  BeezUP.Common.ErrorSummary:
    properties:
      errorArguments:
        additionalProperties:
          type: string
        type: object
      errorCode:
        type: string
      errorGuid:
        format: uuid
        type: string
      errorMessage:
        type: string
      exceptionDetail:
        $ref: '#/definitions/BeezUP.Common.ExceptionDetail'
      objectName:
        type: string
      propertyName:
        type: string
      propertyValue:
        type: string
      source:
        type: string
      technicalErrorMessage:
        type: string
      utcDate:
        format: date-time
        type: string
    type: object
  BeezUP.Common.ExceptionDetail:
    properties:
      helpLink:
        type: string
      message:
        type: string
      stackTrace:
        type: string
      type:
        type: string
    type: object
  BeezUP.Common.Href:
    description: Indicate the relative uri for this link
    example: '/v2/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}'
    type: string
  BeezUP.Common.HttpMethod:
    default: GET
    description: Indicate the http method to use on this link
    enum:
      - GET
      - POST
      - PATCH
      - DELETE
      - PUT
      - HEAD
    example: GET
    type: string
  BeezUP.Common.HttpUrl:
    description: 'The URL <a href="https://en.wikipedia.org/wiki/URL">https://en.wikipedia.org/wiki/URL</a>'
    example: 'http://www.mydomain.com'
    pattern: '^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$'
    type: string
  BeezUP.Common.InfoSummaries:
    properties:
      errors:
        items:
          $ref: '#/definitions/BeezUP.Common.ErrorSummary'
        type: array
      informations:
        items:
          $ref: '#/definitions/BeezUP.Common.InfoSummary'
        type: array
      successes:
        items:
          $ref: '#/definitions/BeezUP.Common.SuccessSummary'
        type: array
      warnings:
        items:
          $ref: '#/definitions/BeezUP.Common.WarningSummary'
        type: array
    type: object
  BeezUP.Common.InfoSummary:
    properties:
      informationArguments:
        additionalProperties:
          type: string
        type: object
      informationCode:
        type: string
      informationMessage:
        type: string
      objectName:
        type: string
      propertyName:
        type: string
      propertyValue:
        type: string
    type: object
  BeezUP.Common.LOVLink2:
    description: Describe the way you have to follow to get access to the LOV
    properties:
      href:
        default: '/v2/user/{listName}'
        description: Indicate the relative uri pattern to the list of value
        example: '/v2/public/{listName}'
        type: string
      listName:
        description: The name of the list of value
        example: Go2CultureName
        type: string
      rel:
        description: Indicate the relation name related to the link
        example: LOV_Go2CultureName
        type: string
    required:
      - listName
    type: object
    x-deprecated: true
  BeezUP.Common.LOVLink3:
    description: Describe the way you have to follow to get access to the LOV
    properties:
      href:
        description: Indicate the uri to the list of value
        example: /v2/public/Go2CultureName
        format: uri
        type: string
      method:
        $ref: '#/definitions/BeezUP.Common.HttpMethod'
    required:
      - href
    type: object
  BeezUP.Common.Link2:
    properties:
      href:
        $ref: '#/definitions/BeezUP.Common.Href'
      info:
        $ref: '#/definitions/BeezUP.Common.InfoSummaries'
      method:
        $ref: '#/definitions/BeezUP.Common.HttpMethod'
      operationId:
        $ref: '#/definitions/BeezUP.Common.OperationId'
      parameters:
        items:
          $ref: '#/definitions/BeezUP.Common.LinkParameter2'
        minItems: 0
        type: array
        uniqueItems: true
      rel:
        description: Indicate the relation name related to the link
        example: self
        type: string
    required:
      - rel
    type: object
    x-deprecated: true
  BeezUP.Common.Link3:
    properties:
      allOptionalParamsProvided:
        description: indicates whether all optionals params have been provided
        type: boolean
      allRequiredParamsProvided:
        description: indicates whether all required params have been provided
        type: boolean
      description:
        description: The description of the link
        example: This is a description link
        type: string
      docUrl:
        $ref: '#/definitions/BeezUP.Common.DocUrl'
      href:
        $ref: '#/definitions/BeezUP.Common.Href'
      info:
        $ref: '#/definitions/BeezUP.Common.InfoSummaries'
      label:
        description: The label corresponding to the link. This label is automatically translated based on the Accept-Language http header.
        example: The translated label
        type: string
      method:
        $ref: '#/definitions/BeezUP.Common.HttpMethod'
      operationId:
        $ref: '#/definitions/BeezUP.Common.OperationId'
      parameters:
        additionalProperties:
          $ref: '#/definitions/BeezUP.Common.LinkParameter3'
        properties:
          default:
            $ref: '#/definitions/BeezUP.Common.LinkParameter3'
      urlTemplated:
        description: indicates whether the href is templated or not
        type: boolean
    required:
      - href
    type: object
  BeezUP.Common.LinkParameter2:
    properties:
      in:
        $ref: '#/definitions/BeezUP.Common.ParameterIn'
      lovLink:
        $ref: '#/definitions/BeezUP.Common.LOVLink2'
        description: This parameter expect the values indicated in this list of values.
      lovRequired:
        description: 'If true, you MUST use indicate a value from the list of values otherwise it''s a freetext'
        example: true
        type: boolean
      name:
        description: The name of the parameter
        example: marketplaceTechnicalCode
        type: string
      required:
        example: true
        type: boolean
      type:
        $ref: '#/definitions/BeezUP.Common.ParameterType'
      value:
        description: The value of the parameter
        example: '1234'
        type: string
    required:
      - name
    type: object
    x-deprecated: true
  BeezUP.Common.LinkParameter3:
    properties:
      description:
        description: description of the parameter
        example: the store identifier
        type: string
      in:
        $ref: '#/definitions/BeezUP.Common.ParameterIn'
      label:
        description: The label corresponding to the link parameter. This label is automatically translated based on the Accept-Language http header.
        example: The translated label
        type: string
      lovLink:
        $ref: '#/definitions/BeezUP.Common.LOVLink3'
      lovRequired:
        description: 'If true, you MUST indicate a value from the list of values otherwise it''s a freetext'
        example: true
        type: boolean
      properties:
        additionalProperties:
          $ref: '#/definitions/BeezUP.Common.LinkParameterProperty3'
        description: 'If the parameter is an object with flexible properties (additionProperties/dictionary), we will describe the properties of the object.'
        example:
          shipOrder:
            type: string
        type: object
      required:
        default: false
        example: true
        type: boolean
      schema:
        description: schema of the parameter
        example: orderListRequest
        type: string
      type:
        $ref: '#/definitions/BeezUP.Common.ParameterType'
      value:
        description: The value of the parameter. It can be an integer a string or an object.
        example: '1234'
        type: object
    required:
      - in
    type: object
  BeezUP.Common.LinkParameterProperty3:
    properties:
      description:
        description: description of the parameter
        example: the store identifier
        type: string
      label:
        description: The label corresponding to the link parameter property. This label is automatically translated based on the Accept-Language http header.
        example: The translated label
        type: string
      lovLink:
        $ref: '#/definitions/BeezUP.Common.LOVLink3'
      lovRequired:
        description: 'If true, you MUST use indicate a value from the list of values otherwise it''s a freetext'
        example: true
        type: boolean
      required:
        example: true
        type: boolean
      schema:
        description: schema of the parameter
        example: orderListRequest
        type: string
      type:
        $ref: '#/definitions/BeezUP.Common.ParameterType'
      value:
        description: The value of the parameter. It can be an integer a string or an object.
        example: '1234'
        type: object
    required:
      - type
    type: object
  BeezUP.Common.ListOfValueItem:
    description: This object is used by LOV apis
    properties:
      codeIdentifier:
        example: FRA
        type: string
      intIdentifier:
        example: 1
        format: int32
        type: integer
      position:
        example: 1
        format: int32
        type: integer
      translationText:
        example: France
        type: string
    required:
      - codeIdentifier
      - intIdentifier
    type: object
  BeezUP.Common.MarketplaceAccountId:
    description: The marketplace account identifier in BeezUP. This account identifier is based on your api settings.
    example: 1234
    format: int32
    type: integer
  BeezUP.Common.MarketplaceBusinessCode:
    description: 'In an marketplace technical code like CDiscount you can have several marketplaces like GO SPORT, etc. We identify them by a business code.'
    example: GOSPORT
    type: string
    x-lov: MarketplaceBusinessCode
  BeezUP.Common.MarketplaceTechnicalCode:
    description: The technical code of the marketplace.
    example: Amazon
    type: string
    x-lov: OMMarketplaceTechnicalCode
  BeezUP.Common.OperationId:
    description: The operationId to call.
    example: GetOrder
    type: string
  BeezUP.Common.PageNumber:
    default: 1
    description: Indicates the page number
    example: 1
    format: int32
    minimum: 1
    type: integer
  BeezUP.Common.PageSize:
    default: 100
    description: Indicate the item count per page
    example: 100
    format: int32
    maximum: 100
    minimum: 25
    type: integer
  BeezUP.Common.PaginationRequestParameters:
    properties:
      pageNumber:
        $ref: '#/definitions/BeezUP.Common.PageNumber'
      pageSize:
        $ref: '#/definitions/BeezUP.Common.PageSize'
    type: object
  BeezUP.Common.PaginationResult:
    example:
      entryCount: 25
      links:
        first:
          href: /v2/user/marketplaces/orders/list/full
          method: POST
          parameters:
            - in: body
              name: request
              schema: orderListRequest
              type: object
              value:
                beginPeriodUtcDate: '2014-08-25T07:32:31.584Z'
                endPeriodUtcDate: '2014-09-24T07:32:31.584Z'
                pageNumber: 1
                pageSize: 25
        last:
          href: /v2/user/marketplaces/orders/list/full
          method: POST
          parameters:
            - in: body
              name: request
              schema: orderListRequest
              type: object
              value:
                beginPeriodUtcDate: '2014-08-25T07:32:31.584Z'
                endPeriodUtcDate: '2014-09-24T07:32:31.584Z'
                pageNumber: 38
                pageSize: 25
        next:
          href: /v2/user/marketplaces/orders/list/full
          method: POST
          parameters:
            - in: body
              name: request
              schema: orderListRequest
              type: object
              value:
                beginPeriodUtcDate: '2014-08-25T07:32:31.584Z'
                endPeriodUtcDate: '2014-09-24T07:32:31.584Z'
                pageNumber: 2
                pageSize: 25
      pageCount: 38
      totalEntryCount: 943
    properties:
      entryCount:
        description: The entry count currently returned
        example: 25
        minimum: 0
        type: integer
      links:
        $ref: '#/definitions/BeezUP.Common.PaginationResultLinks'
      pageCount:
        description: The page count
        example: 38
        minimum: 0
        type: integer
      totalEntryCount:
        description: The total entry count
        example: 943
        minimum: 0
        type: integer
    required:
      - entryCount
      - pageCount
      - totalEntryCount
      - links
    type: object
  BeezUP.Common.PaginationResultLinks:
    description: 'The navigation links ''first'', ''last'', ''next'', ''previous'''
    properties:
      first:
        $ref: '#/definitions/BeezUP.Common.Link3'
      last:
        $ref: '#/definitions/BeezUP.Common.Link3'
      next:
        $ref: '#/definitions/BeezUP.Common.Link3'
      previous:
        $ref: '#/definitions/BeezUP.Common.Link3'
    required:
      - first
      - last
    type: object
  BeezUP.Common.ParameterIn:
    description: |
      * path: if the parameter must be pass in the path uri
      * header: if the parameter must be passed in http header
      * query: if the parameter must be passed in querystring
      * body: if the paramter must be passed in the body
    enum:
      - path
      - header
      - query
      - body
    example: path
    type: string
  BeezUP.Common.ParameterType:
    default: string
    description: The value type of the parameter
    enum:
      - string
      - integer
      - number
      - boolean
      - object
      - array
      - date
      - date-time
    example: string
    type: string
  BeezUP.Common.ProductBasicInfo:
    description: The basic information related to a product
    properties:
      productExists:
        description: Indicates if the product still exists in your catalog
        example: true
        type: boolean
      productId:
        description: The product identifier
        example: 00000000-0000-0000-0000-000000000000
        format: guid
        type: string
      productImageUrl:
        description: The product image Url
        example: 'http://i2.cdscdn.com/pdt2/3/9/0/1/550x550/hai6901018043390/rw/haier-b20fwrss-refrigerateur-americain.jpg'
        format: uri
        type: string
      productSku:
        description: The product SKU
        example: SKU1234
        type: string
      productTitle:
        description: The product tile
        example: My supert product
        type: string
    required:
      - productId
      - productSku
      - productTitle
      - productImageUrl
      - productExists
    type: object
  BeezUP.Common.ProductFilterOperatorName:
    description: Indicate the operator you want to make on the columnId
    enum:
      - Equals
      - Contains
      - GreaterTo
      - LowerTo
      - InList
      - IsNull
      - IsNotNull
    type: string
  BeezUP.Common.ProductFilters:
    properties:
      additionalProductFilters:
        $ref: '#/definitions/BeezUP.Common.AdditionalProductFilters'
      sku:
        description: The product sku filter
        example: M1234
        type: string
      title:
        description: The product title filter
        example: RefrigÃ©rateur
        type: string
    type: object
  BeezUP.Common.ProductId:
    description: The product identifier
    example: 578419df-1bbf-41a6-96fa-862e42182b67
    format: guid
    type: string
  BeezUP.Common.StoreId:
    description: The store identifier
    example: 64f43358-63a1-47f7-97ec-0301fc39956b
    format: guid
    type: string
  BeezUP.Common.SuccessSummary:
    properties:
      objectName:
        type: string
      propertyName:
        type: string
      propertyValue:
        type: string
      successArguments:
        additionalProperties:
          type: string
        type: object
      successCode:
        type: string
      successMessage:
        type: string
    type: object
  BeezUP.Common.UserErrorMessage:
    properties:
      arguments:
        description: a dictionary string/object
        items:
          properties:
            name:
              description: The key of the parameter
              example: currentCatalogImportationId
              type: string
            value:
              description: The value of the parameter. Depending to the type.
              example: b24d0dd8-a561-478a-9b26-34f573f03527
              type: object
          required:
            - name
            - value
          type: object
        type: array
      code:
        description: the error code. The error code can be a pattern containing the argument's name
        example: CatalogImportationAlreadyInProgress(ExecutionId currentCatalogImportationId)
        type: string
      cultureName:
        description: 'If the error is translated, the culture name will be indicated'
        example: en
        type: string
        x-lov: Go2CultureName
      docUrl:
        $ref: '#/definitions/BeezUP.Common.DocUrl'
      message:
        description: The error message
        example: |
          There is already an importation in progress: b24d0dd8-a561-478a-9b26-34f573f03527
        type: string
    required:
      - code
      - message
    type: object
  BeezUP.Common.UserId:
    description: The user identifier
    example: 8a7fbdec-9e71-472e-9974-27d5c1d57cf8
    format: guid
    type: string
  BeezUP.Common.WarningSummary:
    properties:
      technicalErrorMessage:
        type: string
      warningArguments:
        additionalProperties:
          type: string
        type: object
      warningCode:
        type: string
      warningMessage:
        type: string
    type: object
  accountId:
    description: The marketplace account identifier in BeezUP. This account identifier is based on your api settings.
    example: 1234
    format: int32
    type: integer
  accountInfo:
    properties:
      companyInfo:
        $ref: '#/definitions/companyInfo'
      email:
        $ref: '#/definitions/BeezUP.Common.Email'
      info:
        $ref: '#/definitions/BeezUP.Common.InfoSummaries'
      links:
        $ref: '#/definitions/accountInfoLinks'
      personalInfo:
        $ref: '#/definitions/personalInfo'
      profilePictureUrl:
        $ref: '#/definitions/profilePictureUrl'
      status:
        $ref: '#/definitions/accountStatus'
      userId:
        $ref: '#/definitions/BeezUP.Common.UserId'
    required:
      - userId
      - email
      - status
      - links
    type: object
  accountInfoLinks:
    description: The different actions you can make on this account
    properties:
      activateUserAccount:
        $ref: '#/definitions/links.activateUserAccountLink'
      changePassword:
        $ref: '#/definitions/links.changePasswordLink'
      getCreditCardInfo:
        $ref: '#/definitions/links.getCreditCardInfoLink'
      getProfilePictureInfo:
        $ref: '#/definitions/links.getProfilePictureInfoLink'
      saveCompanyInfo:
        $ref: '#/definitions/links.saveCompanyInfoLink'
      saveCreditCardInfo:
        $ref: '#/definitions/links.saveCreditCardInfoLink'
      savePersonalInfo:
        $ref: '#/definitions/links.savePersonalInfoLink'
      saveProfilePictureInfo:
        $ref: '#/definitions/links.saveProfilePictureInfoLink'
      self:
        $ref: '#/definitions/links.getUserAccountInfoLink'
    required:
      - self
      - savePersonalInfo
      - changePassword
      - getProfilePictureInfo
      - saveCompanyInfo
      - saveProfilePictureInfo
      - getCreditCardInfo
      - saveCreditCardInfo
    type: object
  accountPublications:
    description: The publication history for an account
    properties:
      links:
        $ref: '#/definitions/accountPublicationsLinks'
      publications:
        description: The recent publications for the requested account
        example:
          - feeds:
              - endUtcDate: '2016-02-13T12:02:00Z'
                errorMessage: ''
                exportedProducts: 10142
                failedItems: 1
                feedType: Offers
                htmlReportGenerationErrorMessage: ''
                htmlReportUrl: 'http://www.myreporthtml.com'
                processingStatus: Done
                publishedItems: 10041
                publishedItemsWithWarning: 123
                startUtcDate: '2016-02-13T12:01:11Z'
                transmittedItems: 10042
              - endUtcDate: '2016-02-13T12:02:00Z'
                errorMessage: ''
                exportedProducts: 10142
                failedItems: 1
                feedType: Inventory
                htmlReportGenerationErrorMessage: ''
                htmlReportUrl: 'http://www.myreporthtml.com'
                processingStatus: Done
                publishedItems: 10041
                publishedItemsWithWarning: 123
                startUtcDate: '2016-02-13T12:01:11Z'
                transmittedItems: 10042
              - errorMessage: ''
                exportedProducts: 10142
                failedItems: 1
                feedType: Pricing
                htmlReportGenerationErrorMessage: ''
                htmlReportUrl: 'http://www.myreporthtml.com'
                processingStatus: InProgress
                publishedItems: 10041
                publishedItemsWithWarning: 123
                startUtcDate: '2016-02-13T12:01:11Z'
                transmittedItems: 10042
            publicationType: PublishOffers
          - feeds:
              - endUtcDate: '2016-02-13T12:02:00Z'
                errorMessage: ''
                exportedProducts: 10142
                failedItems: 1
                feedType: Product
                htmlReportGenerationErrorMessage: ''
                htmlReportUrl: 'http://www.myreporthtml.com'
                processingStatus: Done
                publishedItems: 10041
                publishedItemsWithWarning: 123
                startUtcDate: '2016-02-13T12:01:11Z'
                transmittedItems: 10042
              - endUtcDate: '2016-02-13T12:02:00Z'
                errorMessage: ''
                exportedProducts: 10142
                failedItems: 1
                feedType: Inventory
                htmlReportGenerationErrorMessage: ''
                htmlReportUrl: 'http://www.myreporthtml.com'
                processingStatus: Done
                publishedItems: 10041
                publishedItemsWithWarning: 123
                startUtcDate: '2016-02-13T12:01:11Z'
                transmittedItems: 10042
              - errorMessage: ''
                exportedProducts: 10142
                failedItems: 1
                feedType: Pricing
                htmlReportGenerationErrorMessage: ''
                htmlReportUrl: 'http://www.myreporthtml.com'
                processingStatus: InProgress
                publishedItems: 10041
                publishedItemsWithWarning: 123
                startUtcDate: '2016-02-13T12:01:11Z'
                transmittedItems: 10042
            publicationType: PublishProducts
        items:
          $ref: '#/definitions/publicationReporting'
        type: array
    required:
      - links
      - publications
    type: object
  accountPublicationsLinks:
    properties:
      self:
        $ref: '#/definitions/links.GetPublicationsLink'
    required:
      - self
    type: object
  accountStatus:
    description: |
      The account status
      * Active:  When the account is active
      * SystemBlocked:  When all stores on the account are blocked by the system
      * UserBlocked: When all stores on the account are blocked on GO not on the system
      * NotActivated: When the email is not verified
    enum:
      - Active
      - SystemBlocked
      - UserBlocked
      - NotActivated
    example: Active
    type: string
  accountSynchronization:
    properties:
      accountId:
        $ref: '#/definitions/accountId'
      completedHarvestSynchroUtcDate:
        format: date-time
        type: string
      marketplaceBusinessCode:
        $ref: '#/definitions/BeezUP.Common.MarketplaceBusinessCode'
      marketplaceTechnicalCode:
        $ref: '#/definitions/BeezUP.Common.MarketplaceTechnicalCode'
    required:
      - accountId
      - marketplaceTechnicalCode
      - marketplaceBusinessCode
    type: object
  accountSynchronizationList:
    properties:
      accountSynchronizations:
        items:
          $ref: '#/definitions/accountSynchronization'
        type: array
    type: object
  accountingEmails:
    description: Your company accounting emails
    example:
      - myaccountemail@mysupercompany.com
    items:
      $ref: '#/definitions/BeezUP.Common.Email'
    type: array
  addChannelCatalogRequest:
    properties:
      channelId:
        $ref: '#/definitions/BeezUP.Common.ChannelId'
      storeId:
        $ref: '#/definitions/BeezUP.Common.StoreId'
    required:
      - channelId
      - storeId
    type: object
  address:
    description: Your address
    example: 21 jump street
    type: string
  alertEnabled:
    description: Is the alert enable ?
    example: true
    type: boolean
  alertId:
    description: Alert identifier
    example: 8
    format: int32
    type: integer
  alertName:
    description: The alert name
    example: NoImportSinceXDays
    type: string
  alertPropertyId:
    description: The property identifier of the alert
    example: 2
    format: int32
    type: integer
  alertPropertyValue:
    description: The property value
    example: '2'
    type: string
  apiCredential:
    description: Your api credential
    properties:
      primaryToken:
        description: The primary token to be used in the next call in the user scope API
        example: 3b22980d8d1143c6ba7adf4e55b9a153
        type: string
      productName:
        description: The product name related to this credential
        example: UserAPI
        type: string
      secondaryToken:
        description: The secondary token. Could be usefull if you want to share your access with someone else.
        example: 162ae17fd52044c38cce3388ea5b0c91
        type: string
    type: object
  apiCredentials:
    properties:
      credentials:
        description: Your API credential list
        example:
          - primaryToken: 3b22980d8d1143c6ba7adf4e55b9a153
            productName: UserApi
            secondaryToken: 162ae17fd52044c38cce3388ea5b0c91
        items:
          $ref: '#/definitions/apiCredential'
        type: array
    type: object
  apiSettingStatus:
    enum:
      - warning
      - success
      - failed
    example: success
    type: string
  autoImportConfiguration:
    properties:
      duplicateProductConfiguration:
        $ref: '#/definitions/duplicateProductValueConfiguration'
      input:
        $ref: '#/definitions/inputConfiguration'
      inputConfiguredByUserId:
        $ref: '#/definitions/BeezUP.Common.UserId'
      pauseStatusChangedByUserId:
        $ref: '#/definitions/BeezUP.Common.UserId'
      pauseStatusChangedUtcDate:
        description: Indicate when the pause status has changed in UTC date.
        example: '2017-04-01T13:21:42Z'
        format: date-time
        type: string
      paused:
        default: false
        description: Indicate if the auto import is in pause or not.
        example: false
        type: boolean
      scheduledByUserId:
        $ref: '#/definitions/BeezUP.Common.UserId'
      schedulingLocalTimeZoneName:
        default: Romance Standard Time
        description: Indicate the time zone name of the scheduling. If the scheduling type is "Schedule"
        example: Romance Standard Time
        type: string
      schedulingType:
        $ref: '#/definitions/schedulingType'
      schedulingValue:
        description: Indicate the scheduling value. If the scheduling type is Interval then the value will be a duration otherwise the values will be the time.
        example:
          - '21:00:00'
          - '23:00:00'
          - '08:30:00'
        items:
          type: string
        minItems: 1
        type: array
    required:
      - input
      - inputConfiguredByUserId
      - schedulingType
      - schedulingValue
      - paused
      - duplicateProductConfiguration
    type: object
  autoImportConfigurationLinks:
    properties:
      activate:
        $ref: '#/definitions/links.Importation_ActivateAutoImportLink'
      pause:
        $ref: '#/definitions/links.Auto_PauseAutoImportLink'
      resume:
        $ref: '#/definitions/links.Auto_ResumeAutoImportLink'
      schedule:
        $ref: '#/definitions/links.Auto_ScheduleAutoImportLink'
      scheduleInterval:
        $ref: '#/definitions/links.Auto_ConfigureAutoImportIntervalLink'
      self:
        $ref: '#/definitions/links.Auto_GetAutoImportConfigurationLink'
      start:
        $ref: '#/definitions/links.Auto_StartAutoImportLink'
    required:
      - self
    type: object
  automaticTransition:
    properties:
      accountId:
        $ref: '#/definitions/accountId'
      enabled:
        example: false
        type: boolean
      marketplaceTechnicalCode:
        $ref: '#/definitions/BeezUP.Common.MarketplaceTechnicalCode'
      orderStatusTransitionId:
        example: 1234
        format: int32
        type: integer
    required:
      - marketplaceTechnicalCode
      - accountId
      - orderStatusTransitionId
      - enabled
    type: object
  automaticTransitionInfo:
    allOf:
      - $ref: '#/definitions/automaticTransition'
      - properties:
          beezUPOrderStatus:
            $ref: '#/definitions/beezUPOrderStatus'
          businessOperationType:
            $ref: '#/definitions/businessOperationType'
          links:
            $ref: '#/definitions/automaticTransitionInfoLinks'
          marketplaceBusinessCode:
            $ref: '#/definitions/BeezUP.Common.MarketplaceBusinessCode'
        required:
          - marketplaceBusinessCode
          - beezUPOrderStatus
          - businessOperationType
        type: object
  automaticTransitionInfoLinks:
    properties:
      configure:
        $ref: '#/definitions/links.ConfigureAutomaticTransitionsLink'
    required:
      - configure
    type: object
  automaticTransitionInfoList:
    properties:
      automaticTransitionInfos:
        items:
          $ref: '#/definitions/automaticTransitionInfo'
        type: array
      links:
        $ref: '#/definitions/automaticTransitionInfoListLinks'
    required:
      - links
    type: object
  automaticTransitionInfoListLinks:
    properties:
      configure:
        $ref: '#/definitions/links.ConfigureAutomaticTransitionsLink'
      self:
        $ref: '#/definitions/links.GetAutomaticTransitionsLink'
    required:
      - self
      - configure
    type: object
  batchOrderOperationResponse:
    description: The response given by the batch operation
    properties:
      operations:
        items:
          $ref: '#/definitions/orderOperationResponse'
        type: array
    required:
      - operations
    type: object
  beezUPColumnConfiguration:
    description: Describe a BeezUP column
    properties:
      beezUPColumnName:
        $ref: '#/definitions/BeezUP.Common.BeezUPColumnName'
      canBeTruncated:
        $ref: '#/definitions/canBeTruncated'
      columnDataType:
        $ref: '#/definitions/BeezUP.Common.ColumnDataType'
      columnImportance:
        $ref: '#/definitions/BeezUP.Common.ColumnImportance'
      description:
        description: Describe the BeezUP column
        example: 'Use for big text, like description'
        type: string
      displayGroupName:
        $ref: '#/definitions/displayGroupName'
      unique:
        default: false
        description: "/!\\ ONLY AVAILABLE ON CATALOG COLUMN NOT ON CUSTOM COLUMNS!!\r\nIf true, an error happen at the second occurence of the same value for this column\r\nThis information will be used during the importation process and later for mapping proposal"
        example: false
        type: boolean
    required:
      - beezUPColumnName
      - columnImportance
      - displayGroupName
    type: object
  beezUPOrderId:
    description: The BeezUP Order identifier
    example: '00000000000000000000000000000000000000000000000'
    format: uuid
    type: string
  beezUPOrderStatus:
    description: BeezUP order status. Unified for all marketplaces.
    example: Shipped
    type: string
    x-lov: BeezUPOrderState
  beezUPTimeZoneId:
    description: The time zone identifier based on the list of values /v2/user/lov/BeezUPTimeZone
    example: 79
    format: int32
    type: integer
    x-lov: BeezUPTimeZone
  billingPeriod:
    properties:
      billingPeriodInMonth:
        description: The billing period in month
        example: 12
        format: int32
        type: integer
      discountPercentage:
        description: The discount percentage related to this billing period
        example: 20
        format: double
        type: number
    required:
      - billingPeriodInMonth
      - discountPercentage
    type: object
  billingPeriodInMonth:
    description: Can be null. The billing period in month based on /billingPeriods
    example: 12
    format: int32
    minimum: 1
    type: integer
  billingPeriodList:
    properties:
      billingPeriods:
        description: The billing period list
        example:
          - billingPeriodInMonth: 12
            discountPercentage: 20
        items:
          $ref: '#/definitions/billingPeriod'
        type: array
      links:
        $ref: '#/definitions/billingPeriodListLinks'
    required:
      - links
      - billingPeriods
    type: object
  billingPeriodListLinks:
    properties:
      self:
        $ref: '#/definitions/links.getBillingPeriodsLink'
    type: object
  bonusInfo:
    properties:
      amount:
        example: 12.34
        format: double
        type: number
      bonusType:
        $ref: '#/definitions/bonusType'
    required:
      - bonusType
      - amount
    type: object
  bonusType:
    enum:
      - OnlinePaymentMethodBonus
      - PreviousInvoiceProrataBonus
      - PreviousContractBonus
    type: string
  businessOperationType:
    example: ShipOrder
    type: string
    x-lov: OrderChangeBusinessOperationType
  canBeTruncated:
    default: false
    description: If the size of the value is greater than the limit we can truncate the value instead of failing...
    example: false
    type: boolean
  cardNumber:
    description: Card number
    example: 1234567890091234
    type: string
  cardVerificationCode:
    description: Card Verification Code
    example: 123
    type: string
  catalogColumn:
    description: The catalog column configuration
    example:
      catalogColumnName: SKU
      configuration:
        beezUPColumnName: CategoryFirstLevel
        canBeTruncated: false
        columnCultureName: fr-FR
        columnDataType: String
        columnFormat: MM/dd/yyyy
        columnImportance: Required
        displayGroupName: Category
      duplicateProductValueConfiguration:
        compareOptions: IgnoreCase
        strategy: KeepFirstDuplicateProductOnly
      id: 8a76f06a-fefc-4c0d-bcfe-b210f1482977
      ignored: true
      userColumName: My SKU
    properties:
      catalogColumnName:
        $ref: '#/definitions/catalogColumnName'
      configuration:
        $ref: '#/definitions/columnConfiguration'
      duplicateProductValueConfiguration:
        $ref: '#/definitions/duplicateProductValueConfiguration'
      id:
        $ref: '#/definitions/columnId'
      ignored:
        default: false
        description: 'IF true, the product values of this column will be not taken in account during the importation process'
        type: boolean
      links:
        $ref: '#/definitions/catalogColumnLinks'
      userColumName:
        $ref: '#/definitions/userColumName'
    required:
      - id
      - catalogColumnName
      - userColumName
      - configuration
      - links
    type: object
  catalogColumnLinks:
    properties:
      rename:
        $ref: '#/definitions/links.Catalog_ChangeCatalogColumnUserNameLink'
    type: object
  catalogColumnList:
    properties:
      catalogColumns:
        items:
          $ref: '#/definitions/catalogColumn'
        type: array
    required:
      - catalogColumns
    type: object
  catalogColumnName:
    description: The catalog column name
    example: SKU
    type: string
  catalogIndex:
    properties:
      links:
        $ref: '#/definitions/catalogIndexLinks'
      lovLinks:
        $ref: '#/definitions/catalogIndexLOVLinks'
      storeLinks:
        $ref: '#/definitions/catalogStoreIndexList'
    required:
      - links
      - lovLinks
    type: object
  catalogIndexLOVLinks:
    properties:
      beezUPColumnDataTypeLov:
        $ref: '#/definitions/BeezUP.Common.LOVLink3'
      beezUPColumnDisplayGroupLov:
        $ref: '#/definitions/BeezUP.Common.LOVLink3'
      beezUPColumnImportanceLov:
        $ref: '#/definitions/BeezUP.Common.LOVLink3'
      beezUPColumnLov:
        $ref: '#/definitions/BeezUP.Common.LOVLink3'
      compareOptionLov:
        $ref: '#/definitions/BeezUP.Common.LOVLink3'
      duplicateProductValueStrategyLov:
        $ref: '#/definitions/BeezUP.Common.LOVLink3'
    required:
      - beezUPColumnLov
      - beezUPColumnDataTypeLov
      - beezUPColumnImportanceLov
      - beezUPColumnDisplayGroupLov
      - duplicateProductValueStrategyLov
      - compareOptionLov
    type: object
  catalogIndexLinks:
    properties:
      beezUPColumns:
        $ref: '#/definitions/links.Catalog_GetBeezUPColumnsLink'
      self:
        $ref: '#/definitions/links.CatalogIndexLink'
    required:
      - self
      - beezUPColumns
    type: object
  catalogStoreIndex:
    properties:
      links:
        $ref: '#/definitions/catalogStoreIndexLinks'
      status:
        $ref: '#/definitions/catalogStoreStatus'
    required:
      - links
      - status
    type: object
  catalogStoreIndexLinks:
    properties:
      autoImportInfo:
        $ref: '#/definitions/links.Auto_GetAutoImportConfigurationLink'
      catalogColumns:
        $ref: '#/definitions/links.Catalog_GetCatalogColumnsLink'
      categories:
        $ref: '#/definitions/links.Catalog_GetCategoriesLink'
      computeExpression:
        $ref: '#/definitions/links.Catalog_ComputeExpressionLink'
      customColumns:
        $ref: '#/definitions/links.Catalog_GetCustomColumnsLink'
      importations:
        $ref: '#/definitions/links.Importation_GetReportingsLink'
      inputConfiguration:
        $ref: '#/definitions/links.Importation_GetManualUpdateLastInputConfigLink'
      products:
        $ref: '#/definitions/links.Catalog_GetProductsLink'
      randomProducts:
        $ref: '#/definitions/links.Catalog_GetRandomProductsLink'
      self:
        $ref: '#/definitions/links.CatalogStoreIndexLink'
      startImportation:
        $ref: '#/definitions/links.Importation_StartManualUpdateLink'
    required:
      - self
    type: object
  catalogStoreIndexList:
    properties:
      links:
        additionalProperties:
          $ref: '#/definitions/catalogStoreIndex'
        description: The key is the store identifier.
        type: object
    type: object
  catalogStoreStatus:
    description: |
      Indicates the status of the catalog store.
      * OK: If the latest importation is a success!
      * Failed: If the latest importation has failed !
      * Outdated: If the latest succeed importation is later than 1 day.
    enum:
      - OK
      - Failed
      - Outdated
    example: OK
    type: string
  category:
    description: The catalog category
    properties:
      categoryId:
        $ref: '#/definitions/BeezUP.Common.CatalogCategoryId'
      categoryPath:
        $ref: '#/definitions/BeezUP.Common.CatalogCategoryPath'
      productCount:
        description: The product count related to this category
        example: 101
        format: int32
        type: integer
    required:
      - categoryId
      - categoryPath
      - productCount
  categoryList:
    description: The object which contains the category list
    properties:
      categories:
        description: The category list
        items:
          $ref: '#/definitions/category'
        type: array
    required:
      - categories
    type: object
  categoryMappingState:
    description: The category mapping state of the channel catalog
    properties:
      categorizedWithoutCostProductCount:
        description: Indicates the categorized product count without cost defined on the category
        example: 42
        format: int32
        type: integer
      status:
        $ref: '#/definitions/categoryMappingStatus'
      uncategorizedProductCount:
        description: Indicates the uncategorized product count
        example: 101
        format: int32
        type: integer
    type: object
  categoryMappingStatus:
    enum:
      - warning
      - success
      - failed
    example: success
    type: string
  changeCustomColumnExpressionRequest:
    description: The request message to change the custom column expression
    properties:
      encryptedBlocklyExpression:
        $ref: '#/definitions/encryptedBlocklyExpression'
      encryptedExpression:
        $ref: '#/definitions/encryptedExpression'
    required:
      - encryptedExpression
      - encryptedBlocklyExpression
    type: object
  changeCustomColumnRequest:
    description: The message request to change a custom column expression an user name
    properties:
      encryptedBlocklyExpression:
        $ref: '#/definitions/encryptedBlocklyExpression'
      encryptedExpression:
        $ref: '#/definitions/encryptedExpression'
      userColumName:
        $ref: '#/definitions/userColumName'
    required:
      - encryptedExpression
      - encryptedBlocklyExpression
      - userColumName
    type: object
  changeOrderListRequest:
    description: Contains all change order operations you want to make
    properties:
      changeOrders:
        description: The change order operations
        items:
          $ref: '#/definitions/changeOrderListRequestItem'
        maxLength: 100
        minLength: 1
        type: array
    required:
      - changeOrders
    type: object
  changeOrderListRequestItem:
    description: Contains the order identifier and the change order request
    properties:
      changeOrderRequest:
        $ref: '#/definitions/changeOrderRequest'
      order:
        $ref: '#/definitions/orderIdentifierWithETag'
    required:
      - order
    type: object
  changeOrderReporting:
    description: The reporting related to a change order operation
    properties:
      changeOrderType:
        $ref: '#/definitions/businessOperationType'
      creationUtcDate:
        description: The creation UTC date of the execution
        example: '2017-04-01T13:10:03Z'
        format: date-time
        type: string
      details:
        additionalProperties:
          type: object
        type: object
      errorMessage:
        description: The error message during the execution
        example: This is an error message
        type: string
      executionUUID:
        $ref: '#/definitions/executionUUID'
      ipAddress:
        description: The IP address who request this operation
        example: 127.0.0.1
        type: string
      lastUpdateUtcDate:
        description: The last update UTC date of the execution
        example: '2017-04-01T13:10:05Z'
        format: date-time
        type: string
      processingStatus:
        description: The processing status of the execution
        example: Done
        type: string
      sourceType:
        $ref: '#/definitions/sourceType'
      sourceUserId:
        $ref: '#/definitions/BeezUP.Common.UserId'
      sourceUserName:
        example: Guillaume Tell
        type: string
      testMode:
        description: This operation was a test
        example: false
        type: boolean
    type: object
  changeOrderRequest:
    additionalProperties:
      type: string
    description: 'All properties with the prefix order_ are translated in the list of values /user/lov#OrderMetaInfoPosted'
    example:
      order_Shipping_CarrierName: La poste
      order_Shipping_EstimatedDeliveryDate: '2014-09-24T09:58:00Z'
      order_Shipping_FulfillmentDate: '2014-09-23T09:58:00Z'
      order_Shipping_ShipperTrackingNumber: 1H01845163783
      order_Shipping_ShippingUrl: 'https://trackingpackage.com?number=1H01845163783'
    type: object
  changePasswordRequest:
    properties:
      newPassword:
        description: Your new password. Which must respect the same constraints as the user registeration
        format: password
        type: string
      oldPassword:
        description: Your current password
        format: password
        type: string
    required:
      - oldPassword
      - newPassword
    type: object
  changeUserColumnNameRequest:
    description: The message request for the change user column name
    properties:
      userColumName:
        $ref: '#/definitions/userColumName'
    required:
      - userColumName
    type: object
  channelCatalog:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.ChannelBasicInfo'
      - description: The channel catalog
        properties:
          categoryMappingSettings:
            $ref: '#/definitions/channelCatalogCategoryMappingSettings'
          channelCatalogId:
            $ref: '#/definitions/BeezUP.Common.ChannelCatalogId'
          channelCategorySettings:
            $ref: '#/definitions/channelCategorySettings'
          channelCostSettings:
            $ref: '#/definitions/channelCostSettings'
          columnMappings:
            $ref: '#/definitions/channelCatalogColumnMappingListWithName'
          costSettings:
            $ref: '#/definitions/costSettings'
          enabled:
            description: Indicates if the channel catalog is enable
            example: true
            type: boolean
          exclusionFilters:
            $ref: '#/definitions/exclusionFilters'
          exportUrl:
            $ref: '#/definitions/BeezUP.Common.HttpUrl'
          generalSettings:
            $ref: '#/definitions/generalSettings'
          isMarketplace:
            description: Indicates if this channel catalog is related to a marketplace
            example: true
            type: boolean
          links:
            $ref: '#/definitions/channelCatalogLinks'
          productCount:
            description: The product count exported considering category mapping. Not all filters have been applied.
            example: 101
            format: int32
            type: integer
          state:
            $ref: '#/definitions/channelCatalogState'
          storeId:
            $ref: '#/definitions/BeezUP.Common.StoreId'
          types:
            description: The channel type list related to the channel
            example:
              - Marketplace
            items:
              type: string
            type: array
        required:
          - channelCatalogId
          - types
          - storeId
          - enabled
          - state
          - links
          - generalSettings
          - channelCostSettings
          - channelCategorySettings
          - isMarketplace
          - productCount
        type: object
  channelCatalogCategoryCostValue:
    description: 'In case of CPC_ByCategory or CPA_ByCategory cost type, you have to indicate the cost value.'
    example: 10.21
    format: decimal
    type: number
  channelCatalogCategoryMapping:
    description: |
      Represent a mapping between a catalog category path and a channel category path. 
      The cost on this mapping can be applied.
    properties:
      catalogCategoryPath:
        $ref: '#/definitions/BeezUP.Common.CatalogCategoryPath'
      channelCategoryPath:
        $ref: '#/definitions/BeezUP.Common.ChannelCategoryPath'
      costValue:
        $ref: '#/definitions/channelCatalogCategoryCostValue'
    required:
      - catalogCategoryPath
      - channelCategoryPath
    type: object
  channelCatalogCategoryMappingInfo:
    description: For all catalog categories the current mapping applied
    properties:
      catalogCategoryPath:
        $ref: '#/definitions/BeezUP.Common.CatalogCategoryPath'
      channelCategoryPath:
        $ref: '#/definitions/BeezUP.Common.ChannelCategoryPath'
      costValue:
        $ref: '#/definitions/channelCatalogCategoryCostValue'
      links:
        $ref: '#/definitions/channelCatalogCategoryMappingInfoLinks'
    required:
      - catalogCategoryPath
      - links
    type: object
  channelCatalogCategoryMappingInfoLinks:
    properties:
      mapCategory:
        $ref: '#/definitions/links.MapChannelCatalogCategoryLink'
      unmapCategory:
        $ref: '#/definitions/links.UnmapChannelCatalogCategoryLink'
    type: object
  channelCatalogCategoryMappingSettings:
    properties:
      categoryMappingDisabledByMerchant:
        description: Optional parameter. Indicates that you have decided to do not map your categories with the channel's categories.
        example: false
        type: boolean
    type: object
  channelCatalogCategoryMappings:
    properties:
      channelCatalogCategoryMappings:
        items:
          $ref: '#/definitions/channelCatalogCategoryMappingInfo'
        type: array
      links:
        $ref: '#/definitions/channelCatalogCategoryMappingsLinks'
    required:
      - links
      - channelCatalogCategoryMappings
    type: object
  channelCatalogCategoryMappingsLinks:
    description: The action you can do on the category mappings
    properties:
      disable:
        $ref: '#/definitions/links.DisableChannelCatalogCategoryMappingLink'
      reenable:
        $ref: '#/definitions/links.ReenableChannelCatalogCategoryMappingLink'
      self:
        $ref: '#/definitions/links.GetChannelCatalogCategoriesLink'
    required:
      - self
    type: object
  channelCatalogColumnMapping:
    description: Represent a mapping between a channel column (considering channel category mapping) and a catalog column
    properties:
      catalogColumnId:
        $ref: '#/definitions/BeezUP.Common.CatalogColumnId'
      channelCategoryPath:
        $ref: '#/definitions/BeezUP.Common.ChannelCategoryPath'
      channelColumnId:
        $ref: '#/definitions/BeezUP.Common.ChannelColumnId'
    required:
      - channelColumnId
    type: object
  channelCatalogColumnMappingList:
    description: The column mapping list between a channel and a catalog
    items:
      $ref: '#/definitions/channelCatalogColumnMapping'
    type: array
  channelCatalogColumnMappingListWithName:
    description: The column mapping list between a channel and a catalog
    items:
      $ref: '#/definitions/channelCatalogColumnMappingWithName'
    type: array
  channelCatalogColumnMappingWithName:
    allOf:
      - $ref: '#/definitions/channelCatalogColumnMapping'
      - properties:
          catalogBeezUPColumnName:
            $ref: '#/definitions/BeezUP.Common.BeezUPColumnName'
          catalogColumnName:
            $ref: '#/definitions/BeezUP.Common.CatalogColumnUserName'
          channelBeezUPColumnName:
            $ref: '#/definitions/BeezUP.Common.BeezUPColumnName'
          channelColumnName:
            $ref: '#/definitions/BeezUP.Common.ChannelColumnName'
        required:
          - channelColumnName
        type: object
  channelCatalogExportCacheInfo:
    properties:
      cacheStatus:
        description: The cache status
        example: ReadyForGeneration
        type: string
        x-lov: ChannelCatalogExportCacheStatus
      expirationUtcDate:
        description: The expiration UTC date of the cache
        example: '2014-08-25T08:02:31.584Z'
        format: date-time
        type: string
      feedUrl:
        description: The feed url
        example: 'https://www.scootmotoshop.com/feed.xml'
        type: string
      lastContentChangeUtcDate:
        description: The last content change UTC date
        example: '2014-08-25T07:30:31.584Z'
        format: date-time
        type: string
      lastUpdateUtcDate:
        description: The last update UTC date of the cache
        example: '2014-08-25T07:32:31.584Z'
        format: date-time
        type: string
    required:
      - cacheStatus
    type: object
  channelCatalogExportCacheInfoResponse:
    properties:
      cacheInfo:
        $ref: '#/definitions/channelCatalogExportCacheInfo'
      links:
        $ref: '#/definitions/channelCatalogExportCacheInfoResponseLinks'
    required:
      - cacheInfo
      - links
    type: object
  channelCatalogExportCacheInfoResponseLinks:
    properties:
      clear:
        $ref: '#/definitions/links.ClearChannelCatalogExportationCacheLink'
      self:
        $ref: '#/definitions/links.GetChannelCatalogExportationCacheInfoLink'
    required:
      - self
    type: object
  channelCatalogExportationHistory:
    properties:
      exportations:
        items:
          $ref: '#/definitions/channelCatalogExportationReporting'
        type: array
      links:
        $ref: '#/definitions/channelCatalogExportationHistoryLinks'
      paginationResult:
        $ref: '#/definitions/BeezUP.Common.PaginationResult'
    required:
      - links
      - exportations
    type: object
  channelCatalogExportationHistoryLinks:
    properties:
      self:
        $ref: '#/definitions/links.GetChannelCatalogExportationHistoryLink'
    type: object
  channelCatalogExportationReporting:
    properties:
      cacheStatus:
        description: The cache status during the exportation
        enum:
          - Error
          - Available
          - GeneratedManually
        example: Available
        type: string
      clientIpAddress:
        description: The IP address of the client who requests this exportation
        example: 42.101.42.101
        type: string
      clientUserAgent:
        description: The http header User-Agent sent by the client who requests this operation
        example: Wget/1.13.4 (linux-gnu)
        type: string
      exportationDuration:
        description: |
          The exportation duration. \
          '00:01:00' measn 1 minute.
        example: '00:01:00'
        pattern: '(00:1[5-9])|(00:[2-5][0-9])|(0[1-9]:[0-5][0-9])|(1[0-9]:[0-5][0-9])|(2[0-3]:[0-5][0-9])'
        type: string
      exportationUtcDate:
        description: The exportation UTC date
        example: '2014-08-25T07:32:31.584Z'
        format: date-time
        type: string
      exportedProductCount:
        description: The exportated product count during this exportation
        example: 10142
        format: int32
        type: integer
    required:
      - exportationUtcDate
      - clientIpAddress
      - clientUserAgent
    type: object
  channelCatalogLinks:
    description: Indicates the actions you can do on a channel catalog
    properties:
      categoryMappings:
        $ref: '#/definitions/links.GetChannelCatalogCategoriesLink'
      configureColumnMappings:
        $ref: '#/definitions/links.ConfigureChannelCatalogColumnMappingsLink'
      configureCostSettings:
        $ref: '#/definitions/links.ConfigureChannelCatalogCostSettingsLink'
      configureGeneralSettings:
        $ref: '#/definitions/links.ConfigureChannelCatalogGeneralSettingsLink'
      delete:
        $ref: '#/definitions/links.DeleteChannelCatalogLink'
      disable:
        $ref: '#/definitions/links.DisableChannelCatalogLink'
      disableCategoryMappings:
        $ref: '#/definitions/links.DisableChannelCatalogCategoryMappingLink'
      enable:
        $ref: '#/definitions/links.EnableChannelCatalogLink'
      exclusionFilters:
        $ref: '#/definitions/links.GetChannelCatalogExclusionFiltersLink'
      exportationCacheInfo:
        $ref: '#/definitions/links.GetChannelCatalogExportationCacheInfoLink'
      marketplaceSettings:
        $ref: '#/definitions/externalLinks.GetChannelCatalogMarketplaceSettingsLink'
      products:
        $ref: '#/definitions/links.GetChannelCatalogProductInfoListLink'
      reenableCategoryMappings:
        $ref: '#/definitions/links.ReenableChannelCatalogCategoryMappingLink'
      self:
        $ref: '#/definitions/links.GetChannelCatalogLink'
    required:
      - self
    type: object
  channelCatalogList:
    description: This is the index of the channel catalog API
    properties:
      channelCatalogs:
        additionalProperties:
          $ref: '#/definitions/channelCatalog'
        description: The channel catalog list. The key is the channel catalog identifier
        type: object
      links:
        $ref: '#/definitions/channelCatalogListLinks'
      lovLinks:
        $ref: '#/definitions/channelCatalogListLovLinks'
    type: object
  channelCatalogListLinks:
    description: |
      Indicates how global actions you can do like how to create a channel catalog, exclusion filter operators, etc...
    properties:
      add:
        $ref: '#/definitions/links.AddChannelCatalogLink'
      beezUPColumns:
        $ref: '#/definitions/externalLinks.Catalog_GetBeezUPColumnsLink'
      exclusionFilterOperators:
        $ref: '#/definitions/links.GetChannelCatalogExclusionFilterOperatorsLink'
      self:
        $ref: '#/definitions/links.GetChannelCatalogsLink'
    type: object
  channelCatalogListLovLinks:
    properties:
      channelCatalogExclusionFilterOperatorLov:
        $ref: '#/definitions/BeezUP.Common.LOVLink3'
      channelCatalogExportCacheStatusLov:
        $ref: '#/definitions/BeezUP.Common.LOVLink3'
    type: object
  channelCatalogMarketplaceProperties:
    properties:
      info:
        $ref: '#/definitions/BeezUP.Common.InfoSummaries'
      links:
        $ref: '#/definitions/channelCatalogMarketplacePropertiesLinks'
      propertyGroups:
        description: The groups settings with constraints
        example:
          - displayGroupCode: AccountInformations
            displayGroupPosition: 1
            properties:
              - name: EbayToken
                position: 1
                readOnly: true
                values:
                  - AgAAAA**AQAAAA**aAAAAA**2VFhVg**nY+sHZ2PrBmdj6wVnY+sEZ2PrA2dj6AElISgCJaLpwWdj6x9nY+seQ**OEsBAA**AAMAAA**jzsVAMwj1dPBsyCEp0Fuj/toSBrfZF2JpKKDrrXIirMzgvgbsyxnA2h1wl7WjFD+TfdCmaBq3CAFLOog/433G5gsse1DLTT6uXFajdiHnPVfnL7QtKIpQEIwL8ZO5Tx1dGl0XQLsU7knPwbGHn5X6Z3JzXrCGvvpw2+MIzDNhasYlqPfOEr8Lct5dcsIIdhXl/qgrzALe5++v76/XjaXvP6eic3uCWBEXBiXC1uisjEtOqaNIPkFaiICBaXsQUzVZdM68bQatBg5bwf6hxvqOyNJRw4pttGStovcXXjL+aszw7ejbxLv1lJ6qeTMj5oRwTPl0AzBAejcY+DTBrLEmgdzrvWHLvMOa1ijGOGzVodBoDGimiqadCPQpAVZr0e7HvQIVbOlbmKpuCUFJ4RPCv0NxpkCm1/nxZWeS9H8gd/SfLf9Chgd115dcKzgxFBoSh7myJcw+MRM7szPQ2Pwv980dTRyHvbI8XR4OieYvXmU4H7Nl51N8B3qkjYFkdcp6J06eqs4dO68lDNdWZfXHkjwI3dY6umDUp4y82IdQl8IykPty3/DZfUAfqafgiAwMHZvXjewp5HhPjDi2zgf+5EcDlvf6rNMzjsghjdWUQi4WldDk+LXgkos6jswIQaNPdpW1D4KyPYWtGYknx0Xzzuc6WmBoVwGFalgMvCWWI9Gs2w6PG5GqB9zm1Fnr3svtPbNYPQ6q3VQpkKL2SWQXy383O1cp6ZMLI9GwZe0FnrqCxb/wc4XJUVw2RoR3qiX
              - name: PayPalEmailAddress
                pattern: '(?:[a-z0-9!#$%&''*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&''*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])'
                position: 2
                required: true
                x-pattern: '(?:[a-z0-9!#$%&''*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&''*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])'
          - displayGroupCode: AnnounceTitle
            displayGroupPosition: 2
            properties:
              - name: Postalcode
                position: 1
                required: true
              - lovLink:
                  href: /v2/user/lov/Country_eBay
                lovRequired: true
                name: Country
                position: 2
                required: true
              - lovLink:
                  href: /v2/user/lov/ReturnsWithinDuration_eBay
                lovRequired: true
                name: ReturnsWithinOption
                position: 3
                required: true
              - lovLink:
                  href: /v2/user/lov/FRA_ShippingService_eBay
                lovRequired: true
                name: ShippingService
                position: 4
                required: true
              - lovLink:
                  href: /v2/user/lov/Currency_eBay
                lovRequired: true
                name: Currency
                position: 5
                required: true
              - lovLink:
                  href: /v2/user/lov/PaymentMethods_eBay
                lovRequired: true
                maxItems: 2
                minItems: 1
                name: PaymentMethods
                position: 6
                required: true
          - displayGroupCode: SalesConditions
            displayGroupPosition: 3
            properties:
              - lovLink:
                  href: /v2/user/lov/ReturnsAcceptedOption_eBay
                lovRequired: true
                name: ReturnsAcceptedOption
                position: 1
                required: true
              - lovLink:
                  href: /v2/user/lov/ShippingCostPaidByOption_eBay
                lovRequired: true
                name: ShippingCostPaidByOption
                position: 2
                required: true
              - lovLink:
                  href: /v2/user/lov/RefundOption_eBay
                lovRequired: true
                name: RefundOption
                position: 3
                required: true
              - lovLink:
                  href: /v2/user/lov/ReturnsWithinDuration_eBay
                lovRequired: true
                name: ReturnsWithinOption
                position: 4
                required: true
              - maxLength: 5000
                name: ReturnDescription
                position: 5
                required: false
          - displayGroupCode: HTML
            displayGroupPosition: 4
            properties:
              - maxLength: 50000
                name: Template_HTML
                position: 1
                required: false
          - displayGroupCode: OrdersRetrievalOptions
            displayGroupPosition: 5
            properties:
              - description: If true allows to retireve one marketplace country only
                name: RetrieveOnlyOneCountry
                position: 1
                required: false
                type: boolean
        items:
          $ref: '#/definitions/channelCatalogMarketplacePropertyGroup'
        type: array
    required:
      - links
      - propertyGroups
    type: object
  channelCatalogMarketplacePropertiesLinks:
    properties:
      externalConfigurationPage:
        $ref: '#/definitions/externalLinks.GetExternalConfigurationPageLink'
      self:
        $ref: '#/definitions/links.GetChannelCatalogMarketplacePropertiesLink'
      settings:
        $ref: '#/definitions/links.GetChannelCatalogMarketplaceSettingsLink'
    required:
      - self
    type: object
  channelCatalogMarketplaceProperty:
    allOf:
      - $ref: '#/definitions/channelCatalogMarketplaceSetting'
      - description: Model for fetching a channel catalog marketplace property
        properties:
          default:
            description: Indicate the default values of the property
            example:
              - 'true'
            items:
              type: string
            type: array
          description:
            description: Indicate the description of the property
            example: If true allows to retireve one marketplace country only
            type: string
          info:
            $ref: '#/definitions/BeezUP.Common.InfoSummaries'
          lovLink:
            $ref: '#/definitions/BeezUP.Common.LOVLink3'
          lovRequired:
            default: false
            description: Indicates if the property value must be in the list of value.
            example: true
            type: boolean
          maxItems:
            default: 1
            description: Indicates the maximum item count of the property value
            example: 2
            format: int32
            minimum: 1
            type: integer
          maxLength:
            description: Indicates the maximum size of the property value
            example: 500
            format: int32
            minimum: 1
            type: integer
          minItems:
            default: 1
            description: Indicates the minimum item count of the property value.
            example: 1
            format: int32
            minimum: 0
            type: integer
          minLength:
            default: 0
            description: Indicates the minimum size of the property value
            example: 1
            format: int32
            minimum: 0
            type: integer
          offerIdRequired:
            description: Indicates the offer identifier required to configure this property.
            example: 10
            type: integer
          pattern:
            description: Channel catalog marketplace setting value format validation regular expression
            example: '(?:[a-z0-9!#$%&''*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&''*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])'
            type: string
          position:
            description: Indicate the position of the property in the display group
            example: 1
            minimum: 1
            type: integer
          readOnly:
            default: false
            description: Indicate if the value cannot be changed. This is used for example for ebay token that should not be changed.
            example: false
            type: boolean
          required:
            default: false
            description: Indicate if the property is required or not
            example: true
            type: boolean
          type:
            $ref: '#/definitions/type'
          visible:
            default: true
            description: Indicates if this property should be displayed in the configuration page.
            example: true
            type: boolean
        required:
          - position
          - readOnly
          - required
          - visible
        type: object
  channelCatalogMarketplacePropertyGroup:
    properties:
      displayGroupCode:
        description: Indicate the code identifier of the group
        example: AccountInformations
        type: string
        x-lov: MarketplacePropertiesDisplayGroup
      displayGroupPosition:
        description: Indicate the position of the group
        example: 1
        minimum: 1
        type: integer
      properties:
        example:
          - name: EbayToken
            position: 1
            readOnly: true
            values:
              - AgAAAA**AQAAAA**aAAAAA**2VFhVg**nY+sHZ2PrBmdj6wVnY+sEZ2PrA2dj6AElISgCJaLpwWdj6x9nY+seQ**OEsBAA**AAMAAA**jzsVAMwj1dPBsyCEp0Fuj/toSBrfZF2JpKKDrrXIirMzgvgbsyxnA2h1wl7WjFD+TfdCmaBq3CAFLOog/433G5gsse1DLTT6uXFajdiHnPVfnL7QtKIpQEIwL8ZO5Tx1dGl0XQLsU7knPwbGHn5X6Z3JzXrCGvvpw2+MIzDNhasYlqPfOEr8Lct5dcsIIdhXl/qgrzALe5++v76/XjaXvP6eic3uCWBEXBiXC1uisjEtOqaNIPkFaiICBaXsQUzVZdM68bQatBg5bwf6hxvqOyNJRw4pttGStovcXXjL+aszw7ejbxLv1lJ6qeTMj5oRwTPl0AzBAejcY+DTBrLEmgdzrvWHLvMOa1ijGOGzVodBoDGimiqadCPQpAVZr0e7HvQIVbOlbmKpuCUFJ4RPCv0NxpkCm1/nxZWeS9H8gd/SfLf9Chgd115dcKzgxFBoSh7myJcw+MRM7szPQ2Pwv980dTRyHvbI8XR4OieYvXmU4H7Nl51N8B3qkjYFkdcp6J06eqs4dO68lDNdWZfXHkjwI3dY6umDUp4y82IdQl8IykPty3/DZfUAfqafgiAwMHZvXjewp5HhPjDi2zgf+5EcDlvf6rNMzjsghjdWUQi4WldDk+LXgkos6jswIQaNPdpW1D4KyPYWtGYknx0Xzzuc6WmBoVwGFalgMvCWWI9Gs2w6PG5GqB9zm1Fnr3svtPbNYPQ6q3VQpkKL2SWQXy383O1cp6ZMLI9GwZe0FnrqCxb/wc4XJUVw2RoR3qiX
          - name: PaypalAddress
            pattern: '(?:[a-z0-9!#$%&''*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&''*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])'
            position: 2
            required: true
            x-pattern: '(?:[a-z0-9!#$%&''*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&''*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])'
        items:
          $ref: '#/definitions/channelCatalogMarketplaceProperty'
        type: array
    required:
      - displayGroupCode
      - displayGroupPosition
      - properties
  channelCatalogMarketplaceSetting:
    description: Model for fetching a channel catalog marketplace setting
    properties:
      name:
        description: Channel catalog marketplace property name
        example: PaypalAddress
        type: string
        x-lov: MarketplaceStoreProperty
      values:
        description: Channel catalog marketplace property values
        example:
          - myemail@mydomain.com
        items:
          type: string
        type: array
    required:
      - name
    type: object
  channelCatalogMarketplaceSettingArray:
    example:
      - name: Country
        values:
          - FR
      - name: Currency
        values:
          - EUR
      - name: ListingDuration
        values:
          - GTC
      - name: PaymentMethods
        values:
          - CCAccepted
      - name: PayPalEmailAddress
        values:
          - pascal@ixeoline.com
      - name: PostalCode
        values:
          - '69630'
      - name: RefundOption
        values:
          - MoneyBackOrExchange
      - name: ReturnsAcceptedOption
        values:
          - ReturnsAccepted
      - name: ReturnsWithinOption
        values:
          - Days_10
      - name: ShippingCostPaidByOption
        values:
          - Buyer
      - name: ShippingService
        values:
          - FR_ColiposteColissimo
    items:
      $ref: '#/definitions/channelCatalogMarketplaceSetting'
    type: array
  channelCatalogMarketplaceSettings:
    description: The channel catalog marketplace settings
    properties:
      links:
        $ref: '#/definitions/channelCatalogMarketplaceSettingsLinks'
      settings:
        example:
          - name: Country
            values:
              - FR
          - name: Currency
            values:
              - EUR
          - name: ListingDuration
            values:
              - GTC
          - name: PaymentMethods
            values:
              - CCAccepted
          - name: PayPalEmailAddress
            values:
              - pascal@ixeoline.com
          - name: PostalCode
            values:
              - '69630'
          - name: RefundOption
            values:
              - MoneyBackOrExchange
          - name: ReturnsAcceptedOption
            values:
              - ReturnsAccepted
          - name: ReturnsWithinOption
            values:
              - Days_10
          - name: ShippingCostPaidByOption
            values:
              - Buyer
          - name: ShippingService
            values:
              - FR_ColiposteColissimo
        items:
          $ref: '#/definitions/channelCatalogMarketplaceSetting'
        type: array
    required:
      - links
      - settings
    type: object
  channelCatalogMarketplaceSettingsLinks:
    properties:
      save:
        $ref: '#/definitions/links.SetChannelCatalogMarketplaceSettingsLink'
      self:
        $ref: '#/definitions/links.GetChannelCatalogMarketplaceSettingsLink'
    required:
      - self
      - save
    type: object
  channelCatalogProductByChannelCatalogRequest:
    properties:
      channelCatalogIds:
        description: The list of channel catalog identifier
        items:
          $ref: '#/definitions/BeezUP.Common.ChannelCatalogId'
        type: array
    type: object
  channelCatalogProductByChannelCatalogResponse:
    properties:
      channelCatalogs:
        additionalProperties:
          $ref: '#/definitions/channelCatalogProductInfo'
        description: The channel catalog product by channel catalog. The key is the channel catalog identifier
        type: object
    type: object
  channelCatalogProductInfo:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.ProductBasicInfo'
      - description: The channel catalog product information
        properties:
          disabled:
            default: false
            description: Indicates if the product has been disabled or not
            example: false
            type: boolean
          excluded:
            default: false
            description: Indicates if the product has been excluded by a exclusion filter
            example: true
            type: boolean
          excludedBy:
            example:
              - Exclude sony products
            items:
              $ref: '#/definitions/exclusionFilterName'
            type: array
          links:
            $ref: '#/definitions/channelCatalogProductInfoLinks'
          overrides:
            $ref: '#/definitions/productOverridesWithCatalogValues'
          uncategorized:
            description: Indicates if the product's category has been NOT mapped to a channel category
            example: true
            type: boolean
        required:
          - overrides
          - disabled
          - uncategorized
          - excluded
          - links
        type: object
  channelCatalogProductInfoLinks:
    description: Indicates the differents actions you can do on a channel product
    properties:
      disable:
        $ref: '#/definitions/links.DisableChannelCatalogProductLink'
      override:
        $ref: '#/definitions/links.OverrideChannelCatalogProductValuesLink'
      reenable:
        $ref: '#/definitions/links.ReenableChannelCatalogProductLink'
      self:
        $ref: '#/definitions/links.GetChannelCatalogProductInfoLink'
    required:
      - self
      - override
    type: object
  channelCatalogProductInfoList:
    description: The channel catalog product info list
    properties:
      links:
        $ref: '#/definitions/channelCatalogProductInfoListLinks'
      paginationResult:
        $ref: '#/definitions/BeezUP.Common.PaginationResult'
      productInfos:
        items:
          $ref: '#/definitions/channelCatalogProductInfo'
        type: array
    required:
      - paginationResult
      - links
      - productInfos
    type: object
  channelCatalogProductInfoListLinks:
    properties:
      export:
        $ref: '#/definitions/links.ExportChannelCatalogProductInfoListLink'
      self:
        $ref: '#/definitions/links.GetChannelCatalogProductInfoListLink'
    required:
      - self
    type: object
  channelCatalogProductsCounters:
    description: The channel catalog products counters. For each counter you will have a count.
    properties:
      disabledProductCountExcludingUncategorizedAndExcluded:
        description: Disabled product count EXCLUDING uncategorized products AND excluded products on existing products.
        example: 50
        format: int32
        type: integer
      disabledProductCountIncludingUncategorizedAndExcluded:
        description: Disabled product count INCLUDING uncategorized products AND excluded products on existing products.
        example: 66
        format: int32
        type: integer
      excludedProductCountExcludingUncategorized:
        description: Excluded product count EXCLUDING uncategorized products on existing products.
        example: 150
        format: int32
        type: integer
      excludedProductCountIncludingUncategorized:
        description: Excluded product count INCLUDING uncategorized products on existing products.
        example: 169
        format: int32
        type: integer
      existingProductCount:
        description: Imported product count currently in your catalog.
        example: 1000
        format: int32
        type: integer
      uncategorizedProductCount:
        description: Product count WITHOUT category mapped on existing products.
        example: 250
        format: int32
        type: integer
    type: object
  channelCatalogState:
    description: Channel Catalog State
    properties:
      apiSettingStatus:
        $ref: '#/definitions/apiSettingStatus'
      categoryMappingState:
        $ref: '#/definitions/categoryMappingState'
      columnMappingStatus:
        $ref: '#/definitions/columnMappingStatus'
      exportedProductCount:
        example: 101
        format: int32
        type: integer
    required:
      - exportedProductCount
      - columnMappingStatus
      - categoryMappingState
      - apiSettingStatus
    type: object
  channelCategory:
    description: The channel category
    properties:
      channelCategoryChannelCode:
        $ref: '#/definitions/channelCategoryChannelCode'
      channelCategoryColumnOverrides:
        $ref: '#/definitions/channelCategoryColumnOverrides'
      channelCategoryDefaultCost:
        $ref: '#/definitions/channelCategoryDefaultCost'
      channelCategoryId:
        $ref: '#/definitions/BeezUP.Common.ChannelCategoryId'
      channelCategoryLevel:
        $ref: '#/definitions/channelCategoryLevel'
      channelCategoryPath:
        $ref: '#/definitions/BeezUP.Common.ChannelCategoryPath'
    required:
      - channelCategoryId
      - channelCategoryPath
      - channelCategoryLevel
    type: object
  channelCategoryChannelCode:
    description: The channel category channel code identifier
    example: '1342'
    type: string
  channelCategoryColumnOverride:
    properties:
      channelColumnDescription:
        $ref: '#/definitions/channelColumnDescription'
      channelColumnId:
        $ref: '#/definitions/BeezUP.Common.ChannelColumnId'
      channelColumnName:
        $ref: '#/definitions/BeezUP.Common.ChannelColumnName'
      configuration:
        $ref: '#/definitions/channelColumnConfiguration'
      restrictedValues:
        $ref: '#/definitions/channelColumnRestrictedValues'
      showInMapping:
        $ref: '#/definitions/channelColumnShowInMapping'
    required:
      - channelColumnId
      - channelColumnName
      - showInMapping
      - configuration
    type: object
  channelCategoryColumnOverrides:
    additionalProperties:
      $ref: '#/definitions/channelCategoryColumnOverride'
    description: The channel category column overrides
    type: object
  channelCategoryDefaultCost:
    description: The default cost on this channel category
    example: 10.42
    format: decimal
    type: number
  channelCategoryLevel:
    description: The channel category level starting from 1
    example: 3
    format: int32
    maximum: 9
    minimum: 1
    type: integer
  channelCategorySettings:
    properties:
      mappingLeafRequired:
        description: Indicates if the category mapping is required on category path leaf or not
        example: true
        type: boolean
      mappingRequired:
        description: 'Indicates if the category mapping is required, otherwise you can map the categories but it will not block the publication of your catalog'
        example: true
        type: boolean
    type: object
  channelColumn:
    description: The channel column
    properties:
      channelColumnDescription:
        $ref: '#/definitions/channelColumnDescription'
      channelColumnId:
        $ref: '#/definitions/BeezUP.Common.ChannelColumnId'
      channelColumnName:
        $ref: '#/definitions/BeezUP.Common.ChannelColumnName'
      configuration:
        $ref: '#/definitions/channelColumnConfiguration'
      position:
        description: The position of the column starting from 1
        example: 1
        type: integer
      restrictedValues:
        $ref: '#/definitions/channelColumnRestrictedValues'
      showInMapping:
        $ref: '#/definitions/channelColumnShowInMapping'
    required:
      - channelColumnId
      - channelColumnName
      - showInMapping
      - position
      - configuration
    type: object
  channelColumnConfiguration:
    description: The channel column configuration. The BeezUP Column Name is optional. If the BeezUP column is mapped we will indicate the data type and column importance of the BeezUP column.
    properties:
      beezUPColumnName:
        $ref: '#/definitions/BeezUP.Common.BeezUPColumnName'
      columnDataType:
        $ref: '#/definitions/BeezUP.Common.ColumnDataType'
      columnImportance:
        $ref: '#/definitions/BeezUP.Common.ColumnImportance'
    required:
      - columnImportance
      - columnDataType
    type: object
  channelColumnDescription:
    description: The channel column description
    example: 'Please enter the base prices (price per unit) according to <a href="http://www.gesetze-im-internet.de/pangv/__2.html">Article PAngV</a>'
    type: string
  channelColumnRestrictedValues:
    additionalProperties:
      type: string
    description: |
      The restricted values. The key will be the restricted value identifier (format:guid) and the value will be the restriced value
    type: object
  channelColumnShowInMapping:
    description: Indicates if this column must shown in the mapping page or not
    example: true
    type: boolean
  channelCostSettings:
    description: Indicate the default configuration of the cost on this channel.
    properties:
      costType:
        $ref: '#/definitions/costType'
      globalCostValue:
        description: 'In case of global cost type, you have to indicate the cost value.'
        example: 10.21
        format: decimal
        type: number
    required:
      - costType
    type: object
  channelFirstLevelCategory:
    description: The first level category with his sub categories
    properties:
      channelCategoryChannelCode:
        $ref: '#/definitions/channelCategoryChannelCode'
      channelCategoryColumnOverrides:
        $ref: '#/definitions/channelCategoryColumnOverrides'
      channelCategoryDefaultCost:
        $ref: '#/definitions/channelCategoryDefaultCost'
      channelCategoryId:
        $ref: '#/definitions/BeezUP.Common.ChannelCategoryId'
      channelCategoryLevel:
        $ref: '#/definitions/channelCategoryLevel'
      channelCategoryName:
        description: The channel category name
        example: Clothing
        type: string
      subCategories:
        items:
          $ref: '#/definitions/channelCategory'
        type: array
    required:
      - channelCategoryId
      - channelCategoryName
      - channelCategoryLevel
    type: object
  channelHeader:
    description: The available channel
    properties:
      channelId:
        $ref: '#/definitions/BeezUP.Common.ChannelId'
      channelLogoUrl:
        $ref: '#/definitions/BeezUP.Common.HttpUrl'
      channelName:
        $ref: '#/definitions/BeezUP.Common.ChannelName'
      descriptionAvailable:
        default: false
        description: Indicates if we have more detailed information about this channel
        example: true
        type: boolean
      isMarketplace:
        default: false
        description: Indicates if the channel is a marketplace
        example: true
        type: boolean
      links:
        $ref: '#/definitions/channelHeaderLinks'
    required:
      - channelId
      - channelName
      - channelLogoUrl
      - descriptionAvailable
      - links
      - isMarketplace
    type: object
  channelHeaderLinks:
    description: The links related to an available channel
    properties:
      self:
        $ref: '#/definitions/BeezUP.Common.Link3'
    required:
      - self
    type: object
  channelInfo:
    properties:
      homeUrl:
        description: The channel home url
        example: 'http://www.amazon.fr'
        format: uri
        type: string
      logoUrl:
        description: The channel logo url
        example: 'http://beezupcdn.blob.core.windows.net/comparators/Amazon%2520Direct%2520FRA.png'
        format: uri
        type: string
      name:
        description: The channel name
        example: Amazon Direct FRA
        type: string
      sectors:
        description: The sector list related to a channel
        example:
          - BRICOLAGE
          - INFO
          - GENERALIST
        items:
          type: string
        type: array
      types:
        description: The type list related to a channel
        example:
          - Marketplace
        items:
          type: string
        type: array
    required:
      - name
      - homeUrl
      - logoUrl
      - types
    type: object
  channelInfoList:
    properties:
      channels:
        items:
          $ref: '#/definitions/channelInfo'
        type: array
      links:
        properties:
          self:
            $ref: '#/definitions/links.GetChannelsLink'
        type: object
    type: object
  channelRootCategory:
    description: Get channel first level category list
    properties:
      firstLevelCategories:
        items:
          $ref: '#/definitions/channelFirstLevelCategory'
        type: array
    required:
      - firstLevelCategories
    type: object
  city:
    description: Your address city
    example: New-York
    type: string
  clearMerchantOrderInfoListRequest:
    properties:
      orders:
        example:
          - accountId: 1234
            beezUPOrderId: '00000000000000000000000000000000000000000000000'
            marketplaceTechnicalCode: Amazon
          - accountId: 5678
            beezUPOrderId: '00000000000000000000000000000000000000000000000'
            marketplaceTechnicalCode: Amazon
          - accountId: 9876
            beezUPOrderId: '00000000000000000000000000000000000000000000000'
            marketplaceTechnicalCode: Ebay
        items:
          $ref: '#/definitions/orderIdentifier'
        maxItems: 100
        minItems: 1
        type: array
        uniqueItems: true
    required:
      - orders
    type: object
  clickIncludedAndAdditionalClickPrice:
    properties:
      additionalClickPrice:
        description: The additional click price
        format: double
        type: number
      clickIncluded:
        description: The click included
        format: int32
        type: integer
    type: object
  clickIncludedAndVariablePrice:
    properties:
      clickIncluded:
        description: Click included
        format: int32
        type: integer
      variablePrice:
        description: The pricing applied for this range
        format: double
        type: number
    type: object
  columnConfiguration:
    description: Indicates the configuration applied on the column (catalog or custom) during the importation process.
    properties:
      beezUPColumnName:
        $ref: '#/definitions/BeezUP.Common.BeezUPColumnName'
      canBeTruncated:
        $ref: '#/definitions/canBeTruncated'
      columnCultureName:
        $ref: '#/definitions/columnCultureName'
      columnDataType:
        $ref: '#/definitions/BeezUP.Common.ColumnDataType'
      columnFormat:
        $ref: '#/definitions/columnFormat'
      columnImportance:
        $ref: '#/definitions/BeezUP.Common.ColumnImportance'
      displayGroupName:
        $ref: '#/definitions/displayGroupName'
    required:
      - columnImportance
      - columnDataType
    type: object
  columnCultureName:
    description: 'If non null, culture used to parse the value to the storage type of this column\r\n will be used for parsing and for consolidation proces'
    example: fr-FR
    type: string
  columnFormat:
    description: 'If non null, format used to parse the value to the storage type of this column\r\n will be used for parsing and for consolidation proces'
    example: MM/dd/yyyy
    type: string
  columnId:
    description: The catalog column identifier
    example: 8f6671d6-a9bc-4de0-a0c4-4643b0c3f871
    format: guid
    type: string
  columnMappingStatus:
    enum:
      - warning
      - success
      - failed
    example: success
    type: string
  company:
    description: Your company name
    example: My super company
    type: string
  companyInfo:
    properties:
      accountingEmails:
        $ref: '#/definitions/accountingEmails'
      address:
        $ref: '#/definitions/address'
      city:
        $ref: '#/definitions/city'
      company:
        $ref: '#/definitions/company'
      countryIsoCodeAlpha3:
        $ref: '#/definitions/BeezUP.Common.CountryIsoCodeAlpha3'
      postalCode:
        $ref: '#/definitions/postalCode'
      vatNumber:
        $ref: '#/definitions/vatNumber'
    required:
      - company
      - address
      - postalCode
      - city
      - countryIsoCodeAlpha3
    type: object
  compareOptions:
    default: None
    description: Indicate how the product sku are compared for the duplication check.
    enum:
      - None
      - IgnoreCase
      - IgnoreNonSpace
      - IgnoreSymbols
      - OrdinalIgnoreCase
      - StringSort
      - Ordinal
    example: IgnoreCase
    type: string
  compressionFormatStrategy:
    description: Indicate the compression type
    enum:
      - None
      - Zip
      - TarGz
      - Gzip
      - Bzip2
      - Rar
    example: None
    type: string
  computeExpressionRequest:
    description: The request message to compute an expression based on the provided product values
    properties:
      encryptedExpression:
        $ref: '#/definitions/encryptedExpression'
      productValues:
        $ref: '#/definitions/productValues'
    required:
      - productValues
      - encryptedExpression
    type: object
  configureAutoImportIntervalRequest:
    description: The message request to configure the auto import interval
    properties:
      interval:
        description: 'Indicate the interval in time span. (i.e. "04:00:00" for every 4 hours)'
        example: '04:00:00'
        pattern: '(00:1[5-9])|(00:[2-5][0-9])|(0[1-9]:[0-5][0-9])|(1[0-9]:[0-5][0-9])|(2[0-3]:[0-5][0-9])'
        type: string
    required:
      - interval
    type: object
  configureAutomaticTransitionRequest:
    properties:
      automaticTransitions:
        items:
          $ref: '#/definitions/automaticTransition'
        minLength: 1
        type: array
    required:
      - automaticTransitions
    type: object
  configureCatalogColumnCatalogRequest:
    description: The request to configure a catalog column
    properties:
      catalogColumn:
        $ref: '#/definitions/catalogColumn'
    required:
      - catalogColumn
    type: object
  contractBillingPeriodInfo:
    description: Describe the billing period information related to the offer.
    properties:
      amountBillingPeriodDiscount:
        description: The amount discounted related to the billing period
        example: 20
        format: double
        type: number
      billingPeriodInMonth:
        $ref: '#/definitions/billingPeriodInMonth'
      billingPeriodPercentDiscount:
        description: The discount percent related to the billing period
        example: 10
        format: double
        type: number
    type: object
  contractBonusInfo:
    description: Describe the bonus information related to your current contract.
    properties:
      bonuses:
        items:
          $ref: '#/definitions/bonusInfo'
        type: array
    required:
      - bonuses
    type: object
  contractClickInfo:
    description: Describe the click information related to the offer.
    properties:
      additionalClickPrice:
        description: The addition click price in the offer
        example: 0.001
        format: double
        type: number
      clickIncluded:
        description: The click included in the offer
        example: 5000
        format: int32
        type: integer
      initialOfferClickIncluded:
        description: The click included in your current contract
        example: 5000
        format: int32
        type: integer
    type: object
  contractCommitmentInfo:
    description: Describe the commitment information related to the offer.
    properties:
      commercialCreatorUserId:
        description: The commercial that is responsible of the creation of your account
        example: 6e07814d-26a9-494b-91b2-e5ed0b9aba8c
        format: guid
        type: string
      commercialUserId:
        description: Your current commercial user id
        example: 0ddc2b79-10fe-4071-8161-42faa897082f
        format: guid
        type: string
      commitmentCalculatedFinishDate:
        description: The commitment end date related to the offer
        example: '2017-06-02'
        format: date
        type: string
      commitmentPeriodInMonth:
        description: The commitment period in month related to the offer
        example: 1
        format: int32
        type: integer
      contractType:
        description: 'Internal usage: Old offer type. Your contract type'
        example: 1234
        format: int32
        type: integer
      couponOfferCode:
        $ref: '#/definitions/couponOfferCode'
      currentContractId:
        description: Your current contract id
        example: dce56457-aa23-478d-8d76-b56eb9be799f
        format: guid
        type: string
      currentContractTerminationDate:
        description: The current contract termination date
        example: '2017-06-02'
        format: date
        type: string
      currentCustomerPaymentMethod:
        $ref: '#/definitions/paymentMethod'
      fixedAndVariableClickInfo:
        $ref: '#/definitions/fixedAndVariableClickModelInfo'
      isCustomerWantsToTerminateHisContract:
        description: 'If true, this means you want to leave us and that''s sad... :''-('
        example: false
        type: boolean
      isModelMustBeTransmittedInNewContract:
        description: 'Internal usage: Old offer type. Is the current contract model needs to be converted into a new contract type'
        example: false
        type: boolean
      minBillingPeriodInMonths:
        description: The minimum billing period in month authorized for this offer.
        example: 1
        format: int32
        type: integer
      model:
        description: 'Interal usage: Old offer type. The model description'
        example: BLABLA
        type: string
      newContractStartDate:
        description: The start date related to the offer
        example: '2017-05-01T13:02:24'
        format: date-time
        type: string
      offerId:
        $ref: '#/definitions/offerId'
      offerName:
        description: The offer Name
        example: Premium
        type: string
      paymentDelayInDays:
        description: The payment delay in days related to the offer
        example: 1
        format: int32
        type: integer
      paymentMethodAuthorized:
        $ref: '#/definitions/paymentMethod'
      requestedPaymentMethod:
        $ref: '#/definitions/paymentMethod'
      trialPeriodFinishDate:
        description: The trial period end date related to the offer
        format: date
        type: string
      trialPeriodInMonth:
        description: The trial period in month related to the offer
        example: 0
        format: int32
        type: integer
      variableModelInfo:
        $ref: '#/definitions/variableModelInfo'
    type: object
  contractDiscountInfo:
    description: Describe the discount information related to the offer.
    properties:
      amountCodePromoDiscount:
        description: The discount amount
        example: 101.42
        format: double
        type: number
      amountCodePromoDiscountPerMonth:
        description: The amount discounted per month
        example: 101.42
        format: double
        type: number
      couponDiscountCode:
        description: The discount code
        example: I-LOVE-BEEZUP
        type: string
      couponDiscountId:
        description: 'Internal use: The discount id'
        example: 1
        format: int32
        type: integer
      customerHasActualDiscount:
        description: Do you have currently a discount on your contract ?
        example: true
        type: boolean
      discountDurationInMonth:
        description: Duration of the discount in month
        example: 1
        format: int32
        type: integer
      isCouponDiscountLinkedToCouponOffer:
        description: Is this discount is related to a coupon offer
        example: true
        type: boolean
      percentDiscount:
        description: Percentage of the discount
        example: 20
        format: double
        type: number
      promotionalCodeValidity:
        $ref: '#/definitions/promotionalCodeValidity'
    type: object
  contractId:
    description: Your contract identifier
    example: 7098487a-86f6-4322-b8a5-b67f7363b3e7
    format: guid
    type: string
  contractInfo:
    description: Describe the conditions of a contract
    properties:
      additionalClickPrice:
        description: Additional click price
        format: double
        type: number
      billingPeriodInMonth:
        description: The billing period in month
        format: int32
        type: integer
      billingPeriodPercentDiscount:
        description: The percent discount related to the billing period
        format: double
        type: number
      clickIncluded:
        description: The click included
        format: int32
        type: integer
      commitmentCalculatedFinishUtcDate:
        description: The calculated end date of commitment
        format: date-time
        type: string
      commitmentPeriodInMonth:
        description: The commitment period in month
        format: int32
        type: integer
      contractId:
        $ref: '#/definitions/contractId'
      currencyCode:
        $ref: '#/definitions/BeezUP.Common.CurrencyCode'
      discountDurationInMonth:
        description: The discount duration in month
        format: int32
        type: integer
      discountEndUtcDate:
        description: The end of your discount
        format: date-time
        type: string
      fixedAndVariableClickInfo:
        $ref: '#/definitions/fixedAndVariableClickModelInfo'
      fixedPrice:
        description: The fixed price of your contract
        format: double
        type: number
      ipUserCreation:
        description: The IP of the user who creates the contract
        type: string
      ipUserModification:
        description: The IP of the user who modified the contract
        type: string
      isCommitmentRenewalAutomatically:
        description: Is commitment is automatically renewed
        type: boolean
      isModifiableContract:
        description: Is the contract is modifiable ?
        type: boolean
      offerId:
        $ref: '#/definitions/offerId'
      offerName:
        description: The offer name based on /offers
        type: string
      percentDiscount:
        description: The percent of the discount
        format: double
        type: number
      startUtcDate:
        description: The start date of your contract
        format: date-time
        type: string
      storeCount:
        $ref: '#/definitions/storeCount'
      trialPeriodInMonth:
        description: The trial period in month
        format: int32
        type: integer
      variableModelInfo:
        $ref: '#/definitions/variableModelInfo'
    type: object
  contractMoneyInfo:
    description: Describe the pricing information related to the offer.
    properties:
      amountExcludingTaxesAndExcludingCodePromoDiscountIncludingBillingPeriodDiscount:
        description: The amount excluding taxes and excluding code promo discount including billing period discount.
        format: double
        type: number
      amountExcludingTaxesAndExcludingDiscounts:
        description: The amount excluding taxes and excluding discounts.
        format: double
        type: number
      amountExcludingTaxesIncludingDiscounts:
        description: The amount excluding taxes including discounts.
        format: double
        type: number
      amountExcludingTaxesIncludingDiscountsPerMonth:
        description: The amount excluding taxes including discounts per month.
        format: double
        type: number
      amountIncludingTaxesExcludingDiscountIncludingBillingPeriodDiscount:
        description: The amount including taxes excluding discount including billing period discount.
        format: double
        type: number
      amountIncludingTaxesIncludingDiscounts:
        description: The amount including taxes including discounts.
        format: double
        type: number
      amountTaxesExcludingDiscountIncludingBillingPeriodDiscount:
        description: The taxes excluding discount including billing period discount.
        format: double
        type: number
      amountTaxesIncludingDiscounts:
        description: Taxes including discounts.
        format: double
        type: number
      currencyCode:
        $ref: '#/definitions/BeezUP.Common.CurrencyCode'
      initialOfferFixedPrice:
        description: The initial offer fixed price.
        format: double
        type: number
      vatPercent:
        description: The VAT percent.
        format: double
        type: number
    type: object
  contractStoreInfo:
    description: Describe the store information related to the offer.
    properties:
      additionalStorePrice:
        description: The additional store price.
        format: double
        type: number
      maxStoreCount:
        description: The maximum store count related to the offer.
        format: int32
        type: integer
      minStoreCount:
        description: The minimum store count related to the offer.
        format: int32
        type: integer
      ownedStoreCount:
        description: The owned store count.
        format: int32
        type: integer
      storeCount:
        $ref: '#/definitions/storeCount'
      storeIncluded:
        description: The store count included in the offer.
        format: int32
        type: integer
    type: object
  contractTerminationReason:
    description: 'The termination reason, if your current contract is scheduled to be terminated.'
    example: 'I''m crazy, I want to leave your splendid service...'
    type: string
  contractTerminationReasonType:
    description: 'The contract termination reason type identifier, if your current contract is scheduled to be terminated. The value is based on the list of values /user/lov/ContractTerminationReason'
    example: 1
    format: int32
    type: integer
    x-lov: ContractTerminationReason
  contracts:
    properties:
      current:
        $ref: '#/definitions/currentContractInfo'
      links:
        $ref: '#/definitions/contractsLinks'
      next:
        $ref: '#/definitions/nextContractInfo'
    required:
      - links
    type: object
  contractsLinks:
    properties:
      create:
        $ref: '#/definitions/links.createContractLink'
      self:
        $ref: '#/definitions/links.getContractsLink'
    type: object
  costSettings:
    description: |
      If this property is not indicated please force the user to configure the cost settings.
      Defines the cost type you have on this channel with the cost value.
    properties:
      costType:
        $ref: '#/definitions/costType'
      globalCostValue:
        description: 'In case of global cost type, you have to indicate the cost value.'
        example: 10.21
        format: decimal
        type: number
    required:
      - costType
    type: object
  costType:
    description: |
      CPC means cost per click.
      CPA means cost per action.
      You can have CPC/CPA with a global cost value.
      You can have CPC/CPA by category the cost value MUST be null
      You can have global fixed price.
    enum:
      - CPC_Global
      - CPA_Global
      - CPC_ByCategory
      - CPA_ByCategory
      - Fixed_Global
    example: Fixed_Global
    type: string
  couponDiscountCode:
    description: The coupon discount code
    example: I-LOVE-BEEZUP
    type: string
  couponOfferCode:
    description: Your special coupon offer identifier
    example: 04efc310-bc25-4710-a83a-faf200284fe5
    format: guid
    type: string
  createContract:
    allOf:
      - $ref: '#/definitions/offerRequest'
  createContractResponse:
    properties:
      info:
        $ref: '#/definitions/BeezUP.Common.InfoSummaries'
      links:
        $ref: '#/definitions/createContractResponseLinks'
    type: object
  createContractResponseLinks:
    properties:
      contracts:
        $ref: '#/definitions/links.getContractsLink'
      self:
        $ref: '#/definitions/links.createContractLink'
    type: object
  createCustomColumnRequest:
    description: The request message to create a custom column
    properties:
      displayGroupName:
        $ref: '#/definitions/displayGroupName'
      encryptedBlocklyExpression:
        $ref: '#/definitions/encryptedBlocklyExpression'
      encryptedExpression:
        $ref: '#/definitions/encryptedExpression'
      userColumnName:
        $ref: '#/definitions/userColumName'
    required:
      - userColumnName
      - encryptedExpression
      - encryptedBlocklyExpression
      - displayGroupName
    type: object
  createRuleRequest:
    properties:
      endUtcDate:
        description: The end validity utc date of the rule
        example: '2017-09-30T10:42:40.001Z'
        format: date-time
        type: string
      optimisationActionName:
        $ref: '#/definitions/optimisationActionName'
      reportFilterId:
        description: The report filter to use for the rule
        example: fb19c53c-2f63-4262-9d94-2d7faa500acd
        format: guid
        type: string
      ruleName:
        description: The name of the rule
        example: My rule
        type: string
      startUtcDate:
        description: The start validity utc date of the rule
        example: '2016-08-29T09:12:33.001Z'
        format: date-time
        type: string
    required:
      - optimisationActionName
      - ruleName
      - reportFilterId
    type: object
  createStoreRequest:
    description: 'The request to create a store. The store identifier is optional, if null it will be automatically computed.'
    properties:
      countryIsoCodeAlpha3:
        $ref: '#/definitions/storeCountryIsoCodeAlpha3'
      id:
        $ref: '#/definitions/BeezUP.Common.StoreId'
      name:
        $ref: '#/definitions/storeName'
      sectors:
        $ref: '#/definitions/storeSectors'
      url:
        $ref: '#/definitions/storeUrl'
    required:
      - name
      - url
      - countryIsoCodeAlpha3
      - sectors
    type: object
  credential:
    description: Provides the credentials
    properties:
      password:
        description: The password
        example: MyPassword
        format: password
        type: string
      userName:
        description: The user name
        example: MyLogin
        type: string
    required:
      - userName
    type: object
  creditCardInfo:
    properties:
      cardNumber:
        $ref: '#/definitions/cardNumber'
      cardVerificationCode:
        $ref: '#/definitions/cardVerificationCode'
      expirationMonth:
        $ref: '#/definitions/expirationMonth'
      expirationYear:
        $ref: '#/definitions/expirationYear'
    required:
      - cardNumber
      - cardVerificationCode
      - expirationMonth
      - expirationYear
    type: object
  creditCardInfoResponse:
    properties:
      creditCardInfo:
        $ref: '#/definitions/creditCardInfoWithCardType'
      currentPaymentMethod:
        $ref: '#/definitions/paymentMethod'
      info:
        $ref: '#/definitions/BeezUP.Common.InfoSummaries'
      links:
        $ref: '#/definitions/creditCardInfoResponseLinks'
    required:
      - links
      - currentPaymentMethod
    type: object
  creditCardInfoResponseLinks:
    description: The different actions you can make on this offer
    properties:
      saveCreditCardInfo:
        $ref: '#/definitions/links.saveCreditCardInfoLink'
      self:
        $ref: '#/definitions/links.getCreditCardInfoLink'
    required:
      - self
      - saveCreditCardInfo
    type: object
  creditCardInfoWithCardType:
    properties:
      cardNumber:
        $ref: '#/definitions/cardNumber'
      cardType:
        description: 'Your credit card type. Example: VISA, MasterCard, etc...'
        example: VISA
        type: string
      expirationMonth:
        $ref: '#/definitions/expirationMonth'
      expirationYear:
        $ref: '#/definitions/expirationYear'
    required:
      - cardNumber
      - expirationMonth
      - expirationYear
      - cardType
  currentContractInfo:
    allOf:
      - $ref: '#/definitions/contractInfo'
      - description: Get the conditions of your current contract
        properties:
          links:
            $ref: '#/definitions/currentContractInfoLinks'
        required:
          - links
        type: object
  currentContractInfoLinks:
    properties:
      disable:
        $ref: '#/definitions/links.terminateCurrentContractLink'
      reenable:
        $ref: '#/definitions/links.reactivateCurrentContractLink'
    type: object
  customColumn:
    description: The custom column configuration
    properties:
      configuration:
        $ref: '#/definitions/columnConfiguration'
      id:
        $ref: '#/definitions/columnId'
      links:
        $ref: '#/definitions/customColumnLinks'
      userColumName:
        $ref: '#/definitions/userColumName'
    required:
      - id
      - userColumName
      - configuration
      - links
    type: object
  customColumnLinks:
    properties:
      delete:
        $ref: '#/definitions/links.Catalog_DeleteCustomColumnLink'
      expression:
        $ref: '#/definitions/links.Catalog_GetCustomColumnExpressionLink'
      rename:
        $ref: '#/definitions/links.Catalog_ChangeCustomColumnUserNameLink'
      save:
        $ref: '#/definitions/links.Catalog_SaveCustomColumnLink'
      saveExpression:
        $ref: '#/definitions/links.Catalog_ChangeCustomColumnExpressionLink'
    required:
      - save
      - delete
      - rename
      - expression
      - saveExpression
    type: object
  customColumnList:
    properties:
      customColumns:
        items:
          $ref: '#/definitions/customColumn'
        type: array
      links:
        $ref: '#/definitions/customColumnListLinks'
    required:
      - links
      - customColumns
    type: object
  customColumnListLinks:
    properties:
      add:
        $ref: '#/definitions/links.Catalog_SaveCustomColumnLink'
      self:
        $ref: '#/definitions/links.Catalog_GetCustomColumnsLink'
    required:
      - self
    type: object
  customerIndex:
    description: The index of the customer API
    properties:
      links:
        $ref: '#/definitions/customerIndexLinks'
      lovLinks:
        $ref: '#/definitions/customerIndexLovLinks'
    required:
      - links
      - lovLinks
    type: object
  customerIndexLinks:
    description: Gives you want you can do on this API
    properties:
      accountInfo:
        $ref: '#/definitions/links.getUserAccountInfoLink'
      billingPeriods:
        $ref: '#/definitions/links.getBillingPeriodsLink'
      contracts:
        $ref: '#/definitions/links.getContractsLink'
      friendInfo:
        $ref: '#/definitions/links.getFriendInfoLink'
      getOffer:
        $ref: '#/definitions/links.getOfferLink'
      invoices:
        $ref: '#/definitions/links.getInvoicesLink'
      logout:
        $ref: '#/definitions/links.logoutLink'
      self:
        $ref: '#/definitions/links.GetCustomerIndexLink'
      standardOffers:
        $ref: '#/definitions/links.getStandardOffersLink'
      stores:
        $ref: '#/definitions/links.getStoresLink'
    required:
      - self
      - accountInfo
      - billingPeriods
      - standardOffers
      - friendInfo
    type: object
  customerIndexLovLinks:
    properties:
      activeOfferLov:
        $ref: '#/definitions/BeezUP.Common.LOVLink3'
      beezUPTimeZoneLov:
        $ref: '#/definitions/BeezUP.Common.LOVLink3'
      contractTerminationReasonLov:
        $ref: '#/definitions/BeezUP.Common.LOVLink3'
      countryLov:
        $ref: '#/definitions/BeezUP.Common.LOVLink3'
      customerStatusLov:
        $ref: '#/definitions/BeezUP.Common.LOVLink3'
      invoicePaymentStatusLov:
        $ref: '#/definitions/BeezUP.Common.LOVLink3'
      offerLov:
        $ref: '#/definitions/BeezUP.Common.LOVLink3'
      storeCountryLov:
        $ref: '#/definitions/BeezUP.Common.LOVLink3'
      storeSectorLov:
        $ref: '#/definitions/BeezUP.Common.LOVLink3'
    type: object
  dateSearchType:
    default: Modification
    description: Indicates on which date you want to make the filter
    enum:
      - Purchase
      - Modification
      - MarketPlaceModification
    type: string
  detectedCatalogColumn:
    allOf:
      - $ref: '#/definitions/catalogColumn'
      - description: The catalog column detected during the first parsing step
        properties:
          detected:
            description: Indicates if the column is detected or is from the current catalog
            example: true
            type: boolean
          existingConfiguration:
            $ref: '#/definitions/existingCatalogColumnConfiguration'
          links:
            $ref: '#/definitions/detectedCatalogColumnLinks'
        required:
          - detected
          - links
        type: object
  detectedCatalogColumnLinks:
    properties:
      configure:
        $ref: '#/definitions/links.Importation_ConfigureCatalogColumnLink'
      ignore:
        $ref: '#/definitions/links.Importation_IgnoreColumnLink'
      map:
        $ref: '#/definitions/links.Importation_MapCatalogColumnLink'
      reattend:
        $ref: '#/definitions/links.Importation_ReattendColumnLink'
      unmap:
        $ref: '#/definitions/links.Importation_UnmapCatalogColumnLink'
    type: object
  detectedCatalogColumnList:
    description: The list of detected catalog column
    properties:
      detectedCatalogColumns:
        description: Contains all deteted catalog columns
        items:
          $ref: '#/definitions/detectedCatalogColumn'
        type: array
      links:
        $ref: '#/definitions/detectedCatalogColumnListLinks'
    required:
      - links
    type: object
  detectedCatalogColumnListLinks:
    properties:
      self:
        $ref: '#/definitions/links.Importation_GetDetectedCatalogColumnsLink'
    required:
      - self
    type: object
  displayGroupName:
    description: Indicate the display group name where the column must be putted
    example: Category
    type: string
  downloadCatalogStrategy:
    description: 'Indicate the download strategy (simple uri, ftps, ftplatest file, etc...)'
    enum:
      - SimpleUri
      - FtpLatest
      - Sftp
      - SftpLatest
      - Ftps
      - FtpsLatest
      - Local
    example: SimpleUri
    type: string
  duplicateProductValueConfiguration:
    description: Describe how you want to manage the duplication of the product value
    properties:
      compareOptions:
        $ref: '#/definitions/compareOptions'
      strategy:
        $ref: '#/definitions/duplicateProductValueStrategy'
    required:
      - strategy
      - compareOptions
    type: object
  duplicateProductValueStrategy:
    default: None
    description: Indicate the duplicate product sku strategy.
    enum:
      - None
      - SkipAllDuplicateProducts
      - KeepFirstDuplicateProductOnly
      - FailImportationIfAnyDuplicateProduct
    example: KeepFirstDuplicateProductOnly
    type: string
  encryptedBlocklyExpression:
    description: The encrypted XML Blockly representation of the expression
    example: 'apokpoa,opz,sixsoisiosnoisn'
    type: string
  encryptedExpression:
    description: The encrypted excel expression of the column
    example: uziushdczaniodnndonisodndsiondsoidsndoin
    type: string
  errorResponseMessagePaymentRequired:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.ErrorResponseMessage'
      - properties:
          links:
            $ref: '#/definitions/errorResponseMessagePaymentRequiredLinks'
        required:
          - links
        type: object
  errorResponseMessagePaymentRequiredLinks:
    properties:
      offer:
        $ref: '#/definitions/links.getOfferLink'
    required:
      - offer
    type: object
  etag:
    description: |
      ETag value to identify the order.\
      This information is required for the operation GetOrder and ChangeOrder.\
      For more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3
    example: '"ca071a4580129f932a03971968ffef69"'
    type: string
  exclusionFilter:
    description: The exclusion filter
    properties:
      channelColumnId:
        $ref: '#/definitions/BeezUP.Common.ChannelColumnId'
      enabled:
        description: indicates if the filter is currently enable.
        example: true
        type: boolean
      groupId:
        description: Indicate the filter's group. All filters in the same group means an "AND" operation in the filter group
        example: d9833f4b-718a-436f-bab5-89da3d21bf60
        format: guid
        type: string
      name:
        $ref: '#/definitions/exclusionFilterName'
      operatorName:
        $ref: '#/definitions/exclusionFilterOperatorName'
      position:
        description: The position of the exclusion filter
        example: 1
        format: int32
        minimum: 1
        type: integer
      positionInGroup:
        description: Indicate the filter group position. This information is used for the UI purpose and must be unique in the filter group.
        example: 1
        format: int32
        minimum: 1
        type: integer
      value:
        description: The value indicate by the user when the filter operation requires it.
        example: sony
        type: string
    required:
      - name
      - position
      - groupId
      - positionInGroup
      - channelColumnId
      - operatorName
      - enabled
    type: object
  exclusionFilterName:
    description: The exclusion filter name
    example: Exclude sony products
    type: string
  exclusionFilterOperator:
    description: The exclusion filter operator
    properties:
      expectedChannelColumnDataType:
        $ref: '#/definitions/exclusionFilterOperatorDataType'
      expectedValueDataType:
        $ref: '#/definitions/exclusionFilterOperatorDataType'
      name:
        $ref: '#/definitions/exclusionFilterOperatorName'
      valueRequired:
        description: This operator requires a value
        example: true
        type: boolean
    type: object
  exclusionFilterOperatorDataType:
    default: string
    description: Data type of the operator
    enum:
      - string
      - number
    example: string
    type: string
  exclusionFilterOperatorName:
    description: The exclusion filter operator name
    example: Contains
    type: string
    x-lov: ChannelCatalogExclusionFilterOperator
  exclusionFilters:
    description: The exclusion filter list
    items:
      $ref: '#/definitions/exclusionFilter'
    type: array
  exclusionFiltersResponse:
    properties:
      exclusionFilters:
        $ref: '#/definitions/exclusionFilters'
      links:
        $ref: '#/definitions/exclusionFiltersResponseLinks'
    required:
      - links
    type: object
  exclusionFiltersResponseLinks:
    properties:
      configure:
        $ref: '#/definitions/links.ConfigureChannelCatalogExclusionFiltersLink'
      self:
        $ref: '#/definitions/links.GetChannelCatalogExclusionFiltersLink'
    required:
      - self
    type: object
  executionId:
    description: The execution identifier of the catalog importation
    example: bf3bc288-604c-4267-925e-66b1a15dca75
    format: guid
    type: string
  executionUUID:
    description: The execution identifier
    example: 8D4176FA78D5A7Fffa91e9edc694ec5858be9a1b109507c
    format: uuid
    type: string
  existingCatalogColumnConfiguration:
    description: In case your catalog column already exists we indicate you the existing configuration.
    properties:
      configuration:
        $ref: '#/definitions/columnConfiguration'
      userColumName:
        $ref: '#/definitions/userColumName'
    required:
      - userColumName
      - configuration
    type: object
  expirationMonth:
    description: Expiration Month
    example: 12
    format: int32
    maximum: 12
    minimum: 1
    type: integer
  expirationYear:
    description: Expiration Year
    example: 2017
    format: int32
    maximum: 9000
    minimum: 2017
    type: integer
  exportOrderListFormat:
    default: csv
    description: The type of the file to export
    enum:
      - csv
    example: csv
    type: string
  exportOrderListRequest:
    description: The message request to export order list. The store identifier is requested to regroup the exportations.
    properties:
      format:
        $ref: '#/definitions/exportOrderListFormat'
      orderListRequestWithoutPagination:
        $ref: '#/definitions/orderListRequestWithoutPagination'
      storeId:
        $ref: '#/definitions/BeezUP.Common.StoreId'
    required:
      - storeId
      - orderListRequestWithoutPagination
    type: object
  externalLinks.Catalog_GetBeezUPColumnsLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/beezUPColumns
          method: GET
  externalLinks.GetChannelCatalogMarketplaceSettingsLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/marketplaces/channelcatatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/settings
          method: GET
  externalLinks.GetExternalConfigurationPageLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
  feedType:
    description: The Feed Type
    enum:
      - Products
      - Inventory
      - Pricing
      - Images
      - Relationships
      - Unpublish
      - Offers
    example: Offers
    type: string
    x-lov: MarketplacePublicationFeedType
  fileFormatStrategy:
    description: CSV or XML
    enum:
      - Unknown
      - Csv
      - Xml
      - Json
    example: Csv
    type: string
  firstName:
    description: Your first name
    example: Paul
    type: string
  fixedAndVariableClickModelInfo:
    description: 'Internal usage: Old offer type. Describe the fix and variable model information'
    properties:
      clickIncludedAndAdditionalClickPrices:
        items:
          $ref: '#/definitions/clickIncludedAndAdditionalClickPrice'
        type: array
    required:
      - clickIncludedAndAdditionalClickPrices
    type: object
  friendCountryIsoCodeAlpha3:
    description: Your friend's user country iso code alpha 3
    example: USA
    type: string
    x-lov: Country
  friendEmail:
    description: Your friend's user email
    example: humphray.bogart@yahoo.ma
    format: email
    pattern: '^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$'
    type: string
  friendProfilePictureUrl:
    description: Your friend's user profile picture url
    example: 'https://www.biography.com/.image/c_fill,cs_srgb,dpr_1.0,g_face,h_300,q_80,w_300/MTE4MDAzNDEwNDU3MjMyOTEw/humphrey-bogart-9217486-1-402.jpg'
    pattern: '^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$'
    type: string
  functionality:
    properties:
      code:
        description: The functionality code
        example: MARKETMANA
        type: string
      order:
        description: 'UI purpose: Indicate the position of the functionality'
        example: 1
        format: int32
        type: integer
    required:
      - code
      - order
    type: object
  functionalityRightInfo:
    description: Describe the rights for a functionality
    properties:
      functionalityCode:
        description: The functionality code
        example: COMPAMANA
        type: string
      maxValueInterger:
        description: The max value for this functionality code considering your rights
        example: 10
        type: integer
      unlimited:
        description: If you can use this functionality unlimitedly
        example: true
        type: boolean
    required:
      - functionalityCode
    type: object
  generalSettings:
    description: Represents the general settings of your channel catalog
    properties:
      acceptToPublishInfo:
        description: If true then you authorize disclosure of my statistics generated from clicks and sales
        example: true
        type: boolean
      activeBeezUPTracking:
        default: true
        description: Activate BeezUP tracking for my statistics (checked by default)
        example: true
        type: boolean
      doNotExportOutOfStockProducts:
        description: |
          Do not export "out of stock" products. Note: this option is not taken into account by the counter.
        example: true
        type: boolean
      useBid:
        description: Activate bidding for this channel
        example: false
        type: boolean
    required:
      - acceptToPublishInfo
      - useBid
      - doNotExportOutOfStockProducts
      - activeBeezUPTracking
    type: object
  getChannelCatalogProductInfoListRequest:
    properties:
      catalogCategoryFilter:
        $ref: '#/definitions/BeezUP.Common.CatalogCategoryFilter'
      channelCategoryFilter:
        $ref: '#/definitions/BeezUP.Common.ChannelCategoryFilter'
      criteria:
        $ref: '#/definitions/productSetVisibilityCriteria'
      overridden:
        description: Search overridden products. If null the filter will not be taken in account.
        example: true
        type: boolean
      pageNumber:
        example: 1
        format: int32
        minimum: 1
        type: integer
      pageSize:
        example: 100
        format: int32
        minimum: 100
        type: integer
      productFilters:
        $ref: '#/definitions/BeezUP.Common.ProductFilters'
    required:
      - pageNumber
      - pageSize
      - criteria
    type: object
  getProductsRequest:
    description: The request message to get products based on these filters
    properties:
      categoryPath:
        $ref: '#/definitions/BeezUP.Common.CatalogCategoryPath'
      columnIdList:
        items:
          $ref: '#/definitions/BeezUP.Common.CatalogColumnId'
        maxItems: 5
        minItems: 1
        type: array
      exists:
        description: Search for existing products or not. If null you will received both.
        example: true
        type: boolean
      pageNumber:
        $ref: '#/definitions/BeezUP.Common.PageNumber'
      pageSize:
        $ref: '#/definitions/BeezUP.Common.PageSize'
      productIdList:
        description: Filter with a list of product identifier
        items:
          $ref: '#/definitions/BeezUP.Common.ProductId'
        type: array
      sku:
        description: Search for products containing this SKU (merchant product dentifier).
        example: MySku123
        type: string
      title:
        description: Search for products containing this title
        example: Frigo
        type: string
    required:
      - pageNumber
      - pageSize
      - columnIdList
    type: object
  globalPerformanceIndicatorByChannel:
    properties:
      channel:
        $ref: '#/definitions/BeezUP.Common.ChannelBasicInfo'
      globalPerformanceIndicator:
        description: Indicates the global performance indicator for this channel
        example: 10.42
        type: number
    required:
      - channel
      - globalPerformanceIndicator
    type: object
  gravatarProfilePictureUrl:
    description: Indicate the url of your picture profil based on gravatar
    example: 'https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?d=mm'
    pattern: '^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$'
    type: string
  harvestOrderReporting:
    description: The reporting related to a harvest order operation
    properties:
      beezUPForcedStatus:
        description: The marketplace order status forced by BeezUP during the order change oepration. This could happend when there is no status on the marketplace side.
        example: In_progress_3
        type: string
      beezUPStatus:
        $ref: '#/definitions/beezUPOrderStatus'
      creationUtcDate:
        description: The creation UTC date of the execution
        example: '2017-04-01T13:10:03Z'
        format: date-time
        type: string
      errorMessage:
        description: The warning message during the execution
        example: This is an error message
        type: string
      executionUUID:
        $ref: '#/definitions/executionUUID'
      lastUpdateUtcDate:
        description: The last update UTC date of the execution
        example: '2017-04-01T13:10:05Z'
        format: date-time
        type: string
      marketplaceStatus:
        description: The order marketplace status
        example: In_progress_3
        type: string
      processingStatus:
        description: The processing status of the execution
        example: Done
        type: string
      warningMessage:
        description: The warning message during the execution
        example: This is a warning
        type: string
    type: object
  importAlreadyInProgressResponse:
    properties:
      errors:
        description: The error message list
        items:
          $ref: '#/definitions/BeezUP.Common.UserErrorMessage'
        type: array
      links:
        $ref: '#/definitions/importAlreadyInProgressResponseLinks'
    required:
      - errors
      - links
    type: object
  importAlreadyInProgressResponseLinks:
    description: The action links
    properties:
      cancelCurrentImportation:
        $ref: '#/definitions/links.Importation_CancelLink'
      currentImportation:
        $ref: '#/definitions/links.Importation_GetImportationMonitoringLink'
    required:
      - currentImportation
      - cancelCurrentImportation
    type: object
  importationCustomColumn:
    description: The custom column configuration
    properties:
      configuration:
        $ref: '#/definitions/columnConfiguration'
      id:
        $ref: '#/definitions/columnId'
      links:
        $ref: '#/definitions/importationCustomColumnLinks'
      userColumName:
        $ref: '#/definitions/userColumName'
    required:
      - id
      - userColumName
      - configuration
      - links
    type: object
  importationCustomColumnLinks:
    properties:
      delete:
        $ref: '#/definitions/links.Catalog_DeleteCustomColumnLink'
      expression:
        $ref: '#/definitions/links.Catalog_GetCustomColumnExpressionLink'
      map:
        $ref: '#/definitions/links.Importation_MapCustomColumnLink'
      productSampleValue:
        $ref: '#/definitions/links.Importation_GetProductSampleCustomColumnValueLink'
      save:
        $ref: '#/definitions/links.Importation_SaveCustomColumnLink'
      unmap:
        $ref: '#/definitions/links.Importation_UnmapCustomColumnLink'
    required:
      - save
      - delete
      - expression
    type: object
  importationCustomColumnList:
    properties:
      customColumns:
        items:
          $ref: '#/definitions/importationCustomColumn'
        type: array
      links:
        $ref: '#/definitions/customColumnListLinks'
    required:
      - links
      - customColumns
    type: object
  importationCustomColumnListLinks:
    properties:
      add:
        $ref: '#/definitions/links.Importation_SaveCustomColumnLink'
      self:
        $ref: '#/definitions/links.Importation_GetCustomColumnsLink'
    required:
      - self
    type: object
  importationMonitoring:
    description: Describe the reporting of the catalog importation
    properties:
      beginUtcDate:
        description: The start date of the importation
        example: '2017-04-01T13:01:01Z'
        format: date-time
        type: string
      errors:
        description: In case of error a description will be indicated
        items:
          $ref: '#/definitions/BeezUP.Common.UserErrorMessage'
        type: array
      executionId:
        $ref: '#/definitions/executionId'
      lastUpdateUtcDate:
        description: The last update of the reporting
        example: '2017-04-01T13:10:09Z'
        format: date-time
        type: string
      links:
        $ref: '#/definitions/importationMonitoringLinks'
      steps:
        additionalProperties:
          type: boolean
        description: 'Contains all steps of the importation process with a boolean. If true the step has been passed, false the step is not complete'
        example:
          isCatalogImportComputeDiffCompleted: false
          isCatalogImportPrepareReadCompleted: false
          isCatalogUpdateCompleted: false
          isSavedInDb: false
        type: object
      success:
        description: Indicates if the importation was successfully completed or not
        example: true
        type: boolean
      userId:
        $ref: '#/definitions/BeezUP.Common.UserId'
    required:
      - success
      - executionId
      - lastUpdateUtcDate
      - beginUtcDate
      - steps
    type: object
  importationMonitoringLinks:
    description: Applicable operations considering the state of the importation
    properties:
      activateAutoImport:
        $ref: '#/definitions/links.Importation_ActivateAutoImportLink'
      cancel:
        $ref: '#/definitions/links.Importation_CancelLink'
      catalogColumns:
        $ref: '#/definitions/links.Importation_GetDetectedCatalogColumnsLink'
      commit:
        $ref: '#/definitions/links.Importation_CommitLink'
      commitColumns:
        $ref: '#/definitions/links.Importation_CommitColumnsLink'
      configureRemainingCatalogColumns:
        $ref: '#/definitions/links.Importation_ConfigureRemainingCatalogColumnsLink'
      customColumns:
        $ref: '#/definitions/links.Importation_GetCustomColumnsLink'
      productSamples:
        $ref: '#/definitions/links.Importation_GetProductSampleLink'
      self:
        $ref: '#/definitions/links.Importation_GetImportationMonitoringLink'
      technicalProgression:
        $ref: '#/definitions/links.Importation_TechnicalProgressionLink'
    required:
      - self
      - technicalProgression
    type: object
  importationReporting:
    description: The catalog importation reporting
    properties:
      autoImported:
        description: Indicate if this importation is an auto import or not.
        example: true
        type: boolean
      beginUtcDate:
        description: Indicate the begin UTC date of this importation.
        example: '2017-04-01T13:01:01Z'
        format: date-time
        type: string
      endUtcDate:
        description: Indicate the end UTC date of this importation.
        example: '2017-04-01T13:10:09Z'
        format: date-time
        type: string
      errors:
        description: Indicate the error message list related to this importation.
        items:
          $ref: '#/definitions/BeezUP.Common.UserErrorMessage'
        type: array
      inputConfigurationUrl:
        description: Indicate the input url of this importation.
        example: 'http://blal.com/catalog.csv'
        format: uri
        type: string
      lastUpdateUtcDate:
        description: Indicate the last update UTC date of the reporting.
        example: '2017-04-01T13:10:09Z'
        format: date-time
        type: string
      stepName:
        description: The last step name of the importation process
        example: IsSaveInDb
        type: string
      steps:
        additionalProperties:
          type: boolean
        description: Indicate the steps that have been passed during the importation process
        example:
          isCatalogImportComputeDiffCompleted: false
          isCatalogImportPrepareReadCompleted: false
          isCatalogUpdateCompleted: false
          isSavedInDb: false
        type: object
      success:
        description: Indicate if the importation succeed or not.
        example: true
        type: boolean
      totalProductCount:
        description: Indicate the total product count detected in the catalog during the importation.
        example: 101
        format: int32
        type: integer
      totalProductErrorCount:
        description: Indicate the total product count in error detected in the catalog during the importation.
        example: 0
        format: int32
        type: integer
      totalProductSuccessCount:
        description: Indicate the total product count in success in the catalog during the importation.
        example: 101
        format: int32
        type: integer
      userId:
        $ref: '#/definitions/BeezUP.Common.UserId'
    required:
      - beginUtcDate
      - lastUpdateUtcDate
      - steps
    type: object
  importationTechnicalProgression:
    properties:
      stepsProgression:
        additionalProperties:
          items:
            type: string
          type: array
        description: Indicate for each step of the importation the uris to look at
        type: object
    type: object
  importationsResponse:
    properties:
      importations:
        items:
          $ref: '#/definitions/importationReporting'
        type: array
      links:
        $ref: '#/definitions/importationsResponseLinks'
    type: object
  importationsResponseLinks:
    properties:
      self:
        $ref: '#/definitions/links.Importation_GetReportingsLink'
      start:
        $ref: '#/definitions/links.Importation_StartManualUpdateLink'
    type: object
  initialsProfilePictureUrl:
    description: Indicate the url of your picture profil based on your initials
    example: 'https://dummyimage.com/50x50/000000/fff&text=AM'
    pattern: '^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$'
    type: string
  inputConfiguration:
    description: Describe the input configuration
    properties:
      files:
        description: The list of files to get and read
        items:
          $ref: '#/definitions/inputFileConfiguration'
        minItems: 1
        type: array
      transformFileUrl:
        description: Can be null. Use to transform multiple files with an XSLT file.
        example: 'http://beezupblob.com/Mytransformation.xslt'
        format: uri
        type: string
    required:
      - files
    type: object
  inputFileConfiguration:
    description: Describe how to get and read a file
    properties:
      fetch:
        $ref: '#/definitions/inputFileFetchConfiguration'
      fileNumber:
        description: The file number starting by 1
        example: 1
        format: int32
        minimum: 1
        type: integer
      read:
        $ref: '#/definitions/inputFileReadConfiguration'
    required:
      - fileNumber
      - fetch
      - read
    type: object
  inputFileFetchConfiguration:
    description: Describe the way to download the file
    properties:
      compressedRelativePath:
        description: Indicate the relative path in the compressed file
        example: folder/file.xxx
        type: string
      compressionFormatStrategy:
        $ref: '#/definitions/compressionFormatStrategy'
      credential:
        $ref: '#/definitions/credential'
      downloadCatalogStrategy:
        $ref: '#/definitions/downloadCatalogStrategy'
      downloadTimeout:
        default: 30
        description: Indicate the download time out in second
        example: 360
        format: int32
        type: integer
      uri:
        description: 'Indicate the Uri of the file. (http, https, ftp, ftps, sftp are allowed)'
        example: 'http://www.mywebsite.com/mycatalog.csv'
        type: string
    required:
      - uri
      - downloadCatalogStrategy
    type: object
  inputFileReadConfiguration:
    description: |
      Describe how to read the file. If FileFormatStrategy is CSV, csvFileReadProperties is required. Otherwise the xmlFileReadProperties is required.
    properties:
      csvFileReadProperties:
        $ref: '#/definitions/inputFileReadCsvConfiguration'
      cultureName:
        default: ''
        description: The culture name of the file.  (i.e. fr-FR). If null then Invariant culture will be used.
        example: fr-FR
        type: string
      encodingTypeName:
        default: UTF-8
        description: The encoding type. UTF-8 by default.
        example: UTF-8
        type: string
      format:
        $ref: '#/definitions/fileFormatStrategy'
      xmlFileReadProperties:
        $ref: '#/definitions/inputFileReadXmlConfiguration'
    required:
      - format
    type: object
  inputFileReadCsvConfiguration:
    description: The CSV file description
    properties:
      csvSeparator:
        default: ;
        description: Indicate the separator of the values in the CSV file. Generally ";"
        example: ;
        type: string
      csvTextQualifier:
        default: '"'
        description: Indicate the text qualifier of the CSV file. Generally the value is "
        example: '"'
        type: string
      hasHeaderRecord:
        default: true
        description: Indicate if the csv file contains the column name at the first row
        example: true
        type: boolean
      ignoreHeaderRecord:
        default: false
        description: Indicate if the importation should not use the csv column name from the file
        example: true
        type: boolean
    required:
      - hasHeaderRecord
      - ignoreHeaderRecord
      - csvSeparator
    type: object
  inputFileReadXmlConfiguration:
    description: The XML file description
    properties:
      flattenXmlChildElements:
        description: Indicate if the children xml nodes should be flatten with there parent to take in account the sub node values.
        example: true
        type: boolean
      useXmlAttributes:
        description: Indicate if the importation should take in account the attribute in the xml nodes.
        example: true
        type: boolean
    required:
      - useXmlAttributes
      - flattenXmlChildElements
    type: object
  invoice:
    properties:
      amount:
        description: The amount of your invoice
        example: 101.42
        format: double
        type: number
      amountToBePaid:
        description: The remaining amount to be paid for this invoice
        example: 0
        format: double
        type: number
      contractId:
        $ref: '#/definitions/contractId'
      currencyCode:
        $ref: '#/definitions/BeezUP.Common.CurrencyCode'
      dueDate:
        example: '2016-05-10'
        format: date
        type: string
      invoiceDate:
        description: The invoice date
        example: '2016-05-01'
        format: date
        type: string
      invoiceNumber:
        $ref: '#/definitions/invoiceNumber'
      invoiceUrl:
        description: The url of the invoice document
        example: 'https://beezupbilling.blob.core.windows.net/invoicepdf/2000/CustomerUserId_00000000-0000-0000-0000-000000000000/ContractId_00000000-0000-0000-0000-000000000000/2000-01-01_B1234.pdf'
        format: uri
        type: string
      paymentStatus:
        $ref: '#/definitions/invoicePaymentStatus'
    required:
      - invoiceDate
      - contractId
      - invoiceNumber
      - amount
      - amountToBePaid
      - currencyCode
      - paymentStatus
      - dueDate
    type: object
  invoiceList:
    properties:
      invoices:
        example:
          - amount: 101.42
            amountToBePaid: 0
            contractId: 7098487a-86f6-4322-b8a5-b67f7363b3e7
            currencyCode: EUR
            dueDate: '2016-05-10'
            invoiceDate: '2016-05-01'
            invoiceNumber: B1234
            invoiceUrl: 'https://beezupbilling.blob.core.windows.net/invoicepdf/2000/CustomerUserId_00000000-0000-0000-0000-000000000000/ContractId_00000000-0000-0000-0000-000000000000/2000-01-01_B1234.pdf'
            paymentStatus: Paid
        items:
          $ref: '#/definitions/invoice'
        type: array
      links:
        $ref: '#/definitions/invoiceListLinks'
    required:
      - links
      - invoices
    type: object
  invoiceListLinks:
    properties:
      self:
        $ref: '#/definitions/links.getInvoicesLink'
    required:
      - self
    type: object
  invoiceNumber:
    description: Your invoice number
    example: B1234
    type: string
  invoicePaymentStatus:
    description: The payment status
    enum:
      - Paid
      - NotPaid
      - PartiallyPaid
      - Loss
    example: Paid
    type: string
  lastManualImportInputConfiguration:
    description: Last manual import input configuration
    properties:
      input:
        $ref: '#/definitions/inputConfiguration'
    required:
      - input
    type: object
  lastName:
    description: Your last name
    example: Simon
    type: string
  linkClickToOrderType:
    default: OnPurchaseDate
    enum:
      - OnPurchaseDate
      - OnClickDate
    example: OnClickDate
    type: string
  links.AddChannelCatalogLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/channelCatalogs
          method: POST
  links.Auto_ConfigureAutoImportIntervalLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/autoImport/scheduling/interval
          method: POST
          parameters:
            request:
              in: body
              required: true
              schema: configureAutoImportIntervalRequest
              type: object
  links.Auto_GetAutoImportConfigurationLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/autoImport
          method: GET
  links.Auto_PauseAutoImportLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/autoImport/pause
          method: POST
  links.Auto_ResumeAutoImportLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/autoImport/resume
          method: POST
  links.Auto_ScheduleAutoImportLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/autoImport/scheduling/schedules
          method: POST
          parameters:
            request:
              in: body
              required: true
              schema: scheduleAutoImportRequest
              type: object
  links.Auto_StartAutoImportLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/autoImport/start
          method: POST
  links.CatalogIndexLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs
          method: GET
  links.CatalogStoreIndexLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3
          method: GET
  links.Catalog_ChangeCatalogColumnUserNameLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/catalogColumns/b45c1999-e089-4bb1-a219-80a7a50a6f53/rename
          method: POST
          parameters:
            request:
              in: body
              required: true
              schema: changeUserColumnNameRequest
              type: object
  links.Catalog_ChangeCustomColumnExpressionLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb/expression
          method: PUT
          parameters:
            request:
              in: body
              required: true
              schema: changeCustomColumnExpressionRequest
              type: object
  links.Catalog_ChangeCustomColumnUserNameLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb/rename
          method: POST
          parameters:
            request:
              in: body
              required: true
              schema: changeUserColumnNameRequest
              type: object
  links.Catalog_ComputeExpressionLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/customColumns/computeExpression
          method: POST
          parameters:
            request:
              in: body
              required: true
              schema: computeExpressionRequest
              type: object
  links.Catalog_DeleteCustomColumnLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb
          method: DELETE
  links.Catalog_GetBeezUPColumnsLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/beezupColumns
          method: GET
  links.Catalog_GetCatalogColumnsLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/catalogColumns
          method: GET
  links.Catalog_GetCategoriesLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/categories
          method: GET
  links.Catalog_GetCustomColumnExpressionLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb/expression
          method: GET
  links.Catalog_GetCustomColumnsLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/customColumns
          method: GET
  links.Catalog_GetProductsLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/products/list
          method: POST
          parameters:
            request:
              in: body
              required: true
              schema: getProductsRequest
              type: object
  links.Catalog_GetRandomProductsLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/products/random
          method: GET
  links.Catalog_SaveCustomColumnLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: '/v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/customColumns/{columnId}'
          method: POST
          parameters:
            columnId:
              in: path
              required: true
              type: string
            request:
              in: body
              required: true
              schema: createCustomColumnRequest
              type: object
  links.ChangeOrderLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - properties:
          rel:
            description: Indicate the relation name related to the link
            example: self
            type: string
        type: object
      - example:
          href: /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000/ShipOrder
          method: POST
          parameters:
            If-Match:
              in: header
              required: true
              value: '"ca071a4580129f932a03971968ffef69"'
            request:
              in: body
              properties:
                order_Shipping_CarrierName:
                  lovLink:
                    href: /v2/user/PriceMinisterCarrierName
                  lovRequired: true
                  required: true
                  type: string
                order_Shipping_FulfillmentDate:
                  required: true
                  type: date-time
                order_Shipping_Method:
                  lovLink:
                    href: /v2/user/ShippingMethod_PriceMinister
                  lovRequired: false
                  required: true
                  type: string
                order_Shipping_ShipperTrackingNumber:
                  required: true
                  type: string
              schema: changeOrderRequest
              type: object
            testMode:
              in: query
              required: false
              type: boolean
              value: false
            userName:
              in: query
              required: true
              type: string
          rel: ShipOrder
          templated: true
  links.ClearChannelCatalogExportationCacheLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/exportations/cache/clear
          method: POST
  links.ClearMerchantOrderInfoLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000/clearMerchantOrderInfo
          method: POST
  links.ClearMerchantOrderInfoListLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/marketplaces/orders/clearMerchantOrderInfos
          method: POST
  links.ConfigureAutomaticTransitionsLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/marketplaces/orders/autoTransitions
          method: POST
          parameters:
            request:
              in: body
              request: true
              schema: configureAutomaticTransitionRequest
  links.ConfigureChannelCatalogColumnMappingsLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/columnMappings
          method: PUT
  links.ConfigureChannelCatalogCostSettingsLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/settings/cost
          method: POST
  links.ConfigureChannelCatalogExclusionFiltersLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/exclusionFilters
          method: PUT
  links.ConfigureChannelCatalogGeneralSettingsLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/settings/general
          method: POST
  links.CreateRuleLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules
          method: POST
          parameters:
            request:
              in: body
              schema: createRuleRequest
              type: object
              value:
                endUtcDate: '2017-09-30T10:42:40.001Z'
                optimisationActionName: reenable
                reportFilterId: fb19c53c-2f63-4262-9d94-2d7faa500acd
                ruleName: My rule
                startUtcDate: '2016-08-29T09:12:33.001Z'
  links.DeleteChannelCatalogLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0
          method: DELETE
  links.DeleteReportFilterLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/reports/filters/fb19c53c-2f63-4262-9d94-2d7faa500acd
          method: DELETE
  links.DeleteRuleLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8
          method: DELETE
  links.DisableChannelCatalogCategoryMappingLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/categoryMappings/disable
          method: POST
  links.DisableChannelCatalogLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/disable
          method: POST
  links.DisableChannelCatalogProductLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/products/578419df-1bbf-41a6-96fa-862e42182b67/disable
          method: POST
  links.DisableRuleLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8/disable
          method: POST
  links.EnableChannelCatalogLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/enable
          method: POST
  links.EnableRuleLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8/enable
          method: POST
  links.ExportChannelCatalogProductInfoListLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/products/export
          method: POST
          parameters:
            format:
              in: query
              required: true
              type: string
              value: csv
  links.ExportOrdersLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/marketplaces/orders/exportations
          method: POST
          properties:
            request:
              in: body
              required: true
              schema: exportOrderListRequest
              type: object
  links.GetAutomaticTransitionsLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/marketplaces/orders/autoTransitions
          method: GET
  links.GetChannelCatalogCategoriesLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - description: If you did not configure the cost settings this link will not be displayed.
      - example:
          href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/categoryMappings
          method: GET
  links.GetChannelCatalogExclusionFilterOperatorsLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/channelCatalogs/exclusionFilterOperators
          method: GET
  links.GetChannelCatalogExclusionFiltersLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/exclusionFilters
          method: GET
  links.GetChannelCatalogExportationCacheInfoLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/exportations/cache
          method: GET
  links.GetChannelCatalogExportationHistoryLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/exportations/history
          method: GET
  links.GetChannelCatalogLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0
          method: GET
  links.GetChannelCatalogMarketplacePropertiesLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/marketplaces/channelcatatalogs/6a90fcfd-24c7-422e-a65f-aadb1725bbfe/properties
  links.GetChannelCatalogMarketplaceSettingsLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/marketplaces/channelcatatalogs/6a90fcfd-24c7-422e-a65f-aadb1725bbfe/settings
  links.GetChannelCatalogProductInfoLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/products/578419df-1bbf-41a6-96fa-862e42182b67
          method: GET
  links.GetChannelCatalogProductInfoListLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/products
          method: POST
  links.GetChannelCatalogsLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/channelCatalogs
          method: GET
  links.GetChannelsIndexLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/public/channels
          method: GET
  links.GetChannelsLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/public/channels/FRA
          method: GET
  links.GetCustomerIndexLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/customer
          method: GET
  links.GetMarketplaceAccountStoresLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/marketplaces/channelcatalogs
  links.GetMarketplaceAccountsSynchronizationLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/marketplaces/orders/status
          method: GET
  links.GetOrderExportationsLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/marketplaces/orders/exportations
          method: GET
  links.GetOrderHistoryLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000/history
          method: GET
  links.GetOrderIndexLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/marketplaces/orders
          method: GET
  links.GetOrderLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000
          method: GET
  links.GetOrderListFullLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/marketplaces/orders/list/full
          method: POST
          properties:
            Accept-Encoding:
              in: header
              required: true
              schema: string
              type: array
            request:
              in: body
              required: false
              schema: orderListRequest
              type: object
  links.GetOrderListLightLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/marketplaces/orders/list/light
          method: POST
          properties:
            request:
              in: body
              required: false
              schema: orderListRequest
              type: object
  links.GetPublicListOfValuesLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/public/lov/ChannelType
          method: GET
  links.GetPublicLovIndexLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/public/lov
          method: GET
  links.GetPublicationsLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/marketplaces/channelcatalogs/publications/Amazon/123/history
  links.GetReportFilterLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/reports/filters/fb19c53c-2f63-4262-9d94-2d7faa500acd
          method: GET
  links.GetReportFiltersLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/reports/filters
          method: GET
  links.GetRuleLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8
          method: GET
  links.GetRulesExecutionsLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/executions
          method: GET
  links.GetRulesLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules
          method: GET
  links.GetUserListOfValuesLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/lov/Go2CultureName
          method: GET
  links.GetUserLovIndexLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/lov
          method: GET
  links.HarvestAllLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/marketplaces/orders/harvest
          method: POST
  links.HarvestOrderLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000/harvest
          method: POST
  links.Importation_ActivateAutoImportLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/autoImport/activate
          method: POST
  links.Importation_CancelLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/cancel
          method: POST
  links.Importation_CommitColumnsLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/commitColumns
          method: POST
  links.Importation_CommitLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/commit
          method: POST
  links.Importation_ConfigureCatalogColumnLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/catalogColumns/b45c1999-e089-4bb1-a219-80a7a50a6f53
          method: POST
          parameters:
            request:
              in: body
              required: true
              schema: configureCatalogColumnCatalogRequest
              type: object
  links.Importation_ConfigureRemainingCatalogColumnsLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/configureRemainingCatalogColumns
          method: POST
  links.Importation_DeleteCustomColumnLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb
          method: DELETE
  links.Importation_GetCustomColumnExpressionLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb/expression
          method: GET
  links.Importation_GetCustomColumnsLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/customColumns
          method: GET
  links.Importation_GetDetectedCatalogColumnsLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/catalogColumns
          method: GET
  links.Importation_GetImportationMonitoringLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c
          method: GET
  links.Importation_GetManualUpdateLastInputConfigLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/inputConfiguration
          method: GET
  links.Importation_GetProductSampleCustomColumnValueLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: '/v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/productSamples/{productSampleIndex}/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb'
          method: GET
          parameters:
            productSampleIndex:
              in: path
              required: true
              type: integer
  links.Importation_GetProductSampleLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: '/v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/productSamples/{productSampleIndex}'
          method: GET
          parameters:
            productSampleIndex:
              in: path
              required: true
              type: integer
  links.Importation_GetReportingsLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations
          method: GET
  links.Importation_IgnoreColumnLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/catalogColumns/b45c1999-e089-4bb1-a219-80a7a50a6f53/ignore
          method: POST
  links.Importation_MapCatalogColumnLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/catalogColumns/b45c1999-e089-4bb1-a219-80a7a50a6f53/map
          method: POST
          parameters:
            request:
              in: body
              required: true
              schema: mapBeezUPColumnRequest
              type: object
  links.Importation_MapCustomColumnLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb/map
          method: POST
          parameters:
            request:
              in: body
              required: true
              schema: mapBeezUPColumnRequest
              type: object
  links.Importation_ReattendColumnLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/catalogColumns/b45c1999-e089-4bb1-a219-80a7a50a6f53/reattend
          method: POST
  links.Importation_SaveCustomColumnLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: '/v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/customColumns/{columnId}'
          method: POST
          parameters:
            columnId:
              in: path
              required: true
              type: string
            request:
              in: body
              required: true
              schema: createCustomColumnRequest
              type: object
  links.Importation_StartManualUpdateLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/start
          method: POST
          parameters:
            request:
              in: body
              required: true
              schema: startManualImportRequest
              type: object
  links.Importation_TechnicalProgressionLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/technicalProgression
          method: GET
  links.Importation_UnmapCatalogColumnLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/catalogColumns/b45c1999-e089-4bb1-a219-80a7a50a6f53/map
          method: POST
  links.Importation_UnmapCustomColumnLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb/map
          method: POST
  links.MapChannelCatalogCategoryLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/categoryMappings/map
          method: POST
  links.MoveDownRuleLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8/movedown
          method: POST
  links.MoveUpRuleLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8/moveup
          method: POST
  links.OptimiseByCategoryLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/optimisations/byCategory/4c376178-25b4-4656-a86e-e3bd3a25b139/enable
          method: POST
          parameters:
            request:
              in: body
              type: array
              value:
                - a2d38563-50f0-43f1-be2b-b16e7ec4f007
  links.OptimiseByChannelLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/optimisations/byChannel/a2d38563-50f0-43f1-be2b-b16e7ec4f007/enable
          method: POST
  links.OptimiseByProductLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/optimisations/byProduct/6d469a54-8426-4855-abc2-9e062e2056b9/enable
          method: POST
          parameters:
            request:
              in: body
              type: array
              value:
                - a2d38563-50f0-43f1-be2b-b16e7ec4f007
  links.OptimiseLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/optimisations/enable
          method: POST
          parameters:
            request:
              in: body
              schema: optimiseRequest
              type: object
              value:
                advancedFilters:
                  globalMarginPercent: 10
                  linkClickToOrderMaxDay: 5
                  linkClickToOrderType: OnClickDate
                  margingType: Global
                  onlyDirectSales: true
                  onlyPaymentValidatedOrders: true
                  performanceIndicatorFormula:
                    firstParameter: Cost
                    operatorName: Multiply
                    secondParamter: Turnover
                    thirdParameter: 100
                beginPeriodUtcDate: '2006-11-20T00:00:00Z'
                categoryFilter:
                  categoryPath:
                    - Home
                    - Bedroom
                channelId: 2dc136a7-0d3d-4cc9-a825-a28a42c53e28
                endPeriodUtcDate: '2006-12-20T00:00:00Z'
                indicatorFilters:
                  - indicator: Cost
                    operatorName: Equals
                    value: 10.42
                pageNumber: 1
                pageSize: 100
                productFilters:
                  additionalProductFilters:
                    - columnId: 672644c7-5bd0-4e25-88c1-1f732bda5e4c
                      operatorName: GreaterTo
                      values:
                        - 100
                  sku: M1234
                  title: RefrigÃ©rateur
                productState: All
  links.OverrideChannelCatalogProductValuesLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/products/578419df-1bbf-41a6-96fa-862e42182b67/overrides
          method: POST
  links.ReenableChannelCatalogCategoryMappingLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/categoryMappings/reenable
          method: POST
  links.ReenableChannelCatalogProductLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/products/578419df-1bbf-41a6-96fa-862e42182b67/reenable
          method: POST
  links.RunRuleLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8/run
          method: POST
  links.RunRulesLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/run
          method: POST
  links.SaveReportFilterLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: '/v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/reports/filters/{reportFilterId}'
          method: PUT
          parameters:
            - in: path
              name: reportFilterId
              type: string
          templated: true
  links.SetChannelCatalogMarketplaceSettingsLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/marketplaces/channelcatatalogs/6a90fcfd-24c7-422e-a65f-aadb1725bbfe/settings
          method: POST
          paramters:
            request:
              in: body
              schema: setChannelCatalogMarketplaceSettingsRequest
              type: object
  links.SetMerchantOrderInfoLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000/setMerchantOrderInfo
          method: POST
          parameters:
            request:
              in: body
              schema: setMerchantOrderInfoRequest
              type: object
  links.SetMerchantOrderInfoListLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/marketplaces/orders/setMerchantOrderInfos
          method: POST
          parameters:
            request:
              in: body
              required: true
              schema: setMerchantOrderInfoRequest
              type: object
  links.UnmapChannelCatalogCategoryLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/categoryMappings/unmap
          method: POST
          parameters:
            - in: body
              name: request
              required: true
              type: object
              value:
                catalogCategoryPath:
                  - VÃªtements
                  - Femmes
                  - Chaussures
  links.UpdateRuleLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8
          method: PATCH
          parameters:
            request:
              in: body
              schema: updateRuleRequest
              type: object
              value:
                endUtcDate": '2016-08-29T09:12:33.001Z'
                ruleName: My Rule Renamed
                startUtcDate: '2016-08-29T09:12:33.001Z'
  links.activateUserAccountLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/customer/account/activate
          method: POST
  links.changePasswordLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/customer/account/changePassword
          method: POST
  links.createContractLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/customer/contracts
          method: POST
          parameters:
            request:
              in: body
              type: object
              value:
                billingPeriodInMonth: 12
                couponDiscountCode: I-LOVE-BEEZUP
                couponOfferCode: 04efc310-bc25-4710-a83a-faf200284fe5
                offerId: 1
                storeCount: 1
  links.createStoreLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/customer/stores
          method: POST
  links.deleteNextContractLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/customer/contracts/next
          method: DELETE
  links.deleteStoreLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/customer/stores/51afae05-277e-4902-8b17-5a811a23a2c6
          method: DELETE
  links.deleteStoreShareLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/stores/51afae05-277e-4902-8b17-5a811a23a2c6/shares/277596c1-a5a9-4cce-9f34-b5906451a98f
          method: DELETE
  links.getBillingPeriodsLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/customer/billingPeriods
          method: GET
  links.getContractsLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/customer/contracts
          method: GET
  links.getCreditCardInfoLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/customer/account/creditCardInfo
          method: GET
  links.getFriendInfoLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: '/v2/user/customer/friends/{userId}'
          method: GET
          parameters:
            userId:
              in: path
              required: true
              type: string
  links.getInvoicesLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/customer/invoices
          method: GET
  links.getOfferLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/customer/offers
          method: POST
          parameters:
            request:
              in: body
              required: true
              schema: offerRequest
              type: object
  links.getProfilePictureInfoLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/customer/account/profilePictureInfo
          method: GET
  links.getStandardOffersLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/customer/offers
          method: GET
  links.getStoreLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/customer/stores/51afae05-277e-4902-8b17-5a811a23a2c6
          method: GET
  links.getStoreSharesLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/customer/stores/51afae05-277e-4902-8b17-5a811a23a2c6/shares
          method: GET
  links.getStoresLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/customer/stores
          method: GET
  links.getUserAccountInfoLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/customer/account
          method: GET
  links.logoutLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/customer/security/logout
          method: POST
  links.reactivateCurrentContractLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/customer/contracts/current/reenableAutoRenewal
          method: POST
  links.saveCompanyInfoLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/customer/account/companyInfo
          method: PUT
  links.saveCreditCardInfoLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/customer/account/creditCardInfo
          method: PUT
  links.savePersonalInfoLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/customer/account/personalInfo
          method: PUT
  links.saveProfilePictureInfoLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/customer/account/profilePictureInfo
          method: PUT
  links.saveStoreAlertsLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/customer/stores/51afae05-277e-4902-8b17-5a811a23a2c6/alerts
          method: POST
  links.shareStoreLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/customer/stores/51afae05-277e-4902-8b17-5a811a23a2c6/shares
          method: POST
          parameters:
            email:
              in: body
              required: true
              type: string
  links.terminateCurrentContractLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/customer/contracts/current/disableAutoRenewal
          method: POST
  links.updateStoreLink:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.Link3'
      - example:
          href: /v2/user/customer/stores/51afae05-277e-4902-8b17-5a811a23a2c6
          method: PATCH
  loginRequest:
    properties:
      login:
        $ref: '#/definitions/BeezUP.Common.Email'
      password:
        description: Your password
        example: I@mW0nder$Full
        format: password
        type: string
    required:
      - login
      - password
    type: object
  mapBeezUPColumnRequest:
    properties:
      beezUPColumnName:
        $ref: '#/definitions/BeezUP.Common.BeezUPColumnName'
    required:
      - beezUPColumnName
    type: object
  mapCategoryRequest:
    description: The request message to make a mapping between catalog category path and a channel category path
    properties:
      autoMapNewSubCategories:
        description: 'Great feature! In case of mapping to parent catalog category, you can ask to automatically map new sub catalog category in the next importation to this channel category path.'
        example: true
        type: boolean
      channelCatalogCategoryMapping:
        $ref: '#/definitions/channelCatalogCategoryMapping'
      overrideSubCategoryMappings:
        description: 'Great feature! In case of mapping to parent channel category, you can ask to override the mapping of all sub channel category to this catalog category path'
        example: true
        type: boolean
    required:
      - overrideSubCategoryMappings
      - autoMapNewSubCategories
      - channelCatalogCategoryMapping
    type: object
  margingType:
    default: Tracker
    enum:
      - Tracker
      - Global
    example: Global
    type: string
  marketplaceChannelCatalog:
    description: This object indicates you the association between a channel catalog and a marketplace. The account identifier will be automatically defined based on your marketplace merchant identfier.
    properties:
      beezUPChannelCatalogId:
        $ref: '#/definitions/BeezUP.Common.ChannelCatalogId'
      beezUPChannelId:
        $ref: '#/definitions/BeezUP.Common.ChannelId'
      beezUPMarketplaceName:
        description: The marketplace name
        example: ebay FRA
      beezUPStoreId:
        $ref: '#/definitions/BeezUP.Common.StoreId'
      beezUPStoreName:
        description: The store name
        example: My Store 1
        type: string
      enabled:
        description: The enabled status of the Channel Catalog
        example: true
        type: boolean
      links:
        $ref: '#/definitions/marketplaceChannelCatalogLinks'
      lovLinks:
        $ref: '#/definitions/marketplaceChannelCatalogLovLinks'
      marketplaceAccountId:
        $ref: '#/definitions/BeezUP.Common.MarketplaceAccountId'
      marketplaceBusinessCode:
        $ref: '#/definitions/BeezUP.Common.MarketplaceBusinessCode'
      marketplaceIsoCountryCodeAlpha2:
        description: 'The marketplace country iso code alpha 2 (see http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Decoding_table for more details)'
        example: FR
        type: string
      marketplaceMarketPlaceId:
        description: The marketplace identifier in the marketplace
        example: '71'
        type: string
      marketplaceMerchantIdentifiers:
        additionalProperties:
          type: string
        description: The marketplace merchant identifier list
        example:
          Ebay_PayPalEmailAddress: yourEbayId@paypal.com
        type: object
      marketplaceTechnicalCode:
        $ref: '#/definitions/BeezUP.Common.MarketplaceTechnicalCode'
    required:
      - enabled
      - marketplaceTechnicalCode
      - marketplaceBusinessCode
      - marketplaceMarketPlaceId
      - marketplaceIsoCountryCodeAlpha2
      - beezUPMarketplaceName
      - beezUPChannelId
      - beezUPChannelCatalogId
      - beezUPStoreId
      - beezUPStoreName
      - lovLinks
      - links
    type: object
  marketplaceChannelCatalogLinks:
    description: 'Indicate the actions you can do on a channel catalog. If the settings are valid, you will be able to access to the publication history.'
    properties:
      properties:
        $ref: '#/definitions/links.GetChannelCatalogMarketplacePropertiesLink'
      publications:
        $ref: '#/definitions/links.GetPublicationsLink'
      settings:
        $ref: '#/definitions/links.GetChannelCatalogMarketplaceSettingsLink'
    required:
      - properties
      - settings
    type: object
  marketplaceChannelCatalogList:
    description: The marketplace channel catalog list
    properties:
      links:
        $ref: '#/definitions/marketplaceChannelCatalogListLinks'
      marketplaceChannelCatalogs:
        description: The list of marketplace channel catalog
        items:
          $ref: '#/definitions/marketplaceChannelCatalog'
        type: array
    required:
      - links
      - marketplaceChannelCatalogs
    type: object
  marketplaceChannelCatalogListLinks:
    properties:
      self:
        $ref: '#/definitions/links.GetMarketplaceAccountStoresLink'
    required:
      - self
    type: object
  marketplaceChannelCatalogLovLinks:
    description: Indicates the List Of Values related to the marketplace
    properties:
      cancelationReasonCodeLOV:
        $ref: '#/definitions/BeezUP.Common.LOVLink3'
      carrierCodeLOV:
        $ref: '#/definitions/BeezUP.Common.LOVLink3'
      marketplaceStorePropertyLOV:
        $ref: '#/definitions/BeezUP.Common.LOVLink3'
      refundReasonCodeLOV:
        $ref: '#/definitions/BeezUP.Common.LOVLink3'
      shippingMethodLOV:
        $ref: '#/definitions/BeezUP.Common.LOVLink3'
    type: object
  marketplaceOrderId:
    description: The order marketplace identifier
    example: AMAZON12345
    type: string
  marketplaceOrderStatus:
    description: The marketplace order state
    example: In_progress_3
    type: string
  nextContractInfo:
    allOf:
      - $ref: '#/definitions/contractInfo'
      - description: Get the conditions of your next contract
        properties:
          links:
            $ref: '#/definitions/nextContractInfoLinks'
        required:
          - links
        type: object
  nextContractInfoLinks:
    properties:
      delete:
        $ref: '#/definitions/links.deleteNextContractLink'
    type: object
  offer:
    properties:
      content:
        $ref: '#/definitions/offerContent'
      info:
        $ref: '#/definitions/BeezUP.Common.InfoSummaries'
      links:
        $ref: '#/definitions/offerLinks'
    type: object
  offerContent:
    properties:
      contractBillingPeriodInfo:
        $ref: '#/definitions/contractBillingPeriodInfo'
      contractBonusInfo:
        $ref: '#/definitions/contractBonusInfo'
      contractClickInfo:
        $ref: '#/definitions/contractClickInfo'
      contractCommitmentInfo:
        $ref: '#/definitions/contractCommitmentInfo'
      contractDiscountInfo:
        $ref: '#/definitions/contractDiscountInfo'
      contractMoneyInfo:
        $ref: '#/definitions/contractMoneyInfo'
      contractStoreInfo:
        $ref: '#/definitions/contractStoreInfo'
      contractTerminationReason:
        $ref: '#/definitions/contractTerminationReason'
      contractTerminationReasonType:
        $ref: '#/definitions/contractTerminationReasonType'
      notifyVatExemption:
        description: 'Internal usage: Indicates if we have to notify you about VAT exemption.'
        example: true
        type: boolean
      previousFixPeriodInvoiceProrataInfo:
        $ref: '#/definitions/previousFixPeriodInvoiceProrataInfo'
    required:
      - previousFixPeriodInvoiceProrataInfo
      - contractBillingPeriodInfo
      - contractClickInfo
      - contractCommitmentInfo
      - contractDiscountInfo
      - contractMoneyInfo
      - contractStoreInfo
      - contractBonusInfo
      - notifyVatExemption
    type: object
  offerFunctionality:
    properties:
      functionalityCode:
        description: The functionality code
        example: MARKETMANA
        type: string
      maxValueInteger:
        description: The max value in integer for this feature in this offer
        example: 4
        format: int32
        type: integer
      text:
        description: A description text of this feature
        example: Marketplace management
        type: string
      unlimited:
        description: Is this feature is unlimited for this offer?
        example: false
        type: boolean
    required:
      - functionalityCode
      - unlimited
    type: object
  offerId:
    description: The offer id based on /offers. Not a free offer of course.
    example: 1
    format: int32
    minimum: 1
    type: integer
  offerLinks:
    description: The different actions you can make on this offer
    properties:
      createContract:
        $ref: '#/definitions/links.createContractLink'
    type: object
  offerRequest:
    properties:
      billingPeriodInMonth:
        $ref: '#/definitions/billingPeriodInMonth'
      couponDiscountCode:
        $ref: '#/definitions/couponDiscountCode'
      couponOfferCode:
        $ref: '#/definitions/couponOfferCode'
      offerId:
        $ref: '#/definitions/offerId'
      storeCount:
        $ref: '#/definitions/storeCount'
    required:
      - offerId
      - storeCount
      - billingPeriodInMonth
    type: object
  optimisationActionName:
    description: The optimisation action
    enum:
      - reenable
      - disable
    example: reenable
    type: string
  optimiseRequest:
    allOf:
      - $ref: '#/definitions/reportFilterCommonParameters'
      - $ref: '#/definitions/paginationRequestParameters'
      - properties:
          productFilters:
            $ref: '#/definitions/productFilters'
          productState:
            $ref: '#/definitions/productStateFilter'
        type: object
  order:
    allOf:
      - $ref: '#/definitions/orderHeader'
      - description: Describe in details all informations related to an order. All properties with the prefix order_ are translated in the list of values /user/lov/OrderMetaInfoOrderDetails.
        properties:
          links:
            $ref: '#/definitions/orderLinks'
          orderItems:
            items:
              $ref: '#/definitions/orderItem'
            type: array
          order_Buyer_AddressCity:
            description: The Buyer address city of this order
            example: Marseille
            type: string
          order_Buyer_AddressCountryIsoCodeAlpha2:
            description: 'The Buyer address country iso code alpha 2 (see http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#/decoding_table for more details)'
            example: FR
            type: string
          order_Buyer_AddressCountryName:
            description: The Buyer address country name
            example: France
            type: string
          order_Buyer_AddressLine1:
            description: The Buyer address line 1 of this order
            example: 5 rue amÃ©lie
            type: string
          order_Buyer_AddressLine2:
            description: The Buyer address line 2 of this order
            example: BDR
            type: string
          order_Buyer_AddressLine3:
            description: The Buyer address line 3 of this order
            example: RDC
            type: string
          order_Buyer_AddressPostalCode:
            description: The Buyer address postal code of this order
            example: '13014'
            type: string
          order_Buyer_AddressStateOrRegion:
            description: The Buyer address state or region of this order
            example: BDR
            type: string
          order_Buyer_Civility:
            description: The buyer civility for this order
            example: Marseille
            type: string
          order_Buyer_CompanyName:
            description: The buyer company name for this order
            example: Marsillia
            type: string
          order_Buyer_Email:
            description: The email of the buyer for this order
            example: client_000000@manomano.fr
            type: string
          order_Buyer_Identifier:
            description: The buyer identifier for this order
            example: '1234567890'
            type: string
          order_Buyer_MobilePhone:
            description: The mobile phone number of the buyer for this order
            example: '+33000000042'
            type: string
          order_Buyer_Phone:
            description: The phone number of the buyer for this order
            example: '+33000000101'
            type: string
          order_Comment:
            description: The comment associated to this order
            example: This is a comment
            type: string
          order_MarketPlaceChannel:
            description: Useful to identify the origin of the order. For example in Amazon.
            example: Amazon France
            type: string
          order_OrderItemsSourceUri:
            description: |
              Technical information: The url to the source of this order items. We received this information from the marketplace.
            example: 'http://beezupblob.com/orderItems.xml'
            format: uri
            type: string
          order_OrderSourceUri:
            description: |
              Technical information: The url to the source of this order. We received this information from the marketplace.
            example: 'http://beezupblob.com/order.xml'
            format: uri
            type: string
          order_PayingUtcDate:
            description: The UTC date of the payment of this order
            example: '2017-04-01T13:22:01Z'
            format: date-time
            type: string
          order_PaymentMethod:
            description: The payment method of this order
            example: 1 / 1X
            type: string
          order_Shipping_AddressCity:
            description: The shipping address city of this order
            example: Marseille
            type: string
          order_Shipping_AddressCountryIsoCodeAlpha2:
            description: 'The shipping address country iso code alpha 2 (see http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#/decoding_table for more details)'
            example: FR
            type: string
          order_Shipping_AddressCountryName:
            description: The shipping address country name
            example: France
            type: string
          order_Shipping_AddressLine1:
            description: The shipping address line 1 of this order
            example: 5 rue amÃ©lie
            type: string
          order_Shipping_AddressLine2:
            description: The shipping address line 2 of this order
            example: BDR
            type: string
          order_Shipping_AddressLine3:
            description: The shipping address line 3 of this order
            example: RDC
            type: string
          order_Shipping_AddressName:
            description: The name of the person in the shipping address for this order
            example: Jacques BAUREGARD
            type: string
          order_Shipping_AddressPostalCode:
            description: The shipping address postal code of this order
            example: '13014'
            type: string
          order_Shipping_AddressStateOrRegion:
            description: The shipping address state or region of this order
            example: BDR
            type: string
          order_Shipping_Civility:
            description: The civility of the person in the shipping address for this order
            example: MRS
            type: string
          order_Shipping_CompanyName:
            description: The company name of the shipping address for this order
            example: My Company
            type: string
          order_Shipping_EarliestShipUtcDate:
            description: The UTC date of the earliest ship for this order
            example: '2017-04-02T21:30:00Z'
            format: date-time
            type: string
          order_Shipping_Email:
            description: The email of the person in the shipping address for this order
            example: client_000000@manomano.fr
            type: string
          order_Shipping_LatestShipUtcDate:
            description: The UTC date of the latest ship for this order
            example: '2017-04-30T21:30:00Z'
            format: date-time
            type: string
          order_Shipping_Method:
            description: The shipping method of this order
            example: DPD Domicile
            type: string
          order_Shipping_MobilePhone:
            description: The mobile phone number of the person in the shipping address for this order
            example: '+33000000042'
            type: string
          order_Shipping_Phone:
            description: The phone number of the person in the shipping address for this order
            example: '+33000000041'
            type: string
          order_Shipping_Price:
            description: The shipping price of this order
            example: 6.9
            format: decimal
            type: number
          order_Shipping_ShippingTax:
            description: The shipping tax for this order
            example: 0
            format: decimal
            type: number
          order_TotalCommission:
            description: The total commission of this order
            example: 0
            format: decimal
            type: number
          order_TotalTax:
            description: The total tax of this order
            example: 0
            format: decimal
            type: number
          transitionLinks:
            $ref: '#/definitions/orderTransitionLinks'
        required:
          - links
          - orderItems
          - transitionLinks
        type: object
  orderExportationReporting:
    description: Represent the reporting of the Order report exportations
    properties:
      abortionUtcDate:
        example: '2017-04-01T13:10:12Z'
        format: date-time
        type: string
      beginUtcDate:
        example: '2017-04-01T13:10:12Z'
        format: date-time
        type: string
      blobNameUri:
        example: 'http://beezuporder2.blob.com/yourReport.csv'
        type: string
      endUtcDate:
        example: '2017-04-01T15:10:12Z'
        format: date-time
        type: string
      enqueuedUtcDate:
        example: '2017-04-01T13:09:12Z'
        format: date-time
        type: string
      errorMessage:
        example: You have an error here
        type: string
      executionUUID:
        example: '00000000000000000000000000000000000000000000000'
        format: uuid
        type: string
      expirationUtcDate:
        example: '2017-04-01T13:39:12Z'
        format: date-time
        type: string
      failureUtcDate:
        example: '2017-04-01T13:39:12Z'
        format: date-time
        type: string
      ipAddress:
        example: 127.0.0.1
        type: string
      jsonCriteria:
        description: Raw representation of the JSON
        example: '{"StartDate:"2016-09-30T22:00:00Z","EndDate:"2016-10-30T23:00:00Z","OrderListingFilterDateSearchType:0,"MarketPlaceOrderIds:null,"BeezUPOrderStatusNames:null,"ResultByPage:20,"MerchantOrderIds:null,"PageIndex:0,"MarketPlaceTechnicalCodes:["PriceMinister","Amazon","CDiscount","Mirakl"],"MarketPlaceBusinessCodes:["PRICEMINISTER"],"AccountIds:[1234,987],"StoreIds:["00000000-0000-0000-0000-00000000007c"],"BuyerFullName:null}'
        type: string
      lastUpdateUtcDate:
        example: '2017-04-01T15:10:12Z'
        format: date-time
        type: string
      orderCount:
        example: 1024
        format: int32
        type: integer
      processingStatus:
        $ref: '#/definitions/orderExportationReportingProcessingStatus'
      remainingOrderCount:
        example: 0
        format: int32
        type: integer
      resumedUtcDate:
        example: '2017-04-01T13:39:12Z'
        format: date-time
        type: string
      sourceType:
        $ref: '#/definitions/sourceType'
      sourceUserId:
        $ref: '#/definitions/BeezUP.Common.UserId'
      sourceUserName:
        example: Marilyn monroe
        type: string
      suspendedUtcDate:
        example: '2017-04-01T13:39:12Z'
        format: date-time
        type: string
      timeoutDuration:
        example: '00:30:00'
        type: string
      warningMessage:
        example: You have a warning here
        type: string
    required:
      - enqueuedUtcDate
      - executionUUID
      - ipAddress
      - processingStatus
      - sourceType
      - sourceUserName
    type: object
  orderExportationReportingProcessingStatus:
    enum:
      - None
      - InProgress
      - Done
      - Failed
      - AlreadyInProgress
      - Aborted
      - Suspended
    example: Done
    type: string
  orderExportations:
    description: |
      The list of Order report exportations.\
      The paginationResult properties can be null if the list is empty.
    properties:
      exportations:
        items:
          $ref: '#/definitions/orderExportationReporting'
        type: array
      links:
        $ref: '#/definitions/orderExportationsLinks'
      paginationResult:
        $ref: '#/definitions/BeezUP.Common.PaginationResult'
    required:
      - links
      - exportations
    type: object
  orderExportationsLinks:
    properties:
      self:
        $ref: '#/definitions/links.GetOrderExportationsLink'
    required:
      - self
    type: object
  orderHeader:
    description: Describe the basic information related to an order. All properties with the prefix order_ are translated in the list of values /user/lov/OrderMetaInfoOrderDetails
    properties:
      accountId:
        $ref: '#/definitions/accountId'
      beezUPOrderId:
        $ref: '#/definitions/beezUPOrderId'
      beezUPOrderUrl:
        $ref: '#/definitions/BeezUP.Common.HttpUrl'
      etag:
        $ref: '#/definitions/etag'
      links:
        $ref: '#/definitions/orderHeaderLinks'
      marketplaceBusinessCode:
        $ref: '#/definitions/BeezUP.Common.MarketplaceBusinessCode'
      marketplaceTechnicalCode:
        $ref: '#/definitions/BeezUP.Common.MarketplaceTechnicalCode'
      order_Buyer_Name:
        $ref: '#/definitions/order_Buyer_Name'
      order_CurrencyCode:
        $ref: '#/definitions/BeezUP.Common.CurrencyCode'
      order_LastModificationUtcDate:
        description: The last modification UTC date done by BeezUP of this order
        example: '2017-04-16T10:30:23Z'
        format: date-time
        type: string
      order_MarketplaceLastModificationUtcDate:
        description: The last modification UTC date done by the marketplace on this order
        example: '2017-04-16T10:25:23Z'
        format: date-time
        type: string
      order_MarketplaceOrderId:
        $ref: '#/definitions/marketplaceOrderId'
      order_MerchantECommerceSoftwareName:
        $ref: '#/definitions/order_MerchantECommerceSoftwareName'
      order_MerchantECommerceSoftwareVersion:
        $ref: '#/definitions/order_MerchantECommerceSoftwareVersion'
      order_MerchantOrderId:
        $ref: '#/definitions/order_MerchantOrderId'
      order_PurchaseUtcDate:
        description: The purchase date of this order
        example: '2017-03-31T21:30:23Z'
        format: date-time
        type: string
      order_Status_BeezUPOrderStatus:
        $ref: '#/definitions/beezUPOrderStatus'
      order_Status_MarketplaceOrderStatus:
        $ref: '#/definitions/marketplaceOrderStatus'
      order_TotalPrice:
        description: The total price of this order (corresponding to the amount paid by the customer)
        example: 101.42
        format: decimal
        type: number
      processing:
        $ref: '#/definitions/processing'
    required:
      - marketplaceTechnicalCode
      - accountId
      - beezUPOrderId
      - marketplaceBusinessCode
      - order_MarketplaceOrderId
      - order_Status_BeezUPOrderStatus
      - order_PurchaseUtcDate
      - order_LastModificationUtcDate
      - order_MarketplaceLastModificationUtcDate
      - processing
      - etag
      - links
    type: object
  orderHeaderLinks:
    properties:
      self:
        $ref: '#/definitions/links.GetOrderLink'
    required:
      - self
    type: object
  orderHistory:
    description: Describe the history related to an order
    properties:
      changeOrderReportings:
        description: The list of change order operation
        items:
          $ref: '#/definitions/changeOrderReporting'
        type: array
      harvestOrderReportings:
        items:
          $ref: '#/definitions/harvestOrderReporting'
        type: array
      lastModificationUtcDate:
        format: date-time
        type: string
    type: object
  orderIdentifier:
    properties:
      accountId:
        $ref: '#/definitions/accountId'
      beezUPOrderId:
        $ref: '#/definitions/beezUPOrderId'
      marketplaceTechnicalCode:
        $ref: '#/definitions/BeezUP.Common.MarketplaceTechnicalCode'
    required:
      - marketplaceTechnicalCode
      - accountId
      - beezUPOrderId
    type: object
  orderIdentifierWithETag:
    allOf:
      - $ref: '#/definitions/orderIdentifier'
      - properties:
          etag:
            $ref: '#/definitions/etag'
        required:
          - etag
        type: object
  orderIndex:
    properties:
      links:
        $ref: '#/definitions/orderIndexLinks'
      lovLinks:
        $ref: '#/definitions/orderIndexLovLinks'
    required:
      - links
      - lovLinks
    type: object
  orderIndexLinks:
    description: Gives you all entry point operations you can do on this API
    properties:
      autoTransitions:
        $ref: '#/definitions/links.GetAutomaticTransitionsLink'
      clearMerchantInfos:
        $ref: '#/definitions/links.ClearMerchantOrderInfoListLink'
      export:
        $ref: '#/definitions/links.ExportOrdersLink'
      exportations:
        $ref: '#/definitions/links.GetOrderExportationsLink'
      harvest:
        $ref: '#/definitions/links.HarvestAllLink'
      lightOrders:
        $ref: '#/definitions/links.GetOrderListLightLink'
      orders:
        $ref: '#/definitions/links.GetOrderListFullLink'
      self:
        $ref: '#/definitions/links.GetOrderIndexLink'
      setMerchantInfos:
        $ref: '#/definitions/links.SetMerchantOrderInfoListLink'
      status:
        $ref: '#/definitions/links.GetMarketplaceAccountsSynchronizationLink'
    required:
      - self
      - status
      - harvest
      - setMerchantInfos
      - clearMerchantInfos
      - export
      - autoTransitions
      - orders
      - lightOrders
    type: object
  orderIndexLovLinks:
    description: 'Gives you all the LOV to get the translations realated to operation name, codes, property names and statuses.'
    properties:
      orderChangeBusinessOperationType:
        $ref: '#/definitions/BeezUP.Common.LOVLink3'
      orderProperty:
        $ref: '#/definitions/BeezUP.Common.LOVLink3'
      orderPropertyPosted:
        $ref: '#/definitions/BeezUP.Common.LOVLink3'
      orderState:
        $ref: '#/definitions/BeezUP.Common.LOVLink3'
    required:
      - orderChangeBusinessOperationType
      - orderState
      - orderProperty
      - orderPropertyPosted
    type: object
  orderItem:
    description: Describe an order item. All properties with the prefix orderItem_ are translated in the list of values /user/lov/OrderMetaInfoOrderItems
    properties:
      beezUPOrderItemId:
        description: The BeezUP identifier of the order Item
        example: '1'
        type: string
      orderItem_BeezUPStoreId:
        description: The store id in the beezup system related to the order item. This property will help you to match the order to the inventory system.
        example: 00000000-cceb-4c20-b2c9-000000000000
        type: string
      orderItem_ImageUrl:
        description: The URL of the image of the order item
        example: 'http://blabla.com//das6-45.jpg'
        type: string
      orderItem_ItemPrice:
        description: The price of the order item
        example: 6.86
        format: decimal
        type: number
      orderItem_ItemTax:
        description: The tax of the order item
        example: 0
        format: decimal
        type: number
      orderItem_MarketPlaceProductId:
        description: The marketplace product identifier of the order item
        example: ''
        type: string
      orderItem_MerchantImportedProductId:
        description: The product id indicated in the catalog importation in BeezUP system for this order item. This property will help you to match the order to the inventory system.
        example: '73267'
        type: string
      orderItem_MerchantImportedProductIdColumnName:
        description: The column name for the product id indicated in the catalog importation in BeezUP system related to this order item. This property will help you to match the order to the inventory system.
        example: reference
        type: string
      orderItem_MerchantImportedProductUrl:
        description: The product url indicated in the catalog importation in BeezUP system related to this order item
        example: 'http://blabla.com/my-folder/73267.html'
        type: string
      orderItem_MerchantProductId:
        description: The merchant product id of the order item
        example: BlaLdas6-4.5
        type: string
      orderItem_MerchantProductIdColumnName:
        description: The column name indicate in the mapping for the product id related to the order item
        example: reference_produit
        type: string
      orderItem_OrderItemType:
        description: The order item type of the order item
        example: Product
        type: string
      orderItem_Quantity:
        description: The quantity of the order item
        example: 1
        format: decimal
        type: number
      orderItem_Shipping_Price:
        description: The shipping price of the order item
        example: 0
        format: decimal
        type: number
      orderItem_Title:
        description: The title of the order item
        example: bLA acide-plomb 6v-4.5ah 70x48x106mm
        type: string
      orderItem_TotalPrice:
        description: The total price of the order item
        example: 6.86
        format: decimal
        type: number
    required:
      - beezUPOrderItemId
      - orderItem_OrderItemType
    type: object
  orderLinks:
    allOf:
      - $ref: '#/definitions/orderHeaderLinks'
      - properties:
          clearMerchantInfo:
            $ref: '#/definitions/links.ClearMerchantOrderInfoLink'
          harvest:
            $ref: '#/definitions/links.HarvestOrderLink'
          history:
            $ref: '#/definitions/links.GetOrderHistoryLink'
          setMerchantInfo:
            $ref: '#/definitions/links.SetMerchantOrderInfoLink'
        required:
          - history
          - harvest
          - setMerchantInfo
          - clearMerchantInfo
        type: object
  orderListFull:
    description: |
      The order list with all information we have from the orders and its items.\
      The paginationResult properties can be null if the list is empty. 
    properties:
      links:
        $ref: '#/definitions/orderListFullLinks'
      orders:
        items:
          $ref: '#/definitions/order'
        type: array
      paginationResult:
        $ref: '#/definitions/BeezUP.Common.PaginationResult'
    required:
      - orders
      - links
    type: object
  orderListFullLinks:
    allOf:
      - $ref: '#/definitions/orderListLinks'
      - properties:
          self:
            $ref: '#/definitions/links.GetOrderListFullLink'
        required:
          - self
        type: object
  orderListLight:
    description: |
      The order list with minimum information we have from the orders.\
      The paginationResult properties can be null if the list is empty. 
    properties:
      links:
        $ref: '#/definitions/orderListLightLinks'
      orders:
        items:
          $ref: '#/definitions/orderHeader'
        type: array
      paginationResult:
        $ref: '#/definitions/BeezUP.Common.PaginationResult'
    required:
      - orders
      - links
    type: object
  orderListLightLinks:
    allOf:
      - $ref: '#/definitions/orderListLinks'
      - properties:
          self:
            $ref: '#/definitions/links.GetOrderListLightLink'
        required:
          - self
        type: object
  orderListLinks:
    description: The list of actions you can do from the order list response
    properties:
      clearMerchantInfos:
        $ref: '#/definitions/links.ClearMerchantOrderInfoListLink'
      export:
        $ref: '#/definitions/links.ExportOrdersLink'
      harvest:
        $ref: '#/definitions/links.HarvestAllLink'
      setMerchantInfos:
        $ref: '#/definitions/links.SetMerchantOrderInfoListLink'
      status:
        $ref: '#/definitions/links.GetMarketplaceAccountsSynchronizationLink'
    required:
      - harvest
      - setMerchantInfos
      - clearMerchantInfos
      - export
      - status
    type: object
  orderListRequest:
    allOf:
      - $ref: '#/definitions/orderListRequestWithoutPagination'
      - properties:
          pageNumber:
            $ref: '#/definitions/pageNumber'
          pageSize:
            $ref: '#/definitions/pageSize'
        required:
          - pageSize
          - pageNumber
        type: object
  orderListRequestWithoutPagination:
    properties:
      accountIds:
        description: Account id list
        example:
          - 12345
        items:
          $ref: '#/definitions/accountId'
        type: array
      beezUPOrderStatuses:
        example:
          - InProgress
        items:
          $ref: '#/definitions/beezUPOrderStatus'
        type: array
      beginPeriodUtcDate:
        description: |
          The begin period you want to make the search. \
          The period MUST not be greater than 30 days.
          The begin period MUST be lower than the end period. 
        example: '2017-03-01T13:10:01Z'
        format: date-time
        type: string
      dateSearchType:
        $ref: '#/definitions/dateSearchType'
      endPeriodUtcDate:
        description: |
          The end period of you search. \
          The period MUST not be greater than 30 days. \
          The end period MUST be greater than the begin period. 
          The end period MUST be lower to the current date.
        example: '2017-04-01T13:10:01Z'
        format: date-time
        type: string
      marketplaceBusinessCodes:
        example:
          - PRICEMINISTER
        items:
          $ref: '#/definitions/BeezUP.Common.MarketplaceBusinessCode'
        type: array
      marketplaceOrderIds:
        example:
          - AmazonOrderId1234
        items:
          $ref: '#/definitions/marketplaceOrderId'
        type: array
      marketplaceTechnicalCodes:
        example:
          - PriceMinister
        items:
          $ref: '#/definitions/BeezUP.Common.MarketplaceTechnicalCode'
        type: array
      order_Buyer_Name:
        $ref: '#/definitions/order_Buyer_Name'
      order_MerchantOrderIds:
        description: Merchant order id list
        example:
          - MyOrderId1234
        items:
          $ref: '#/definitions/order_MerchantOrderId'
        type: array
    required:
      - dateSearchType
      - beginPeriodUtcDate
      - endPeriodUtcDate
    type: object
  orderOperationResponse:
    description: The response given by the batch operation for an order
    properties:
      errors:
        description: The error list
        items:
          $ref: '#/definitions/BeezUP.Common.UserErrorMessage'
        type: array
      order:
        $ref: '#/definitions/orderIdentifier'
      status:
        description: Indicates the http status corresponding to the individual operation
        example: 204
        type: integer
      success:
        description: Indicates if the operation succeed or not
        example: true
        type: boolean
    required:
      - order
      - success
      - status
    type: object
  orderTransitionLinks:
    description: Contains the authorized change actions for an order
    example:
      - href: /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000/ShipOrder
        method: POST
        parameters:
          If-Match:
            in: header
            required: true
            value: '"ca071a4580129f932a03971968ffef69"'
          request:
            in: body
            properties:
              order_Shipping_CarrierName:
                lovLink:
                  href: /v2/user/PriceMinisterCarrierName
                lovRequired: true
                required: true
                type: string
              order_Shipping_FulfillmentDate:
                required: true
                type: date-time
              order_Shipping_Method:
                lovLink:
                  href: /v2/user/ShippingMethod_PriceMinister
                lovRequired: false
                required: true
                type: string
              order_Shipping_ShipperTrackingNumber:
                required: true
                type: string
            schema: changeOrderRequest
            type: object
          testMode:
            in: query
            required: false
            type: boolean
            value: false
          userName:
            in: query
            required: true
            type: string
        rel: ShipOrder
        templated: true
      - href: /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000/CancelOrder
        method: POST
        parameters:
          If-Match:
            in: header
            required: true
            value: '"ca071a4580129f932a03971968ffef69"'
          request:
            in: body
            properties:
              order_Cancel_Reason:
                required: true
                type: string
            schema: changeOrderRequest
            type: object
          testMode:
            in: query
            required: false
            type: boolean
            value: false
          userName:
            in: query
            required: true
            type: string
        rel: CancelOrder
        templated: true
    items:
      $ref: '#/definitions/links.ChangeOrderLink'
    type: array
  order_Buyer_Name:
    description: Buyer full name
    example: Monroe
    type: string
  order_MerchantECommerceSoftwareName:
    description: The e-commerce software name of the merchant
    example: Prestashop
    type: string
  order_MerchantECommerceSoftwareVersion:
    description: The e-commece software version of the merchant
    example: 123.0.1
    type: string
  order_MerchantOrderId:
    description: The order merchant identifier
    example: MyOrderMerchantId
    type: string
  pageNumber:
    default: 1
    description: Indicates the page number
    example: 1
    format: int32
    minimum: 1
    type: integer
  pageSize:
    default: 100
    description: Indicate the order count per page
    example: 100
    format: int32
    maximum: 100
    minimum: 25
    type: integer
  paginationRequestParameters:
    properties:
      pageNumber:
        $ref: '#/definitions/pageNumber'
      pageSize:
        $ref: '#/definitions/pageSize'
    type: object
  paymentMethod:
    default: OnlinePayment
    description: Payment method
    enum:
      - Transfer
      - Debit
      - Paypal
      - Check
      - CreditNote
      - Loss
      - OnlinePayment
    type: string
  performanceIndicatorFormula:
    description: The KPI formula
    example:
      firstParameter: Cost
      operatorName: Multiply
      secondParamter: Turnover
      thirdParameter: 100
    properties:
      firstParameter:
        $ref: '#/definitions/performanceIndicatorFormulaParameterType'
      operatorName:
        $ref: '#/definitions/performanceIndicatorFormulaOperatorName'
      secondParameter:
        $ref: '#/definitions/performanceIndicatorFormulaParameterType'
      thirdParameter:
        default: 100
        description: Indicate the value of the third parameter of your formula
        example: 100
        type: integer
    type: object
  performanceIndicatorFormulaOperatorName:
    enum:
      - Multiply
      - Divide
    example: Multiply
    type: string
  performanceIndicatorFormulaParameterType:
    description: Indicate on which indicator or value you want to make your formula
    enum:
      - Cost
      - Turnover
      - Margin
      - OrderCount
      - ClickCount
      - TotalSales
      - One
    example: Cost
    type: string
  performanceIndicatorType:
    description: Indicate on which indicator or value you want to make your formula
    enum:
      - Cost
      - Turnover
      - Margin
      - OrderCount
      - ClickCount
      - TotalSales
    example: Cost
    type: string
  personalInfo:
    properties:
      beezUPTimeZoneId:
        $ref: '#/definitions/beezUPTimeZoneId'
      firstName:
        $ref: '#/definitions/firstName'
      lastName:
        $ref: '#/definitions/lastName'
      phoneNumber:
        $ref: '#/definitions/phoneNumber'
      whatIDo:
        $ref: '#/definitions/whatIDo'
    required:
      - firstName
      - lastName
      - phoneNumber
      - beezUPTimeZoneId
    type: object
  phoneNumber:
    description: Your phone number
    example: 5551234
    type: string
  postalCode:
    description: Your address postal code
    example: 13014
    type: string
  previousFixPeriodInvoiceProrataInfo:
    description: Describe the prorata info based on your previous invoice
    properties:
      amountAfterTax:
        description: The amout after tax of the previous invoice
        example: 101.42
        format: double
        type: number
      amountToBePaid:
        description: The amount to be payed of the previous invoice
        example: 0
        format: double
        type: number
      computedProrataToBeDeducted:
        description: The prorata amount
        example: 194.66
        format: double
        type: number
      contractId:
        description: The contract id related to the previous invoice
        example: 8a7fbdec-9e71-472e-9974-27d5c1d57cf8
        format: guid
        type: string
      fixedPeriodEndDate:
        description: The fixed end period of the previous invoice
        example: '2017-05-01'
        format: date
        type: string
      fixedPeriodStartDate:
        description: The fixed start period of the previous invoice
        example: '2017-04-01'
        format: date
        type: string
      invoiceNumber:
        description: The previous invoice number
        example: B1234
        type: string
    type: object
  processing:
    description: 'If true, there is currently a harvest or an order change in progress. Otherwise false.'
    example: false
    type: boolean
  product:
    description: Represent a catalog product
    properties:
      categoryId:
        $ref: '#/definitions/BeezUP.Common.CatalogCategoryId'
      exists:
        description: Indicates if the product exists in the current catalog
        example: true
        type: boolean
      productId:
        $ref: '#/definitions/BeezUP.Common.ProductId'
      values:
        $ref: '#/definitions/productValues'
    required:
      - productId
      - categoryId
      - values
      - exists
  productFilters:
    properties:
      additionalProductFilters:
        example:
          - columnId: 672644c7-5bd0-4e25-88c1-1f732bda5e4c
            operatorName: GreaterTo
            values:
              - 100
        items:
          $ref: '#/definitions/reportProductFilter'
        type: array
      sku:
        description: The product sku filter
        example: M1234
        type: string
      title:
        description: The product title filter
        example: RefrigÃ©rateur
        type: string
    type: object
  productList:
    properties:
      paginationResult:
        $ref: '#/definitions/BeezUP.Common.PaginationResult'
      products:
        items:
          $ref: '#/definitions/product'
        type: array
    required:
      - paginationResult
      - products
    type: object
  productOverrideWithCatalogValue:
    properties:
      catalogValue:
        description: The catalog product value
        example: Sony
        type: string
      override:
        description: The overridden product value
        example: Sony bravia
        type: string
    required:
      - override
    type: object
  productOverrides:
    additionalProperties:
      type: string
    description: The key is the channel column identifier
    example:
      0EA21509-1141-57BD-B679-371BC98B2ADA: 'http://www.blalbla.nl/images/cache/ldldld.jpg'
      2A77749D-0AAB-5245-89B5-6A1A4E06DACA: 'http://www.blalbla.nl/images/cache/dldldl.jpg'
      54B3B3CB-5CA5-5471-9DAE-5310C032059A: 'http://www.blalbla.nl/images/cache/dlmdl.jpg'
      57F70E81-E4F2-5034-BC65-E1D5C48EBEDA: Sony bravia
      8a76f06a-fefc-4c0d-bcfe-b210f1482977: '3563'
      B7B79A0B-A8DE-54DA-964C-E2704DF3738A: SHBELNL56
    type: object
  productOverridesWithCatalogValues:
    additionalProperties:
      $ref: '#/definitions/productOverrideWithCatalogValue'
    description: The key is the channel column identifier
    example:
      0EA21509-1141-57BD-B679-371BC98B2ADA:
        catalogValue: 'http://www.toto.com/thing/images/cache/ldldld.jpg'
        override: 'http://www.blalbla.nl/images/cache/ldldld.jpg'
      2A77749D-0AAB-5245-89B5-6A1A4E06DACA:
        catalogValue: 'http://www.toto.com/thing/images/cache/dldldl.jpg'
        override: 'http://www.blalbla.nl/images/cache/dldldl.jpg'
      54B3B3CB-5CA5-5471-9DAE-5310C032059A:
        catalogValue: 'http://www.toto.com/thing/cache/dlmdl.jpg'
        override: 'http://www.blalbla.nl/images/cache/dlmdl.jpg'
      57F70E81-E4F2-5034-BC65-E1D5C48EBEDA:
        catalogValue: Sony
        override: Sony bravia
      8a76f06a-fefc-4c0d-bcfe-b210f1482977:
        catalogValue: x235
        override: '3563'
      B7B79A0B-A8DE-54DA-964C-E2704DF3738A:
        catalogValue: x_ezlSHBELNL56
        override: SHBELNL56
    type: object
  productSample:
    description: Describe a product sample
    properties:
      productValues:
        $ref: '#/definitions/productValues'
    type: object
  productSetVisibilityCriteria:
    properties:
      disabled:
        description: Search disabled products. If null the filter will not be taken in account.
        example: false
        type: boolean
      excluded:
        description: Search excluded products by at least an exclusion filter. If null the filter will not be taken in account.
        example: false
        type: boolean
      exist:
        description: 'If false, search for products absent from the current catalog. If true, search for products currently in the catalog. If null the filter will not be taken in account.'
        example: true
        type: boolean
      logic:
        $ref: '#/definitions/productSetVisibilityCriteriaLogicType'
      uncategorized:
        description: Search product WITHOUT category mapped with the channel. If null the filter will not be taken in account.
        example: false
        type: boolean
    required:
      - logic
    type: object
  productSetVisibilityCriteriaLogicType:
    description: |
      Indicate how you want to combine the filters:
      * funnel: You will get the products which meet at least one of the product set criterion. The criteria are applied in the following order: 
        - categorization
        - exclusion filters
        - deactivations
      * cumulative: You will get the products which have all the product set criteria
    enum:
      - funnel
      - cumulative
    type: string
  productStateFilter:
    default: All
    description: You can filter on the product state.
    enum:
      - All
      - Enabled
      - Disabled
    example: All
    type: string
  productValues:
    additionalProperties:
      type: string
    description: The key is the column identifier
    example:
      012929c0-e78b-462a-a96e-25c061575385: 'http://media.conforama.fr/Medias/500000/80000/5000/500/10/G_585511_A.jpg'
      46602e10-bc45-4944-a440-63d5f7ece1f8: '42'
      68082b11-4ffd-4bec-964a-465a471c7d37: SKU1234
      b6d74510-41ce-42ec-947a-0bdf62e9beee: Refrigerateur
      ba270fa0-8482-46be-905a-cae4ca746b92: 'http://www.conforama.fr/gros-electromenager/encastrable/refrigerateur-encastrable/refrigerateur-combine-161-litres-far-r5115s/p/585511'
    type: object
  profilePictureInfo:
    properties:
      profilePictureSelected:
        $ref: '#/definitions/profilePictureSelected'
      profilePictureUrl:
        $ref: '#/definitions/profilePictureUrl'
    required:
      - profilePictureSelected
    type: object
  profilePictureInfoResponse:
    properties:
      links:
        $ref: '#/definitions/profilePictureInfoResponseLinks'
      profilePictureInfo:
        $ref: '#/definitions/profilePictureInfoWithDefault'
    required:
      - profilePictureInfo
      - links
    type: object
  profilePictureInfoResponseLinks:
    properties:
      save:
        $ref: '#/definitions/links.saveProfilePictureInfoLink'
      self:
        $ref: '#/definitions/links.getProfilePictureInfoLink'
    required:
      - self
      - save
    type: object
  profilePictureInfoWithDefault:
    allOf:
      - $ref: '#/definitions/profilePictureInfo'
      - properties:
          gravatarProfilePictureUrl:
            $ref: '#/definitions/gravatarProfilePictureUrl'
          initialsProfilePictureUrl:
            $ref: '#/definitions/initialsProfilePictureUrl'
        required:
          - initialsProfilePictureUrl
          - gravatarProfilePictureUrl
        type: object
  profilePictureSelected:
    description: 'Your profile picture choice about usage of gravatar picture, initials picture or uploaded picture.'
    enum:
      - gravatar
      - initials
      - uploaded
    example: initials
    type: string
  profilePictureUrl:
    description: Indicate the url of your picture profil
    example: 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e5/Marlon_Brando_%28cropped%29.jpg/220px-Marlon_Brando_%28cropped%29.jpg'
    pattern: '^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$'
    type: string
  promotionalCodeValidity:
    description: Indicate the validaty of the discount
    enum:
      - None
      - Valid
      - Invalid
      - ExpiredOrInactive
    example: Valid
    type: string
  publicChannelIndex:
    properties:
      channels:
        additionalProperties:
          $ref: '#/definitions/links.GetChannelsLink'
        description: The key is the country iso code
        example:
          DEU:
            href: /v2/public/channels/DEU
            method: GET
          ESP:
            href: /v2/public/channels/ESP'
            method: GET
          FRA:
            href: /v2/public/channels/FRA
            method: GET
          GBR:
            href: /v2/public/channels/GBR
            method: GET
          ITA:
            href: /v2/public/channels/ITA
            method: GET
        type: object
      links:
        example:
          channelCountryLov:
            href: /v2/public/lov/www_ChannelCountry
            method: GET
          channelTypeLov:
            href: /v2/public/lov/ChannelType
            method: GET
          sectorLov:
            href: /v2/public/lov/ParamSector
            method: GET
          self:
            href: /v2/public/channels
            method: GET
        properties:
          channelCountryLov:
            $ref: '#/definitions/links.GetPublicListOfValuesLink'
          channelTypeLov:
            $ref: '#/definitions/links.GetPublicListOfValuesLink'
          sectorLov:
            $ref: '#/definitions/links.GetPublicListOfValuesLink'
          self:
            $ref: '#/definitions/links.GetChannelsIndexLink'
        type: object
    type: object
  publicListOfValuesResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/BeezUP.Common.ListOfValueItem'
        type: array
      links:
        $ref: '#/definitions/publicListOfValuesResponseLinks'
    type: object
  publicListOfValuesResponseLinks:
    properties:
      self:
        $ref: '#/definitions/links.GetPublicListOfValuesLink'
    type: object
  publicLovIndex:
    properties:
      links:
        $ref: '#/definitions/publicLovIndexLinks'
    type: object
  publicLovIndexLinks:
    properties:
      lists:
        $ref: '#/definitions/publicLovLinks'
      self:
        $ref: '#/definitions/links.GetPublicLovIndexLink'
    type: object
  publicLovLinks:
    additionalProperties:
      $ref: '#/definitions/links.GetPublicListOfValuesLink'
    description: List of lov link. The key is the list name.
    type: object
  publicationFeedReporting:
    description: Publication feed reporting
    properties:
      completed:
        description: Indicates if the publication is completed or not
        example: true
        type: boolean
      endUtcDate:
        description: The feed publication end time (UTC timezone)
        example: '2016-02-13T12:02:00Z'
        format: date-time
        type: string
      errorMessage:
        description: The error message
        example: ''
        type: string
      exportedProducts:
        description: The product count downloaded from BeezUP Export
        example: 10142
        format: int32
        type: integer
      failedItems:
        description: The item count (products or offers) the marketplace flagged as failed
        example: 1
        format: int32
        type: integer
      feedType:
        $ref: '#/definitions/feedType'
      htmlReportGenerationErrorMessage:
        description: The error message if the Html Report generation failed
        example: Example error message
        type: string
      htmlReportUrl:
        description: The Url for the Html Report generated
        example: 'http://www.myreporthtml.com'
        format: uri
        type: string
      processingStatus:
        description: The processing status
        example: Done
        type: string
      publishedItems:
        description: The item count (products or offers) the marketplace flagged as successful
        example: 10041
        format: int32
        type: integer
      publishedItemsWithWarning:
        description: The item count (products or offers) the marketplace flagged as successful with warnings
        example: 123
        format: int32
        type: integer
      startUtcDate:
        description: The feed publication start time (UTC timezone)
        example: '2016-02-13T12:01:11Z'
        format: date-time
        type: string
      transmittedItems:
        description: The item count (products or offers) sent to the marketplace
        example: 10042
        format: int32
        type: integer
    required:
      - feedType
      - processingStatus
      - startUtcDate
    type: object
  publicationReporting:
    description: 'Model for a publication reporting, can have multiple feeds'
    properties:
      feeds:
        description: The feeds that were published
        example:
          - endUtcDate: '2016-02-13T12:02:00Z'
            errorMessage: ''
            exportedProducts: 10142
            failedItems: 1
            feedType: Offers
            htmlReportGenerationErrorMessage: ''
            htmlReportUrl: 'http://www.myreporthtml.com'
            processingStatus: Done
            publishedItems: 10041
            publishedItemsWithWarning: 123
            startUtcDate: '2016-02-13T12:01:11Z'
            transmittedItems: 10042
        items:
          $ref: '#/definitions/publicationFeedReporting'
        type: array
      publicationType:
        $ref: '#/definitions/publicationType'
    required:
      - publicationType
      - feeds
    type: object
  publicationType:
    description: The Publication Type
    enum:
      - PublishProducts
      - PublishOffers
      - Unpublish
    example: PublishOffers
    type: string
    x-lov: MarketplacePublicationType
  randomProductList:
    properties:
      products:
        items:
          $ref: '#/definitions/product'
        type: array
    required:
      - products
    type: object
  registerRequest:
    properties:
      commercialOwnerUserId:
        description: The user id of your commercial in BeezUP.
        example: 47ea14ab-195d-4f9a-a24e-32c329ee40f6
        format: uuid
        type: string
      cultureName:
        description: |
          Can be null. Default: en-GB. The culture name you want to use. FYI. \
          The email activation will use this culture.
        example: en-GB
        type: string
      email:
        description: Your email. We refuse disposable email.
        example: myemail@mycompany.com
        type: string
      password:
        description: |
          The password you want to use for your new account. \
          The password length must be greater or equals to 6 and lower or equals to 128. \
          The password must contains at least one number and one special character
        example: I@mW0nder$Full
        type: string
    required:
      - email
      - password
    type: object
  reportAdvancedFilters:
    properties:
      globalMarginPercent:
        description: 'If the margin type is ''Global'', indicate the percentage of sale price.'
        example: 10
        maximum: 100
        minimum: 0
        type: integer
      linkClickToOrderMaxDay:
        default: 30
        description: 'If the linkOrderType is OnClickDate, indicate the max day to search the click from the order'
        example: 5
        maximum: 180
        minimum: 0
        type: integer
      linkClickToOrderType:
        $ref: '#/definitions/linkClickToOrderType'
      margingType:
        $ref: '#/definitions/margingType'
      onlyDirectSales:
        default: false
        description: 'If true, you will get only direct sales. Otherwise the indirect sales will be included.'
        example: true
        type: boolean
      onlyPaymentValidatedOrders:
        default: false
        description: 'If true, you will get the only the orders with payment validated. Otherwise, you will get all orders validated or not.'
        example: true
        type: boolean
      performanceIndicatorFormula:
        $ref: '#/definitions/performanceIndicatorFormula'
    required:
      - margingType
      - linkClickToOrderType
      - onlyPaymentValidatedOrders
      - onlyDirectSales
      - performanceIndicatorFormula
    type: object
  reportByCategory:
    properties:
      catalogCategoryId:
        $ref: '#/definitions/BeezUP.Common.CatalogCategoryId'
      catalogCategoryPath:
        $ref: '#/definitions/BeezUP.Common.CatalogCategoryPath'
      catalogProductCount:
        description: The catalog product count related to this category
        example: 101
        type: integer
      clickCount:
        description: The click count for this category
        example: 1001
        type: integer
      cost:
        description: The cost for this category
        example: 12.42
        type: number
      enabledProductCount:
        description: The enabled product count for this category
        example: 101
        type: integer
      links:
        $ref: '#/definitions/reportByCategoryLinks'
      margin:
        description: The margin for this category
        example: 3.33
        type: number
      orderCount:
        description: The order count for this category
        example: 25.33
        type: integer
      performanceIndicator:
        description: The performance indicator based on the performance indicator formula indicated in the request for this category
        example: 25.33
        type: number
      turnOver:
        description: The Turnover for this category
        example: 25.33
        type: number
    required:
      - catalogCategoryId
      - enabledProductCount
      - catalogProductCount
      - clickCount
      - cost
      - orderCount
      - turnOver
      - margin
      - performanceIndicator
    type: object
  reportByCategoryLinks:
    properties:
      disableProducts:
        $ref: '#/definitions/links.OptimiseByCategoryLink'
      enableProducts:
        $ref: '#/definitions/links.OptimiseByCategoryLink'
    type: object
  reportByCategoryRequest:
    allOf:
      - $ref: '#/definitions/reportFilterCommonParameters'
      - $ref: '#/definitions/paginationRequestParameters'
  reportByCategoryResponse:
    properties:
      categories:
        items:
          $ref: '#/definitions/reportByCategory'
        type: array
      currencyCode:
        $ref: '#/definitions/BeezUP.Common.CurrencyCode'
      links:
        $ref: '#/definitions/reportByCategoryResponseLinks'
      paginationResult:
        $ref: '#/definitions/BeezUP.Common.PaginationResult'
    type: object
  reportByCategoryResponseLinks:
    allOf:
      - $ref: '#/definitions/reportByCommonResponseLinks'
  reportByChannel:
    properties:
      catalogProductCount:
        description: The catalog product count for this channel
        example: 101
        type: integer
      channel:
        $ref: '#/definitions/BeezUP.Common.ChannelBasicInfo'
      clickCount:
        description: The click count for this channel
        example: 1024
        type: integer
      cost:
        description: The cost for this channel
        example: 1234.12
        type: number
      enabledProductCount:
        description: The enabled product count for this channel
        example: 101
        type: integer
      links:
        $ref: '#/definitions/reportByChannelLinks'
      margin:
        description: The margin for this channel
        example: 23.1
        type: number
      orderCount:
        description: The order count for this channel
        example: 42
        type: integer
      performanceIndicator:
        description: The performance indicator based on the performance indicator formula indicated in the request for this channel
        example: 12.21
        type: number
      turnOver:
        description: The Turnover for this channel
        example: 42.42
        type: number
    required:
      - channel
      - enabledProductCount
      - catalogProductCount
      - clickCount
      - cost
      - orderCount
      - turnOver
      - margin
      - performanceIndicator
    type: object
  reportByChannelLinks:
    properties:
      disableProducts:
        $ref: '#/definitions/links.OptimiseByChannelLink'
      enableProducts:
        $ref: '#/definitions/links.OptimiseByChannelLink'
    type: object
  reportByChannelRequest:
    allOf:
      - $ref: '#/definitions/reportFilterCommonParameters'
      - $ref: '#/definitions/paginationRequestParameters'
  reportByChannelResponse:
    properties:
      channels:
        items:
          $ref: '#/definitions/reportByChannel'
        type: array
      currencyCode:
        $ref: '#/definitions/BeezUP.Common.CurrencyCode'
      links:
        $ref: '#/definitions/reportByChannelResponseLinks'
      paginationResult:
        $ref: '#/definitions/BeezUP.Common.PaginationResult'
    required:
      - currencyCode
      - paginationResult
      - channels
      - links
    type: object
  reportByChannelResponseLinks:
    allOf:
      - $ref: '#/definitions/reportByCommonResponseLinks'
  reportByCommonResponseLinks:
    properties:
      disableAllProducts:
        $ref: '#/definitions/links.OptimiseLink'
      enableAllProducts:
        $ref: '#/definitions/links.OptimiseLink'
    type: object
  reportByDay:
    properties:
      allChannels:
        $ref: '#/definitions/reportByDayAllChannels'
      byChannels:
        items:
          $ref: '#/definitions/reportByDayByChannel'
        type: array
      day:
        example: '2017-04-23T18:25:43.511Z'
        format: date
        type: string
    required:
      - day
      - allChannels
      - byChannels
    type: object
  reportByDayAllChannels:
    properties:
      clickCount:
        description: The click count for this channel
        example: 101
        type: integer
      cost:
        description: The cost for this channel
        example: 10.42
        type: number
      margin:
        description: The margin for this channel
        example: 42.42
        type: number
      orderCount:
        description: The order count for this channel
        example: 42
        type: integer
      performanceIndicator:
        description: The performance indicator based on the performance indicator formula indicated in the request for this channel
        example: 23.09
        type: number
      turnOver:
        description: The Turnover for this channel
        example: 23.11
        type: number
    required:
      - clickCount
      - cost
      - orderCount
      - turnOver
      - margin
      - performanceIndicator
    type: object
  reportByDayByChannel:
    properties:
      channel:
        $ref: '#/definitions/BeezUP.Common.ChannelBasicInfo'
      clickCount:
        description: The click count for this channel
        example: 101
        type: integer
      cost:
        description: The cost for this channel
        example: 10.42
        type: number
      margin:
        description: The margin for this channel
        example: 42.42
        type: number
      orderCount:
        description: The order count for this channel
        example: 42
        type: integer
      performanceIndicator:
        description: The performance indicator based on the performance indicator formula indicated in the request for this channel
        example: 23.09
        type: number
      turnOver:
        description: The Turnover for this channel
        example: 23.11
        type: number
    required:
      - channel
      - clickCount
      - cost
      - orderCount
      - turnOver
      - margin
      - performanceIndicator
    type: object
  reportByDayRequest:
    properties:
      advancedFilters:
        $ref: '#/definitions/reportAdvancedFilters'
      beginPeriodUtcDate:
        description: The begin date period you want to get the report
        example: '2006-11-20T00:00:00Z'
        format: date-time
        type: string
      catalogCategoryId:
        $ref: '#/definitions/BeezUP.Common.CatalogCategoryId'
      channelIds:
        description: Indicate the channel identifier list
        example:
          - 2dc136a7-0d3d-4cc9-a825-a28a42c53e28
        items:
          $ref: '#/definitions/BeezUP.Common.ChannelId'
        type: array
      endPeriodUtcDate:
        description: The end date period you want to get the report.
        example: '2006-12-20T00:00:00Z'
        format: date-time
        type: string
      productId:
        $ref: '#/definitions/BeezUP.Common.ProductId'
    required:
      - beginPeriodUtcDate
      - endPeriodUtcDate
    type: object
  reportByDayResponse:
    properties:
      currencyCode:
        $ref: '#/definitions/BeezUP.Common.CurrencyCode'
      days:
        items:
          $ref: '#/definitions/reportByDay'
        type: array
      globalPerformanceIndicators:
        items:
          $ref: '#/definitions/globalPerformanceIndicatorByChannel'
        type: array
    required:
      - currencyCode
      - globalPerformanceIndicators
      - days
    type: object
  reportByProduct:
    properties:
      channelCount:
        description: The channel count where this product can be enabled
        example: 2
        type: integer
      clickCount:
        description: The click count for this product
        example: 1234
        type: integer
      cost:
        description: The cost for this product
        example: 101.42
        type: number
      enabledOnChannelCount:
        description: The count of channel where this product is enabled
        example: 1
        type: integer
      links:
        $ref: '#/definitions/reportByProductLinks'
      margin:
        description: The margin for this product
        example: 50
        type: number
      orderCount:
        description: The order count for this product
        example: 234.42
        type: integer
      performanceIndicator:
        description: The performance indicator based on the performance indicator formula indicated in the request for this product
        example: 10.12
        type: number
      product:
        $ref: '#/definitions/BeezUP.Common.ProductBasicInfo'
      turnOver:
        description: The Turnover for this product
        example: 42.01
        type: number
    required:
      - product
      - enabledOnChannelCount
      - channelCount
      - clickCount
      - cost
      - orderCount
      - turnOver
      - margin
      - performanceIndicator
      - links
    type: object
  reportByProductLinks:
    properties:
      disableProduct:
        $ref: '#/definitions/links.OptimiseByProductLink'
      editProduct:
        $ref: '#/definitions/links.GetChannelCatalogProductInfoLink'
      enableProduct:
        $ref: '#/definitions/links.OptimiseByProductLink'
    type: object
  reportByProductRequest:
    allOf:
      - $ref: '#/definitions/reportFilterCommonParameters'
      - $ref: '#/definitions/paginationRequestParameters'
      - properties:
          productColumnsToDisplay:
            example:
              - 4b460e31-3d1f-4117-922d-b159a64ec1d2
            items:
              $ref: '#/definitions/BeezUP.Common.CatalogColumnId'
            maxItems: 1
            minItems: 0
            type: array
          productFilters:
            $ref: '#/definitions/productFilters'
          productState:
            $ref: '#/definitions/productStateFilter'
        required:
          - productState
        type: object
  reportByProductResponse:
    properties:
      links:
        $ref: '#/definitions/reportByProductResponseLinks'
      paginationResult:
        $ref: '#/definitions/BeezUP.Common.PaginationResult'
      products:
        items:
          $ref: '#/definitions/reportByProduct'
        type: array
    required:
      - paginationResult
      - products
      - links
    type: object
  reportByProductResponseLinks:
    allOf:
      - $ref: '#/definitions/reportByCommonResponseLinks'
  reportCategoryFilter:
    properties:
      categoryPath:
        description: Indicates on which category path you want to make the filter
        example:
          - Home
          - Bedroom
        items:
          type: string
        type: array
    type: object
  reportFilter:
    properties:
      links:
        $ref: '#/definitions/reportFilterLinks'
      parameters:
        $ref: '#/definitions/reportFilterParameters'
      reportFilterId:
        description: Report filter identifier
        example: fb19c53c-2f63-4262-9d94-2d7faa500acd
        format: guid
        type: string
      reportFilterName:
        description: Report filter name
        example: My report filter
        type: string
    required:
      - reportFilterId
      - reportFilterName
      - parameters
    type: object
  reportFilterCommonParameters:
    description: Contains common filter parameters
    properties:
      advancedFilters:
        $ref: '#/definitions/reportAdvancedFilters'
      beginPeriodUtcDate:
        description: The begin date period you want to get the report
        example: '2006-11-20T00:00:00Z'
        format: date-time
        type: string
      categoryFilter:
        $ref: '#/definitions/reportCategoryFilter'
      channelId:
        $ref: '#/definitions/BeezUP.Common.ChannelId'
      endPeriodUtcDate:
        description: The end date period you want to get the report.
        example: '2006-12-20T00:00:00Z'
        format: date-time
        type: string
      indicatorFilters:
        example:
          - indicator: Cost
            operatorName: Equals
            value: 10.42
        items:
          $ref: '#/definitions/reportIndicatorFilter'
        type: array
    required:
      - beginPeriodUtcDate
      - endPeriodUtcDate
      - advancedFilters
    type: object
  reportFilterHeader:
    properties:
      links:
        $ref: '#/definitions/reportFilterHeaderLinks'
      reportFilterId:
        description: Report filter identifier
        example: fb19c53c-2f63-4262-9d94-2d7faa500acd
        format: guid
        type: string
      reportFilterName:
        description: Report filter name
        example: My report filter
        type: string
      reportType:
        $ref: '#/definitions/reportType'
    required:
      - reportFilterName
      - reportFilterId
      - reportType
      - links
    type: object
  reportFilterHeaderLinks:
    properties:
      self:
        $ref: '#/definitions/links.GetReportFilterLink'
    type: object
  reportFilterLinks:
    description: Indicates the actions you can do on this report filter
    properties:
      delete:
        $ref: '#/definitions/links.DeleteReportFilterLink'
      save:
        $ref: '#/definitions/links.SaveReportFilterLink'
      self:
        $ref: '#/definitions/links.GetReportFilterLink'
    type: object
  reportFilterParameters:
    allOf:
      - $ref: '#/definitions/reportFilterCommonParameters'
      - properties:
          productFilters:
            $ref: '#/definitions/productFilters'
          productState:
            $ref: '#/definitions/productStateFilter'
          reportType:
            $ref: '#/definitions/reportType'
        required:
          - reportType
        type: object
  reportFilters:
    properties:
      links:
        $ref: '#/definitions/reportFiltersLinks'
      reportFilters:
        items:
          $ref: '#/definitions/reportFilterHeader'
        type: array
    type: object
  reportFiltersLinks:
    properties:
      save:
        $ref: '#/definitions/links.SaveReportFilterLink'
      self:
        $ref: '#/definitions/links.GetReportFiltersLink'
    type: object
  reportIndicatorFilter:
    properties:
      indicator:
        $ref: '#/definitions/performanceIndicatorType'
      operatorName:
        $ref: '#/definitions/reportIndicatorFilterOperatorName'
      value:
        description: Indicates the filter value to apply on this indicator
        example: 10.42
        type: number
    required:
      - indicator
      - operatorName
      - value
    type: object
  reportIndicatorFilterOperatorName:
    description: Indicates the operator you want to apply on this indicator
    enum:
      - Equals
      - GreaterTo
      - LowerTo
    example: Equals
    type: string
  reportProductFilter:
    description: Describe a filter on a product's column
    properties:
      columnId:
        description: The column identifier of your catalog or a custom column.
        example: 672644c7-5bd0-4e25-88c1-1f732bda5e4c
        format: guid
        type: string
      operatorName:
        $ref: '#/definitions/reportProductFilterOperatorName'
      values:
        description: Must be null if the operator is "IsNull" or "IsNotNull". Can contains multiple value in case of "InList" operator. Otherwise a single value is expected.
        example:
          - My value
        items:
          type: string
        type: array
    required:
      - columnId
      - operatorName
    type: object
  reportProductFilterOperatorName:
    description: Indicate the operator you want to make on the columnId
    enum:
      - Equals
      - Contains
      - GreaterTo
      - LowerTo
      - InList
      - IsNull
      - IsNotNull
    type: string
  reportType:
    description: The report type
    enum:
      - ByChannel
      - ByCategory
      - ByProduct
      - ByDate
    example: ByProduct
    type: string
  rule:
    properties:
      actionName:
        $ref: '#/definitions/optimisationActionName'
      enabled:
        description: Is the rule enabled
        example: true
        type: boolean
      lastExecutionStatus:
        $ref: '#/definitions/ruleLastExecutionStatus'
      lastExecutionUtcDate:
        description: The utc date of the last execution
        example: '2016-08-29T09:12:33.001Z'
        format: date-time
        type: string
      links:
        $ref: '#/definitions/ruleLinks'
      position:
        description: Rule execution position
        example: 1
        type: integer
      reportFilterId:
        description: Report filter identifier linked to the rule
        example: fb19c53c-2f63-4262-9d94-2d7faa500acd
        format: guid
        type: string
      ruleId:
        description: The identifier of the rule
        example: c38006b4-29d0-4b8a-978b-701a0b12d5a8
        format: guid
        type: string
      ruleName:
        description: The name of the rule
        example: My Rule
        type: string
      validityEndUtcDate:
        description: Rule validity end utc date
        example: '3016-08-29T09:12:33.001Z'
        format: date-time
        type: string
      validityStartUtcDate:
        description: Rule validity start utc date
        example: '2016-08-29T09:12:33.001Z'
        format: date-time
        type: string
    required:
      - ruleId
      - ruleName
      - actionName
      - reportFilterId
      - position
      - enabled
      - links
    type: object
  ruleExecutionReporting:
    properties:
      activeAffectedProductCount:
        description: The count of affected active products
        example: 1
        type: integer
      affectedChannelCount:
        description: The count of affected Channels across all products
        example: 1
        type: integer
      affectedProductCount:
        description: 'The count of affected products, active or not'
        example: 1
        type: integer
      completedUtcDate:
        description: The completed utc date of the execution of the rule
        example: '2016-08-29T09:12:33.001Z'
        format: date-time
        type: string
      errorType:
        $ref: '#/definitions/ruleExecutionReportingErrorType'
      executionSource:
        $ref: '#/definitions/ruleExecutionReportingExecutionSource'
      links:
        $ref: '#/definitions/ruleExecutionReportingLinks'
      optimisationActionName:
        $ref: '#/definitions/optimisationActionName'
      reportUrl:
        description: The url for the excel report for this execution
        example: 'http://www.google.com'
        type: string
      ruleId:
        description: The rule identifier
        example: fd9a23a1-569b-40af-af91-f7275a57bf89
        format: guid
        type: string
      ruleName:
        description: The name of the rule
        example: toto
        type: string
      startedUtcDate:
        description: The start utc date of the execution of the rule
        example: '2016-08-29T09:12:33.001Z'
        format: date-time
        type: string
      status:
        $ref: '#/definitions/ruleExecutionReportingStatus'
      userId:
        description: The userId that executed the rule if any
        example: e8289350-69f8-45a6-b0ca-b641c83e0422
        format: guid
        type: string
    required:
      - ruleId
      - ruleName
      - status
      - executionSource
    type: object
  ruleExecutionReportingErrorType:
    description: The error type for this execution if any
    enum:
      - ChannelNotPresent
      - StoreIsInSystemBlockState
    example: ChannelNotPresent
    type: string
  ruleExecutionReportingExecutionSource:
    description: The requestor type for the execution of the rule
    enum:
      - Scheduler
      - User
    example: User
    type: string
  ruleExecutionReportingLinks:
    description: Links to retrieve/action on this rule execution
    properties:
      rule:
        $ref: '#/definitions/links.GetRuleLink'
    type: object
  ruleExecutionReportingStatus:
    description: The status of the execution of the rule
    enum:
      - InProgress
      - Succeeded
      - Failed
      - Unknown
    example: Succeeded
    type: string
  ruleExecutionReportings:
    properties:
      executions:
        description: The rules executions history
        items:
          $ref: '#/definitions/ruleExecutionReporting'
        type: array
      paginationResult:
        $ref: '#/definitions/BeezUP.Common.PaginationResult'
    type: object
  ruleLastExecutionStatus:
    description: The status of the last execution
    enum:
      - InProgress
      - Succeeded
      - Failed
      - Unknown
    example: Succeeded
    type: string
  ruleLinks:
    description: Links to retrieve/action on other entities
    properties:
      delete:
        $ref: '#/definitions/links.DeleteRuleLink'
      disable:
        $ref: '#/definitions/links.DisableRuleLink'
      enable:
        $ref: '#/definitions/links.EnableRuleLink'
      movedown:
        $ref: '#/definitions/links.MoveDownRuleLink'
      moveup:
        $ref: '#/definitions/links.MoveUpRuleLink'
      reportFilter:
        $ref: '#/definitions/links.GetReportFilterLink'
      run:
        $ref: '#/definitions/links.RunRuleLink'
      self:
        $ref: '#/definitions/links.GetRuleLink'
      update:
        $ref: '#/definitions/links.UpdateRuleLink'
    type: object
  ruleList:
    properties:
      links:
        $ref: '#/definitions/ruleListLinks'
      rules:
        description: Rule list
        items:
          $ref: '#/definitions/rule'
        type: array
    required:
      - rules
      - links
    type: object
  ruleListLinks:
    description: Links to know if the user can create a rule or run all rules
    properties:
      create:
        $ref: '#/definitions/links.CreateRuleLink'
      history:
        $ref: '#/definitions/links.GetRulesExecutionsLink'
      run:
        $ref: '#/definitions/links.RunRulesLink'
      self:
        $ref: '#/definitions/links.GetRulesLink'
    type: object
  saveReportFilterRequest:
    properties:
      parameters:
        $ref: '#/definitions/reportFilterParameters'
      reportFilterName:
        description: Report filter name
        example: My report filter
        type: string
    required:
      - reportFilterName
      - parameters
    type: object
  saveStoreAlertRequest:
    properties:
      enabled:
        $ref: '#/definitions/alertEnabled'
      properties:
        description: Properties to configure the alert
        example:
          - propertyId: 2
            propertyValue: '3'
        items:
          $ref: '#/definitions/storeAlertProperty'
        type: array
    required:
      - enabled
    type: object
  saveStoreAlertsRequest:
    additionalProperties:
      $ref: '#/definitions/saveStoreAlertRequest'
    description: The key is the alert identifier (alertId)
    type: object
  scheduleAutoImportRequest:
    description: The message request to schedule the auto import
    properties:
      localTimeZoneName:
        default: Romance Standard Time
        description: If null the local time zone name will be "Romance Standard Time"
        example: Romance Standard Time
        type: string
      schedules:
        description: 'Indicate the time span you want to import your catalog. (i.e. "21:00:00" to import your catalog at 9PM)'
        example:
          - '21:00:00'
          - '23:00:00'
          - '08:30:00'
        items:
          pattern: '(00:1[5-9])|(00:[2-5][0-9])|(0[1-9]:[0-5][0-9])|(1[0-9]:[0-5][0-9])|(2[0-3]:[0-5][0-9])'
          type: string
        minItems: 1
        type: array
        uniqueItems: true
    required:
      - schedules
    type: object
  schedulingType:
    default: Interval
    description: Indicate the scheduling type. Schedule or Interval. We recommand you to use interval for a better reporting.
    enum:
      - Schedule
      - Interval
    example: Schedule
    type: string
  setChannelCatalogMarketplaceSettingsRequest:
    description: The channel catalog marketplace settings to save
    properties:
      settings:
        $ref: '#/definitions/channelCatalogMarketplaceSettingArray'
    required:
      - settings
    type: object
  setMerchantOrderInfoListRequest:
    properties:
      order_MerchantECommerceSoftwareName:
        $ref: '#/definitions/order_MerchantECommerceSoftwareName'
      order_MerchantECommerceSoftwareVersion:
        $ref: '#/definitions/order_MerchantECommerceSoftwareVersion'
      orders:
        example:
          - accountId: 1234
            beezUPOrderId: 8D47FF1427A26B064ca98e95f644361ada5a5be0bbb3b53
            marketplaceTechnicalCode: Amazon
            order_MerchantOrderId: BX1234
          - accountId: 5678
            beezUPOrderId: 8D47FF149F213D055f26e3c413e4c9ba5c5cfda460547a4
            marketplaceTechnicalCode: Amazon
            order_MerchantOrderId: BX5678
          - accountId: 9876
            beezUPOrderId: 8D47FF150217B60bdec05ab61c445d1a59e3da050b52823
            marketplaceTechnicalCode: Ebay
            order_MerchantOrderId: BX9876
        items:
          $ref: '#/definitions/setMerchantOrderInfoListRequestItem'
        maxItems: 100
        minItems: 1
        type: array
        uniqueItems: true
    required:
      - order_MerchantECommerceSoftwareName
      - order_MerchantECommerceSoftwareVersion
      - orders
    type: object
  setMerchantOrderInfoListRequestItem:
    allOf:
      - $ref: '#/definitions/orderIdentifier'
      - properties:
          order_MerchantOrderId:
            $ref: '#/definitions/order_MerchantOrderId'
        required:
          - order_MerchantOrderId
        type: object
  setMerchantOrderInfoRequest:
    properties:
      order_MerchantECommerceSoftwareName:
        $ref: '#/definitions/order_MerchantECommerceSoftwareName'
      order_MerchantECommerceSoftwareVersion:
        $ref: '#/definitions/order_MerchantECommerceSoftwareVersion'
      order_MerchantOrderId:
        $ref: '#/definitions/order_MerchantOrderId'
    required:
      - order_MerchantOrderId
      - order_MerchantECommerceSoftwareName
      - order_MerchantECommerceSoftwareVersion
    type: object
  sourceType:
    description: Indicates the origin of the operation
    enum:
      - Api
      - Go
    example: Api
    type: string
  standardOffer:
    properties:
      additionalClickPrice:
        description: The additional click price
        example: 0.1234
        format: double
        type: number
      currencyCode:
        $ref: '#/definitions/BeezUP.Common.CurrencyCode'
      fixedPrice:
        description: The fixed price of the offer
        example: 101.42
        format: double
        type: number
      functionalities:
        example:
          - functionalityCode: MARKETMANA
            maxValueInteger: 4
            text: Marketplace management
            unlimited: false
        items:
          $ref: '#/definitions/offerFunctionality'
        type: array
      includedClick:
        description: The included click
        example: 1200
        format: int32
        type: integer
      isMostPopular:
        description: UI purpose. Is the offer is the most popular
        example: true
        type: boolean
      isOldOffer:
        description: Is an old offer
        example: false
        type: boolean
      links:
        $ref: '#/definitions/standardOfferLinks'
      name:
        description: The offer name
        example: Wonder offer
        type: string
      offerId:
        description: The offer Id
        example: 1234
        format: int32
        type: integer
      position:
        description: UI purpose. The position of the offer
        example: 1
        format: int32
        type: integer
    required:
      - offerId
      - name
      - links
    type: object
  standardOfferLinks:
    properties:
      getOffer:
        $ref: '#/definitions/links.getOfferLink'
    type: object
  standardOffers:
    properties:
      functionalities:
        description: All functionalities...
        example:
          - code: MARKETMANA
            order: 1
        items:
          $ref: '#/definitions/functionality'
        type: array
      links:
        $ref: '#/definitions/standardOffersLinks'
      offers:
        description: All standard offers
        example:
          - additionalClickPrice: 0.1234
            currencyCode: EUR
            fixedPrice: 101.42
            functionalities:
              - functionalityCode: MARKETMANA
                maxValueInteger: 4
                text: Marketplace management
                unlimited: false
            includedClick: 1200
            isMostPopular: true
            name: Wonder offer
            offerId: 1234
            position: 1
        items:
          $ref: '#/definitions/standardOffer'
        type: array
    required:
      - links
      - offers
      - functionalities
    type: object
  standardOffersLinks:
    properties:
      self:
        $ref: '#/definitions/links.getStandardOffersLink'
    required:
      - self
    type: object
  startManualImportRequest:
    description: The message request start a manual importation process.  Indicate the way to handle duplicate product. Can be null if you want to reuse the configuration of the previous importation succeed.
    properties:
      duplicateProductSkuConfiguration:
        $ref: '#/definitions/duplicateProductValueConfiguration'
      input:
        $ref: '#/definitions/inputConfiguration'
    required:
      - input
    type: object
  store:
    properties:
      countryIsoCodeAlpha3:
        $ref: '#/definitions/storeCountryIsoCodeAlpha3'
      creationUtcDate:
        description: The creation date of the store
        example: '2017-04-01T22:30:00Z'
        format: date-time
        type: string
      links:
        $ref: '#/definitions/storeLinks'
      name:
        $ref: '#/definitions/storeName'
      ownerUserId:
        description: The user id of the owner of the store
        example: 00000000-0000-0000-0000-000000000000
        format: guid
        type: string
      sectors:
        $ref: '#/definitions/storeSectors'
      shareCount:
        description: The share count related to this store
        example: 5
        type: integer
      status:
        $ref: '#/definitions/storeStatus'
      storeId:
        $ref: '#/definitions/BeezUP.Common.StoreId'
      url:
        $ref: '#/definitions/storeUrl'
      userRole:
        $ref: '#/definitions/storeUserRole'
    required:
      - storeId
      - name
      - url
      - countryIsoCodeAlpha3
      - userRole
      - status
      - ownerUserId
      - shareCount
      - creationUtcDate
      - sectors
      - links
    type: object
  storeAlert:
    properties:
      alertId:
        $ref: '#/definitions/alertId'
      alertName:
        $ref: '#/definitions/alertName'
      enabled:
        $ref: '#/definitions/alertEnabled'
      links:
        $ref: '#/definitions/storeAlertLinks'
      properties:
        description: The current configuration properties of the alert
        example:
          - propertyId: 2
            propertyValidationExpression: '\b0*([1-9]|[12][0-9]|30)\b'
            propertyValue: '2'
        items:
          $ref: '#/definitions/storeAlertPropertyInfo'
        type: array
    required:
      - links
      - alertId
      - alertName
      - enabled
    type: object
  storeAlertLinks:
    description: The different actions you can make on this alert
    properties:
      save:
        $ref: '#/definitions/links.saveStoreAlertsLink'
    type: object
  storeAlertProperty:
    properties:
      propertyId:
        $ref: '#/definitions/alertPropertyId'
      propertyValue:
        $ref: '#/definitions/alertPropertyValue'
    required:
      - propertyId
      - propertyValue
    type: object
  storeAlertPropertyInfo:
    allOf:
      - $ref: '#/definitions/storeAlertProperty'
      - properties:
          propertyName:
            description: The property name of the alert
            example: NbDays
            type: string
          propertyValidationExpression:
            description: The regular expression related to the alert property
            example: '\b0*([1-9]|[12][0-9]|30)\b'
            type: string
        required:
          - propertyName
        type: object
  storeAlerts:
    properties:
      alerts:
        example:
          - alertId: 8
            alertName: NoImportSinceXDays
            isActive: true
            properties:
              - propertyId: 2
                propertyValidationExpression: '\b0*([1-9]|[12][0-9]|30)\b'
                propertyValue: 2
        items:
          $ref: '#/definitions/storeAlert'
        type: array
    type: object
  storeCount:
    description: The store count you want to have in your contract.
    example: 1
    format: int32
    minimum: 1
    type: integer
  storeCountryIsoCodeAlpha3:
    description: The country iso code alpha 3 based on the list of values /user/lov/StoreCountry
    example: DEU
    type: string
    x-lov: StoreCountry
  storeLinks:
    description: The action links for this store
    properties:
      deleteStore:
        $ref: '#/definitions/links.deleteStoreLink'
      self:
        $ref: '#/definitions/links.getStoreLink'
      share:
        $ref: '#/definitions/links.shareStoreLink'
      shares:
        $ref: '#/definitions/links.getStoreSharesLink'
      updateStore:
        $ref: '#/definitions/links.updateStoreLink'
    type: object
  storeList:
    properties:
      links:
        $ref: '#/definitions/storeListLinks'
      stores:
        items:
          $ref: '#/definitions/store'
        type: array
    required:
      - links
      - stores
    type: object
  storeListLinks:
    description: The action links you can do globally on stores
    properties:
      createStore:
        $ref: '#/definitions/links.createStoreLink'
      self:
        $ref: '#/definitions/links.getStoresLink'
    type: object
  storeName:
    description: The store name. Must be unique.
    example: My Store
    type: string
  storeSector:
    description: The store's sector based on the list of values /user/lov/ParamSector
    example: ANIMALERIE
    type: string
    x-lov: ParamSector
  storeSectors:
    description: The store's sectors based on the list of values /user/lov/ParamSector
    example:
      - ANIMALERIE
      - AUTOMOTO
    items:
      $ref: '#/definitions/storeSector'
    type: array
  storeShare:
    properties:
      links:
        $ref: '#/definitions/storeShareLinks'
      userId:
        $ref: '#/definitions/BeezUP.Common.UserId'
      userRole:
        $ref: '#/definitions/storeUserRole'
    required:
      - userId
      - userRole
      - links
    type: object
  storeShareLinks:
    description: The different actions you can make on this store share
    properties:
      deleteShare:
        $ref: '#/definitions/links.deleteStoreShareLink'
    type: object
  storeShares:
    properties:
      links:
        $ref: '#/definitions/storeSharesLinks'
      shares:
        items:
          $ref: '#/definitions/storeShare'
        type: array
    required:
      - links
      - shares
    type: object
  storeSharesLinks:
    properties:
      self:
        $ref: '#/definitions/links.getStoreSharesLink'
      share:
        $ref: '#/definitions/links.shareStoreLink'
    type: object
  storeStatus:
    description: |
      The store status
      * Active:  When the store is active
      * SystemBlocked:  When the store is blocked by the system
      * UserBlocked: When the store is blocked on GO not on the system
    enum:
      - Active
      - SystemBlocked
      - UserBlocked
    example: Active
    type: string
  storeTrackingStatus:
    properties:
      clickSynchronizationUtcDate:
        description: The utc date of the latest click synchronized
        example: '2016-08-29T09:12:33.001Z'
        format: date-time
        type: string
      marketplaceOrderSynchonizationUtcDate:
        description: The utc date of the latest marketplace order synchronized
        example: '2016-08-29T09:12:33.001Z'
        format: date-time
        type: string
      orderSynchonizationUtcDate:
        description: The utc date of the latest order synchronized
        example: '2016-08-29T09:12:33.001Z'
        format: date-time
        type: string
    type: object
  storeUrl:
    description: The url of your store
    example: 'http://www.mystore.com'
    pattern: '^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$'
    type: string
  storeUserRole:
    description: |
      Indicates the role can have a user on a store. 
      * Owner: Indicates that you are the owner of this store
      * User: Indicates that you are a simple user on this store
    enum:
      - Owner
      - User
    example: User
    type: string
  terminateContract:
    description: The contract termination info
    properties:
      contractTerminationReason:
        $ref: '#/definitions/contractTerminationReason'
      contractTerminationReasonType:
        $ref: '#/definitions/contractTerminationReasonType'
    required:
      - contractTerminationReasonType
    type: object
  trackedClick:
    properties:
      channel:
        $ref: '#/definitions/BeezUP.Common.ChannelBasicInfo'
      ipAddress:
        description: The user's IP address related to this click
        example: 127.0.0.1
        type: string
      product:
        $ref: '#/definitions/BeezUP.Common.ProductBasicInfo'
      utcDate:
        description: The utc date of the click
        example: '2016-08-29T09:12:33.001Z'
        format: date-time
        type: string
    required:
      - utcDate
      - product
      - ipAddress
      - channel
    type: object
  trackedClicks:
    properties:
      clicks:
        items:
          $ref: '#/definitions/trackedClick'
        type: array
    required:
      - clicks
    type: object
  trackedExternalOrder:
    properties:
      currencyCode:
        $ref: '#/definitions/BeezUP.Common.CurrencyCode'
      merchantOrderId:
        description: The merchant order identifier
        example: My_Order_Merchant_Id
        type: string
      paymentValidated:
        description: Indicate if the payment of this external order has been validated or not.
        example: false
        type: boolean
      products:
        description: Can be null. the product list related to this external order.
        example:
          - margin: '9.66'
            merchantOrderId: My_Merchant_Order_Id
            productActive: true
            productImageUrl: 'http://cdn3.sarenza.net/static/_img/productsV4/0000010744/MD_0000010744_29411_09.jpg?201308142051'
            productSku: something
            productTitle: Something great
            quantity: '1.00'
            unitPrice: '101.42'
        items:
          $ref: '#/definitions/trackedExternalOrderProduct'
        type: array
      totalAmount:
        description: The total amount related to the external order.
        example: 101.42
        type: number
      utcDate:
        description: The utc date of the external order.
        example: '2016-08-29T09:12:33.001Z'
        format: date-time
        type: string
      visitorId:
        description: Can be null. The visitor identifier related to this external order
        example: A_VISITOR_ID
        type: string
    required:
      - utcDate
      - merchantOrderId
      - totalAmount
      - currencyCode
      - paymentValidated
    type: object
  trackedExternalOrderProduct:
    properties:
      margin:
        description: Indicate the product's margin related to this order. This property is voluntarily a string because the value could be an invalid one
        example: '9.66'
        type: string
      productActive:
        description: 'We tried to get the catalog product if it''s still active based on the product SKU. This property can be null, if we cannot found the product. This is possible if the product is not referenced in the imported catalog.'
        example: true
        type: boolean
      productId:
        description: 'We tried to get the catalog product identifier based on the product SKU. This property can be null, if we cannot found the product. This is possible if the product is not referenced in the imported catalog.'
        example: 6d469a54-8426-4855-abc2-9e062e2056b9
        format: guid
        type: string
      productImageUrl:
        description: 'We tried to get the catalog product image Url based on the product SKU. This property can be null, if we cannot found the product. This is possible if the product is not referenced in the imported catalog.'
        example: 'http://cdn3.sarenza.net/static/_img/productsV4/0000010744/MD_0000010744_29411_09.jpg?201308142051'
        format: uri
        type: string
      productSku:
        description: The product sku received related to the external order.
        example: something
        type: string
      productTitle:
        description: 'We tried to get the catalog product title based on the product SKU. This property can be null, if we cannot found the product. This is possible if the product is not referenced in the imported catalog.'
        example: Something great
        type: string
      quantity:
        description: Indicate the product's quantity ordered. This property is voluntarily a string because the value could be an invalid one
        example: '1.00'
        type: string
      unitPrice:
        description: The product's unit price related to this external order. This property is voluntarily a string because the value could be an invalid one.
        example: '101.42'
        type: string
    required:
      - productSku
    type: object
  trackedExternalOrders:
    properties:
      externalOrders:
        items:
          $ref: '#/definitions/trackedExternalOrder'
        type: array
    required:
      - externalOrders
    type: object
  trackedOrder:
    properties:
      channel:
        $ref: '#/definitions/BeezUP.Common.ChannelBasicInfo'
      currencyCode:
        $ref: '#/definitions/BeezUP.Common.CurrencyCode'
      merchantOrderId:
        description: The merchant order identifier
        example: My_Merchant_Order_Id
        type: string
      paymentValidated:
        description: Indicate if the payment of this order has been validated or not.
        example: false
        type: boolean
      products:
        description: the product list related to this order.
        example:
          - margin: 9.66
            productActive: true
            productId: 00000000-0000-0000-0000-000000000000
            productImageUrl: 'http://i2.cdscdn.com/pdt2/3/9/0/1/550x550/hai6901018043390/rw/haier-b20fwrss-refrigerateur-americain.jpg'
            productSku: SKU123345
            productTitle: My super product title
            quantity: 1
            unitPrice: 101.42
        items:
          $ref: '#/definitions/trackedOrderProduct'
        type: array
      totalAmount:
        description: The total amount related to the order.
        example: 101.42
        type: number
      utcDate:
        description: The utc date of the order.
        example: '2016-08-29T09:12:33.001Z'
        format: date-time
        type: string
    required:
      - utcDate
      - channel
      - merchantOrderId
      - totalAmount
      - currencyCode
      - paymentValidated
      - products
    type: object
  trackedOrderProduct:
    allOf:
      - $ref: '#/definitions/BeezUP.Common.ProductBasicInfo'
      - properties:
          margin:
            description: Indicate the product's margin related to this order.
            example: 9.66
            type: number
          quantity:
            description: Indicate the product's quantity ordered.
            example: 1
            type: number
          unitPrice:
            description: The product's unit price related to this order
            example: 101.42
            type: number
        required:
          - unitPrice
          - quantity
          - margin
        type: object
  trackedOrders:
    properties:
      orders:
        items:
          $ref: '#/definitions/trackedOrder'
        type: array
    required:
      - orders
    type: object
  trackingStatus:
    properties:
      clickSynchronizationUtcDate:
        description: The utc date of the latest click synchronized
        example: '2016-08-29T09:12:33.001Z'
        format: date-time
        type: string
      marketplaceOrderSynchonizationUtcDate:
        description: The utc date of the latest marketplace order synchronized
        example: '2016-08-29T09:12:33.001Z'
        format: date-time
        type: string
      orderSynchonizationUtcDate:
        description: The utc date of the latest order synchronized
        example: '2016-08-29T09:12:33.001Z'
        format: date-time
        type: string
    required:
      - clickSynchronizationUtcDate
      - orderSynchonizationUtcDate
      - marketplaceOrderSynchonizationUtcDate
    type: object
  type:
    description: The Data Type
    enum:
      - string
      - integer
      - boolean
      - number
    example: string
    type: string
  unmapCategoryRequest:
    description: The request message to unmap a catalog category path to a channel category path
    properties:
      catalogCategoryPath:
        $ref: '#/definitions/BeezUP.Common.CatalogCategoryPath'
    required:
      - catalogCategoryPath
    type: object
  updateRuleRequest:
    description: This update will replace the following values.
    properties:
      endUtcDate:
        description: Not required. The end validity utc date of the rule
        example: '2016-08-29T09:12:33.001Z'
        format: date-time
        type: string
      ruleName:
        description: The name of the rule
        example: My Rule Renamed
        type: string
      startUtcDate:
        description: Not required. The start validity utc date of the rule.
        example: '2016-08-29T09:12:33.001Z'
        format: date-time
        type: string
    required:
      - ruleName
    type: object
  updateStoreRequest:
    properties:
      name:
        $ref: '#/definitions/storeName'
      sectors:
        $ref: '#/definitions/storeSectors'
      url:
        $ref: '#/definitions/storeUrl'
    required:
      - name
      - url
      - sectors
    type: object
  upgradeOfferRequired:
    description: The message contains the offer identifier required to execute this operation
    properties:
      offerId:
        description: The offer identifier required
        example: 9
        format: int32
        type: integer
    required:
      - offerId
    type: object
  userColumName:
    description: Column named by the user
    example: My SKU
    type: string
  userFriendInfo:
    properties:
      company:
        description: Your friend's user company name
        example: World company
        type: string
      countryIsoCodeAlpha3:
        $ref: '#/definitions/friendCountryIsoCodeAlpha3'
      email:
        $ref: '#/definitions/friendEmail'
      firstName:
        description: Your friend's user first name
        example: Bogart
        type: string
      lastName:
        description: Your friend's user last name
        example: Humphrey
        type: string
      profilePictureUrl:
        $ref: '#/definitions/friendProfilePictureUrl'
      userId:
        description: Your friend's user id
        example: 00c4a9d2-fc8e-4b3d-8e52-c4f276245bc1
        format: guid
        type: string
      whatIDo:
        description: Your friend's user occupation in his company
        example: I'm an actor...
        type: string
    required:
      - userId
      - lastName
      - firstName
      - email
      - countryIsoCodeAlpha3
      - company
    type: object
  userListOfValuesResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/BeezUP.Common.ListOfValueItem'
        type: array
      links:
        $ref: '#/definitions/userListOfValuesResponseLinks'
    type: object
  userListOfValuesResponseLinks:
    properties:
      self:
        $ref: '#/definitions/links.GetUserListOfValuesLink'
    type: object
  userLovIndex:
    properties:
      links:
        $ref: '#/definitions/userLovIndexLinks'
    type: object
  userLovIndexLinks:
    properties:
      lists:
        $ref: '#/definitions/userLovLinks'
      self:
        $ref: '#/definitions/links.GetUserLovIndexLink'
    type: object
  userLovLinks:
    additionalProperties:
      $ref: '#/definitions/links.GetUserListOfValuesLink'
    description: List of lov link. The key is the list name.
    type: object
  variableModelInfo:
    description: 'Internal usage: Old offer type. Describe the fix and variable model information'
    properties:
      clickIncludedAndVariablePrices:
        description: Click included with variable pricing information
        items:
          $ref: '#/definitions/clickIncludedAndVariablePrice'
        type: array
      overflowClickCount:
        description: The overflow click count
        format: int32
        type: integer
      overflowClickPrice:
        description: The overflow click price
        format: double
        type: number
    required:
      - clickIncludedAndVariablePrices
      - overflowClickCount
      - overflowClickPrice
    type: object
  vatNumber:
    description: Your company VATNumber. Used for french company. This number is checked with official web service before being saved.
    example: 1234567890
    type: string
  whatIDo:
    description: Your role in your company
    example: I'm the Manager on this company
    type: string
x-basePath: /v2/public/security
x-beezup-api-ops:
  apiName: V2PublicSecurity
  appRoot: BeezUP.Customer.WebService
  comment: |
    No change. Just server side generation.
  namespace: BeezUP.Customer.WebService
  repo: Customer
x-tagGroups:
  - name: Public - Security
    tags:
      - Public - Security - Security
  - name: Public - Channels
    tags:
      - Public - Channels - Public Channels
  - name: Public - List of Values
    tags:
      - Public - List of Values - LOV
  - name: User - List of Values
    tags:
      - User - List of Values - LOV
  - name: Customer
    tags:
      - Customer - Global
      - Customer - Account
      - Customer - Security
      - Customer - Stores
      - Customer - Shares
      - Customer - Alerts
      - Customer - Rights
      - Customer - Friends
      - Customer - Contracts
      - Customer - Invoices
  - name: Catalogs
    tags:
      - Catalogs - Auto
      - Catalogs - Global
      - Catalogs - Importation Process
      - Catalogs - Importation Catalog Info
      - Catalogs - Catalog
  - name: Channels
    tags:
      - Channels - Channels Global
  - name: Channel Catalogs
    tags:
      - Channel Catalogs - Global
      - Channel Catalogs - Settings
      - Channel Catalogs - Column Mappings
      - Channel Catalogs - Category Mappings
      - Channel Catalogs - Exclusion Filters
      - Channel Catalogs - Products
      - Channel Catalogs - Products Overrides
      - Channel Catalogs - Products Optimisation
      - Channel Catalogs - Exportations
  - name: Marketplaces - Channel catalogs
    tags:
      - Marketplaces - Channel catalogs - Global
      - Marketplaces - Channel catalogs - Publications
      - Marketplaces - Channel catalogs - Settings
  - name: Marketplaces - Orders
    tags:
      - Marketplaces - Orders - Global
      - Marketplaces - Orders - AutoTransitions
      - Marketplaces - Orders - List
      - Marketplaces - Orders - Order
      - Marketplaces - Orders - Batches
      - Marketplaces - Orders - Exports
  - name: Analytics
    tags:
      - Analytics - Tracking
      - Analytics - Statistics
      - Analytics - Rules
      - Analytics - Reports
      - Analytics - Optimisations
