basePath = "/"
"consumes.length" = 1
"consumes[0]" = "application/json"
"definitions.ApiKey.properties.expired.type" = "boolean"
"definitions.ApiKey.properties.expiryDate.format" = "date-time"
"definitions.ApiKey.properties.expiryDate.type" = "string"
"definitions.ApiKey.properties.key.type" = "string"
"definitions.BaseGroup.properties.code.type" = "string"
"definitions.BaseGroup.properties.groupType.$ref" = "#/definitions/Lookup"
"definitions.BaseGroup.properties.id.format" = "int64"
"definitions.BaseGroup.properties.id.type" = "integer"
"definitions.BaseGroup.properties.lastImportDate.format" = "date-time"
"definitions.BaseGroup.properties.lastImportDate.type" = "string"
"definitions.BaseGroup.properties.name.type" = "string"
"definitions.BaseGroup.properties.parentCodes.items.type" = "string"
"definitions.BaseGroup.properties.parentCodes.type" = "array"
"definitions.BaseGroup.properties.shortName.type" = "string"
"definitions.BaseGroup.properties.visible.type" = "boolean"
"definitions.BaseGroup.properties.visibleToJoin.type" = "boolean"
"definitions.Category.properties.friendlyDescription.type" = "string"
"definitions.Category.properties.hidden.type" = "boolean"
"definitions.Category.properties.icd10Description.type" = "string"
"definitions.Category.properties.id.format" = "int64"
"definitions.Category.properties.id.type" = "integer"
"definitions.Category.properties.number.format" = "int32"
"definitions.Category.properties.number.type" = "integer"
"definitions.Code.properties.code.type" = "string"
"definitions.Code.properties.codeCategories.items.$ref" = "#/definitions/CodeCategory"
"definitions.Code.properties.codeCategories.type" = "array"
"definitions.Code.properties.codeCategories.uniqueItems" = true
"definitions.Code.properties.codeType.$ref" = "#/definitions/Lookup"
"definitions.Code.properties.created.format" = "date-time"
"definitions.Code.properties.created.type" = "string"
"definitions.Code.properties.description.type" = "string"
"definitions.Code.properties.displayOrder.format" = "int32"
"definitions.Code.properties.displayOrder.type" = "integer"
"definitions.Code.properties.externalStandards.items.$ref" = "#/definitions/CodeExternalStandard"
"definitions.Code.properties.externalStandards.type" = "array"
"definitions.Code.properties.externalStandards.uniqueItems" = true
"definitions.Code.properties.fullDescription.type" = "string"
"definitions.Code.properties.hideFromPatients.type" = "boolean"
"definitions.Code.properties.id.format" = "int64"
"definitions.Code.properties.id.type" = "integer"
"definitions.Code.properties.lastUpdate.format" = "date-time"
"definitions.Code.properties.lastUpdate.type" = "string"
"definitions.Code.properties.links.items.$ref" = "#/definitions/Link"
"definitions.Code.properties.links.type" = "array"
"definitions.Code.properties.links.uniqueItems" = true
"definitions.Code.properties.patientFriendlyName.type" = "string"
"definitions.Code.properties.removedExternally.type" = "boolean"
"definitions.Code.properties.sourceType.enum.length" = 2
"definitions.Code.properties.sourceType.enum[0]" = "PATIENTVIEW"
"definitions.Code.properties.sourceType.enum[1]" = "NHS_CHOICES"
"definitions.Code.properties.sourceType.type" = "string"
"definitions.Code.properties.standardType.$ref" = "#/definitions/Lookup"
"definitions.CodeCategory.properties.category.$ref" = "#/definitions/Category"
"definitions.CodeCategory.properties.id.format" = "int64"
"definitions.CodeCategory.properties.id.type" = "integer"
"definitions.CodeExternalStandard.properties.codeString.type" = "string"
"definitions.CodeExternalStandard.properties.externalStandard.$ref" = "#/definitions/ExternalStandard"
"definitions.CodeExternalStandard.properties.id.format" = "int64"
"definitions.CodeExternalStandard.properties.id.type" = "integer"
"definitions.ContactPoint.properties.contactPointType.$ref" = "#/definitions/ContactPointType"
"definitions.ContactPoint.properties.content.type" = "string"
"definitions.ContactPoint.properties.created.format" = "date-time"
"definitions.ContactPoint.properties.created.type" = "string"
"definitions.ContactPoint.properties.id.format" = "int64"
"definitions.ContactPoint.properties.id.type" = "integer"
"definitions.ContactPoint.properties.lastUpdate.format" = "date-time"
"definitions.ContactPoint.properties.lastUpdate.type" = "string"
"definitions.ContactPointType.properties.description.type" = "string"
"definitions.ContactPointType.properties.id.format" = "int64"
"definitions.ContactPointType.properties.id.type" = "integer"
"definitions.ContactPointType.properties.lookupType.$ref" = "#/definitions/LookupType"
"definitions.ContactPointType.properties.value.enum.length" = 10
"definitions.ContactPointType.properties.value.enum[0]" = "UNIT_WEB_ADDRESS"
"definitions.ContactPointType.properties.value.enum[1]" = "TRUST_WEB_ADDRESS"
"definitions.ContactPointType.properties.value.enum[2]" = "PV_ADMIN_NAME"
"definitions.ContactPointType.properties.value.enum[3]" = "PV_ADMIN_PHONE"
"definitions.ContactPointType.properties.value.enum[4]" = "PV_ADMIN_EMAIL"
"definitions.ContactPointType.properties.value.enum[5]" = "UNIT_ENQUIRIES_PHONE"
"definitions.ContactPointType.properties.value.enum[6]" = "UNIT_ENQUIRIES_EMAIL"
"definitions.ContactPointType.properties.value.enum[7]" = "APPOINTMENT_PHONE"
"definitions.ContactPointType.properties.value.enum[8]" = "APPOINTMENT_EMAIL"
"definitions.ContactPointType.properties.value.enum[9]" = "OUT_OF_HOURS_INFO"
"definitions.ContactPointType.properties.value.type" = "string"
"definitions.Credentials.properties.apiKey.type" = "string"
"definitions.Credentials.properties.password.type" = "string"
"definitions.Credentials.properties.username.type" = "string"
"definitions.Entry«long,Map«string,List«FhirObservation»»».properties.key.items.$ref" = "#/definitions/Entry«string,List«FhirObservation»»"
"definitions.Entry«long,Map«string,List«FhirObservation»»».properties.key.type" = "array"
"definitions.Entry«string,List«FhirObservation»».properties.key.items.$ref" = "#/definitions/FhirObservation"
"definitions.Entry«string,List«FhirObservation»».properties.key.type" = "array"
"definitions.ExternalStandard.properties.description.type" = "string"
"definitions.ExternalStandard.properties.id.format" = "int64"
"definitions.ExternalStandard.properties.id.type" = "integer"
"definitions.ExternalStandard.properties.name.type" = "string"
"definitions.Feature.properties.created.format" = "date-time"
"definitions.Feature.properties.created.type" = "string"
"definitions.Feature.properties.description.type" = "string"
"definitions.Feature.properties.id.format" = "int64"
"definitions.Feature.properties.id.type" = "integer"
"definitions.Feature.properties.lastUpdate.format" = "date-time"
"definitions.Feature.properties.lastUpdate.type" = "string"
"definitions.Feature.properties.name.type" = "string"
"definitions.FhirAllergy.properties.confidenceLevel.type" = "string"
"definitions.FhirAllergy.properties.group.$ref" = "#/definitions/Group"
"definitions.FhirAllergy.properties.id.format" = "int64"
"definitions.FhirAllergy.properties.id.type" = "integer"
"definitions.FhirAllergy.properties.identifier.type" = "string"
"definitions.FhirAllergy.properties.infoSource.type" = "string"
"definitions.FhirAllergy.properties.reaction.type" = "string"
"definitions.FhirAllergy.properties.recordedDate.format" = "date-time"
"definitions.FhirAllergy.properties.recordedDate.type" = "string"
"definitions.FhirAllergy.properties.status.type" = "string"
"definitions.FhirAllergy.properties.substance.type" = "string"
"definitions.FhirAllergy.properties.type.type" = "string"
"definitions.FhirCondition.properties.asserter.type" = "string"
"definitions.FhirCondition.properties.category.type" = "string"
"definitions.FhirCondition.properties.code.type" = "string"
"definitions.FhirCondition.properties.date.format" = "date-time"
"definitions.FhirCondition.properties.date.type" = "string"
"definitions.FhirCondition.properties.description.type" = "string"
"definitions.FhirCondition.properties.fullDescription.type" = "string"
"definitions.FhirCondition.properties.group.$ref" = "#/definitions/Group"
"definitions.FhirCondition.properties.id.format" = "int64"
"definitions.FhirCondition.properties.id.type" = "integer"
"definitions.FhirCondition.properties.identifier.type" = "string"
"definitions.FhirCondition.properties.links.items.$ref" = "#/definitions/Link"
"definitions.FhirCondition.properties.links.type" = "array"
"definitions.FhirCondition.properties.links.uniqueItems" = true
"definitions.FhirCondition.properties.notes.type" = "string"
"definitions.FhirCondition.properties.severity.type" = "string"
"definitions.FhirCondition.properties.status.type" = "string"
"definitions.FhirContact.properties.id.format" = "int64"
"definitions.FhirContact.properties.id.type" = "integer"
"definitions.FhirContact.properties.system.type" = "string"
"definitions.FhirContact.properties.use.type" = "string"
"definitions.FhirContact.properties.value.type" = "string"
"definitions.FhirEncounter.properties.date.format" = "date-time"
"definitions.FhirEncounter.properties.date.type" = "string"
"definitions.FhirEncounter.properties.encounterType.type" = "string"
"definitions.FhirEncounter.properties.group.$ref" = "#/definitions/Group"
"definitions.FhirEncounter.properties.id.format" = "int64"
"definitions.FhirEncounter.properties.id.type" = "integer"
"definitions.FhirEncounter.properties.identifier.type" = "string"
"definitions.FhirEncounter.properties.links.items.$ref" = "#/definitions/Link"
"definitions.FhirEncounter.properties.links.type" = "array"
"definitions.FhirEncounter.properties.links.uniqueItems" = true
"definitions.FhirEncounter.properties.observations.items.$ref" = "#/definitions/FhirObservation"
"definitions.FhirEncounter.properties.observations.type" = "array"
"definitions.FhirEncounter.properties.observations.uniqueItems" = true
"definitions.FhirEncounter.properties.procedures.items.$ref" = "#/definitions/FhirProcedure"
"definitions.FhirEncounter.properties.procedures.type" = "array"
"definitions.FhirEncounter.properties.procedures.uniqueItems" = true
"definitions.FhirEncounter.properties.status.type" = "string"
"definitions.FhirIdentifier.properties.id.format" = "int64"
"definitions.FhirIdentifier.properties.id.type" = "integer"
"definitions.FhirIdentifier.properties.label.type" = "string"
"definitions.FhirIdentifier.properties.value.type" = "string"
"definitions.FhirObservation.properties.applies.format" = "date-time"
"definitions.FhirObservation.properties.applies.type" = "string"
"definitions.FhirObservation.properties.bodySite.type" = "string"
"definitions.FhirObservation.properties.comments.type" = "string"
"definitions.FhirObservation.properties.comparator.type" = "string"
"definitions.FhirObservation.properties.diagram.type" = "string"
"definitions.FhirObservation.properties.group.$ref" = "#/definitions/Group"
"definitions.FhirObservation.properties.id.format" = "int64"
"definitions.FhirObservation.properties.id.type" = "integer"
"definitions.FhirObservation.properties.identifier.type" = "string"
"definitions.FhirObservation.properties.location.type" = "string"
"definitions.FhirObservation.properties.name.type" = "string"
"definitions.FhirObservation.properties.temporaryUuid.type" = "string"
"definitions.FhirObservation.properties.units.type" = "string"
"definitions.FhirObservation.properties.value.type" = "string"
"definitions.FhirObservationPage.properties.data.items.$ref" = "#/definitions/Entry«long,Map«string,List«FhirObservation»»»"
"definitions.FhirObservationPage.properties.data.type" = "array"
"definitions.FhirObservationPage.properties.totalElements.format" = "int64"
"definitions.FhirObservationPage.properties.totalElements.type" = "integer"
"definitions.FhirObservationPage.properties.totalPages.format" = "int64"
"definitions.FhirObservationPage.properties.totalPages.type" = "integer"
"definitions.FhirPatient.properties.address1.type" = "string"
"definitions.FhirPatient.properties.address2.type" = "string"
"definitions.FhirPatient.properties.address3.type" = "string"
"definitions.FhirPatient.properties.address4.type" = "string"
"definitions.FhirPatient.properties.contacts.items.$ref" = "#/definitions/FhirContact"
"definitions.FhirPatient.properties.contacts.type" = "array"
"definitions.FhirPatient.properties.dateOfBirth.format" = "date-time"
"definitions.FhirPatient.properties.dateOfBirth.type" = "string"
"definitions.FhirPatient.properties.dateOfBirthNoTime.type" = "string"
"definitions.FhirPatient.properties.forename.type" = "string"
"definitions.FhirPatient.properties.gender.type" = "string"
"definitions.FhirPatient.properties.group.$ref" = "#/definitions/Group"
"definitions.FhirPatient.properties.groupCode.type" = "string"
"definitions.FhirPatient.properties.identifier.type" = "string"
"definitions.FhirPatient.properties.identifiers.items.$ref" = "#/definitions/FhirIdentifier"
"definitions.FhirPatient.properties.identifiers.type" = "array"
"definitions.FhirPatient.properties.postcode.type" = "string"
"definitions.FhirPatient.properties.practitioners.items.$ref" = "#/definitions/FhirPractitioner"
"definitions.FhirPatient.properties.practitioners.type" = "array"
"definitions.FhirPatient.properties.surname.type" = "string"
"definitions.FhirPractitioner.properties.address1.type" = "string"
"definitions.FhirPractitioner.properties.address2.type" = "string"
"definitions.FhirPractitioner.properties.address3.type" = "string"
"definitions.FhirPractitioner.properties.address4.type" = "string"
"definitions.FhirPractitioner.properties.allowInviteGp.type" = "boolean"
"definitions.FhirPractitioner.properties.contacts.items.$ref" = "#/definitions/FhirContact"
"definitions.FhirPractitioner.properties.contacts.type" = "array"
"definitions.FhirPractitioner.properties.gender.type" = "string"
"definitions.FhirPractitioner.properties.groupCode.type" = "string"
"definitions.FhirPractitioner.properties.identifier.type" = "string"
"definitions.FhirPractitioner.properties.inviteDate.format" = "date-time"
"definitions.FhirPractitioner.properties.inviteDate.type" = "string"
"definitions.FhirPractitioner.properties.name.type" = "string"
"definitions.FhirPractitioner.properties.postcode.type" = "string"
"definitions.FhirPractitioner.properties.role.type" = "string"
"definitions.FhirProcedure.properties.bodySite.type" = "string"
"definitions.FhirProcedure.properties.id.format" = "int64"
"definitions.FhirProcedure.properties.id.type" = "integer"
"definitions.FhirProcedure.properties.type.type" = "string"
"definitions.Group.properties.address1.type" = "string"
"definitions.Group.properties.address2.type" = "string"
"definitions.Group.properties.address3.type" = "string"
"definitions.Group.properties.childGroups.items.$ref" = "#/definitions/Group"
"definitions.Group.properties.childGroups.type" = "array"
"definitions.Group.properties.code.type" = "string"
"definitions.Group.properties.contactPoints.items.$ref" = "#/definitions/ContactPoint"
"definitions.Group.properties.contactPoints.type" = "array"
"definitions.Group.properties.contactPoints.uniqueItems" = true
"definitions.Group.properties.created.format" = "date-time"
"definitions.Group.properties.created.type" = "string"
"definitions.Group.properties.fhirResourceId.format" = "uuid"
"definitions.Group.properties.fhirResourceId.type" = "string"
"definitions.Group.properties.groupFeatures.items.$ref" = "#/definitions/GroupFeature"
"definitions.Group.properties.groupFeatures.type" = "array"
"definitions.Group.properties.groupFeatures.uniqueItems" = true
"definitions.Group.properties.groupType.$ref" = "#/definitions/Lookup"
"definitions.Group.properties.id.format" = "int64"
"definitions.Group.properties.id.type" = "integer"
"definitions.Group.properties.lastImportDate.format" = "date-time"
"definitions.Group.properties.lastImportDate.type" = "string"
"definitions.Group.properties.lastUpdate.format" = "date-time"
"definitions.Group.properties.lastUpdate.type" = "string"
"definitions.Group.properties.links.items.$ref" = "#/definitions/Link"
"definitions.Group.properties.links.type" = "array"
"definitions.Group.properties.links.uniqueItems" = true
"definitions.Group.properties.locations.items.$ref" = "#/definitions/Location"
"definitions.Group.properties.locations.type" = "array"
"definitions.Group.properties.locations.uniqueItems" = true
"definitions.Group.properties.name.type" = "string"
"definitions.Group.properties.parentGroups.items.$ref" = "#/definitions/Group"
"definitions.Group.properties.parentGroups.type" = "array"
"definitions.Group.properties.postcode.type" = "string"
"definitions.Group.properties.sftpUser.type" = "string"
"definitions.Group.properties.shortName.type" = "string"
"definitions.Group.properties.visible.type" = "boolean"
"definitions.Group.properties.visibleToJoin.type" = "boolean"
"definitions.GroupFeature.properties.created.format" = "date-time"
"definitions.GroupFeature.properties.created.type" = "string"
"definitions.GroupFeature.properties.feature.$ref" = "#/definitions/Feature"
"definitions.GroupFeature.properties.id.format" = "int64"
"definitions.GroupFeature.properties.id.type" = "integer"
"definitions.GroupFeature.properties.lastUpdate.format" = "date-time"
"definitions.GroupFeature.properties.lastUpdate.type" = "string"
"definitions.GroupRole.properties.group.$ref" = "#/definitions/Group"
"definitions.GroupRole.properties.id.format" = "int64"
"definitions.GroupRole.properties.id.type" = "integer"
"definitions.GroupRole.properties.role.$ref" = "#/definitions/Role"
"definitions.Link.properties.created.format" = "date-time"
"definitions.Link.properties.created.type" = "string"
"definitions.Link.properties.displayOrder.format" = "int32"
"definitions.Link.properties.displayOrder.type" = "integer"
"definitions.Link.properties.id.format" = "int64"
"definitions.Link.properties.id.type" = "integer"
"definitions.Link.properties.lastUpdate.format" = "date-time"
"definitions.Link.properties.lastUpdate.type" = "string"
"definitions.Link.properties.link.type" = "string"
"definitions.Link.properties.linkType.$ref" = "#/definitions/Lookup"
"definitions.Link.properties.name.type" = "string"
"definitions.Location.properties.address.type" = "string"
"definitions.Location.properties.created.format" = "date-time"
"definitions.Location.properties.created.type" = "string"
"definitions.Location.properties.email.type" = "string"
"definitions.Location.properties.id.format" = "int64"
"definitions.Location.properties.id.type" = "integer"
"definitions.Location.properties.label.type" = "string"
"definitions.Location.properties.lastUpdate.format" = "date-time"
"definitions.Location.properties.lastUpdate.type" = "string"
"definitions.Location.properties.name.type" = "string"
"definitions.Location.properties.phone.type" = "string"
"definitions.Location.properties.web.type" = "string"
"definitions.Lookup.properties.created.format" = "date-time"
"definitions.Lookup.properties.created.type" = "string"
"definitions.Lookup.properties.description.type" = "string"
"definitions.Lookup.properties.descriptionFriendly.type" = "string"
"definitions.Lookup.properties.displayOrder.format" = "int64"
"definitions.Lookup.properties.displayOrder.type" = "integer"
"definitions.Lookup.properties.id.format" = "int64"
"definitions.Lookup.properties.id.type" = "integer"
"definitions.Lookup.properties.lastUpdate.format" = "date-time"
"definitions.Lookup.properties.lastUpdate.type" = "string"
"definitions.Lookup.properties.lookupType.$ref" = "#/definitions/LookupType"
"definitions.Lookup.properties.value.type" = "string"
"definitions.LookupType.properties.created.format" = "date-time"
"definitions.LookupType.properties.created.type" = "string"
"definitions.LookupType.properties.description.type" = "string"
"definitions.LookupType.properties.id.format" = "int64"
"definitions.LookupType.properties.id.type" = "integer"
"definitions.LookupType.properties.lastUpdate.format" = "date-time"
"definitions.LookupType.properties.lastUpdate.type" = "string"
"definitions.LookupType.properties.type.enum.length" = 22
"definitions.LookupType.properties.type.enum[0]" = "GROUP"
"definitions.LookupType.properties.type.enum[10]" = "NEWS_TYPE"
"definitions.LookupType.properties.type.enum[11]" = "GENDER"
"definitions.LookupType.properties.type.enum[12]" = "IBD_CROHNSLOCATION"
"definitions.LookupType.properties.type.enum[13]" = "IBD_CROHNSPROXIMALTERMINALILEUM"
"definitions.LookupType.properties.type.enum[14]" = "IBD_CROHNSPERIANAL"
"definitions.LookupType.properties.type.enum[15]" = "IBD_CROHNSBEHAVIOUR"
"definitions.LookupType.properties.type.enum[16]" = "IBD_UCEXTENT"
"definitions.LookupType.properties.type.enum[17]" = "IBD_EGIMCOMPLICATION"
"definitions.LookupType.properties.type.enum[18]" = "IBD_SURGERYMAINPROCEDURE"
"definitions.LookupType.properties.type.enum[19]" = "IBD_SMOKINGSTATUS"
"definitions.LookupType.properties.type.enum[1]" = "MENU"
"definitions.LookupType.properties.type.enum[20]" = "IBD_FAMILYHISTORY"
"definitions.LookupType.properties.type.enum[21]" = "LINK_TYPE"
"definitions.LookupType.properties.type.enum[2]" = "ROLE"
"definitions.LookupType.properties.type.enum[3]" = "CODE_STANDARD"
"definitions.LookupType.properties.type.enum[4]" = "CODE_TYPE"
"definitions.LookupType.properties.type.enum[5]" = "FEATURE_TYPE"
"definitions.LookupType.properties.type.enum[6]" = "RELATIONSHIP_TYPE"
"definitions.LookupType.properties.type.enum[7]" = "IDENTIFIER"
"definitions.LookupType.properties.type.enum[8]" = "CONTACT_POINT_TYPE"
"definitions.LookupType.properties.type.enum[9]" = "STATISTIC_TYPE"
"definitions.LookupType.properties.type.type" = "string"
"definitions.ObservationHeading.properties.code.type" = "string"
"definitions.ObservationHeading.properties.created.format" = "date-time"
"definitions.ObservationHeading.properties.created.type" = "string"
"definitions.ObservationHeading.properties.decimalPlaces.format" = "int64"
"definitions.ObservationHeading.properties.decimalPlaces.type" = "integer"
"definitions.ObservationHeading.properties.defaultPanel.format" = "int64"
"definitions.ObservationHeading.properties.defaultPanel.type" = "integer"
"definitions.ObservationHeading.properties.defaultPanelOrder.format" = "int64"
"definitions.ObservationHeading.properties.defaultPanelOrder.type" = "integer"
"definitions.ObservationHeading.properties.heading.type" = "string"
"definitions.ObservationHeading.properties.id.format" = "int64"
"definitions.ObservationHeading.properties.id.type" = "integer"
"definitions.ObservationHeading.properties.infoLink.type" = "string"
"definitions.ObservationHeading.properties.lastUpdate.format" = "date-time"
"definitions.ObservationHeading.properties.lastUpdate.type" = "string"
"definitions.ObservationHeading.properties.maxGraph.format" = "double"
"definitions.ObservationHeading.properties.maxGraph.type" = "number"
"definitions.ObservationHeading.properties.minGraph.format" = "double"
"definitions.ObservationHeading.properties.minGraph.type" = "number"
"definitions.ObservationHeading.properties.name.type" = "string"
"definitions.ObservationHeading.properties.normalRange.type" = "string"
"definitions.ObservationHeading.properties.observationHeadingGroups.items.$ref" = "#/definitions/ObservationHeadingGroup"
"definitions.ObservationHeading.properties.observationHeadingGroups.type" = "array"
"definitions.ObservationHeading.properties.observationHeadingGroups.uniqueItems" = true
"definitions.ObservationHeading.properties.units.type" = "string"
"definitions.ObservationHeadingGroup.properties.created.format" = "date-time"
"definitions.ObservationHeadingGroup.properties.created.type" = "string"
"definitions.ObservationHeadingGroup.properties.group.$ref" = "#/definitions/Group"
"definitions.ObservationHeadingGroup.properties.id.format" = "int64"
"definitions.ObservationHeadingGroup.properties.id.type" = "integer"
"definitions.ObservationHeadingGroup.properties.panel.format" = "int64"
"definitions.ObservationHeadingGroup.properties.panel.type" = "integer"
"definitions.ObservationHeadingGroup.properties.panelOrder.format" = "int64"
"definitions.ObservationHeadingGroup.properties.panelOrder.type" = "integer"
"definitions.Patient.properties.diagnosisCodes.items.$ref" = "#/definitions/Code"
"definitions.Patient.properties.diagnosisCodes.type" = "array"
"definitions.Patient.properties.fhirAllergies.items.$ref" = "#/definitions/FhirAllergy"
"definitions.Patient.properties.fhirAllergies.type" = "array"
"definitions.Patient.properties.fhirConditions.items.$ref" = "#/definitions/FhirCondition"
"definitions.Patient.properties.fhirConditions.type" = "array"
"definitions.Patient.properties.fhirEncounters.items.$ref" = "#/definitions/FhirEncounter"
"definitions.Patient.properties.fhirEncounters.type" = "array"
"definitions.Patient.properties.fhirObservations.items.$ref" = "#/definitions/FhirObservation"
"definitions.Patient.properties.fhirObservations.type" = "array"
"definitions.Patient.properties.fhirPatient.$ref" = "#/definitions/FhirPatient"
"definitions.Patient.properties.fhirPractitioners.items.$ref" = "#/definitions/FhirPractitioner"
"definitions.Patient.properties.fhirPractitioners.type" = "array"
"definitions.Patient.properties.group.$ref" = "#/definitions/Group"
"definitions.Patient.properties.id.format" = "int64"
"definitions.Patient.properties.id.type" = "integer"
"definitions.PatientManagement.properties.condition.$ref" = "#/definitions/FhirCondition"
"definitions.PatientManagement.properties.encounters.items.$ref" = "#/definitions/FhirEncounter"
"definitions.PatientManagement.properties.encounters.type" = "array"
"definitions.PatientManagement.properties.groupCode.type" = "string"
"definitions.PatientManagement.properties.identifier.type" = "string"
"definitions.PatientManagement.properties.observations.items.$ref" = "#/definitions/FhirObservation"
"definitions.PatientManagement.properties.observations.type" = "array"
"definitions.PatientManagement.properties.patient.$ref" = "#/definitions/FhirPatient"
"definitions.PatientManagement.properties.practitioners.items.$ref" = "#/definitions/FhirPractitioner"
"definitions.PatientManagement.properties.practitioners.type" = "array"
"definitions.Role.properties.description.type" = "string"
"definitions.Role.properties.id.format" = "int64"
"definitions.Role.properties.id.type" = "integer"
"definitions.Role.properties.name.enum.length" = 11
"definitions.Role.properties.name.enum[0]" = "PATIENT"
"definitions.Role.properties.name.enum[10]" = "IMPORTER"
"definitions.Role.properties.name.enum[1]" = "UNIT_ADMIN"
"definitions.Role.properties.name.enum[2]" = "STAFF_ADMIN"
"definitions.Role.properties.name.enum[3]" = "DISEASE_GROUP_ADMIN"
"definitions.Role.properties.name.enum[4]" = "SPECIALTY_ADMIN"
"definitions.Role.properties.name.enum[5]" = "GLOBAL_ADMIN"
"definitions.Role.properties.name.enum[6]" = "GP_ADMIN"
"definitions.Role.properties.name.enum[7]" = "MEMBER"
"definitions.Role.properties.name.enum[8]" = "PUBLIC"
"definitions.Role.properties.name.enum[9]" = "UNIT_ADMIN_API"
"definitions.Role.properties.name.type" = "string"
"definitions.Role.properties.visible.type" = "boolean"
"definitions.Route.properties.controller.type" = "string"
"definitions.Route.properties.created.format" = "date-time"
"definitions.Route.properties.created.type" = "string"
"definitions.Route.properties.displayOrder.format" = "int32"
"definitions.Route.properties.displayOrder.type" = "integer"
"definitions.Route.properties.id.format" = "int64"
"definitions.Route.properties.id.type" = "integer"
"definitions.Route.properties.lookup.$ref" = "#/definitions/Lookup"
"definitions.Route.properties.templateUrl.type" = "string"
"definitions.Route.properties.title.type" = "string"
"definitions.Route.properties.url.type" = "string"
"definitions.User.properties.apiKey.$ref" = "#/definitions/ApiKey"
"definitions.User.properties.canSwitchUser.type" = "boolean"
"definitions.User.properties.changePassword.type" = "boolean"
"definitions.User.properties.contactNumber.type" = "string"
"definitions.User.properties.created.format" = "date-time"
"definitions.User.properties.created.type" = "string"
"definitions.User.properties.currentLogin.format" = "date-time"
"definitions.User.properties.currentLogin.type" = "string"
"definitions.User.properties.currentLoginIpAddress.type" = "string"
"definitions.User.properties.dateOfBirth.format" = "date-time"
"definitions.User.properties.dateOfBirth.type" = "string"
"definitions.User.properties.deleted.type" = "boolean"
"definitions.User.properties.dummy.type" = "boolean"
"definitions.User.properties.email.type" = "string"
"definitions.User.properties.emailVerified.type" = "boolean"
"definitions.User.properties.forename.type" = "string"
"definitions.User.properties.groupRoles.items.$ref" = "#/definitions/GroupRole"
"definitions.User.properties.groupRoles.type" = "array"
"definitions.User.properties.groupRoles.uniqueItems" = true
"definitions.User.properties.hideSecretWordNotification.type" = "boolean"
"definitions.User.properties.id.format" = "int64"
"definitions.User.properties.id.type" = "integer"
"definitions.User.properties.identifiers.items.type" = "object"
"definitions.User.properties.identifiers.type" = "array"
"definitions.User.properties.identifiers.uniqueItems" = true
"definitions.User.properties.lastLogin.format" = "date-time"
"definitions.User.properties.lastLogin.type" = "string"
"definitions.User.properties.lastLoginIpAddress.type" = "string"
"definitions.User.properties.latestDataReceivedBy.$ref" = "#/definitions/BaseGroup"
"definitions.User.properties.latestDataReceivedDate.format" = "date-time"
"definitions.User.properties.latestDataReceivedDate.type" = "string"
"definitions.User.properties.locked.type" = "boolean"
"definitions.User.properties.picture.type" = "string"
"definitions.User.properties.roleDescription.type" = "string"
"definitions.User.properties.secretWordIsSet.type" = "boolean"
"definitions.User.properties.surname.type" = "string"
"definitions.User.properties.userFeatures.items.$ref" = "#/definitions/UserFeature"
"definitions.User.properties.userFeatures.type" = "array"
"definitions.User.properties.userFeatures.uniqueItems" = true
"definitions.User.properties.username.type" = "string"
"definitions.UserFeature.properties.created.format" = "date-time"
"definitions.UserFeature.properties.created.type" = "string"
"definitions.UserFeature.properties.feature.$ref" = "#/definitions/Feature"
"definitions.UserFeature.properties.id.format" = "int64"
"definitions.UserFeature.properties.id.type" = "integer"
"definitions.UserFeature.properties.lastUpdate.format" = "date-time"
"definitions.UserFeature.properties.lastUpdate.type" = "string"
"definitions.UserFeature.properties.optInDate.format" = "date-time"
"definitions.UserFeature.properties.optInDate.type" = "string"
"definitions.UserFeature.properties.optInHidden.type" = "boolean"
"definitions.UserFeature.properties.optInStatus.type" = "boolean"
"definitions.UserFeature.properties.optOutHidden.type" = "boolean"
"definitions.UserToken.properties.auditActions.items.type" = "string"
"definitions.UserToken.properties.auditActions.type" = "array"
"definitions.UserToken.properties.checkSecretWord.type" = "boolean"
"definitions.UserToken.properties.created.format" = "date-time"
"definitions.UserToken.properties.created.type" = "string"
"definitions.UserToken.properties.expiration.format" = "date-time"
"definitions.UserToken.properties.expiration.type" = "string"
"definitions.UserToken.properties.externalStandards.items.$ref" = "#/definitions/ExternalStandard"
"definitions.UserToken.properties.externalStandards.type" = "array"
"definitions.UserToken.properties.groupFeatures.items.$ref" = "#/definitions/Feature"
"definitions.UserToken.properties.groupFeatures.type" = "array"
"definitions.UserToken.properties.groupMessagingEnabled.type" = "boolean"
"definitions.UserToken.properties.mustSetSecretWord.type" = "boolean"
"definitions.UserToken.properties.patientFeatures.items.$ref" = "#/definitions/Feature"
"definitions.UserToken.properties.patientFeatures.type" = "array"
"definitions.UserToken.properties.patientMessagingFeatureTypes.items.type" = "string"
"definitions.UserToken.properties.patientMessagingFeatureTypes.type" = "array"
"definitions.UserToken.properties.patientRoles.items.$ref" = "#/definitions/Role"
"definitions.UserToken.properties.patientRoles.type" = "array"
"definitions.UserToken.properties.routes.items.$ref" = "#/definitions/Route"
"definitions.UserToken.properties.routes.type" = "array"
"definitions.UserToken.properties.routes.uniqueItems" = true
"definitions.UserToken.properties.secretWord.type" = "string"
"definitions.UserToken.properties.secretWordChoices.type" = "object"
"definitions.UserToken.properties.secretWordIndexes.items.type" = "string"
"definitions.UserToken.properties.secretWordIndexes.type" = "array"
"definitions.UserToken.properties.secretWordToken.type" = "string"
"definitions.UserToken.properties.securityRoles.items.$ref" = "#/definitions/Role"
"definitions.UserToken.properties.securityRoles.type" = "array"
"definitions.UserToken.properties.shouldEnterCondition.type" = "boolean"
"definitions.UserToken.properties.staffFeatures.items.$ref" = "#/definitions/Feature"
"definitions.UserToken.properties.staffFeatures.type" = "array"
"definitions.UserToken.properties.staffRoles.items.$ref" = "#/definitions/Role"
"definitions.UserToken.properties.staffRoles.type" = "array"
"definitions.UserToken.properties.token.type" = "string"
"definitions.UserToken.properties.user.$ref" = "#/definitions/User"
"definitions.UserToken.properties.userFeatures.items.$ref" = "#/definitions/Feature"
"definitions.UserToken.properties.userFeatures.type" = "array"
"definitions.UserToken.properties.userGroups.items.$ref" = "#/definitions/BaseGroup"
"definitions.UserToken.properties.userGroups.type" = "array"
host = "www.patientview.org"
"info.description" = "The recommended REST API endpoints to be used when integrating with PatientView"
"info.termsOfService" = "https://www.patientview.org/#/terms"
"info.title" = "PatientView"
"info.version" = "1.0"
"info.x-logo.url" = "https://api.apis.guru/v2/cache/logo/https_www.patientview.org_images_pv-logo.png"
"info.x-origin.length" = 1
"info.x-origin[0].converter.url" = "https://github.com/lucybot/api-spec-converter"
"info.x-origin[0].converter.version" = "2.5.0"
"info.x-origin[0].format" = "swagger"
"info.x-origin[0].url" = "https://www.patientview.org/api/api-docs"
"info.x-origin[0].version" = "1.2"
"info.x-preferred" = true
"info.x-providerName" = "patientview.org"
"paths./auth/login.post.deprecated" = false
"paths./auth/login.post.description" = "Authenticate using username and password, returns token, which must be added to X-Auth-Token in header of all future requests"
"paths./auth/login.post.operationId" = "logIn"
"paths./auth/login.post.parameters.length" = 1
"paths./auth/login.post.parameters[0].description" = "credentials"
"paths./auth/login.post.parameters[0].in" = "body"
"paths./auth/login.post.parameters[0].name" = "body"
"paths./auth/login.post.parameters[0].required" = false
"paths./auth/login.post.parameters[0].schema.$ref" = "#/definitions/Credentials"
"paths./auth/login.post.produces.length" = 1
"paths./auth/login.post.produces[0]" = "*/*"
"paths./auth/login.post.responses.200.description" = "Description was not specified"
"paths./auth/login.post.responses.200.schema.$ref" = "#/definitions/UserToken"
"paths./auth/login.post.responses.201.description" = "Created"
"paths./auth/login.post.responses.401.description" = "Unauthorized"
"paths./auth/login.post.responses.403.description" = "Forbidden"
"paths./auth/login.post.responses.404.description" = "Not Found"
"paths./auth/login.post.summary" = "Log In"
"paths./auth/login.post.tags.length" = 1
"paths./auth/login.post.tags[0]" = "auth-controller"
"paths./auth/logout/{token}.delete.deprecated" = false
"paths./auth/logout/{token}.delete.description" = "Log Out"
"paths./auth/logout/{token}.delete.operationId" = "logOut"
"paths./auth/logout/{token}.delete.parameters.length" = 1
"paths./auth/logout/{token}.delete.parameters[0].description" = "token"
"paths./auth/logout/{token}.delete.parameters[0].in" = "path"
"paths./auth/logout/{token}.delete.parameters[0].name" = "token"
"paths./auth/logout/{token}.delete.parameters[0].required" = true
"paths./auth/logout/{token}.delete.parameters[0].type" = "string"
"paths./auth/logout/{token}.delete.produces.length" = 1
"paths./auth/logout/{token}.delete.produces[0]" = "*/*"
"paths./auth/logout/{token}.delete.responses.200.description" = "Description was not specified"
"paths./auth/logout/{token}.delete.responses.204.description" = "No Content"
"paths./auth/logout/{token}.delete.responses.401.description" = "Unauthorized"
"paths./auth/logout/{token}.delete.responses.403.description" = "Forbidden"
"paths./auth/logout/{token}.delete.summary" = "Log Out"
"paths./auth/logout/{token}.delete.tags.length" = 1
"paths./auth/logout/{token}.delete.tags[0]" = "auth-controller"
"paths./auth/{token}/basicuserinformation.get.deprecated" = false
"paths./auth/{token}/basicuserinformation.get.description" = "Once logged in and have a token, get basic user information including group role membership"
"paths./auth/{token}/basicuserinformation.get.operationId" = "getBasicUserInformation"
"paths./auth/{token}/basicuserinformation.get.parameters.length" = 1
"paths./auth/{token}/basicuserinformation.get.parameters[0].description" = "token"
"paths./auth/{token}/basicuserinformation.get.parameters[0].in" = "path"
"paths./auth/{token}/basicuserinformation.get.parameters[0].name" = "token"
"paths./auth/{token}/basicuserinformation.get.parameters[0].required" = true
"paths./auth/{token}/basicuserinformation.get.parameters[0].type" = "string"
"paths./auth/{token}/basicuserinformation.get.produces.length" = 1
"paths./auth/{token}/basicuserinformation.get.produces[0]" = "*/*"
"paths./auth/{token}/basicuserinformation.get.responses.200.description" = "OK"
"paths./auth/{token}/basicuserinformation.get.responses.200.schema.$ref" = "#/definitions/User"
"paths./auth/{token}/basicuserinformation.get.responses.401.description" = "Unauthorized"
"paths./auth/{token}/basicuserinformation.get.responses.403.description" = "Forbidden"
"paths./auth/{token}/basicuserinformation.get.responses.404.description" = "Not Found"
"paths./auth/{token}/basicuserinformation.get.summary" = "Get Basic User Information"
"paths./auth/{token}/basicuserinformation.get.tags.length" = 1
"paths./auth/{token}/basicuserinformation.get.tags[0]" = "auth-controller"
"paths./patient/{userId}/basic.get.deprecated" = false
"paths./patient/{userId}/basic.get.description" = "Given a User ID, get basic patient information for a user from clinical data stored in FHIR"
"paths./patient/{userId}/basic.get.operationId" = "getBasicPatientDetails"
"paths./patient/{userId}/basic.get.parameters.length" = 1
"paths./patient/{userId}/basic.get.parameters[0].description" = "userId"
"paths./patient/{userId}/basic.get.parameters[0].format" = "int64"
"paths./patient/{userId}/basic.get.parameters[0].in" = "path"
"paths./patient/{userId}/basic.get.parameters[0].name" = "userId"
"paths./patient/{userId}/basic.get.parameters[0].required" = true
"paths./patient/{userId}/basic.get.parameters[0].type" = "integer"
"paths./patient/{userId}/basic.get.produces.length" = 1
"paths./patient/{userId}/basic.get.produces[0]" = "*/*"
"paths./patient/{userId}/basic.get.responses.200.description" = "OK"
"paths./patient/{userId}/basic.get.responses.200.schema.items.$ref" = "#/definitions/Patient"
"paths./patient/{userId}/basic.get.responses.200.schema.type" = "array"
"paths./patient/{userId}/basic.get.responses.200.schema.uniqueItems" = false
"paths./patient/{userId}/basic.get.responses.401.description" = "Unauthorized"
"paths./patient/{userId}/basic.get.responses.403.description" = "Forbidden"
"paths./patient/{userId}/basic.get.responses.404.description" = "Not Found"
"paths./patient/{userId}/basic.get.summary" = "Get Basic Patient Information"
"paths./patient/{userId}/basic.get.tags.length" = 1
"paths./patient/{userId}/basic.get.tags[0]" = "patient-controller"
"paths./patientmanagement/diagnoses.get.deprecated" = false
"paths./patientmanagement/diagnoses.get.description" = "getPatientManagementDiagnoses"
"paths./patientmanagement/diagnoses.get.operationId" = "getPatientManagementDiagnoses"
"paths./patientmanagement/diagnoses.get.produces.length" = 1
"paths./patientmanagement/diagnoses.get.produces[0]" = "application/json"
"paths./patientmanagement/diagnoses.get.responses.200.description" = "OK"
"paths./patientmanagement/diagnoses.get.responses.200.schema.items.$ref" = "#/definitions/Code"
"paths./patientmanagement/diagnoses.get.responses.200.schema.type" = "array"
"paths./patientmanagement/diagnoses.get.responses.200.schema.uniqueItems" = false
"paths./patientmanagement/diagnoses.get.responses.401.description" = "Unauthorized"
"paths./patientmanagement/diagnoses.get.responses.403.description" = "Forbidden"
"paths./patientmanagement/diagnoses.get.responses.404.description" = "Not Found"
"paths./patientmanagement/diagnoses.get.summary" = "getPatientManagementDiagnoses"
"paths./patientmanagement/diagnoses.get.tags.length" = 1
"paths./patientmanagement/diagnoses.get.tags[0]" = "patient-management-controller"
"paths./patientmanagement/lookuptypes.get.deprecated" = false
"paths./patientmanagement/lookuptypes.get.description" = "getPatientManagementLookupTypes"
"paths./patientmanagement/lookuptypes.get.operationId" = "getPatientManagementLookupTypes"
"paths./patientmanagement/lookuptypes.get.produces.length" = 1
"paths./patientmanagement/lookuptypes.get.produces[0]" = "application/json"
"paths./patientmanagement/lookuptypes.get.responses.200.description" = "OK"
"paths./patientmanagement/lookuptypes.get.responses.200.schema.items.$ref" = "#/definitions/LookupType"
"paths./patientmanagement/lookuptypes.get.responses.200.schema.type" = "array"
"paths./patientmanagement/lookuptypes.get.responses.200.schema.uniqueItems" = false
"paths./patientmanagement/lookuptypes.get.responses.401.description" = "Unauthorized"
"paths./patientmanagement/lookuptypes.get.responses.403.description" = "Forbidden"
"paths./patientmanagement/lookuptypes.get.responses.404.description" = "Not Found"
"paths./patientmanagement/lookuptypes.get.summary" = "getPatientManagementLookupTypes"
"paths./patientmanagement/lookuptypes.get.tags.length" = 1
"paths./patientmanagement/lookuptypes.get.tags[0]" = "patient-management-controller"
"paths./patientmanagement/validate.post.deprecated" = false
"paths./patientmanagement/validate.post.description" = "validatePatientManagement"
"paths./patientmanagement/validate.post.operationId" = "validatePatientManagement"
"paths./patientmanagement/validate.post.parameters.length" = 1
"paths./patientmanagement/validate.post.parameters[0].description" = "patientManagement"
"paths./patientmanagement/validate.post.parameters[0].in" = "body"
"paths./patientmanagement/validate.post.parameters[0].name" = "body"
"paths./patientmanagement/validate.post.parameters[0].required" = false
"paths./patientmanagement/validate.post.parameters[0].schema.$ref" = "#/definitions/PatientManagement"
"paths./patientmanagement/validate.post.produces.length" = 1
"paths./patientmanagement/validate.post.produces[0]" = "application/json"
"paths./patientmanagement/validate.post.responses.200.description" = "Description was not specified"
"paths./patientmanagement/validate.post.responses.201.description" = "Created"
"paths./patientmanagement/validate.post.responses.401.description" = "Unauthorized"
"paths./patientmanagement/validate.post.responses.403.description" = "Forbidden"
"paths./patientmanagement/validate.post.responses.404.description" = "Not Found"
"paths./patientmanagement/validate.post.summary" = "validatePatientManagement"
"paths./patientmanagement/validate.post.tags.length" = 1
"paths./patientmanagement/validate.post.tags[0]" = "patient-management-controller"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.deprecated" = false
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.description" = "getPatientManagement"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.operationId" = "getPatientManagement"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.parameters.length" = 3
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.parameters[0].description" = "userId"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.parameters[0].format" = "int64"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.parameters[0].in" = "path"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.parameters[0].name" = "userId"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.parameters[0].required" = true
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.parameters[0].type" = "integer"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.parameters[1].description" = "groupId"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.parameters[1].format" = "int64"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.parameters[1].in" = "path"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.parameters[1].name" = "groupId"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.parameters[1].required" = true
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.parameters[1].type" = "integer"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.parameters[2].description" = "identifierId"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.parameters[2].format" = "int64"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.parameters[2].in" = "path"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.parameters[2].name" = "identifierId"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.parameters[2].required" = true
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.parameters[2].type" = "integer"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.produces.length" = 1
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.produces[0]" = "application/json"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.responses.200.description" = "OK"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.responses.200.schema.$ref" = "#/definitions/PatientManagement"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.responses.401.description" = "Unauthorized"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.responses.403.description" = "Forbidden"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.responses.404.description" = "Not Found"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.summary" = "getPatientManagement"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.tags.length" = 1
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.get.tags[0]" = "patient-management-controller"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.deprecated" = false
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.description" = "savePatientManagement"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.operationId" = "savePatientManagement"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.parameters.length" = 4
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.parameters[0].description" = "userId"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.parameters[0].format" = "int64"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.parameters[0].in" = "path"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.parameters[0].name" = "userId"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.parameters[0].required" = true
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.parameters[0].type" = "integer"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.parameters[1].description" = "groupId"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.parameters[1].format" = "int64"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.parameters[1].in" = "path"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.parameters[1].name" = "groupId"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.parameters[1].required" = true
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.parameters[1].type" = "integer"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.parameters[2].description" = "identifierId"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.parameters[2].format" = "int64"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.parameters[2].in" = "path"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.parameters[2].name" = "identifierId"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.parameters[2].required" = true
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.parameters[2].type" = "integer"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.parameters[3].description" = "patientManagement"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.parameters[3].in" = "body"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.parameters[3].name" = "body"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.parameters[3].required" = false
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.parameters[3].schema.$ref" = "#/definitions/PatientManagement"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.produces.length" = 1
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.produces[0]" = "application/json"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.responses.200.description" = "Description was not specified"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.responses.201.description" = "Created"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.responses.401.description" = "Unauthorized"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.responses.403.description" = "Forbidden"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.responses.404.description" = "Not Found"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.summary" = "savePatientManagement"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.tags.length" = 1
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}.post.tags[0]" = "patient-management-controller"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.deprecated" = false
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.description" = "savePatientManagementSurgeries"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.operationId" = "savePatientManagementSurgeries"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.parameters.length" = 4
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.parameters[0].description" = "userId"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.parameters[0].format" = "int64"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.parameters[0].in" = "path"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.parameters[0].name" = "userId"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.parameters[0].required" = true
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.parameters[0].type" = "integer"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.parameters[1].description" = "groupId"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.parameters[1].format" = "int64"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.parameters[1].in" = "path"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.parameters[1].name" = "groupId"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.parameters[1].required" = true
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.parameters[1].type" = "integer"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.parameters[2].description" = "identifierId"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.parameters[2].format" = "int64"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.parameters[2].in" = "path"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.parameters[2].name" = "identifierId"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.parameters[2].required" = true
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.parameters[2].type" = "integer"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.parameters[3].description" = "patientManagement"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.parameters[3].in" = "body"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.parameters[3].name" = "body"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.parameters[3].required" = false
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.parameters[3].schema.$ref" = "#/definitions/PatientManagement"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.produces.length" = 1
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.produces[0]" = "application/json"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.responses.200.description" = "Description was not specified"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.responses.201.description" = "Created"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.responses.401.description" = "Unauthorized"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.responses.403.description" = "Forbidden"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.responses.404.description" = "Not Found"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.summary" = "savePatientManagementSurgeries"
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.tags.length" = 1
"paths./patientmanagement/{userId}/group/{groupId}/identifier/{identifierId}/surgeries.post.tags[0]" = "patient-management-controller"
"paths./user/{userId}/availableobservationheadings.get.deprecated" = false
"paths./user/{userId}/availableobservationheadings.get.description" = "Given a User ID retrieve a list of available observation types for that user (where they have observation data)."
"paths./user/{userId}/availableobservationheadings.get.operationId" = "getAvailableObservationHeadings"
"paths./user/{userId}/availableobservationheadings.get.parameters.length" = 1
"paths./user/{userId}/availableobservationheadings.get.parameters[0].description" = "userId"
"paths./user/{userId}/availableobservationheadings.get.parameters[0].format" = "int64"
"paths./user/{userId}/availableobservationheadings.get.parameters[0].in" = "path"
"paths./user/{userId}/availableobservationheadings.get.parameters[0].name" = "userId"
"paths./user/{userId}/availableobservationheadings.get.parameters[0].required" = true
"paths./user/{userId}/availableobservationheadings.get.parameters[0].type" = "integer"
"paths./user/{userId}/availableobservationheadings.get.produces.length" = 1
"paths./user/{userId}/availableobservationheadings.get.produces[0]" = "application/json"
"paths./user/{userId}/availableobservationheadings.get.responses.200.description" = "OK"
"paths./user/{userId}/availableobservationheadings.get.responses.200.schema.items.$ref" = "#/definitions/ObservationHeading"
"paths./user/{userId}/availableobservationheadings.get.responses.200.schema.type" = "array"
"paths./user/{userId}/availableobservationheadings.get.responses.200.schema.uniqueItems" = false
"paths./user/{userId}/availableobservationheadings.get.responses.401.description" = "Unauthorized"
"paths./user/{userId}/availableobservationheadings.get.responses.403.description" = "Forbidden"
"paths./user/{userId}/availableobservationheadings.get.responses.404.description" = "Not Found"
"paths./user/{userId}/availableobservationheadings.get.summary" = "Get Available Observations Types For a User"
"paths./user/{userId}/availableobservationheadings.get.tags.length" = 1
"paths./user/{userId}/availableobservationheadings.get.tags[0]" = "observation-heading-controller"
"paths./user/{userId}/observations.get.deprecated" = false
"paths./user/{userId}/observations.get.description" = "Given a User ID and search parameters, retrieve a page of observations."
"paths./user/{userId}/observations.get.operationId" = "getObservationsByCodes"
"paths./user/{userId}/observations.get.parameters.length" = 5
"paths./user/{userId}/observations.get.parameters[0].description" = "userId"
"paths./user/{userId}/observations.get.parameters[0].format" = "int64"
"paths./user/{userId}/observations.get.parameters[0].in" = "path"
"paths./user/{userId}/observations.get.parameters[0].name" = "userId"
"paths./user/{userId}/observations.get.parameters[0].required" = true
"paths./user/{userId}/observations.get.parameters[0].type" = "integer"
"paths./user/{userId}/observations.get.parameters[1].description" = "code"
"paths./user/{userId}/observations.get.parameters[1].in" = "query"
"paths./user/{userId}/observations.get.parameters[1].items.type" = "string"
"paths./user/{userId}/observations.get.parameters[1].name" = "code"
"paths./user/{userId}/observations.get.parameters[1].required" = true
"paths./user/{userId}/observations.get.parameters[1].type" = "array"
"paths./user/{userId}/observations.get.parameters[1].uniqueItems" = false
"paths./user/{userId}/observations.get.parameters[2].description" = "limit"
"paths./user/{userId}/observations.get.parameters[2].format" = "int64"
"paths./user/{userId}/observations.get.parameters[2].in" = "query"
"paths./user/{userId}/observations.get.parameters[2].name" = "limit"
"paths./user/{userId}/observations.get.parameters[2].required" = true
"paths./user/{userId}/observations.get.parameters[2].type" = "integer"
"paths./user/{userId}/observations.get.parameters[3].description" = "offset"
"paths./user/{userId}/observations.get.parameters[3].format" = "int64"
"paths./user/{userId}/observations.get.parameters[3].in" = "query"
"paths./user/{userId}/observations.get.parameters[3].name" = "offset"
"paths./user/{userId}/observations.get.parameters[3].required" = true
"paths./user/{userId}/observations.get.parameters[3].type" = "integer"
"paths./user/{userId}/observations.get.parameters[4].description" = "orderDirection"
"paths./user/{userId}/observations.get.parameters[4].in" = "query"
"paths./user/{userId}/observations.get.parameters[4].name" = "orderDirection"
"paths./user/{userId}/observations.get.parameters[4].required" = true
"paths./user/{userId}/observations.get.parameters[4].type" = "string"
"paths./user/{userId}/observations.get.produces.length" = 1
"paths./user/{userId}/observations.get.produces[0]" = "*/*"
"paths./user/{userId}/observations.get.responses.200.description" = "OK"
"paths./user/{userId}/observations.get.responses.200.schema.$ref" = "#/definitions/FhirObservationPage"
"paths./user/{userId}/observations.get.responses.401.description" = "Unauthorized"
"paths./user/{userId}/observations.get.responses.403.description" = "Forbidden"
"paths./user/{userId}/observations.get.responses.404.description" = "Not Found"
"paths./user/{userId}/observations.get.summary" = "Get Observations of Multiple Types For a User"
"paths./user/{userId}/observations.get.tags.length" = 1
"paths./user/{userId}/observations.get.tags[0]" = "observation-controller"
"paths./user/{userId}/observations/{code}.get.deprecated" = false
"paths./user/{userId}/observations/{code}.get.description" = "Given a User ID and observation code, retrieve all observations."
"paths./user/{userId}/observations/{code}.get.operationId" = "getObservationsByCode"
"paths./user/{userId}/observations/{code}.get.parameters.length" = 2
"paths./user/{userId}/observations/{code}.get.parameters[0].description" = "userId"
"paths./user/{userId}/observations/{code}.get.parameters[0].format" = "int64"
"paths./user/{userId}/observations/{code}.get.parameters[0].in" = "path"
"paths./user/{userId}/observations/{code}.get.parameters[0].name" = "userId"
"paths./user/{userId}/observations/{code}.get.parameters[0].required" = true
"paths./user/{userId}/observations/{code}.get.parameters[0].type" = "integer"
"paths./user/{userId}/observations/{code}.get.parameters[1].description" = "code"
"paths./user/{userId}/observations/{code}.get.parameters[1].in" = "path"
"paths./user/{userId}/observations/{code}.get.parameters[1].name" = "code"
"paths./user/{userId}/observations/{code}.get.parameters[1].required" = true
"paths./user/{userId}/observations/{code}.get.parameters[1].type" = "string"
"paths./user/{userId}/observations/{code}.get.produces.length" = 1
"paths./user/{userId}/observations/{code}.get.produces[0]" = "*/*"
"paths./user/{userId}/observations/{code}.get.responses.200.description" = "OK"
"paths./user/{userId}/observations/{code}.get.responses.200.schema.items.$ref" = "#/definitions/FhirObservation"
"paths./user/{userId}/observations/{code}.get.responses.200.schema.type" = "array"
"paths./user/{userId}/observations/{code}.get.responses.200.schema.uniqueItems" = false
"paths./user/{userId}/observations/{code}.get.responses.401.description" = "Unauthorized"
"paths./user/{userId}/observations/{code}.get.responses.403.description" = "Forbidden"
"paths./user/{userId}/observations/{code}.get.responses.404.description" = "Not Found"
"paths./user/{userId}/observations/{code}.get.summary" = "Get Observations of a Certain Type For a User"
"paths./user/{userId}/observations/{code}.get.tags.length" = 1
"paths./user/{userId}/observations/{code}.get.tags[0]" = "observation-controller"
"paths./user/{userId}/observations/{code}/patiententered.get.deprecated" = false
"paths./user/{userId}/observations/{code}/patiententered.get.description" = "Given a User ID and observation code, retrieve patient entered observations."
"paths./user/{userId}/observations/{code}/patiententered.get.operationId" = "getPatientEnteredObservationsByCode"
"paths./user/{userId}/observations/{code}/patiententered.get.parameters.length" = 2
"paths./user/{userId}/observations/{code}/patiententered.get.parameters[0].description" = "userId"
"paths./user/{userId}/observations/{code}/patiententered.get.parameters[0].format" = "int64"
"paths./user/{userId}/observations/{code}/patiententered.get.parameters[0].in" = "path"
"paths./user/{userId}/observations/{code}/patiententered.get.parameters[0].name" = "userId"
"paths./user/{userId}/observations/{code}/patiententered.get.parameters[0].required" = true
"paths./user/{userId}/observations/{code}/patiententered.get.parameters[0].type" = "integer"
"paths./user/{userId}/observations/{code}/patiententered.get.parameters[1].description" = "code"
"paths./user/{userId}/observations/{code}/patiententered.get.parameters[1].in" = "path"
"paths./user/{userId}/observations/{code}/patiententered.get.parameters[1].name" = "code"
"paths./user/{userId}/observations/{code}/patiententered.get.parameters[1].required" = true
"paths./user/{userId}/observations/{code}/patiententered.get.parameters[1].type" = "string"
"paths./user/{userId}/observations/{code}/patiententered.get.produces.length" = 1
"paths./user/{userId}/observations/{code}/patiententered.get.produces[0]" = "*/*"
"paths./user/{userId}/observations/{code}/patiententered.get.responses.200.description" = "OK"
"paths./user/{userId}/observations/{code}/patiententered.get.responses.200.schema.items.$ref" = "#/definitions/FhirObservation"
"paths./user/{userId}/observations/{code}/patiententered.get.responses.200.schema.type" = "array"
"paths./user/{userId}/observations/{code}/patiententered.get.responses.200.schema.uniqueItems" = false
"paths./user/{userId}/observations/{code}/patiententered.get.responses.401.description" = "Unauthorized"
"paths./user/{userId}/observations/{code}/patiententered.get.responses.403.description" = "Forbidden"
"paths./user/{userId}/observations/{code}/patiententered.get.responses.404.description" = "Not Found"
"paths./user/{userId}/observations/{code}/patiententered.get.summary" = "Get patient entered Observations of a Certain Type For a User"
"paths./user/{userId}/observations/{code}/patiententered.get.tags.length" = 1
"paths./user/{userId}/observations/{code}/patiententered.get.tags[0]" = "observation-controller"
"paths./user/{userId}/patiententeredobservationheadings.get.deprecated" = false
"paths./user/{userId}/patiententeredobservationheadings.get.description" = "Given a User ID retrieve a list of available observation types for that user (where they have patient entered observation data)."
"paths./user/{userId}/patiententeredobservationheadings.get.operationId" = "getPatientEnteredObservationHeadings"
"paths./user/{userId}/patiententeredobservationheadings.get.parameters.length" = 1
"paths./user/{userId}/patiententeredobservationheadings.get.parameters[0].description" = "userId"
"paths./user/{userId}/patiententeredobservationheadings.get.parameters[0].format" = "int64"
"paths./user/{userId}/patiententeredobservationheadings.get.parameters[0].in" = "path"
"paths./user/{userId}/patiententeredobservationheadings.get.parameters[0].name" = "userId"
"paths./user/{userId}/patiententeredobservationheadings.get.parameters[0].required" = true
"paths./user/{userId}/patiententeredobservationheadings.get.parameters[0].type" = "integer"
"paths./user/{userId}/patiententeredobservationheadings.get.produces.length" = 1
"paths./user/{userId}/patiententeredobservationheadings.get.produces[0]" = "application/json"
"paths./user/{userId}/patiententeredobservationheadings.get.responses.200.description" = "OK"
"paths./user/{userId}/patiententeredobservationheadings.get.responses.200.schema.items.$ref" = "#/definitions/ObservationHeading"
"paths./user/{userId}/patiententeredobservationheadings.get.responses.200.schema.type" = "array"
"paths./user/{userId}/patiententeredobservationheadings.get.responses.200.schema.uniqueItems" = false
"paths./user/{userId}/patiententeredobservationheadings.get.responses.401.description" = "Unauthorized"
"paths./user/{userId}/patiententeredobservationheadings.get.responses.403.description" = "Forbidden"
"paths./user/{userId}/patiententeredobservationheadings.get.responses.404.description" = "Not Found"
"paths./user/{userId}/patiententeredobservationheadings.get.summary" = "Get Available Patient Entered Observations Types For a User"
"paths./user/{userId}/patiententeredobservationheadings.get.tags.length" = 1
"paths./user/{userId}/patiententeredobservationheadings.get.tags[0]" = "observation-heading-controller"
"schemes.length" = 1
"schemes[0]" = "https"
swagger = "2.0"
"tags.length" = 5
"tags[0].description" = "Auth Controller"
"tags[0].name" = "auth-controller"
"tags[1].description" = "Observation Controller"
"tags[1].name" = "observation-controller"
"tags[2].description" = "Observation Heading Controller"
"tags[2].name" = "observation-heading-controller"
"tags[3].description" = "Patient Controller"
"tags[3].name" = "patient-controller"
"tags[4].description" = "Patient Management Controller"
"tags[4].name" = "patient-management-controller"
