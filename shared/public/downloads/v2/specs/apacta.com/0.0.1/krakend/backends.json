{
	"backends": [
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/cities",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-cities",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/cities/{city_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-cities-city-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/clocking_records",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-clocking-records",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/clocking_records/checkout",
			"method": "POST",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-clocking-records-checkout",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/clocking_records/{clocking_record_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-clocking-records-clocking-record-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/companies",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-companies",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/companies/{company_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-companies-company-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/companies/{company_id}/integration_feature_settings",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-companies-company-id-integration-feature-settings",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/companies/{company_id}/integration_feature_settings/{integration_feature_setting_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-companies-company-id-integration-feature-settings-integration-feature-setting-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/contact_types",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-contact-types",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/contact_types/{contact_type_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-contact-types-contact-type-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/contacts",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-contacts",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/contacts/{contact_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-contacts-contact-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/currencies",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-currencies",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/currencies/{currency_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-currencies-currency-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/employee_hours",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-employee-hours",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/expense_files",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-expense-files",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/expense_files/{expense_file_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-expense-files-expense-file-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/expense_lines",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-expense-lines",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/expense_lines/{expense_line_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-expense-lines-expense-line-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/expenses",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-expenses",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/expenses/{expense_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-expenses-expense-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/form_field_types",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-form-field-types",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/form_field_types/{form_field_type_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-form-field-types-form-field-type-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/form_fields",
			"method": "POST",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-form-fields",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/form_fields/{form_field_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-form-fields-form-field-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/form_templates",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-form-templates",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/form_templates/{form_template_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-form-templates-form-template-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/forms",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-forms",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/forms/{form_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-forms-form-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/invoice_lines",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-invoice-lines",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/invoice_lines/{invoice_line_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-invoice-lines-invoice-line-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/invoices",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-invoices",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/invoices/{invoice_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-invoices-invoice-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/mass_messages_users",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-mass-messages-users",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/mass_messages_users/{mass_messages_user_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-mass-messages-users-mass-messages-user-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/materials",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-materials",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/materials/{material_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-materials-material-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/materials/{material_id}/rentals/",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-materials-material-id-rentals",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/materials/{material_id}/rentals/checkout/",
			"method": "POST",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-materials-material-id-rentals-checkout",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/materials/{material_id}/rentals/{material_rental_id}/",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-materials-material-id-rentals-material-rental-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/payment_term_types",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-payment-term-types",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/payment_term_types/{payment_term_type_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-payment-term-types-payment-term-type-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/payment_terms",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-payment-terms",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/payment_terms/{payment_term_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-payment-terms-payment-term-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/ping",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-ping",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/products",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-products",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/products/{product_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-products-product-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/project_statuses",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-project-statuses",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/project_statuses/{project_status_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-project-statuses-project-status-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/projects",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-projects",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/projects/{project_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-projects-project-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/projects/{project_id}/files",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-projects-project-id-files",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/projects/{project_id}/files/{file_id}/",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-projects-project-id-files-file-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/projects/{project_id}/project_files",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-projects-project-id-project-files",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/projects/{project_id}/project_files/{project_file_id}/",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-projects-project-id-project-files-project-file-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/projects/{project_id}/users/",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-projects-project-id-users",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/projects/{project_id}/users/{user_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-projects-project-id-users-user-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/stock_locations",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-stock-locations",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/stock_locations/{location_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-stock-locations-location-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/time_entries",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-time-entries",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/time_entries/{time_entry_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-time-entries-time-entry-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/time_entry_intervals",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-time-entry-intervals",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/time_entry_intervals/{time_entry_interval_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-time-entry-intervals-time-entry-interval-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/time_entry_types",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-time-entry-types",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/time_entry_types/{time_entry_type_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-time-entry-types-time-entry-type-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/time_entry_unit_types",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-time-entry-unit-types",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/time_entry_unit_types/{time_entry_unit_type_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-time-entry-unit-types-time-entry-unit-type-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/time_entry_value_types",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-time-entry-value-types",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/time_entry_value_types/{time_entry_value_type_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-time-entry-value-types-time-entry-value-type-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/users",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-users",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/users/{user_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-users-user-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/wall_comments",
			"method": "POST",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-wall-comments",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/wall_comments/{wall_comment_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-wall-comments-wall-comment-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/wall_posts",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-wall-posts",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/wall_posts/{wall_post_id}",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-wall-posts-wall-post-id",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		},
		{
			"group": "apacta-0-0-1",
			"url_pattern": "/api/v1/wall_posts/{wall_post_id}/wall_comments",
			"method": "GET",
			"encoding": "json",
			"host": [
				"https://app.apacta.com"
			],
			"concurrent_calls": 1,
			"extra_config": {
				"provider": "apacta.com",
				"description": "API for a tool to craftsmen used to register working hours, material usage and quality assurance.    \n# Endpoint\nThe endpoint `https://app.apacta.com/api/v1` should be used to communicate with the API. API access is only allowed with SSL encrypted connection (https).\n# Authentication\nURL query authentication with an API key is used, so appending `?api_key={api_key}` to the URL where `{api_key}` is found within Apacta settings is used for authentication\n# Pagination\nIf the endpoint returns a `pagination` object it means the endpoint supports pagination - currently it's only possible to change pages with `?page={page_number}` but implementing custom page sizes are on the road map.\n\n\n# Search/filter\nIs experimental but implemented in some cases - see the individual endpoints' docs for further explanation.\n# Ordering\nIs currently experimental, but on some endpoints it's implemented on URL querys so eg. to order Invoices by `invoice_number` appending `?sort=Invoices.invoice_number\u0026direction=desc` would sort the list descending by the value of `invoice_number`.\n# Associations\nIs currently implemented on an experimental basis where you can append eg. `?include=Contacts,Projects`  to the `/api/v1/invoices/` endpoint to embed `Contact` and `Project` objects directly.\n# Project Files\nCurrently project files can be retrieved from two endpoints. `/projects/{project_id}/files` handles files uploaded from wall posts or forms. `/projects/{project_id}/project_files` allows uploading and showing files, not belonging to specific form or wall post.\n# Errors/Exceptions\n## 422 (Validation)\nWrite something about how the `errors` object contains keys with the properties that failes validation like:\n```\n  {\n      \"success\": false,\n      \"data\": {\n          \"code\": 422,\n          \"url\": \"/api/v1/contacts?api_key=5523be3b-30ef-425d-8203-04df7caaa93a\",\n          \"message\": \"A validation error occurred\",\n          \"errorCount\": 1,\n          \"errors\": {\n              \"contact_types\": [ ## Property name that failed validation\n                  \"Contacts must have at least one contact type\" ## Message with further explanation\n              ]\n          }\n      }\n  }\n```\n## Code examples\nRunning examples of how to retrieve the 5 most recent forms registered and embed the details of the User that made the form, and eventual products contained in the form\n### Swift\n```\n  \n```\n### Java\n#### OkHttp\n```\n  OkHttpClient client = new OkHttpClient();\n  \n  Request request = new Request.Builder()\n    .url(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .get()\n    .addHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .addHeader(\"accept\", \"application/json\")\n    .build();\n  \n  Response response = client.newCall(request).execute();\n```\n#### Unirest\n```\n  HttpResponse\u003cString\u003e response = Unirest.get(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n    .header(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\")\n    .header(\"accept\", \"application/json\")\n    .asString();\n```\n### Javascript\n#### Native\n```\n  var data = null;\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"GET\", \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  xhr.setRequestHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  xhr.setRequestHeader(\"accept\", \"application/json\");\n  \n  xhr.send(data);\n```\n#### jQuery\n```\n  var settings = {\n    \"async\": true,\n    \"crossDomain\": true,\n    \"url\": \"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\",\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-auth-token\": \"{INSERT_YOUR_TOKEN}\",\n      \"accept\": \"application/json\",\n    }\n  }\n  \n  $.ajax(settings).done(function (response) {\n    console.log(response);\n  });\n```\n#### NodeJS (Request)\n```\n  var request = require(\"request\");\n\n  var options = { method: 'GET',\n    url: 'https://app.apacta.com/api/v1/forms',\n    qs: \n     { extended: 'true',\n       sort: 'Forms.created',\n       direction: 'DESC',\n       include: 'Products,CreatedBy',\n       limit: '5' },\n    headers: \n     { accept: 'application/json',\n       'x-auth-token': '{INSERT_YOUR_TOKEN}' } };\n  \n  request(options, function (error, response, body) {\n    if (error) throw new Error(error);\n  \n    console.log(body);\n  });\n\n```\n### Python 3\n```\n  import http.client\n  \n  conn = http.client.HTTPSConnection(\"app.apacta.com\")\n  \n  payload = \"\"\n  \n  headers = {\n      'x-auth-token': \"{INSERT_YOUR_TOKEN}\",\n      'accept': \"application/json\",\n      }\n  \n  conn.request(\"GET\", \"/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\", payload, headers)\n  \n  res = conn.getresponse()\n  data = res.read()\n  \n  print(data.decode(\"utf-8\"))\n```\n### C#\n#### RestSharp\n```\n  var client = new RestClient(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\");\n  var request = new RestRequest(Method.GET);\n  request.AddHeader(\"accept\", \"application/json\");\n  request.AddHeader(\"x-auth-token\", \"{INSERT_YOUR_TOKEN}\");\n  IRestResponse response = client.Execute(request);    \n```\n### Ruby\n```\n  require 'uri'\n  require 'net/http'\n  \n  url = URI(\"https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5\")\n  \n  http = Net::HTTP.new(url.host, url.port)\n  http.use_ssl = true\n  http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n  \n  request = Net::HTTP::Get.new(url)\n  request[\"x-auth-token\"] = '{INSERT_YOUR_TOKEN}'\n  request[\"accept\"] = 'application/json'\n  \n  response = http.request(request)\n  puts response.read_body\n```\n### PHP (HttpRequest)\n```\n  \u003c?php\n\n  $request = new HttpRequest();\n  $request-\u003esetUrl('https://app.apacta.com/api/v1/forms');\n  $request-\u003esetMethod(HTTP_METH_GET);\n  \n  $request-\u003esetQueryData(array(\n    'extended' =\u003e 'true',\n    'sort' =\u003e 'Forms.created',\n    'direction' =\u003e 'DESC',\n    'include' =\u003e 'Products,CreatedBy',\n    'limit' =\u003e '5'\n  ));\n  \n  $request-\u003esetHeaders(array(\n    'accept' =\u003e 'application/json',\n    'x-auth-token' =\u003e '{INSERT_YOUR_TOKEN}'\n  ));\n  \n  try {\n    $response = $request-\u003esend();\n  \n    echo $response-\u003egetBody();\n  } catch (HttpException $ex) {\n    echo $ex;\n  }\n```\n### Shell (cURL)\n```\n\n  $ curl --request GET --url 'https://app.apacta.com/api/v1/forms?extended=true\u0026sort=Forms.created\u0026direction=DESC\u0026include=Products%2CCreatedBy\u0026limit=5' --header 'accept: application/json' --header 'x-auth-token: {INSERT_YOUR_TOKEN}'\n  \n```",
				"version": "0.0.1",
				"slug": "apacta-0-0-1-api-v1-wall-posts-wall-post-id-wall-comments",
				"schemes": [
					"https"
				],
				"consumes": [
					"json"
				],
				"produces": [
					"json"
				],
				"hosts": [
					"https://app.apacta.com"
				],
				"topics": [
					"project-management",
					"time-management"
				]
			}
		}
	]
}