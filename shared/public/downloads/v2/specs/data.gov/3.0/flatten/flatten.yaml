basePath: /regulations/v3
externalDocs.url: http://regulationsgov.github.io/developers/
host: api.data.gov
info.description: Provides public users access to federal regulatory content.
info.title: Regulations.gov
info.version: "3.0"
info.x-logo.url: https://api.apis.guru/v2/cache/logo/http_regulationsgov.github.io_developers_static_img_logo.png
info.x-origin.length: 1
info.x-origin[0].converter.url: https://github.com/lucybot/api-spec-converter
info.x-origin[0].converter.version: 2.0.1
info.x-origin[0].format: swagger
info.x-origin[0].url: http://regulationsgov.github.io/developers/api-docs.json
info.x-origin[0].version: "1.2"
info.x-preferred: true
info.x-providerName: data.gov
paths./docket.{response_format}.get.operationId: docket
paths./docket.{response_format}.get.parameters.length: 2
paths./docket.{response_format}.get.parameters[0].default: json
paths./docket.{response_format}.get.parameters[0].description: Format
paths./docket.{response_format}.get.parameters[0].enum.length: 2
paths./docket.{response_format}.get.parameters[0].enum[0]: json
paths./docket.{response_format}.get.parameters[0].enum[1]: xml
paths./docket.{response_format}.get.parameters[0].in: path
paths./docket.{response_format}.get.parameters[0].name: response_format
paths./docket.{response_format}.get.parameters[0].required: true
paths./docket.{response_format}.get.parameters[0].type: string
paths./docket.{response_format}.get.parameters[1].default: EPA-HQ-OAR-2011-0028
paths./docket.{response_format}.get.parameters[1].description: Docket ID
paths./docket.{response_format}.get.parameters[1].in: query
paths./docket.{response_format}.get.parameters[1].name: docketId
paths./docket.{response_format}.get.parameters[1].required: true
paths./docket.{response_format}.get.parameters[1].type: string
paths./docket.{response_format}.get.produces.length: 2
paths./docket.{response_format}.get.produces[0]: application/json
paths./docket.{response_format}.get.produces[1]: applicaiton/xml
paths./docket.{response_format}.get.responses.200.description: No response was specified
paths./docket.{response_format}.get.responses.400.description: Bad request. The content
  is either empty or has been withdrawn.
paths./docket.{response_format}.get.responses.404.description: File not found.
paths./docket.{response_format}.get.summary: Returns Docket information
paths./docket.{response_format}.get.tags.length: 1
paths./docket.{response_format}.get.tags[0]: dockets
paths./document.{response_format}.get.operationId: document
paths./document.{response_format}.get.parameters.length: 3
paths./document.{response_format}.get.parameters[0].default: json
paths./document.{response_format}.get.parameters[0].description: Format
paths./document.{response_format}.get.parameters[0].enum.length: 2
paths./document.{response_format}.get.parameters[0].enum[0]: json
paths./document.{response_format}.get.parameters[0].enum[1]: xml
paths./document.{response_format}.get.parameters[0].in: path
paths./document.{response_format}.get.parameters[0].name: response_format
paths./document.{response_format}.get.parameters[0].required: true
paths./document.{response_format}.get.parameters[0].type: string
paths./document.{response_format}.get.parameters[1].default: EPA-HQ-OAR-2011-0028-0108
paths./document.{response_format}.get.parameters[1].description: FDMS Document ID
paths./document.{response_format}.get.parameters[1].in: query
paths./document.{response_format}.get.parameters[1].name: documentId
paths./document.{response_format}.get.parameters[1].required: false
paths./document.{response_format}.get.parameters[1].type: string
paths./document.{response_format}.get.parameters[2].description: Federal Register
  Document Number
paths./document.{response_format}.get.parameters[2].in: query
paths./document.{response_format}.get.parameters[2].name: federalRegisterNumber
paths./document.{response_format}.get.parameters[2].required: false
paths./document.{response_format}.get.parameters[2].type: string
paths./document.{response_format}.get.produces.length: 1
paths./document.{response_format}.get.produces[0]: '*/*'
paths./document.{response_format}.get.responses.200.description: No response was specified
paths./document.{response_format}.get.responses.400.description: Bad request. The
  document is only available for comment via Regulations.gov.
paths./document.{response_format}.get.responses.404.description: File not found.
paths./document.{response_format}.get.summary: Returns Document information
paths./document.{response_format}.get.tags.length: 1
paths./document.{response_format}.get.tags[0]: documents
paths./documents.{response_format}.get.description: This API allows users to build
  a query based on any of the parameters below.  If you have trouble building queries,
  you may wish to try them through the <a href="http://www.regulations.gov/#!advancedSearch">Advanced
  Search</a> page on the Regulations.gov website.
paths./documents.{response_format}.get.operationId: documents
paths./documents.{response_format}.get.parameters.length: 24
paths./documents.{response_format}.get.parameters[0].default: json
paths./documents.{response_format}.get.parameters[0].description: Format
paths./documents.{response_format}.get.parameters[0].enum.length: 2
paths./documents.{response_format}.get.parameters[0].enum[0]: json
paths./documents.{response_format}.get.parameters[0].enum[1]: xml
paths./documents.{response_format}.get.parameters[0].in: path
paths./documents.{response_format}.get.parameters[0].name: response_format
paths./documents.{response_format}.get.parameters[0].required: true
paths./documents.{response_format}.get.parameters[0].type: string
paths./documents.{response_format}.get.parameters[1].description: 'Counts Only: <ul><li>1
  (will return only the document count for a search query)</li><li>0 (will return
  documents as well)</li></ul>'
paths./documents.{response_format}.get.parameters[1].enum.length: 2
paths./documents.{response_format}.get.parameters[1].enum[0]: 0
paths./documents.{response_format}.get.parameters[1].enum[1]: 1
paths./documents.{response_format}.get.parameters[1].in: query
paths./documents.{response_format}.get.parameters[1].name: countsOnly
paths./documents.{response_format}.get.parameters[1].required: false
paths./documents.{response_format}.get.parameters[1].type: integer
paths./documents.{response_format}.get.parameters[2].description: 'Encoded: <ul><li>1
  (will accept Regulations.gov style encoded parameters)</li><li>0 (will not accept
  such encoded parameters)</li></ul>'
paths./documents.{response_format}.get.parameters[2].enum.length: 2
paths./documents.{response_format}.get.parameters[2].enum[0]: 0
paths./documents.{response_format}.get.parameters[2].enum[1]: 1
paths./documents.{response_format}.get.parameters[2].in: query
paths./documents.{response_format}.get.parameters[2].name: encoded
paths./documents.{response_format}.get.parameters[2].required: false
paths./documents.{response_format}.get.parameters[2].type: integer
paths./documents.{response_format}.get.parameters[3].description: Keyword(s)
paths./documents.{response_format}.get.parameters[3].in: query
paths./documents.{response_format}.get.parameters[3].name: s
paths./documents.{response_format}.get.parameters[3].required: false
paths./documents.{response_format}.get.parameters[3].type: string
paths./documents.{response_format}.get.parameters[4].description: 'Document Type:
  <ul><li>N: Notice</li><li>PR: Proposed Rule</li><li>FR: Rule</li><li>O: Other</li><li>SR:
  Supporting & Related Material</li><li>PS: Public Submission</li></ul>'
paths./documents.{response_format}.get.parameters[4].enum.length: 6
paths./documents.{response_format}.get.parameters[4].enum[0]: "N"
paths./documents.{response_format}.get.parameters[4].enum[1]: PR
paths./documents.{response_format}.get.parameters[4].enum[2]: FR
paths./documents.{response_format}.get.parameters[4].enum[3]: O
paths./documents.{response_format}.get.parameters[4].enum[4]: SR
paths./documents.{response_format}.get.parameters[4].enum[5]: PS
paths./documents.{response_format}.get.parameters[4].in: query
paths./documents.{response_format}.get.parameters[4].name: dct
paths./documents.{response_format}.get.parameters[4].required: false
paths./documents.{response_format}.get.parameters[4].type: string
paths./documents.{response_format}.get.parameters[5].description: Valid Docket ID
  (ex. SEC-2012-0044)
paths./documents.{response_format}.get.parameters[5].in: query
paths./documents.{response_format}.get.parameters[5].name: dktid
paths./documents.{response_format}.get.parameters[5].required: false
paths./documents.{response_format}.get.parameters[5].type: string
paths./documents.{response_format}.get.parameters[6].description: 'Docket Type: <ul><li>R:
  Rulemaking</li><li>N: Nonrulemaking</li></ul><p>A Docket Type is either Rulemaking
  or Nonrulemaking. A Rulemaking docket includes the type of regulation that establishes
  a rule. While a Non-Rulemaking docket does not include a rule.</p>'
paths./documents.{response_format}.get.parameters[6].enum.length: 2
paths./documents.{response_format}.get.parameters[6].enum[0]: "N"
paths./documents.{response_format}.get.parameters[6].enum[1]: R
paths./documents.{response_format}.get.parameters[6].in: query
paths./documents.{response_format}.get.parameters[6].name: dkt
paths./documents.{response_format}.get.parameters[6].required: false
paths./documents.{response_format}.get.parameters[6].type: string
paths./documents.{response_format}.get.parameters[7].description: 'Comment Period:
  <ul><li>O: Open</li><li>C: Closed</li></ul>'
paths./documents.{response_format}.get.parameters[7].enum.length: 2
paths./documents.{response_format}.get.parameters[7].enum[0]: O
paths./documents.{response_format}.get.parameters[7].enum[1]: C
paths./documents.{response_format}.get.parameters[7].in: query
paths./documents.{response_format}.get.parameters[7].name: cp
paths./documents.{response_format}.get.parameters[7].required: false
paths./documents.{response_format}.get.parameters[7].type: string
paths./documents.{response_format}.get.parameters[8].description: 'Federal Agency:
  List of accepted Federal Agency values. This field allows multiple values. Ex. a=FMCSA%252BEPA%252BFDA'
paths./documents.{response_format}.get.parameters[8].in: query
paths./documents.{response_format}.get.parameters[8].name: a
paths./documents.{response_format}.get.parameters[8].required: false
paths./documents.{response_format}.get.parameters[8].type: string
paths./documents.{response_format}.get.parameters[9].description: Results Per Page
  10, 25, 100, 500, 1,000.  Results per page may not exceed 1,000.
paths./documents.{response_format}.get.parameters[9].enum.length: 5
paths./documents.{response_format}.get.parameters[9].enum[0]: "10"
paths./documents.{response_format}.get.parameters[9].enum[1]: "25"
paths./documents.{response_format}.get.parameters[9].enum[2]: "100"
paths./documents.{response_format}.get.parameters[9].enum[3]: "500"
paths./documents.{response_format}.get.parameters[9].enum[4]: "1000"
paths./documents.{response_format}.get.parameters[9].in: query
paths./documents.{response_format}.get.parameters[9].name: rpp
paths./documents.{response_format}.get.parameters[9].required: false
paths./documents.{response_format}.get.parameters[9].type: string
paths./documents.{response_format}.get.parameters[10].description: 'Enter the page
  offset (always starts with 0). This is used in conjunction with results per page
  to provide large data sets. For example, if a search produces 82 results and the
  result per page is set to 25, this will generate 4 pages. 3 pages will have 25 results
  and the last page will have 7 results. Page offset values for each page will be:
  <pre>Page 1: po=0 Page 2: po=25 Page 3: po=50 Page 4: po=75</pre> The total number
  of pages is [total results/results per page] and page offset for page X is [X-1
  * results per page]'
paths./documents.{response_format}.get.parameters[10].in: query
paths./documents.{response_format}.get.parameters[10].name: po
paths./documents.{response_format}.get.parameters[10].required: false
paths./documents.{response_format}.get.parameters[10].type: integer
paths./documents.{response_format}.get.parameters[11].description: 'Comment Period
  Closing Soon: <ul><li>0 (closing today)</li><li>3 (closing within 3 days)</li><li>15
  (closing within 15 days)</li><li>30 (closing within 30 days)</li><li>90 (closing
  within 90 days)</li></ul>'
paths./documents.{response_format}.get.parameters[11].enum.length: 5
paths./documents.{response_format}.get.parameters[11].enum[0]: 0
paths./documents.{response_format}.get.parameters[11].enum[1]: 3
paths./documents.{response_format}.get.parameters[11].enum[2]: 15
paths./documents.{response_format}.get.parameters[11].enum[3]: 30
paths./documents.{response_format}.get.parameters[11].enum[4]: 90
paths./documents.{response_format}.get.parameters[11].in: query
paths./documents.{response_format}.get.parameters[11].name: cs
paths./documents.{response_format}.get.parameters[11].required: false
paths./documents.{response_format}.get.parameters[11].type: integer
paths./documents.{response_format}.get.parameters[12].description: 'Newly Posted:
  <ul><li>0 (posted today)</li><li>3 (posted within last 3 days)</li><li>15 (posted
  within last 15 days)</li><li>30 (posted within last 30 days)</li><li>90 (posted
  within last 90 days)</li></ul>  For periods of time beyond 90-days, please use a
  date range with the Posted Date parameter.'
paths./documents.{response_format}.get.parameters[12].enum.length: 5
paths./documents.{response_format}.get.parameters[12].enum[0]: 0
paths./documents.{response_format}.get.parameters[12].enum[1]: 3
paths./documents.{response_format}.get.parameters[12].enum[2]: 15
paths./documents.{response_format}.get.parameters[12].enum[3]: 30
paths./documents.{response_format}.get.parameters[12].enum[4]: 90
paths./documents.{response_format}.get.parameters[12].in: query
paths./documents.{response_format}.get.parameters[12].name: np
paths./documents.{response_format}.get.parameters[12].required: false
paths./documents.{response_format}.get.parameters[12].type: integer
paths./documents.{response_format}.get.parameters[13].description: 'Comment Period
  Start Date: Enter a date in the form of MM/DD/YY. Note: If the Comment Period End
  Date is also provided, then ensure the Comment Period Start date is earlier.'
paths./documents.{response_format}.get.parameters[13].format: date
paths./documents.{response_format}.get.parameters[13].in: query
paths./documents.{response_format}.get.parameters[13].name: cmsd
paths./documents.{response_format}.get.parameters[13].required: false
paths./documents.{response_format}.get.parameters[13].type: string
paths./documents.{response_format}.get.parameters[14].description: 'Comment Period
  End Date: Enter a date in the form of MM/DD/YY. Note: If the Comment Period Start
  Date is also provided, then ensure the Comment Period End date is after.<br/>* Comment
  Period Start and End Dates are mutually exclusive with the ''closing soon'' parameter.
  If both are provided, ''closing soon'' will be ignored.'
paths./documents.{response_format}.get.parameters[14].format: date
paths./documents.{response_format}.get.parameters[14].in: query
paths./documents.{response_format}.get.parameters[14].name: cmd
paths./documents.{response_format}.get.parameters[14].required: false
paths./documents.{response_format}.get.parameters[14].type: string
paths./documents.{response_format}.get.parameters[15].description: 'Creation Date:
  Enter a date in the form of MM/DD/YY. Accepts a single date or a date range. Ex.
  <code>crd=11/06/13-03/06/14</code>'
paths./documents.{response_format}.get.parameters[15].format: date
paths./documents.{response_format}.get.parameters[15].in: query
paths./documents.{response_format}.get.parameters[15].name: crd
paths./documents.{response_format}.get.parameters[15].required: false
paths./documents.{response_format}.get.parameters[15].type: string
paths./documents.{response_format}.get.parameters[16].description: 'Received Date:
  Enter a date in the form of MM/DD/YY. Accepts a single date or a date range. Ex.
  <code>rd=11/06/13-03/06/14</code>'
paths./documents.{response_format}.get.parameters[16].format: date
paths./documents.{response_format}.get.parameters[16].in: query
paths./documents.{response_format}.get.parameters[16].name: rd
paths./documents.{response_format}.get.parameters[16].required: false
paths./documents.{response_format}.get.parameters[16].type: string
paths./documents.{response_format}.get.parameters[17].description: 'Posted Date: Enter
  a date in the form of MM/DD/YY. Accepts a single date or a date range. Ex. <code>pd=11/06/13-03/06/14</code>'
paths./documents.{response_format}.get.parameters[17].format: date
paths./documents.{response_format}.get.parameters[17].in: query
paths./documents.{response_format}.get.parameters[17].name: pd
paths./documents.{response_format}.get.parameters[17].required: false
paths./documents.{response_format}.get.parameters[17].type: string
paths./documents.{response_format}.get.parameters[18].description: 'Document Category:
  <ul><li>AD (Aerospace and Transportation)</li> <li>AEP (Agriculture, Environment,
  and Public Lands)</li> <li>BFS (Banking and Financial)</li> <li>CT (Commerce and
  International)</li> <li>LES (Defense, Law Enforcement, and Security)</li> <li>EELS
  (Education, Labor, Presidential, and Government Services)</li> <li>EUMM (Energy,
  Natural Resources, and Utilities)</li> <li>HCFP (Food Safety, Health, and Pharmaceutical)</li>
  <li>PRE (Housing, Development, and Real Estate)</li> <li>ITT (Technology and Telecommunications)</li></ul>'
paths./documents.{response_format}.get.parameters[18].enum.length: 10
paths./documents.{response_format}.get.parameters[18].enum[0]: AD
paths./documents.{response_format}.get.parameters[18].enum[1]: AEP
paths./documents.{response_format}.get.parameters[18].enum[2]: BFS
paths./documents.{response_format}.get.parameters[18].enum[3]: CT
paths./documents.{response_format}.get.parameters[18].enum[4]: LES
paths./documents.{response_format}.get.parameters[18].enum[5]: EELS
paths./documents.{response_format}.get.parameters[18].enum[6]: EUMM
paths./documents.{response_format}.get.parameters[18].enum[7]: HCFP
paths./documents.{response_format}.get.parameters[18].enum[8]: PRE
paths./documents.{response_format}.get.parameters[18].enum[9]: ITT
paths./documents.{response_format}.get.parameters[18].in: query
paths./documents.{response_format}.get.parameters[18].name: cat
paths./documents.{response_format}.get.parameters[18].required: false
paths./documents.{response_format}.get.parameters[18].type: string
paths./documents.{response_format}.get.parameters[19].description: 'Sort By: <ul><li>docketId
  (Docket ID)</li><li>docId (Document ID)</li><li>title (Title)</li><li>postedDate
  (Posted Date)</li><li>agency (Agency)</li><li>documentType (Document Type)</li><li>submitterName
  (Submitter Name)</li><li>organization (Organization)</li></ul> Sort Order is REQUIRED
  if this parameter is included.'
paths./documents.{response_format}.get.parameters[19].enum.length: 8
paths./documents.{response_format}.get.parameters[19].enum[0]: docketId
paths./documents.{response_format}.get.parameters[19].enum[1]: docId
paths./documents.{response_format}.get.parameters[19].enum[2]: title
paths./documents.{response_format}.get.parameters[19].enum[3]: postedDate
paths./documents.{response_format}.get.parameters[19].enum[4]: agency
paths./documents.{response_format}.get.parameters[19].enum[5]: documentType
paths./documents.{response_format}.get.parameters[19].enum[6]: submitterName
paths./documents.{response_format}.get.parameters[19].enum[7]: organization
paths./documents.{response_format}.get.parameters[19].in: query
paths./documents.{response_format}.get.parameters[19].name: sb
paths./documents.{response_format}.get.parameters[19].required: false
paths./documents.{response_format}.get.parameters[19].type: string
paths./documents.{response_format}.get.parameters[20].description: 'Sort Order: <ul><li>ASC:
  Ascending</li><li>DESC: Descending</li></ul>'
paths./documents.{response_format}.get.parameters[20].enum.length: 2
paths./documents.{response_format}.get.parameters[20].enum[0]: ASC
paths./documents.{response_format}.get.parameters[20].enum[1]: DESC
paths./documents.{response_format}.get.parameters[20].in: query
paths./documents.{response_format}.get.parameters[20].name: so
paths./documents.{response_format}.get.parameters[20].required: false
paths./documents.{response_format}.get.parameters[20].type: string
paths./documents.{response_format}.get.parameters[21].description: 'Docket Subtype:
  Only one docket subtype at a time may be selected. One or more agency values must
  be part of the request. Only values valid for the selected agency will be returned.'
paths./documents.{response_format}.get.parameters[21].in: query
paths./documents.{response_format}.get.parameters[21].name: dktst
paths./documents.{response_format}.get.parameters[21].required: false
paths./documents.{response_format}.get.parameters[21].type: string
paths./documents.{response_format}.get.parameters[22].description: 'Docket Sub-subtype:
  Only one docket sub-subtype at a time may be selected. One or more agency values
  must be part of the request. Only values valid for the selected agency will be returned.'
paths./documents.{response_format}.get.parameters[22].in: query
paths./documents.{response_format}.get.parameters[22].name: dktst2
paths./documents.{response_format}.get.parameters[22].required: false
paths./documents.{response_format}.get.parameters[22].type: string
paths./documents.{response_format}.get.parameters[23].description: 'Document Subtype:
  Single or multiple document subtypes may be included.  Multiple values should be
  passed as follows: <code>docst=%20Certificate+of+Service%252BCorrespondence</code>'
paths./documents.{response_format}.get.parameters[23].in: query
paths./documents.{response_format}.get.parameters[23].name: docst
paths./documents.{response_format}.get.parameters[23].required: false
paths./documents.{response_format}.get.parameters[23].type: string
paths./documents.{response_format}.get.produces.length: 1
paths./documents.{response_format}.get.produces[0]: '*/*'
paths./documents.{response_format}.get.responses.200.description: No response was
  specified
paths./documents.{response_format}.get.responses.400.description: Bad request. The
  document is only available for comment via Regulations.gov.
paths./documents.{response_format}.get.responses.404.description: File not found.
paths./documents.{response_format}.get.summary: Search for Documents
paths./documents.{response_format}.get.tags.length: 1
paths./documents.{response_format}.get.tags[0]: documents
schemes.length: 1
schemes[0]: https
security.length: 1
security[0].api_key.length: 0
securityDefinitions.api_key.description: API Key
securityDefinitions.api_key.in: query
securityDefinitions.api_key.name: api_key
securityDefinitions.api_key.type: apiKey
swagger: "2.0"
tags.length: 2
tags[0].description: Operations about Dockets
tags[0].name: dockets
tags[1].description: Operations about Documents
tags[1].name: documents
