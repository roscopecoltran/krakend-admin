{
  "swagger": "2.0",
  "schemes": [
    "https"
  ],
  "host": "connect.squareup.com",
  "info": {
    "contact": {
      "email": "developers@squareup.com",
      "name": "Square Developer Platform",
      "url": "https://squareup.com/developers"
    },
    "description": "Client library for accessing the Square Connect APIs",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "termsOfService": "https://connect.squareup.com/tos",
    "title": "Square Connect",
    "version": "2.0",
    "x-apisguru-categories": [
      "payment"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/http_square.github.io_images_logo.png"
    },
    "x-origin": [
      {
        "format": "swagger",
        "url": "https://raw.githubusercontent.com/square/connect-api-specification/master/api.json",
        "version": "2.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "squareup.com"
  },
  "externalDocs": {
    "description": "Read the official documentation here:",
    "url": "https://docs.connect.squareup.com/"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "oauth2": {
      "authorizationUrl": "https://connect.squareup.com/oauth2/authorize",
      "flow": "accessCode",
      "scopes": {
        "BANK_ACCOUNTS_READ": "GET endpoints related to a merchant's bank accounts",
        "CUSTOMERS_READ": " GET endpoints related to customer management",
        "CUSTOMERS_WRITE": "POST, PUT, and DELETE endpoints related to customer management",
        "EMPLOYEES_READ": "GET endpoints related to employee management",
        "EMPLOYEES_WRITE": "POST, PUT, and DELETE endpoints related to employee management",
        "ITEMS_READ": "GET endpoints related to a merchant's item library",
        "ITEMS_WRITE": "POST, PUT, and DELETE endpoints related to a merchant's item library",
        "MERCHANT_PROFILE_READ": "GET endpoints related to a merchant's business and location entities. Almost all Connect API applications need this permission in order to obtain a merchant's location IDs",
        "ORDERS_READ": "GET endpoints related to a merchant's orders",
        "ORDERS_WRITE": "POST, PUT, and DELETE endpoints related to a merchant's orders",
        "PAYMENTS_READ": "GET endpoints related to transactions and refunds",
        "PAYMENTS_WRITE": "POST, PUT, and DELETE endpoints related to transactions and refunds. E-commerce applications must request this permission",
        "SETTLEMENTS_READ": "GET endpoints related to settlements (deposits)",
        "TIMECARDS_READ": "GET endpoints related to employee timecards",
        "TIMECARDS_WRITE": "POST, PUT, and DELETE endpoints related to employee timecards"
      },
      "tokenUrl": "https://connect.squareup.com/oauth2/token",
      "type": "oauth2"
    }
  },
  "paths": {
    "/v1/me": {
      "get": {
        "deprecated": true,
        "description": "Get a business's information.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-merchantid"
        },
        "operationId": "RetrieveBusiness",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Merchant"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "MERCHANT_PROFILE_READ"
            ]
          }
        ],
        "summary": "Get a business's information.",
        "tags": [
          "V1Locations"
        ]
      }
    },
    "/v1/me/employees": {
      "get": {
        "deprecated": false,
        "description": "Provides summary information for all of a business's employees.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-employees"
        },
        "operationId": "ListEmployees",
        "parameters": [
          {
            "description": "The order in which employees are listed in the response, based on their created_at field.      Default value: ASC ",
            "enum": [
              "ASC",
              "DESC"
            ],
            "in": "query",
            "name": "order",
            "type": "string"
          },
          {
            "description": "If filtering results by their updated_at field, the beginning of the requested reporting period, in ISO 8601 format",
            "in": "query",
            "name": "begin_updated_at",
            "required": false,
            "type": "string"
          },
          {
            "description": "If filtering results by there updated_at field, the end of the requested reporting period, in ISO 8601 format.",
            "in": "query",
            "name": "end_updated_at",
            "required": false,
            "type": "string"
          },
          {
            "description": "If filtering results by their created_at field, the beginning of the requested reporting period, in ISO 8601 format.",
            "in": "query",
            "name": "begin_created_at",
            "required": false,
            "type": "string"
          },
          {
            "description": "If filtering results by their created_at field, the end of the requested reporting period, in ISO 8601 format.",
            "in": "query",
            "name": "end_created_at",
            "required": false,
            "type": "string"
          },
          {
            "description": "If provided, the endpoint returns only employee entities with the specified status (ACTIVE or INACTIVE).",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ],
            "in": "query",
            "name": "status",
            "type": "string"
          },
          {
            "description": "If provided, the endpoint returns only employee entities with the specified external_id.",
            "in": "query",
            "name": "external_id",
            "type": "string"
          },
          {
            "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200.",
            "in": "query",
            "maximum": 200,
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "in": "query",
            "name": "batch_token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Link": {
                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/v1Employee"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "summary": "Provides summary information for all of a business's employees.",
        "tags": [
          "V1Employees"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates an employee for a business.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#post-employees"
        },
        "operationId": "CreateEmployee",
        "parameters": [
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Employee"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Employee"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_WRITE"
            ]
          }
        ],
        "summary": "Creates an employee for a business.",
        "tags": [
          "V1Employees"
        ]
      }
    },
    "/v1/me/employees/{employee_id}": {
      "get": {
        "deprecated": false,
        "description": "Provides the details for a single employee.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-employeeid"
        },
        "operationId": "RetrieveEmployee",
        "parameters": [
          {
            "description": "The employee's ID.",
            "in": "path",
            "name": "employee_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Employee"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "summary": "Provides the details for a single employee.",
        "tags": [
          "V1Employees"
        ]
      },
      "put": {
        "deprecated": false,
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#put-employeeid"
        },
        "operationId": "UpdateEmployee",
        "parameters": [
          {
            "description": "The ID of the role to modify.",
            "in": "path",
            "name": "employee_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Employee"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Employee"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_WRITE"
            ]
          }
        ],
        "summary": "V1 UpdateEmployee",
        "tags": [
          "V1Employees"
        ]
      }
    },
    "/v1/me/locations": {
      "get": {
        "deprecated": true,
        "description": "Provides details for a business's locations, including their IDs.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-locations"
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "items": {
                "$ref": "#/definitions/v1Merchant"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "MERCHANT_PROFILE_READ"
            ]
          }
        ],
        "summary": "Provides details for a business's locations, including their IDs.",
        "tags": [
          "V1Locations"
        ]
      }
    },
    "/v1/me/roles": {
      "get": {
        "deprecated": false,
        "description": "Provides summary information for all of a business's employee roles.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-roles"
        },
        "operationId": "ListEmployeeRoles",
        "parameters": [
          {
            "description": "The order in which employees are listed in the response, based on their created_at field.Default value: ASC ",
            "enum": [
              "ASC",
              "DESC"
            ],
            "in": "query",
            "name": "order",
            "type": "string"
          },
          {
            "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200.",
            "in": "query",
            "maximum": 200,
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "in": "query",
            "name": "batch_token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Link": {
                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link.",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/v1EmployeeRole"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "summary": "Provides summary information for all of a business's employee roles.",
        "tags": [
          "V1Employees"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates an employee role you can then assign to employees.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#post-roles"
        },
        "operationId": "CreateEmployeeRole",
        "parameters": [
          {
            "description": "An EmployeeRole object with a name and permissions, and an optional owner flag.",
            "in": "body",
            "name": "EmployeeRole",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1EmployeeRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1EmployeeRole"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_WRITE"
            ]
          }
        ],
        "summary": "Creates an employee role you can then assign to employees.",
        "tags": [
          "V1Employees"
        ]
      }
    },
    "/v1/me/roles/{role_id}": {
      "get": {
        "deprecated": false,
        "description": "Provides the details for a single employee role.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-roleid"
        },
        "operationId": "RetrieveEmployeeRole",
        "parameters": [
          {
            "description": "The role's ID.",
            "in": "path",
            "name": "role_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1EmployeeRole"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_READ"
            ]
          }
        ],
        "summary": "Provides the details for a single employee role.",
        "tags": [
          "V1Employees"
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Modifies the details of an employee role.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#put-roleid"
        },
        "operationId": "UpdateEmployeeRole",
        "parameters": [
          {
            "description": "The ID of the role to modify.",
            "in": "path",
            "name": "role_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1EmployeeRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1EmployeeRole"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "EMPLOYEES_WRITE"
            ]
          }
        ],
        "summary": "Modifies the details of an employee role.",
        "tags": [
          "V1Employees"
        ]
      }
    },
    "/v1/me/timecards": {
      "get": {
        "deprecated": false,
        "description": "Provides summary information for all of a business's employee timecards.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-timecards"
        },
        "operationId": "ListTimecards",
        "parameters": [
          {
            "description": "The order in which timecards are listed in the response, based on their created_at field.",
            "enum": [
              "ASC",
              "DESC"
            ],
            "in": "query",
            "name": "order",
            "required": false,
            "type": "string"
          },
          {
            "description": "If provided, the endpoint returns only timecards for the employee with the specified ID.",
            "in": "query",
            "name": "employee_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "If filtering results by their clockin_time field, the beginning of the requested reporting period, in ISO 8601 format.",
            "in": "query",
            "name": "begin_clockin_time",
            "required": false,
            "type": "string"
          },
          {
            "description": "If filtering results by their clockin_time field, the end of the requested reporting period, in ISO 8601 format.",
            "in": "query",
            "name": "end_clockin_time",
            "required": false,
            "type": "string"
          },
          {
            "description": "If filtering results by their clockout_time field, the beginning of the requested reporting period, in ISO 8601 format.",
            "in": "query",
            "name": "begin_clockout_time",
            "required": false,
            "type": "string"
          },
          {
            "description": "If filtering results by their clockout_time field, the end of the requested reporting period, in ISO 8601 format.",
            "in": "query",
            "name": "end_clockout_time",
            "required": false,
            "type": "string"
          },
          {
            "description": "If filtering results by their updated_at field, the beginning of the requested reporting period, in ISO 8601 format.",
            "in": "query",
            "name": "begin_updated_at",
            "required": false,
            "type": "string"
          },
          {
            "description": "If filtering results by their updated_at field, the end of the requested reporting period, in ISO 8601 format.",
            "in": "query",
            "name": "end_updated_at",
            "required": false,
            "type": "string"
          },
          {
            "description": "If true, only deleted timecards are returned. If false, only valid timecards are returned.If you don't provide this parameter, both valid and deleted timecards are returned.",
            "in": "query",
            "name": "deleted",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200.",
            "in": "query",
            "maximum": 200,
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "in": "query",
            "name": "batch_token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Link": {
                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/v1Timecard"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "TIMECARDS_READ"
            ]
          }
        ],
        "summary": "Provides summary information for all of a business's employee timecards.",
        "tags": [
          "V1Employees"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates a timecard for an employee. Each timecard corresponds to a single shift.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#post-timecards"
        },
        "operationId": "CreateTimecard",
        "parameters": [
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Timecard"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Timecard"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "TIMECARDS_WRITE"
            ]
          }
        ],
        "summary": "Creates a timecard for an employee. Each timecard corresponds to a single shift.",
        "tags": [
          "V1Employees"
        ]
      }
    },
    "/v1/me/timecards/{timecard_id}": {
      "delete": {
        "deprecated": false,
        "description": "Deletes a timecard. Deleted timecards are still accessible from Connect API endpoints, but the value of their deleted field is set to true. See Handling deleted timecards for more information.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-timecardid"
        },
        "operationId": "DeleteTimecard",
        "parameters": [
          {
            "description": "The ID of the timecard to delete.",
            "in": "path",
            "name": "timecard_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "type": "object"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "TIMECARDS_WRITE"
            ]
          }
        ],
        "summary": "Deletes a timecard. Deleted timecards are still accessible from Connect API endpoints, but the value of their deleted field is set to true. See Handling deleted timecards for more information.",
        "tags": [
          "V1Employees"
        ]
      },
      "get": {
        "deprecated": false,
        "description": "Provides the details for a single timecard.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-timecardid"
        },
        "operationId": "RetrieveTimecard",
        "parameters": [
          {
            "description": "The timecard's ID.",
            "in": "path",
            "name": "timecard_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Timecard"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "TIMECARDS_READ"
            ]
          }
        ],
        "summary": "Provides the details for a single timecard.",
        "tags": [
          "V1Employees"
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Modifies a timecard's details. This creates an API_EDIT event for the timecard. You can view a timecard's event history with the List Timecard Events endpoint.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#put-timecardid"
        },
        "operationId": "UpdateTimecard",
        "parameters": [
          {
            "description": "TThe ID of the timecard to modify.",
            "in": "path",
            "name": "timecard_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Timecard"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Timecard"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "TIMECARDS_WRITE"
            ]
          }
        ],
        "summary": "Modifies a timecard's details. This creates an API_EDIT event for the timecard. You can view a timecard's event history with the List Timecard Events endpoint.",
        "tags": [
          "V1Employees"
        ]
      }
    },
    "/v1/me/timecards/{timecard_id}/events": {
      "get": {
        "deprecated": false,
        "description": "Provides summary information for all events associated with a particular timecard.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-events"
        },
        "operationId": "ListTimecardEvents",
        "parameters": [
          {
            "description": "The ID of the timecard to list events for.",
            "in": "path",
            "name": "timecard_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Link": {
                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/v1TimecardEvent"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "TIMECARDS_READ"
            ]
          }
        ],
        "summary": "Provides summary information for all events associated with a particular timecard.",
        "tags": [
          "V1Employees"
        ]
      }
    },
    "/v1/{location_id}/bank-accounts": {
      "get": {
        "deprecated": false,
        "description": "Provides non-confidential details for all of a location's associated bank accounts. This endpoint does not provide full bank account numbers, and there is no way to obtain a full bank account number with the Connect API.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-bankaccounts"
        },
        "operationId": "ListBankAccounts",
        "parameters": [
          {
            "description": "The ID of the location to list bank accounts for.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "items": {
                "$ref": "#/definitions/v1BankAccount"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "BANK_ACCOUNTS_READ"
            ]
          }
        ],
        "summary": "Provides non-confidential details for all of a location's associated bank accounts. This endpoint does not provide full bank account numbers, and there is no way to obtain a full bank account number with the Connect API.",
        "tags": [
          "V1Transactions"
        ]
      }
    },
    "/v1/{location_id}/bank-accounts/{bank_account_id}": {
      "get": {
        "deprecated": false,
        "description": "Provides non-confidential details for a merchant's associated bank account. This endpoint does not provide full bank account numbers, and there is no way to obtain a full bank account number with the Connect API.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-bankaccountid"
        },
        "operationId": "RetrieveBankAccount",
        "parameters": [
          {
            "description": "The ID of the bank account's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The bank account's Square-issued ID. You obtain this value from Settlement objects returned.",
            "in": "path",
            "name": "bank_account_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1BankAccount"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "BANK_ACCOUNTS_READ"
            ]
          }
        ],
        "summary": "Provides non-confidential details for a merchant's associated bank account. This endpoint does not provide full bank account numbers, and there is no way to obtain a full bank account number with the Connect API.",
        "tags": [
          "V1Transactions"
        ]
      }
    },
    "/v1/{location_id}/cash-drawer-shifts": {
      "get": {
        "deprecated": false,
        "description": "Provides the details for all of a location's cash drawer shifts during a date range. The date range you specify cannot exceed 90 days.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-cashdrawershifts"
        },
        "operationId": "ListCashDrawerShifts",
        "parameters": [
          {
            "description": "The ID of the location to list cash drawer shifts for.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The order in which cash drawer shifts are listed in the response, based on their created_at field. Default value: ASC",
            "enum": [
              "ASC",
              "DESC"
            ],
            "in": "query",
            "name": "order",
            "required": false,
            "type": "string"
          },
          {
            "description": "The beginning of the requested reporting period, in ISO 8601 format. Default value: The current time minus 90 days.",
            "in": "query",
            "name": "begin_time",
            "required": false,
            "type": "string"
          },
          {
            "description": "The beginning of the requested reporting period, in ISO 8601 format. Default value: The current time.",
            "in": "query",
            "name": "end_time",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Link": {
                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/v1CashDrawerShift"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "summary": "Provides the details for all of a location's cash drawer shifts during a date range. The date range you specify cannot exceed 90 days.",
        "tags": [
          "V1Employees"
        ]
      }
    },
    "/v1/{location_id}/cash-drawer-shifts/{shift_id}": {
      "get": {
        "deprecated": false,
        "description": "Provides the details for a single cash drawer shift, including all events that occurred during the shift.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-cashdrawershiftid"
        },
        "operationId": "RetrieveCashDrawerShift",
        "parameters": [
          {
            "description": "The ID of the location to list cash drawer shifts for.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The shift's ID.",
            "in": "path",
            "name": "shift_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1CashDrawerShift"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "TIMECARDS_READ"
            ]
          }
        ],
        "summary": "Provides the details for a single cash drawer shift, including all events that occurred during the shift.",
        "tags": [
          "V1Employees"
        ]
      }
    },
    "/v1/{location_id}/categories": {
      "get": {
        "deprecated": false,
        "description": "Lists all of a location's item categories.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-categories"
        },
        "operationId": "ListCategories",
        "parameters": [
          {
            "description": "The ID of the location to list categories for.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Link": {
                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/v1Category"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "summary": "Lists all of a location's item categories.",
        "tags": [
          "V1Items"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates an item category.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#post-categories"
        },
        "operationId": "CreateCategory",
        "parameters": [
          {
            "description": "The ID of the location to create an item for.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Category"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "Creates an item category.",
        "tags": [
          "V1Items"
        ]
      }
    },
    "/v1/{location_id}/categories/{category_id}": {
      "delete": {
        "deprecated": false,
        "description": "Deletes an existing item category.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-categoryid"
        },
        "operationId": "DeleteCategory",
        "parameters": [
          {
            "description": "The ID of the item's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the category to delete.",
            "in": "path",
            "name": "category_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Category"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "Deletes an existing item category.",
        "tags": [
          "V1Items"
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Modifies the details of an existing item category.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#put-categoryid"
        },
        "operationId": "UpdateCategory",
        "parameters": [
          {
            "description": "The ID of the category's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the category to edit.",
            "in": "path",
            "name": "category_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Category"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "Modifies the details of an existing item category.",
        "tags": [
          "V1Items"
        ]
      }
    },
    "/v1/{location_id}/discounts": {
      "get": {
        "deprecated": false,
        "description": "Lists all of a location's discounts.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-discounts"
        },
        "operationId": "ListDiscounts",
        "parameters": [
          {
            "description": "The ID of the location to list categories for.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Link": {
                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/v1Discount"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "summary": "Lists all of a location's discounts.",
        "tags": [
          "V1Items"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates a discount.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#post-discounts"
        },
        "operationId": "CreateDiscount",
        "parameters": [
          {
            "description": "The ID of the location to create an item for.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Discount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Discount"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "Creates a discount.",
        "tags": [
          "V1Items"
        ]
      }
    },
    "/v1/{location_id}/discounts/{discount_id}": {
      "delete": {
        "deprecated": false,
        "description": "Deletes an existing discount.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-discountid"
        },
        "operationId": "DeleteDiscount",
        "parameters": [
          {
            "description": "The ID of the item's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the discount to delete.",
            "in": "path",
            "name": "discount_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Discount"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "Deletes an existing discount.",
        "tags": [
          "V1Items"
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Modifies the details of an existing discount.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#put-discountid"
        },
        "operationId": "UpdateDiscount",
        "parameters": [
          {
            "description": "The ID of the category's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the discount to edit.",
            "in": "path",
            "name": "discount_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Discount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Discount"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "Modifies the details of an existing discount.",
        "tags": [
          "V1Items"
        ]
      }
    },
    "/v1/{location_id}/fees": {
      "get": {
        "deprecated": false,
        "description": "Lists all of a location's fees (taxes).",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-fees"
        },
        "operationId": "ListFees",
        "parameters": [
          {
            "description": "The ID of the location to list fees for.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Link": {
                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/v1Fee"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "summary": "Lists all of a location's fees (taxes).",
        "tags": [
          "V1Items"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates a fee (tax).",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#post-fees"
        },
        "operationId": "CreateFee",
        "parameters": [
          {
            "description": "The ID of the location to create a fee for.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Fee"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Fee"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "Creates a fee (tax).",
        "tags": [
          "V1Items"
        ]
      }
    },
    "/v1/{location_id}/fees/{fee_id}": {
      "delete": {
        "deprecated": false,
        "description": "Deletes an existing fee (tax).",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-feeid"
        },
        "operationId": "DeleteFee",
        "parameters": [
          {
            "description": "The ID of the fee's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the fee to delete.",
            "in": "path",
            "name": "fee_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Fee"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "Deletes an existing fee (tax).",
        "tags": [
          "V1Items"
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Modifies the details of an existing fee (tax).",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#put-feeid"
        },
        "operationId": "UpdateFee",
        "parameters": [
          {
            "description": "The ID of the fee's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the fee to edit.",
            "in": "path",
            "name": "fee_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Fee"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Fee"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "Modifies the details of an existing fee (tax).",
        "tags": [
          "V1Items"
        ]
      }
    },
    "/v1/{location_id}/inventory": {
      "get": {
        "deprecated": false,
        "description": "Provides inventory information for all of a merchant's inventory-enabled item variations.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-inventory"
        },
        "operationId": "ListInventory",
        "parameters": [
          {
            "description": "The ID of the item's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The maximum number of inventory entries to return in a single response. This value cannot exceed 1000.",
            "in": "query",
            "maximum": 1000,
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "in": "query",
            "name": "batch_token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "items": {
                "$ref": "#/definitions/v1InventoryEntry"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "summary": "Provides inventory information for all of a merchant's inventory-enabled item variations.",
        "tags": [
          "V1Items"
        ]
      }
    },
    "/v1/{location_id}/inventory/{variation_id}": {
      "post": {
        "deprecated": false,
        "description": "Adjusts an item variation's current available inventory.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#post-inventory-variationid"
        },
        "operationId": "AdjustInventory",
        "parameters": [
          {
            "description": "The ID of the item's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the variation to adjust inventory information for.",
            "in": "path",
            "name": "variation_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AdjustInventoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1InventoryEntry"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "Adjusts an item variation's current available inventory.",
        "tags": [
          "V1Items"
        ]
      }
    },
    "/v1/{location_id}/items": {
      "get": {
        "deprecated": false,
        "description": "Provides summary information for all of a location's items.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-items"
        },
        "operationId": "ListItems",
        "parameters": [
          {
            "description": "The ID of the location to list items for.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "in": "query",
            "name": "batch_token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Link": {
                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/v1Item"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "summary": "Provides summary information for all of a location's items.",
        "tags": [
          "V1Items"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates an item and at least one variation for it.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#post-items"
        },
        "operationId": "CreateItem",
        "parameters": [
          {
            "description": "The ID of the location to create an item for.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Item"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Item"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "Creates an item and at least one variation for it.",
        "tags": [
          "V1Items"
        ]
      }
    },
    "/v1/{location_id}/items/{item_id}": {
      "delete": {
        "deprecated": false,
        "description": "Deletes an existing item and all item variations associated with it.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-itemid"
        },
        "operationId": "DeleteItem",
        "parameters": [
          {
            "description": "The ID of the item's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the item to modify.",
            "in": "path",
            "name": "item_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Item"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "Deletes an existing item and all item variations associated with it.",
        "tags": [
          "V1Items"
        ]
      },
      "get": {
        "deprecated": false,
        "description": "Provides the details for a single item, including associated modifier lists and fees.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-itemid"
        },
        "operationId": "RetrieveItem",
        "parameters": [
          {
            "description": "The ID of the item's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The item's ID.",
            "in": "path",
            "name": "item_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Item"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "summary": "Provides the details for a single item, including associated modifier lists and fees.",
        "tags": [
          "V1Items"
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Modifies the core details of an existing item.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#put-itemid"
        },
        "operationId": "UpdateItem",
        "parameters": [
          {
            "description": "The ID of the item's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the item to modify.",
            "in": "path",
            "name": "item_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Item"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Item"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "Modifies the core details of an existing item.",
        "tags": [
          "V1Items"
        ]
      }
    },
    "/v1/{location_id}/items/{item_id}/fees/{fee_id}": {
      "delete": {
        "deprecated": false,
        "description": "Removes a fee assocation from an item, meaning the fee is no longer automatically applied to the item in Square Register.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-itemid-feeid"
        },
        "operationId": "RemoveFee",
        "parameters": [
          {
            "description": "The ID of the fee's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the item to add the fee to.",
            "in": "path",
            "name": "item_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the fee to apply.",
            "in": "path",
            "name": "fee_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Item"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "Removes a fee assocation from an item, meaning the fee is no longer automatically applied to the item in Square Register.",
        "tags": [
          "V1Items"
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Associates a fee with an item, meaning the fee is automatically applied to the item in Square Register.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#put-itemid-feeid"
        },
        "operationId": "ApplyFee",
        "parameters": [
          {
            "description": "The ID of the fee's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the item to add the fee to.",
            "in": "path",
            "name": "item_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the fee to apply.",
            "in": "path",
            "name": "fee_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Item"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "Associates a fee with an item, meaning the fee is automatically applied to the item in Square Register.",
        "tags": [
          "V1Items"
        ]
      }
    },
    "/v1/{location_id}/items/{item_id}/modifier-lists/{modifier_list_id}": {
      "delete": {
        "deprecated": false,
        "description": "Removes a modifier list association from an item, meaning modifier options from the list can no longer be applied to the item.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-itemid-modifierlistid"
        },
        "operationId": "RemoveModifierList",
        "parameters": [
          {
            "description": "The ID of the item's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the modifier list to remove.",
            "in": "path",
            "name": "modifier_list_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the item to remove the modifier list from.",
            "in": "path",
            "name": "item_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Item"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "Removes a modifier list association from an item, meaning modifier options from the list can no longer be applied to the item.",
        "tags": [
          "V1Items"
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Associates a modifier list with an item, meaning modifier options from the list can be applied to the item.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#put-itemid-modifierlistid"
        },
        "operationId": "ApplyModifierList",
        "parameters": [
          {
            "description": "The ID of the item's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the modifier list to apply.",
            "in": "path",
            "name": "modifier_list_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the item to add the modifier list to.",
            "in": "path",
            "name": "item_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Item"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "Associates a modifier list with an item, meaning modifier options from the list can be applied to the item.",
        "tags": [
          "V1Items"
        ]
      }
    },
    "/v1/{location_id}/items/{item_id}/variations": {
      "post": {
        "deprecated": false,
        "description": "Creates an item variation for an existing item.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#post-variations"
        },
        "operationId": "CreateVariation",
        "parameters": [
          {
            "description": "The ID of the item's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The item's ID.",
            "in": "path",
            "name": "item_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Variation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Variation"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "Creates an item variation for an existing item.",
        "tags": [
          "V1Items"
        ]
      }
    },
    "/v1/{location_id}/items/{item_id}/variations/{variation_id}": {
      "delete": {
        "deprecated": false,
        "description": "Deletes an existing item variation from an item.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-variationid"
        },
        "operationId": "DeleteVariation",
        "parameters": [
          {
            "description": "The ID of the item's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the item to delete.",
            "in": "path",
            "name": "item_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the variation to delete.",
            "in": "path",
            "name": "variation_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Variation"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "Deletes an existing item variation from an item.",
        "tags": [
          "V1Items"
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Modifies the details of an existing item variation.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#put-variationid"
        },
        "operationId": "UpdateVariation",
        "parameters": [
          {
            "description": "The ID of the item's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the item to modify.",
            "in": "path",
            "name": "item_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the variation to modify.",
            "in": "path",
            "name": "variation_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Variation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Variation"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "Modifies the details of an existing item variation.",
        "tags": [
          "V1Items"
        ]
      }
    },
    "/v1/{location_id}/modifier-lists": {
      "get": {
        "deprecated": false,
        "description": "Lists all of a location's modifier lists.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-modifierlists"
        },
        "operationId": "ListModifierLists",
        "parameters": [
          {
            "description": "The ID of the location to list modifier lists for.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "items": {
                "$ref": "#/definitions/v1ModifierList"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "summary": "Lists all of a location's modifier lists.",
        "tags": [
          "V1Items"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates an item modifier list and at least one modifier option for it.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#post-modifierlists"
        },
        "operationId": "CreateModifierList",
        "parameters": [
          {
            "description": "The ID of the location to create a modifier list for.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ModifierList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1ModifierList"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "Creates an item modifier list and at least one modifier option for it.",
        "tags": [
          "V1Items"
        ]
      }
    },
    "/v1/{location_id}/modifier-lists/{modifier_list_id}": {
      "delete": {
        "deprecated": false,
        "description": "Deletes an existing item modifier list and all modifier options associated with it.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-modifierlistid"
        },
        "operationId": "DeleteModifierList",
        "parameters": [
          {
            "description": "The ID of the item's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the modifier list to delete.",
            "in": "path",
            "name": "modifier_list_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1ModifierList"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "Deletes an existing item modifier list and all modifier options associated with it.",
        "tags": [
          "V1Items"
        ]
      },
      "get": {
        "deprecated": false,
        "description": "Provides the details for a single modifier list.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-modifierlistid"
        },
        "operationId": "RetrieveModifierList",
        "parameters": [
          {
            "description": "The ID of the item's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The modifier list's ID.",
            "in": "path",
            "name": "modifier_list_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1ModifierList"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "summary": "Provides the details for a single modifier list.",
        "tags": [
          "V1Items"
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Modifies the details of an existing item modifier list.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#put-modifierlistid"
        },
        "operationId": "UpdateModifierList",
        "parameters": [
          {
            "description": "The ID of the item's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the modifier list to edit.",
            "in": "path",
            "name": "modifier_list_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateModifierListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1ModifierList"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "Modifies the details of an existing item modifier list.",
        "tags": [
          "V1Items"
        ]
      }
    },
    "/v1/{location_id}/modifier-lists/{modifier_list_id}/modifier-options": {
      "post": {
        "deprecated": false,
        "description": "Creates an item modifier option and adds it to a modifier list.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#post-modifieroptions"
        },
        "operationId": "CreateModifierOption",
        "parameters": [
          {
            "description": "The ID of the item's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the modifier list to edit.",
            "in": "path",
            "name": "modifier_list_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ModifierOption"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1ModifierOption"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "Creates an item modifier option and adds it to a modifier list.",
        "tags": [
          "V1Items"
        ]
      }
    },
    "/v1/{location_id}/modifier-lists/{modifier_list_id}/modifier-options/{modifier_option_id}": {
      "delete": {
        "deprecated": false,
        "description": "Deletes an existing item modifier option from a modifier list.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-modifieroptionid"
        },
        "operationId": "DeleteModifierOption",
        "parameters": [
          {
            "description": "The ID of the item's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the modifier list to delete.",
            "in": "path",
            "name": "modifier_list_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the modifier list to edit.",
            "in": "path",
            "name": "modifier_option_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1ModifierOption"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "Deletes an existing item modifier option from a modifier list.",
        "tags": [
          "V1Items"
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Modifies the details of an existing item modifier option.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#put-modifieroptionid"
        },
        "operationId": "UpdateModifierOption",
        "parameters": [
          {
            "description": "The ID of the item's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the modifier list to edit.",
            "in": "path",
            "name": "modifier_list_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the modifier list to edit.",
            "in": "path",
            "name": "modifier_option_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ModifierOption"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1ModifierOption"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "Modifies the details of an existing item modifier option.",
        "tags": [
          "V1Items"
        ]
      }
    },
    "/v1/{location_id}/orders": {
      "get": {
        "deprecated": false,
        "description": "Provides summary information for a merchant's online store orders.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-ordrers"
        },
        "operationId": "ListOrders",
        "parameters": [
          {
            "description": "The ID of the location to list online store orders for.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "TThe order in which payments are listed in the response.",
            "enum": [
              "ASC",
              "DESC"
            ],
            "in": "query",
            "name": "order",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of payments to return in a single response. This value cannot exceed 200.",
            "in": "query",
            "maximum": 200,
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "in": "query",
            "name": "batch_token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Link": {
                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/v1Order"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ORDERS_READ"
            ]
          }
        ],
        "summary": "Provides summary information for a merchant's online store orders.",
        "tags": [
          "V1Transactions"
        ]
      }
    },
    "/v1/{location_id}/orders/{order_id}": {
      "get": {
        "deprecated": false,
        "description": "Provides comprehensive information for a single online store order, including the order's history.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-orderid"
        },
        "operationId": "RetrieveOrder",
        "parameters": [
          {
            "description": "The ID of the order's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The order's Square-issued ID. You obtain this value from Order objects returned by the List Orders endpoint",
            "in": "path",
            "name": "order_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Order"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ORDERS_READ"
            ]
          }
        ],
        "summary": "Provides comprehensive information for a single online store order, including the order's history.",
        "tags": [
          "V1Transactions"
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Updates the details of an online store order. Every update you perform on an order corresponds to one of three actions:",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#put-orderid"
        },
        "operationId": "UpdateOrder",
        "parameters": [
          {
            "description": "The ID of the order's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The order's Square-issued ID. You obtain this value from Order objects returned by the List Orders endpoint",
            "in": "path",
            "name": "order_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateOrderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Order"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ORDERS_WRITE"
            ]
          }
        ],
        "summary": "Updates the details of an online store order. Every update you perform on an order corresponds to one of three actions:",
        "tags": [
          "V1Transactions"
        ]
      }
    },
    "/v1/{location_id}/pages": {
      "get": {
        "deprecated": false,
        "description": "Lists all of a location's Favorites pages in Square Register.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-pages"
        },
        "operationId": "ListPages",
        "parameters": [
          {
            "description": "The ID of the location to list Favorites pages for.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "items": {
                "$ref": "#/definitions/v1Page"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "summary": "Lists all of a location's Favorites pages in Square Register.",
        "tags": [
          "V1Items"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates a Favorites page in Square Register.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#post-pages"
        },
        "operationId": "CreatePage",
        "parameters": [
          {
            "description": "The ID of the location to create an item for.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Page"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "Creates a Favorites page in Square Register.",
        "tags": [
          "V1Items"
        ]
      }
    },
    "/v1/{location_id}/pages/{page_id}": {
      "delete": {
        "deprecated": false,
        "description": "Deletes an existing Favorites page and all of its cells.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-pageid"
        },
        "operationId": "DeletePage",
        "parameters": [
          {
            "description": "The ID of the Favorites page's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the page to delete.",
            "in": "path",
            "name": "page_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Page"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "Deletes an existing Favorites page and all of its cells.",
        "tags": [
          "V1Items"
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Modifies the details of a Favorites page in Square Register.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#put-pageid"
        },
        "operationId": "UpdatePage",
        "parameters": [
          {
            "description": "The ID of the Favorites page's associated location",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the page to modify.",
            "in": "path",
            "name": "page_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Page"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "Modifies the details of a Favorites page in Square Register.",
        "tags": [
          "V1Items"
        ]
      }
    },
    "/v1/{location_id}/pages/{page_id}/cells": {
      "delete": {
        "deprecated": false,
        "description": "Deletes a cell from a Favorites page in Square Register.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#delete-cells"
        },
        "operationId": "DeletePageCell",
        "parameters": [
          {
            "description": "The ID of the Favorites page's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the page to delete.",
            "in": "path",
            "name": "page_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The row of the cell to clear. Always an integer between 0 and 4, inclusive. Row 0 is the top row.",
            "in": "query",
            "name": "row",
            "required": false,
            "type": "string"
          },
          {
            "description": "The column of the cell to clear. Always an integer between 0 and 4, inclusive. Column 0 is the leftmost column.",
            "in": "query",
            "name": "column",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Page"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "Deletes a cell from a Favorites page in Square Register.",
        "tags": [
          "V1Items"
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Modifies a cell of a Favorites page in Square Register.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#put-cells"
        },
        "operationId": "UpdatePageCell",
        "parameters": [
          {
            "description": "The ID of the Favorites page's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the page the cell belongs to.",
            "in": "path",
            "name": "page_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PageCell"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Page"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "Modifies a cell of a Favorites page in Square Register.",
        "tags": [
          "V1Items"
        ]
      }
    },
    "/v1/{location_id}/payments": {
      "get": {
        "deprecated": false,
        "description": "Provides summary information for all payments taken by a merchant or any of the merchant's mobile staff during a date range. Date ranges cannot exceed one year in length. See Date ranges for details of inclusive and exclusive dates.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-payments"
        },
        "operationId": "ListPayments",
        "parameters": [
          {
            "description": "The ID of the location to list payments for. If you specify me, this endpoint returns payments aggregated from all of the business's locations.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The order in which payments are listed in the response.",
            "enum": [
              "ASC",
              "DESC"
            ],
            "in": "query",
            "name": "order",
            "required": false,
            "type": "string"
          },
          {
            "description": "The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year.",
            "in": "query",
            "name": "begin_time",
            "required": false,
            "type": "string"
          },
          {
            "description": "The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time.",
            "in": "query",
            "name": "end_time",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of payments to return in a single response. This value cannot exceed 200.",
            "in": "query",
            "maximum": 200,
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "in": "query",
            "name": "batch_token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Link": {
                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/v1Payment"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "summary": "Provides summary information for all payments taken by a merchant or any of the merchant's mobile staff during a date range. Date ranges cannot exceed one year in length. See Date ranges for details of inclusive and exclusive dates.",
        "tags": [
          "V1Transactions"
        ]
      }
    },
    "/v1/{location_id}/payments/{payment_id}": {
      "get": {
        "deprecated": false,
        "description": "Provides comprehensive information for a single payment.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-paymentid"
        },
        "operationId": "RetrievePayment",
        "parameters": [
          {
            "description": "The ID of the payment's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The payment's Square-issued ID. You obtain this value from Payment objects returned by the List Payments endpoint, or Settlement objects returned by the List Settlements endpoint.",
            "in": "path",
            "name": "payment_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Payment"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "summary": "Provides comprehensive information for a single payment.",
        "tags": [
          "V1Transactions"
        ]
      }
    },
    "/v1/{location_id}/refunds": {
      "get": {
        "deprecated": false,
        "description": "Provides the details for all refunds initiated by a merchant or any of the merchant's mobile staff during a date range. Date ranges cannot exceed one year in length.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-refunds"
        },
        "parameters": [
          {
            "description": "The ID of the location to list refunds for.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "TThe order in which payments are listed in the response.",
            "enum": [
              "ASC",
              "DESC"
            ],
            "in": "query",
            "name": "order",
            "required": false,
            "type": "string"
          },
          {
            "description": "The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year.",
            "in": "query",
            "name": "begin_time",
            "required": false,
            "type": "string"
          },
          {
            "description": "The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time.",
            "in": "query",
            "name": "end_time",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of payments to return in a single response. This value cannot exceed 200.",
            "in": "query",
            "maximum": 200,
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "in": "query",
            "name": "batch_token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Link": {
                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/v1Refund"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "summary": "Provides the details for all refunds initiated by a merchant or any of the merchant's mobile staff during a date range. Date ranges cannot exceed one year in length.",
        "tags": [
          "V1Transactions"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Issues a refund for a previously processed payment. You must issue a refund within 60 days of the associated payment.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#post-refunds"
        },
        "parameters": [
          {
            "description": "The ID of the original payment's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateRefundRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Refund"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "summary": "Issues a refund for a previously processed payment. You must issue a refund within 60 days of the associated payment.",
        "tags": [
          "V1Transactions"
        ]
      }
    },
    "/v1/{location_id}/settlements": {
      "get": {
        "deprecated": false,
        "description": "Provides summary information for all deposits and withdrawals initiated by Square to a merchant's bank account during a date range. Date ranges cannot exceed one year in length. ",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-settlements"
        },
        "operationId": "ListSettlements",
        "parameters": [
          {
            "description": "The ID of the location to list settlements for. If you specify me, this endpoint returns payments aggregated from all of the business's locations.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "TThe order in which payments are listed in the response.",
            "enum": [
              "ASC",
              "DESC"
            ],
            "in": "query",
            "name": "order",
            "required": false,
            "type": "string"
          },
          {
            "description": "The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year.",
            "in": "query",
            "name": "begin_time",
            "required": false,
            "type": "string"
          },
          {
            "description": "The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time.",
            "in": "query",
            "name": "end_time",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of payments to return in a single response. This value cannot exceed 200.",
            "in": "query",
            "maximum": 200,
            "name": "limit",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Provide this parameter to retrieve only settlements with a particular status (SENT or FAILED).",
            "enum": [
              "SENT",
              "FAILED"
            ],
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          },
          {
            "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint.",
            "in": "query",
            "name": "batch_token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Link": {
                "description": "If returned, there are too many items to return in one request and you must paginate with the supplied link. ",
                "type": "string"
              }
            },
            "schema": {
              "items": {
                "$ref": "#/definitions/v1Settlement"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "SETTLEMENTS_READ"
            ]
          }
        ],
        "summary": "Provides summary information for all deposits and withdrawals initiated by Square to a merchant's bank account during a date range. Date ranges cannot exceed one year in length.",
        "tags": [
          "V1Transactions"
        ]
      }
    },
    "/v1/{location_id}/settlements/{settlement_id}": {
      "get": {
        "deprecated": false,
        "description": "Provides comprehensive information for a single settlement, including the entries that contribute to the settlement's total.",
        "externalDocs": {
          "description": "Read the offical documentation here:",
          "url": "https://docs.connect.squareup.com/api/connect/v1/#get-settlementid"
        },
        "operationId": "RetrieveSettlement",
        "parameters": [
          {
            "description": "The ID of the settlements's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The settlement's Square-issued ID. You obtain this value from Settlement objects returned by the List Settlements endpoint.",
            "in": "path",
            "name": "settlement_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/v1Settlement"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "SETTLEMENTS_READ"
            ]
          }
        ],
        "summary": "Provides comprehensive information for a single settlement, including the entries that contribute to the settlement's total.",
        "tags": [
          "V1Transactions"
        ]
      }
    },
    "/v2/catalog/batch-delete": {
      "post": {
        "description": "Deletes a set of [CatalogItem](#type-catalogitem)s based on the\nprovided list of target IDs and returns a set of successfully deleted IDs in\nthe response. Deletion is a cascading event such that all children of the\ntargeted object are also deleted. For example, deleting a CatalogItem will\nalso delete all of its [CatalogItemVariation](#type-catalogitemvariation)\nchildren.\n\n`BatchDeleteCatalogObjects` succeeds even if only a portion of the targeted\nIDs can be deleted. The response will only include IDs that were\nactually deleted.",
        "operationId": "BatchDeleteCatalogObjects",
        "parameters": [
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchDeleteCatalogObjectsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchDeleteCatalogObjectsResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "BatchDeleteCatalogObjects",
        "tags": [
          "Catalog"
        ],
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ]
      }
    },
    "/v2/catalog/batch-retrieve": {
      "post": {
        "description": "Returns a set of objects based on the provided ID.\nEach [CatalogItem](#type-catalogitem) returned in the set includes all of its\nchild information including: all of its\n[CatalogItemVariation](#type-catalogitemvariation) objects, references to\nits [CatalogModifierList](#type-catalogmodifierlist) objects, and the ids of\nany [CatalogTax](#type-catalogtax) objects that apply to it.",
        "operationId": "BatchRetrieveCatalogObjects",
        "parameters": [
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchRetrieveCatalogObjectsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchRetrieveCatalogObjectsResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "summary": "BatchRetrieveCatalogObjects",
        "tags": [
          "Catalog"
        ],
        "x-oauthpermissions": [
          "ITEMS_READ"
        ]
      }
    },
    "/v2/catalog/batch-upsert": {
      "post": {
        "description": "Creates or updates up to 10,000 target objects based on the provided\nlist of objects. The target objects are grouped into batches and each batch is\ninserted/updated in an all-or-nothing manner. If an object within a batch is\nmalformed in some way, or violates a database constraint, the entire batch\ncontaining that item will be disregarded. However, other batches in the same\nrequest may still succeed. Each batch may contain up to 1,000 objects, and\nbatches will be processed in order as long as the total object count for the\nrequest (items, variations, modifier lists, discounts, and taxes) is no more\nthan 10,000.",
        "operationId": "BatchUpsertCatalogObjects",
        "parameters": [
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchUpsertCatalogObjectsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchUpsertCatalogObjectsResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "BatchUpsertCatalogObjects",
        "tags": [
          "Catalog"
        ],
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ]
      }
    },
    "/v2/catalog/info": {
      "get": {
        "description": "Returns information about the Square Catalog API, such as batch size\nlimits for `BatchUpsertCatalogObjects`.",
        "operationId": "CatalogInfo",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CatalogInfoResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "summary": "CatalogInfo",
        "tags": [
          "Catalog"
        ],
        "x-oauthpermissions": [
          "ITEMS_READ"
        ]
      }
    },
    "/v2/catalog/list": {
      "get": {
        "description": "Returns a list of [CatalogObject](#type-catalogobject)s that includes\nall objects of a set of desired types (for example, all [CatalogItem](#type-catalogitem)\nand [CatalogTax](#type-catalogtax) objects) in the catalog. The types parameter\nis specified as a comma-separated list of valid [CatalogObject](#type-catalogobject) types:\n`ITEM`, `ITEM_VARIATION`, `MODIFIER`, `MODIFIER_LIST`, `CATEGORY`, `DISCOUNT`, `TAX`.",
        "operationId": "ListCatalog",
        "parameters": [
          {
            "description": "The pagination cursor returned in the previous response. Leave unset for an initial request.\nSee [Paginating results](#paginatingresults) for more information.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "type": "string"
          },
          {
            "description": "An optional case-insensitive, comma-separated list of object types to retrieve, for example\n`ITEM,ITEM_VARIATION,CATEGORY`.\n\nThe legal values are taken from the [CatalogObjectType](#type-catalogobjecttype)\nenumeration, namely `\"ITEM\"`, `\"ITEM_VARIATION\"`, `\"CATEGORY\"`, `\"DISCOUNT\"`, `\"TAX\"`,\n`\"MODIFIER\"`, or `\"MODIFIER_LIST\"`.",
            "in": "query",
            "name": "types",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListCatalogResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "summary": "ListCatalog",
        "tags": [
          "Catalog"
        ],
        "x-oauthpermissions": [
          "ITEMS_READ"
        ]
      }
    },
    "/v2/catalog/object": {
      "post": {
        "description": "Creates or updates the target [CatalogObject](#type-catalogobject).",
        "operationId": "UpsertCatalogObject",
        "parameters": [
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpsertCatalogObjectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpsertCatalogObjectResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "UpsertCatalogObject",
        "tags": [
          "Catalog"
        ],
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ]
      }
    },
    "/v2/catalog/object/{object_id}": {
      "delete": {
        "description": "Deletes a single [CatalogObject](#type-catalogobject) based on the\nprovided ID and returns the set of successfully deleted IDs in the response.\nDeletion is a cascading event such that all children of the targeted object\nare also deleted. For example, deleting a [CatalogItem](#type-catalogitem)\nwill also delete all of its\n[CatalogItemVariation](#type-catalogitemvariation) children.",
        "operationId": "DeleteCatalogObject",
        "parameters": [
          {
            "description": "The ID of the [CatalogObject](#type-catalogobject) to be deleted. When an object is deleted, other\nobjects in the graph that depend on that object will be deleted as well (for example, deleting a\n[CatalogItem](#type-catalogitem) will delete its [CatalogItemVariation](#type-catalogitemvariation)s).",
            "in": "path",
            "name": "object_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteCatalogObjectResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "DeleteCatalogObject",
        "tags": [
          "Catalog"
        ],
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ]
      },
      "get": {
        "description": "Returns a single [CatalogItem](#type-catalogitem) as a\n[CatalogObject](#type-catalogobject) based on the provided ID. The returned\nobject includes all of the relevant [CatalogItem](#type-catalogitem)\ninformation including: [CatalogItemVariation](#type-catalogitemvariation)\nchildren, references to its\n[CatalogModifierList](#type-catalogmodifierlist) objects, and the ids of\nany [CatalogTax](#type-catalogtax) objects that apply to it.",
        "operationId": "RetrieveCatalogObject",
        "parameters": [
          {
            "description": "The object ID of any type of [CatalogObject](#type-catalogobject)s to be retrieved.",
            "in": "path",
            "name": "object_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "If `true`, the response will include additional objects that are related to the\nrequested object, as follows:\n\nIf the `object` field of the response contains a [CatalogItem](#type-catalogitem),\nits associated [CatalogCategory](#type-catalogcategory), [CatalogTax](#type-catalogtax)es, and\n[CatalogModifierList](#type-catalogmodifierlist)s will be returned in the `related_objects` field of the\nresponse. If the `object` field of the response contains a [CatalogItemVariation](#type-catalogitemvariation),\nits parent [CatalogItem](#type-catalogitem) will be returned in the `related_objects` field of\nthe response.\n\nDefault value: `false`",
            "in": "query",
            "name": "include_related_objects",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveCatalogObjectResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "summary": "RetrieveCatalogObject",
        "tags": [
          "Catalog"
        ],
        "x-oauthpermissions": [
          "ITEMS_READ"
        ]
      }
    },
    "/v2/catalog/search": {
      "post": {
        "description": "Queries the targeted catalog using a variety of query types\n([CatalogQuerySortedAttribute](#type-catalogquerysortedattribute),\n([CatalogQueryExact](#type-catalogqueryexact),\n([CatalogQueryRange](#type-catalogqueryrange),\n([CatalogQueryText](#type-catalogquerytext),\n([CatalogQueryItemsForTax](#type-catalogqueryitemsfortax),\n([CatalogQueryItemsForModifierList](#type-catalogqueryitemsformodifierlist)).",
        "operationId": "SearchCatalogObjects",
        "parameters": [
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchCatalogObjectsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SearchCatalogObjectsResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_READ"
            ]
          }
        ],
        "summary": "SearchCatalogObjects",
        "tags": [
          "Catalog"
        ],
        "x-oauthpermissions": [
          "ITEMS_READ"
        ]
      }
    },
    "/v2/catalog/update-item-modifier-lists": {
      "post": {
        "description": "Updates the [CatalogModifierList](#type-catalogmodifierlist) objects\nthat apply to the targeted [CatalogItem](#type-catalogitem) without having\nto perform an upsert on the entire item.",
        "operationId": "UpdateItemModifierLists",
        "parameters": [
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateItemModifierListsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateItemModifierListsResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "UpdateItemModifierLists",
        "tags": [
          "Catalog"
        ],
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ]
      }
    },
    "/v2/catalog/update-item-taxes": {
      "post": {
        "description": "Updates the [CatalogTax](#type-catalogtax) objects that apply to the\ntargeted [CatalogItem](#type-catalogitem) without having to perform an\nupsert on the entire item.",
        "operationId": "UpdateItemTaxes",
        "parameters": [
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateItemTaxesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateItemTaxesResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "ITEMS_WRITE"
            ]
          }
        ],
        "summary": "UpdateItemTaxes",
        "tags": [
          "Catalog"
        ],
        "x-oauthpermissions": [
          "ITEMS_WRITE"
        ]
      }
    },
    "/v2/customers": {
      "get": {
        "description": "Lists a business's customers.",
        "operationId": "ListCustomers",
        "parameters": [
          {
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Paginating results](#paginatingresults) for more information.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListCustomersResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_READ"
            ]
          }
        ],
        "summary": "ListCustomers",
        "tags": [
          "Customers"
        ],
        "x-oauthpermissions": [
          "CUSTOMERS_READ"
        ]
      },
      "post": {
        "description": "Creates a new customer for a business, which can have associated cards on file.\n\nYou must provide __at least one__ of the following values in your request to this\nendpoint:\n\n- `given_name`\n- `family_name`\n- `company_name`\n- `email_address`\n- `phone_number`\n\nThis endpoint does not accept an idempotency key. If you accidentally create\na duplicate customer, you can delete it with the\n[DeleteCustomer](#endpoint-deletecustomer) endpoint.",
        "operationId": "CreateCustomer",
        "parameters": [
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCustomerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateCustomerResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "summary": "CreateCustomer",
        "tags": [
          "Customers"
        ],
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ]
      }
    },
    "/v2/customers/{customer_id}": {
      "delete": {
        "description": "Deletes a customer from a business, along with any linked cards on file.",
        "operationId": "DeleteCustomer",
        "parameters": [
          {
            "description": "The ID of the customer to delete.",
            "in": "path",
            "name": "customer_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteCustomerResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "summary": "DeleteCustomer",
        "tags": [
          "Customers"
        ],
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ]
      },
      "get": {
        "description": "Returns details for a single customer.",
        "operationId": "RetrieveCustomer",
        "parameters": [
          {
            "description": "The ID of the customer to retrieve.",
            "in": "path",
            "name": "customer_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveCustomerResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_READ"
            ]
          }
        ],
        "summary": "RetrieveCustomer",
        "tags": [
          "Customers"
        ],
        "x-oauthpermissions": [
          "CUSTOMERS_READ"
        ]
      },
      "put": {
        "description": "Updates the details of an existing customer.\nThe ID of the customer may change if the customer has been merged into another customer.\n\nYou cannot edit a customer's cards on file with this endpoint. To make changes\nto a card on file, you must delete the existing card on file with the\n[DeleteCustomerCard](#endpoint-deletecustomercard) endpoint, then create a new one with the\n[CreateCustomerCard](#endpoint-createcustomercard) endpoint.",
        "operationId": "UpdateCustomer",
        "parameters": [
          {
            "description": "The ID of the customer to update.",
            "in": "path",
            "name": "customer_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCustomerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateCustomerResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "summary": "UpdateCustomer",
        "tags": [
          "Customers"
        ],
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ]
      }
    },
    "/v2/customers/{customer_id}/cards": {
      "post": {
        "description": "Adds a card on file to an existing customer. In the United States\nSquare takes care of automatically updating any cards on file that might\nhave expired since you first attached them to a customer.",
        "operationId": "CreateCustomerCard",
        "parameters": [
          {
            "description": "The ID of the customer to link the card on file to.",
            "in": "path",
            "name": "customer_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCustomerCardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateCustomerCardResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "summary": "CreateCustomerCard",
        "tags": [
          "Customers"
        ],
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ]
      }
    },
    "/v2/customers/{customer_id}/cards/{card_id}": {
      "delete": {
        "description": "Removes a card on file from a customer.",
        "operationId": "DeleteCustomerCard",
        "parameters": [
          {
            "description": "The ID of the customer that the card on file belongs to.",
            "in": "path",
            "name": "customer_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the card on file to delete.",
            "in": "path",
            "name": "card_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteCustomerCardResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "CUSTOMERS_WRITE"
            ]
          }
        ],
        "summary": "DeleteCustomerCard",
        "tags": [
          "Customers"
        ],
        "x-oauthpermissions": [
          "CUSTOMERS_WRITE"
        ]
      }
    },
    "/v2/locations": {
      "get": {
        "description": "Provides the details for all of a business's locations.\n\nMost other Connect API endpoints have a required `location_id` path parameter.\nThe `id` field of the [`Location`](#type-location) objects returned by this\nendpoint correspond to that `location_id` parameter.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListLocationsResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "MERCHANT_PROFILE_READ"
            ]
          }
        ],
        "summary": "ListLocations",
        "tags": [
          "Locations"
        ],
        "x-oauthpermissions": [
          "MERCHANT_PROFILE_READ"
        ]
      }
    },
    "/v2/locations/{location_id}/checkouts": {
      "post": {
        "description": "Creates a [Checkout](#type-checkout) response that links a\n`checkoutId` and `checkout_page_url` that customers can be directed to in\norder to provide their payment information using a payment processing\nworkflow hosted on connect.squareup.com.",
        "operationId": "CreateCheckout",
        "parameters": [
          {
            "description": "The ID of the business location to associate the checkout with.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCheckoutRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateCheckoutResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE",
              "ORDERS_WRITE"
            ]
          }
        ],
        "summary": "CreateCheckout",
        "tags": [
          "Checkout"
        ],
        "x-oauthpermissions": [
          "PAYMENTS_WRITE",
          "ORDERS_WRITE"
        ]
      }
    },
    "/v2/locations/{location_id}/refunds": {
      "get": {
        "description": "Lists refunds for one of a business's locations.\n\nRefunds with a `status` of `PENDING` are not currently included in this\nendpoint's response.\n\nMax results per [page](#paginatingresults): 50",
        "parameters": [
          {
            "description": "The ID of the location to list refunds for.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The beginning of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time minus one year.",
            "in": "query",
            "name": "begin_time",
            "required": false,
            "type": "string"
          },
          {
            "description": "The end of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time.",
            "in": "query",
            "name": "end_time",
            "required": false,
            "type": "string"
          },
          {
            "description": "The order in which results are listed in the response (`ASC` for\noldest first, `DESC` for newest first).\n\nDefault value: `DESC`",
            "enum": [
              "DESC",
              "ASC"
            ],
            "in": "query",
            "name": "sort_order",
            "required": false,
            "type": "string"
          },
          {
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Paginating results](#paginatingresults) for more information.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListRefundsResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "summary": "ListRefunds",
        "tags": [
          "Transactions"
        ],
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ]
      }
    },
    "/v2/locations/{location_id}/transactions": {
      "get": {
        "description": "Lists transactions for a particular location.\n\nMax results per [page](#paginatingresults): 50",
        "operationId": "ListTransactions",
        "parameters": [
          {
            "description": "The ID of the location to list transactions for.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The beginning of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time minus one year.",
            "in": "query",
            "name": "begin_time",
            "required": false,
            "type": "string"
          },
          {
            "description": "The end of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time.",
            "in": "query",
            "name": "end_time",
            "required": false,
            "type": "string"
          },
          {
            "description": "The order in which results are listed in the response (`ASC` for\noldest first, `DESC` for newest first).\n\nDefault value: `DESC`",
            "enum": [
              "DESC",
              "ASC"
            ],
            "in": "query",
            "name": "sort_order",
            "required": false,
            "type": "string"
          },
          {
            "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Paginating results](#paginatingresults) for more information.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListTransactionsResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "summary": "ListTransactions",
        "tags": [
          "Transactions"
        ],
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ]
      },
      "post": {
        "description": "Charges a card represented by a card nonce or a customer's card on file.\n\nYour request to this endpoint must include _either_:\n\n- A value for the `card_nonce` parameter (to charge a card nonce generated\nwith the `SqPaymentForm`)\n- Values for the `customer_card_id` and `customer_id` parameters (to charge\na customer's card on file)\n\nIn order for an e-commerce payment to potentially qualify for\n[Square chargeback protection](https://squareup.com/help/article/5394), you\n_must_ provide values for the following parameters in your request:\n\n- `buyer_email_address`\n- At least one of `billing_address` or `shipping_address`\n\nWhen this response is returned, the amount of Square's processing fee might not yet be\ncalculated. To obtain the processing fee, wait about ten seconds and call\n[RetrieveTransaction](#endpoint-retrievetransaction). See the `processing_fee_money`\nfield of each [Tender included](#type-tender) in the transaction.",
        "operationId": "Charge",
        "parameters": [
          {
            "description": "The ID of the location to associate the created transaction with.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChargeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ChargeResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "summary": "Charge",
        "tags": [
          "Transactions"
        ],
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ]
      }
    },
    "/v2/locations/{location_id}/transactions/{transaction_id}": {
      "get": {
        "description": "Retrieves details for a single transaction.",
        "operationId": "RetrieveTransaction",
        "parameters": [
          {
            "description": "The ID of the transaction's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the transaction to retrieve.",
            "in": "path",
            "name": "transaction_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RetrieveTransactionResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_READ"
            ]
          }
        ],
        "summary": "RetrieveTransaction",
        "tags": [
          "Transactions"
        ],
        "x-oauthpermissions": [
          "PAYMENTS_READ"
        ]
      }
    },
    "/v2/locations/{location_id}/transactions/{transaction_id}/capture": {
      "post": {
        "description": "Captures a transaction that was created with the [Charge](#endpoint-charge)\nendpoint with a `delay_capture` value of `true`.\n\nSee [Delayed capture transactions](/articles/delayed-capture-transactions/)\nfor more information.",
        "operationId": "CaptureTransaction",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "transaction_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CaptureTransactionResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "summary": "CaptureTransaction",
        "tags": [
          "Transactions"
        ],
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ]
      }
    },
    "/v2/locations/{location_id}/transactions/{transaction_id}/refund": {
      "post": {
        "description": "Initiates a refund for a previously charged tender.\n\nYou must issue a refund within 120 days of the associated payment. See\n(this article)[https://squareup.com/help/us/en/article/5060] for more information\non refund behavior.",
        "parameters": [
          {
            "description": "The ID of the original transaction's associated location.",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the original transaction that includes the tender to refund.",
            "in": "path",
            "name": "transaction_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "An object containing the fields to POST for the request.\n\nSee the corresponding object definition for field details.",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRefundRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateRefundResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "summary": "CreateRefund",
        "tags": [
          "Transactions"
        ],
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ]
      }
    },
    "/v2/locations/{location_id}/transactions/{transaction_id}/void": {
      "post": {
        "description": "Cancels a transaction that was created with the [Charge](#endpoint-charge)\nendpoint with a `delay_capture` value of `true`.\n\nSee [Delayed capture transactions](/articles/delayed-capture-transactions/)\nfor more information.",
        "operationId": "VoidTransaction",
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "location_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "",
            "in": "path",
            "name": "transaction_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/VoidTransactionResponse"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "PAYMENTS_WRITE"
            ]
          }
        ],
        "summary": "VoidTransaction",
        "tags": [
          "Transactions"
        ],
        "x-oauthpermissions": [
          "PAYMENTS_WRITE"
        ]
      }
    }
  },
  "definitions": {
    "Address": {
      "description": "Represents a physical address.",
      "properties": {
        "address_line_1": {
          "description": "The first line of the address.\n\nFields that start with `address_line` provide the address's most specific\ndetails, like street number, street name, and building name. They do *not*\nprovide less specific details like city, state/province, or country (these\ndetails are provided in other fields).",
          "type": "string"
        },
        "address_line_2": {
          "description": "The second line of the address, if any.",
          "type": "string"
        },
        "address_line_3": {
          "description": "The third line of the address, if any.",
          "type": "string"
        },
        "administrative_district_level_1": {
          "description": "A civil entity within the address's country. In the US, this\nis the state.",
          "type": "string"
        },
        "administrative_district_level_2": {
          "description": "A civil entity within the address's `administrative_district_level_1`.\nIn the US, this is the county.",
          "type": "string"
        },
        "administrative_district_level_3": {
          "description": "A civil entity within the address's `administrative_district_level_2`,\nif any.",
          "type": "string"
        },
        "country": {
          "description": "The address's country, in ISO 3166-1-alpha-2 format.",
          "enum": [
            "ZZ",
            "AD",
            "AE",
            "AF",
            "AG",
            "AI",
            "AL",
            "AM",
            "AO",
            "AQ",
            "AR",
            "AS",
            "AT",
            "AU",
            "AW",
            "AX",
            "AZ",
            "BA",
            "BB",
            "BD",
            "BE",
            "BF",
            "BG",
            "BH",
            "BI",
            "BJ",
            "BL",
            "BM",
            "BN",
            "BO",
            "BQ",
            "BR",
            "BS",
            "BT",
            "BV",
            "BW",
            "BY",
            "BZ",
            "CA",
            "CC",
            "CD",
            "CF",
            "CG",
            "CH",
            "CI",
            "CK",
            "CL",
            "CM",
            "CN",
            "CO",
            "CR",
            "CU",
            "CV",
            "CW",
            "CX",
            "CY",
            "CZ",
            "DE",
            "DJ",
            "DK",
            "DM",
            "DO",
            "DZ",
            "EC",
            "EE",
            "EG",
            "EH",
            "ER",
            "ES",
            "ET",
            "FI",
            "FJ",
            "FK",
            "FM",
            "FO",
            "FR",
            "GA",
            "GB",
            "GD",
            "GE",
            "GF",
            "GG",
            "GH",
            "GI",
            "GL",
            "GM",
            "GN",
            "GP",
            "GQ",
            "GR",
            "GS",
            "GT",
            "GU",
            "GW",
            "GY",
            "HK",
            "HM",
            "HN",
            "HR",
            "HT",
            "HU",
            "ID",
            "IE",
            "IL",
            "IM",
            "IN",
            "IO",
            "IQ",
            "IR",
            "IS",
            "IT",
            "JE",
            "JM",
            "JO",
            "JP",
            "KE",
            "KG",
            "KH",
            "KI",
            "KM",
            "KN",
            "KP",
            "KR",
            "KW",
            "KY",
            "KZ",
            "LA",
            "LB",
            "LC",
            "LI",
            "LK",
            "LR",
            "LS",
            "LT",
            "LU",
            "LV",
            "LY",
            "MA",
            "MC",
            "MD",
            "ME",
            "MF",
            "MG",
            "MH",
            "MK",
            "ML",
            "MM",
            "MN",
            "MO",
            "MP",
            "MQ",
            "MR",
            "MS",
            "MT",
            "MU",
            "MV",
            "MW",
            "MX",
            "MY",
            "MZ",
            "NA",
            "NC",
            "NE",
            "NF",
            "NG",
            "NI",
            "NL",
            "NO",
            "NP",
            "NR",
            "NU",
            "NZ",
            "OM",
            "PA",
            "PE",
            "PF",
            "PG",
            "PH",
            "PK",
            "PL",
            "PM",
            "PN",
            "PR",
            "PS",
            "PT",
            "PW",
            "PY",
            "QA",
            "RE",
            "RO",
            "RS",
            "RU",
            "RW",
            "SA",
            "SB",
            "SC",
            "SD",
            "SE",
            "SG",
            "SH",
            "SI",
            "SJ",
            "SK",
            "SL",
            "SM",
            "SN",
            "SO",
            "SR",
            "SS",
            "ST",
            "SV",
            "SX",
            "SY",
            "SZ",
            "TC",
            "TD",
            "TF",
            "TG",
            "TH",
            "TJ",
            "TK",
            "TL",
            "TM",
            "TN",
            "TO",
            "TR",
            "TT",
            "TV",
            "TW",
            "TZ",
            "UA",
            "UG",
            "UM",
            "US",
            "UY",
            "UZ",
            "VA",
            "VC",
            "VE",
            "VG",
            "VI",
            "VN",
            "VU",
            "WF",
            "WS",
            "YE",
            "YT",
            "ZA",
            "ZM",
            "ZW"
          ],
          "type": "string"
        },
        "first_name": {
          "description": "Optional first name when it's representing recipient.",
          "type": "string"
        },
        "last_name": {
          "description": "Optional last name when it's representing recipient.",
          "type": "string"
        },
        "locality": {
          "description": "The city or town of the address.",
          "type": "string"
        },
        "organization": {
          "description": "Optional organization name when it's representing recipient.",
          "type": "string"
        },
        "postal_code": {
          "description": "The address's postal code.",
          "type": "string"
        },
        "sublocality": {
          "description": "A civil region within the address's `locality`, if any.",
          "type": "string"
        },
        "sublocality_2": {
          "description": "A civil region within the address's `sublocality`, if any.",
          "type": "string"
        },
        "sublocality_3": {
          "description": "A civil region within the address's `sublocality_2`, if any.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BatchDeleteCatalogObjectsRequest": {
      "description": "",
      "example": {
        "request_body": {
          "object_ids": [
            "W62UWFY35CWMYGVWK6TWJDNI",
            "AA27W3M2GGTF3H6AVPNB77CK"
          ]
        },
        "request_url": "https://connect.squareup.com/v2/catalog/batch-delete"
      },
      "properties": {
        "object_ids": {
          "description": "The IDs of the [CatalogObject](#type-catalogobject)s to be deleted. When an object is deleted, other objects\nin the graph that depend on that object will be deleted as well (for example, deleting a\n[CatalogItem](#type-catalogitem) will delete its [CatalogItemVariation](#type-catalogitemvariation)s).",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsRequest.csharp",
        "php": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsRequest.php",
        "python": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsRequest.python",
        "ruby": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsRequest.ruby"
      }
    },
    "BatchDeleteCatalogObjectsResponse": {
      "description": "",
      "example": {
        "deleted_at": "2016-11-16T22:25:24.878Z",
        "deleted_object_ids": [
          "W62UWFY35CWMYGVWK6TWJDNI",
          "AA27W3M2GGTF3H6AVPNB77CK"
        ]
      },
      "properties": {
        "deleted_at": {
          "description": "The database [timestamp](#workingwithdates) of this deletion in RFC 3339 format, e.g., \"2016-09-04T23:59:33.123Z\".",
          "type": "string"
        },
        "deleted_object_ids": {
          "description": "The IDs of all [CatalogObject](#type-catalogobject)s deleted by this request.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "errors": {
          "description": "The set of [Error](#type-error)s encountered.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsResponse.csharp",
        "php": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsResponse.php",
        "python": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsResponse.python",
        "ruby": "/sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsResponse.ruby"
      }
    },
    "BatchRetrieveCatalogObjectsRequest": {
      "description": "",
      "example": {
        "request_body": {
          "include_related_objects": true,
          "object_ids": [
            "W62UWFY35CWMYGVWK6TWJDNI",
            "AA27W3M2GGTF3H6AVPNB77CK"
          ]
        },
        "request_url": "https://connect.squareup.com/v2/catalog/batch-retrieve"
      },
      "properties": {
        "include_related_objects": {
          "description": "If `true`, the response will include additional objects that are related to the\nrequested objects, as follows:\n\nIf the `objects` field of the response contains a [CatalogItem](#type-catalogitem),\nits associated [CatalogCategory](#type-catalogcategory), [CatalogTax](#type-catalogtax)es, and\n[CatalogModifierList](#type-catalogmodifierlist)s will be returned in the `related_objects` field of the\nresponse. If the `objects` field of the response contains a [CatalogItemVariation](#type-catalogitemvariation),\nits parent [CatalogItem](#type-catalogitem) will be returned in the `related_objects` field of\nthe response.",
          "type": "boolean"
        },
        "object_ids": {
          "description": "The IDs of the [CatalogObject](#type-catalogobject)s to be retrieved.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "object_ids"
      ],
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsRequest.csharp",
        "php": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsRequest.php",
        "python": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsRequest.python",
        "ruby": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsRequest.ruby"
      }
    },
    "BatchRetrieveCatalogObjectsResponse": {
      "description": "",
      "example": {
        "objects": [
          {
            "id": "W62UWFY35CWMYGVWK6TWJDNI",
            "is_deleted": false,
            "item_data": {
              "category_id": "BJNQCF2FJ6S6UIDT65ABHLRX",
              "description": "Hot Leaf Juice",
              "name": "Tea",
              "tax_ids": [
                "HURXQOOAIC4IZSI2BEXQRYFY"
              ],
              "variations": [
                {
                  "id": "2TZFAOHWGG7PAK2QEXWYPZSP",
                  "is_deleted": false,
                  "item_variation_data": {
                    "item_id": "W62UWFY35CWMYGVWK6TWJDNI",
                    "name": "Mug",
                    "ordinal": 0,
                    "price_money": {
                      "amount": 150,
                      "currency": "USD"
                    },
                    "pricing_type": "FIXED_PRICING"
                  },
                  "present_at_all_locations": true,
                  "type": "ITEM_VARIATION",
                  "updated_at": "2016-11-16T22:25:24.878Z",
                  "version": 1479335124878
                }
              ]
            },
            "present_at_all_locations": true,
            "type": "ITEM",
            "updated_at": "2016-11-16T22:25:24.878Z",
            "version": 1479335124878
          },
          {
            "id": "AA27W3M2GGTF3H6AVPNB77CK",
            "is_deleted": false,
            "item_data": {
              "category_id": "BJNQCF2FJ6S6UIDT65ABHLRX",
              "description": "Hot Bean Juice",
              "name": "Coffee",
              "tax_ids": [
                "HURXQOOAIC4IZSI2BEXQRYFY"
              ],
              "variations": [
                {
                  "id": "LBTYIHNHU52WOIHWT7SNRIYH",
                  "is_deleted": false,
                  "item_variation_data": {
                    "item_id": "AA27W3M2GGTF3H6AVPNB77CK",
                    "name": "Regular",
                    "ordinal": 0,
                    "price_money": {
                      "amount": 250,
                      "currency": "USD"
                    },
                    "pricing_type": "FIXED_PRICING"
                  },
                  "present_at_all_locations": true,
                  "type": "ITEM_VARIATION",
                  "updated_at": "2016-11-16T22:25:24.878Z",
                  "version": 1479335124878
                },
                {
                  "id": "PKYIC7HGGKW5CYVSCVDEIMHY",
                  "is_deleted": false,
                  "item_variation_data": {
                    "item_id": "AA27W3M2GGTF3H6AVPNB77CK",
                    "name": "Large",
                    "ordinal": 1,
                    "price_money": {
                      "amount": 350,
                      "currency": "USD"
                    },
                    "pricing_type": "FIXED_PRICING"
                  },
                  "present_at_all_locations": true,
                  "type": "ITEM_VARIATION",
                  "updated_at": "2016-11-16T22:25:24.878Z",
                  "version": 1479335124878
                }
              ]
            },
            "present_at_all_locations": true,
            "type": "ITEM",
            "updated_at": "2016-11-16T22:25:24.878Z",
            "version": 1479335124878
          }
        ],
        "related_objects": [
          {
            "category_data": {
              "name": "Beverages"
            },
            "id": "BJNQCF2FJ6S6UIDT65ABHLRX",
            "is_deleted": false,
            "present_at_all_locations": true,
            "type": "CATEGORY",
            "updated_at": "2016-11-16T22:25:24.878Z",
            "version": 1479335124878
          },
          {
            "id": "HURXQOOAIC4IZSI2BEXQRYFY",
            "is_deleted": false,
            "present_at_all_locations": true,
            "tax_data": {
              "calculation_phase": "TAX_SUBTOTAL_PHASE",
              "enabled": true,
              "inclusion_type": "ADDITIVE",
              "name": "Sales Tax",
              "percentage": "5.0"
            },
            "type": "TAX",
            "updated_at": "2016-11-16T22:25:24.878Z",
            "version": 1479335124878
          }
        ]
      },
      "properties": {
        "errors": {
          "description": "The set of [Error](#type-error)s encountered.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        },
        "objects": {
          "description": "A list of [CatalogObject](#type-catalogobject)s returned.",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "type": "array"
        },
        "related_objects": {
          "description": "A list of [CatalogObject](#type-catalogobject)s referenced by the object in the `objects` field.",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsResponse.csharp",
        "php": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsResponse.php",
        "python": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsResponse.python",
        "ruby": "/sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsResponse.ruby"
      }
    },
    "BatchUpsertCatalogObjectsRequest": {
      "description": "",
      "example": {
        "request_body": {
          "batches": [
            {
              "objects": [
                {
                  "id": "#Tea",
                  "item_data": {
                    "category_id": "#Beverages",
                    "description": "Hot Leaf Juice",
                    "name": "Tea",
                    "tax_ids": [
                      "#SalesTax"
                    ],
                    "variations": [
                      {
                        "id": "#Tea_Mug",
                        "item_variation_data": {
                          "item_id": "#Tea",
                          "name": "Mug",
                          "price_money": {
                            "amount": 150,
                            "currency": "USD"
                          },
                          "pricing_type": "FIXED_PRICING"
                        },
                        "present_at_all_locations": true,
                        "type": "ITEM_VARIATION"
                      }
                    ]
                  },
                  "present_at_all_locations": true,
                  "type": "ITEM"
                },
                {
                  "id": "#Coffee",
                  "item_data": {
                    "category_id": "#Beverages",
                    "description": "Hot Bean Juice",
                    "name": "Coffee",
                    "tax_ids": [
                      "#SalesTax"
                    ],
                    "variations": [
                      {
                        "id": "#Coffee_Regular",
                        "item_variation_data": {
                          "item_id": "#Coffee",
                          "name": "Regular",
                          "price_money": {
                            "amount": 250,
                            "currency": "USD"
                          },
                          "pricing_type": "FIXED_PRICING"
                        },
                        "present_at_all_locations": true,
                        "type": "ITEM_VARIATION"
                      },
                      {
                        "id": "#Coffee_Large",
                        "item_variation_data": {
                          "item_id": "#Coffee",
                          "name": "Large",
                          "price_money": {
                            "amount": 350,
                            "currency": "USD"
                          },
                          "pricing_type": "FIXED_PRICING"
                        },
                        "present_at_all_locations": true,
                        "type": "ITEM_VARIATION"
                      }
                    ]
                  },
                  "present_at_all_locations": true,
                  "type": "ITEM"
                },
                {
                  "category_data": {
                    "name": "Beverages"
                  },
                  "id": "#Beverages",
                  "present_at_all_locations": true,
                  "type": "CATEGORY"
                },
                {
                  "id": "#SalesTax",
                  "present_at_all_locations": true,
                  "tax_data": {
                    "applies_to_custom_amounts": true,
                    "calculation_phase": "TAX_SUBTOTAL_PHASE",
                    "enabled": true,
                    "inclusion_type": "ADDITIVE",
                    "name": "Sales Tax",
                    "percentage": "5.0"
                  },
                  "type": "TAX"
                }
              ]
            }
          ],
          "idempotency_key": "789ff020-f723-43a9-b4b5-43b5dc1fa3dc"
        },
        "request_url": "https://connect.squareup.com/v2/catalog/batch-upsert"
      },
      "properties": {
        "batches": {
          "description": "A batch of [CatalogObject](#type-catalogobject)s to be inserted/updated atomically.\nThe objects within a batch will be inserted in an all-or-nothing fashion, i.e., if an error occurs\nattempting to insert or update an object within a batch, the entire batch will be rejected. However, an error\nin one batch will not affect other batches within the same request.\n\nFor each object, its `updated_at` field is ignored and replaced with a current [timestamp](#workingwithdates), and its\n`is_deleted` field must not be set to `true`.\n\nTo modify an existing object, supply its ID. To create a new object, use an ID starting\nwith `#`. These IDs may be used to create relationships between an object and attributes of\nother objects that reference it. For example, you can create a [CatalogItem](#type-catalogitem) with\nID `#ABC` and a [CatalogItemVariation](#type-catalogitemvariation) with its `item_id` attribute set to\n`#ABC` in order to associate the [CatalogItemVariation](#type-catalogitemvariation) with its parent\n[CatalogItem](#type-catalogitem).\n\nAny `#`-prefixed IDs are valid only within a single atomic batch, and will be replaced by server-generated IDs.\n\nEach batch may contain up to 1,000 objects. The total number of objects across all batches for a single request\nmay not exceed 10,000. If either of these limits is violated, an error will be returned and no objects will\nbe inserted or updated.",
          "items": {
            "$ref": "#/definitions/CatalogObjectBatch"
          },
          "type": "array"
        },
        "idempotency_key": {
          "description": "A value you specify that uniquely identifies this\nrequest among all your requests. A common way to create\na valid idempotency key is to use a Universally unique\nidentifier (UUID).\n\nIf you're unsure whether a particular request was successful,\nyou can reattempt it with the same idempotency key without\nworrying about creating duplicate objects.\n\nSee [Idempotency keys](#idempotencykeys) for more information.",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "idempotency_key"
      ],
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsRequest.csharp",
        "php": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsRequest.php",
        "python": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsRequest.python",
        "ruby": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsRequest.ruby"
      }
    },
    "BatchUpsertCatalogObjectsResponse": {
      "description": "",
      "example": {
        "id_mappings": [
          {
            "client_object_id": "#Tea",
            "object_id": "ZSDZN34NAXDLC6D5ZQMNSOUM"
          },
          {
            "client_object_id": "#Coffee",
            "object_id": "PJMCEBHHUS3OKDB6PYUHLCPP"
          },
          {
            "client_object_id": "#Beverages",
            "object_id": "LYT72K3WGJFFCIMB63XARP3I"
          },
          {
            "client_object_id": "#SalesTax",
            "object_id": "XHSHLHNWSI3HVI4BW5ZUZXI3"
          },
          {
            "client_object_id": "#Tea_Mug",
            "object_id": "NAYHET5R52MIYCEF34ZMAHFM"
          },
          {
            "client_object_id": "#Coffee_Regular",
            "object_id": "OTYDX45SPG7LJQUVCBZI4INH"
          },
          {
            "client_object_id": "#Coffee_Large",
            "object_id": "GZDA3JB37FYVOPI4AOEBOITI"
          }
        ],
        "objects": [
          {
            "id": "ZSDZN34NAXDLC6D5ZQMNSOUM",
            "is_deleted": false,
            "item_data": {
              "category_id": "LYT72K3WGJFFCIMB63XARP3I",
              "description": "Hot Leaf Juice",
              "name": "Tea",
              "tax_ids": [
                "XHSHLHNWSI3HVI4BW5ZUZXI3"
              ],
              "variations": [
                {
                  "id": "NAYHET5R52MIYCEF34ZMAHFM",
                  "is_deleted": false,
                  "item_variation_data": {
                    "item_id": "ZSDZN34NAXDLC6D5ZQMNSOUM",
                    "name": "Mug",
                    "ordinal": 0,
                    "price_money": {
                      "amount": 150,
                      "currency": "USD"
                    },
                    "pricing_type": "FIXED_PRICING"
                  },
                  "present_at_all_locations": true,
                  "type": "ITEM_VARIATION",
                  "updated_at": "2017-05-10T18:48:39.798Z",
                  "version": 1494442119798
                }
              ]
            },
            "present_at_all_locations": true,
            "type": "ITEM",
            "updated_at": "2017-05-10T18:48:39.798Z",
            "version": 1494442119798
          },
          {
            "id": "PJMCEBHHUS3OKDB6PYUHLCPP",
            "is_deleted": false,
            "item_data": {
              "category_id": "LYT72K3WGJFFCIMB63XARP3I",
              "description": "Hot Bean Juice",
              "name": "Coffee",
              "tax_ids": [
                "XHSHLHNWSI3HVI4BW5ZUZXI3"
              ],
              "variations": [
                {
                  "id": "OTYDX45SPG7LJQUVCBZI4INH",
                  "is_deleted": false,
                  "item_variation_data": {
                    "item_id": "PJMCEBHHUS3OKDB6PYUHLCPP",
                    "name": "Regular",
                    "ordinal": 0,
                    "price_money": {
                      "amount": 250,
                      "currency": "USD"
                    },
                    "pricing_type": "FIXED_PRICING"
                  },
                  "present_at_all_locations": true,
                  "type": "ITEM_VARIATION",
                  "updated_at": "2017-05-10T18:48:39.798Z",
                  "version": 1494442119798
                },
                {
                  "id": "GZDA3JB37FYVOPI4AOEBOITI",
                  "is_deleted": false,
                  "item_variation_data": {
                    "item_id": "PJMCEBHHUS3OKDB6PYUHLCPP",
                    "name": "Large",
                    "ordinal": 1,
                    "price_money": {
                      "amount": 350,
                      "currency": "USD"
                    },
                    "pricing_type": "FIXED_PRICING"
                  },
                  "present_at_all_locations": true,
                  "type": "ITEM_VARIATION",
                  "updated_at": "2017-05-10T18:48:39.798Z",
                  "version": 1494442119798
                }
              ]
            },
            "present_at_all_locations": true,
            "type": "ITEM",
            "updated_at": "2017-05-10T18:48:39.798Z",
            "version": 1494442119798
          },
          {
            "category_data": {
              "name": "Beverages"
            },
            "id": "LYT72K3WGJFFCIMB63XARP3I",
            "is_deleted": false,
            "present_at_all_locations": true,
            "type": "CATEGORY",
            "updated_at": "2017-05-10T18:48:39.798Z",
            "version": 1494442119798
          },
          {
            "id": "XHSHLHNWSI3HVI4BW5ZUZXI3",
            "is_deleted": false,
            "present_at_all_locations": true,
            "tax_data": {
              "applies_to_custom_amounts": true,
              "calculation_phase": "TAX_SUBTOTAL_PHASE",
              "enabled": true,
              "inclusion_type": "ADDITIVE",
              "name": "Sales Tax",
              "percentage": "5.0"
            },
            "type": "TAX",
            "updated_at": "2017-05-10T18:48:39.798Z",
            "version": 1494442119798
          }
        ]
      },
      "properties": {
        "errors": {
          "description": "The set of [Error](#type-error)s encountered.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        },
        "id_mappings": {
          "description": "The mapping between client and server IDs for this Upsert.",
          "items": {
            "$ref": "#/definitions/CatalogIdMapping"
          },
          "type": "array"
        },
        "objects": {
          "description": "The created [CatalogObject](#type-catalogobject)s",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "type": "array"
        },
        "updated_at": {
          "description": "The database [timestamp](#workingwithdates) of this update in RFC 3339 format, e.g., \"2016-09-04T23:59:33.123Z\".",
          "type": "string"
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsResponse.csharp",
        "php": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsResponse.php",
        "python": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsResponse.python",
        "ruby": "/sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsResponse.ruby"
      }
    },
    "CaptureTransactionRequest": {
      "description": "",
      "example": {
        "request_url": "https://connect.squareup.com/v2/locations/LOCATION_ID/transactions/TRANSACTION_ID/capture"
      },
      "properties": {},
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/CaptureTransaction/CaptureTransactionRequest.csharp",
        "php": "/sdk_samples/CaptureTransaction/CaptureTransactionRequest.php",
        "python": "/sdk_samples/CaptureTransaction/CaptureTransactionRequest.python",
        "ruby": "/sdk_samples/CaptureTransaction/CaptureTransactionRequest.ruby"
      }
    },
    "CaptureTransactionResponse": {
      "description": "Defines the fields that are included in the response body of\na request to the [CaptureTransaction](#endpoint-capturetransaction) endpoint.",
      "example": {},
      "properties": {
        "errors": {
          "description": "Any errors that occurred during the request.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/CaptureTransaction/CaptureTransactionResponse.csharp",
        "php": "/sdk_samples/CaptureTransaction/CaptureTransactionResponse.php",
        "python": "/sdk_samples/CaptureTransaction/CaptureTransactionResponse.python",
        "ruby": "/sdk_samples/CaptureTransaction/CaptureTransactionResponse.ruby"
      }
    },
    "Card": {
      "description": "Represents the non-confidential details of a credit card.",
      "properties": {
        "billing_address": {
          "$ref": "#/definitions/Address",
          "description": "The card's billing address. This value is present only if this object\nrepresents a customer's card on file."
        },
        "card_brand": {
          "description": "The card's brand (such as `VISA`). See [CardBrand](#type-cardbrand)\nfor all possible values.",
          "enum": [
            "OTHER_BRAND",
            "VISA",
            "MASTERCARD",
            "AMERICAN_EXPRESS",
            "DISCOVER",
            "DISCOVER_DINERS",
            "JCB",
            "CHINA_UNIONPAY",
            "SQUARE_GIFT_CARD"
          ],
          "type": "string"
        },
        "cardholder_name": {
          "description": "The cardholder name. This value is present only if this object\nrepresents a customer's card on file.",
          "type": "string"
        },
        "exp_month": {
          "description": "The month of the card's expiration date. This value is always between\n`1` and `12`, inclusive.",
          "format": "int64",
          "type": "integer"
        },
        "exp_year": {
          "description": "The four-digit year of the card's expiration date.",
          "format": "int64",
          "type": "integer"
        },
        "fingerprint": {
          "description": "The unique string fingerprint for the card. \nThe fingerprint is based on the credit card number and is unique to the merchant. \nIf a card is used at multiple locations for the same merchant, it will have the same fingerprint in each case.\nNote: Fingerprint may not exist on old transactions.",
          "type": "string"
        },
        "id": {
          "description": "The card's unique ID, if any.",
          "type": "string"
        },
        "last_4": {
          "description": "The last 4 digits of the card's number.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CardBrand": {
      "description": "Indicates a credit card's brand, such as `VISA`.",
      "enum": [
        "OTHER_BRAND",
        "VISA",
        "MASTERCARD",
        "AMERICAN_EXPRESS",
        "DISCOVER",
        "DISCOVER_DINERS",
        "JCB",
        "CHINA_UNIONPAY",
        "SQUARE_GIFT_CARD"
      ],
      "type": "string"
    },
    "CatalogCategory": {
      "description": "A category to which an [CatalogItem](#type-catalogitem) belongs in the Catalog object model.",
      "example": {
        "object": {
          "category_data": {
            "name": "Beverages"
          },
          "id": "#Beverages",
          "present_at_all_locations": true,
          "type": "CATEGORY"
        }
      },
      "properties": {
        "name": {
          "description": "The category's name. Searchable.",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "CatalogDiscount": {
      "description": "A discount in the Catalog object model.",
      "example": {
        "object": {
          "discount_data": {
            "discount_type": "FIXED_PERCENTAGE",
            "label_color": "red",
            "name": "Welcome to the Dark(Roast) Side!",
            "percentage": "5.4",
            "pin_required": false
          },
          "id": "#Maythe4th",
          "present_at_all_locations": true,
          "type": "DISCOUNT"
        }
      },
      "properties": {
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of the discount. Specify an amount of `0` if `discount_type` is `VARIABLE_AMOUNT`.\n\nDo not include this field for percentage-based or variable discounts."
        },
        "discount_type": {
          "description": "Indicates whether the discount is a fixed amount or percentage, or entered at the time of sale.\nSee [CatalogDiscountType](#type-catalogdiscounttype) for all possible values.",
          "enum": [
            "FIXED_PERCENTAGE",
            "FIXED_AMOUNT",
            "VARIABLE_PERCENTAGE",
            "VARIABLE_AMOUNT"
          ],
          "type": "string"
        },
        "label_color": {
          "description": "The color of the discount's display label in the Square Point of Sale app.",
          "type": "string"
        },
        "name": {
          "description": "The discount's name. Searchable.",
          "minLength": 1,
          "type": "string"
        },
        "percentage": {
          "description": "The percentage of the discount as a string representation of a decimal number, using a `.` as the decimal\nseparator and without a `%` sign. A value of `7.5` corresponds to `7.5%`. Specify a percentage of `0` if `discount_type`\nis `VARIABLE_PERCENTAGE`.\n\nDo not include this field for amount-based or variable discounts.",
          "type": "string"
        },
        "pin_required": {
          "description": "Indicates whether a mobile staff member needs to enter their PIN to apply the\ndiscount to a payment in the Square Point of Sale app.",
          "type": "boolean"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "CatalogDiscountType": {
      "description": "How to apply a [CatalogDiscount](#type-catalogdiscount) to a [CatalogItem](#type-catalogitem).",
      "enum": [
        "FIXED_PERCENTAGE",
        "FIXED_AMOUNT",
        "VARIABLE_PERCENTAGE",
        "VARIABLE_AMOUNT"
      ],
      "type": "string"
    },
    "CatalogIdMapping": {
      "description": "A mapping between a client-supplied temporary ID and a permanent server ID.",
      "properties": {
        "client_object_id": {
          "description": "The client-supplied, temporary `#`-prefixed ID for a new [CatalogObject](#type-catalogobject).",
          "type": "string"
        },
        "object_id": {
          "description": "The permanent ID for the [CatalogObject](#type-catalogobject) created by the server.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CatalogInfoRequest": {
      "description": "",
      "example": {
        "request_url": "https://connect.squareup.com/v2/catalog/info"
      },
      "properties": {},
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoRequest.csharp",
        "php": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoRequest.php",
        "python": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoRequest.python",
        "ruby": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoRequest.ruby"
      }
    },
    "CatalogInfoResponse": {
      "description": "",
      "example": {
        "limits": {
          "batch_delete_max_object_ids": 200,
          "batch_retrieve_max_object_ids": 1000,
          "batch_upsert_max_objects_per_batch": 1000,
          "batch_upsert_max_total_objects": 10000,
          "search_max_page_limit": 1000,
          "update_item_modifier_lists_max_item_ids": 1000,
          "update_item_modifier_lists_max_modifier_lists_to_disable": 1000,
          "update_item_modifier_lists_max_modifier_lists_to_enable": 1000,
          "update_item_taxes_max_item_ids": 1000,
          "update_item_taxes_max_taxes_to_disable": 1000,
          "update_item_taxes_max_taxes_to_enable": 1000
        }
      },
      "properties": {
        "errors": {
          "description": "The set of [Error](#type-error)s encountered.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        },
        "limits": {
          "$ref": "#/definitions/CatalogInfoResponseLimits",
          "description": ""
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoResponse.csharp",
        "php": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoResponse.php",
        "python": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoResponse.python",
        "ruby": "/sdk_samples/Catalog/CatalogInfo/CatalogInfoResponse.ruby"
      }
    },
    "CatalogInfoResponseLimits": {
      "description": "",
      "properties": {
        "batch_delete_max_object_ids": {
          "description": "The maximum number of object IDs that may be included in a single\n`/v2/catalog/batch-delete` request.",
          "type": "integer"
        },
        "batch_retrieve_max_object_ids": {
          "description": "The maximum number of object IDs that may appear in a `/v2/catalog/batch-retrieve`\nrequest.",
          "type": "integer"
        },
        "batch_upsert_max_objects_per_batch": {
          "description": "The maximum number of objects that may appear within a single batch in a\n`/v2/catalog/batch-upsert` request.",
          "type": "integer"
        },
        "batch_upsert_max_total_objects": {
          "description": "The maximum number of objects that may appear across all batches in a\n`/v2/catalog/batch-upsert` request.",
          "type": "integer"
        },
        "search_max_page_limit": {
          "description": "The maximum number of results that may be returned in a page of a\n`/v2/catalog/search` response.",
          "type": "integer"
        },
        "update_item_modifier_lists_max_item_ids": {
          "description": "The maximum number of item IDs that may be included in a single\n`/v2/catalog/update-item-modifier-lists` request.",
          "type": "integer"
        },
        "update_item_modifier_lists_max_modifier_lists_to_disable": {
          "description": "The maximum number of modifier list IDs to be disabled that may be included in\na single `/v2/catalog/update-item-modifier-lists` request.",
          "type": "integer"
        },
        "update_item_modifier_lists_max_modifier_lists_to_enable": {
          "description": "The maximum number of modifier list IDs to be enabled that may be included in\na single `/v2/catalog/update-item-modifier-lists` request.",
          "type": "integer"
        },
        "update_item_taxes_max_item_ids": {
          "description": "The maximum number of item IDs that may be included in a single\n`/v2/catalog/update-item-taxes` request.",
          "type": "integer"
        },
        "update_item_taxes_max_taxes_to_disable": {
          "description": "The maximum number of tax IDs to be disabled that may be included in a single\n`/v2/catalog/update-item-taxes` request.",
          "type": "integer"
        },
        "update_item_taxes_max_taxes_to_enable": {
          "description": "The maximum number of tax IDs to be enabled that may be included in a single\n`/v2/catalog/update-item-taxes` request.",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "CatalogItem": {
      "description": "An item (i.e., product family) in the Catalog object model.",
      "example": {
        "object": {
          "id": "#Cocoa",
          "item_data": {
            "abbreviation": "Ch",
            "description": "Hot chocolate",
            "name": "Cocoa",
            "visibility": "PRIVATE"
          },
          "present_at_all_locations": true,
          "type": "ITEM"
        }
      },
      "properties": {
        "abbreviation": {
          "description": "The text of the item's display label in the Square Point of Sale app. Only up to the first five characters of the string are used.  Searchable.",
          "type": "string"
        },
        "available_electronically": {
          "description": "If `true`, the item can be added to electronically fulfilled orders from the merchant's online store.",
          "type": "boolean"
        },
        "available_for_pickup": {
          "description": "If `true`, the item can be added to pickup orders from the merchant's online store.",
          "type": "boolean"
        },
        "available_online": {
          "description": "If `true`, the item can be added to shipping orders from the merchant's online store.",
          "type": "boolean"
        },
        "category_id": {
          "description": "The ID of the item's category, if any.",
          "type": "string"
        },
        "description": {
          "description": "The item's description. Searchable.",
          "type": "string"
        },
        "image_url": {
          "description": "The URL of an image representing this item.",
          "type": "string"
        },
        "label_color": {
          "description": "The color of the item's display label in the Square Point of Sale app.",
          "type": "string"
        },
        "modifier_list_info": {
          "description": "A set of [CatalogItemModifierListInfo](#type-catalogitemmodifierlistinfo) objects\nrepresenting the modifier lists that apply to this item, along with the overrides and min\nand max limits that are specific to this item. [CatalogModifierList](#type-catalogmodifierlist)s\nmay also be added to or deleted from an item using `UpdateItemModifierLists`.",
          "items": {
            "$ref": "#/definitions/CatalogItemModifierListInfo"
          },
          "type": "array"
        },
        "name": {
          "description": "The item's name. Searchable.",
          "minLength": 1,
          "type": "string"
        },
        "product_type": {
          "description": "The product type of the item. May not be changed once an item has been created.\n\nOnly items of product type `REGULAR` may be created by this API; items with other product\ntypes are read-only. See [CatalogItemProductType](#type-catalogitemproducttype) for all possible values.",
          "enum": [
            "REGULAR",
            "GIFT_CARD",
            "APPOINTMENTS_SERVICE",
            "RETAIL_ITEM",
            "RESTAURANT_ITEM"
          ],
          "type": "string"
        },
        "skip_modifier_screen": {
          "description": "If `false`, the Square Point of Sale app will present the [CatalogItem](#type-catalogitem)'s\ndetails screen immediately, allowing the merchant to choose [CatalogModifier](#type-catalogmodifier)s\nbefore adding the item to the cart.  This is the default behavior.\n\nIf `true`, the Square Point of Sale app will immediately add the item to the cart with the pre-selected\nmodifiers, and merchants can edit modifiers by drilling down onto the item's details.\n\nThird-party clients are encouraged to implement similar behaviors.",
          "type": "boolean"
        },
        "tax_ids": {
          "description": "A set of IDs indicating the [CatalogTax](#type-catalogtax)es that are enabled for\nthis item. When updating an item, any taxes listed here will be added to the item.\n[CatalogTax](#type-catalogtax)es may also be added to or deleted from an item using `UpdateItemTaxes`.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "variations": {
          "description": "A list of [CatalogObject](#type-catalogobject)s containing the [CatalogItemVariation](#type-catalogitemvariation)s for this item.",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "type": "array"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "CatalogItemModifierListInfo": {
      "description": "Controls the properties of a [CatalogModifierList](#type-catalogmodifierlist) as it applies to this [CatalogItem](#type-catalogitem).",
      "properties": {
        "enabled": {
          "description": "If `true`, enable this [CatalogModifierList](#type-catalogmodifierlist).",
          "type": "boolean"
        },
        "max_selected_modifiers": {
          "description": "If zero or larger, the largest number of [CatalogModifier](#type-catalogmodifier)s that can be selected from this [CatalogModifierList](#type-catalogmodifierlist).",
          "type": "integer"
        },
        "min_selected_modifiers": {
          "description": "If zero or larger, the smallest number of [CatalogModifier](#type-catalogmodifier)s that must be selected from this [CatalogModifierList](#type-catalogmodifierlist).",
          "type": "integer"
        },
        "modifier_list_id": {
          "description": "The ID of the [CatalogModifierList](#type-catalogmodifierlist) controlled by this [CatalogModifierListInfo](#type-catalogmodifierlistinfo).",
          "minLength": 1,
          "type": "string"
        },
        "modifier_overrides": {
          "description": "A set of [CatalogModifierOverride](#type-catalogmodifieroverride) objects that override whether a given [CatalogModifier](#type-catalogmodifier) is enabled by default.",
          "items": {
            "$ref": "#/definitions/CatalogModifierOverride"
          },
          "type": "array"
        }
      },
      "required": [
        "modifier_list_id"
      ],
      "type": "object"
    },
    "CatalogItemProductType": {
      "description": "The type of a [CatalogItem](#type-catalogitem). Connect V2 only allows the creation of `REGULAR` items.",
      "enum": [
        "REGULAR",
        "GIFT_CARD",
        "APPOINTMENTS_SERVICE",
        "RETAIL_ITEM",
        "RESTAURANT_ITEM"
      ],
      "type": "string"
    },
    "CatalogItemVariation": {
      "description": "An item variation (i.e., product) in the Catalog object model.",
      "example": {
        "object": {
          "id": "#Coffee_Regular",
          "item_variation_data": {
            "name": "Regular",
            "price_money": {
              "amount": 250,
              "currency": "USD"
            },
            "pricing_type": "FIXED_PRICING"
          },
          "present_at_all_locations": true,
          "type": "ITEM_VARIATION"
        }
      },
      "properties": {
        "inventory_alert_threshold": {
          "description": "If the inventory quantity for the variation is less than or equal to this value and `inventory_alert_type`\nis `LOW_QUANTITY`, the variation displays an alert in the merchant dashboard.\n\nThis value is always an integer.",
          "format": "int64",
          "type": "integer"
        },
        "inventory_alert_type": {
          "description": "Indicates whether the item variation displays an alert when its inventory quantity is less than or equal\nto its `inventory_alert_threshold`. See [InventoryAlertType](#type-inventoryalerttype) for all possible values.",
          "enum": [
            "NONE",
            "LOW_QUANTITY"
          ],
          "type": "string"
        },
        "item_id": {
          "description": "The ID of the [CatalogItem](#type-catalogitem) associated with this item variation. Searchable.",
          "type": "string"
        },
        "location_overrides": {
          "description": "Per-[location][#type-location] price and inventory overrides.",
          "items": {
            "$ref": "#/definitions/ItemVariationLocationOverrides"
          },
          "type": "array"
        },
        "name": {
          "description": "The item variation's name. Searchable.",
          "type": "string"
        },
        "price_money": {
          "$ref": "#/definitions/Money",
          "description": "The item variation's price, if fixed pricing is used."
        },
        "pricing_type": {
          "description": "Indicates whether the item variation's price is fixed or determined at the time\nof sale. See [CatalogPricingType](#type-catalogpricingtype) for all possible values.",
          "enum": [
            "FIXED_PRICING",
            "VARIABLE_PRICING"
          ],
          "type": "string"
        },
        "service_duration": {
          "description": "If the [CatalogItem](#type-catalogitem) that owns this item variation is of type\n`APPOINTMENTS_SERVICE`, then this is the duration of the service in milliseconds. For\nexample, a 30 minute appointment would have the value `1800000`, which is equal to\n30 (minutes) * 60 (seconds per minute) * 1000 (milliseconds per second).",
          "format": "int64",
          "type": "integer"
        },
        "sku": {
          "description": "The item variation's SKU, if any. Searchable.",
          "type": "string"
        },
        "track_inventory": {
          "description": "If `true`, inventory tracking is active for the variation.",
          "type": "boolean"
        },
        "upc": {
          "description": "The item variation's UPC, if any. Searchable.",
          "type": "string"
        },
        "user_data": {
          "description": "Arbitrary user metadata to associate with the item variation. Cannot exceed 255 characters. Searchable.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CatalogModifier": {
      "description": "A modifier in the Catalog object model.",
      "example": {
        "object": {
          "item_modifier": {
            "name": "Almond Milk",
            "price_money": {
              "amount": 250,
              "currency": "USD"
            }
          },
          "present_at_all_locations": true,
          "type": "MODIFIER"
        }
      },
      "properties": {
        "name": {
          "description": "The modifier's name. Searchable.",
          "minLength": 1,
          "type": "string"
        },
        "price_money": {
          "$ref": "#/definitions/Money",
          "description": "The modifier's price."
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "CatalogModifierList": {
      "description": "A modifier list in the Catalog object model. A [CatalogModifierList](#type-catalogmodifierlist)\ncontains [Modifier](#type-catalogmodifier)s that can be applied to a [CatalogItem](#type-catalogitem)\nat the time of sale.\n\nFor example, a modifier list \"Condiments\" that would apply to a \"Hot Dog\" [CatalogItem](#type-catalogitem) might\ncontain [CatalogModifier](#type-catalogmodifier)s \"Ketchup\", \"Mustard\", and \"Relish\". The\n`selection_type` field specifies whether or not multiple selections from the modifier list are allowed.",
      "example": {
        "id": "#MilkType",
        "modifier_list_data": {
          "modifiers": [
            {
              "item_modifier": {
                "name": "Whole Milk",
                "price_money": {
                  "amount": 0,
                  "currency": "USD"
                }
              },
              "present_at_all_locations": true,
              "type": "MODIFIER"
            },
            {
              "item_modifier": {
                "name": "Almond Milk",
                "price_money": {
                  "amount": 250,
                  "currency": "USD"
                }
              },
              "present_at_all_locations": true,
              "type": "MODIFIER"
            },
            {
              "item_modifier": {
                "name": "Soy Milk",
                "price_money": {
                  "amount": 250,
                  "currency": "USD"
                }
              },
              "present_at_all_locations": true,
              "type": "MODIFIER"
            }
          ],
          "name": "Milk Type",
          "selection_type": "SINGLE"
        },
        "present_at_all_locations": true,
        "type": "MODIFIER_LIST"
      },
      "properties": {
        "modifiers": {
          "description": "The options included in the [CatalogModifierList](#type-catalogmodifierlist).\nYou must include at least one [CatalogModifier](#type-catalogmodifier).\nEach [CatalogObject](#type-catalogobject) must have type `MODIFIER` and contain\n[CatalogModifier](#type-catalogmodifier) data.",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "type": "array"
        },
        "name": {
          "description": "The [CatalogModifierList](#type-catalogmodifierlist)'s name. Searchable.",
          "minLength": 1,
          "type": "string"
        },
        "selection_type": {
          "description": "Indicates whether multiple options from the [CatalogModifierList](#type-catalogmodifierlist)\ncan be applied to a single [CatalogItem](#type-catalogitem). See\n[CatalogModifierListSelectionType](#type-catalogmodifierlistselectiontype) for all possible values.",
          "enum": [
            "SINGLE",
            "MULTIPLE"
          ],
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "CatalogModifierListSelectionType": {
      "description": "Indicates whether a [CatalogModifierList](#type-catalogmodifierlist) supports multiple selections.",
      "enum": [
        "SINGLE",
        "MULTIPLE"
      ],
      "type": "string"
    },
    "CatalogModifierOverride": {
      "description": "",
      "properties": {
        "modifier_id": {
          "description": "The ID of the [CatalogModifier](#type-catalogmodifier) whose default behavior is being overridden.",
          "minLength": 1,
          "type": "string"
        },
        "on_by_default": {
          "description": "If `true`, this [CatalogModifier](#type-catalogmodifier) should be selected by default for this [CatalogItem](#type-catalogitem).",
          "type": "boolean"
        }
      },
      "required": [
        "modifier_id"
      ],
      "type": "object"
    },
    "CatalogObject": {
      "description": "The wrapper object for object types in the Catalog data model. The type\nof a particular `CatalogObject` is determined by the value of\n`type` and only the corresponding data field may be set.\n\n- if type = `ITEM`, only `item_data` will be populated and it will contain a valid [CatalogItem](#type-catalogitem) object.\n- if type = `ITEM_VARIATION`, only `item_variation_data` will be populated and it will contain a valid [CatalogItemVariation](#type-catalogitemvariation) object.\n- if type = `MODIFIER`, only `modifier_data` will be populated and it will contain a valid [CatalogModifier](#type-catalogmodifier) object.\n- if type = `MODIFIER_LIST`, only `modifier_list_data` will be populated and it will contain a valid [CatalogModifierList](#type-catalogmodifierlist) object.\n- if type = `CATEGORY`, only `category_data` will be populated and it will contain a valid [CatalogCategory](#type-catalogcategory) object.\n- if type = `DISCOUNT`, only `discount_data` will be populated and it will contain a valid [CatalogDiscount](#type-catalogdiscount) object.\n- if type = `TAX`, only `tax_data` will be populated and it will contain a valid [CatalogTax](#type-catalogtax) object.\n\nFor a more detailed discussion of the Catalog data model, please see the\n[Catalog Overview](https://docs.connect.squareup.com/articles/catalog-overview).",
      "example": {
        "catalog_object": {
          "absent_at_location_ids": [
            "{{ LOCATIONID-1 }}",
            "{{ LOCATIONID-N }}"
          ],
          "category_data": "{{ CatalogCategory object only if type=CATEGORY }}",
          "connect_v1_ids": {
            "catalog_v1_id": "{{ itemID from Catalog v1 }}",
            "location_id": "{{ location where v1 ID is used }}"
          },
          "discount_data": "{{ CatalogDiscount object only if type=DISCOUNT }}",
          "id": "{{ set by Catalog during object creation }}",
          "is_deleted": "{{ [true | false] }}",
          "item_data": "{{ CatalogItem object only if type=ITEM }}",
          "item_variation_data": "{{ CatalogItemVariation object only if type=ITEM_VARIATION }}",
          "modifier_data": "{{ CatalogModifier object only if type=MODIFIER }}",
          "modifier_list_data": "{{ CatalogModifierList object only if type=MODIFIER_LIST }}",
          "present_at_all_locations": "{{ [true | false] }}",
          "present_at_location_ids": [
            "{{ LOCATIONID-1 }}",
            "{{ LOCATIONID-N }}"
          ],
          "tax_data": "{{ CatalogTax object only if type=TAX }}",
          "type": "{{ [ITEM | ITEM_VARIATION | MODIFIER | MODIFIER_LIST | CATEGORY | DISCOUNT | TAX] }}",
          "updated_at": "{{ date & time of most recent update }}",
          "version": "{{ version of the CatalogObject }}"
        }
      },
      "properties": {
        "absent_at_location_ids": {
          "description": "A list of locations where the object is not present, even if `present_at_all_locations` is `true`.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "catalog_v1_ids": {
          "description": "The Connect V1 IDs for this object at each [location][#type-location] where it is present, where they\ndiffer from the object's Connect V2 ID. The field will only be present for objects that\nhave been created or modified by legacy APIs.",
          "items": {
            "$ref": "#/definitions/CatalogV1Id"
          },
          "type": "array"
        },
        "category_data": {
          "$ref": "#/definitions/CatalogCategory",
          "description": "Structured data for a [CatalogCategory](#type-catalogcategory), set for CatalogObjects of type `CATEGORY`."
        },
        "discount_data": {
          "$ref": "#/definitions/CatalogDiscount",
          "description": "Structured data for a [CatalogDiscount](#type-catalogdiscount), set for CatalogObjects of type `DISCOUNT`."
        },
        "id": {
          "description": "An identifier to reference this object in the catalog. When a new CatalogObject\nis inserted, the client should set the id to a temporary identifier starting with\na `'#'` character. Other objects being inserted or updated within the same request\nmay use this identifier to refer to the new object.\n\nWhen the server receives the new object, it will supply a unique identifier that\nreplaces the temporary identifier for all future references.",
          "minLength": 1,
          "type": "string"
        },
        "is_deleted": {
          "description": "If `true`, the object has been deleted from the database. Must be `false` for new objects\nbeing inserted. When deleted, the `updated_at` field will equal the deletion time.",
          "type": "boolean"
        },
        "item_data": {
          "$ref": "#/definitions/CatalogItem",
          "description": "Structured data for a [CatalogItem](#type-catalogitem), set for CatalogObjects of type `ITEM`."
        },
        "item_variation_data": {
          "$ref": "#/definitions/CatalogItemVariation",
          "description": "Structured data for a [CatalogItemVariation](#type-catalogitemvariation), set for CatalogObjects of type `ITEM_VARIATION`."
        },
        "modifier_data": {
          "$ref": "#/definitions/CatalogModifier",
          "description": "Structured data for a [CatalogModifier](#type-catalogmodifier), set for CatalogObjects of type `MODIFIER`."
        },
        "modifier_list_data": {
          "$ref": "#/definitions/CatalogModifierList",
          "description": "Structured data for a [CatalogModifierList](#type-catalogmodifierlist), set for CatalogObjects of type `MODIFIER_LIST`."
        },
        "present_at_all_locations": {
          "description": "If `true`, this object is present at all locations (including future locations), except where specified in\nthe `absent_at_location_ids` field. If `false`, this object is not present at any locations (including future locations),\nexcept where specified in the `present_at_location_ids` field.",
          "type": "boolean"
        },
        "present_at_location_ids": {
          "description": "A list of locations where the object is present, even if `present_at_all_locations` is `false`.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "tax_data": {
          "$ref": "#/definitions/CatalogTax",
          "description": "Structured data for a [CatalogTax](#type-catalogtax), set for CatalogObjects of type `TAX`."
        },
        "type": {
          "description": "The type of this object. Each object type has expected\nproperties expressed in a structured format within its corresponding `*_data` field below.\n\nSee [CatalogObjectType](#type-catalogobjecttype) for all possible values.",
          "enum": [
            "ITEM",
            "CATEGORY",
            "ITEM_VARIATION",
            "TAX",
            "DISCOUNT",
            "MODIFIER_LIST",
            "MODIFIER"
          ],
          "type": "string"
        },
        "updated_at": {
          "description": "Last modification [timestamp](#workingwithdates) in RFC 3339 format, e.g., `\"2016-08-15T23:59:33.123Z\"`\nwould indicate the UTC time (denoted by `Z`) of August 15, 2016 at 23:59:33 and 123 milliseconds.",
          "type": "string"
        },
        "version": {
          "description": "The version of the object. When updating an object, the version supplied by the\nmust match the version in the database, otherwise the write will be rejected as conflicting.",
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "type",
        "id"
      ],
      "type": "object"
    },
    "CatalogObjectBatch": {
      "description": "A batch of [CatalogObject](#type-catalogobject)s.",
      "properties": {
        "objects": {
          "description": "A list of [CatalogObject](#type-catalogobject)s belonging to this batch.",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CatalogObjectType": {
      "description": "Possible kinds of [CatalogObject](#type-catalogobject)s returned from the Catalog, each\ncontaning type-specific properties in the `*_data` field corresponding to the object type.",
      "enum": [
        "ITEM",
        "CATEGORY",
        "ITEM_VARIATION",
        "TAX",
        "DISCOUNT",
        "MODIFIER_LIST",
        "MODIFIER"
      ],
      "type": "string"
    },
    "CatalogPricingType": {
      "description": "Indicates whether the price of a [CatalogItemVariation](#type-catalogitemvariation) should be entered manually at the time of sale.",
      "enum": [
        "FIXED_PRICING",
        "VARIABLE_PRICING"
      ],
      "type": "string"
    },
    "CatalogQuery": {
      "description": "A query to be applied to a [SearchCatalogObjectsRequest](#type-searchcatalogobjectsrequest).\nOnly one query field may be present.\n\nWhere an attribute name is required, it should be specified as the name of any field\nmarked \"searchable\" from the structured data types for the desired result object type(s)\n([CatalogItem](#type-catalogitem), [CatalogItemVariation](#type-catalogitemvariation),\n[CatalogCategory](#type-catalogcategory), [CatalogTax](#type-catalogtax),\n[CatalogDiscount](#type-catalogdiscount), [CatalogModifierList](#type-catalogmodifierlist),\n[CatalogModifier](#type-catalogmodifier)).\n\nFor example, a query that should return Items may specify attribute names from\nany of the searchable fields of the [CatalogItem](#type-catalogitem) data type, namely\n`\"name\"`, `\"description\"`, and `\"abbreviation\"`.",
      "properties": {
        "exact_query": {
          "$ref": "#/definitions/CatalogQueryExact",
          "description": "A query that returns only objects for which the given (string-valued) attribute has the\ngiven case-insensitive value."
        },
        "items_for_modifier_list_query": {
          "$ref": "#/definitions/CatalogQueryItemsForModifierList",
          "description": "A query that returns all [CatalogItem](#type-catalogitem)s that have any of the given [CatalogModifierList](#type-catalogmodifierlist)s enabled."
        },
        "items_for_tax_query": {
          "$ref": "#/definitions/CatalogQueryItemsForTax",
          "description": "A query that returns all [CatalogItem](#type-catalogitem)s that have any of the given [CatalogTax](#type-catalogtax)es enabled."
        },
        "prefix_query": {
          "$ref": "#/definitions/CatalogQueryPrefix",
          "description": "A query that returns only objects for which the given (string-valued) attribute has the\ngiven case-insensitive prefix."
        },
        "range_query": {
          "$ref": "#/definitions/CatalogQueryRange",
          "description": "A query that returns only objects for which the given (integer-valued) attribute lies in the given range."
        },
        "sorted_attribute_query": {
          "$ref": "#/definitions/CatalogQuerySortedAttribute",
          "description": "A query that returns all objects, sorted by the given attribute."
        },
        "text_query": {
          "$ref": "#/definitions/CatalogQueryText",
          "description": "A query that returns only objects whose searchable attributes contain all of the given\nkeywords as prefixes. For example, if a [CatalogItem](#type-catalogitem) contains attributes `{\"name\": \"t-shirt\"}` and\n`{\"description\": \"Small, Purple\"}`, it will be matched by the query `{\"keywords\": [\"shirt\", \"sma\", \"purp\"]}`."
        }
      },
      "type": "object"
    },
    "CatalogQueryExact": {
      "description": "",
      "properties": {
        "attribute_name": {
          "description": "The name of the attribute to be searched.",
          "minLength": 1,
          "type": "string"
        },
        "attribute_value": {
          "description": "The desired value of the search attribute.",
          "type": "string"
        }
      },
      "required": [
        "attribute_name",
        "attribute_value"
      ],
      "type": "object"
    },
    "CatalogQueryItemsForModifierList": {
      "description": "",
      "properties": {
        "modifier_list_ids": {
          "description": "A set of [CatalogModifierList](#type-catalogmodifierlist) IDs to be used to find associated [CatalogItem](#type-catalogitem)s.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "modifier_list_ids"
      ],
      "type": "object"
    },
    "CatalogQueryItemsForTax": {
      "description": "",
      "properties": {
        "tax_ids": {
          "description": "A set of [CatalogTax](#type-catalogtax) IDs to be used to find associated [CatalogItem](#type-catalogitem)s.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "tax_ids"
      ],
      "type": "object"
    },
    "CatalogQueryPrefix": {
      "description": "",
      "properties": {
        "attribute_name": {
          "description": "The name of the attribute to be searched.",
          "minLength": 1,
          "type": "string"
        },
        "attribute_prefix": {
          "description": "The desired prefix of the search attribute value.",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "attribute_name",
        "attribute_prefix"
      ],
      "type": "object"
    },
    "CatalogQueryRange": {
      "description": "",
      "properties": {
        "attribute_max_value": {
          "description": "The desired maximum value for the search attribute (inclusive).",
          "format": "int64",
          "type": "integer"
        },
        "attribute_min_value": {
          "description": "The desired minimum value for the search attribute (inclusive).",
          "format": "int64",
          "type": "integer"
        },
        "attribute_name": {
          "description": "The name of the attribute to be searched.",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "attribute_name"
      ],
      "type": "object"
    },
    "CatalogQuerySortedAttribute": {
      "description": "",
      "properties": {
        "attribute_name": {
          "description": "The attribute whose value should be used as the sort key.",
          "minLength": 1,
          "type": "string"
        },
        "initial_attribute_value": {
          "description": "The first attribute value to be returned by the query. Ascending sorts will return only\nobjects with this value or greater, while descending sorts will return only objects with this value\nor less. If unset, start at the beginning (for ascending sorts) or end (for descending sorts).",
          "type": "string"
        },
        "sort_order": {
          "description": "The desired [SortOrder](#type-sortorder), `\"ASC\"` (ascending) or `\"DESC\"` (descending).",
          "enum": [
            "DESC",
            "ASC"
          ],
          "type": "string"
        }
      },
      "required": [
        "attribute_name"
      ],
      "type": "object"
    },
    "CatalogQueryText": {
      "description": "",
      "properties": {
        "keywords": {
          "description": "A list of one, two, or three search keywords. Keywords with fewer than three characters\nare ignored.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "keywords"
      ],
      "type": "object"
    },
    "CatalogTax": {
      "description": "A tax in the Catalog object model.",
      "example": {
        "object": {
          "id": "#SalesTax",
          "present_at_all_locations": true,
          "tax_data": {
            "calculation_phase": "TAX_SUBTOTAL_PHASE",
            "enabled": true,
            "fee_applies_to_custom_amounts": true,
            "inclusion_type": "ADDITIVE",
            "name": "Sales Tax",
            "percentage": "5.0"
          },
          "type": "TAX"
        }
      },
      "properties": {
        "applies_to_custom_amounts": {
          "description": "If `true`, the fee applies to custom amounts entered into the Square Point of Sale\napp that are not associated with a particular [CatalogItem](#type-catalogitem).",
          "type": "boolean"
        },
        "calculation_phase": {
          "description": "Whether the tax is calculated based on a payment's subtotal or total. See [TaxCalculationPhase](#type-taxcalculationphase) for all possible values.",
          "enum": [
            "TAX_SUBTOTAL_PHASE",
            "TAX_TOTAL_PHASE"
          ],
          "type": "string"
        },
        "enabled": {
          "description": "If `true`, the tax will be shown as enabled in the Square Point of Sale app.",
          "type": "boolean"
        },
        "inclusion_type": {
          "description": "Whether the tax is `ADDITIVE` or `INCLUSIVE`. See [TaxInclusionType](#type-taxinclusiontype) for all possible values.",
          "enum": [
            "ADDITIVE",
            "INCLUSIVE"
          ],
          "type": "string"
        },
        "name": {
          "description": "The tax's name. Searchable.",
          "minLength": 1,
          "type": "string"
        },
        "percentage": {
          "description": "The percentage of the tax in decimal form, using a `'.'` as the decimal separator and without a `'%'` sign.\nA value of `7.5` corresponds to 7.5%.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "CatalogV1Id": {
      "description": "An Items Connect V1 object ID along with its associated [location][#type-location] ID.",
      "properties": {
        "catalog_v1_id": {
          "description": "The ID for an object in Connect V1, if different from its Connect V2 ID.",
          "type": "string"
        },
        "location_id": {
          "description": "The ID of the [location][#type-location] this Connect V1 ID is associated with.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ChargeRequest": {
      "description": "Defines the parameters that can be included in the body of\na request to the [Charge](#endpoint-charge) endpoint.",
      "example": {
        "request_body": {
          "amount_money": {
            "amount": 5000,
            "currency": "USD"
          },
          "billing_address": {
            "address_line_1": "500 Electric Ave",
            "address_line_2": "Suite 600",
            "administrative_district_level_1": "NY",
            "country": "US",
            "locality": "New York",
            "postal_code": "10003"
          },
          "card_nonce": "card_nonce_from_square_123",
          "delay_capture": false,
          "idempotency_key": "74ae1696-b1e3-4328-af6d-f1e04d947a13",
          "note": "some optional note",
          "reference_id": "some optional reference id",
          "shipping_address": {
            "address_line_1": "123 Main St",
            "administrative_district_level_1": "CA",
            "country": "US",
            "locality": "San Francisco",
            "postal_code": "94114"
          }
        },
        "request_url": "/v2/locations/LOCATION_ID/transactions"
      },
      "properties": {
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money to charge.\n\nNote that you specify the amount in the\n__smallest denomination of the applicable currency__. For example, US dollar\namounts are specified in cents. See\n[Working with monetary amounts](#workingwithmonetaryamounts) for details.\n\nThe value of `currency` must match the currency associated with the business\nthat is charging the card."
        },
        "billing_address": {
          "$ref": "#/definitions/Address",
          "description": "The buyer's billing address. This value is optional, but this transaction\nis ineligible for chargeback protection if neither this parameter nor\n`shipping_address` is provided."
        },
        "buyer_email_address": {
          "description": "The buyer's email address, if available. This value is optional,\nbut this transaction is ineligible for chargeback protection if it is not\nprovided.",
          "type": "string"
        },
        "card_nonce": {
          "description": "A nonce generated from the `SqPaymentForm` that represents the card\nto charge.\n\nThe application that provides a nonce to this endpoint must be the\n_same application_ that generated the nonce with the `SqPaymentForm`.\nOtherwise, the nonce is invalid.\n\nDo not provide a value for this field if you provide a value for\n`customer_card_id`.",
          "type": "string"
        },
        "customer_card_id": {
          "description": "The ID of the customer card on file to charge. Do\nnot provide a value for this field if you provide a value for `card_nonce`.\n\nIf you provide this value, you _must_ also provide a value for\n`customer_id`.",
          "type": "string"
        },
        "customer_id": {
          "description": "The ID of the customer to associate this transaction with. This field\nis required if you provide a value for `customer_card_id`, and optional\notherwise.",
          "type": "string"
        },
        "delay_capture": {
          "description": "If `true`, the request will only perform an Auth on the provided\ncard. You can then later perform either a Capture (with the\n[CaptureTransaction](#endpoint-capturetransaction) endpoint) or a Void\n(with the [VoidTransaction](#endpoint-voidtransaction) endpoint).\n\nDefault value: `false`",
          "type": "boolean"
        },
        "idempotency_key": {
          "description": "A value you specify that uniquely identifies this\ntransaction among transactions you've created.\n\nIf you're unsure whether a particular transaction succeeded,\nyou can reattempt it with the same idempotency key without\nworrying about double-charging the buyer.\n\nSee [Idempotency keys](#idempotencykeys) for more information.",
          "type": "string"
        },
        "note": {
          "description": "An optional note to associate with the transaction.\n\nThis value cannot exceed 60 characters.",
          "type": "string"
        },
        "reference_id": {
          "description": "An optional ID you can associate with the transaction for your own\npurposes (such as to associate the transaction with an entity ID in your\nown database).\n\nThis value cannot exceed 40 characters.",
          "type": "string"
        },
        "shipping_address": {
          "$ref": "#/definitions/Address",
          "description": "The buyer's shipping address, if available. This value is optional,\nbut this transaction is ineligible for chargeback protection if neither this\nparameter nor `billing_address` is provided."
        }
      },
      "required": [
        "idempotency_key",
        "amount_money"
      ],
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/Charge/ChargeRequest.csharp",
        "php": "/sdk_samples/Charge/ChargeRequest.php",
        "python": "/sdk_samples/Charge/ChargeRequest.python",
        "ruby": "/sdk_samples/Charge/ChargeRequest.ruby"
      }
    },
    "ChargeResponse": {
      "description": "Defines the fields that are included in the response body of\na request to the [Charge](#endpoint-charge) endpoint.\n\nOne of `errors` or `transaction` is present in a given response (never both).",
      "example": {
        "transaction": {
          "created_at": "2016-03-10T22:57:56Z",
          "id": "KnL67ZIwXCPtzOrqj0HrkxMF",
          "location_id": "18YC4JDH91E1H",
          "product": "EXTERNAL_API",
          "reference_id": "some optional reference id",
          "tenders": [
            {
              "amount_money": {
                "amount": 5000,
                "currency": "USD"
              },
              "card_details": {
                "card": {
                  "card_brand": "VISA",
                  "last_4": "1111"
                },
                "entry_method": "KEYED",
                "status": "CAPTURED"
              },
              "created_at": "2016-03-10T22:57:56Z",
              "id": "MtZRYYdDrYNQbOvV7nbuBvMF",
              "location_id": "18YC4JDH91E1H",
              "note": "some optional note",
              "transaction_id": "KnL67ZIwXCPtzOrqj0HrkxMF",
              "type": "CARD"
            }
          ]
        }
      },
      "properties": {
        "errors": {
          "description": "Any errors that occurred during the request.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        },
        "transaction": {
          "$ref": "#/definitions/Transaction",
          "description": "The created transaction."
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/Charge/ChargeResponse.csharp",
        "php": "/sdk_samples/Charge/ChargeResponse.php",
        "python": "/sdk_samples/Charge/ChargeResponse.python",
        "ruby": "/sdk_samples/Charge/ChargeResponse.ruby"
      }
    },
    "Checkout": {
      "description": "Square Checkout lets merchants accept online payments for supported\npayment types using a checkout workflow hosted on squareup.com.",
      "properties": {
        "ask_for_shipping_address": {
          "description": "If `true`, Square Checkout will collect shipping information on your\nbehalf and store that information with the transaction information in your\nSquare Dashboard.\n\nDefault: `false`.",
          "type": "boolean"
        },
        "checkout_page_url": {
          "description": "The URL that the buyer's browser should be redirected to after the\ncheckout is completed.",
          "type": "string"
        },
        "created_at": {
          "description": "The time when the checkout was created, in RFC 3339 format.",
          "type": "string"
        },
        "id": {
          "description": "ID generated by Square Checkout when a new checkout is requested.",
          "type": "string"
        },
        "merchant_support_email": {
          "description": "The email address to display on the Square Checkout confirmation page\nand confirmation email that the buyer can use to contact the merchant.\n\nIf this value is not set, the confirmation page and email will display the\nprimary email address associated with the merchant's Square account.\n\nDefault: none; only exists if explicitly set.",
          "type": "string"
        },
        "order": {
          "$ref": "#/definitions/Order",
          "description": "Order to be checked out."
        },
        "pre_populate_buyer_email": {
          "description": "If provided, the buyer's email is pre-populated on the checkout page\nas an editable text field.\n\nDefault: none; only exists if explicitly set.",
          "type": "string"
        },
        "pre_populate_shipping_address": {
          "$ref": "#/definitions/Address",
          "description": "If provided, the buyer's shipping info is pre-populated on the\ncheckout page as editable text fields.\n\nDefault: none; only exists if explicitly set."
        },
        "redirect_url": {
          "description": "The URL to redirect to after checkout is completed with `checkoutId`,\nSquare's `orderId`, `transactionId`, and `referenceId` appended as URL\nparameters. For example, if the provided redirect_url is\n`http://www.example.com/order-complete`, a successful transaction redirects\nthe customer to:\n\n`http://www.example.com/order-complete?checkoutId=xxxxxx&orderId=xxxxxx&referenceId=xxxxxx&transactionId=xxxxxx`\n\nIf you do not provide a redirect URL, Square Checkout will display an order\nconfirmation page on your behalf; however Square strongly recommends that\nyou provide a redirect URL so you can verify the transaction results and\nfinalize the order through your existing/normal confirmation workflow.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Country": {
      "description": "Indicates the country associated with another entity, such as a business.\nValues are in [ISO 3166-1-alpha-2 format](http://www.iso.org/iso/home/standards/country_codes.htm).",
      "enum": [
        "ZZ",
        "AD",
        "AE",
        "AF",
        "AG",
        "AI",
        "AL",
        "AM",
        "AO",
        "AQ",
        "AR",
        "AS",
        "AT",
        "AU",
        "AW",
        "AX",
        "AZ",
        "BA",
        "BB",
        "BD",
        "BE",
        "BF",
        "BG",
        "BH",
        "BI",
        "BJ",
        "BL",
        "BM",
        "BN",
        "BO",
        "BQ",
        "BR",
        "BS",
        "BT",
        "BV",
        "BW",
        "BY",
        "BZ",
        "CA",
        "CC",
        "CD",
        "CF",
        "CG",
        "CH",
        "CI",
        "CK",
        "CL",
        "CM",
        "CN",
        "CO",
        "CR",
        "CU",
        "CV",
        "CW",
        "CX",
        "CY",
        "CZ",
        "DE",
        "DJ",
        "DK",
        "DM",
        "DO",
        "DZ",
        "EC",
        "EE",
        "EG",
        "EH",
        "ER",
        "ES",
        "ET",
        "FI",
        "FJ",
        "FK",
        "FM",
        "FO",
        "FR",
        "GA",
        "GB",
        "GD",
        "GE",
        "GF",
        "GG",
        "GH",
        "GI",
        "GL",
        "GM",
        "GN",
        "GP",
        "GQ",
        "GR",
        "GS",
        "GT",
        "GU",
        "GW",
        "GY",
        "HK",
        "HM",
        "HN",
        "HR",
        "HT",
        "HU",
        "ID",
        "IE",
        "IL",
        "IM",
        "IN",
        "IO",
        "IQ",
        "IR",
        "IS",
        "IT",
        "JE",
        "JM",
        "JO",
        "JP",
        "KE",
        "KG",
        "KH",
        "KI",
        "KM",
        "KN",
        "KP",
        "KR",
        "KW",
        "KY",
        "KZ",
        "LA",
        "LB",
        "LC",
        "LI",
        "LK",
        "LR",
        "LS",
        "LT",
        "LU",
        "LV",
        "LY",
        "MA",
        "MC",
        "MD",
        "ME",
        "MF",
        "MG",
        "MH",
        "MK",
        "ML",
        "MM",
        "MN",
        "MO",
        "MP",
        "MQ",
        "MR",
        "MS",
        "MT",
        "MU",
        "MV",
        "MW",
        "MX",
        "MY",
        "MZ",
        "NA",
        "NC",
        "NE",
        "NF",
        "NG",
        "NI",
        "NL",
        "NO",
        "NP",
        "NR",
        "NU",
        "NZ",
        "OM",
        "PA",
        "PE",
        "PF",
        "PG",
        "PH",
        "PK",
        "PL",
        "PM",
        "PN",
        "PR",
        "PS",
        "PT",
        "PW",
        "PY",
        "QA",
        "RE",
        "RO",
        "RS",
        "RU",
        "RW",
        "SA",
        "SB",
        "SC",
        "SD",
        "SE",
        "SG",
        "SH",
        "SI",
        "SJ",
        "SK",
        "SL",
        "SM",
        "SN",
        "SO",
        "SR",
        "SS",
        "ST",
        "SV",
        "SX",
        "SY",
        "SZ",
        "TC",
        "TD",
        "TF",
        "TG",
        "TH",
        "TJ",
        "TK",
        "TL",
        "TM",
        "TN",
        "TO",
        "TR",
        "TT",
        "TV",
        "TW",
        "TZ",
        "UA",
        "UG",
        "UM",
        "US",
        "UY",
        "UZ",
        "VA",
        "VC",
        "VE",
        "VG",
        "VI",
        "VN",
        "VU",
        "WF",
        "WS",
        "YE",
        "YT",
        "ZA",
        "ZM",
        "ZW"
      ],
      "type": "string"
    },
    "CreateCheckoutRequest": {
      "description": "Defines the parameters that can be included in the body of\na request to the [CreateCheckout](#endpoint-createcheckout) endpoint.",
      "example": {
        "request_body": {
          "ask_for_shipping_address": true,
          "idempotency_key": "86ae1696-b1e3-4328-af6d-f1e04d947ad6",
          "merchant_support_email": "merchant+support@website.com",
          "order": {
            "discounts": [
              {
                "name": "Father's day 12% OFF",
                "percentage": "12"
              },
              {
                "amount_money": {
                  "amount": 5500,
                  "currency": "USD"
                },
                "name": "Global Sales $55 OFF"
              }
            ],
            "line_items": [
              {
                "base_price_money": {
                  "amount": 1500,
                  "currency": "USD"
                },
                "discounts": [
                  {
                    "name": "7% off previous season item",
                    "percentage": "7"
                  },
                  {
                    "amount_money": {
                      "amount": 300,
                      "currency": "USD"
                    },
                    "name": "$3 off Customer Discount"
                  }
                ],
                "name": "Printed T Shirt",
                "quantity": "2"
              },
              {
                "base_price_money": {
                  "amount": 2500,
                  "currency": "USD"
                },
                "name": "Slim Jeans",
                "quantity": "1"
              },
              {
                "base_price_money": {
                  "amount": 3500,
                  "currency": "USD"
                },
                "discounts": [
                  {
                    "amount_money": {
                      "amount": 1100,
                      "currency": "USD"
                    },
                    "name": "$11 off Customer Discount"
                  }
                ],
                "name": "Woven Sweater",
                "quantity": "3",
                "taxes": [
                  {
                    "name": "Fair Trade Tax",
                    "percentage": "5"
                  }
                ]
              }
            ],
            "reference_id": "reference_id",
            "taxes": [
              {
                "name": "Sales Tax",
                "percentage": "8.5"
              }
            ]
          },
          "pre_populate_buyer_email": "example@email.com",
          "pre_populate_shipping_address": {
            "address_line_1": "1455 Market St.",
            "address_line_2": "Suite 600",
            "administrative_district_level_1": "CA",
            "country": "US",
            "first_name": "Jane",
            "last_name": "Doe",
            "locality": "San Francisco",
            "postal_code": "94103"
          },
          "redirect_url": "https://merchant.website.com/order-confirm"
        },
        "request_url": "/v2/locations/LOCATION_ID/checkouts"
      },
      "properties": {
        "ask_for_shipping_address": {
          "description": "If `true`, Square Checkout will collect shipping information on your\nbehalf and store that information with the transaction information in your\nSquare Dashboard.\n\nDefault: `false`.",
          "type": "boolean"
        },
        "idempotency_key": {
          "description": "A unique string that identifies this checkout among others\nyou've created. It can be any valid string but must be unique for every\norder sent to Square Checkout for a given location ID.\n\nThe idempotency key is used to avoid processing the same order more than\nonce. If you're unsure whether a particular checkout was created\nsuccessfully, you can reattempt it with the same idempotency key and all the\nsame other parameters without worrying about creating duplicates.\n\nWe recommend using a random number/string generator native to the language\nyou are working in to generate strings for your idempotency keys.\n\nSee [Idempotency keys](#idempotencykeys) for more information.",
          "maxLength": 192,
          "minLength": 1,
          "type": "string"
        },
        "merchant_support_email": {
          "description": "The email address to display on the Square Checkout confirmation page\nand confirmation email that the buyer can use to contact the merchant.\n\nIf this value is not set, the confirmation page and email will display the\nprimary email address associated with the merchant's Square account.\n\nDefault: none; only exists if explicitly set.",
          "maxLength": 254,
          "type": "string"
        },
        "order": {
          "$ref": "#/definitions/CreateOrderRequest",
          "description": "The order including line items to be checked out."
        },
        "pre_populate_buyer_email": {
          "description": "If provided, the buyer's email is pre-populated on the checkout page\nas an editable text field.\n\nDefault: none; only exists if explicitly set.",
          "maxLength": 254,
          "type": "string"
        },
        "pre_populate_shipping_address": {
          "$ref": "#/definitions/Address",
          "description": "If provided, the buyer's shipping info is pre-populated on the\ncheckout page as editable text fields.\n\nDefault: none; only exists if explicitly set."
        },
        "redirect_url": {
          "description": "The URL to redirect to after checkout is completed with `checkoutId`,\nSquare's `orderId`, `transactionId`, and `referenceId` appended as URL\nparameters. For example, if the provided redirect_url is\n`http://www.example.com/order-complete`, a successful transaction redirects\nthe customer to:\n\n`http://www.example.com/order-complete?checkoutId=xxxxxx&orderId=xxxxxx&referenceId=xxxxxx&transactionId=xxxxxx`\n\nIf you do not provide a redirect URL, Square Checkout will display an order\nconfirmation page on your behalf; however Square strongly recommends that\nyou provide a redirect URL so you can verify the transaction results and\nfinalize the order through your existing/normal confirmation workflow.\n\nDefault: none; only exists if explicitly set.",
          "type": "string"
        }
      },
      "required": [
        "idempotency_key",
        "order"
      ],
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/CreateCheckout/CreateCheckoutRequest.csharp",
        "php": "/sdk_samples/CreateCheckout/CreateCheckoutRequest.php",
        "python": "/sdk_samples/CreateCheckout/CreateCheckoutRequest.python",
        "ruby": "/sdk_samples/CreateCheckout/CreateCheckoutRequest.ruby"
      }
    },
    "CreateCheckoutResponse": {
      "description": "Defines the fields that are included in the response body of\na request to the [CreateCheckout](#endpoint-createcheckout) endpoint.",
      "example": {
        "checkout": {
          "ask_for_shipping_address": true,
          "checkout_page_url": "https://connect.squareup.com/v2/checkout?c=CAISEHGimXh-C3RIT4og1a6u1qw&l=CYTKRM7R7JMV8",
          "created_at": "2017-06-16T22:25:35Z",
          "id": "CAISEHGimXh-C3RIT4og1a6u1qw",
          "merchant_support_email": "merchant+support@website.com",
          "order": {
            "line_items": [
              {
                "base_price_money": {
                  "amount": 1500,
                  "currency": "USD"
                },
                "discounts": [
                  {
                    "applied_money": {
                      "amount": 210,
                      "currency": "USD"
                    },
                    "name": "7% off previous season item",
                    "percentage": "7",
                    "scope": "LINE_ITEM",
                    "type": "FIXED_PERCENTAGE"
                  },
                  {
                    "applied_money": {
                      "amount": 335,
                      "currency": "USD"
                    },
                    "name": "Father's day 12% OFF",
                    "percentage": "12",
                    "scope": "ORDER",
                    "type": "FIXED_PERCENTAGE"
                  },
                  {
                    "amount_money": {
                      "amount": 300,
                      "currency": "USD"
                    },
                    "applied_money": {
                      "amount": 300,
                      "currency": "USD"
                    },
                    "name": "$3 off Customer Discount",
                    "scope": "LINE_ITEM",
                    "type": "FIXED_AMOUNT"
                  },
                  {
                    "amount_money": {
                      "amount": 5500,
                      "currency": "USD"
                    },
                    "applied_money": {
                      "amount": 949,
                      "currency": "USD"
                    },
                    "name": "Global Sales $55 OFF",
                    "scope": "ORDER",
                    "type": "FIXED_AMOUNT"
                  }
                ],
                "name": "Printed T Shirt",
                "quantity": "2",
                "taxes": [
                  {
                    "applied_money": {
                      "amount": 103,
                      "currency": "USD"
                    },
                    "name": "Sales Tax",
                    "percentage": "8.5",
                    "type": "ADDITIVE"
                  }
                ],
                "total_discount_money": {
                  "amount": 1794,
                  "currency": "USD"
                },
                "total_money": {
                  "amount": 1309,
                  "currency": "USD"
                },
                "total_tax_money": {
                  "amount": 103,
                  "currency": "USD"
                }
              },
              {
                "base_price_money": {
                  "amount": 2500,
                  "currency": "USD"
                },
                "discounts": [
                  {
                    "applied_money": {
                      "amount": 300,
                      "currency": "USD"
                    },
                    "name": "Father's day 12% OFF",
                    "percentage": "12",
                    "scope": "ORDER",
                    "type": "FIXED_PERCENTAGE"
                  },
                  {
                    "amount_money": {
                      "amount": 5500,
                      "currency": "USD"
                    },
                    "applied_money": {
                      "amount": 968,
                      "currency": "USD"
                    },
                    "name": "Global Sales $55 OFF",
                    "scope": "ORDER",
                    "type": "FIXED_AMOUNT"
                  }
                ],
                "name": "Slim Jeans",
                "quantity": "1",
                "taxes": [
                  {
                    "applied_money": {
                      "amount": 105,
                      "currency": "USD"
                    },
                    "name": "Sales Tax",
                    "percentage": "8.5",
                    "type": "ADDITIVE"
                  }
                ],
                "total_discount_money": {
                  "amount": 1268,
                  "currency": "USD"
                },
                "total_money": {
                  "amount": 1337,
                  "currency": "USD"
                },
                "total_tax_money": {
                  "amount": 105,
                  "currency": "USD"
                }
              },
              {
                "base_price_money": {
                  "amount": 3500,
                  "currency": "USD"
                },
                "discounts": [
                  {
                    "applied_money": {
                      "amount": 1260,
                      "currency": "USD"
                    },
                    "name": "Father's day 12% OFF",
                    "percentage": "12",
                    "scope": "ORDER",
                    "type": "FIXED_PERCENTAGE"
                  },
                  {
                    "amount_money": {
                      "amount": 1100,
                      "currency": "USD"
                    },
                    "applied_money": {
                      "amount": 1100,
                      "currency": "USD"
                    },
                    "name": "$11 off Customer Discount",
                    "scope": "LINE_ITEM",
                    "type": "FIXED_AMOUNT"
                  },
                  {
                    "amount_money": {
                      "amount": 5500,
                      "currency": "USD"
                    },
                    "applied_money": {
                      "amount": 3583,
                      "currency": "USD"
                    },
                    "name": "Global Sales $55 OFF",
                    "scope": "ORDER",
                    "type": "FIXED_AMOUNT"
                  }
                ],
                "name": "Wooven Sweater",
                "quantity": "3",
                "taxes": [
                  {
                    "applied_money": {
                      "amount": 228,
                      "currency": "USD"
                    },
                    "name": "Fair Trade Tax",
                    "percentage": "5",
                    "type": "ADDITIVE"
                  },
                  {
                    "applied_money": {
                      "amount": 387,
                      "currency": "USD"
                    },
                    "name": "Sales Tax",
                    "percentage": "8.5",
                    "type": "ADDITIVE"
                  }
                ],
                "total_discount_money": {
                  "amount": 5943,
                  "currency": "USD"
                },
                "total_money": {
                  "amount": 5172,
                  "currency": "USD"
                },
                "total_tax_money": {
                  "amount": 615,
                  "currency": "USD"
                }
              }
            ],
            "location_id": "CYTKRM7R7JMV8",
            "reference_id": "reference_id",
            "total_discount_money": {
              "amount": 9005,
              "currency": "USD"
            },
            "total_money": {
              "amount": 7818,
              "currency": "USD"
            },
            "total_tax_money": {
              "amount": 823,
              "currency": "USD"
            }
          },
          "pre_populate_buyer_email": "example@email.com",
          "pre_populate_shipping_address": {
            "address_line_1": "1455 Market St.",
            "address_line_2": "Suite 600",
            "administrative_district_level_1": "CA",
            "country": "US",
            "first_name": "Jane",
            "last_name": "Doe",
            "locality": "San Francisco",
            "postal_code": "94103"
          },
          "redirect_url": "https://merchant.website.com/order-confirm"
        }
      },
      "properties": {
        "checkout": {
          "$ref": "#/definitions/Checkout",
          "description": "The newly created checkout.\nIf the same request was made with the same idempotency_key, this will be the checkout created with the idempotency_key."
        },
        "errors": {
          "description": "Any errors that occurred during the request.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CreateCustomerCardRequest": {
      "description": "Defines the fields that are included in the request body of a request\nto the [CreateCustomerCard](#endpoint-createcustomercard) endpoint.",
      "example": {
        "request_body": {
          "billing_address": {
            "address_line_1": "500 Electric Ave",
            "address_line_2": "Suite 600",
            "administrative_district_level_1": "NY",
            "country": "US",
            "locality": "New York",
            "postal_code": "10003"
          },
          "card_nonce": "YOUR_CARD_NONCE",
          "cardholder_name": "Amelia Earhart"
        },
        "request_url": "/v2/CUSTOMER_ID"
      },
      "properties": {
        "billing_address": {
          "$ref": "#/definitions/Address",
          "description": "Address information for the card on file. Only the `postal_code`\nfield is required for payments in the US and Canada."
        },
        "card_nonce": {
          "description": "A card nonce representing the credit card to link to the customer.\n\nCard nonces are generated by the `SqPaymentForm` that buyers enter\ntheir card information into. See\n[Embedding the payment form](/articles/adding-payment-form/) for\nmore information.",
          "type": "string"
        },
        "cardholder_name": {
          "description": "The cardholder's name.",
          "type": "string"
        }
      },
      "required": [
        "card_nonce"
      ],
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.csharp",
        "php": "/sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.php",
        "python": "/sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.python",
        "ruby": "/sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.ruby"
      }
    },
    "CreateCustomerCardResponse": {
      "description": "Defines the fields that are included in the response body of\na request to the [CreateCustomerCard](#endpoint-createcustomercard) endpoint.\n\nOne of `errors` or `card` is present in a given response (never both).",
      "example": {
        "card": {
          "billing_address": {
            "address_line_1": "500 Electric Ave",
            "address_line_2": "Suite 600",
            "administrative_district_level_1": "NY",
            "country": "US",
            "locality": "New York",
            "postal_code": "10003"
          },
          "card_brand": "VISA",
          "cardholder_name": "Amelia Earhart",
          "exp_month": 11,
          "exp_year": 2018,
          "id": "icard-card_id",
          "last_4": "1111"
        }
      },
      "properties": {
        "card": {
          "$ref": "#/definitions/Card",
          "description": "The created card on file."
        },
        "errors": {
          "description": "Any errors that occurred during the request.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.csharp",
        "php": "/sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.php",
        "python": "/sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.python",
        "ruby": "/sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.ruby"
      }
    },
    "CreateCustomerRequest": {
      "description": "Defines the body parameters that can be provided in a request to the\n[CreateCustomer](#endpoint-createcustomer) endpoint.",
      "example": {
        "request_body": {
          "address": {
            "address_line_1": "500 Electric Ave",
            "address_line_2": "Suite 600",
            "administrative_district_level_1": "NY",
            "country": "US",
            "locality": "New York",
            "postal_code": "10003"
          },
          "email_address": "Amelia.Earhart@example.com",
          "family_name": "Earhart",
          "given_name": "Amelia",
          "note": "a customer",
          "phone_number": "1-212-555-4240",
          "reference_id": "YOUR_REFERENCE_ID"
        },
        "request_url": "/v2/customers"
      },
      "properties": {
        "address": {
          "$ref": "#/definitions/Address",
          "description": "The customer's physical address."
        },
        "company_name": {
          "description": "The name of the customer's company.",
          "type": "string"
        },
        "email_address": {
          "description": "The customer's email address.",
          "type": "string"
        },
        "family_name": {
          "description": "The customer's family (i.e., last) name.",
          "type": "string"
        },
        "given_name": {
          "description": "The customer's given (i.e., first) name.",
          "type": "string"
        },
        "nickname": {
          "description": "A nickname for the customer.",
          "type": "string"
        },
        "note": {
          "description": "An optional note to associate with the customer.",
          "type": "string"
        },
        "phone_number": {
          "description": "The customer's phone number.",
          "type": "string"
        },
        "reference_id": {
          "description": "An optional second ID you can set to associate the customer with an\nentity in another system.",
          "type": "string"
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/CreateCustomer/CreateCustomerRequest.csharp",
        "php": "/sdk_samples/CreateCustomer/CreateCustomerRequest.php",
        "python": "/sdk_samples/CreateCustomer/CreateCustomerRequest.python",
        "ruby": "/sdk_samples/CreateCustomer/CreateCustomerRequest.ruby"
      }
    },
    "CreateCustomerResponse": {
      "description": "Defines the fields that are included in the response body of\na request to the [CreateCustomer](#endpoint-createcustomer) endpoint.\n\nOne of `errors` or `customer` is present in a given response (never both).",
      "example": {
        "customer": {
          "address": {
            "address_line_1": "500 Electric Ave",
            "address_line_2": "Suite 600",
            "administrative_district_level_1": "NY",
            "country": "US",
            "locality": "New York",
            "postal_code": "10003"
          },
          "created_at": "2016-03-23T20:21:54.859Z",
          "email_address": "Amelia.Earhart@example.com",
          "family_name": "Earhart",
          "given_name": "Amelia",
          "id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
          "note": "a customer",
          "phone_number": "1-212-555-4240",
          "reference_id": "YOUR_REFERENCE_ID",
          "updated_at": "2016-03-23T20:21:54.859Z"
        }
      },
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer",
          "description": "The created customer."
        },
        "errors": {
          "description": "Any errors that occurred during the request.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/CreateCustomer/CreateCustomerResponse.csharp",
        "php": "/sdk_samples/CreateCustomer/CreateCustomerResponse.php",
        "python": "/sdk_samples/CreateCustomer/CreateCustomerResponse.python",
        "ruby": "/sdk_samples/CreateCustomer/CreateCustomerResponse.ruby"
      }
    },
    "CreateOrderRequest": {
      "description": "Defines the parameters that can be included in the body of\na request to the [CreateCheckout](#endpoint-createcheckout) endpoint.",
      "properties": {
        "discounts": {
          "description": "The discounts include the custom discounts .",
          "items": {
            "$ref": "#/definitions/CreateOrderRequestDiscount"
          },
          "type": "array"
        },
        "line_items": {
          "description": "The line items to associate with this order.\n\nEach line item represents a different product (or a custom monetary amount)\nto include in a purchase.",
          "items": {
            "$ref": "#/definitions/CreateOrderRequestLineItem"
          },
          "type": "array"
        },
        "reference_id": {
          "description": "An optional ID you can associate with the order for your own\npurposes (such as to associate the order with an entity ID in your\nown database).\n\nThis value cannot exceed 40 characters.",
          "maxLength": 40,
          "type": "string"
        },
        "taxes": {
          "description": "The taxes include the custom taxes.",
          "items": {
            "$ref": "#/definitions/CreateOrderRequestTax"
          },
          "type": "array"
        }
      },
      "required": [
        "line_items"
      ],
      "type": "object"
    },
    "CreateOrderRequestDiscount": {
      "description": "Represents a discount that to either a single line item or an entire order.",
      "properties": {
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The monetary amount of the discount."
        },
        "name": {
          "description": "The discount's name.",
          "maxLength": 255,
          "type": "string"
        },
        "percentage": {
          "description": "The percentage of the discount, as a string representation of a decimal number.\n\nA value of `7.25` corresponds to a percentage of 7.25%. This value range between 0.0 up to 100.0",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreateOrderRequestLineItem": {
      "description": "Represents a line item to include in an order. Each line item describes\na different product to purchase, with its own quantity and price details.",
      "properties": {
        "base_price_money": {
          "$ref": "#/definitions/Money",
          "description": "The base price for a single unit of the line item's associated\nvariation. If a line item represents a Custom Amount instead of a\nparticular product, this field indicates that amount."
        },
        "discounts": {
          "description": "The discounts include the custom discounts.",
          "items": {
            "$ref": "#/definitions/CreateOrderRequestDiscount"
          },
          "type": "array"
        },
        "name": {
          "description": "The name of the line item. This value cannot exceed 500 characters.",
          "maxLength": 500,
          "type": "string"
        },
        "quantity": {
          "description": "The quantity to purchase, as a string representation of a number.\nCurrently, only integer values are supported.",
          "minLength": 1,
          "type": "string"
        },
        "taxes": {
          "description": "The taxes include the custom taxes.",
          "items": {
            "$ref": "#/definitions/CreateOrderRequestTax"
          },
          "type": "array"
        }
      },
      "required": [
        "quantity"
      ],
      "type": "object"
    },
    "CreateOrderRequestTax": {
      "description": "Represents a tax that applies to either a single line item or an entire order.",
      "properties": {
        "name": {
          "description": "The tax's name.",
          "maxLength": 255,
          "type": "string"
        },
        "percentage": {
          "description": "The percentage of the tax, as a string representation of a decimal number.\n\nA value of `7.25` corresponds to a percentage of 7.25%. This value range between 0.0 up to 100.0",
          "type": "string"
        },
        "type": {
          "description": "Indicates the calculation method used to apply the line item tax.\n\nDefault: `ADDITIVE`; See [OrderLineItemTaxType](#type-orderlineitemtaxtype) for possible values.",
          "enum": [
            "UNKNOWN",
            "ADDITIVE",
            "INCLUSIVE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreateRefundRequest": {
      "description": "Defines the body parameters that can be included in\na request to the [CreateRefund](#endpoint-createrefund) endpoint.",
      "example": {
        "request_body": {
          "amount_money": {
            "amount": 100,
            "currency": "USD"
          },
          "idempotency_key": "YOUR_IDEMPOTENCY_KEY",
          "reason": "a reason",
          "tender_id": "TENDER_ID"
        },
        "request_url": "/v2/locations/LOCATION_ID/transactions/TRANSACTION_ID/refund"
      },
      "properties": {
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money to refund.\n\nNote that you specify the amount in the\n__smallest denomination of the applicable currency__. For example, US dollar\namounts are specified in cents. See\n[Working with monetary amounts](#workingwithmonetaryamounts) for details.\n\nThis amount cannot exceed the amount that was originally charged to the\ntender that corresponds to `tender_id`."
        },
        "idempotency_key": {
          "description": "A value you specify that uniquely identifies this\nrefund among refunds you've created for the tender.\n\nIf you're unsure whether a particular refund succeeded,\nyou can reattempt it with the same idempotency key without\nworrying about duplicating the refund.\n\nSee [Idempotency keys](#idempotencykeys) for more information.",
          "type": "string"
        },
        "reason": {
          "description": "A description of the reason for the refund.\n\nDefault value: `Refund via API`",
          "type": "string"
        },
        "tender_id": {
          "description": "The ID of the tender to refund.\n\nA [`Transaction`](#type-transaction) has one or more `tenders` (i.e., methods\nof payment) associated with it, and you refund each tender separately with\nthe Connect API.",
          "type": "string"
        }
      },
      "required": [
        "idempotency_key",
        "tender_id",
        "amount_money"
      ],
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/CreateRefund/CreateRefundRequest.csharp",
        "php": "/sdk_samples/CreateRefund/CreateRefundRequest.php",
        "python": "/sdk_samples/CreateRefund/CreateRefundRequest.python",
        "ruby": "/sdk_samples/CreateRefund/CreateRefundRequest.ruby"
      }
    },
    "CreateRefundResponse": {
      "description": "Defines the fields that are included in the response body of\na request to the [CreateRefund](#endpoint-createrefund) endpoint.\n\nOne of `errors` or `refund` is present in a given response (never both).",
      "example": {
        "refund": {
          "amount_money": {
            "amount": 100,
            "currency": "USD"
          },
          "created_at": "2016-02-12T00:28:18Z",
          "id": "b27436d1-7f8e-5610-45c6-417ef71434b4-SW",
          "location_id": "18YC4JDH91E1H",
          "reason": "some reason",
          "status": "PENDING",
          "tender_id": "TENDER_ID",
          "transaction_id": "TRANSACTION_ID"
        }
      },
      "properties": {
        "errors": {
          "description": "Any errors that occurred during the request.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        },
        "refund": {
          "$ref": "#/definitions/Refund",
          "description": "The created refund."
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/CreateRefund/CreateRefundResponse.csharp",
        "php": "/sdk_samples/CreateRefund/CreateRefundResponse.php",
        "python": "/sdk_samples/CreateRefund/CreateRefundResponse.python",
        "ruby": "/sdk_samples/CreateRefund/CreateRefundResponse.ruby"
      }
    },
    "Currency": {
      "description": "Indicates the associated currency for an amount of money. Values correspond\nto [ISO 4217](https://wikipedia.org/wiki/ISO_4217).",
      "enum": [
        "AED",
        "AFN",
        "ALL",
        "AMD",
        "ANG",
        "AOA",
        "ARS",
        "AUD",
        "AWG",
        "AZN",
        "BAM",
        "BBD",
        "BDT",
        "BGN",
        "BHD",
        "BIF",
        "BMD",
        "BND",
        "BOB",
        "BOV",
        "BRL",
        "BSD",
        "BTN",
        "BWP",
        "BYR",
        "BZD",
        "CAD",
        "CDF",
        "CHE",
        "CHF",
        "CHW",
        "CLF",
        "CLP",
        "CNY",
        "COP",
        "COU",
        "CRC",
        "CUC",
        "CUP",
        "CVE",
        "CZK",
        "DJF",
        "DKK",
        "DOP",
        "DZD",
        "EGP",
        "ERN",
        "ETB",
        "EUR",
        "FJD",
        "FKP",
        "GBP",
        "GEL",
        "GHS",
        "GIP",
        "GMD",
        "GNF",
        "GTQ",
        "GYD",
        "HKD",
        "HNL",
        "HRK",
        "HTG",
        "HUF",
        "IDR",
        "ILS",
        "INR",
        "IQD",
        "IRR",
        "ISK",
        "JMD",
        "JOD",
        "JPY",
        "KES",
        "KGS",
        "KHR",
        "KMF",
        "KPW",
        "KRW",
        "KWD",
        "KYD",
        "KZT",
        "LAK",
        "LBP",
        "LKR",
        "LRD",
        "LSL",
        "LTL",
        "LVL",
        "LYD",
        "MAD",
        "MDL",
        "MGA",
        "MKD",
        "MMK",
        "MNT",
        "MOP",
        "MRO",
        "MUR",
        "MVR",
        "MWK",
        "MXN",
        "MXV",
        "MYR",
        "MZN",
        "NAD",
        "NGN",
        "NIO",
        "NOK",
        "NPR",
        "NZD",
        "OMR",
        "PAB",
        "PEN",
        "PGK",
        "PHP",
        "PKR",
        "PLN",
        "PYG",
        "QAR",
        "RON",
        "RSD",
        "RUB",
        "RWF",
        "SAR",
        "SBD",
        "SCR",
        "SDG",
        "SEK",
        "SGD",
        "SHP",
        "SLL",
        "SOS",
        "SRD",
        "SSP",
        "STD",
        "SVC",
        "SYP",
        "SZL",
        "THB",
        "TJS",
        "TMT",
        "TND",
        "TOP",
        "TRY",
        "TTD",
        "TWD",
        "TZS",
        "UAH",
        "UGX",
        "USD",
        "USN",
        "USS",
        "UYI",
        "UYU",
        "UZS",
        "VEF",
        "VND",
        "VUV",
        "WST",
        "XAF",
        "XAG",
        "XAU",
        "XBA",
        "XBB",
        "XBC",
        "XBD",
        "XCD",
        "XDR",
        "XOF",
        "XPD",
        "XPF",
        "XPT",
        "XTS",
        "XXX",
        "YER",
        "ZAR",
        "ZMK",
        "ZMW",
        "BTC"
      ],
      "type": "string"
    },
    "Customer": {
      "description": "Represents one of a business's customers, which can have one or more\ncards on file associated with it.",
      "properties": {
        "address": {
          "$ref": "#/definitions/Address",
          "description": "The customer's physical address."
        },
        "cards": {
          "description": "The non-confidential details of the customer's cards on file.",
          "items": {
            "$ref": "#/definitions/Card"
          },
          "type": "array"
        },
        "company_name": {
          "description": "The name of the customer's company.",
          "type": "string"
        },
        "created_at": {
          "description": "The time when the customer was created, in RFC 3339 format.",
          "type": "string"
        },
        "email_address": {
          "description": "The customer's email address.",
          "type": "string"
        },
        "family_name": {
          "description": "The customer's family (i.e., last) name.",
          "type": "string"
        },
        "given_name": {
          "description": "The customer's given (i.e., first) name.",
          "type": "string"
        },
        "groups": {
          "description": "The groups the customer belongs to.",
          "items": {
            "$ref": "#/definitions/CustomerGroupInfo"
          },
          "type": "array"
        },
        "id": {
          "description": "The customer's unique ID.",
          "type": "string"
        },
        "nickname": {
          "description": "The customer's nickname.",
          "type": "string"
        },
        "note": {
          "description": "A note to associate with the customer.",
          "type": "string"
        },
        "phone_number": {
          "description": "The customer's phone number.",
          "type": "string"
        },
        "preferences": {
          "$ref": "#/definitions/CustomerPreferences",
          "description": "The customer's preferences."
        },
        "reference_id": {
          "description": "A second ID you can set to associate the customer with an\nentity in another system.",
          "type": "string"
        },
        "updated_at": {
          "description": "The time when the customer was last updated, in RFC 3339 format.",
          "type": "string"
        }
      },
      "required": [
        "id",
        "created_at",
        "updated_at"
      ],
      "type": "object"
    },
    "CustomerGroupInfo": {
      "description": "Contains some brief information about a customer group with its identifier included.",
      "properties": {
        "id": {
          "description": "The ID of the customer group.",
          "type": "string"
        },
        "name": {
          "description": "The name of the customer group.",
          "type": "string"
        }
      },
      "required": [
        "id",
        "name"
      ],
      "type": "object"
    },
    "CustomerPreferences": {
      "description": "Represents a particular customer's preferences.",
      "properties": {
        "email_unsubscribed": {
          "description": "The customer has unsubscribed from receiving marketing campaign emails.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "DeleteCatalogObjectRequest": {
      "description": "",
      "example": {
        "request_url": "https://connect.squareup.com/v2/catalog/object/7SB3ZQYJ5GDMVFL7JK46JCHT"
      },
      "properties": {},
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectRequest.csharp",
        "php": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectRequest.php",
        "python": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectRequest.python",
        "ruby": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectRequest.ruby"
      }
    },
    "DeleteCatalogObjectResponse": {
      "description": "",
      "example": {
        "deleted_at": "2016-11-16T22:25:24.878Z",
        "deleted_object_ids": [
          "7SB3ZQYJ5GDMVFL7JK46JCHT",
          "KQLFFHA6K6J3YQAQAWDQAL57"
        ]
      },
      "properties": {
        "deleted_at": {
          "description": "The database [timestamp](#workingwithdates) of this deletion in RFC 3339 format, e.g.,\n\"2016-09-04T23:59:33.123Z\".",
          "type": "string"
        },
        "deleted_object_ids": {
          "description": "The IDs of all [CatalogObject](#type-catalogobject)s deleted by this request.\nMultiple IDs may be returned when associated objects are also deleted, for example\na [CatalogItemVariation](#type-catalogitemvariation) will be deleted (and its ID included in this field)\nwhen its parent [CatalogItem](#type-catalogitem) is deleted.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "errors": {
          "description": "The set of [Error](#type-error)s encountered.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectResponse.csharp",
        "php": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectResponse.php",
        "python": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectResponse.python",
        "ruby": "/sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectResponse.ruby"
      }
    },
    "DeleteCustomerCardRequest": {
      "description": "",
      "example": {
        "request_url": "https://connect.squareup.com/v2/customers/CUSTOMER_ID"
      },
      "properties": {},
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.csharp",
        "php": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.php",
        "python": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.python",
        "ruby": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.ruby"
      }
    },
    "DeleteCustomerCardResponse": {
      "description": "Defines the fields that are included in the response body of\na request to the [DeleteCustomerCard](#endpoint-deletecustomercard) endpoint.",
      "example": {},
      "properties": {
        "errors": {
          "description": "Any errors that occurred during the request.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.csharp",
        "php": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.php",
        "python": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.python",
        "ruby": "/sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.ruby"
      }
    },
    "DeleteCustomerRequest": {
      "description": "",
      "example": {
        "request_url": "https://connect.squareup.com/v2/customers/CUSTOMER_ID"
      },
      "properties": {},
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/DeleteCustomer/DeleteCustomerRequest.csharp",
        "php": "/sdk_samples/DeleteCustomer/DeleteCustomerRequest.php",
        "python": "/sdk_samples/DeleteCustomer/DeleteCustomerRequest.python",
        "ruby": "/sdk_samples/DeleteCustomer/DeleteCustomerRequest.ruby"
      }
    },
    "DeleteCustomerResponse": {
      "description": "Defines the fields that are included in the response body of\na request to the [DeleteCustomer](#endpoint-deletecustomer) endpoint.",
      "example": {},
      "properties": {
        "errors": {
          "description": "Any errors that occurred during the request.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/DeleteCustomer/DeleteCustomerResponse.csharp",
        "php": "/sdk_samples/DeleteCustomer/DeleteCustomerResponse.php",
        "python": "/sdk_samples/DeleteCustomer/DeleteCustomerResponse.python",
        "ruby": "/sdk_samples/DeleteCustomer/DeleteCustomerResponse.ruby"
      }
    },
    "Device": {
      "properties": {
        "id": {
          "description": "The device's Square-issued ID.",
          "type": "string"
        },
        "name": {
          "description": "The device's merchant-specified name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Error": {
      "description": "Represents an error encountered during a request to the Connect API.\n\nSee [Handling errors](#handlingerrors) for more information.",
      "properties": {
        "category": {
          "description": "The error's high-level category. See [ErrorCategory](#type-errorcategory)\nfor possible values.",
          "enum": [
            "API_ERROR",
            "AUTHENTICATION_ERROR",
            "INVALID_REQUEST_ERROR",
            "RATE_LIMIT_ERROR",
            "PAYMENT_METHOD_ERROR",
            "REFUND_ERROR"
          ],
          "type": "string"
        },
        "code": {
          "description": "The error's specific code. See [ErrorCode](#type-errorcode) for possible\nvalues",
          "enum": [
            "INTERNAL_SERVER_ERROR",
            "UNAUTHORIZED",
            "ACCESS_TOKEN_EXPIRED",
            "ACCESS_TOKEN_REVOKED",
            "FORBIDDEN",
            "INSUFFICIENT_SCOPES",
            "APPLICATION_DISABLED",
            "V1_APPLICATION",
            "V1_ACCESS_TOKEN",
            "CARD_PROCESSING_NOT_ENABLED",
            "BAD_REQUEST",
            "MISSING_REQUIRED_PARAMETER",
            "INCORRECT_TYPE",
            "INVALID_TIME",
            "INVALID_TIME_RANGE",
            "INVALID_VALUE",
            "INVALID_CURSOR",
            "UNKNOWN_QUERY_PARAMETER",
            "CONFLICTING_PARAMETERS",
            "EXPECTED_JSON_BODY",
            "INVALID_SORT_ORDER",
            "VALUE_REGEX_MISMATCH",
            "VALUE_TOO_SHORT",
            "VALUE_TOO_LONG",
            "VALUE_TOO_LOW",
            "VALUE_TOO_HIGH",
            "VALUE_EMPTY",
            "ARRAY_EMPTY",
            "EXPECTED_BOOLEAN",
            "EXPECTED_INTEGER",
            "EXPECTED_FLOAT",
            "EXPECTED_STRING",
            "EXPECTED_OBJECT",
            "EXPECTED_ARRAY",
            "EXPECTED_BASE64_ENCODED_BYTE_ARRAY",
            "INVALID_ARRAY_VALUE",
            "INVALID_ENUM_VALUE",
            "INVALID_CONTENT_TYPE",
            "INVALID_FORM_VALUE",
            "ONE_INSTRUMENT_EXPECTED",
            "NO_FIELDS_SET",
            "CARD_EXPIRED",
            "INVALID_EXPIRATION",
            "INVALID_EXPIRATION_YEAR",
            "INVALID_EXPIRATION_DATE",
            "UNSUPPORTED_CARD_BRAND",
            "INVALID_CARD",
            "DELAYED_TRANSACTION_EXPIRED",
            "DELAYED_TRANSACTION_CANCELED",
            "DELAYED_TRANSACTION_CAPTURED",
            "DELAYED_TRANSACTION_FAILED",
            "CARD_TOKEN_EXPIRED",
            "CARD_TOKEN_USED",
            "AMOUNT_TOO_HIGH",
            "UNSUPPORTED_INSTRUMENT_TYPE",
            "REFUND_AMOUNT_INVALID",
            "REFUND_ALREADY_PENDING",
            "PAYMENT_NOT_REFUNDABLE",
            "INVALID_CARD_DATA",
            "IDEMPOTENCY_KEY_REUSED",
            "UNEXPECTED_VALUE",
            "SANDBOX_NOT_SUPPORTED",
            "INVALID_EMAIL_ADDRESS",
            "CHECKOUT_EXPIRED",
            "CARD_DECLINED",
            "VERIFY_CVV_FAILURE",
            "VERIFY_AVS_FAILURE",
            "CARD_DECLINED_CALL_ISSUER",
            "NOT_FOUND",
            "REQUEST_TIMEOUT",
            "CONFLICT",
            "REQUEST_ENTITY_TOO_LARGE",
            "UNSUPPORTED_MEDIA_TYPE",
            "RATE_LIMITED",
            "NOT_IMPLEMENTED",
            "SERVICE_UNAVAILABLE"
          ],
          "type": "string"
        },
        "detail": {
          "description": "A human-readable description of the error for debugging purposes.",
          "type": "string"
        },
        "field": {
          "description": "The name of the field provided in the original request that the error\npertains to, if any.",
          "type": "string"
        }
      },
      "required": [
        "category",
        "code"
      ],
      "type": "object"
    },
    "ErrorCategory": {
      "description": "Indicates which high-level category of error has occurred during a\nrequest to the Connect API.",
      "enum": [
        "API_ERROR",
        "AUTHENTICATION_ERROR",
        "INVALID_REQUEST_ERROR",
        "RATE_LIMIT_ERROR",
        "PAYMENT_METHOD_ERROR",
        "REFUND_ERROR"
      ],
      "type": "string"
    },
    "ErrorCode": {
      "description": "Indicates specific errors that can occur during a request to the\nConnect API.",
      "enum": [
        "INTERNAL_SERVER_ERROR",
        "UNAUTHORIZED",
        "ACCESS_TOKEN_EXPIRED",
        "ACCESS_TOKEN_REVOKED",
        "FORBIDDEN",
        "INSUFFICIENT_SCOPES",
        "APPLICATION_DISABLED",
        "V1_APPLICATION",
        "V1_ACCESS_TOKEN",
        "CARD_PROCESSING_NOT_ENABLED",
        "BAD_REQUEST",
        "MISSING_REQUIRED_PARAMETER",
        "INCORRECT_TYPE",
        "INVALID_TIME",
        "INVALID_TIME_RANGE",
        "INVALID_VALUE",
        "INVALID_CURSOR",
        "UNKNOWN_QUERY_PARAMETER",
        "CONFLICTING_PARAMETERS",
        "EXPECTED_JSON_BODY",
        "INVALID_SORT_ORDER",
        "VALUE_REGEX_MISMATCH",
        "VALUE_TOO_SHORT",
        "VALUE_TOO_LONG",
        "VALUE_TOO_LOW",
        "VALUE_TOO_HIGH",
        "VALUE_EMPTY",
        "ARRAY_EMPTY",
        "EXPECTED_BOOLEAN",
        "EXPECTED_INTEGER",
        "EXPECTED_FLOAT",
        "EXPECTED_STRING",
        "EXPECTED_OBJECT",
        "EXPECTED_ARRAY",
        "EXPECTED_BASE64_ENCODED_BYTE_ARRAY",
        "INVALID_ARRAY_VALUE",
        "INVALID_ENUM_VALUE",
        "INVALID_CONTENT_TYPE",
        "INVALID_FORM_VALUE",
        "ONE_INSTRUMENT_EXPECTED",
        "NO_FIELDS_SET",
        "CARD_EXPIRED",
        "INVALID_EXPIRATION",
        "INVALID_EXPIRATION_YEAR",
        "INVALID_EXPIRATION_DATE",
        "UNSUPPORTED_CARD_BRAND",
        "INVALID_CARD",
        "DELAYED_TRANSACTION_EXPIRED",
        "DELAYED_TRANSACTION_CANCELED",
        "DELAYED_TRANSACTION_CAPTURED",
        "DELAYED_TRANSACTION_FAILED",
        "CARD_TOKEN_EXPIRED",
        "CARD_TOKEN_USED",
        "AMOUNT_TOO_HIGH",
        "UNSUPPORTED_INSTRUMENT_TYPE",
        "REFUND_AMOUNT_INVALID",
        "REFUND_ALREADY_PENDING",
        "PAYMENT_NOT_REFUNDABLE",
        "INVALID_CARD_DATA",
        "IDEMPOTENCY_KEY_REUSED",
        "UNEXPECTED_VALUE",
        "SANDBOX_NOT_SUPPORTED",
        "INVALID_EMAIL_ADDRESS",
        "CHECKOUT_EXPIRED",
        "CARD_DECLINED",
        "VERIFY_CVV_FAILURE",
        "VERIFY_AVS_FAILURE",
        "CARD_DECLINED_CALL_ISSUER",
        "NOT_FOUND",
        "REQUEST_TIMEOUT",
        "CONFLICT",
        "REQUEST_ENTITY_TOO_LARGE",
        "UNSUPPORTED_MEDIA_TYPE",
        "RATE_LIMITED",
        "NOT_IMPLEMENTED",
        "SERVICE_UNAVAILABLE"
      ],
      "type": "string"
    },
    "InventoryAlertType": {
      "description": "Indicates whether Square should alert the merchant when the inventory quantity of a [CatalogItemVariation](#type-catalogitemvariation) is low.",
      "enum": [
        "NONE",
        "LOW_QUANTITY"
      ],
      "type": "string"
    },
    "ItemVariationLocationOverrides": {
      "description": "Price and inventory alerting overrides for a [CatalogItemVariation](#type-catalogitemvariation) at a specific [location][#type-location].",
      "properties": {
        "inventory_alert_threshold": {
          "description": "If the inventory quantity for the variation is less than or equal to this value and `inventory_alert_type`\nis `LOW_QUANTITY`, the variation displays an alert in the merchant dashboard.\n\nThis value is always an integer.",
          "format": "int64",
          "type": "integer"
        },
        "inventory_alert_type": {
          "description": "Indicates whether the [CatalogItemVariation](#type-catalogitemvariation) displays an alert when its inventory\nquantity is less than or equal to its `inventory_alert_threshold`. See [InventoryAlertType](#type-inventoryalerttype)\nfor all possible values.",
          "enum": [
            "NONE",
            "LOW_QUANTITY"
          ],
          "type": "string"
        },
        "location_id": {
          "description": "The ID of the [location][#type-location].",
          "type": "string"
        },
        "price_money": {
          "$ref": "#/definitions/Money",
          "description": "The price of the [CatalogItemVariation](#type-catalogitemvariation) at the given [location][#type-location], or blank for variable pricing."
        },
        "pricing_type": {
          "description": "The pricing type (fixed or variable) for the [CatalogItemVariation](#type-catalogitemvariation) at the given [location][#type-location].\nSee [CatalogPricingType](#type-catalogpricingtype) for all possible values.",
          "enum": [
            "FIXED_PRICING",
            "VARIABLE_PRICING"
          ],
          "type": "string"
        },
        "track_inventory": {
          "description": "If `true`, inventory tracking is active for the [CatalogItemVariation](#type-catalogitemvariation) at this [location][#type-location].",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ListCatalogRequest": {
      "description": "",
      "example": {
        "request_url": "https://connect.squareup.com/v2/catalog/list?types=category,tax"
      },
      "properties": {
        "cursor": {
          "description": "The pagination cursor returned in the previous response. Leave unset for an initial request.\nSee [Paginating results](#paginatingresults) for more information.",
          "type": "string"
        },
        "types": {
          "description": "An optional case-insensitive, comma-separated list of object types to retrieve, for example\n`ITEM,ITEM_VARIATION,CATEGORY`.\n\nThe legal values are taken from the [CatalogObjectType](#type-catalogobjecttype)\nenumeration, namely `\"ITEM\"`, `\"ITEM_VARIATION\"`, `\"CATEGORY\"`, `\"DISCOUNT\"`, `\"TAX\"`,\n`\"MODIFIER\"`, or `\"MODIFIER_LIST\"`.",
          "type": "string"
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/Catalog/ListCatalog/ListCatalogRequest.csharp",
        "php": "/sdk_samples/Catalog/ListCatalog/ListCatalogRequest.php",
        "python": "/sdk_samples/Catalog/ListCatalog/ListCatalogRequest.python",
        "ruby": "/sdk_samples/Catalog/ListCatalog/ListCatalogRequest.ruby"
      }
    },
    "ListCatalogResponse": {
      "description": "",
      "example": {
        "objects": [
          {
            "category_data": {
              "name": "Beverages"
            },
            "id": "5ZYQZZ2IECPVJ2IJ5KQPRDC3",
            "is_deleted": false,
            "present_at_all_locations": true,
            "type": "CATEGORY",
            "updated_at": "2017-02-21T14:50:26.495Z",
            "version": 1487688626495
          },
          {
            "id": "L5R47DGBZOOVKCAFIXC56AEN",
            "is_deleted": false,
            "present_at_all_locations": true,
            "tax_data": {
              "calculation_phase": "TAX_SUBTOTAL_PHASE",
              "enabled": true,
              "inclusion_type": "ADDITIVE",
              "name": "Sales Tax",
              "percentage": "5.0"
            },
            "type": "TAX",
            "updated_at": "2017-02-21T14:50:26.495Z",
            "version": 1487688626495
          }
        ]
      },
      "properties": {
        "cursor": {
          "description": "The pagination cursor to be used in a subsequent request. If unset, this is the final response.\nSee [Paginating results](#paginatingresults) for more information.",
          "type": "string"
        },
        "errors": {
          "description": "The set of [Error](#type-error)s encountered.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        },
        "objects": {
          "description": "The [CatalogObject](#type-catalogobject)s returned.",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/Catalog/ListCatalog/ListCatalogResponse.csharp",
        "php": "/sdk_samples/Catalog/ListCatalog/ListCatalogResponse.php",
        "python": "/sdk_samples/Catalog/ListCatalog/ListCatalogResponse.python",
        "ruby": "/sdk_samples/Catalog/ListCatalog/ListCatalogResponse.ruby"
      }
    },
    "ListCustomersRequest": {
      "description": "Defines the query parameters that can be provided in a request to the\n[ListCustomers](#endpoint-listcustomers) endpoint.",
      "example": {
        "request_url": "https://connect.squareup.com/v2/customers"
      },
      "properties": {
        "cursor": {
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Paginating results](#paginatingresults) for more information.",
          "type": "string"
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/ListCustomers/ListCustomersRequest.csharp",
        "php": "/sdk_samples/ListCustomers/ListCustomersRequest.php",
        "python": "/sdk_samples/ListCustomers/ListCustomersRequest.python",
        "ruby": "/sdk_samples/ListCustomers/ListCustomersRequest.ruby"
      }
    },
    "ListCustomersResponse": {
      "description": "Defines the fields that are included in the response body of\na request to the [ListCustomers](#endpoint-listcustomers) endpoint.\n\nOne of `errors` or `customers` is present in a given response (never both).",
      "example": {
        "customers": [
          {
            "address": {
              "address_line_1": "500 Electric Ave",
              "address_line_2": "Suite 600",
              "administrative_district_level_1": "NY",
              "country": "US",
              "locality": "New York",
              "postal_code": "10003"
            },
            "created_at": "2016-03-23T20:21:54.859Z",
            "email_address": "Amelia.Earhart@example.com",
            "family_name": "Earhart",
            "given_name": "Amelia",
            "groups": [
              {
                "id": "16894e93-96eb-4ced-b24b-f71d42bf084c",
                "name": "Aviation Enthusiasts"
              }
            ],
            "id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
            "note": "a customer",
            "phone_number": "1-212-555-4240",
            "reference_id": "YOUR_REFERENCE_ID",
            "updated_at": "2016-03-23T20:21:55Z"
          }
        ]
      },
      "properties": {
        "cursor": {
          "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint. This value is present only if the request\nsucceeded and additional results are available.\n\nSee [Paginating results](#paginatingresults) for more information.",
          "type": "string"
        },
        "customers": {
          "description": "An array of `Customer` objects that match your query.",
          "items": {
            "$ref": "#/definitions/Customer"
          },
          "type": "array"
        },
        "errors": {
          "description": "Any errors that occurred during the request.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/ListCustomers/ListCustomersResponse.csharp",
        "php": "/sdk_samples/ListCustomers/ListCustomersResponse.php",
        "python": "/sdk_samples/ListCustomers/ListCustomersResponse.python",
        "ruby": "/sdk_samples/ListCustomers/ListCustomersResponse.ruby"
      }
    },
    "ListLocationsRequest": {
      "description": "",
      "example": {
        "request_url": "https://connect.squareup.com/v2/locations"
      },
      "properties": {},
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/ListLocations/ListLocationsRequest.csharp",
        "php": "/sdk_samples/ListLocations/ListLocationsRequest.php",
        "python": "/sdk_samples/ListLocations/ListLocationsRequest.python",
        "ruby": "/sdk_samples/ListLocations/ListLocationsRequest.ruby"
      }
    },
    "ListLocationsResponse": {
      "description": "Defines the fields that are included in the response body of\na request to the [ListLocations](#endpoint-listlocations) endpoint.\n\nOne of `errors` or `locations` is present in a given response (never both).",
      "example": {
        "locations": [
          {
            "address": {
              "address_line_1": "123 Main St",
              "administrative_district_level_1": "CA",
              "country": "US",
              "locality": "San Francisco",
              "postal_code": "94114"
            },
            "capabilities": [
              "CREDIT_CARD_PROCESSING"
            ],
            "id": "18YC4JDH91E1H",
            "name": "your location name",
            "timezone": "America/Los_Angeles"
          }
        ]
      },
      "properties": {
        "errors": {
          "description": "Any errors that occurred during the request.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        },
        "locations": {
          "description": "The business's locations.",
          "items": {
            "$ref": "#/definitions/Location"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/ListLocations/ListLocationsResponse.csharp",
        "php": "/sdk_samples/ListLocations/ListLocationsResponse.php",
        "python": "/sdk_samples/ListLocations/ListLocationsResponse.python",
        "ruby": "/sdk_samples/ListLocations/ListLocationsResponse.ruby"
      }
    },
    "ListRefundsRequest": {
      "description": "Defines the query parameters that can be included in\na request to the [ListRefunds](#endpoint-listrefunds) endpoint.",
      "example": {
        "request_url": "https://connect.squareup.com/v2/locations/LOCATION_ID/refunds?begin_time=2016-01-15T00:00:00Z&end_time=2016-01-31T00:00:00Z"
      },
      "properties": {
        "begin_time": {
          "description": "The beginning of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time minus one year.",
          "type": "string"
        },
        "cursor": {
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Paginating results](#paginatingresults) for more information.",
          "type": "string"
        },
        "end_time": {
          "description": "The end of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time.",
          "type": "string"
        },
        "sort_order": {
          "description": "The order in which results are listed in the response (`ASC` for\noldest first, `DESC` for newest first).\n\nDefault value: `DESC`",
          "enum": [
            "DESC",
            "ASC"
          ],
          "type": "string"
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/ListRefunds/ListRefundsRequest.csharp",
        "php": "/sdk_samples/ListRefunds/ListRefundsRequest.php",
        "python": "/sdk_samples/ListRefunds/ListRefundsRequest.python",
        "ruby": "/sdk_samples/ListRefunds/ListRefundsRequest.ruby"
      }
    },
    "ListRefundsResponse": {
      "description": "Defines the fields that are included in the response body of\na request to the [ListRefunds](#endpoint-listrefunds) endpoint.\n\nOne of `errors` or `refunds` is present in a given response (never both).",
      "example": {
        "refunds": [
          {
            "amount_money": {
              "amount": 100,
              "currency": "USD"
            },
            "created_at": "2016-02-12T00:28:18Z",
            "id": "b27436d1-7f8e-5610-45c6-417ef71434b4-SW",
            "location_id": "18YC4JDH91E1H",
            "reason": "some reason",
            "status": "APPROVED",
            "tender_id": "TENDER_ID",
            "transaction_id": "TRANSACTION_ID"
          }
        ]
      },
      "properties": {
        "cursor": {
          "description": "A pagination cursor for retrieving the next set of results,\nif any remain. Provide this value as the `cursor` parameter in a subsequent\nrequest to this endpoint.\n\nSee [Paginating results](#paginatingresults) for more information.",
          "type": "string"
        },
        "errors": {
          "description": "Any errors that occurred during the request.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        },
        "refunds": {
          "description": "An array of refunds that match your query.",
          "items": {
            "$ref": "#/definitions/Refund"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/ListRefunds/ListRefundsResponse.csharp",
        "php": "/sdk_samples/ListRefunds/ListRefundsResponse.php",
        "python": "/sdk_samples/ListRefunds/ListRefundsResponse.python",
        "ruby": "/sdk_samples/ListRefunds/ListRefundsResponse.ruby"
      }
    },
    "ListTransactionsRequest": {
      "description": "Defines the query parameters that can be included in\na request to the [ListTransactions](#endpoint-listtransactions) endpoint.",
      "example": {
        "request_url": "https://connect.squareup.com/v2/locations/LOCATION_ID/transactions?begin_time=2016-01-15T00:00:00Z&end_time=2016-01-31T00:00:00Z"
      },
      "properties": {
        "begin_time": {
          "description": "The beginning of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time minus one year.",
          "type": "string"
        },
        "cursor": {
          "description": "A pagination cursor returned by a previous call to this endpoint.\nProvide this to retrieve the next set of results for your original query.\n\nSee [Paginating results](#paginatingresults) for more information.",
          "type": "string"
        },
        "end_time": {
          "description": "The end of the requested reporting period, in RFC 3339 format.\n\nSee [Date ranges](#dateranges) for details on date inclusivity/exclusivity.\n\nDefault value: The current time.",
          "type": "string"
        },
        "sort_order": {
          "description": "The order in which results are listed in the response (`ASC` for\noldest first, `DESC` for newest first).\n\nDefault value: `DESC`",
          "enum": [
            "DESC",
            "ASC"
          ],
          "type": "string"
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/ListTransactions/ListTransactionsRequest.csharp",
        "php": "/sdk_samples/ListTransactions/ListTransactionsRequest.php",
        "python": "/sdk_samples/ListTransactions/ListTransactionsRequest.python",
        "ruby": "/sdk_samples/ListTransactions/ListTransactionsRequest.ruby"
      }
    },
    "ListTransactionsResponse": {
      "description": "Defines the fields that are included in the response body of\na request to the [ListTransactions](#endpoint-listtransactions) endpoint.\n\nOne of `errors` or `transactions` is present in a given response (never both).",
      "example": {
        "transactions": [
          {
            "created_at": "2016-03-10T22:57:56Z",
            "id": "KnL67ZIwXCPtzOrqj0HrkxMF",
            "location_id": "18YC4JDH91E1H",
            "product": "EXTERNAL_API",
            "reference_id": "some optional reference id",
            "refunds": [
              {
                "amount_money": {
                  "amount": 5000,
                  "currency": "USD"
                },
                "created_at": "2016-03-10T22:59:20Z",
                "id": "7a5RcVI0CxbOcJ2wMOkE",
                "location_id": "18YC4JDH91E1H",
                "processing_fee_money": {
                  "amount": 138,
                  "currency": "USD"
                },
                "reason": "some reason why",
                "status": "APPROVED",
                "tender_id": "MtZRYYdDrYNQbOvV7nbuBvMF",
                "transaction_id": "KnL67ZIwXCPtzOrqj0HrkxMF"
              }
            ],
            "tenders": [
              {
                "amount_money": {
                  "amount": 5000,
                  "currency": "USD"
                },
                "card_details": {
                  "card": {
                    "card_brand": "VISA",
                    "last_4": "1111"
                  },
                  "entry_method": "KEYED",
                  "status": "CAPTURED"
                },
                "created_at": "2016-03-10T22:57:56Z",
                "id": "MtZRYYdDrYNQbOvV7nbuBvMF",
                "location_id": "18YC4JDH91E1H",
                "note": "some optional note",
                "processing_fee_money": {
                  "amount": 138,
                  "currency": "USD"
                },
                "transaction_id": "KnL67ZIwXCPtzOrqj0HrkxMF",
                "type": "CARD"
              }
            ]
          }
        ]
      },
      "properties": {
        "cursor": {
          "description": "A pagination cursor for retrieving the next set of results,\nif any remain. Provide this value as the `cursor` parameter in a subsequent\nrequest to this endpoint.\n\nSee [Paginating results](#paginatingresults) for more information.",
          "type": "string"
        },
        "errors": {
          "description": "Any errors that occurred during the request.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        },
        "transactions": {
          "description": "An array of transactions that match your query.",
          "items": {
            "$ref": "#/definitions/Transaction"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/ListTransactions/ListTransactionsResponse.csharp",
        "php": "/sdk_samples/ListTransactions/ListTransactionsResponse.php",
        "python": "/sdk_samples/ListTransactions/ListTransactionsResponse.python",
        "ruby": "/sdk_samples/ListTransactions/ListTransactionsResponse.ruby"
      }
    },
    "Location": {
      "description": "Represents one of a business's locations.",
      "properties": {
        "address": {
          "$ref": "#/definitions/Address",
          "description": "The location's physical address."
        },
        "capabilities": {
          "description": "Indicates which Square features are enabled for the location.\n\nSee [LocationCapability](#type-locationcapability) for possible values.",
          "items": {
            "enum": [
              "CREDIT_CARD_PROCESSING"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "id": {
          "description": "The location's unique ID.",
          "type": "string"
        },
        "name": {
          "description": "The location's name.",
          "type": "string"
        },
        "timezone": {
          "description": "The [IANA Timezone Database](https://www.iana.org/time-zones)\nidentifier for the location's timezone.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LocationCapability": {
      "description": "Indicates account capabilities that a business's location might or\nmight not have enabled.",
      "enum": [
        "CREDIT_CARD_PROCESSING"
      ],
      "type": "string"
    },
    "Money": {
      "description": "Represents an amount of money.\n\n__Important:__ Unlike version 1 of the Connect API, __all monetary amounts\nreturned by v2 endpoints are positive.__ (In v1, monetary amounts are negative\nif they represent money being paid _by_ a merchant, instead of money being\npaid _to_ a merchant.)",
      "properties": {
        "amount": {
          "description": "The amount of money, in the smallest denomination of the\ncurrency indicated by `currency`. For example, when `currency` is `USD`,\n`amount` is in cents.",
          "format": "int64",
          "type": "integer"
        },
        "currency": {
          "description": "The type of currency, in __ISO 4217 format__. For example, the currency\ncode for US dollars is `USD`.\n\nSee [Currency](#type-currency) for possible values.",
          "enum": [
            "AED",
            "AFN",
            "ALL",
            "AMD",
            "ANG",
            "AOA",
            "ARS",
            "AUD",
            "AWG",
            "AZN",
            "BAM",
            "BBD",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BND",
            "BOB",
            "BOV",
            "BRL",
            "BSD",
            "BTN",
            "BWP",
            "BYR",
            "BZD",
            "CAD",
            "CDF",
            "CHE",
            "CHF",
            "CHW",
            "CLF",
            "CLP",
            "CNY",
            "COP",
            "COU",
            "CRC",
            "CUC",
            "CUP",
            "CVE",
            "CZK",
            "DJF",
            "DKK",
            "DOP",
            "DZD",
            "EGP",
            "ERN",
            "ETB",
            "EUR",
            "FJD",
            "FKP",
            "GBP",
            "GEL",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GTQ",
            "GYD",
            "HKD",
            "HNL",
            "HRK",
            "HTG",
            "HUF",
            "IDR",
            "ILS",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JMD",
            "JOD",
            "JPY",
            "KES",
            "KGS",
            "KHR",
            "KMF",
            "KPW",
            "KRW",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LKR",
            "LRD",
            "LSL",
            "LTL",
            "LVL",
            "LYD",
            "MAD",
            "MDL",
            "MGA",
            "MKD",
            "MMK",
            "MNT",
            "MOP",
            "MRO",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MXV",
            "MYR",
            "MZN",
            "NAD",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OMR",
            "PAB",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "RON",
            "RSD",
            "RUB",
            "RWF",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SHP",
            "SLL",
            "SOS",
            "SRD",
            "SSP",
            "STD",
            "SVC",
            "SYP",
            "SZL",
            "THB",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRY",
            "TTD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "USD",
            "USN",
            "USS",
            "UYI",
            "UYU",
            "UZS",
            "VEF",
            "VND",
            "VUV",
            "WST",
            "XAF",
            "XAG",
            "XAU",
            "XBA",
            "XBB",
            "XBC",
            "XBD",
            "XCD",
            "XDR",
            "XOF",
            "XPD",
            "XPF",
            "XPT",
            "XTS",
            "XXX",
            "YER",
            "ZAR",
            "ZMK",
            "ZMW",
            "BTC"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Order": {
      "description": "Contains all information related to a single order to process with Square,\nincluding line items that specify the products to purchase",
      "properties": {
        "line_items": {
          "description": "The line items included in the order. Every order has at least one\nline item.",
          "items": {
            "$ref": "#/definitions/OrderLineItem"
          },
          "type": "array"
        },
        "location_id": {
          "description": "The ID of the merchant location this order is associated with.",
          "type": "string"
        },
        "reference_id": {
          "description": "A client specified identifier to associate an entity in another system\nwith this order.",
          "type": "string"
        },
        "total_discount_money": {
          "$ref": "#/definitions/Money",
          "description": "The total discount amount of money to collect for the order."
        },
        "total_money": {
          "$ref": "#/definitions/Money",
          "description": "The total amount of money to collect for the order."
        },
        "total_tax_money": {
          "$ref": "#/definitions/Money",
          "description": "The total tax amount of money to collect for the order."
        }
      },
      "type": "object"
    },
    "OrderLineItem": {
      "description": "Represents a line item in an order. Each line item describes a different\nproduct to purchase, with its own quantity and price details.",
      "properties": {
        "base_price_money": {
          "$ref": "#/definitions/Money",
          "description": "The base price for a single unit of the line item."
        },
        "discounts": {
          "description": "The discounts applied to this line item.",
          "items": {
            "$ref": "#/definitions/OrderLineItemDiscount"
          },
          "type": "array"
        },
        "name": {
          "description": "The name of the line item.",
          "type": "string"
        },
        "quantity": {
          "description": "The quantity of the product to purchase. Currently, this string must\nhave an integer value.",
          "type": "string"
        },
        "taxes": {
          "description": "The taxes applied to this line item.",
          "items": {
            "$ref": "#/definitions/OrderLineItemTax"
          },
          "type": "array"
        },
        "total_discount_money": {
          "$ref": "#/definitions/Money",
          "description": "The total discount amount of money to collect for the line item."
        },
        "total_money": {
          "$ref": "#/definitions/Money",
          "description": "The total amount of money to collect for this line item."
        },
        "total_tax_money": {
          "$ref": "#/definitions/Money",
          "description": "The total tax amount of money to collect for the line item."
        }
      },
      "type": "object"
    },
    "OrderLineItemDiscount": {
      "description": "Represents a discount that applies to one or more line items in an\norder.\n\nFixed-amount, order-level discounts are distributed across all non-zero line item totals.\nThe amount distributed to each line item is relative to that item’s contribution to the order subtotal.",
      "properties": {
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The total monetary amount of the applicable discount.\nIf it is at order level, it is the value of the order level discount.\nIf it is at line item level, it is the value of the line item level discount.\n\nThe amount_money won't be set for a percentage-based discount."
        },
        "applied_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of discount actually applied to this line item.\n\nRepresents the amount of money applied to a line item as a discount\nWhen an amount-based discount is at order-level, this value is different from `amount_money` because the discount is\ndistributed across the line items."
        },
        "name": {
          "description": "The discount's name.",
          "type": "string"
        },
        "percentage": {
          "description": "The percentage of the tax, as a string representation of a decimal number.\nA value of `7.25` corresponds to a percentage of 7.25%.\n\nThe percentage won't be set for an amount-based discount.",
          "type": "string"
        },
        "scope": {
          "description": "Indicates the level at which the discount applies.\nSee [OrderLineItemDiscountScope](#type-orderlineitemdiscountscope) for possible values.",
          "enum": [
            "LINE_ITEM",
            "ORDER"
          ],
          "type": "string"
        },
        "type": {
          "description": "The type of the discount. If it is created by API, it would be either `FIXED_PERCENTAGE` or `FIXED_AMOUNT`.\n\nVARIABLE_* is not supported in API because the order is created at the time of sale and either\npercentage or amount has to be specified.\n\nSee [OrderLineItemDiscountType](#type-orderlineitemdiscounttype) for possible values.",
          "enum": [
            "UNKNOWN",
            "FIXED_PERCENTAGE",
            "FIXED_AMOUNT",
            "VARIABLE_PERCENTAGE",
            "VARIABLE_AMOUNT"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrderLineItemDiscountScope": {
      "description": "Indicates whether this is a line item or order-level discount.",
      "enum": [
        "LINE_ITEM",
        "ORDER"
      ],
      "type": "string"
    },
    "OrderLineItemDiscountType": {
      "description": "Indicates how the discount is applied to the associated line item or order.",
      "enum": [
        "UNKNOWN",
        "FIXED_PERCENTAGE",
        "FIXED_AMOUNT",
        "VARIABLE_PERCENTAGE",
        "VARIABLE_AMOUNT"
      ],
      "type": "string"
    },
    "OrderLineItemTax": {
      "description": "Represents a tax that applies to one or more line items in an order.",
      "properties": {
        "applied_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of the money applied by the tax in an order."
        },
        "name": {
          "description": "The tax's name.",
          "type": "string"
        },
        "percentage": {
          "description": "The percentage of the tax, as a string representation of a decimal number.\n\nA value of `7.25` corresponds to a percentage of 7.25%.",
          "type": "string"
        },
        "type": {
          "description": "Indicates the calculation method used to apply the tax.\n\nSee [OrderLineItemTaxType](#type-orderlineitemtaxtype) for possible values.",
          "enum": [
            "UNKNOWN",
            "ADDITIVE",
            "INCLUSIVE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrderLineItemTaxType": {
      "description": "Indicates how the tax is applied to the associated line item or order.",
      "enum": [
        "UNKNOWN",
        "ADDITIVE",
        "INCLUSIVE"
      ],
      "type": "string"
    },
    "Refund": {
      "description": "Represents a refund processed for a Square transaction.",
      "properties": {
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of money refunded to the buyer."
        },
        "created_at": {
          "description": "The time when the refund was created, in RFC 3339 format.",
          "type": "string"
        },
        "id": {
          "description": "The refund's unique ID.",
          "type": "string"
        },
        "location_id": {
          "description": "The ID of the refund's associated location.",
          "type": "string"
        },
        "processing_fee_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of Square processing fee money refunded to the *merchant*."
        },
        "reason": {
          "description": "The reason for the refund being issued.",
          "type": "string"
        },
        "status": {
          "description": "The current status of the refund (`PENDING`, `APPROVED`, `REJECTED`,\nor `FAILED`).",
          "enum": [
            "PENDING",
            "APPROVED",
            "REJECTED",
            "FAILED"
          ],
          "type": "string"
        },
        "tender_id": {
          "description": "The ID of the refunded tender.",
          "type": "string"
        },
        "transaction_id": {
          "description": "The ID of the transaction that the refunded tender is part of.",
          "type": "string"
        }
      },
      "required": [
        "id",
        "location_id",
        "transaction_id",
        "tender_id",
        "reason",
        "amount_money",
        "status"
      ],
      "type": "object"
    },
    "RefundStatus": {
      "description": "Indicates a refund's current status.",
      "enum": [
        "PENDING",
        "APPROVED",
        "REJECTED",
        "FAILED"
      ],
      "type": "string"
    },
    "RetrieveCatalogObjectRequest": {
      "description": "",
      "example": {
        "request_url": "https://connect.squareup.com/v2/catalog/object/W62UWFY35CWMYGVWK6TWJDNI?include_related_objects=true"
      },
      "properties": {
        "include_related_objects": {
          "description": "If `true`, the response will include additional objects that are related to the\nrequested object, as follows:\n\nIf the `object` field of the response contains a [CatalogItem](#type-catalogitem),\nits associated [CatalogCategory](#type-catalogcategory), [CatalogTax](#type-catalogtax)es, and\n[CatalogModifierList](#type-catalogmodifierlist)s will be returned in the `related_objects` field of the\nresponse. If the `object` field of the response contains a [CatalogItemVariation](#type-catalogitemvariation),\nits parent [CatalogItem](#type-catalogitem) will be returned in the `related_objects` field of\nthe response.\n\nDefault value: `false`",
          "type": "boolean"
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectRequest.csharp",
        "php": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectRequest.php",
        "python": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectRequest.python",
        "ruby": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectRequest.ruby"
      }
    },
    "RetrieveCatalogObjectResponse": {
      "description": "",
      "example": {
        "object": {
          "id": "W62UWFY35CWMYGVWK6TWJDNI",
          "is_deleted": false,
          "item_data": {
            "category_id": "BJNQCF2FJ6S6UIDT65ABHLRX",
            "description": "Hot Leaf Juice",
            "name": "Tea",
            "tax_ids": [
              "HURXQOOAIC4IZSI2BEXQRYFY"
            ],
            "variations": [
              {
                "id": "2TZFAOHWGG7PAK2QEXWYPZSP",
                "is_deleted": false,
                "item_variation_data": {
                  "item_id": "W62UWFY35CWMYGVWK6TWJDNI",
                  "name": "Mug",
                  "ordinal": 0,
                  "price_money": {
                    "amount": 150,
                    "currency": "USD"
                  },
                  "pricing_type": "FIXED_PRICING"
                },
                "present_at_all_locations": true,
                "type": "ITEM_VARIATION",
                "updated_at": "2016-11-16T22:25:24.878Z",
                "version": 1479335124878
              }
            ]
          },
          "present_at_all_locations": true,
          "type": "ITEM",
          "updated_at": "2016-11-16T22:25:24.878Z",
          "version": 1479335124878
        },
        "related_objects": [
          {
            "category_data": {
              "name": "Beverages"
            },
            "id": "BJNQCF2FJ6S6UIDT65ABHLRX",
            "is_deleted": false,
            "present_at_all_locations": true,
            "type": "CATEGORY",
            "updated_at": "2016-11-16T22:25:24.878Z",
            "version": 1479335124878
          },
          {
            "id": "HURXQOOAIC4IZSI2BEXQRYFY",
            "is_deleted": false,
            "present_at_all_locations": true,
            "tax_data": {
              "calculation_phase": "TAX_SUBTOTAL_PHASE",
              "enabled": true,
              "inclusion_type": "ADDITIVE",
              "name": "Sales Tax",
              "percentage": "5.0"
            },
            "type": "TAX",
            "updated_at": "2016-11-16T22:25:24.878Z",
            "version": 1479335124878
          }
        ]
      },
      "properties": {
        "errors": {
          "description": "The set of [Error](#type-error)s encountered.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        },
        "object": {
          "$ref": "#/definitions/CatalogObject",
          "description": "The [CatalogObject](#type-catalogobject)s returned."
        },
        "related_objects": {
          "description": "A list of [CatalogObject](#type-catalogobject)s referenced by the object in the `object` field.",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectResponse.csharp",
        "php": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectResponse.php",
        "python": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectResponse.python",
        "ruby": "/sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectResponse.ruby"
      }
    },
    "RetrieveCustomerRequest": {
      "description": "",
      "example": {
        "request_url": "https://connect.squareup.com/v2/customers/CUSTOMER_ID"
      },
      "properties": {},
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.csharp",
        "php": "/sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.php",
        "python": "/sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.python",
        "ruby": "/sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.ruby"
      }
    },
    "RetrieveCustomerResponse": {
      "description": "Defines the fields that are included in the response body of\na request to the [RetrieveCustomer](#endpoint-retrievecustomer) endpoint.\n\nOne of `errors` or `customer` is present in a given response (never both).",
      "example": {
        "customer": {
          "address": {
            "address_line_1": "500 Electric Ave",
            "address_line_2": "Suite 600",
            "administrative_district_level_1": "NY",
            "country": "US",
            "locality": "New York",
            "postal_code": "10003"
          },
          "created_at": "2016-03-23T20:21:54.859Z",
          "email_address": "Amelia.Earhart@example.com",
          "family_name": "Earhart",
          "given_name": "Amelia",
          "groups": [
            {
              "id": "16894e93-96eb-4ced-b24b-f71d42bf084c",
              "name": "Aviation Enthusiasts"
            }
          ],
          "id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
          "note": "a customer",
          "phone_number": "1-212-555-4240",
          "reference_id": "YOUR_REFERENCE_ID",
          "updated_at": "2016-03-23T20:21:54.859Z"
        }
      },
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer",
          "description": "The requested customer."
        },
        "errors": {
          "description": "Any errors that occurred during the request.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.csharp",
        "php": "/sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.php",
        "python": "/sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.python",
        "ruby": "/sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.ruby"
      }
    },
    "RetrieveTransactionRequest": {
      "description": "",
      "example": {
        "request_url": "https://connect.squareup.com/v2/locations/LOCATION_ID/transactions/TRANSACTION_ID"
      },
      "properties": {},
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/RetrieveTransaction/RetrieveTransactionRequest.csharp",
        "php": "/sdk_samples/RetrieveTransaction/RetrieveTransactionRequest.php",
        "python": "/sdk_samples/RetrieveTransaction/RetrieveTransactionRequest.python",
        "ruby": "/sdk_samples/RetrieveTransaction/RetrieveTransactionRequest.ruby"
      }
    },
    "RetrieveTransactionResponse": {
      "description": "Defines the fields that are included in the response body of\na request to the [RetrieveTransaction](#endpont-retrievetransaction) endpoint.\n\nOne of `errors` or `transaction` is present in a given response (never both).",
      "example": {
        "transaction": {
          "created_at": "2016-03-10T22:57:56Z",
          "id": "KnL67ZIwXCPtzOrqj0HrkxMF",
          "location_id": "18YC4JDH91E1H",
          "product": "EXTERNAL_API",
          "reference_id": "some optional reference id",
          "tenders": [
            {
              "amount_money": {
                "amount": 5000,
                "currency": "USD"
              },
              "card_details": {
                "card": {
                  "card_brand": "VISA",
                  "last_4": "1111"
                },
                "entry_method": "KEYED",
                "status": "CAPTURED"
              },
              "created_at": "2016-03-10T22:57:56Z",
              "id": "MtZRYYdDrYNQbOvV7nbuBvMF",
              "location_id": "18YC4JDH91E1H",
              "note": "some optional note",
              "processing_fee_money": {
                "amount": 138,
                "currency": "USD"
              },
              "transaction_id": "KnL67ZIwXCPtzOrqj0HrkxMF",
              "type": "CARD"
            }
          ]
        }
      },
      "properties": {
        "errors": {
          "description": "Any errors that occurred during the request.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        },
        "transaction": {
          "$ref": "#/definitions/Transaction",
          "description": "The requested transaction."
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/RetrieveTransaction/RetrieveTransactionResponse.csharp",
        "php": "/sdk_samples/RetrieveTransaction/RetrieveTransactionResponse.php",
        "python": "/sdk_samples/RetrieveTransaction/RetrieveTransactionResponse.python",
        "ruby": "/sdk_samples/RetrieveTransaction/RetrieveTransactionResponse.ruby"
      }
    },
    "SearchCatalogObjectsRequest": {
      "description": "",
      "example": {
        "request_body": {
          "object_types": [
            "ITEM"
          ]
        },
        "request_url": "https://connect.squareup.com/v2/catalog/search"
      },
      "properties": {
        "begin_time": {
          "description": "Return only objects that have been modified after this [timestamp](#workingwithdates)\n(in RFC 3339 format, e.g., \"2016-09-04T23:59:33.123Z\"). The timestamp is exclusive -\nobjects whose timestamp is equal to `begin_time` will not be included in the response.",
          "type": "string"
        },
        "cursor": {
          "description": "The pagination cursor returned in the previous response. Leave unset for an initial request.\nSee [Paginating results](#paginatingresults) for more information.",
          "type": "string"
        },
        "include_deleted_objects": {
          "description": "If `true`, deleted objects will be included in the results. Deleted objects will have their\n`is_deleted` field set to `true`.",
          "type": "boolean"
        },
        "include_related_objects": {
          "description": "If `true`, the response will include additional objects that are related to the\nrequested object, as follows:\n\nIf a [CatalogItem](#type-catalogitem) is returned in the object field of the response,\nits associated [CatalogCategory](#type-catalogcategory), [CatalogTax](#type-catalogtax)es, and\n[CatalogModifierList](#type-catalogmodifierlist)s will be included in the `related_objects` field of the\nresponse.\n\nIf a [CatalogItemVariation](#type-catalogitemvariation) is returned in the object field of the\nresponse, its parent [CatalogItem](#type-catalogitem) will be included in the `related_objects` field of\nthe response.",
          "type": "boolean"
        },
        "limit": {
          "description": "A limit on the number of results to be returned in a single page. The limit is advisory -\nthe implementation may return more or fewer results. If the supplied limit is negative, zero, or\nis higher than the maximum limit of 1,000, it will be ignored.",
          "type": "integer"
        },
        "object_types": {
          "description": "The desired set of object types to appear in the search results. The legal values are taken from the\n[CatalogObjectType](#type-catalogobjecttype) enumeration, namely `\"ITEM\"`, `\"ITEM_VARIATION\"`, `\"CATEGORY\"`,\n`\"DISCOUNT\"`, `\"TAX\"`, `\"MODIFIER\"`, or `\"MODIFIER_LIST\"`.",
          "items": {
            "enum": [
              "ITEM",
              "CATEGORY",
              "ITEM_VARIATION",
              "TAX",
              "DISCOUNT",
              "MODIFIER_LIST",
              "MODIFIER"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "query": {
          "$ref": "#/definitions/CatalogQuery",
          "description": "A query to be used to filter or sort the results. If no query is specified, the entire catalog will be returned."
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsRequest.csharp",
        "php": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsRequest.php",
        "python": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsRequest.python",
        "ruby": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsRequest.ruby"
      }
    },
    "SearchCatalogObjectsResponse": {
      "description": "",
      "example": {
        "objects": [
          {
            "id": "W62UWFY35CWMYGVWK6TWJDNI",
            "is_deleted": false,
            "item_data": {
              "category_id": "BJNQCF2FJ6S6UIDT65ABHLRX",
              "description": "Hot Leaf Juice",
              "name": "Tea",
              "tax_ids": [
                "HURXQOOAIC4IZSI2BEXQRYFY"
              ],
              "variations": [
                {
                  "id": "2TZFAOHWGG7PAK2QEXWYPZSP",
                  "is_deleted": false,
                  "item_variation_data": {
                    "item_id": "W62UWFY35CWMYGVWK6TWJDNI",
                    "name": "Mug",
                    "ordinal": 0,
                    "price_money": {
                      "amount": 150,
                      "currency": "USD"
                    },
                    "pricing_type": "FIXED_PRICING"
                  },
                  "present_at_all_locations": true,
                  "type": "ITEM_VARIATION",
                  "updated_at": "2016-11-16T22:25:24.878Z",
                  "version": 1479335124878
                }
              ]
            },
            "present_at_all_locations": true,
            "type": "ITEM",
            "updated_at": "2016-11-16T22:25:24.878Z",
            "version": 1479335124878
          },
          {
            "id": "AA27W3M2GGTF3H6AVPNB77CK",
            "is_deleted": false,
            "item_data": {
              "category_id": "BJNQCF2FJ6S6UIDT65ABHLRX",
              "description": "Hot Bean Juice",
              "name": "Coffee",
              "tax_ids": [
                "HURXQOOAIC4IZSI2BEXQRYFY"
              ],
              "variations": [
                {
                  "id": "LBTYIHNHU52WOIHWT7SNRIYH",
                  "is_deleted": false,
                  "item_variation_data": {
                    "item_id": "AA27W3M2GGTF3H6AVPNB77CK",
                    "name": "Regular",
                    "ordinal": 0,
                    "price_money": {
                      "amount": 250,
                      "currency": "USD"
                    },
                    "pricing_type": "FIXED_PRICING"
                  },
                  "present_at_all_locations": true,
                  "type": "ITEM_VARIATION",
                  "updated_at": "2016-11-16T22:25:24.878Z",
                  "version": 1479335124878
                },
                {
                  "id": "PKYIC7HGGKW5CYVSCVDEIMHY",
                  "is_deleted": false,
                  "item_variation_data": {
                    "item_id": "AA27W3M2GGTF3H6AVPNB77CK",
                    "name": "Large",
                    "ordinal": 1,
                    "price_money": {
                      "amount": 350,
                      "currency": "USD"
                    },
                    "pricing_type": "FIXED_PRICING"
                  },
                  "present_at_all_locations": true,
                  "type": "ITEM_VARIATION",
                  "updated_at": "2016-11-16T22:25:24.878Z",
                  "version": 1479335124878
                }
              ]
            },
            "present_at_all_locations": true,
            "type": "ITEM",
            "updated_at": "2016-11-16T22:25:24.878Z",
            "version": 1479335124878
          }
        ]
      },
      "properties": {
        "cursor": {
          "description": "The pagination cursor to be used in a subsequent request. If unset, this is the final response.\nSee [Paginating results](#paginatingresults) for more information.",
          "type": "string"
        },
        "errors": {
          "description": "The set of [Error](#type-error)s encountered.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        },
        "objects": {
          "description": "The [CatalogObject](#type-catalogobject)s returned.",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "type": "array"
        },
        "related_objects": {
          "description": "A list of [CatalogObject](#type-catalogobject)s referenced by the objects in the `objects` field.",
          "items": {
            "$ref": "#/definitions/CatalogObject"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsResponse.csharp",
        "php": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsResponse.php",
        "python": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsResponse.python",
        "ruby": "/sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsResponse.ruby"
      }
    },
    "SortOrder": {
      "description": "The order (e.g., chronological or alphabetical) in which results from a request are returned.",
      "enum": [
        "DESC",
        "ASC"
      ],
      "type": "string"
    },
    "TaxCalculationPhase": {
      "description": "When to calculate the taxes due on a cart.",
      "enum": [
        "TAX_SUBTOTAL_PHASE",
        "TAX_TOTAL_PHASE"
      ],
      "type": "string"
    },
    "TaxInclusionType": {
      "description": "Whether to the tax amount should be additional to or included in to the [CatalogItem](#type-catalogitem) price.",
      "enum": [
        "ADDITIVE",
        "INCLUSIVE"
      ],
      "type": "string"
    },
    "Tender": {
      "description": "Represents a tender (i.e., a method of payment) used in a Square transaction.",
      "properties": {
        "amount_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of the tender."
        },
        "card_details": {
          "$ref": "#/definitions/TenderCardDetails",
          "description": "The details of the card tender.\n\nThis value is present only if the value of `type` is `CARD`."
        },
        "cash_details": {
          "$ref": "#/definitions/TenderCashDetails",
          "description": "The details of the cash tender.\n\nThis value is present only if the value of `type` is `CASH`."
        },
        "created_at": {
          "description": "The time when the tender was created, in RFC 3339 format.",
          "type": "string"
        },
        "customer_id": {
          "description": "If the tender is associated with a customer or represents a customer's card on file,\nthis is the ID of the associated customer.",
          "type": "string"
        },
        "id": {
          "description": "The tender's unique ID.",
          "type": "string"
        },
        "location_id": {
          "description": "The ID of the transaction's associated location.",
          "type": "string"
        },
        "note": {
          "description": "An optional note associated with the tender at the time of payment.",
          "type": "string"
        },
        "processing_fee_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of any Square processing fees applied to the tender.\n\nThis field is not immediately populated when a new transaction is created.\nIt is usually available after about ten seconds."
        },
        "transaction_id": {
          "description": "The ID of the tender's associated transaction.",
          "type": "string"
        },
        "type": {
          "description": "The type of tender, such as `CARD` or `CASH`.",
          "enum": [
            "CARD",
            "CASH",
            "THIRD_PARTY_CARD",
            "SQUARE_GIFT_CARD",
            "NO_SALE",
            "OTHER"
          ],
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "TenderCardDetails": {
      "description": "Represents additional details of a tender with `type` `CARD` or `SQUARE_GIFT_CARD`",
      "properties": {
        "card": {
          "$ref": "#/definitions/Card",
          "description": "The credit card's non-confidential details."
        },
        "entry_method": {
          "description": "The method used to enter the card's details for the transaction.",
          "enum": [
            "SWIPED",
            "KEYED",
            "EMV",
            "ON_FILE",
            "CONTACTLESS"
          ],
          "type": "string"
        },
        "status": {
          "description": "The credit card payment's current state (such as `AUTHORIZED` or\n`CAPTURED`). See [TenderCardDetailsStatus](#type-tendercarddetailsstatus)\nfor possible values.",
          "enum": [
            "AUTHORIZED",
            "CAPTURED",
            "VOIDED",
            "FAILED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "TenderCardDetailsEntryMethod": {
      "description": "Indicates the method used to enter the card's details.",
      "enum": [
        "SWIPED",
        "KEYED",
        "EMV",
        "ON_FILE",
        "CONTACTLESS"
      ],
      "type": "string"
    },
    "TenderCardDetailsStatus": {
      "description": "Indicates the card transaction's current status.",
      "enum": [
        "AUTHORIZED",
        "CAPTURED",
        "VOIDED",
        "FAILED"
      ],
      "type": "string"
    },
    "TenderCashDetails": {
      "description": "Represents the details of a tender with `type` `CASH`.",
      "properties": {
        "buyer_tendered_money": {
          "$ref": "#/definitions/Money",
          "description": "The total amount of cash provided by the buyer, before change is given."
        },
        "change_back_money": {
          "$ref": "#/definitions/Money",
          "description": "The amount of change returned to the buyer."
        }
      },
      "type": "object"
    },
    "TenderType": {
      "description": "Indicates a tender's type.",
      "enum": [
        "CARD",
        "CASH",
        "THIRD_PARTY_CARD",
        "SQUARE_GIFT_CARD",
        "NO_SALE",
        "OTHER"
      ],
      "type": "string"
    },
    "Transaction": {
      "description": "Represents a transaction processed with Square, either with the\nConnect API or with Square Point of Sale.\n\nThe `tenders` field of this object lists all methods of payment used to pay in\nthe transaction.",
      "properties": {
        "client_id": {
          "description": "If the transaction was created in the Square Point of Sale app, this value\nis the ID generated for the transaction by Square Point of Sale.\n\nThis ID has no relationship to the transaction's canonical `id`, which is\ngenerated by Square's backend servers. This value is generated for bookkeeping\npurposes, in case the transaction cannot immediately be completed (for example,\nif the transaction is processed in offline mode).\n\nIt is not currently possible with the Connect API to perform a transaction\nlookup by this value.",
          "type": "string"
        },
        "created_at": {
          "description": "The time when the transaction was created, in RFC 3339 format.",
          "type": "string"
        },
        "id": {
          "description": "The transaction's unique ID, issued by Square payments servers.",
          "type": "string"
        },
        "location_id": {
          "description": "The ID of the transaction's associated location.",
          "type": "string"
        },
        "order": {
          "$ref": "#/definitions/Order",
          "description": "The order associated with this transaction, if any."
        },
        "product": {
          "description": "The Square product that processed the transaction.",
          "enum": [
            "REGISTER",
            "EXTERNAL_API",
            "BILLING",
            "APPOINTMENTS",
            "INVOICES",
            "ONLINE_STORE",
            "PAYROLL",
            "OTHER"
          ],
          "type": "string"
        },
        "reference_id": {
          "description": "If the transaction was created with the [Charge](#endpoint-charge)\nendpoint, this value is the same as the value provided for the `reference_id`\nparameter in the request to that endpoint. Otherwise, it is not set.",
          "type": "string"
        },
        "refunds": {
          "description": "Refunds that have been applied to any tender in the transaction.",
          "items": {
            "$ref": "#/definitions/Refund"
          },
          "type": "array"
        },
        "shipping_address": {
          "$ref": "#/definitions/Address",
          "description": "The shipping address provided in the request, if any."
        },
        "tenders": {
          "description": "The tenders used to pay in the transaction.",
          "items": {
            "$ref": "#/definitions/Tender"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "TransactionProduct": {
      "description": "Indicates the Square product used to process a transaction.",
      "enum": [
        "REGISTER",
        "EXTERNAL_API",
        "BILLING",
        "APPOINTMENTS",
        "INVOICES",
        "ONLINE_STORE",
        "PAYROLL",
        "OTHER"
      ],
      "type": "string"
    },
    "UpdateCustomerRequest": {
      "description": "Defines the body parameters that can be provided in a request to the\n[UpdateCustomer](#endpoint-updatecustomer) endpoint.",
      "example": {
        "request_body": {
          "email_address": "New.Amelia.Earhart@example.com",
          "note": "updated customer note",
          "phone_number": ""
        },
        "request_url": "/v2/customers/CUSTOMER_ID"
      },
      "properties": {
        "address": {
          "$ref": "#/definitions/Address",
          "description": "The customer's physical address."
        },
        "company_name": {
          "description": "The name of the customer's company.",
          "type": "string"
        },
        "email_address": {
          "description": "The customer's email address.",
          "type": "string"
        },
        "family_name": {
          "description": "The customer's family (i.e., last) name.",
          "type": "string"
        },
        "given_name": {
          "description": "The customer's given (i.e., first) name.",
          "type": "string"
        },
        "nickname": {
          "description": "A nickname for the customer.",
          "type": "string"
        },
        "note": {
          "description": "An optional note to associate with the customer.",
          "type": "string"
        },
        "phone_number": {
          "description": "The customer's phone number.",
          "type": "string"
        },
        "reference_id": {
          "description": "An optional second ID you can set to associate the customer with an\nentity in another system.",
          "type": "string"
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/UpdateCustomer/UpdateCustomerRequest.csharp",
        "php": "/sdk_samples/UpdateCustomer/UpdateCustomerRequest.php",
        "python": "/sdk_samples/UpdateCustomer/UpdateCustomerRequest.python",
        "ruby": "/sdk_samples/UpdateCustomer/UpdateCustomerRequest.ruby"
      }
    },
    "UpdateCustomerResponse": {
      "description": "Defines the fields that are included in the response body of\na request to the [UpdateCustomer](#endpoint-updatecustomer) endpoint.\n\nOne of `errors` or `customer` is present in a given response (never both).",
      "example": {
        "customer": {
          "address": {
            "address_line_1": "500 Electric Ave",
            "address_line_2": "Suite 600",
            "administrative_district_level_1": "NY",
            "country": "US",
            "locality": "New York",
            "postal_code": "10003"
          },
          "created_at": "2016-03-23T20:21:54.859Z",
          "email_address": "New.Amelia.Earhart@example.com",
          "family_name": "Earhart",
          "given_name": "Amelia",
          "groups": [
            {
              "id": "16894e93-96eb-4ced-b24b-f71d42bf084c",
              "name": "Aviation Enthusiasts"
            }
          ],
          "id": "JDKYHBWT1D4F8MFH63DBMEN8Y4",
          "note": "updated customer note",
          "reference_id": "YOUR_REFERENCE_ID",
          "updated_at": "2016-03-25T20:21:55Z"
        }
      },
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer",
          "description": "The updated customer."
        },
        "errors": {
          "description": "Any errors that occurred during the request.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/UpdateCustomer/UpdateCustomerResponse.csharp",
        "php": "/sdk_samples/UpdateCustomer/UpdateCustomerResponse.php",
        "python": "/sdk_samples/UpdateCustomer/UpdateCustomerResponse.python",
        "ruby": "/sdk_samples/UpdateCustomer/UpdateCustomerResponse.ruby"
      }
    },
    "UpdateItemModifierListsRequest": {
      "description": "",
      "example": {
        "request_body": {
          "item_ids": [
            "H42BRLUJ5KTZTTMPVSLFAACQ",
            "2JXOBJIHCWBQ4NZ3RIXQGJA6"
          ],
          "modifier_lists_to_disable": [
            "7WRC16CJZDVLSNDQ35PP6YAD"
          ],
          "modifier_lists_to_enable": [
            "H42BRLUJ5KTZTTMPVSLFAACQ",
            "2JXOBJIHCWBQ4NZ3RIXQGJA6"
          ]
        },
        "request_url": "https://connect.squareup.com/v2/update-item-taxes"
      },
      "properties": {
        "item_ids": {
          "description": "The [CatalogItem](#type-catalogitem)s whose [CatalogModifierList](#type-catalogmodifierlist)s are being updated.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "modifier_lists_to_disable": {
          "description": "The set of [CatalogModifierList](#type-catalogmodifierlist)s (referenced by ID) to disable for the [CatalogItem](#type-catalogitem).",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "modifier_lists_to_enable": {
          "description": "The set of [CatalogModifierList](#type-catalogmodifierlist)s (referenced by ID) to enable for the [CatalogItem](#type-catalogitem).",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "item_ids"
      ],
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsRequest.csharp",
        "php": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsRequest.php",
        "python": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsRequest.python",
        "ruby": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsRequest.ruby"
      }
    },
    "UpdateItemModifierListsResponse": {
      "description": "",
      "example": {
        "updated_at": "2016-11-16T22:25:24.878Z"
      },
      "properties": {
        "errors": {
          "description": "The set of [Error](#type-error)s encountered.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        },
        "updated_at": {
          "description": "The database [timestamp](#workingwithdates) of this update in RFC 3339 format, e.g., \"2016-09-04T23:59:33.123Z\".",
          "type": "string"
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsResponse.csharp",
        "php": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsResponse.php",
        "python": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsResponse.python",
        "ruby": "/sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsResponse.ruby"
      }
    },
    "UpdateItemTaxesRequest": {
      "description": "",
      "example": {
        "request_body": {
          "item_ids": [
            "H42BRLUJ5KTZTTMPVSLFAACQ",
            "2JXOBJIHCWBQ4NZ3RIXQGJA6"
          ],
          "taxes_to_disable": [
            "AQCEGCEBBQONINDOHRGZISEX"
          ],
          "taxes_to_enable": [
            "4WRCNHCJZDVLSNDQ35PP6YAD"
          ]
        },
        "request_url": "https://connect.squareup.com/v2/update-item-taxes"
      },
      "properties": {
        "item_ids": {
          "description": "The [CatalogItem](#type-catalogitem)s whose enabled/disabled [CatalogTax](#type-catalogtax)es are being updated.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "taxes_to_disable": {
          "description": "The set of [CatalogTax](#type-catalogtax)es (referenced by ID) to disable for the [CatalogItem](#type-catalogitem).",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "taxes_to_enable": {
          "description": "The set of [CatalogTax](#type-catalogtax)es (referenced by ID) to enable for the [CatalogItem](#type-catalogitem).",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "item_ids"
      ],
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesRequest.csharp",
        "php": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesRequest.php",
        "python": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesRequest.python",
        "ruby": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesRequest.ruby"
      }
    },
    "UpdateItemTaxesResponse": {
      "description": "",
      "example": {
        "updated_at": "2016-11-16T22:25:24.878Z"
      },
      "properties": {
        "errors": {
          "description": "The set of [Error](#type-error)s encountered.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        },
        "updated_at": {
          "description": "The database [timestamp](#workingwithdates) of this update in RFC 3339 format, e.g., \"2016-09-04T23:59:33.123Z\".",
          "type": "string"
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesResponse.csharp",
        "php": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesResponse.php",
        "python": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesResponse.python",
        "ruby": "/sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesResponse.ruby"
      }
    },
    "UpsertCatalogObjectRequest": {
      "description": "",
      "example": {
        "request_body": {
          "idempotency_key": "af3d1afc-7212-4300-b463-0bfc5314a5ae",
          "object": {
            "id": "#Cocoa",
            "item_data": {
              "abbreviation": "Ch",
              "description": "Hot chocolate",
              "name": "Cocoa"
            },
            "type": "ITEM"
          }
        },
        "request_url": "https://connect.squareup.com/v2/catalog"
      },
      "properties": {
        "idempotency_key": {
          "description": "A value you specify that uniquely identifies this\nrequest among all your requests. A common way to create\na valid idempotency key is to use a Universally unique\nidentifier (UUID).\n\nIf you're unsure whether a particular request was successful,\nyou can reattempt it with the same idempotency key without\nworrying about creating duplicate objects.\n\nSee [Idempotency keys](#idempotencykeys) for more information.",
          "minLength": 1,
          "type": "string"
        },
        "object": {
          "$ref": "#/definitions/CatalogObject",
          "description": "A [CatalogObject](#type-catalogobject) to be created or updated. The object's `is_deleted` field must not\nbe set to `true`. When creating a new object, the object's ID must either start with a `#` character or be left\nblank. In either case it will be replaced with a server-generated ID."
        }
      },
      "required": [
        "idempotency_key",
        "object"
      ],
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectRequest.csharp",
        "php": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectRequest.php",
        "python": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectRequest.python",
        "ruby": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectRequest.ruby"
      }
    },
    "UpsertCatalogObjectResponse": {
      "description": "",
      "example": {
        "catalog_object": {
          "id": "7SB3ZQYJ5GDMVFL7JK46JCHT",
          "is_deleted": false,
          "item_data": {
            "abbreviation": "Ch",
            "description": "Hot chocolate",
            "name": "Cocoa"
          },
          "type": "ITEM",
          "updated_at": "2016-11-16T22:32:42.996Z",
          "version": 1479335562996
        },
        "id_mappings": [
          {
            "client_object_id": "#Cocoa",
            "object_id": "7SB3ZQYJ5GDMVFL7JK46JCHT"
          }
        ]
      },
      "properties": {
        "catalog_object": {
          "$ref": "#/definitions/CatalogObject",
          "description": "The created [CatalogObject](#type-catalogobject)."
        },
        "errors": {
          "description": "The set of [Error](#type-error)s encountered.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        },
        "id_mappings": {
          "description": "The mapping between client and server IDs for this Upsert.",
          "items": {
            "$ref": "#/definitions/CatalogIdMapping"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectResponse.csharp",
        "php": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectResponse.php",
        "python": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectResponse.python",
        "ruby": "/sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectResponse.ruby"
      }
    },
    "VoidTransactionRequest": {
      "description": "",
      "example": {
        "request_url": "https://connect.squareup.com/v2/locations/LOCATION_ID/transactions/TRANSACTION_ID/void"
      },
      "properties": {},
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/VoidTransaction/VoidTransactionRequest.csharp",
        "php": "/sdk_samples/VoidTransaction/VoidTransactionRequest.php",
        "python": "/sdk_samples/VoidTransaction/VoidTransactionRequest.python",
        "ruby": "/sdk_samples/VoidTransaction/VoidTransactionRequest.ruby"
      }
    },
    "VoidTransactionResponse": {
      "description": "Defines the fields that are included in the response body of\na request to the [CaptureTransaction](#endpoint-capturetransaction) endpoint.",
      "example": {},
      "properties": {
        "errors": {
          "description": "Any errors that occurred during the request.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-sq-sdk-sample-code": {
        "csharp": "/sdk_samples/VoidTransaction/VoidTransactionResponse.csharp",
        "php": "/sdk_samples/VoidTransaction/VoidTransactionResponse.php",
        "python": "/sdk_samples/VoidTransaction/VoidTransactionResponse.python",
        "ruby": "/sdk_samples/VoidTransaction/VoidTransactionResponse.ruby"
      }
    },
    "v1AdjustInventoryRequest": {
      "properties": {
        "adjustment_type": {
          "description": "The reason for the inventory adjustment.",
          "enum": [
            "SALE",
            "RECEIVE_STOCK",
            "MANUAL_ADJUST"
          ],
          "type": "number"
        },
        "memo": {
          "description": "A note about the inventory adjustment.",
          "type": "string"
        },
        "quantity_delta": {
          "description": "The number to adjust the variation's quantity by.",
          "type": "number"
        }
      },
      "type": "object"
    },
    "v1BankAccount": {
      "properties": {
        "account_number_suffix": {
          "description": "The last few digits of the bank account number.",
          "type": "string"
        },
        "bank_name": {
          "description": "The name of the bank that manages the account.",
          "type": "string"
        },
        "currency_code": {
          "description": "The currency code of the currency associated with the bank account, in ISO 4217 format. For example, the currency code for US dollars is USD.",
          "type": "string"
        },
        "id": {
          "description": "The bank account's Square-issued ID.",
          "type": "string"
        },
        "merchant_id": {
          "description": "The Square-issued ID of the merchant associated with the bank account.",
          "type": "string"
        },
        "name": {
          "description": "The name associated with the bank account.",
          "type": "string"
        },
        "routing_number": {
          "description": "The bank account's routing number.",
          "type": "string"
        },
        "type": {
          "description": "The bank account's type (for example, savings or checking).",
          "enum": [
            "BUSINESS_CHECKING",
            "CHECKING",
            "INVESTMENT",
            "LOAN",
            "SAVINGS",
            "OTHER"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1CashDrawerEvent": {
      "externalDocs": {
        "description": "Read the offical documentation here:",
        "url": "https://docs.connect.squareup.com/api/connect/v1/#datatype-cashdrawerevent"
      },
      "properties": {
        "created_at": {
          "description": "The time when the event occurred, in ISO 8601 format.",
          "type": "string"
        },
        "description": {
          "description": "An optional description of the event, entered by the employee that created it.",
          "type": "string"
        },
        "employee_id": {
          "description": "The ID of the employee that created the event.",
          "type": "string"
        },
        "event_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of money that was added to or removed from the cash drawer because of the event. This value can be positive (for added money) or negative (for removed money)."
        },
        "event_type": {
          "description": "The type of event that occurred.",
          "enum": [
            "NO_SALE",
            "CASH_TENDER_PAYMENT",
            "OTHER_TENDER_PAYMENT",
            "CASH_TENDER_CANCELED_PAYMENT",
            "OTHER_TENDER_CANCELED_PAYMENT",
            "CASH_TENDER_REFUND",
            "OTHER_TENDER_REFUND",
            "PAID_IN",
            "PAID_OUT"
          ],
          "type": "string"
        },
        "id": {
          "description": "The event's unique ID.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1CashDrawerShift": {
      "externalDocs": {
        "description": "Read the offical documentation here:",
        "url": "https://docs.connect.squareup.com/api/connect/v1/#get-cashdrawershifts"
      },
      "properties": {
        "cash_paid_in_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of money added to the cash drawer for reasons other than cash payments."
        },
        "cash_paid_out_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of money removed from the cash drawer for reasons other than cash refunds."
        },
        "cash_payment_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of money added to the cash drawer from cash payments."
        },
        "cash_refunds_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of money removed from the cash drawer from cash refunds. This value is always negative or zero."
        },
        "closed_at": {
          "description": "The time when the shift was closed, in ISO 8601 format.",
          "type": "string"
        },
        "closed_cash_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of money found in the cash drawer at the end of the shift by an auditing employee."
        },
        "closing_employee_id": {
          "description": "The ID of the employee that closed the cash drawer shift by auditing the cash drawer's contents.",
          "type": "string"
        },
        "description": {
          "description": "The time when the timecard was created, in ISO 8601 format.",
          "type": "string"
        },
        "device": {
          "$ref": "#/definitions/Device",
          "description": "The device running Square Register that was connected to the cash drawer."
        },
        "employee_ids": {
          "description": "The IDs of all employees that were logged into Square Register at some point during the cash drawer shift.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ended_at": {
          "description": "The time when the shift ended, in ISO 8601 format.",
          "type": "boolean"
        },
        "ending_employee_id": {
          "description": "The ID of the employee that ended the cash drawer shift.",
          "type": "string"
        },
        "event_type": {
          "description": "The shift's current state.",
          "enum": [
            "OPEN",
            "ENDED",
            "CLOSED"
          ],
          "type": "string"
        },
        "events": {
          "description": "All of the events (payments, refunds, and so on) that involved the cash drawer during the shift.",
          "items": {
            "$ref": "#/definitions/v1CashDrawerEvent"
          },
          "type": "array"
        },
        "expected_cash_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of money that should be in the cash drawer at the end of the shift, based on the shift's other money amounts."
        },
        "id": {
          "description": "The shift's unique ID.",
          "type": "string"
        },
        "opened_at": {
          "description": "The time when the shift began, in ISO 8601 format.",
          "type": "string"
        },
        "opening_employee_id": {
          "description": "The ID of the employee that started the cash drawer shift.",
          "type": "string"
        },
        "starting_cash_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of money in the cash drawer at the start of the shift."
        }
      },
      "type": "object"
    },
    "v1Category": {
      "properties": {
        "id": {
          "description": "The category's unique ID.",
          "type": "string"
        },
        "name": {
          "description": "The category's name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1CreateRefundRequest": {
      "properties": {
        "payment_id": {
          "description": "The ID of the payment to refund. If you're creating a PARTIAL refund for a split tender payment, instead provide the id of the particular tender you want to refund. See Split Tender Payments for details.",
          "type": "string"
        },
        "reason": {
          "description": "The reason for the refund.",
          "type": "string"
        },
        "refunded_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of money to refund. Required only for PARTIAL refunds."
        },
        "request_idempotence_key": {
          "description": "An optional key to ensure idempotence if you issue the same PARTIAL refund request more than once.",
          "type": "string"
        },
        "type": {
          "description": "TThe type of refund (FULL or PARTIAL).",
          "enum": [
            "FULL",
            "PARTIAL"
          ],
          "type": "string"
        }
      },
      "required": [
        "payment_id",
        "type",
        "reason"
      ],
      "type": "object"
    },
    "v1Discount": {
      "properties": {
        "amount_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of the discount. This amount is 0 if discount_type is VARIABLE_AMOUNT. This field is not included for rate-based discounts."
        },
        "color": {
          "description": "The color of the discount's display label in Square Register, if not the default color. The default color is 9da2a6.",
          "enum": [
            "9da2a6",
            "4ab200",
            "0b8000",
            "2952cc",
            "a82ee5",
            "e5457a",
            "b21212",
            "593c00",
            "e5BF00"
          ],
          "type": "string"
        },
        "discount_type": {
          "description": "Indicates whether the discount is a FIXED value or entered at the time of sale.",
          "enum": [
            "FIXED",
            "VARIABLE_PERCENTAGE",
            "VARIABLE_AMOUNT"
          ],
          "type": "string"
        },
        "id": {
          "description": "The discount's unique ID.",
          "type": "string"
        },
        "name": {
          "description": "The discount's name.",
          "type": "string"
        },
        "pin_required": {
          "description": "Indicates whether a mobile staff member needs to enter their PIN to apply the discount to a payment.",
          "type": "boolean"
        },
        "rate": {
          "description": "The rate of the discount, as a string representation of a decimal number. A value of 0.07 corresponds to a rate of 7%. This rate is 0 if discount_type is VARIABLE_PERCENTAGE.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1Employee": {
      "description": "Represents one of a business's employees.",
      "externalDocs": {
        "description": "Read the offical documentation here:",
        "url": "https://docs.connect.squareup.com/api/connect/v1/#datatype-employee"
      },
      "properties": {
        "authorized_location_ids": {
          "description": "The IDs of the locations the employee is allowed to clock in at.",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "created_at": {
          "description": "The time when the employee entity was created, in ISO 8601 format.",
          "readOnly": true,
          "type": "string"
        },
        "email": {
          "description": "The employee's email address.",
          "type": "string"
        },
        "external_id": {
          "description": "An ID the merchant can set to associate the employee with an entity in another system.",
          "readOnly": true,
          "type": "string"
        },
        "first_name": {
          "description": "The employee's first name.",
          "type": "string"
        },
        "id": {
          "description": "The employee's unique ID.",
          "readOnly": true,
          "type": "string"
        },
        "last_name": {
          "description": "The employee's last name.",
          "type": "string"
        },
        "role_ids": {
          "description": "The ids of the employee's associated roles. Currently, you can specify only one or zero roles per employee.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "status": {
          "description": "CWhether the employee is ACTIVE or INACTIVE. Inactive employees cannot sign in to Square Register.Merchants update this field from the Square Dashboard. ",
          "enum": [
            "ACTIVE",
            "INACTIVE"
          ],
          "readOnly": true,
          "type": "string"
        },
        "updated_at": {
          "description": "The time when the employee entity was most recently updated, in ISO 8601 format.",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "first_name",
        "last_name"
      ],
      "type": "object"
    },
    "v1EmployeeRole": {
      "externalDocs": {
        "description": "Read the offical documentation here:",
        "url": "https://docs.connect.squareup.com/api/connect/v1/#datatype-employeerole"
      },
      "properties": {
        "created_at": {
          "description": "The time when the employee entity was created, in ISO 8601 format. Is set by Square when the Role is created.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The role's unique ID, Can only be set by Square.",
          "readOnly": true,
          "type": "string"
        },
        "is_owner": {
          "description": "If true, employees with this role have all permissions, regardless of the values indicated in permissions.",
          "type": "boolean"
        },
        "name": {
          "description": "The role's merchant-defined name.",
          "type": "string"
        },
        "permissions": {
          "description": "The role's permissions.",
          "items": {
            "enum": [
              "REGISTER_ACCESS_SALES_HISTORY",
              "REGISTER_APPLY_RESTRICTED_DISCOUNTS",
              "REGISTER_CHANGE_SETTINGS",
              "REGISTER_EDIT_ITEM",
              "REGISTER_ISSUE_REFUNDS",
              "REGISTER_OPEN_CASH_DRAWER_OUTSIDE_SALE",
              "REGISTER_VIEW_SUMMARY_REPORTS"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "updated_at": {
          "description": "The time when the employee entity was most recently updated, in ISO 8601 format. Is set by Square when the Role updated.",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "name",
        "permissions"
      ],
      "type": "object"
    },
    "v1Fee": {
      "properties": {
        "adjustment_type": {
          "description": "The type of adjustment the fee applies to a payment. Currently, this value is TAX for all fees.",
          "enum": [
            "TAX"
          ],
          "type": "string"
        },
        "applies_to_custom_amounts": {
          "description": "If true, the fee applies to custom amounts entered into Square Register that are not associated with a particular item.",
          "type": "boolean"
        },
        "calculation_phase": {
          "description": "Forthcoming",
          "enum": [
            "FEE_SUBTOTAL_PHASE",
            "OTHER",
            "FEE_TOTAL_PHASE"
          ],
          "type": "string"
        },
        "enabled": {
          "description": "If true, the fee is applied to all appropriate items. If false, the fee is not applied at all.",
          "type": "boolean"
        },
        "id": {
          "description": "The fee's unique ID.",
          "type": "string"
        },
        "inclusion_type": {
          "description": "Whether the fee is ADDITIVE or INCLUSIVE.",
          "enum": [
            "ADDITIVE",
            "INCLUSIVE"
          ],
          "type": "string"
        },
        "name": {
          "description": "The fee's name.",
          "type": "string"
        },
        "rate": {
          "description": "The rate of the fee, as a string representation of a decimal number. A value of 0.07 corresponds to a rate of 7%.",
          "type": "string"
        },
        "type": {
          "description": "In countries with multiple classifications for sales taxes, indicates which classification the fee falls under. Currently relevant only to Canadian merchants.",
          "enum": [
            "CA_GST",
            "CA_HST",
            "CA_PST",
            "CA_QST",
            "JP_CONSUMPTION_TAX",
            "CA_PEI_PST",
            "US_SALES_TAX",
            "OTHER"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1InventoryEntry": {
      "properties": {
        "quantity_on_hand": {
          "description": "The current available quantity of the item variation.",
          "type": "number"
        },
        "variation_id": {
          "description": "The variation that the entry corresponds to.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1Item": {
      "properties": {
        "abbreviation": {
          "description": "The text of the item's display label in Square Register. Only up to the first five characters of the string are used.",
          "type": "string"
        },
        "available_online": {
          "description": "If true, the item can be added to shipping orders from the merchant's online store.",
          "type": "boolean"
        },
        "category": {
          "$ref": "#/definitions/v1Category",
          "description": "The category the item belongs to, if any."
        },
        "color": {
          "description": "The color of the discount's display label in Square Register, if not the default color. The default color is 9da2a6.",
          "enum": [
            "9da2a6",
            "4ab200",
            "0b8000",
            "2952cc",
            "a82ee5",
            "e5457a",
            "b21212",
            "593c00",
            "e5BF00"
          ],
          "type": "string"
        },
        "description": {
          "description": "The item's description.",
          "type": "string"
        },
        "fees": {
          "description": "The fees that apply to the item, if any.",
          "items": {
            "$ref": "#/definitions/v1Fee"
          },
          "type": "array"
        },
        "id": {
          "description": "The item's ID. Must be unique among all entity IDs ever provided on behalf of the merchant. You can never reuse an ID. This value can include alphanumeric characters, dashes (-), and underscores (_).",
          "type": "string"
        },
        "master_image": {
          "$ref": "#/definitions/v1ItemImage",
          "description": "The item's master image, if any."
        },
        "modifier_lists": {
          "description": "The modifier lists that apply to the item, if any.",
          "items": {
            "$ref": "#/definitions/v1Variation"
          },
          "type": "array"
        },
        "name": {
          "description": "The item's name.",
          "type": "string"
        },
        "taxable": {
          "description": "Deprecated. This field is not used.",
          "type": "boolean"
        },
        "type": {
          "description": "The item's type. This value is NORMAL for almost all items.",
          "enum": [
            "NORMAL",
            "GIFT_CARD",
            "OTHER"
          ],
          "type": "string"
        },
        "variations": {
          "description": "The item's variations. You must specify at least one variation.",
          "items": {
            "$ref": "#/definitions/v1Variation"
          },
          "type": "array"
        },
        "visibility": {
          "description": "Indicates whether the item is viewable from the merchant's online store (PUBLIC) or PRIVATE.",
          "enum": [
            "PUBLIC",
            "PRIVATE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1ItemImage": {
      "properties": {
        "id": {
          "description": "The image's unique ID.",
          "type": "string"
        },
        "url": {
          "description": "The image's publicly accessible URL.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1Merchant": {
      "description": "Defines the fields that are included in the response body of\na request to the **RetrieveBusiness** endpoint.",
      "properties": {
        "account_capabilities": {
          "description": "Capabilities that are enabled for the merchant's Square account. Capabilities that are not listed in this array are not enabled for the account.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "account_type": {
          "description": "Indicates whether the merchant account corresponds to a single-location account (LOCATION) or a business account (BUSINESS). This value is almost always LOCATION.",
          "enum": [
            "LOCATION",
            "BUSINESS"
          ],
          "type": "string"
        },
        "business_address": {
          "$ref": "#/definitions/Address",
          "description": "The address of the merchant's business."
        },
        "business_name": {
          "description": "The name of the merchant's business.",
          "type": "string"
        },
        "business_phone": {
          "$ref": "#/definitions/v1PhoneNumber",
          "description": "The phone number of the merchant's business."
        },
        "business_type": {
          "description": "The type of business operated by the merchant.",
          "enum": [
            "ACCOUNTING",
            "APPAREL_AND_ACCESSORY_SHOPS",
            "ART_DEALERS_GALLERIES",
            "ART_DESIGN_AND_PHOTOGRAPHY",
            "BAR_CLUB_LOUNGE",
            "BEAUTY_AND_BARBER_SHOPS",
            "BOOK_STORES",
            "BUSINESS_SERVICES",
            "CATERING",
            "CHARITABLE_SOCIAL_SERVICE_ORGANIZATIONS",
            "CHARITIBLE_ORGS",
            "CLEANING_SERVICES",
            "COMPUTER_EQUIPMENT_SOFTWARE_MAINTENANCE_REPAIR_SERVICES",
            "CONSULTANT",
            "CONTRACTORS",
            "DELIVERY_SERVICES",
            "DENTISTRY",
            "EDUCATION",
            "FOOD_STORES_CONVENIENCE_STORES_AND_SPECIALTY_MARKETS",
            "FOOD_TRUCK_CART",
            "FURNITURE_HOME_AND_OFFICE_EQUIPMENT",
            "FURNITURE_HOME_GOODS",
            "HOTELS_AND_LODGING",
            "INDIVIDUAL_USE",
            "JEWELRY_AND_WATCHES",
            "LANDSCAPING_AND_HORTICULTURAL_SERVICES",
            "LANGUAGE_SCHOOLS",
            "LEGAL_SERVICES",
            "MEDICAL_PRACTITIONERS",
            "MEDICAL_SERVICES_AND_HEALTH_PRACTITIONERS",
            "MEMBERSHIP_ORGANIZATIONS",
            "MUSIC_AND_ENTERTAINMENT",
            "OTHER",
            "OUTDOOR_MARKETS",
            "PERSONAL_SERVICES",
            "POLITICAL_ORGANIZATIONS",
            "PROFESSIONAL_SERVICES",
            "REAL_ESTATE",
            "RECREATION_SERVICES",
            "REPAIR_SHOPS_AND_RELATED_SERVICES",
            "RESTAURANTS",
            "RETAIL_SHOPS",
            "SCHOOLS_AND_EDUCATIONAL_SERVICES",
            "SPORTING_GOODS",
            "TAXICABS_AND_LIMOUSINES",
            "TICKET_SALES",
            "TOURISM",
            "TRAVEL_TOURISM",
            "VETERINARY_SERVICES",
            "WEB_DEV_DESIGN"
          ],
          "type": "string"
        },
        "country_code": {
          "description": "The country associated with the merchant account, in ISO 3166-1-alpha-2 format.",
          "type": "string"
        },
        "currency_code": {
          "description": "The currency associated with the merchant account, in ISO 4217 format. For example, the currency code for US dollars is USD.",
          "type": "string"
        },
        "email": {
          "description": "The email address associated with the merchant account.",
          "type": "string"
        },
        "id": {
          "description": "The merchant account's unique identifier.",
          "type": "string"
        },
        "language_code": {
          "description": "The language associated with the merchant account, in BCP 47 format.",
          "type": "string"
        },
        "location_details": {
          "description": "Additional information for a single-location account specified by its associated business account, if it has one.",
          "properties": {
            "nickname": {
              "description": "The nickname assigned to the single-location account by the parent business. This value appears in the parent business's multi-location dashboard.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "market_url": {
          "description": "The URL of the merchant's online store.",
          "type": "string"
        },
        "name": {
          "description": "The name associated with the merchant account.",
          "type": "string"
        },
        "shipping_address ": {
          "$ref": "#/definitions/Address",
          "description": "The merchant's shipping address."
        }
      },
      "type": "object"
    },
    "v1ModifierList": {
      "properties": {
        "id": {
          "description": "The modifier list's unique ID.",
          "type": "string"
        },
        "modifier_options": {
          "description": "The options included in the modifier list.",
          "items": {
            "$ref": "#/definitions/v1ModifierOption"
          },
          "type": "array"
        },
        "name": {
          "description": "The modifier list's name.",
          "type": "string"
        },
        "selection_type": {
          "description": "Indicates whether MULTIPLE options or a SINGLE option from the modifier list can be applied to a single item.",
          "enum": [
            "SINGLE",
            "MULTIPLE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1ModifierOption": {
      "properties": {
        "id": {
          "description": "The modifier option's unique ID.",
          "type": "string"
        },
        "modifier_list_id": {
          "description": "The ID of the modifier list the option belongs to.",
          "type": "string"
        },
        "name": {
          "description": "The modifier option's name.",
          "type": "string"
        },
        "on_by_default": {
          "description": "If true, the modifier option is the default option in a modifier list for which selection_type is SINGLE.",
          "type": "boolean"
        },
        "ordinal": {
          "description": "Indicates the modifier option's list position when displayed in Square Register and the merchant dashboard. If more than one modifier option in the same modifier list has the same ordinal value, those options are displayed in alphabetical order.",
          "type": "integer"
        },
        "price_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The modifier option's price."
        }
      },
      "type": "object"
    },
    "v1Money": {
      "description": "",
      "properties": {
        "amount": {
          "description": "Amount in the lowest denominated value of this Currency. E.g. in USD\nthese are cents, in JPY they are Yen (which do not have a 'cent' concept).",
          "type": "integer"
        },
        "currency_code": {
          "description": "",
          "enum": [
            "AED",
            "AFN",
            "ALL",
            "AMD",
            "ANG",
            "AOA",
            "ARS",
            "AUD",
            "AWG",
            "AZN",
            "BAM",
            "BBD",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BND",
            "BOB",
            "BOV",
            "BRL",
            "BSD",
            "BTN",
            "BWP",
            "BYR",
            "BZD",
            "CAD",
            "CDF",
            "CHE",
            "CHF",
            "CHW",
            "CLF",
            "CLP",
            "CNY",
            "COP",
            "COU",
            "CRC",
            "CUC",
            "CUP",
            "CVE",
            "CZK",
            "DJF",
            "DKK",
            "DOP",
            "DZD",
            "EGP",
            "ERN",
            "ETB",
            "EUR",
            "FJD",
            "FKP",
            "GBP",
            "GEL",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GTQ",
            "GYD",
            "HKD",
            "HNL",
            "HRK",
            "HTG",
            "HUF",
            "IDR",
            "ILS",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JMD",
            "JOD",
            "JPY",
            "KES",
            "KGS",
            "KHR",
            "KMF",
            "KPW",
            "KRW",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LKR",
            "LRD",
            "LSL",
            "LTL",
            "LVL",
            "LYD",
            "MAD",
            "MDL",
            "MGA",
            "MKD",
            "MMK",
            "MNT",
            "MOP",
            "MRO",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MXV",
            "MYR",
            "MZN",
            "NAD",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OMR",
            "PAB",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "RON",
            "RSD",
            "RUB",
            "RWF",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SHP",
            "SLL",
            "SOS",
            "SRD",
            "SSP",
            "STD",
            "SVC",
            "SYP",
            "SZL",
            "THB",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRY",
            "TTD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "USD",
            "USN",
            "USS",
            "UYI",
            "UYU",
            "UZS",
            "VEF",
            "VND",
            "VUV",
            "WST",
            "XAF",
            "XAG",
            "XAU",
            "XBA",
            "XBB",
            "XBC",
            "XBD",
            "XCD",
            "XDR",
            "XOF",
            "XPD",
            "XPF",
            "XPT",
            "XTS",
            "XXX",
            "YER",
            "ZAR",
            "ZMK",
            "ZMW",
            "BTC"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1Order": {
      "properties": {
        "btc_price_satoshi": {
          "description": "For Bitcoin transactions, the price of the buyer's order in satoshi (100 million satoshi equals 1 BTC).",
          "type": "number"
        },
        "btc_receive_address": {
          "description": "For Bitcoin transactions, the address that the buyer sent Bitcoin to.",
          "type": "string"
        },
        "buyer_email": {
          "description": "The email address of the order's buyer.",
          "type": "string"
        },
        "buyer_note": {
          "description": "A note provided by the buyer when the order was created, if any.",
          "type": "string"
        },
        "canceled_note": {
          "description": "A note provided by the merchant when the order's state was set to CANCELED, if any.",
          "type": "string"
        },
        "completed_note": {
          "description": "A note provided by the merchant when the order's state was set to COMPLETED, if any",
          "type": "string"
        },
        "created_at": {
          "description": "The time when the order was created, in ISO 8601 format.",
          "type": "string"
        },
        "errors": {
          "description": "Any errors that occurred during the request.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        },
        "expires_at": {
          "description": "The time when the order expires if no action is taken, in ISO 8601 format.",
          "type": "string"
        },
        "id": {
          "description": "The order's unique identifier.",
          "type": "string"
        },
        "order_history": {
          "description": "The history of actions associated with the order.",
          "items": {
            "$ref": "#/definitions/v1OrderHistoryEntry"
          },
          "type": "array"
        },
        "payment_id": {
          "description": "The unique identifier of the payment associated with the order.",
          "type": "string"
        },
        "promo_code": {
          "description": "The promo code provided by the buyer, if any.",
          "type": "string"
        },
        "recipient_name": {
          "description": "The name of the order's buyer.",
          "type": "string"
        },
        "recipient_phone_number": {
          "description": "The phone number to use for the order's delivery.",
          "type": "string"
        },
        "refunded_note": {
          "description": "A note provided by the merchant when the order's state was set to REFUNDED, if any.",
          "type": "string"
        },
        "shipping_address": {
          "$ref": "#/definitions/Address",
          "description": "The address to ship the order to."
        },
        "state": {
          "description": "Whether the tax is an ADDITIVE tax or an INCLUSIVE tax.",
          "enum": [
            "PENDING",
            "OPEN",
            "COMPLETED",
            "CANCELED",
            "REFUNDED",
            "REJECTED"
          ],
          "type": "string"
        },
        "subtotal_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of all items purchased in the order, before taxes and shipping."
        },
        "tender": {
          "$ref": "#/definitions/v1Tender",
          "description": "The tender used to pay for the order."
        },
        "total_discount_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The total of all discounts applied to the order."
        },
        "total_price_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The total cost of the order."
        },
        "total_shipping_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The shipping cost for the order."
        },
        "total_tax_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The total of all taxes applied to the order."
        },
        "updated_at": {
          "description": "The time when the order was last modified, in ISO 8601 format.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1OrderHistoryEntry": {
      "properties": {
        "action": {
          "description": "The type of action performed on the order.",
          "enum": [
            "ORDER_PLACED",
            "DECLINED",
            "PAYMENT_RECEIVED",
            "CANCELED",
            "COMPLETED",
            "REFUNDED",
            "EXPIRED"
          ],
          "type": "string"
        },
        "created_at": {
          "description": "The time when the action was performed, in ISO 8601 format.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1Page": {
      "properties": {
        "cells": {
          "description": "The cells included on the page.",
          "items": {
            "$ref": "#/definitions/v1PageCell"
          },
          "type": "array"
        },
        "id": {
          "description": "The page's unique identifier.",
          "type": "string"
        },
        "name": {
          "description": "The page's name, if any.",
          "type": "string"
        },
        "page_index": {
          "description": "The page's position in the merchant's list of pages. Always an integer between 0 and 4, inclusive.",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "v1PageCell": {
      "properties": {
        "column": {
          "description": "The column of the cell. Always an integer between 0 and 4, inclusive.",
          "type": "integer"
        },
        "object_id": {
          "description": "The unique identifier of the entity represented in the cell. Not present for cells with an object_type of PLACEHOLDER.",
          "type": "string"
        },
        "object_type": {
          "description": "The type of entity represented in the cell (ITEM, DISCOUNT, CATEGORY, or PLACEHOLDER).",
          "items": {
            "enum": [
              "ITEM",
              "DISCOUNT",
              "CATEGORY",
              "PLACEHOLDER"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "page_id": {
          "description": "The unique identifier of the page the cell is included on.",
          "type": "string"
        },
        "placeholder_type": {
          "description": "For a cell with an object_type of PLACEHOLDER, this value indicates the cell's special behavior.",
          "items": {
            "enum": [
              "ALL_ITEMS",
              "DISCOUNTS_CATEGORY",
              "REWARDS_FINDER"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "row": {
          "description": "The row of the cell. Always an integer between 0 and 4, inclusive.",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "v1Payment": {
      "properties": {
        "additive_tax": {
          "description": "All of the additive taxes associated with the payment.",
          "items": {
            "$ref": "#/definitions/v1PaymentTax"
          },
          "type": "array"
        },
        "additive_tax_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The sum of all additive taxes associated with the payment."
        },
        "created_at": {
          "description": "The time when the payment was created, in ISO 8601 format.",
          "type": "string"
        },
        "creator_id": {
          "description": "The unique identifier of the Square account that took the payment.",
          "type": "string"
        },
        "device": {
          "$ref": "#/definitions/Device",
          "description": "The device that took the payment."
        },
        "discount_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The total of all discounts applied to the payment."
        },
        "gross_sales_money": {
          "$ref": "#/definitions/v1Money"
        },
        "id": {
          "description": "The payment's unique identifier.",
          "type": "string"
        },
        "inclusive_tax": {
          "description": "All of the inclusive taxes associated with the payment.",
          "items": {
            "$ref": "#/definitions/v1PaymentTax"
          },
          "type": "array"
        },
        "inclusive_tax_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The sum of all inclusive taxes associated with the payment."
        },
        "itemizations": {
          "description": "The items purchased in the payment.",
          "items": {
            "$ref": "#/definitions/v1PaymentItemization"
          },
          "type": "array"
        },
        "merchant_id": {
          "description": "The unique identifier of the merchant that took the payment.",
          "type": "string"
        },
        "net_sales_money": {
          "$ref": "#/definitions/v1Money"
        },
        "net_total_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount to be deposited into the merchant's bank account for the payment."
        },
        "payment_url": {
          "description": "The URL of the payment's detail page in the merchant dashboard. The merchant must be signed in to the merchant dashboard to view this page.",
          "type": "string"
        },
        "processing_fee_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The total of all processing fees collected by Square for the payment."
        },
        "receipt_url": {
          "description": "The URL of the receipt for the payment. Note that for split tender payments, this URL corresponds to the receipt for the first tender listed in the payment's tender field. Each Tender object has its own receipt_url field you can use to get the other receipts associated with a split tender payment.",
          "type": "string"
        },
        "refunded_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The total of all refunds applied to the payment."
        },
        "refunds": {
          "description": "All of the refunds applied to the payment.",
          "items": {
            "$ref": "#/definitions/v1Refund"
          },
          "type": "array"
        },
        "swedish_rounding_money": {
          "$ref": "#/definitions/v1Money"
        },
        "tax_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The total of all taxes applied to the payment. This is always the sum of inclusive_tax_money and additive_tax_money."
        },
        "tender": {
          "description": "All of the additive taxes associated with the payment.",
          "items": {
            "$ref": "#/definitions/v1Tender"
          },
          "type": "array"
        },
        "tip_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The total of all tips applied to the payment."
        },
        "total_collected_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The total of all discounts applied to the payment."
        }
      },
      "type": "object"
    },
    "v1PaymentDiscount": {
      "properties": {
        "applied_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of money that this discount adds to the payment (note that this value is always negative or zero)."
        },
        "discount_id": {
          "description": "The ID of the applied discount, if available. Discounts applied in older versions of Square Register might not have an ID.",
          "type": "string"
        },
        "name": {
          "description": "The discount's name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1PaymentItemDetail": {
      "properties": {
        "category_name": {
          "description": "The name of the item's merchant-defined category, if any.",
          "type": "string"
        },
        "item_id": {
          "description": "The unique ID of the item purchased, if any.",
          "type": "string"
        },
        "item_variation_id": {
          "description": "The unique ID of the item variation purchased, if any.",
          "type": "string"
        },
        "sku": {
          "description": " The item's merchant-defined SKU, if any.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1PaymentItemization": {
      "properties": {
        "discount_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The total of all discounts applied to the itemization. This value is always negative or zero."
        },
        "discounts": {
          "description": "All discounts applied to this itemization.",
          "items": {
            "$ref": "#/definitions/v1PaymentDiscount"
          },
          "type": "array"
        },
        "gross_sales_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The total cost of the itemization and its modifiers, not including taxes or discounts."
        },
        "item_detail": {
          "$ref": "#/definitions/v1PaymentItemDetail",
          "description": "Details of the item, including its unique identifier and the identifier of the item variation purchased."
        },
        "item_variation_name": {
          "description": "The name of the item variation purchased, if any.",
          "type": "string"
        },
        "itemization_type": {
          "description": "The type of purchase that the itemization represents, such as an ITEM or CUSTOM_AMOUNT",
          "enum": [
            "ITEM",
            "CUSTOM_AMOUNT",
            "GIFT_CARD_ACTIVATION",
            "GIFT_CARD_RELOAD",
            "GIFT_CARD_UNKNOWN",
            "OTHER"
          ],
          "type": "string"
        },
        "modifiers": {
          "description": "All modifier options applied to this itemization.",
          "items": {
            "$ref": "#/definitions/v1PaymentModifier"
          },
          "type": "array"
        },
        "name": {
          "description": "The item's name.",
          "type": "string"
        },
        "net_sales_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The sum of gross_sales_money and discount_money."
        },
        "notes": {
          "description": "Notes entered by the merchant about the item at the time of payment, if any.",
          "type": "string"
        },
        "quantity": {
          "description": "The quantity of the item purchased. This can be a decimal value.",
          "type": "number"
        },
        "single_quantity_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The cost of a single unit of this item."
        },
        "taxes": {
          "description": "All taxes applied to this itemization.",
          "items": {
            "$ref": "#/definitions/v1PaymentTax"
          },
          "type": "array"
        },
        "total_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The total cost of the item, including all taxes and discounts."
        }
      },
      "type": "object"
    },
    "v1PaymentModifier": {
      "properties": {
        "applied_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of money that this modifier option adds to the payment."
        },
        "modifier_option_id": {
          "description": "TThe ID of the applied modifier option, if available. Modifier options applied in older versions of Square Register might not have an ID.",
          "type": "string"
        },
        "name": {
          "description": "The modifier option's name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1PaymentTax": {
      "properties": {
        "applied_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of money that this tax adds to the payment."
        },
        "errors": {
          "description": "Any errors that occurred during the request.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        },
        "fee_id": {
          "description": "The ID of the tax, if available. Taxes applied in older versions of Square Register might not have an ID.",
          "type": "string"
        },
        "inclusion_type": {
          "description": "Whether the tax is an ADDITIVE tax or an INCLUSIVE tax.",
          "enum": [
            "ADDITIVE",
            "INCLUSIVE"
          ],
          "type": "string"
        },
        "name": {
          "description": "The merchant-defined name of the tax.",
          "type": "string"
        },
        "rate": {
          "description": "The rate of the tax, as a string representation of a decimal number. A value of 0.07 corresponds to a rate of 7%.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1PhoneNumber": {
      "description": "Represents a phone number.",
      "externalDocs": {
        "description": "Read the offical documentation here:",
        "url": "https://docs.connect.squareup.com/api/connect/v1/#datatype-phonenumber"
      },
      "properties": {
        "calling_code": {
          "description": "The phone number's international calling code. For US phone numbers, this value is +1.",
          "readOnly": false,
          "type": "string"
        },
        "number": {
          "description": "The phone number.",
          "readOnly": false,
          "type": "string"
        }
      },
      "required": [
        "calling_code",
        "number"
      ],
      "type": "object"
    },
    "v1Refund": {
      "properties": {
        "created_at": {
          "description": "The time when the merchant initiated the refund for Square to process, in ISO 8601 format..",
          "type": "string"
        },
        "merchant_id": {
          "description": "",
          "type": "string"
        },
        "payment_id": {
          "description": "The Square-issued ID of the payment the refund is applied to.",
          "type": "string"
        },
        "processed_at": {
          "description": "The time when Square processed the refund on behalf of the merchant, in ISO 8601 format.",
          "type": "string"
        },
        "reason": {
          "description": "The merchant-specified reason for the refund.",
          "type": "string"
        },
        "refunded_additive_tax_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of additive tax money refunded."
        },
        "refunded_discount_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of discount money refunded."
        },
        "refunded_inclusive_tax_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of inclusive tax money refunded."
        },
        "refunded_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of money refunded. This amount is always negative."
        },
        "refunded_processing_fee_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of processing fee money refunded."
        },
        "refunded_tip_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of tip money refunded."
        },
        "type": {
          "description": "The type of refund ",
          "enum": [
            "FULL",
            "PARTIAL"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1Settlement": {
      "properties": {
        "bank_account_id": {
          "description": "The Square-issued unique identifier for the bank account associated with the settlement.",
          "type": "string"
        },
        "entries": {
          "description": "The entries included in this settlement.",
          "items": {
            "$ref": "#/definitions/v1SettlementEntry"
          },
          "type": "array"
        },
        "id": {
          "description": "The settlement's unique identifier.",
          "type": "string"
        },
        "initiated_at": {
          "description": "The time when the settlement was submitted for deposit or withdrawal, in ISO 8601 format.",
          "type": "string"
        },
        "status": {
          "description": "The settlement's current status.",
          "enum": [
            "FAILED",
            "SENT"
          ],
          "type": "string"
        },
        "total_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of money involved in the settlement. A positive amount indicates a deposit, and a negative amount indicates a withdrawal. This amount is never zero."
        }
      },
      "type": "object"
    },
    "v1SettlementEntry": {
      "properties": {
        "amount_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The total amount of money this entry contributes to the total settlement amount."
        },
        "fee_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of all Square fees associated with this settlement entry. This value is always negative or zero."
        },
        "payment_id": {
          "description": "The settlement's unique identifier.",
          "type": "string"
        },
        "type": {
          "description": "The settlement's current status.",
          "enum": [
            "ADJUSTMENT",
            "BALANCE_CHARGE",
            "CHARGE",
            "FREE_PROCESSING",
            "HOLD_ADJUSTMENT",
            "PAID_SERVICE_FEE",
            "PAID_SERVICE_FEE_REFUND",
            "REDEMPTION_CODE",
            "REFUND",
            "RETURNED_PAYOUT",
            "SQUARE_CAPITAL_ADVANCE",
            "SQUARE_CAPITAL_PAYMENT",
            "SQUARE_CAPITAL_REVERSED_PAYMENT",
            "SUBSCRIPTION_FEE",
            "SUBSCRIPTION_FEE_REFUND",
            "INCENTED_PAYMENT",
            "RETURNED_ACH_ENTRY",
            "RETURNED_SQUARE_275",
            "SQUARE_275"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1Tender": {
      "properties": {
        "card_brand": {
          "description": "The brand of credit card provided.",
          "enum": [
            "OTHER_BRAND",
            "VISA",
            "MASTER_CARD",
            "AMERICAN_EXPRESS",
            "DISCOVER",
            "DISCOVER_DINERS",
            "JCB",
            "CHINA_UNIONPAY",
            "SQUARE_GIFT_CARD"
          ],
          "type": "string"
        },
        "change_back_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of total_money returned to the buyer as change."
        },
        "employee_id": {
          "description": "The ID of the employee that processed the tender.",
          "type": "string"
        },
        "entry_method": {
          "description": "The tender's unique ID.",
          "enum": [
            "MANUAL",
            "SCANNED",
            "SQUARE_CASH",
            "SQUARE_WALLET",
            "SWIPED",
            "WEB_FORM",
            "OTHER"
          ],
          "type": "string"
        },
        "id": {
          "description": "The tender's unique ID.",
          "type": "string"
        },
        "name": {
          "description": "A human-readable description of the tender.",
          "type": "string"
        },
        "pan_suffix": {
          "description": "The last four digits of the provided credit card's account number.",
          "type": "string"
        },
        "payment_note": {
          "description": "Notes entered by the merchant about the tender at the time of payment, if any. Typically only present for tender with the type: OTHER.",
          "type": "string"
        },
        "receipt_url": {
          "description": "The URL of the receipt for the tender.",
          "type": "string"
        },
        "refunded_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The total of all refunds applied to this tender. This amount is always negative or zero."
        },
        "tendered_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The amount of total_money applied to the payment."
        },
        "total_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The total amount of money provided in this form of tender."
        },
        "type": {
          "description": "The type of tender.",
          "enum": [
            "CREDIT_CARD",
            "CASH",
            "THIRD_PARTY_CARD",
            "NO_SALE",
            "SQUARE_WALLET",
            "SQUARE_GIFT_CARD",
            "UNKNOWN",
            "OTHER"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1Timecard": {
      "description": "Represents a timecard for an employee.",
      "externalDocs": {
        "description": "Read the offical documentation here:",
        "url": "https://docs.connect.squareup.com/api/connect/v1/#datatype-timecard"
      },
      "properties": {
        "clockin_location_id": {
          "description": "The ID of the location the employee clocked in from, if any.",
          "type": "string"
        },
        "clockin_time": {
          "description": "The clock-in time for the timecard, in ISO 8601 format.",
          "type": "string"
        },
        "clockout_location_id": {
          "description": "The ID of the location the employee clocked out from. Provide this value only if importing timecard information from another system.",
          "type": "string"
        },
        "clockout_time": {
          "description": "The clock-out time for the timecard, in ISO 8601 format. Provide this value only if importing timecard information from another system.",
          "type": "string"
        },
        "created_at": {
          "description": "The time when the timecard was created, in ISO 8601 format.",
          "readOnly": true,
          "type": "string"
        },
        "deleted": {
          "description": "If true, the timecard was deleted by the merchant, and it is no longer valid.",
          "readOnly": true,
          "type": "boolean"
        },
        "employee_id": {
          "description": "The ID of the employee the timecard is associated with.",
          "type": "string"
        },
        "id": {
          "description": "The timecard's unique ID.",
          "readOnly": true,
          "type": "string"
        },
        "updated_at": {
          "description": "The time when the timecard was most recently updated, in ISO 8601 format.",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "employee_id"
      ],
      "type": "object"
    },
    "v1TimecardEvent": {
      "externalDocs": {
        "description": "Read the offical documentation here:",
        "url": "https://docs.connect.squareup.com/api/connect/v1/#datatype-timecardevent"
      },
      "properties": {
        "clockin_time": {
          "description": "The time the employee clocked in, in ISO 8601 format.",
          "type": "string"
        },
        "clockout_time": {
          "description": "The time the employee clocked out, in ISO 8601 format.",
          "type": "string"
        },
        "created_at": {
          "description": "The time when the event was created, in ISO 8601 format.",
          "type": "string"
        },
        "event_type": {
          "description": "The ID of the timecard to list events for.",
          "enum": [
            "API_CREATE",
            "API_EDIT",
            "API_DELETE",
            "REGISTER_CLOCKIN",
            "REGISTER_CLOCKOUT",
            "DASHBOARD_SUPERVISOR_CLOSE",
            "DASHBOARD_EDIT",
            "DASHBOARD_DELETE"
          ],
          "type": "string"
        },
        "id": {
          "description": "The event's unique ID.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1UpdateModifierListRequest": {
      "properties": {
        "name": {
          "description": "The modifier list's name.",
          "type": "string"
        },
        "selection_type": {
          "description": "Indicates whether multiple options from the modifier list can be applied to a single item.",
          "enum": [
            "SINGLE",
            "MULTIPLE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1UpdateOrderRequest": {
      "properties": {
        "action": {
          "description": "The action to perform on the order (COMPLETE, CANCEL, or REFUND).",
          "enum": [
            "COMPLETE",
            "CANCEL",
            "REFUND"
          ],
          "type": "string"
        },
        "canceled_note": {
          "description": "A merchant-specified note about the canceling of the order. Only valid if action is CANCEL.",
          "type": "string"
        },
        "completed_note": {
          "description": "A merchant-specified note about the completion of the order. Only valid if action is COMPLETE.",
          "type": "string"
        },
        "refunded_note": {
          "description": "A merchant-specified note about the refunding of the order. Only valid if action is REFUND.",
          "type": "string"
        },
        "shipped_tracking_number": {
          "description": "The tracking number of the shipment associated with the order. Only valid if action is COMPLETE.",
          "type": "string"
        }
      },
      "required": [
        "action"
      ],
      "type": "object"
    },
    "v1Variation": {
      "properties": {
        "id": {
          "description": "The item variation's unique ID.",
          "type": "string"
        },
        "inventory_alert_threshold": {
          "description": "If the inventory quantity for the variation is less than or equal to this value and inventory_alert_type is LOW_QUANTITY, the variation displays an alert in the merchant dashboard.",
          "type": "integer"
        },
        "inventory_alert_type": {
          "description": "Indicates whether the item variation displays an alert when its inventory quantity is less than or equal to its inventory_alert_threshold.",
          "enum": [
            "LOW_QUANTITY",
            "NONE",
            "INVESTMENT",
            "LOAN",
            "SAVINGS",
            "OTHER"
          ],
          "type": "string"
        },
        "item_id": {
          "description": "The ID of the variation's associated item.",
          "type": "string"
        },
        "name": {
          "description": "The item variation's name.",
          "type": "string"
        },
        "ordinal": {
          "description": "Indicates the variation's list position when displayed in Square Register and the merchant dashboard. If more than one variation for the same item has the same ordinal value, those variations are displayed in alphabetical order",
          "type": "integer"
        },
        "price_money": {
          "$ref": "#/definitions/v1Money",
          "description": "The item variation's price, if any."
        },
        "pricing_type": {
          "description": "Indicates whether the item variation's price is fixed or determined at the time of sale.",
          "enum": [
            "FIXED_PRICING",
            "VARIABLE_PRICING"
          ],
          "type": "string"
        },
        "sku": {
          "description": "The item variation's SKU, if any.",
          "type": "string"
        },
        "track_inventory": {
          "description": "If true, inventory tracking is active for the variation.",
          "type": "boolean"
        },
        "user_data": {
          "description": "Arbitrary metadata associated with the variation. Cannot exceed 255 characters.",
          "type": "string"
        }
      },
      "type": "object"
    }
  }
}
