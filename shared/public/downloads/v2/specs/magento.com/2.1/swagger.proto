syntax = "proto3";

import "google/protobuf/empty.proto";

import "google/api/annotations.proto";

package magentoenterprise;

message DeleteV1AddressesAddressIdRequest {
    int32 addressId = 1;
}

message GetV1AttributeMetadataCustomerResponse {
    repeated customer-data-attribute-metadata-interface items = 1;
}

message GetV1AttributeMetadataCustomerAttributeAttributeCodeRequest {
    string attributeCode = 1;
}

message GetV1AttributeMetadataCustomerCustomRequest {
    string dataInterfaceName = 1;
}

message GetV1AttributeMetadataCustomerCustomResponse {
    repeated customer-data-attribute-metadata-interface items = 1;
}

message GetV1AttributeMetadataCustomerFormFormCodeRequest {
    string formCode = 1;
}

message GetV1AttributeMetadataCustomerFormFormCodeResponse {
    repeated customer-data-attribute-metadata-interface items = 1;
}

message GetV1AttributeMetadataCustomerAddressResponse {
    repeated customer-data-attribute-metadata-interface items = 1;
}

message GetV1AttributeMetadataCustomerAddressAttributeAttributeCodeRequest {
    string attributeCode = 1;
}

message GetV1AttributeMetadataCustomerAddressCustomRequest {
    string dataInterfaceName = 1;
}

message GetV1AttributeMetadataCustomerAddressCustomResponse {
    repeated customer-data-attribute-metadata-interface items = 1;
}

message GetV1AttributeMetadataCustomerAddressFormFormCodeRequest {
    string formCode = 1;
}

message GetV1AttributeMetadataCustomerAddressFormFormCodeResponse {
    repeated customer-data-attribute-metadata-interface items = 1;
}

message PostV1BundleProductsOptionsAddRequest {
    message $Body {
        bundle-data-option-interface option = 1;
    }
    $Body $body = 1;
}

message GetV1BundleProductsOptionsTypesResponse {
    repeated bundle-data-option-type-interface items = 1;
}

message PutV1BundleProductsOptionsOptionIdRequest {
    message $Body {
        bundle-data-option-interface option = 1;
    }
    $Body $body = 1;
    string optionId = 2;
}

message GetV1BundleProductsProductSkuChildrenRequest {
    int32 optionId = 1;
    string productSku = 2;
}

message GetV1BundleProductsProductSkuChildrenResponse {
    repeated bundle-data-link-interface items = 1;
}

message PutV1BundleProductsSkuLinksIdRequest {
    message $Body {
        bundle-data-link-interface linkedProduct = 1;
    }
    $Body $body = 1;
    string id = 2;
    string sku = 3;
}

message PostV1BundleProductsSkuLinksOptionIdRequest {
    message $Body {
        bundle-data-link-interface linkedProduct = 1;
    }
    $Body $body = 1;
    int32 optionId = 2;
    string sku = 3;
}

message GetV1BundleProductsSkuOptionsAllRequest {
    string sku = 1;
}

message GetV1BundleProductsSkuOptionsAllResponse {
    repeated bundle-data-option-interface items = 1;
}

message GetV1BundleProductsSkuOptionsOptionIdRequest {
    int32 optionId = 1;
    string sku = 2;
}

message DeleteV1BundleProductsSkuOptionsOptionIdRequest {
    int32 optionId = 1;
    string sku = 2;
}

message DeleteV1BundleProductsSkuOptionsOptionIdChildrenChildSkuRequest {
    string childSku = 1;
    int32 optionId = 2;
    string sku = 3;
}

message GetV1CartsGuestCartsCartIdCheckGiftCardGiftCardCodeRequest {
    string cartId = 1;
    string giftCardCode = 2;
}

message PostV1CartsGuestCartsCartIdGiftCardsRequest {
    message $Body {
        gift-card-account-data-gift-card-account-interface giftCardAccountData = 1;
    }
    $Body $body = 1;
    string cartId = 2;
}

message DeleteV1CartsGuestCartsCartIdGiftCardsGiftCardCodeRequest {
    string cartId = 1;
    string giftCardCode = 2;
}

message GetV1CartsLicenceResponse {
    repeated checkout-agreements-data-agreement-interface items = 1;
}

message PutV1CartsMineRequest {
    message $Body {
        quote-data-cart-interface quote = 1;
    }
    $Body $body = 1;
}

message PostV1CartsMineBillingAddressRequest {
    message $Body {
        quote-data-address-interface address = 1;
        bool useForShipping = 2;
    }
    $Body $body = 1;
}

message GetV1CartsMineCheckGiftCardGiftCardCodeRequest {
    string giftCardCode = 1;
}

message PutV1CartsMineCollectTotalsRequest {
    message $Body {
        quote-data-totals-additional-data-interface additionalData = 1;
        quote-data-payment-interface paymentMethod = 2;
            // The carrier code.
    string shippingCarrierCode = 3;
            // The shipping method code.
    string shippingMethodCode = 4;
    }
    $Body $body = 1;
}

message PutV1CartsMineCouponsCouponCodeRequest {
    // The coupon code data.
    string couponCode = 1;
}

message PostV1CartsMineEstimateShippingMethodsRequest {
    message $Body {
        quote-data-address-interface address = 1;
    }
    $Body $body = 1;
}

message PostV1CartsMineEstimateShippingMethodsResponse {
    // An array of shipping methods
    repeated quote-data-shipping-method-interface items = 1;
}

message PostV1CartsMineEstimateShippingMethodsByAddressIdRequest {
    message $Body {
            // The estimate address id
    int32 addressId = 1;
    }
    $Body $body = 1;
}

message PostV1CartsMineEstimateShippingMethodsByAddressIdResponse {
    // An array of shipping methods.
    repeated quote-data-shipping-method-interface items = 1;
}

message PostV1CartsMineGiftMessageRequest {
    message $Body {
        gift-message-data-message-interface giftMessage = 1;
    }
    $Body $body = 1;
}

message GetV1CartsMineGiftMessageItemIdRequest {
    // The item ID.
    int32 itemId = 1;
}

message PostV1CartsMineGiftMessageItemIdRequest {
    message $Body {
        gift-message-data-message-interface giftMessage = 1;
    }
    $Body $body = 1;
    // The item ID.
    int32 itemId = 2;
}

message PostV1CartsMineGiftCardsRequest {
    message $Body {
        gift-card-account-data-gift-card-account-interface giftCardAccountData = 1;
    }
    $Body $body = 1;
}

message DeleteV1CartsMineGiftCardsGiftCardCodeRequest {
    string giftCardCode = 1;
}

message GetV1CartsMineItemsResponse {
    // Array of items.
    repeated quote-data-cart-item-interface items = 1;
}

message PostV1CartsMineItemsRequest {
    message $Body {
        quote-data-cart-item-interface cartItem = 1;
    }
    $Body $body = 1;
}

message PutV1CartsMineItemsItemIdRequest {
    message $Body {
        quote-data-cart-item-interface cartItem = 1;
    }
    $Body $body = 1;
    string itemId = 2;
}

message DeleteV1CartsMineItemsItemIdRequest {
    // The item ID of the item to be removed.
    int32 itemId = 1;
}

message PutV1CartsMineOrderRequest {
    message $Body {
        quote-data-payment-interface paymentMethod = 1;
    }
    $Body $body = 1;
}

message PostV1CartsMinePaymentInformationRequest {
    message $Body {
        quote-data-address-interface billingAddress = 1;
        quote-data-payment-interface paymentMethod = 2;
    }
    $Body $body = 1;
}

message GetV1CartsMinePaymentMethodsResponse {
    // Array of payment methods.
    repeated quote-data-payment-method-interface items = 1;
}

message PutV1CartsMineSelectedPaymentMethodRequest {
    message $Body {
        quote-data-payment-interface method = 1;
    }
    $Body $body = 1;
}

message PostV1CartsMineSetPaymentInformationRequest {
    message $Body {
        quote-data-address-interface billingAddress = 1;
        quote-data-payment-interface paymentMethod = 2;
    }
    $Body $body = 1;
}

message PostV1CartsMineShippingInformationRequest {
    message $Body {
        checkout-data-shipping-information-interface addressInformation = 1;
    }
    $Body $body = 1;
}

message GetV1CartsMineShippingMethodsResponse {
    // An array of shipping methods.
    repeated quote-data-shipping-method-interface items = 1;
}

message PostV1CartsMineTotalsInformationRequest {
    message $Body {
        checkout-data-totals-information-interface addressInformation = 1;
    }
    $Body $body = 1;
}

message GetV1CartsSearchRequest {
    // Current page.
    int32 searchCriteria[currentPage] = 1;
    // Condition type
    string searchCriteria[filterGroups][][filters][][conditionType] = 2;
    // Field
    string searchCriteria[filterGroups][][filters][][field] = 3;
    // Value
    string searchCriteria[filterGroups][][filters][][value] = 4;
    // Page size.
    int32 searchCriteria[pageSize] = 5;
    // Sorting direction.
    string searchCriteria[sortOrders][][direction] = 6;
    // Sorting field.
    string searchCriteria[sortOrders][][field] = 7;
}

message GetV1CartsCartIdRequest {
    int32 cartId = 1;
}

message PutV1CartsCartIdRequest {
    message $Body {
            // The customer ID.
    int32 customerId = 1;
        int32 storeId = 2;
    }
    $Body $body = 1;
    // The cart ID.
    int32 cartId = 2;
}

message GetV1CartsCartIdBillingAddressRequest {
    // The cart ID.
    int32 cartId = 1;
}

message PostV1CartsCartIdBillingAddressRequest {
    message $Body {
        quote-data-address-interface address = 1;
        bool useForShipping = 2;
    }
    $Body $body = 1;
    // The cart ID.
    int32 cartId = 2;
}

message GetV1CartsCartIdCouponsRequest {
    // The cart ID.
    int32 cartId = 1;
}

message DeleteV1CartsCartIdCouponsRequest {
    // The cart ID.
    int32 cartId = 1;
}

message PutV1CartsCartIdCouponsCouponCodeRequest {
    // The cart ID.
    int32 cartId = 1;
    // The coupon code data.
    string couponCode = 2;
}

message PostV1CartsCartIdEstimateShippingMethodsRequest {
    message $Body {
        quote-data-address-interface address = 1;
    }
    $Body $body = 1;
    string cartId = 2;
}

message PostV1CartsCartIdEstimateShippingMethodsResponse {
    // An array of shipping methods
    repeated quote-data-shipping-method-interface items = 1;
}

message PostV1CartsCartIdEstimateShippingMethodsByAddressIdRequest {
    message $Body {
            // The estimate address id
    int32 addressId = 1;
    }
    $Body $body = 1;
    // The shopping cart ID.
    int32 cartId = 2;
}

message PostV1CartsCartIdEstimateShippingMethodsByAddressIdResponse {
    // An array of shipping methods.
    repeated quote-data-shipping-method-interface items = 1;
}

message GetV1CartsCartIdGiftMessageRequest {
    // The shopping cart ID.
    int32 cartId = 1;
}

message PostV1CartsCartIdGiftMessageRequest {
    message $Body {
        gift-message-data-message-interface giftMessage = 1;
    }
    $Body $body = 1;
    // The cart ID.
    int32 cartId = 2;
}

message GetV1CartsCartIdGiftMessageItemIdRequest {
    // The shopping cart ID.
    int32 cartId = 1;
    // The item ID.
    int32 itemId = 2;
}

message PostV1CartsCartIdGiftMessageItemIdRequest {
    message $Body {
        gift-message-data-message-interface giftMessage = 1;
    }
    $Body $body = 1;
    // The cart ID.
    int32 cartId = 2;
    // The item ID.
    int32 itemId = 3;
}

message PutV1CartsCartIdGiftCardsRequest {
    message $Body {
        gift-card-account-data-gift-card-account-interface giftCardAccountData = 1;
    }
    $Body $body = 1;
    int32 cartId = 2;
}

message DeleteV1CartsCartIdGiftCardsGiftCardCodeRequest {
    int32 cartId = 1;
    string giftCardCode = 2;
}

message GetV1CartsCartIdItemsRequest {
    // The cart ID.
    int32 cartId = 1;
}

message GetV1CartsCartIdItemsResponse {
    // Array of items.
    repeated quote-data-cart-item-interface items = 1;
}

message PutV1CartsCartIdItemsItemIdRequest {
    message $Body {
        quote-data-cart-item-interface cartItem = 1;
    }
    $Body $body = 1;
    string cartId = 2;
    string itemId = 3;
}

message DeleteV1CartsCartIdItemsItemIdRequest {
    // The cart ID.
    int32 cartId = 1;
    // The item ID of the item to be removed.
    int32 itemId = 2;
}

message PutV1CartsCartIdOrderRequest {
    message $Body {
        quote-data-payment-interface paymentMethod = 1;
    }
    $Body $body = 1;
    // The cart ID.
    int32 cartId = 2;
}

message GetV1CartsCartIdPaymentMethodsRequest {
    // The cart ID.
    int32 cartId = 1;
}

message GetV1CartsCartIdPaymentMethodsResponse {
    // Array of payment methods.
    repeated quote-data-payment-method-interface items = 1;
}

message GetV1CartsCartIdSelectedPaymentMethodRequest {
    // The cart ID.
    int32 cartId = 1;
}

message PutV1CartsCartIdSelectedPaymentMethodRequest {
    message $Body {
        quote-data-payment-interface method = 1;
    }
    $Body $body = 1;
    // The cart ID.
    int32 cartId = 2;
}

message PostV1CartsCartIdShippingInformationRequest {
    message $Body {
        checkout-data-shipping-information-interface addressInformation = 1;
    }
    $Body $body = 1;
    int32 cartId = 2;
}

message GetV1CartsCartIdShippingMethodsRequest {
    // The shopping cart ID.
    int32 cartId = 1;
}

message GetV1CartsCartIdShippingMethodsResponse {
    // An array of shipping methods.
    repeated quote-data-shipping-method-interface items = 1;
}

message GetV1CartsCartIdTotalsRequest {
    // The cart ID.
    int32 cartId = 1;
}

message PostV1CartsCartIdTotalsInformationRequest {
    message $Body {
        checkout-data-totals-information-interface addressInformation = 1;
    }
    $Body $body = 1;
    int32 cartId = 2;
}

message GetV1CartsQuoteIdGiftCardsRequest {
    int32 quoteId = 1;
}

message PostV1CartsQuoteIdItemsRequest {
    message $Body {
        quote-data-cart-item-interface cartItem = 1;
    }
    $Body $body = 1;
    string quoteId = 2;
}

message GetV1CategoriesRequest {
    int32 depth = 1;
    int32 rootCategoryId = 2;
}

message PostV1CategoriesRequest {
    message $Body {
        catalog-data-category-interface category = 1;
    }
    $Body $body = 1;
}

message GetV1CategoriesAttributesRequest {
    // Current page.
    int32 searchCriteria[currentPage] = 1;
    // Condition type
    string searchCriteria[filterGroups][][filters][][conditionType] = 2;
    // Field
    string searchCriteria[filterGroups][][filters][][field] = 3;
    // Value
    string searchCriteria[filterGroups][][filters][][value] = 4;
    // Page size.
    int32 searchCriteria[pageSize] = 5;
    // Sorting direction.
    string searchCriteria[sortOrders][][direction] = 6;
    // Sorting field.
    string searchCriteria[sortOrders][][field] = 7;
}

message GetV1CategoriesAttributesAttributeCodeRequest {
    string attributeCode = 1;
}

message GetV1CategoriesAttributesAttributeCodeOptionsRequest {
    string attributeCode = 1;
}

message GetV1CategoriesAttributesAttributeCodeOptionsResponse {
    repeated eav-data-attribute-option-interface items = 1;
}

message GetV1CategoriesCategoryIdRequest {
    int32 categoryId = 1;
    int32 storeId = 2;
}

message DeleteV1CategoriesCategoryIdRequest {
    int32 categoryId = 1;
}

message PutV1CategoriesCategoryIdMoveRequest {
    message $Body {
        int32 afterId = 1;
        int32 parentId = 2;
    }
    $Body $body = 1;
    int32 categoryId = 2;
}

message GetV1CategoriesCategoryIdProductsRequest {
    int32 categoryId = 1;
}

message GetV1CategoriesCategoryIdProductsResponse {
    repeated catalog-data-category-product-link-interface items = 1;
}

message PutV1CategoriesCategoryIdProductsRequest {
    message $Body {
        catalog-data-category-product-link-interface productLink = 1;
    }
    $Body $body = 1;
    string categoryId = 2;
}

message PostV1CategoriesCategoryIdProductsRequest {
    message $Body {
        catalog-data-category-product-link-interface productLink = 1;
    }
    $Body $body = 1;
    string categoryId = 2;
}

message DeleteV1CategoriesCategoryIdProductsSkuRequest {
    string categoryId = 1;
    string sku = 2;
}

message PutV1CategoriesIdRequest {
    message $Body {
        catalog-data-category-interface category = 1;
    }
    $Body $body = 1;
    string id = 2;
}

message PostV1CmsBlockRequest {
    message $Body {
        cms-data-block-interface block = 1;
    }
    $Body $body = 1;
}

message GetV1CmsBlockSearchRequest {
    // Current page.
    int32 searchCriteria[currentPage] = 1;
    // Condition type
    string searchCriteria[filterGroups][][filters][][conditionType] = 2;
    // Field
    string searchCriteria[filterGroups][][filters][][field] = 3;
    // Value
    string searchCriteria[filterGroups][][filters][][value] = 4;
    // Page size.
    int32 searchCriteria[pageSize] = 5;
    // Sorting direction.
    string searchCriteria[sortOrders][][direction] = 6;
    // Sorting field.
    string searchCriteria[sortOrders][][field] = 7;
}

message GetV1CmsBlockBlockIdRequest {
    int32 blockId = 1;
}

message DeleteV1CmsBlockBlockIdRequest {
    int32 blockId = 1;
}

message PutV1CmsBlockIdRequest {
    message $Body {
        cms-data-block-interface block = 1;
    }
    $Body $body = 1;
    string id = 2;
}

message PostV1CmsPageRequest {
    message $Body {
        cms-data-page-interface page = 1;
    }
    $Body $body = 1;
}

message GetV1CmsPageSearchRequest {
    // Current page.
    int32 searchCriteria[currentPage] = 1;
    // Condition type
    string searchCriteria[filterGroups][][filters][][conditionType] = 2;
    // Field
    string searchCriteria[filterGroups][][filters][][field] = 3;
    // Value
    string searchCriteria[filterGroups][][filters][][value] = 4;
    // Page size.
    int32 searchCriteria[pageSize] = 5;
    // Sorting direction.
    string searchCriteria[sortOrders][][direction] = 6;
    // Sorting field.
    string searchCriteria[sortOrders][][field] = 7;
}

message PutV1CmsPageIdRequest {
    message $Body {
        cms-data-page-interface page = 1;
    }
    $Body $body = 1;
    string id = 2;
}

message GetV1CmsPagePageIdRequest {
    int32 pageId = 1;
}

message DeleteV1CmsPagePageIdRequest {
    int32 pageId = 1;
}

message PutV1ConfigurableProductsVariationRequest {
    message $Body {
        repeated configurable-product-data-option-interface options = 1;
        catalog-data-product-interface product = 2;
    }
    $Body $body = 1;
}

message PutV1ConfigurableProductsVariationResponse {
    repeated catalog-data-product-interface items = 1;
}

message PostV1ConfigurableProductsSkuChildRequest {
    message $Body {
        string childSku = 1;
    }
    $Body $body = 1;
    string sku = 2;
}

message GetV1ConfigurableProductsSkuChildrenRequest {
    string sku = 1;
}

message GetV1ConfigurableProductsSkuChildrenResponse {
    repeated catalog-data-product-interface items = 1;
}

message DeleteV1ConfigurableProductsSkuChildrenChildSkuRequest {
    string childSku = 1;
    string sku = 2;
}

message PostV1ConfigurableProductsSkuOptionsRequest {
    message $Body {
        configurable-product-data-option-interface option = 1;
    }
    $Body $body = 1;
    string sku = 2;
}

message GetV1ConfigurableProductsSkuOptionsAllRequest {
    string sku = 1;
}

message GetV1ConfigurableProductsSkuOptionsAllResponse {
    repeated configurable-product-data-option-interface items = 1;
}

message GetV1ConfigurableProductsSkuOptionsIdRequest {
    int32 id = 1;
    string sku = 2;
}

message PutV1ConfigurableProductsSkuOptionsIdRequest {
    message $Body {
        configurable-product-data-option-interface option = 1;
    }
    $Body $body = 1;
    string id = 2;
    string sku = 3;
}

message DeleteV1ConfigurableProductsSkuOptionsIdRequest {
    int32 id = 1;
    string sku = 2;
}

message PostV1CouponsRequest {
    message $Body {
        sales-rule-data-coupon-interface coupon = 1;
    }
    $Body $body = 1;
}

message PostV1CouponsDeleteByCodesRequest {
    message $Body {
        repeated string codes = 1;
        bool ignoreInvalidCoupons = 2;
    }
    $Body $body = 1;
}

message PostV1CouponsDeleteByIdsRequest {
    message $Body {
        repeated int32 ids = 1;
        bool ignoreInvalidCoupons = 2;
    }
    $Body $body = 1;
}

message PostV1CouponsGenerateRequest {
    message $Body {
        sales-rule-data-coupon-generation-spec-interface couponSpec = 1;
    }
    $Body $body = 1;
}

message PostV1CouponsGenerateResponse {
    repeated string items = 1;
}

message GetV1CouponsSearchRequest {
    // Current page.
    int32 searchCriteria[currentPage] = 1;
    // Condition type
    string searchCriteria[filterGroups][][filters][][conditionType] = 2;
    // Field
    string searchCriteria[filterGroups][][filters][][field] = 3;
    // Value
    string searchCriteria[filterGroups][][filters][][value] = 4;
    // Page size.
    int32 searchCriteria[pageSize] = 5;
    // Sorting direction.
    string searchCriteria[sortOrders][][direction] = 6;
    // Sorting field.
    string searchCriteria[sortOrders][][field] = 7;
}

message GetV1CouponsCouponIdRequest {
    int32 couponId = 1;
}

message PutV1CouponsCouponIdRequest {
    message $Body {
        sales-rule-data-coupon-interface coupon = 1;
    }
    $Body $body = 1;
    string couponId = 2;
}

message DeleteV1CouponsCouponIdRequest {
    int32 couponId = 1;
}

message PostV1CreditmemoRequest {
    message $Body {
        sales-data-creditmemo-interface entity = 1;
    }
    $Body $body = 1;
}

message PostV1CreditmemoRefundRequest {
    message $Body {
        sales-data-creditmemo-interface creditmemo = 1;
        bool offlineRequested = 2;
    }
    $Body $body = 1;
}

message GetV1CreditmemoIdRequest {
    // The credit memo ID.
    int32 id = 1;
}

message PutV1CreditmemoIdRequest {
    // The credit memo ID.
    int32 id = 1;
}

message GetV1CreditmemoIdCommentsRequest {
    // The credit memo ID.
    int32 id = 1;
}

message PostV1CreditmemoIdCommentsRequest {
    message $Body {
        sales-data-creditmemo-comment-interface entity = 1;
    }
    $Body $body = 1;
    string id = 2;
}

message PostV1CreditmemoIdEmailsRequest {
    // The credit memo ID.
    int32 id = 1;
}

message GetV1CreditmemosRequest {
    // Current page.
    int32 searchCriteria[currentPage] = 1;
    // Condition type
    string searchCriteria[filterGroups][][filters][][conditionType] = 2;
    // Field
    string searchCriteria[filterGroups][][filters][][field] = 3;
    // Value
    string searchCriteria[filterGroups][][filters][][value] = 4;
    // Page size.
    int32 searchCriteria[pageSize] = 5;
    // Sorting direction.
    string searchCriteria[sortOrders][][direction] = 6;
    // Sorting field.
    string searchCriteria[sortOrders][][field] = 7;
}

message PostV1CustomerGroupsRequest {
    message $Body {
        customer-data-group-interface group = 1;
    }
    $Body $body = 1;
}

message GetV1CustomerGroupsDefaultRequest {
    int32 storeId = 1;
}

message GetV1CustomerGroupsDefaultStoreIdRequest {
    int32 storeId = 1;
}

message GetV1CustomerGroupsSearchRequest {
    // Current page.
    int32 searchCriteria[currentPage] = 1;
    // Condition type
    string searchCriteria[filterGroups][][filters][][conditionType] = 2;
    // Field
    string searchCriteria[filterGroups][][filters][][field] = 3;
    // Value
    string searchCriteria[filterGroups][][filters][][value] = 4;
    // Page size.
    int32 searchCriteria[pageSize] = 5;
    // Sorting direction.
    string searchCriteria[sortOrders][][direction] = 6;
    // Sorting field.
    string searchCriteria[sortOrders][][field] = 7;
}

message GetV1CustomerGroupsIdRequest {
    int32 id = 1;
}

message PutV1CustomerGroupsIdRequest {
    message $Body {
        customer-data-group-interface group = 1;
    }
    $Body $body = 1;
    string id = 2;
}

message DeleteV1CustomerGroupsIdRequest {
    int32 id = 1;
}

message GetV1CustomerGroupsIdPermissionsRequest {
    int32 id = 1;
}

message PostV1CustomersRequest {
    message $Body {
        customer-data-customer-interface customer = 1;
        string password = 2;
        string redirectUrl = 3;
    }
    $Body $body = 1;
}

message GetV1CustomersAddressesAddressIdRequest {
    int32 addressId = 1;
}

message PostV1CustomersConfirmRequest {
    message $Body {
        string email = 1;
        string redirectUrl = 2;
        int32 websiteId = 3;
    }
    $Body $body = 1;
}

message PostV1CustomersIsEmailAvailableRequest {
    message $Body {
        string customerEmail = 1;
            // If not set, will use the current websiteId
    int32 websiteId = 2;
    }
    $Body $body = 1;
}

message PutV1CustomersMeRequest {
    message $Body {
        customer-data-customer-interface customer = 1;
        string passwordHash = 2;
    }
    $Body $body = 1;
}

message PutV1CustomersMeActivateRequest {
    message $Body {
        string confirmationKey = 1;
    }
    $Body $body = 1;
}

message PutV1CustomersMePasswordRequest {
    message $Body {
        string currentPassword = 1;
        string newPassword = 2;
    }
    $Body $body = 1;
}

message PutV1CustomersPasswordRequest {
    message $Body {
        string email = 1;
        string template = 2;
        int32 websiteId = 3;
    }
    $Body $body = 1;
}

message GetV1CustomersSearchRequest {
    // Current page.
    int32 searchCriteria[currentPage] = 1;
    // Condition type
    string searchCriteria[filterGroups][][filters][][conditionType] = 2;
    // Field
    string searchCriteria[filterGroups][][filters][][field] = 3;
    // Value
    string searchCriteria[filterGroups][][filters][][value] = 4;
    // Page size.
    int32 searchCriteria[pageSize] = 5;
    // Sorting direction.
    string searchCriteria[sortOrders][][direction] = 6;
    // Sorting field.
    string searchCriteria[sortOrders][][field] = 7;
}

message PutV1CustomersValidateRequest {
    message $Body {
        customer-data-customer-interface customer = 1;
    }
    $Body $body = 1;
}

message GetV1CustomersCustomerIdRequest {
    int32 customerId = 1;
}

message DeleteV1CustomersCustomerIdRequest {
    int32 customerId = 1;
}

message GetV1CustomersCustomerIdBillingAddressRequest {
    int32 customerId = 1;
}

message PostV1CustomersCustomerIdCartsRequest {
    // The customer ID.
    int32 customerId = 1;
}

message GetV1CustomersCustomerIdConfirmRequest {
    int32 customerId = 1;
}

message GetV1CustomersCustomerIdPasswordResetLinkTokenResetPasswordLinkTokenRequest {
    int32 customerId = 1;
    string resetPasswordLinkToken = 2;
}

message GetV1CustomersCustomerIdPermissionsReadonlyRequest {
    int32 customerId = 1;
}

message GetV1CustomersCustomerIdShippingAddressRequest {
    int32 customerId = 1;
}

message PutV1CustomersEmailActivateRequest {
    message $Body {
        string confirmationKey = 1;
    }
    $Body $body = 1;
    string email = 2;
}

message PutV1CustomersIdRequest {
    message $Body {
        customer-data-customer-interface customer = 1;
        string passwordHash = 2;
    }
    $Body $body = 1;
    string id = 2;
}

message GetV1DirectoryCountriesResponse {
    repeated directory-data-country-information-interface items = 1;
}

message GetV1DirectoryCountriesCountryIdRequest {
    string countryId = 1;
}

message PostV1EavAttributeSetsRequest {
    message $Body {
        eav-data-attribute-set-interface attributeSet = 1;
        string entityTypeCode = 2;
        int32 skeletonId = 3;
    }
    $Body $body = 1;
}

message GetV1EavAttributeSetsListRequest {
    // Current page.
    int32 searchCriteria[currentPage] = 1;
    // Condition type
    string searchCriteria[filterGroups][][filters][][conditionType] = 2;
    // Field
    string searchCriteria[filterGroups][][filters][][field] = 3;
    // Value
    string searchCriteria[filterGroups][][filters][][value] = 4;
    // Page size.
    int32 searchCriteria[pageSize] = 5;
    // Sorting direction.
    string searchCriteria[sortOrders][][direction] = 6;
    // Sorting field.
    string searchCriteria[sortOrders][][field] = 7;
}

message GetV1EavAttributeSetsAttributeSetIdRequest {
    int32 attributeSetId = 1;
}

message PutV1EavAttributeSetsAttributeSetIdRequest {
    message $Body {
        eav-data-attribute-set-interface attributeSet = 1;
    }
    $Body $body = 1;
    string attributeSetId = 2;
}

message DeleteV1EavAttributeSetsAttributeSetIdRequest {
    int32 attributeSetId = 1;
}

message GetV1GiftWrappingsRequest {
    // Current page.
    int32 searchCriteria[currentPage] = 1;
    // Condition type
    string searchCriteria[filterGroups][][filters][][conditionType] = 2;
    // Field
    string searchCriteria[filterGroups][][filters][][field] = 3;
    // Value
    string searchCriteria[filterGroups][][filters][][value] = 4;
    // Page size.
    int32 searchCriteria[pageSize] = 5;
    // Sorting direction.
    string searchCriteria[sortOrders][][direction] = 6;
    // Sorting field.
    string searchCriteria[sortOrders][][field] = 7;
}

message PostV1GiftWrappingsRequest {
    message $Body {
        gift-wrapping-data-wrapping-interface data = 1;
        int32 storeId = 2;
    }
    $Body $body = 1;
}

message GetV1GiftWrappingsIdRequest {
    int32 id = 1;
    int32 storeId = 2;
}

message DeleteV1GiftWrappingsIdRequest {
    int32 id = 1;
}

message PutV1GiftWrappingsWrappingIdRequest {
    message $Body {
        gift-wrapping-data-wrapping-interface data = 1;
        int32 storeId = 2;
    }
    $Body $body = 1;
    string wrappingId = 2;
}

message PostV1GiftregistryMineEstimateShippingMethodsRequest {
    message $Body {
            // The estimate registry id
    int32 registryId = 1;
    }
    $Body $body = 1;
}

message PostV1GiftregistryMineEstimateShippingMethodsResponse {
    // An array of shipping methods.
    repeated quote-data-shipping-method-interface items = 1;
}

message GetV1GuestCartsCartIdRequest {
    string cartId = 1;
}

message PutV1GuestCartsCartIdRequest {
    message $Body {
            // The customer ID.
    int32 customerId = 1;
        int32 storeId = 2;
    }
    $Body $body = 1;
    // The cart ID.
    string cartId = 2;
}

message GetV1GuestCartsCartIdBillingAddressRequest {
    // The cart ID.
    string cartId = 1;
}

message PostV1GuestCartsCartIdBillingAddressRequest {
    message $Body {
        quote-data-address-interface address = 1;
    }
    $Body $body = 1;
    // The cart ID.
    string cartId = 2;
}

message PutV1GuestCartsCartIdCollectTotalsRequest {
    message $Body {
        quote-data-totals-additional-data-interface additionalData = 1;
        quote-data-payment-interface paymentMethod = 2;
            // The carrier code.
    string shippingCarrierCode = 3;
            // The shipping method code.
    string shippingMethodCode = 4;
    }
    $Body $body = 1;
    // The cart ID.
    string cartId = 2;
}

message GetV1GuestCartsCartIdCouponsRequest {
    // The cart ID.
    string cartId = 1;
}

message DeleteV1GuestCartsCartIdCouponsRequest {
    // The cart ID.
    string cartId = 1;
}

message PutV1GuestCartsCartIdCouponsCouponCodeRequest {
    // The cart ID.
    string cartId = 1;
    // The coupon code data.
    string couponCode = 2;
}

message PostV1GuestCartsCartIdEstimateShippingMethodsRequest {
    message $Body {
        quote-data-address-interface address = 1;
    }
    $Body $body = 1;
    string cartId = 2;
}

message PostV1GuestCartsCartIdEstimateShippingMethodsResponse {
    // An array of shipping methods
    repeated quote-data-shipping-method-interface items = 1;
}

message GetV1GuestCartsCartIdGiftMessageRequest {
    // The shopping cart ID.
    string cartId = 1;
}

message PostV1GuestCartsCartIdGiftMessageRequest {
    message $Body {
        gift-message-data-message-interface giftMessage = 1;
    }
    $Body $body = 1;
    // The cart ID.
    string cartId = 2;
}

message GetV1GuestCartsCartIdGiftMessageItemIdRequest {
    // The shopping cart ID.
    string cartId = 1;
    // The item ID.
    int32 itemId = 2;
}

message PostV1GuestCartsCartIdGiftMessageItemIdRequest {
    message $Body {
        gift-message-data-message-interface giftMessage = 1;
    }
    $Body $body = 1;
    // The cart ID.
    string cartId = 2;
    // The item ID.
    int32 itemId = 3;
}

message GetV1GuestCartsCartIdItemsRequest {
    // The cart ID.
    string cartId = 1;
}

message GetV1GuestCartsCartIdItemsResponse {
    // Array of items.
    repeated quote-data-cart-item-interface items = 1;
}

message PostV1GuestCartsCartIdItemsRequest {
    message $Body {
        quote-data-cart-item-interface cartItem = 1;
    }
    $Body $body = 1;
    string cartId = 2;
}

message PutV1GuestCartsCartIdItemsItemIdRequest {
    message $Body {
        quote-data-cart-item-interface cartItem = 1;
    }
    $Body $body = 1;
    string cartId = 2;
    string itemId = 3;
}

message DeleteV1GuestCartsCartIdItemsItemIdRequest {
    // The cart ID.
    string cartId = 1;
    // The item ID of the item to be removed.
    int32 itemId = 2;
}

message PutV1GuestCartsCartIdOrderRequest {
    message $Body {
        quote-data-payment-interface paymentMethod = 1;
    }
    $Body $body = 1;
    // The cart ID.
    string cartId = 2;
}

message GetV1GuestCartsCartIdPaymentInformationRequest {
    string cartId = 1;
}

message PostV1GuestCartsCartIdPaymentInformationRequest {
    message $Body {
        quote-data-address-interface billingAddress = 1;
        string email = 2;
        quote-data-payment-interface paymentMethod = 3;
    }
    $Body $body = 1;
    string cartId = 2;
}

message GetV1GuestCartsCartIdPaymentMethodsRequest {
    // The cart ID.
    string cartId = 1;
}

message GetV1GuestCartsCartIdPaymentMethodsResponse {
    // Array of payment methods.
    repeated quote-data-payment-method-interface items = 1;
}

message GetV1GuestCartsCartIdSelectedPaymentMethodRequest {
    // The cart ID.
    string cartId = 1;
}

message PutV1GuestCartsCartIdSelectedPaymentMethodRequest {
    message $Body {
        quote-data-payment-interface method = 1;
    }
    $Body $body = 1;
    // The cart ID.
    string cartId = 2;
}

message PostV1GuestCartsCartIdSetPaymentInformationRequest {
    message $Body {
        quote-data-address-interface billingAddress = 1;
        string email = 2;
        quote-data-payment-interface paymentMethod = 3;
    }
    $Body $body = 1;
    string cartId = 2;
}

message PostV1GuestCartsCartIdShippingInformationRequest {
    message $Body {
        checkout-data-shipping-information-interface addressInformation = 1;
    }
    $Body $body = 1;
    string cartId = 2;
}

message GetV1GuestCartsCartIdShippingMethodsRequest {
    // The shopping cart ID.
    string cartId = 1;
}

message GetV1GuestCartsCartIdShippingMethodsResponse {
    // An array of shipping methods.
    repeated quote-data-shipping-method-interface items = 1;
}

message GetV1GuestCartsCartIdTotalsRequest {
    // The cart ID.
    string cartId = 1;
}

message PostV1GuestCartsCartIdTotalsInformationRequest {
    message $Body {
        checkout-data-totals-information-interface addressInformation = 1;
    }
    $Body $body = 1;
    string cartId = 2;
}

message PostV1GuestGiftregistryCartIdEstimateShippingMethodsRequest {
    message $Body {
            // The estimate registry id
    int32 registryId = 1;
    }
    $Body $body = 1;
    // The shopping cart ID.
    string cartId = 2;
}

message PostV1GuestGiftregistryCartIdEstimateShippingMethodsResponse {
    // An array of shipping methods.
    repeated quote-data-shipping-method-interface items = 1;
}

message PostV1IntegrationAdminTokenRequest {
    message $Body {
        string password = 1;
        string username = 2;
    }
    $Body $body = 1;
}

message PostV1IntegrationCustomerTokenRequest {
    message $Body {
        string password = 1;
        string username = 2;
    }
    $Body $body = 1;
}

message PostV1InvoiceInvoiceIdRefundRequest {
    message $Body {
        bool appendComment = 1;
        sales-data-creditmemo-creation-arguments-interface arguments = 2;
        sales-data-creditmemo-comment-creation-interface comment = 3;
        bool isOnline = 4;
        repeated sales-data-creditmemo-item-creation-interface items = 5;
        bool notify = 6;
    }
    $Body $body = 1;
    int32 invoiceId = 2;
}

message GetV1InvoicesRequest {
    // Current page.
    int32 searchCriteria[currentPage] = 1;
    // Condition type
    string searchCriteria[filterGroups][][filters][][conditionType] = 2;
    // Field
    string searchCriteria[filterGroups][][filters][][field] = 3;
    // Value
    string searchCriteria[filterGroups][][filters][][value] = 4;
    // Page size.
    int32 searchCriteria[pageSize] = 5;
    // Sorting direction.
    string searchCriteria[sortOrders][][direction] = 6;
    // Sorting field.
    string searchCriteria[sortOrders][][field] = 7;
}

message PostV1InvoicesRequest {
    message $Body {
        sales-data-invoice-interface entity = 1;
    }
    $Body $body = 1;
}

message PostV1InvoicesCommentsRequest {
    message $Body {
        sales-data-invoice-comment-interface entity = 1;
    }
    $Body $body = 1;
}

message GetV1InvoicesIdRequest {
    // The invoice ID.
    int32 id = 1;
}

message PostV1InvoicesIdCaptureRequest {
    int32 id = 1;
}

message GetV1InvoicesIdCommentsRequest {
    // The invoice ID.
    int32 id = 1;
}

message PostV1InvoicesIdEmailsRequest {
    // The invoice ID.
    int32 id = 1;
}

message PostV1InvoicesIdVoidRequest {
    // The invoice ID.
    int32 id = 1;
}

message GetV1ModulesResponse {
    repeated string items = 1;
}

message PostV1OrderOrderIdInvoiceRequest {
    message $Body {
        bool appendComment = 1;
        sales-data-invoice-creation-arguments-interface arguments = 2;
        bool capture = 3;
        sales-data-invoice-comment-creation-interface comment = 4;
        repeated sales-data-invoice-item-creation-interface items = 5;
        bool notify = 6;
    }
    $Body $body = 1;
    int32 orderId = 2;
}

message PostV1OrderOrderIdRefundRequest {
    message $Body {
        bool appendComment = 1;
        sales-data-creditmemo-creation-arguments-interface arguments = 2;
        sales-data-creditmemo-comment-creation-interface comment = 3;
        repeated sales-data-creditmemo-item-creation-interface items = 4;
        bool notify = 5;
    }
    $Body $body = 1;
    int32 orderId = 2;
}

message PostV1OrderOrderIdShipRequest {
    message $Body {
        bool appendComment = 1;
        sales-data-shipment-creation-arguments-interface arguments = 2;
        sales-data-shipment-comment-creation-interface comment = 3;
        repeated sales-data-shipment-item-creation-interface items = 4;
        bool notify = 5;
        repeated sales-data-shipment-package-creation-interface packages = 6;
        repeated sales-data-shipment-track-creation-interface tracks = 7;
    }
    $Body $body = 1;
    int32 orderId = 2;
}

message GetV1OrdersRequest {
    // Current page.
    int32 searchCriteria[currentPage] = 1;
    // Condition type
    string searchCriteria[filterGroups][][filters][][conditionType] = 2;
    // Field
    string searchCriteria[filterGroups][][filters][][field] = 3;
    // Value
    string searchCriteria[filterGroups][][filters][][value] = 4;
    // Page size.
    int32 searchCriteria[pageSize] = 5;
    // Sorting direction.
    string searchCriteria[sortOrders][][direction] = 6;
    // Sorting field.
    string searchCriteria[sortOrders][][field] = 7;
}

message PostV1OrdersRequest {
    message $Body {
        sales-data-order-interface entity = 1;
    }
    $Body $body = 1;
}

message PutV1OrdersCreateRequest {
    message $Body {
        sales-data-order-interface entity = 1;
    }
    $Body $body = 1;
}

message GetV1OrdersItemsRequest {
    // Current page.
    int32 searchCriteria[currentPage] = 1;
    // Condition type
    string searchCriteria[filterGroups][][filters][][conditionType] = 2;
    // Field
    string searchCriteria[filterGroups][][filters][][field] = 3;
    // Value
    string searchCriteria[filterGroups][][filters][][value] = 4;
    // Page size.
    int32 searchCriteria[pageSize] = 5;
    // Sorting direction.
    string searchCriteria[sortOrders][][direction] = 6;
    // Sorting field.
    string searchCriteria[sortOrders][][field] = 7;
}

message GetV1OrdersItemsIdRequest {
    // The order item ID.
    int32 id = 1;
}

message GetV1OrdersIdRequest {
    // The order ID.
    int32 id = 1;
}

message PostV1OrdersIdCancelRequest {
    // The order ID.
    int32 id = 1;
}

message GetV1OrdersIdCommentsRequest {
    // The order ID.
    int32 id = 1;
}

message PostV1OrdersIdCommentsRequest {
    message $Body {
        sales-data-order-status-history-interface statusHistory = 1;
    }
    $Body $body = 1;
    // The order ID.
    int32 id = 2;
}

message PostV1OrdersIdEmailsRequest {
    // The order ID.
    int32 id = 1;
}

message PostV1OrdersIdHoldRequest {
    // The order ID.
    int32 id = 1;
}

message GetV1OrdersIdStatusesRequest {
    // The order ID.
    int32 id = 1;
}

message PostV1OrdersIdUnholdRequest {
    // The order ID.
    int32 id = 1;
}

message PutV1OrdersParent_idRequest {
    message $Body {
        sales-data-order-address-interface entity = 1;
    }
    $Body $body = 1;
    string parent_id = 2;
}

message GetV1ProductsRequest {
    // Current page.
    int32 searchCriteria[currentPage] = 1;
    // Condition type
    string searchCriteria[filterGroups][][filters][][conditionType] = 2;
    // Field
    string searchCriteria[filterGroups][][filters][][field] = 3;
    // Value
    string searchCriteria[filterGroups][][filters][][value] = 4;
    // Page size.
    int32 searchCriteria[pageSize] = 5;
    // Sorting direction.
    string searchCriteria[sortOrders][][direction] = 6;
    // Sorting field.
    string searchCriteria[sortOrders][][field] = 7;
}

message PostV1ProductsRequest {
    message $Body {
        catalog-data-product-interface product = 1;
        bool saveOptions = 2;
    }
    $Body $body = 1;
}

message PostV1ProductsAttributeSetsRequest {
    message $Body {
        eav-data-attribute-set-interface attributeSet = 1;
        int32 skeletonId = 2;
    }
    $Body $body = 1;
}

message PostV1ProductsAttributeSetsAttributesRequest {
    message $Body {
        string attributeCode = 1;
        int32 attributeGroupId = 2;
        int32 attributeSetId = 3;
        int32 sortOrder = 4;
    }
    $Body $body = 1;
}

message PostV1ProductsAttributeSetsGroupsRequest {
    message $Body {
        eav-data-attribute-group-interface group = 1;
    }
    $Body $body = 1;
}

message GetV1ProductsAttributeSetsGroupsListRequest {
    // Current page.
    int32 searchCriteria[currentPage] = 1;
    // Condition type
    string searchCriteria[filterGroups][][filters][][conditionType] = 2;
    // Field
    string searchCriteria[filterGroups][][filters][][field] = 3;
    // Value
    string searchCriteria[filterGroups][][filters][][value] = 4;
    // Page size.
    int32 searchCriteria[pageSize] = 5;
    // Sorting direction.
    string searchCriteria[sortOrders][][direction] = 6;
    // Sorting field.
    string searchCriteria[sortOrders][][field] = 7;
}

message DeleteV1ProductsAttributeSetsGroupsGroupIdRequest {
    int32 groupId = 1;
}

message GetV1ProductsAttributeSetsSetsListRequest {
    // Current page.
    int32 searchCriteria[currentPage] = 1;
    // Condition type
    string searchCriteria[filterGroups][][filters][][conditionType] = 2;
    // Field
    string searchCriteria[filterGroups][][filters][][field] = 3;
    // Value
    string searchCriteria[filterGroups][][filters][][value] = 4;
    // Page size.
    int32 searchCriteria[pageSize] = 5;
    // Sorting direction.
    string searchCriteria[sortOrders][][direction] = 6;
    // Sorting field.
    string searchCriteria[sortOrders][][field] = 7;
}

message GetV1ProductsAttributeSetsAttributeSetIdRequest {
    int32 attributeSetId = 1;
}

message PutV1ProductsAttributeSetsAttributeSetIdRequest {
    message $Body {
        eav-data-attribute-set-interface attributeSet = 1;
    }
    $Body $body = 1;
    string attributeSetId = 2;
}

message DeleteV1ProductsAttributeSetsAttributeSetIdRequest {
    int32 attributeSetId = 1;
}

message GetV1ProductsAttributeSetsAttributeSetIdAttributesRequest {
    string attributeSetId = 1;
}

message GetV1ProductsAttributeSetsAttributeSetIdAttributesResponse {
    repeated catalog-data-product-attribute-interface items = 1;
}

message DeleteV1ProductsAttributeSetsAttributeSetIdAttributesAttributeCodeRequest {
    string attributeCode = 1;
    string attributeSetId = 2;
}

message PutV1ProductsAttributeSetsAttributeSetIdGroupsRequest {
    message $Body {
        eav-data-attribute-group-interface group = 1;
    }
    $Body $body = 1;
    string attributeSetId = 2;
}

message GetV1ProductsAttributesRequest {
    // Current page.
    int32 searchCriteria[currentPage] = 1;
    // Condition type
    string searchCriteria[filterGroups][][filters][][conditionType] = 2;
    // Field
    string searchCriteria[filterGroups][][filters][][field] = 3;
    // Value
    string searchCriteria[filterGroups][][filters][][value] = 4;
    // Page size.
    int32 searchCriteria[pageSize] = 5;
    // Sorting direction.
    string searchCriteria[sortOrders][][direction] = 6;
    // Sorting field.
    string searchCriteria[sortOrders][][field] = 7;
}

message PostV1ProductsAttributesRequest {
    message $Body {
        catalog-data-product-attribute-interface attribute = 1;
    }
    $Body $body = 1;
}

message GetV1ProductsAttributesTypesResponse {
    repeated catalog-data-product-attribute-type-interface items = 1;
}

message GetV1ProductsAttributesAttributeCodeRequest {
    string attributeCode = 1;
}

message PutV1ProductsAttributesAttributeCodeRequest {
    message $Body {
        catalog-data-product-attribute-interface attribute = 1;
    }
    $Body $body = 1;
    string attributeCode = 2;
}

message DeleteV1ProductsAttributesAttributeCodeRequest {
    string attributeCode = 1;
}

message GetV1ProductsAttributesAttributeCodeOptionsRequest {
    string attributeCode = 1;
}

message GetV1ProductsAttributesAttributeCodeOptionsResponse {
    repeated eav-data-attribute-option-interface items = 1;
}

message PostV1ProductsAttributesAttributeCodeOptionsRequest {
    message $Body {
        eav-data-attribute-option-interface option = 1;
    }
    $Body $body = 1;
    string attributeCode = 2;
}

message DeleteV1ProductsAttributesAttributeCodeOptionsOptionIdRequest {
    string attributeCode = 1;
    string optionId = 2;
}

message DeleteV1ProductsDownloadableLinksSamplesIdRequest {
    int32 id = 1;
}

message DeleteV1ProductsDownloadableLinksIdRequest {
    int32 id = 1;
}

message GetV1ProductsLinksTypesResponse {
    repeated catalog-data-product-link-type-interface items = 1;
}

message GetV1ProductsLinksTypeAttributesRequest {
    string type = 1;
}

message GetV1ProductsLinksTypeAttributesResponse {
    repeated catalog-data-product-link-attribute-interface items = 1;
}

message GetV1ProductsMediaTypesAttributeSetNameRequest {
    string attributeSetName = 1;
}

message GetV1ProductsMediaTypesAttributeSetNameResponse {
    // list of media attributes
    repeated catalog-data-product-attribute-interface items = 1;
}

message PostV1ProductsOptionsRequest {
    message $Body {
        catalog-data-product-custom-option-interface option = 1;
    }
    $Body $body = 1;
}

message GetV1ProductsOptionsTypesResponse {
    repeated catalog-data-product-custom-option-type-interface items = 1;
}

message PutV1ProductsOptionsOptionIdRequest {
    message $Body {
        catalog-data-product-custom-option-interface option = 1;
    }
    $Body $body = 1;
    string optionId = 2;
}

message GetV1ProductsTypesResponse {
    repeated catalog-data-product-type-interface items = 1;
}

message PutV1ProductsProductSkuStockItemsItemIdRequest {
    message $Body {
        catalog-inventory-data-stock-item-interface stockItem = 1;
    }
    $Body $body = 1;
    string itemId = 2;
    string productSku = 3;
}

message GetV1ProductsSkuRequest {
    bool editMode = 1;
    bool forceReload = 2;
    string sku = 3;
    int32 storeId = 4;
}

message PutV1ProductsSkuRequest {
    message $Body {
        catalog-data-product-interface product = 1;
        bool saveOptions = 2;
    }
    $Body $body = 1;
    string sku = 2;
}

message DeleteV1ProductsSkuRequest {
    string sku = 1;
}

message GetV1ProductsSkuDownloadableLinksRequest {
    string sku = 1;
}

message GetV1ProductsSkuDownloadableLinksResponse {
    repeated downloadable-data-link-interface items = 1;
}

message PostV1ProductsSkuDownloadableLinksRequest {
    message $Body {
        bool isGlobalScopeContent = 1;
        downloadable-data-link-interface link = 2;
    }
    $Body $body = 1;
    string sku = 2;
}

message GetV1ProductsSkuDownloadableLinksSamplesRequest {
    string sku = 1;
}

message GetV1ProductsSkuDownloadableLinksSamplesResponse {
    repeated downloadable-data-sample-interface items = 1;
}

message PostV1ProductsSkuDownloadableLinksSamplesRequest {
    message $Body {
        bool isGlobalScopeContent = 1;
        downloadable-data-sample-interface sample = 2;
    }
    $Body $body = 1;
    string sku = 2;
}

message PutV1ProductsSkuDownloadableLinksSamplesIdRequest {
    message $Body {
        bool isGlobalScopeContent = 1;
        downloadable-data-sample-interface sample = 2;
    }
    $Body $body = 1;
    string id = 2;
    string sku = 3;
}

message PutV1ProductsSkuDownloadableLinksIdRequest {
    message $Body {
        bool isGlobalScopeContent = 1;
        downloadable-data-link-interface link = 2;
    }
    $Body $body = 1;
    string id = 2;
    string sku = 3;
}

message GetV1ProductsSkuGroupPricesCustomerGroupIdTiersRequest {
    // 'all' can be used to specify 'ALL GROUPS'
    string customerGroupId = 1;
    string sku = 2;
}

message GetV1ProductsSkuGroupPricesCustomerGroupIdTiersResponse {
    repeated catalog-data-product-tier-price-interface items = 1;
}

message DeleteV1ProductsSkuGroupPricesCustomerGroupIdTiersQtyRequest {
    // 'all' can be used to specify 'ALL GROUPS'
    string customerGroupId = 1;
    int32 qty = 2;
    string sku = 3;
}

message PostV1ProductsSkuGroupPricesCustomerGroupIdTiersQtyPricePriceRequest {
    // 'all' can be used to specify 'ALL GROUPS'
    string customerGroupId = 1;
    int32 price = 2;
    int32 qty = 3;
    string sku = 4;
}

message PutV1ProductsSkuLinksRequest {
    message $Body {
        catalog-data-product-link-interface entity = 1;
    }
    $Body $body = 1;
    string sku = 2;
}

message PostV1ProductsSkuLinksRequest {
    message $Body {
        repeated catalog-data-product-link-interface items = 1;
    }
    $Body $body = 1;
    string sku = 2;
}

message GetV1ProductsSkuLinksTypeRequest {
    string sku = 1;
    string type = 2;
}

message GetV1ProductsSkuLinksTypeResponse {
    repeated catalog-data-product-link-interface items = 1;
}

message DeleteV1ProductsSkuLinksTypeLinkedProductSkuRequest {
    string linkedProductSku = 1;
    string sku = 2;
    string type = 3;
}

message GetV1ProductsSkuMediaRequest {
    string sku = 1;
}

message GetV1ProductsSkuMediaResponse {
    repeated catalog-data-product-attribute-media-gallery-entry-interface items = 1;
}

message PostV1ProductsSkuMediaRequest {
    message $Body {
        catalog-data-product-attribute-media-gallery-entry-interface entry = 1;
    }
    $Body $body = 1;
    string sku = 2;
}

message GetV1ProductsSkuMediaEntryIdRequest {
    int32 entryId = 1;
    string sku = 2;
}

message PutV1ProductsSkuMediaEntryIdRequest {
    message $Body {
        catalog-data-product-attribute-media-gallery-entry-interface entry = 1;
    }
    $Body $body = 1;
    string entryId = 2;
    string sku = 3;
}

message DeleteV1ProductsSkuMediaEntryIdRequest {
    int32 entryId = 1;
    string sku = 2;
}

message GetV1ProductsSkuOptionsRequest {
    string sku = 1;
}

message GetV1ProductsSkuOptionsResponse {
    repeated catalog-data-product-custom-option-interface items = 1;
}

message GetV1ProductsSkuOptionsOptionIdRequest {
    int32 optionId = 1;
    string sku = 2;
}

message DeleteV1ProductsSkuOptionsOptionIdRequest {
    int32 optionId = 1;
    string sku = 2;
}

message PutV1ProductsSkuWebsitesRequest {
    message $Body {
        catalog-data-product-website-link-interface productWebsiteLink = 1;
    }
    $Body $body = 1;
    string sku = 2;
}

message PostV1ProductsSkuWebsitesRequest {
    message $Body {
        catalog-data-product-website-link-interface productWebsiteLink = 1;
    }
    $Body $body = 1;
    string sku = 2;
}

message DeleteV1ProductsSkuWebsitesWebsiteIdRequest {
    string sku = 1;
    int32 websiteId = 2;
}

message GetV1ReturnsRequest {
    // Current page.
    int32 searchCriteria[currentPage] = 1;
    // Condition type
    string searchCriteria[filterGroups][][filters][][conditionType] = 2;
    // Field
    string searchCriteria[filterGroups][][filters][][field] = 3;
    // Value
    string searchCriteria[filterGroups][][filters][][value] = 4;
    // Page size.
    int32 searchCriteria[pageSize] = 5;
    // Sorting direction.
    string searchCriteria[sortOrders][][direction] = 6;
    // Sorting field.
    string searchCriteria[sortOrders][][field] = 7;
}

message PostV1ReturnsRequest {
    message $Body {
        rma-data-rma-interface rmaDataObject = 1;
    }
    $Body $body = 1;
}

message GetV1ReturnsIdRequest {
    int32 id = 1;
}

message PutV1ReturnsIdRequest {
    message $Body {
        rma-data-rma-interface rmaDataObject = 1;
    }
    $Body $body = 1;
    string id = 2;
}

message DeleteV1ReturnsIdRequest {
    message $Body {
        rma-data-rma-interface rmaDataObject = 1;
    }
    $Body $body = 1;
    string id = 2;
}

message GetV1ReturnsIdCommentsRequest {
    int32 id = 1;
}

message PostV1ReturnsIdCommentsRequest {
    message $Body {
        rma-data-comment-interface data = 1;
    }
    $Body $body = 1;
    string id = 2;
}

message GetV1ReturnsIdLabelsRequest {
    int32 id = 1;
}

message GetV1ReturnsIdTrackingNumbersRequest {
    int32 id = 1;
}

message PostV1ReturnsIdTrackingNumbersRequest {
    message $Body {
        rma-data-track-interface track = 1;
    }
    $Body $body = 1;
    int32 id = 2;
}

message DeleteV1ReturnsIdTrackingNumbersTrackIdRequest {
    int32 id = 1;
    int32 trackId = 2;
}

message GetV1ReturnsAttributeMetadataResponse {
    repeated customer-data-attribute-metadata-interface items = 1;
}

message GetV1ReturnsAttributeMetadataCustomRequest {
    // Data object class name
    string dataObjectClassName = 1;
}

message GetV1ReturnsAttributeMetadataCustomResponse {
    repeated framework-metadata-object-interface items = 1;
}

message GetV1ReturnsAttributeMetadataFormFormCodeRequest {
    string formCode = 1;
}

message GetV1ReturnsAttributeMetadataFormFormCodeResponse {
    repeated customer-data-attribute-metadata-interface items = 1;
}

message GetV1ReturnsAttributeMetadataAttributeCodeRequest {
    string attributeCode = 1;
}

message PostV1SalesRulesRequest {
    message $Body {
        sales-rule-data-rule-interface rule = 1;
    }
    $Body $body = 1;
}

message GetV1SalesRulesSearchRequest {
    // Current page.
    int32 searchCriteria[currentPage] = 1;
    // Condition type
    string searchCriteria[filterGroups][][filters][][conditionType] = 2;
    // Field
    string searchCriteria[filterGroups][][filters][][field] = 3;
    // Value
    string searchCriteria[filterGroups][][filters][][value] = 4;
    // Page size.
    int32 searchCriteria[pageSize] = 5;
    // Sorting direction.
    string searchCriteria[sortOrders][][direction] = 6;
    // Sorting field.
    string searchCriteria[sortOrders][][field] = 7;
}

message GetV1SalesRulesRuleIdRequest {
    int32 ruleId = 1;
}

message PutV1SalesRulesRuleIdRequest {
    message $Body {
        sales-rule-data-rule-interface rule = 1;
    }
    $Body $body = 1;
    string ruleId = 2;
}

message DeleteV1SalesRulesRuleIdRequest {
    int32 ruleId = 1;
}

message GetV1SearchRequest {
    // Current page.
    int32 searchCriteria[currentPage] = 1;
    // Condition type
    string searchCriteria[filterGroups][][filters][][conditionType] = 2;
    // Field
    string searchCriteria[filterGroups][][filters][][field] = 3;
    // Value
    string searchCriteria[filterGroups][][filters][][value] = 4;
    // Page size.
    int32 searchCriteria[pageSize] = 5;
    string searchCriteria[requestName] = 6;
    // Sorting direction.
    string searchCriteria[sortOrders][][direction] = 7;
    // Sorting field.
    string searchCriteria[sortOrders][][field] = 8;
}

message PostV1ShipmentRequest {
    message $Body {
        sales-data-shipment-interface entity = 1;
    }
    $Body $body = 1;
}

message PostV1ShipmentTrackRequest {
    message $Body {
        sales-data-shipment-track-interface entity = 1;
    }
    $Body $body = 1;
}

message DeleteV1ShipmentTrackIdRequest {
    // The shipment track ID.
    int32 id = 1;
}

message GetV1ShipmentIdRequest {
    // The shipment ID.
    int32 id = 1;
}

message GetV1ShipmentIdCommentsRequest {
    // The shipment ID.
    int32 id = 1;
}

message PostV1ShipmentIdCommentsRequest {
    message $Body {
        sales-data-shipment-comment-interface entity = 1;
    }
    $Body $body = 1;
    string id = 2;
}

message PostV1ShipmentIdEmailsRequest {
    // The shipment ID.
    int32 id = 1;
}

message GetV1ShipmentIdLabelRequest {
    // The shipment label ID.
    int32 id = 1;
}

message GetV1ShipmentsRequest {
    // Current page.
    int32 searchCriteria[currentPage] = 1;
    // Condition type
    string searchCriteria[filterGroups][][filters][][conditionType] = 2;
    // Field
    string searchCriteria[filterGroups][][filters][][field] = 3;
    // Value
    string searchCriteria[filterGroups][][filters][][value] = 4;
    // Page size.
    int32 searchCriteria[pageSize] = 5;
    // Sorting direction.
    string searchCriteria[sortOrders][][direction] = 6;
    // Sorting field.
    string searchCriteria[sortOrders][][field] = 7;
}

message GetV1StockItemsLowStockRequest {
    int32 currentPage = 1;
    int32 pageSize = 2;
    int32 qty = 3;
    int32 scopeId = 4;
}

message GetV1StockItemsProductSkuRequest {
    string productSku = 1;
    int32 scopeId = 2;
}

message GetV1StockStatusesProductSkuRequest {
    string productSku = 1;
    int32 scopeId = 2;
}

message GetV1StoreStoreConfigsRequest {
    repeated string storeCodes = 1;
}

message GetV1StoreStoreConfigsResponse {
    repeated store-data-store-config-interface items = 1;
}

message GetV1StoreStoreGroupsResponse {
    repeated store-data-group-interface items = 1;
}

message GetV1StoreStoreViewsResponse {
    repeated store-data-store-interface items = 1;
}

message GetV1StoreWebsitesResponse {
    repeated store-data-website-interface items = 1;
}

message PostV1TaxClassesRequest {
    message $Body {
        tax-data-tax-class-interface taxClass = 1;
    }
    $Body $body = 1;
}

message GetV1TaxClassesSearchRequest {
    // Current page.
    int32 searchCriteria[currentPage] = 1;
    // Condition type
    string searchCriteria[filterGroups][][filters][][conditionType] = 2;
    // Field
    string searchCriteria[filterGroups][][filters][][field] = 3;
    // Value
    string searchCriteria[filterGroups][][filters][][value] = 4;
    // Page size.
    int32 searchCriteria[pageSize] = 5;
    // Sorting direction.
    string searchCriteria[sortOrders][][direction] = 6;
    // Sorting field.
    string searchCriteria[sortOrders][][field] = 7;
}

message PutV1TaxClassesClassIdRequest {
    message $Body {
        tax-data-tax-class-interface taxClass = 1;
    }
    $Body $body = 1;
    string classId = 2;
}

message GetV1TaxClassesTaxClassIdRequest {
    int32 taxClassId = 1;
}

message DeleteV1TaxClassesTaxClassIdRequest {
    int32 taxClassId = 1;
}

message PutV1TaxRatesRequest {
    message $Body {
        tax-data-tax-rate-interface taxRate = 1;
    }
    $Body $body = 1;
}

message PostV1TaxRatesRequest {
    message $Body {
        tax-data-tax-rate-interface taxRate = 1;
    }
    $Body $body = 1;
}

message GetV1TaxRatesSearchRequest {
    // Current page.
    int32 searchCriteria[currentPage] = 1;
    // Condition type
    string searchCriteria[filterGroups][][filters][][conditionType] = 2;
    // Field
    string searchCriteria[filterGroups][][filters][][field] = 3;
    // Value
    string searchCriteria[filterGroups][][filters][][value] = 4;
    // Page size.
    int32 searchCriteria[pageSize] = 5;
    // Sorting direction.
    string searchCriteria[sortOrders][][direction] = 6;
    // Sorting field.
    string searchCriteria[sortOrders][][field] = 7;
}

message GetV1TaxRatesRateIdRequest {
    int32 rateId = 1;
}

message DeleteV1TaxRatesRateIdRequest {
    int32 rateId = 1;
}

message PutV1TaxRulesRequest {
    message $Body {
        tax-data-tax-rule-interface rule = 1;
    }
    $Body $body = 1;
}

message PostV1TaxRulesRequest {
    message $Body {
        tax-data-tax-rule-interface rule = 1;
    }
    $Body $body = 1;
}

message GetV1TaxRulesSearchRequest {
    // Current page.
    int32 searchCriteria[currentPage] = 1;
    // Condition type
    string searchCriteria[filterGroups][][filters][][conditionType] = 2;
    // Field
    string searchCriteria[filterGroups][][filters][][field] = 3;
    // Value
    string searchCriteria[filterGroups][][filters][][value] = 4;
    // Page size.
    int32 searchCriteria[pageSize] = 5;
    // Sorting direction.
    string searchCriteria[sortOrders][][direction] = 6;
    // Sorting field.
    string searchCriteria[sortOrders][][field] = 7;
}

message GetV1TaxRulesRuleIdRequest {
    int32 ruleId = 1;
}

message DeleteV1TaxRulesRuleIdRequest {
    int32 ruleId = 1;
}

message GetV1TransactionsRequest {
    // Current page.
    int32 searchCriteria[currentPage] = 1;
    // Condition type
    string searchCriteria[filterGroups][][filters][][conditionType] = 2;
    // Field
    string searchCriteria[filterGroups][][filters][][field] = 3;
    // Value
    string searchCriteria[filterGroups][][filters][][value] = 4;
    // Page size.
    int32 searchCriteria[pageSize] = 5;
    // Sorting direction.
    string searchCriteria[sortOrders][][direction] = 6;
    // Sorting field.
    string searchCriteria[sortOrders][][field] = 7;
}

message GetV1TransactionsIdRequest {
    // The transaction ID.
    int32 id = 1;
}

message PostV1WorldpayGuestCartsCartIdPaymentInformationRequest {
    message $Body {
        quote-data-address-interface billingAddress = 1;
        string email = 2;
        quote-data-payment-interface paymentMethod = 3;
    }
    $Body $body = 1;
    string cartId = 2;
}

message Bundle_data_bundle_option_extension_interface {
}

message Bundle_data_bundle_option_interface {
    bundle-data-bundle-option-extension-interface extension_attributes = 1;
    // Bundle option id.
    int32 option_id = 2;
    // Bundle option quantity.
    int32 option_qty = 3;
    // Bundle option selection ids.
    repeated int32 option_selections = 4;
}

message Bundle_data_link_extension_interface {
}

message Bundle_data_link_interface {
    // Whether quantity could be changed
    int32 can_change_quantity = 1;
    bundle-data-link-extension-interface extension_attributes = 2;
    // The identifier
    string id = 3;
    // Is default
    bool is_default = 4;
    // Option id
    int32 option_id = 5;
    // Position
    int32 position = 6;
    // Price
    int32 price = 7;
    // Price type
    int32 price_type = 8;
    // Qty
    int32 qty = 9;
    // Linked product sku
    string sku = 10;
}

message Bundle_data_option_extension_interface {
}

message Bundle_data_option_interface {
    bundle-data-option-extension-interface extension_attributes = 1;
    // Option id
    int32 option_id = 2;
    // Option position
    int32 position = 3;
    // Product links
    repeated bundle-data-link-interface product_links = 4;
    // Is required option
    bool required = 5;
    // Product sku
    string sku = 6;
    // Option title
    string title = 7;
    // Input type
    string type = 8;
}

message Bundle_data_option_type_extension_interface {
}

message Bundle_data_option_type_interface {
    // Type code
    string code = 1;
    bundle-data-option-type-extension-interface extension_attributes = 2;
    // Type label
    string label = 3;
}

message Catalog_data_category_attribute_interface {
    // Apply to value for the element
    repeated string apply_to = 1;
    // Code of the attribute.
    string attribute_code = 2;
    // Id of the attribute.
    int32 attribute_id = 3;
    // Backend model
    string backend_model = 4;
    // Backend type.
    string backend_type = 5;
    // Custom attributes values.
    repeated framework-attribute-interface custom_attributes = 6;
    // Frontend label for default store
    string default_frontend_label = 7;
    // Default value for the element.
    string default_value = 8;
    // Entity type id
    string entity_type_id = 9;
    catalog-data-eav-attribute-extension-interface extension_attributes = 10;
    // Frontend class of attribute
    string frontend_class = 11;
    // HTML for input element.
    string frontend_input = 12;
    // Frontend label for each store
    repeated eav-data-attribute-frontend-label-interface frontend_labels = 13;
    // The attribute can be compared on the frontend
    string is_comparable = 14;
    // It used in layered navigation
    bool is_filterable = 15;
    // It is filterable in catalog product grid
    bool is_filterable_in_grid = 16;
    // It is used in search results layered navigation
    bool is_filterable_in_search = 17;
    // The HTML tags are allowed on the frontend
    bool is_html_allowed_on_front = 18;
    // Attribute is required.
    bool is_required = 19;
    // The attribute can be used in Quick Search
    string is_searchable = 20;
    // This is a unique attribute
    string is_unique = 21;
    // The attribute can be used for promo rules
    string is_used_for_promo_rules = 22;
    // It is used in catalog product grid
    bool is_used_in_grid = 23;
    // Current attribute has been defined by a user.
    bool is_user_defined = 24;
    // Attribute is visible on frontend.
    bool is_visible = 25;
    // The attribute can be used in Advanced Search
    string is_visible_in_advanced_search = 26;
    // It is visible in catalog product grid
    bool is_visible_in_grid = 27;
    // The attribute is visible on the frontend
    string is_visible_on_front = 28;
    // WYSIWYG flag
    bool is_wysiwyg_enabled = 29;
    // The note attribute for the element.
    string note = 30;
    // Options of the attribute (key => value pairs for select)
    repeated eav-data-attribute-option-interface options = 31;
    // Position
    int32 position = 32;
    // Attribute scope
    string scope = 33;
    // Source model
    string source_model = 34;
    // It is used for sorting in product listing
    bool used_for_sort_by = 35;
    // The attribute can be used in product listing
    string used_in_product_listing = 36;
    // Validation rules.
    repeated eav-data-attribute-validation-rule-interface validation_rules = 37;
}

message Catalog_data_category_attribute_search_results_interface {
    // Attributes list.
    repeated catalog-data-category-attribute-interface items = 1;
    framework-search-criteria-interface search_criteria = 2;
    // Total count.
    int32 total_count = 3;
}

message Catalog_data_category_extension_interface {
}

message Catalog_data_category_interface {
    repeated string available_sort_by = 1;
    string children = 2;
    string created_at = 3;
    // Custom attributes values.
    repeated framework-attribute-interface custom_attributes = 4;
    catalog-data-category-extension-interface extension_attributes = 5;
    int32 id = 6;
    bool include_in_menu = 7;
    // Whether category is active
    bool is_active = 8;
    // Category level
    int32 level = 9;
    // Category name
    string name = 10;
    // Parent category ID
    int32 parent_id = 11;
    string path = 12;
    // Category position
    int32 position = 13;
    string updated_at = 14;
}

message Catalog_data_category_product_link_extension_interface {
}

message Catalog_data_category_product_link_interface {
    // Category id
    string category_id = 1;
    catalog-data-category-product-link-extension-interface extension_attributes = 2;
    int32 position = 3;
    string sku = 4;
}

message Catalog_data_category_tree_interface {
    repeated catalog-data-category-tree-interface children_data = 1;
    int32 id = 2;
    // Whether category is active
    bool is_active = 3;
    // Category level
    int32 level = 4;
    // Category name
    string name = 5;
    // Parent category ID
    int32 parent_id = 6;
    // Category position
    int32 position = 7;
    // Product count
    int32 product_count = 8;
}

message Catalog_data_custom_option_extension_interface {
    framework-data-image-content-interface file_info = 1;
}

message Catalog_data_custom_option_interface {
    catalog-data-custom-option-extension-interface extension_attributes = 1;
    // Option id
    string option_id = 2;
    // Option value
    string option_value = 3;
}

message Catalog_data_eav_attribute_extension_interface {
}

message Catalog_data_product_attribute_interface {
    // Apply to value for the element
    repeated string apply_to = 1;
    // Code of the attribute.
    string attribute_code = 2;
    // Id of the attribute.
    int32 attribute_id = 3;
    // Backend model
    string backend_model = 4;
    // Backend type.
    string backend_type = 5;
    // Custom attributes values.
    repeated framework-attribute-interface custom_attributes = 6;
    // Frontend label for default store
    string default_frontend_label = 7;
    // Default value for the element.
    string default_value = 8;
    // Entity type id
    string entity_type_id = 9;
    catalog-data-eav-attribute-extension-interface extension_attributes = 10;
    // Frontend class of attribute
    string frontend_class = 11;
    // HTML for input element.
    string frontend_input = 12;
    // Frontend label for each store
    repeated eav-data-attribute-frontend-label-interface frontend_labels = 13;
    // The attribute can be compared on the frontend
    string is_comparable = 14;
    // It used in layered navigation
    bool is_filterable = 15;
    // It is filterable in catalog product grid
    bool is_filterable_in_grid = 16;
    // It is used in search results layered navigation
    bool is_filterable_in_search = 17;
    // The HTML tags are allowed on the frontend
    bool is_html_allowed_on_front = 18;
    // Attribute is required.
    bool is_required = 19;
    // The attribute can be used in Quick Search
    string is_searchable = 20;
    // This is a unique attribute
    string is_unique = 21;
    // The attribute can be used for promo rules
    string is_used_for_promo_rules = 22;
    // It is used in catalog product grid
    bool is_used_in_grid = 23;
    // Current attribute has been defined by a user.
    bool is_user_defined = 24;
    // Attribute is visible on frontend.
    bool is_visible = 25;
    // The attribute can be used in Advanced Search
    string is_visible_in_advanced_search = 26;
    // It is visible in catalog product grid
    bool is_visible_in_grid = 27;
    // The attribute is visible on the frontend
    string is_visible_on_front = 28;
    // WYSIWYG flag
    bool is_wysiwyg_enabled = 29;
    // The note attribute for the element.
    string note = 30;
    // Options of the attribute (key => value pairs for select)
    repeated eav-data-attribute-option-interface options = 31;
    // Position
    int32 position = 32;
    // Attribute scope
    string scope = 33;
    // Source model
    string source_model = 34;
    // It is used for sorting in product listing
    bool used_for_sort_by = 35;
    // The attribute can be used in product listing
    string used_in_product_listing = 36;
    // Validation rules.
    repeated eav-data-attribute-validation-rule-interface validation_rules = 37;
}

message Catalog_data_product_attribute_media_gallery_entry_extension_interface {
    framework-data-video-content-interface video_content = 1;
}

message Catalog_data_product_attribute_media_gallery_entry_interface {
    framework-data-image-content-interface content = 1;
    // If gallery entry is hidden from product page
    bool disabled = 2;
    catalog-data-product-attribute-media-gallery-entry-extension-interface extension_attributes = 3;
    // File path
    string file = 4;
    // Gallery entry ID
    int32 id = 5;
    // Gallery entry alternative text
    string label = 6;
    // Media type
    string media_type = 7;
    // Gallery entry position (sort order)
    int32 position = 8;
    // Gallery entry image types (thumbnail, image, small_image etc)
    repeated string types = 9;
}

message Catalog_data_product_attribute_search_results_interface {
    // Attributes list.
    repeated catalog-data-product-attribute-interface items = 1;
    framework-search-criteria-interface search_criteria = 2;
    // Total count.
    int32 total_count = 3;
}

message Catalog_data_product_attribute_type_extension_interface {
}

message Catalog_data_product_attribute_type_interface {
    catalog-data-product-attribute-type-extension-interface extension_attributes = 1;
    // Type label
    string label = 2;
    // Value
    string value = 3;
}

message Catalog_data_product_custom_option_extension_interface {
}

message Catalog_data_product_custom_option_interface {
    catalog-data-product-custom-option-extension-interface extension_attributes = 1;
    string file_extension = 2;
    int32 image_size_x = 3;
    int32 image_size_y = 4;
    // Is require
    bool is_require = 5;
    int32 max_characters = 6;
    // Option id
    int32 option_id = 7;
    // Price
    int32 price = 8;
    // Price type
    string price_type = 9;
    // Product SKU
    string product_sku = 10;
    // Sku
    string sku = 11;
    // Sort order
    int32 sort_order = 12;
    // Option title
    string title = 13;
    // Option type
    string type = 14;
    repeated catalog-data-product-custom-option-values-interface values = 15;
}

message Catalog_data_product_custom_option_type_extension_interface {
}

message Catalog_data_product_custom_option_type_interface {
    // Option type code
    string code = 1;
    catalog-data-product-custom-option-type-extension-interface extension_attributes = 2;
    // Option type group
    string group = 3;
    // Option type label
    string label = 4;
}

message Catalog_data_product_custom_option_values_interface {
    // Option type id
    int32 option_type_id = 1;
    // Price
    int32 price = 2;
    // Price type
    string price_type = 3;
    // Sku
    string sku = 4;
    // Sort order
    int32 sort_order = 5;
    // Option title
    string title = 6;
}

message Catalog_data_product_extension_interface {
    repeated bundle-data-option-interface bundle_product_options = 1;
    repeated int32 configurable_product_links = 2;
    repeated configurable-product-data-option-interface configurable_product_options = 3;
    repeated downloadable-data-link-interface downloadable_product_links = 4;
    repeated downloadable-data-sample-interface downloadable_product_samples = 5;
    repeated gift-card-data-giftcard-amount-interface giftcard_amounts = 6;
    catalog-inventory-data-stock-item-interface stock_item = 7;
}

message Catalog_data_product_interface {
    // Attribute set id
    int32 attribute_set_id = 1;
    // Created date
    string created_at = 2;
    // Custom attributes values.
    repeated framework-attribute-interface custom_attributes = 3;
    catalog-data-product-extension-interface extension_attributes = 4;
    // Id
    int32 id = 5;
    // Media gallery entries
    repeated catalog-data-product-attribute-media-gallery-entry-interface media_gallery_entries = 6;
    // Name
    string name = 7;
    // List of product options
    repeated catalog-data-product-custom-option-interface options = 8;
    // Price
    int32 price = 9;
    // Product links info
    repeated catalog-data-product-link-interface product_links = 10;
    // Sku
    string sku = 11;
    // Status
    int32 status = 12;
    // List of product tier prices
    repeated catalog-data-product-tier-price-interface tier_prices = 13;
    // Type id
    string type_id = 14;
    // Updated date
    string updated_at = 15;
    // Visibility
    int32 visibility = 16;
    // Weight
    int32 weight = 17;
}

message Catalog_data_product_link_attribute_extension_interface {
}

message Catalog_data_product_link_attribute_interface {
    // Attribute code
    string code = 1;
    catalog-data-product-link-attribute-extension-interface extension_attributes = 2;
    // Attribute type
    string type = 3;
}

message Catalog_data_product_link_extension_interface {
    int32 qty = 1;
}

message Catalog_data_product_link_interface {
    catalog-data-product-link-extension-interface extension_attributes = 1;
    // Link type
    string link_type = 2;
    // Linked product sku
    string linked_product_sku = 3;
    // Linked product type (simple, virtual, etc)
    string linked_product_type = 4;
    // Linked item position
    int32 position = 5;
    // SKU
    string sku = 6;
}

message Catalog_data_product_link_type_extension_interface {
}

message Catalog_data_product_link_type_interface {
    // Link type code
    int32 code = 1;
    catalog-data-product-link-type-extension-interface extension_attributes = 2;
    // Link type name
    string name = 3;
}

message Catalog_data_product_option_extension_interface {
    repeated bundle-data-bundle-option-interface bundle_options = 1;
    repeated configurable-product-data-configurable-item-option-value-interface configurable_item_options = 2;
    repeated catalog-data-custom-option-interface custom_options = 3;
    downloadable-data-downloadable-option-interface downloadable_option = 4;
    gift-card-data-gift-card-option-interface giftcard_item_option = 5;
}

message Catalog_data_product_option_interface {
    catalog-data-product-option-extension-interface extension_attributes = 1;
}

message Catalog_data_product_search_results_interface {
    // Attributes list.
    repeated catalog-data-product-interface items = 1;
    framework-search-criteria-interface search_criteria = 2;
    // Total count.
    int32 total_count = 3;
}

message Catalog_data_product_tier_price_extension_interface {
}

message Catalog_data_product_tier_price_interface {
    // Customer group id
    int32 customer_group_id = 1;
    catalog-data-product-tier-price-extension-interface extension_attributes = 2;
    // Tier qty
    int32 qty = 3;
    // Price value
    int32 value = 4;
}

message Catalog_data_product_type_extension_interface {
}

message Catalog_data_product_type_interface {
    catalog-data-product-type-extension-interface extension_attributes = 1;
    // Product type label
    string label = 2;
    // Product type code
    string name = 3;
}

message Catalog_data_product_website_link_interface {
    string sku = 1;
    // Website ids
    int32 website_id = 2;
}

message Catalog_inventory_data_stock_item_extension_interface {
}

message Catalog_inventory_data_stock_item_interface {
    // Backorders status
    int32 backorders = 1;
    // Whether Quantity Increments is enabled
    bool enable_qty_increments = 2;
    catalog-inventory-data-stock-item-extension-interface extension_attributes = 3;
    bool is_decimal_divided = 4;
    // Stock Availability
    bool is_in_stock = 5;
    bool is_qty_decimal = 6;
    int32 item_id = 7;
    string low_stock_date = 8;
    // Can Manage Stock
    bool manage_stock = 9;
    // Maximum Qty Allowed in Shopping Cart data wrapper
    int32 max_sale_qty = 10;
    // Minimal quantity available for item status in stock
    int32 min_qty = 11;
    // Minimum Qty Allowed in Shopping Cart or NULL when there is no limitation
    int32 min_sale_qty = 12;
    // Notify for Quantity Below data wrapper
    int32 notify_stock_qty = 13;
    int32 product_id = 14;
    int32 qty = 15;
    // Quantity Increments data wrapper
    int32 qty_increments = 16;
    bool show_default_notification_message = 17;
    // Stock identifier
    int32 stock_id = 18;
    int32 stock_status_changed_auto = 19;
    bool use_config_backorders = 20;
    bool use_config_enable_qty_inc = 21;
    bool use_config_manage_stock = 22;
    bool use_config_max_sale_qty = 23;
    bool use_config_min_qty = 24;
    int32 use_config_min_sale_qty = 25;
    bool use_config_notify_stock_qty = 26;
    bool use_config_qty_increments = 27;
}

message Catalog_inventory_data_stock_status_collection_interface {
    // Items
    repeated catalog-inventory-data-stock-status-interface items = 1;
    catalog-inventory-stock-status-criteria-interface search_criteria = 2;
    // Total count.
    int32 total_count = 3;
}

message Catalog_inventory_data_stock_status_extension_interface {
}

message Catalog_inventory_data_stock_status_interface {
    catalog-inventory-data-stock-status-extension-interface extension_attributes = 1;
    int32 product_id = 2;
    int32 qty = 3;
    int32 stock_id = 4;
    catalog-inventory-data-stock-item-interface stock_item = 5;
    int32 stock_status = 6;
}

message Catalog_inventory_stock_status_criteria_interface {
    // Criteria objects added to current Composite Criteria
    repeated framework-criteria-interface criteria_list = 1;
    // List of filters
    repeated string filters = 2;
    // Limit
    repeated string limit = 3;
    // Associated Mapper Interface name
    string mapper_interface_name = 4;
    // Ordering criteria
    repeated string orders = 5;
}

message Checkout_agreements_data_agreement_extension_interface {
}

message Checkout_agreements_data_agreement_interface {
    // Agreement ID.
    int32 agreement_id = 1;
    // Agreement checkbox text.
    string checkbox_text = 2;
    // Agreement content.
    string content = 3;
    // Agreement content height. Otherwise, null.
    string content_height = 4;
    checkout-agreements-data-agreement-extension-interface extension_attributes = 5;
    // Agreement status.
    bool is_active = 6;
    // * true - HTML. * false - plain text.
    bool is_html = 7;
    // The agreement applied mode.
    int32 mode = 8;
    // Agreement name.
    string name = 9;
}

message Checkout_data_payment_details_extension_interface {
}

message Checkout_data_payment_details_interface {
    checkout-data-payment-details-extension-interface extension_attributes = 1;
    repeated quote-data-payment-method-interface payment_methods = 2;
    quote-data-totals-interface totals = 3;
}

message Checkout_data_shipping_information_extension_interface {
}

message Checkout_data_shipping_information_interface {
    quote-data-address-interface billing_address = 1;
    // Custom attributes values.
    repeated framework-attribute-interface custom_attributes = 2;
    checkout-data-shipping-information-extension-interface extension_attributes = 3;
    quote-data-address-interface shipping_address = 4;
    // Carrier code
    string shipping_carrier_code = 5;
    // Shipping method code
    string shipping_method_code = 6;
}

message Checkout_data_totals_information_extension_interface {
}

message Checkout_data_totals_information_interface {
    quote-data-address-interface address = 1;
    // Custom attributes values.
    repeated framework-attribute-interface custom_attributes = 2;
    checkout-data-totals-information-extension-interface extension_attributes = 3;
    // Carrier code
    string shipping_carrier_code = 4;
    // Shipping method code
    string shipping_method_code = 5;
}

message Cms_data_block_interface {
    // Active
    bool active = 1;
    // Content
    string content = 2;
    // Creation time
    string creation_time = 3;
    // ID
    int32 id = 4;
    // Identifier
    string identifier = 5;
    // Title
    string title = 6;
    // Update time
    string update_time = 7;
}

message Cms_data_block_search_results_interface {
    // Blocks list.
    repeated cms-data-block-interface items = 1;
    framework-search-criteria-interface search_criteria = 2;
    // Total count.
    int32 total_count = 3;
}

message Cms_data_page_interface {
    // Active
    bool active = 1;
    // Content
    string content = 2;
    // Content heading
    string content_heading = 3;
    // Creation time
    string creation_time = 4;
    // Custom layout update xml
    string custom_layout_update_xml = 5;
    // Custom root template
    string custom_root_template = 6;
    // Custom theme
    string custom_theme = 7;
    // Custom theme from
    string custom_theme_from = 8;
    // Custom theme to
    string custom_theme_to = 9;
    // ID
    int32 id = 10;
    // Identifier
    string identifier = 11;
    // Layout update xml
    string layout_update_xml = 12;
    // Meta description
    string meta_description = 13;
    // Meta keywords
    string meta_keywords = 14;
    // Meta title
    string meta_title = 15;
    // Page layout
    string page_layout = 16;
    // Sort order
    string sort_order = 17;
    // Title
    string title = 18;
    // Update time
    string update_time = 19;
}

message Cms_data_page_search_results_interface {
    // Pages list.
    repeated cms-data-page-interface items = 1;
    framework-search-criteria-interface search_criteria = 2;
    // Total count.
    int32 total_count = 3;
}

message Configurable_product_data_configurable_item_option_value_extension_interface {
}

message Configurable_product_data_configurable_item_option_value_interface {
    configurable-product-data-configurable-item-option-value-extension-interface extension_attributes = 1;
    // Option SKU
    string option_id = 2;
    // Item id
    int32 option_value = 3;
}

message Configurable_product_data_option_extension_interface {
}

message Configurable_product_data_option_interface {
    string attribute_id = 1;
    configurable-product-data-option-extension-interface extension_attributes = 2;
    int32 id = 3;
    bool is_use_default = 4;
    string label = 5;
    int32 position = 6;
    int32 product_id = 7;
    repeated configurable-product-data-option-value-interface values = 8;
}

message Configurable_product_data_option_value_extension_interface {
}

message Configurable_product_data_option_value_interface {
    configurable-product-data-option-value-extension-interface extension_attributes = 1;
    int32 value_index = 2;
}

message Customer_data_address_extension_interface {
}

message Customer_data_address_interface {
    // City name
    string city = 1;
    // Company
    string company = 2;
    // Country code in ISO_3166-2 format
    string country_id = 3;
    // Custom attributes values.
    repeated framework-attribute-interface custom_attributes = 4;
    // Customer ID
    int32 customer_id = 5;
    // If this address is default billing address
    bool default_billing = 6;
    // If this address is default shipping address.
    bool default_shipping = 7;
    customer-data-address-extension-interface extension_attributes = 8;
    // Fax number
    string fax = 9;
    // First name
    string firstname = 10;
    // ID
    int32 id = 11;
    // Last name
    string lastname = 12;
    // Middle name
    string middlename = 13;
    // Postcode
    string postcode = 14;
    // Prefix
    string prefix = 15;
    customer-data-region-interface region = 16;
    // Region ID
    int32 region_id = 17;
    // Street
    repeated string street = 18;
    // Suffix
    string suffix = 19;
    // Telephone number
    string telephone = 20;
    // Vat id
    string vat_id = 21;
}

message Customer_data_attribute_metadata_interface {
    // Code of the attribute.
    string attribute_code = 1;
    // Backend type.
    string backend_type = 2;
    // Data model for attribute.
    string data_model = 3;
    // Class which is used to display the attribute on frontend.
    string frontend_class = 4;
    // HTML for input element.
    string frontend_input = 5;
    // Label which supposed to be displayed on frontend.
    string frontend_label = 6;
    // Template used for input (e.g. "date")
    string input_filter = 7;
    // It is filterable in customer grid
    bool is_filterable_in_grid = 8;
    // It is searchable in customer grid
    bool is_searchable_in_grid = 9;
    // It is used in customer grid
    bool is_used_in_grid = 10;
    // It is visible in customer grid
    bool is_visible_in_grid = 11;
    // Of lines of the attribute value.
    int32 multiline_count = 12;
    // The note attribute for the element.
    string note = 13;
    // Options of the attribute (key => value pairs for select)
    repeated customer-data-option-interface options = 14;
    // Attribute is required.
    bool required = 15;
    // Attributes sort order.
    int32 sort_order = 16;
    // Label of the store.
    string store_label = 17;
    // This is a system attribute.
    bool system = 18;
    // Current attribute has been defined by a user.
    bool user_defined = 19;
    // Validation rules.
    repeated customer-data-validation-rule-interface validation_rules = 20;
    // Attribute is visible on frontend.
    bool visible = 21;
}

message Customer_data_customer_extension_interface {
    bool is_subscribed = 1;
}

message Customer_data_customer_interface {
    // Customer addresses.
    repeated customer-data-address-interface addresses = 1;
    // Confirmation
    string confirmation = 2;
    // Created at time
    string created_at = 3;
    // Created in area
    string created_in = 4;
    // Custom attributes values.
    repeated framework-attribute-interface custom_attributes = 5;
    // Default billing address id
    string default_billing = 6;
    // Default shipping address id
    string default_shipping = 7;
    // Disable auto group change flag.
    int32 disable_auto_group_change = 8;
    // Date of birth
    string dob = 9;
    // Email address
    string email = 10;
    customer-data-customer-extension-interface extension_attributes = 11;
    // First name
    string firstname = 12;
    // Gender
    int32 gender = 13;
    // Group id
    int32 group_id = 14;
    // Customer id
    int32 id = 15;
    // Last name
    string lastname = 16;
    // Middle name
    string middlename = 17;
    // Prefix
    string prefix = 18;
    // Store id
    int32 store_id = 19;
    // Suffix
    string suffix = 20;
    // Tax Vat
    string taxvat = 21;
    // Updated at time
    string updated_at = 22;
    // Website id
    int32 website_id = 23;
}

message Customer_data_customer_search_results_interface {
    // Customers list.
    repeated customer-data-customer-interface items = 1;
    framework-search-criteria-interface search_criteria = 2;
    // Total count.
    int32 total_count = 3;
}

message Customer_data_group_extension_interface {
}

message Customer_data_group_interface {
    // Code
    string code = 1;
    customer-data-group-extension-interface extension_attributes = 2;
    // Id
    int32 id = 3;
    // Tax class id
    int32 tax_class_id = 4;
    // Tax class name
    string tax_class_name = 5;
}

message Customer_data_group_search_results_interface {
    // Customer groups list.
    repeated customer-data-group-interface items = 1;
    framework-search-criteria-interface search_criteria = 2;
    // Total count.
    int32 total_count = 3;
}

message Customer_data_option_interface {
    // Option label
    string label = 1;
    // Nested options
    repeated customer-data-option-interface options = 2;
    // Option value
    string value = 3;
}

message Customer_data_region_extension_interface {
}

message Customer_data_region_interface {
    customer-data-region-extension-interface extension_attributes = 1;
    // Region
    string region = 2;
    // Region code
    string region_code = 3;
    // Region id
    int32 region_id = 4;
}

message Customer_data_validation_results_interface {
    // Error messages as array in case of validation failure, else return empty array.
    repeated string messages = 1;
    // If the provided data is valid.
    bool valid = 2;
}

message Customer_data_validation_rule_interface {
    // Validation rule name
    string name = 1;
    // Validation rule value
    string value = 2;
}

message Directory_data_country_information_extension_interface {
}

message Directory_data_country_information_interface {
    // The available regions for the store.
    repeated directory-data-region-information-interface available_regions = 1;
    directory-data-country-information-extension-interface extension_attributes = 2;
    // The country full name (in English) for the store.
    string full_name_english = 3;
    // The country full name (in store locale) for the store.
    string full_name_locale = 4;
    // The country id for the store.
    string id = 5;
    // The country 3 letter abbreviation for the store.
    string three_letter_abbreviation = 6;
    // The country 2 letter abbreviation for the store.
    string two_letter_abbreviation = 7;
}

message Directory_data_currency_information_extension_interface {
}

message Directory_data_currency_information_interface {
    // The list of allowed currency codes for the store.
    repeated string available_currency_codes = 1;
    // The base currency code for the store.
    string base_currency_code = 2;
    // The currency symbol of the base currency for the store.
    string base_currency_symbol = 3;
    // The default display currency code for the store.
    string default_display_currency_code = 4;
    // The currency symbol of the default display currency for the store.
    string default_display_currency_symbol = 5;
    // The list of exchange rate information for the store.
    repeated directory-data-exchange-rate-interface exchange_rates = 6;
    directory-data-currency-information-extension-interface extension_attributes = 7;
}

message Directory_data_exchange_rate_extension_interface {
}

message Directory_data_exchange_rate_interface {
    // The currency code associated with the exchange rate.
    string currency_to = 1;
    directory-data-exchange-rate-extension-interface extension_attributes = 2;
    // The exchange rate for the associated currency and the store's base currency.
    int32 rate = 3;
}

message Directory_data_region_information_extension_interface {
}

message Directory_data_region_information_interface {
    // Region code
    string code = 1;
    directory-data-region-information-extension-interface extension_attributes = 2;
    // Region id
    string id = 3;
    // Region name
    string name = 4;
}

message Downloadable_data_downloadable_option_interface {
    // The list of downloadable links
    repeated int32 downloadable_links = 1;
}

message Downloadable_data_file_content_extension_interface {
}

message Downloadable_data_file_content_interface {
    downloadable-data-file-content-extension-interface extension_attributes = 1;
    // Data (base64 encoded content)
    string file_data = 2;
    // File name
    string name = 3;
}

message Downloadable_data_link_extension_interface {
}

message Downloadable_data_link_interface {
    downloadable-data-link-extension-interface extension_attributes = 1;
    // Sample(or link) id
    int32 id = 2;
    // Shareable status
    int32 is_shareable = 3;
    // relative file path
    string link_file = 4;
    downloadable-data-file-content-interface link_file_content = 5;
    string link_type = 6;
    // Link url or null when type is 'file'
    string link_url = 7;
    // Of downloads per user
    int32 number_of_downloads = 8;
    // Price
    int32 price = 9;
    // relative file path
    string sample_file = 10;
    downloadable-data-file-content-interface sample_file_content = 11;
    string sample_type = 12;
    // file URL
    string sample_url = 13;
    int32 sort_order = 14;
    string title = 15;
}

message Downloadable_data_sample_extension_interface {
}

message Downloadable_data_sample_interface {
    downloadable-data-sample-extension-interface extension_attributes = 1;
    // Sample(or link) id
    int32 id = 2;
    // relative file path
    string sample_file = 3;
    downloadable-data-file-content-interface sample_file_content = 4;
    string sample_type = 5;
    // file URL
    string sample_url = 6;
    // Order index for sample
    int32 sort_order = 7;
    // Title
    string title = 8;
}

message Eav_data_attribute_frontend_label_interface {
    // Option label
    string label = 1;
    // Store id
    int32 store_id = 2;
}

message Eav_data_attribute_group_extension_interface {
    string attribute_group_code = 1;
    string sort_order = 2;
}

message Eav_data_attribute_group_interface {
    // Id
    string attribute_group_id = 1;
    // Name
    string attribute_group_name = 2;
    // Attribute set id
    int32 attribute_set_id = 3;
    eav-data-attribute-group-extension-interface extension_attributes = 4;
}

message Eav_data_attribute_group_search_results_interface {
    // Attribute sets list.
    repeated eav-data-attribute-group-interface items = 1;
    framework-search-criteria-interface search_criteria = 2;
    // Total count.
    int32 total_count = 3;
}

message Eav_data_attribute_option_interface {
    // Default
    bool is_default = 1;
    // Option label
    string label = 2;
    // Option order
    int32 sort_order = 3;
    // Option label for store scopes
    repeated eav-data-attribute-option-label-interface store_labels = 4;
    // Option value
    string value = 5;
}

message Eav_data_attribute_option_label_interface {
    // Option label
    string label = 1;
    // Store id
    int32 store_id = 2;
}

message Eav_data_attribute_set_extension_interface {
}

message Eav_data_attribute_set_interface {
    // Attribute set ID
    int32 attribute_set_id = 1;
    // Attribute set name
    string attribute_set_name = 2;
    // Attribute set entity type id
    int32 entity_type_id = 3;
    eav-data-attribute-set-extension-interface extension_attributes = 4;
    // Attribute set sort order index
    int32 sort_order = 5;
}

message Eav_data_attribute_set_search_results_interface {
    // Attribute sets list.
    repeated eav-data-attribute-set-interface items = 1;
    framework-search-criteria-interface search_criteria = 2;
    // Total count.
    int32 total_count = 3;
}

message Eav_data_attribute_validation_rule_interface {
    // Object key
    string key = 1;
    // Object value
    string value = 2;
}

repeated error-errors-item error_errors = 1

message Error_errors_item {
    // Error message
    string message = 1;
    array parameters = 2;
}

repeated error-parameters-item error_parameters = 1

message Error_parameters_item {
    // Missing or invalid field name
    string fieldName = 1;
    // Incorrect field value
    string fieldValue = 2;
    // ACL resource
    string resources = 3;
}

message Error_response {
    // Error code
    int32 code = 1;
    array errors = 2;
    // Error message
    string message = 3;
    array parameters = 4;
    // Stack trace
    string trace = 5;
}

message Framework_attribute_interface {
    // Attribute code
    string attribute_code = 1;
    // Attribute value
    string value = 2;
}

message Framework_criteria_interface {
    // Criteria objects added to current Composite Criteria
    repeated framework-criteria-interface criteria_list = 1;
    // List of filters
    repeated string filters = 2;
    // Limit
    repeated string limit = 3;
    // Associated Mapper Interface name
    string mapper_interface_name = 4;
    // Ordering criteria
    repeated string orders = 5;
}

message Framework_data_image_content_interface {
    // Media data (base64 encoded content)
    string base64_encoded_data = 1;
    // Image name
    string name = 2;
    // MIME type
    string type = 3;
}

message Framework_data_video_content_interface {
    // MIME type
    string media_type = 1;
    // Video Description
    string video_description = 2;
    // Metadata
    string video_metadata = 3;
    // Provider
    string video_provider = 4;
    // Title
    string video_title = 5;
    // Video URL
    string video_url = 6;
}

message Framework_filter {
    // Condition type
    string condition_type = 1;
    // Field
    string field = 2;
    // Value
    string value = 3;
}

message Framework_metadata_object_interface {
    // Code of the attribute.
    string attribute_code = 1;
}

message Framework_search_aggregation_interface {
    // Document field names
    repeated string bucket_names = 1;
    // All Document fields
    repeated framework-search-bucket-interface buckets = 2;
}

message Framework_search_aggregation_value_interface {
    // Metrics
    repeated string metrics = 1;
    // Aggregation
    string value = 2;
}

message Framework_search_bucket_interface {
    // Field name
    string name = 1;
    // Field values
    repeated framework-search-aggregation-value-interface values = 2;
}

message Framework_search_criteria_interface {
    // Current page.
    int32 current_page = 1;
    // A list of filter groups.
    repeated framework-search-filter-group filter_groups = 2;
    // Page size.
    int32 page_size = 3;
    // Sort order.
    repeated framework-sort-order sort_orders = 4;
}

message Framework_search_document_interface {
    // Custom attributes values.
    repeated framework-attribute-interface custom_attributes = 1;
    int32 id = 2;
}

message Framework_search_filter_group {
    // A list of filters in this group
    repeated framework-filter filters = 1;
}

message Framework_search_search_criteria_interface {
    // Current page.
    int32 current_page = 1;
    // A list of filter groups.
    repeated framework-search-filter-group filter_groups = 2;
    // Page size.
    int32 page_size = 3;
    string request_name = 4;
    // Sort order.
    repeated framework-sort-order sort_orders = 5;
}

message Framework_search_search_result_interface {
    framework-search-aggregation-interface aggregations = 1;
    repeated framework-search-document-interface items = 2;
    framework-search-search-criteria-interface search_criteria = 3;
    // Total count.
    int32 total_count = 4;
}

message Framework_sort_order {
    // Sorting direction.
    string direction = 1;
    // Sorting field.
    string field = 2;
}

message Gift_card_account_data_gift_card_account_extension_interface {
}

message Gift_card_account_data_gift_card_account_interface {
    // Cards amount in base currency
    int32 base_gift_cards_amount = 1;
    // Cards amount used in base currency
    int32 base_gift_cards_amount_used = 2;
    gift-card-account-data-gift-card-account-extension-interface extension_attributes = 3;
    // Cards codes
    repeated string gift_cards = 4;
    // Cards amount in quote currency
    int32 gift_cards_amount = 5;
    // Cards amount used in quote currency
    int32 gift_cards_amount_used = 6;
}

message Gift_card_data_gift_card_option_extension_interface {
}

message Gift_card_data_gift_card_option_interface {
    // Gift card open amount value.
    int32 custom_giftcard_amount = 1;
    gift-card-data-gift-card-option-extension-interface extension_attributes = 2;
    // Gift card amount.
    string giftcard_amount = 3;
    // Giftcard message.
    string giftcard_message = 4;
    // Gift card recipient email.
    string giftcard_recipient_email = 5;
    // Gift card recipient name.
    string giftcard_recipient_name = 6;
    // Gift card sender email.
    string giftcard_sender_email = 7;
    // Gift card sender name.
    string giftcard_sender_name = 8;
}

message Gift_card_data_giftcard_amount_extension_interface {
}

message Gift_card_data_giftcard_amount_interface {
    int32 attribute_id = 1;
    gift-card-data-giftcard-amount-extension-interface extension_attributes = 2;
    int32 value = 3;
    int32 website_id = 4;
    int32 website_value = 5;
}

message Gift_message_data_message_extension_interface {
    string entity_id = 1;
    string entity_type = 2;
    bool wrapping_add_printed_card = 3;
    bool wrapping_allow_gift_receipt = 4;
    int32 wrapping_id = 5;
}

message Gift_message_data_message_interface {
    // Customer ID. Otherwise, null.
    int32 customer_id = 1;
    gift-message-data-message-extension-interface extension_attributes = 2;
    // Gift message ID. Otherwise, null.
    int32 gift_message_id = 3;
    // Message text.
    string message = 4;
    // Recipient name.
    string recipient = 5;
    // Sender name.
    string sender = 6;
}

message Gift_wrapping_data_wrapping_extension_interface {
}

message Gift_wrapping_data_wrapping_interface {
    string base_currency_code = 1;
    int32 base_price = 2;
    string design = 3;
    gift-wrapping-data-wrapping-extension-interface extension_attributes = 4;
    string image_base64_content = 5;
    string image_name = 6;
    // Wrapping image URL.
    string image_url = 7;
    int32 status = 8;
    repeated int32 website_ids = 9;
    int32 wrapping_id = 10;
}

message Gift_wrapping_data_wrapping_search_results_interface {
    // Items
    repeated gift-wrapping-data-wrapping-interface items = 1;
    framework-search-criteria-interface search_criteria = 2;
    // Total count.
    int32 total_count = 3;
}

message Quote_data_address_extension_interface {
    int32 gift_registry_id = 1;
}

message Quote_data_address_interface {
    // City name
    string city = 1;
    // Company
    string company = 2;
    // Country id
    string country_id = 3;
    // Custom attributes values.
    repeated framework-attribute-interface custom_attributes = 4;
    // Customer address id
    int32 customer_address_id = 5;
    // Customer id
    int32 customer_id = 6;
    // Billing/shipping email
    string email = 7;
    quote-data-address-extension-interface extension_attributes = 8;
    // Fax number
    string fax = 9;
    // First name
    string firstname = 10;
    // Id
    int32 id = 11;
    // Last name
    string lastname = 12;
    // Middle name
    string middlename = 13;
    // Postcode
    string postcode = 14;
    // Prefix
    string prefix = 15;
    // Region name
    string region = 16;
    // Region code
    string region_code = 17;
    // Region id
    int32 region_id = 18;
    // Same as billing flag
    int32 same_as_billing = 19;
    // Save in address book flag
    int32 save_in_address_book = 20;
    // Street
    repeated string street = 21;
    // Suffix
    string suffix = 22;
    // Telephone number
    string telephone = 23;
    // Vat id
    string vat_id = 24;
}

message Quote_data_cart_extension_interface {
    repeated quote-data-shipping-assignment-interface shipping_assignments = 1;
}

message Quote_data_cart_interface {
    quote-data-address-interface billing_address = 1;
    // Cart conversion date and time. Otherwise, null.
    string converted_at = 2;
    // Cart creation date and time. Otherwise, null.
    string created_at = 3;
    quote-data-currency-interface currency = 4;
    customer-data-customer-interface customer = 5;
    // For guest customers, false for logged in customers
    bool customer_is_guest = 6;
    // Notice text
    string customer_note = 7;
    // Customer notification flag
    bool customer_note_notify = 8;
    // Customer tax class ID.
    int32 customer_tax_class_id = 9;
    quote-data-cart-extension-interface extension_attributes = 10;
    // Cart/quote ID.
    int32 id = 11;
    // Active status flag value. Otherwise, null.
    bool is_active = 12;
    // Virtual flag value. Otherwise, null.
    bool is_virtual = 13;
    // Array of items. Otherwise, null.
    repeated quote-data-cart-item-interface items = 14;
    // Number of different items or products in the cart. Otherwise, null.
    int32 items_count = 15;
    // Total quantity of all cart items. Otherwise, null.
    int32 items_qty = 16;
    // Original order ID. Otherwise, null.
    int32 orig_order_id = 17;
    // Reserved order ID. Otherwise, null.
    int32 reserved_order_id = 18;
    // Store identifier
    int32 store_id = 19;
    // Cart last update date and time. Otherwise, null.
    string updated_at = 20;
}

message Quote_data_cart_item_extension_interface {
}

message Quote_data_cart_item_interface {
    quote-data-cart-item-extension-interface extension_attributes = 1;
    // Item ID. Otherwise, null.
    int32 item_id = 2;
    // Product name. Otherwise, null.
    string name = 3;
    // Product price. Otherwise, null.
    int32 price = 4;
    quote-data-product-option-interface product_option = 5;
    // Product type. Otherwise, null.
    string product_type = 6;
    // Product quantity.
    int32 qty = 7;
    // Quote id.
    string quote_id = 8;
    // Product SKU. Otherwise, null.
    string sku = 9;
}

message Quote_data_cart_search_results_interface {
    // Carts list.
    repeated quote-data-cart-interface items = 1;
    framework-search-criteria-interface search_criteria = 2;
    // Total count.
    int32 total_count = 3;
}

message Quote_data_currency_extension_interface {
}

message Quote_data_currency_interface {
    // Base currency code
    string base_currency_code = 1;
    // Base currency to global currency rate
    int32 base_to_global_rate = 2;
    // Base currency to quote currency rate
    int32 base_to_quote_rate = 3;
    quote-data-currency-extension-interface extension_attributes = 4;
    // Global currency code
    string global_currency_code = 5;
    // Quote currency code
    string quote_currency_code = 6;
    // Store currency code
    string store_currency_code = 7;
    // Store currency to base currency rate
    int32 store_to_base_rate = 8;
    // Store currency to quote currency rate
    int32 store_to_quote_rate = 9;
}

message Quote_data_payment_extension_interface {
    repeated string agreement_ids = 1;
}

message Quote_data_payment_interface {
    // Payment additional details
    repeated string additional_data = 1;
    quote-data-payment-extension-interface extension_attributes = 2;
    // Payment method code
    string method = 3;
    // Purchase order number
    string po_number = 4;
}

message Quote_data_payment_method_interface {
    // Payment method code
    string code = 1;
    // Payment method title
    string title = 2;
}

message Quote_data_product_option_extension_interface {
    repeated bundle-data-bundle-option-interface bundle_options = 1;
    repeated configurable-product-data-configurable-item-option-value-interface configurable_item_options = 2;
    repeated catalog-data-custom-option-interface custom_options = 3;
    downloadable-data-downloadable-option-interface downloadable_option = 4;
    gift-card-data-gift-card-option-interface giftcard_item_option = 5;
}

message Quote_data_product_option_interface {
    quote-data-product-option-extension-interface extension_attributes = 1;
}

message Quote_data_shipping_assignment_extension_interface {
}

message Quote_data_shipping_assignment_interface {
    quote-data-shipping-assignment-extension-interface extension_attributes = 1;
    repeated quote-data-cart-item-interface items = 2;
    quote-data-shipping-interface shipping = 3;
}

message Quote_data_shipping_extension_interface {
}

message Quote_data_shipping_interface {
    quote-data-address-interface address = 1;
    quote-data-shipping-extension-interface extension_attributes = 2;
    // Shipping method
    string method = 3;
}

message Quote_data_shipping_method_extension_interface {
}

message Quote_data_shipping_method_interface {
    // Shipping amount in store currency.
    int32 amount = 1;
    // The value of the availability flag for the current shipping method.
    bool available = 2;
    // Shipping amount in base currency.
    int32 base_amount = 3;
    // Shipping carrier code.
    string carrier_code = 4;
    // Shipping carrier title. Otherwise, null.
    string carrier_title = 5;
    // Shipping Error message.
    string error_message = 6;
    quote-data-shipping-method-extension-interface extension_attributes = 7;
    // Shipping method code.
    string method_code = 8;
    // Shipping method title. Otherwise, null.
    string method_title = 9;
    // Shipping price excl tax.
    int32 price_excl_tax = 10;
    // Shipping price incl tax.
    int32 price_incl_tax = 11;
}

message Quote_data_total_segment_extension_interface {
    string gift_cards = 1;
    string gw_add_card = 2;
    string gw_allow_gift_receipt = 3;
    string gw_base_price = 4;
    string gw_base_price_incl_tax = 5;
    string gw_base_tax_amount = 6;
    string gw_card_base_price = 7;
    string gw_card_base_price_incl_tax = 8;
    string gw_card_base_tax_amount = 9;
    string gw_card_price = 10;
    string gw_card_price_incl_tax = 11;
    string gw_card_tax_amount = 12;
    repeated string gw_item_ids = 13;
    string gw_items_base_price = 14;
    string gw_items_base_price_incl_tax = 15;
    string gw_items_base_tax_amount = 16;
    string gw_items_price = 17;
    string gw_items_price_incl_tax = 18;
    string gw_items_tax_amount = 19;
    string gw_order_id = 20;
    string gw_price = 21;
    string gw_price_incl_tax = 22;
    string gw_tax_amount = 23;
    repeated tax-data-grand-total-details-interface tax_grandtotal_details = 24;
}

message Quote_data_total_segment_interface {
    // Display area code.
    string area = 1;
    // Code
    string code = 2;
    quote-data-total-segment-extension-interface extension_attributes = 3;
    // Total title
    string title = 4;
    // Total value
    int32 value = 5;
}

message Quote_data_totals_additional_data_extension_interface {
    repeated gift-message-data-message-interface gift_messages = 1;
}

message Quote_data_totals_additional_data_interface {
    // Custom attributes values.
    repeated framework-attribute-interface custom_attributes = 1;
    quote-data-totals-additional-data-extension-interface extension_attributes = 2;
}

message Quote_data_totals_extension_interface {
    int32 base_customer_balance_amount = 1;
    int32 base_reward_currency_amount = 2;
    int32 customer_balance_amount = 3;
    int32 reward_currency_amount = 4;
    int32 reward_points_balance = 5;
}

message Quote_data_totals_interface {
    // Base currency code
    string base_currency_code = 1;
    // Discount amount in base currency
    int32 base_discount_amount = 2;
    // Grand total in base currency
    int32 base_grand_total = 3;
    // Shipping amount in base currency
    int32 base_shipping_amount = 4;
    // Shipping discount amount in base currency
    int32 base_shipping_discount_amount = 5;
    // Shipping including tax in base currency
    int32 base_shipping_incl_tax = 6;
    // Shipping tax amount in base currency
    int32 base_shipping_tax_amount = 7;
    // Subtotal in base currency
    int32 base_subtotal = 8;
    // Subtotal including tax in base currency
    int32 base_subtotal_incl_tax = 9;
    // Subtotal in base currency with applied discount
    int32 base_subtotal_with_discount = 10;
    // Tax amount in base currency
    int32 base_tax_amount = 11;
    // Applied coupon code
    string coupon_code = 12;
    // Discount amount in quote currency
    int32 discount_amount = 13;
    quote-data-totals-extension-interface extension_attributes = 14;
    // Grand total in quote currency
    int32 grand_total = 15;
    // Totals by items
    repeated quote-data-totals-item-interface items = 16;
    // Items qty
    int32 items_qty = 17;
    // Quote currency code
    string quote_currency_code = 18;
    // Shipping amount in quote currency
    int32 shipping_amount = 19;
    // Shipping discount amount in quote currency
    int32 shipping_discount_amount = 20;
    // Shipping including tax in quote currency
    int32 shipping_incl_tax = 21;
    // Shipping tax amount in quote currency
    int32 shipping_tax_amount = 22;
    // Subtotal in quote currency
    int32 subtotal = 23;
    // Subtotal including tax in quote currency
    int32 subtotal_incl_tax = 24;
    // Subtotal in quote currency with applied discount
    int32 subtotal_with_discount = 25;
    // Tax amount in quote currency
    int32 tax_amount = 26;
    // Dynamically calculated totals
    repeated quote-data-total-segment-interface total_segments = 27;
    // Item weee tax applied amount in quote currency.
    int32 weee_tax_applied_amount = 28;
}

message Quote_data_totals_item_extension_interface {
}

message Quote_data_totals_item_interface {
    // Discount amount in base currency. Otherwise, null.
    int32 base_discount_amount = 1;
    // Item price in base currency.
    int32 base_price = 2;
    // Price including tax in base currency. Otherwise, null.
    int32 base_price_incl_tax = 3;
    // Row total in base currency.
    int32 base_row_total = 4;
    // Row total including tax in base currency. Otherwise, null.
    int32 base_row_total_incl_tax = 5;
    // Tax amount in base currency. Otherwise, null.
    int32 base_tax_amount = 6;
    // Discount amount in quote currency. Otherwise, null.
    int32 discount_amount = 7;
    // Discount percent. Otherwise, null.
    int32 discount_percent = 8;
    quote-data-totals-item-extension-interface extension_attributes = 9;
    // Item id
    int32 item_id = 10;
    // Product name. Otherwise, null.
    string name = 11;
    // Item price in quote currency.
    string options = 12;
    // Item price in quote currency.
    int32 price = 13;
    // Price including tax in quote currency. Otherwise, null.
    int32 price_incl_tax = 14;
    // Item quantity.
    int32 qty = 15;
    // Row total in quote currency.
    int32 row_total = 16;
    // Row total including tax in quote currency. Otherwise, null.
    int32 row_total_incl_tax = 17;
    // Row total with discount in quote currency. Otherwise, null.
    int32 row_total_with_discount = 18;
    // Tax amount in quote currency. Otherwise, null.
    int32 tax_amount = 19;
    // Tax percent. Otherwise, null.
    int32 tax_percent = 20;
    // Item weee tax applied in quote currency.
    string weee_tax_applied = 21;
    // Item weee tax applied amount in quote currency.
    int32 weee_tax_applied_amount = 22;
}

message Rma_data_comment_extension_interface {
}

message Rma_data_comment_interface {
    // Is_admin
    bool admin = 1;
    // Comment
    string comment = 2;
    // Created_at
    string created_at = 3;
    // Custom attributes values.
    repeated framework-attribute-interface custom_attributes = 4;
    // Is_customer_notified
    bool customer_notified = 5;
    // Entity_id
    int32 entity_id = 6;
    rma-data-comment-extension-interface extension_attributes = 7;
    // Rma Id
    int32 rma_entity_id = 8;
    // Status
    string status = 9;
    // Is_visible_on_front
    bool visible_on_front = 10;
}

message Rma_data_comment_search_result_interface {
    // Rma Status History list
    repeated rma-data-comment-interface items = 1;
    framework-search-criteria-interface search_criteria = 2;
    // Total count.
    int32 total_count = 3;
}

message Rma_data_item_extension_interface {
}

message Rma_data_item_interface {
    // Condition
    string condition = 1;
    // Id
    int32 entity_id = 2;
    rma-data-item-extension-interface extension_attributes = 3;
    // Order_item_id
    int32 order_item_id = 4;
    // Qty_approved
    int32 qty_approved = 5;
    // Qty_authorized
    int32 qty_authorized = 6;
    // Qty_requested
    int32 qty_requested = 7;
    // Qty_returned
    int32 qty_returned = 8;
    // Reason
    string reason = 9;
    // Resolution
    string resolution = 10;
    // RMA id
    int32 rma_entity_id = 11;
    // Status
    string status = 12;
}

message Rma_data_rma_extension_interface {
}

message Rma_data_rma_interface {
    // Comments list
    repeated rma-data-comment-interface comments = 1;
    // Custom attributes values.
    repeated framework-attribute-interface custom_attributes = 2;
    // Customer_custom_email
    string customer_custom_email = 3;
    // Customer_id
    int32 customer_id = 4;
    // Date_requested
    string date_requested = 5;
    // Entity_id
    int32 entity_id = 6;
    rma-data-rma-extension-interface extension_attributes = 7;
    // Entity_id
    string increment_id = 8;
    // Items
    repeated rma-data-item-interface items = 9;
    // Order_id
    int32 order_id = 10;
    // Order_increment_id
    string order_increment_id = 11;
    // Status
    string status = 12;
    // Store_id
    int32 store_id = 13;
    // Tracks list
    repeated rma-data-track-interface tracks = 14;
}

message Rma_data_rma_search_result_interface {
    // Rma list
    repeated rma-data-rma-interface items = 1;
    framework-search-criteria-interface search_criteria = 2;
    // Total count.
    int32 total_count = 3;
}

message Rma_data_track_extension_interface {
}

message Rma_data_track_interface {
    // Carrier code
    string carrier_code = 1;
    // Carrier title
    string carrier_title = 2;
    // Entity id
    int32 entity_id = 3;
    rma-data-track-extension-interface extension_attributes = 4;
    // Rma entity id
    int32 rma_entity_id = 5;
    // Track number
    string track_number = 6;
}

message Rma_data_track_search_result_interface {
    // Rma list
    repeated rma-data-track-interface items = 1;
    framework-search-criteria-interface search_criteria = 2;
    // Total count.
    int32 total_count = 3;
}

message Sales_data_creditmemo_comment_creation_extension_interface {
}

message Sales_data_creditmemo_comment_creation_interface {
    // Comment.
    string comment = 1;
    sales-data-creditmemo-comment-creation-extension-interface extension_attributes = 2;
    // Is-visible-on-storefront flag value.
    int32 is_visible_on_front = 3;
}

message Sales_data_creditmemo_comment_extension_interface {
}

message Sales_data_creditmemo_comment_interface {
    // Comment.
    string comment = 1;
    // Created-at timestamp.
    string created_at = 2;
    // Credit memo ID.
    int32 entity_id = 3;
    sales-data-creditmemo-comment-extension-interface extension_attributes = 4;
    // Is-customer-notified flag value.
    int32 is_customer_notified = 5;
    // Is-visible-on-storefront flag value.
    int32 is_visible_on_front = 6;
    // Parent ID.
    int32 parent_id = 7;
}

message Sales_data_creditmemo_comment_search_result_interface {
    // Array of collection items.
    repeated sales-data-creditmemo-comment-interface items = 1;
    framework-search-criteria-interface search_criteria = 2;
    // Total count.
    int32 total_count = 3;
}

message Sales_data_creditmemo_creation_arguments_extension_interface {
    repeated int32 return_to_stock_items = 1;
}

message Sales_data_creditmemo_creation_arguments_interface {
    // Credit memo negative adjustment.
    int32 adjustment_negative = 1;
    // Credit memo positive adjustment.
    int32 adjustment_positive = 2;
    sales-data-creditmemo-creation-arguments-extension-interface extension_attributes = 3;
    // Credit memo shipping amount.
    int32 shipping_amount = 4;
}

message Sales_data_creditmemo_extension_interface {
}

message Sales_data_creditmemo_interface {
    // Credit memo adjustment.
    int32 adjustment = 1;
    // Credit memo negative adjustment.
    int32 adjustment_negative = 2;
    // Credit memo positive adjustment.
    int32 adjustment_positive = 3;
    // Credit memo base adjustment.
    int32 base_adjustment = 4;
    // Credit memo negative base adjustment.
    int32 base_adjustment_negative = 5;
    // Credit memo positive base adjustment.
    int32 base_adjustment_positive = 6;
    // Credit memo base currency code.
    string base_currency_code = 7;
    // Credit memo base discount amount.
    int32 base_discount_amount = 8;
    // Credit memo base discount tax compensation amount.
    int32 base_discount_tax_compensation_amount = 9;
    // Credit memo base grand total.
    int32 base_grand_total = 10;
    // Credit memo base shipping amount.
    int32 base_shipping_amount = 11;
    // Credit memo base shipping discount tax compensation amount.
    int32 base_shipping_discount_tax_compensation_amnt = 12;
    // Credit memo base shipping including tax.
    int32 base_shipping_incl_tax = 13;
    // Credit memo base shipping tax amount.
    int32 base_shipping_tax_amount = 14;
    // Credit memo base subtotal.
    int32 base_subtotal = 15;
    // Credit memo base subtotal including tax.
    int32 base_subtotal_incl_tax = 16;
    // Credit memo base tax amount.
    int32 base_tax_amount = 17;
    // Credit memo base-to-global rate.
    int32 base_to_global_rate = 18;
    // Credit memo base-to-order rate.
    int32 base_to_order_rate = 19;
    // Credit memo billing address ID.
    int32 billing_address_id = 20;
    // Array of any credit memo comments. Otherwise, null.
    repeated sales-data-creditmemo-comment-interface comments = 21;
    // Credit memo created-at timestamp.
    string created_at = 22;
    // Credit memo status.
    int32 creditmemo_status = 23;
    // Credit memo discount amount.
    int32 discount_amount = 24;
    // Credit memo discount description.
    string discount_description = 25;
    // Credit memo discount tax compensation amount.
    int32 discount_tax_compensation_amount = 26;
    // Credit memo email sent flag value.
    int32 email_sent = 27;
    // Credit memo ID.
    int32 entity_id = 28;
    sales-data-creditmemo-extension-interface extension_attributes = 29;
    // Credit memo global currency code.
    string global_currency_code = 30;
    // Credit memo grand total.
    int32 grand_total = 31;
    // Credit memo increment ID.
    string increment_id = 32;
    // Credit memo invoice ID.
    int32 invoice_id = 33;
    // Array of credit memo items.
    repeated sales-data-creditmemo-item-interface items = 34;
    // Credit memo order currency code.
    string order_currency_code = 35;
    // Credit memo order ID.
    int32 order_id = 36;
    // Credit memo shipping address ID.
    int32 shipping_address_id = 37;
    // Credit memo shipping amount.
    int32 shipping_amount = 38;
    // Credit memo shipping discount tax compensation amount.
    int32 shipping_discount_tax_compensation_amount = 39;
    // Credit memo shipping including tax.
    int32 shipping_incl_tax = 40;
    // Credit memo shipping tax amount.
    int32 shipping_tax_amount = 41;
    // Credit memo state.
    int32 state = 42;
    // Credit memo store currency code.
    string store_currency_code = 43;
    // Credit memo store ID.
    int32 store_id = 44;
    // Credit memo store-to-base rate.
    int32 store_to_base_rate = 45;
    // Credit memo store-to-order rate.
    int32 store_to_order_rate = 46;
    // Credit memo subtotal.
    int32 subtotal = 47;
    // Credit memo subtotal including tax.
    int32 subtotal_incl_tax = 48;
    // Credit memo tax amount.
    int32 tax_amount = 49;
    // Credit memo transaction ID.
    string transaction_id = 50;
    // Credit memo updated-at timestamp.
    string updated_at = 51;
}

message Sales_data_creditmemo_item_creation_extension_interface {
}

message Sales_data_creditmemo_item_creation_interface {
    sales-data-creditmemo-item-creation-extension-interface extension_attributes = 1;
    // Order item ID.
    int32 order_item_id = 2;
    // Quantity.
    int32 qty = 3;
}

message Sales_data_creditmemo_item_extension_interface {
}

message Sales_data_creditmemo_item_interface {
    // Additional data.
    string additional_data = 1;
    // The base cost for a credit memo item.
    int32 base_cost = 2;
    // The base discount amount for a credit memo item.
    int32 base_discount_amount = 3;
    // The base discount tax compensation amount for a credit memo item.
    int32 base_discount_tax_compensation_amount = 4;
    // The base price for a credit memo item.
    int32 base_price = 5;
    // Base price including tax.
    int32 base_price_incl_tax = 6;
    // Base row total.
    int32 base_row_total = 7;
    // Base row total including tax.
    int32 base_row_total_incl_tax = 8;
    // Base tax amount.
    int32 base_tax_amount = 9;
    // Base WEEE tax applied amount.
    int32 base_weee_tax_applied_amount = 10;
    // Base WEEE tax applied row amount.
    int32 base_weee_tax_applied_row_amnt = 11;
    // Base WEEE tax disposition.
    int32 base_weee_tax_disposition = 12;
    // Base WEEE tax row disposition.
    int32 base_weee_tax_row_disposition = 13;
    // Description.
    string description = 14;
    // Discount amount.
    int32 discount_amount = 15;
    // Discount tax compensation amount.
    int32 discount_tax_compensation_amount = 16;
    // Credit memo item ID.
    int32 entity_id = 17;
    sales-data-creditmemo-item-extension-interface extension_attributes = 18;
    // Name.
    string name = 19;
    // Order item ID.
    int32 order_item_id = 20;
    // Parent ID.
    int32 parent_id = 21;
    // Price.
    int32 price = 22;
    // Price including tax.
    int32 price_incl_tax = 23;
    // Product ID.
    int32 product_id = 24;
    // Quantity.
    int32 qty = 25;
    // Row total.
    int32 row_total = 26;
    // Row total including tax.
    int32 row_total_incl_tax = 27;
    // SKU.
    string sku = 28;
    // Tax amount.
    int32 tax_amount = 29;
    // WEEE tax applied.
    string weee_tax_applied = 30;
    // WEEE tax applied amount.
    int32 weee_tax_applied_amount = 31;
    // WEEE tax applied row amount.
    int32 weee_tax_applied_row_amount = 32;
    // WEEE tax disposition.
    int32 weee_tax_disposition = 33;
    // WEEE tax row disposition.
    int32 weee_tax_row_disposition = 34;
}

message Sales_data_creditmemo_search_result_interface {
    // Array of collection items.
    repeated sales-data-creditmemo-interface items = 1;
    framework-search-criteria-interface search_criteria = 2;
    // Total count.
    int32 total_count = 3;
}

message Sales_data_invoice_comment_creation_extension_interface {
}

message Sales_data_invoice_comment_creation_interface {
    // Comment.
    string comment = 1;
    sales-data-invoice-comment-creation-extension-interface extension_attributes = 2;
    // Is-visible-on-storefront flag value.
    int32 is_visible_on_front = 3;
}

message Sales_data_invoice_comment_extension_interface {
}

message Sales_data_invoice_comment_interface {
    // Comment.
    string comment = 1;
    // Created-at timestamp.
    string created_at = 2;
    // Invoice ID.
    int32 entity_id = 3;
    sales-data-invoice-comment-extension-interface extension_attributes = 4;
    // Is-customer-notified flag value.
    int32 is_customer_notified = 5;
    // Is-visible-on-storefront flag value.
    int32 is_visible_on_front = 6;
    // Parent ID.
    int32 parent_id = 7;
}

message Sales_data_invoice_comment_search_result_interface {
    // Array of collection items.
    repeated sales-data-invoice-comment-interface items = 1;
    framework-search-criteria-interface search_criteria = 2;
    // Total count.
    int32 total_count = 3;
}

message Sales_data_invoice_creation_arguments_extension_interface {
}

message Sales_data_invoice_creation_arguments_interface {
    sales-data-invoice-creation-arguments-extension-interface extension_attributes = 1;
}

message Sales_data_invoice_extension_interface {
    int32 base_customer_balance_amount = 1;
    int32 base_gift_cards_amount = 2;
    int32 customer_balance_amount = 3;
    int32 gift_cards_amount = 4;
}

message Sales_data_invoice_interface {
    // Base currency code.
    string base_currency_code = 1;
    // Base discount amount.
    int32 base_discount_amount = 2;
    // Base discount tax compensation amount.
    int32 base_discount_tax_compensation_amount = 3;
    // Base grand total.
    int32 base_grand_total = 4;
    // Base shipping amount.
    int32 base_shipping_amount = 5;
    // Base shipping discount tax compensation amount.
    int32 base_shipping_discount_tax_compensation_amnt = 6;
    // Base shipping including tax.
    int32 base_shipping_incl_tax = 7;
    // Base shipping tax amount.
    int32 base_shipping_tax_amount = 8;
    // Base subtotal.
    int32 base_subtotal = 9;
    // Base subtotal including tax.
    int32 base_subtotal_incl_tax = 10;
    // Base tax amount.
    int32 base_tax_amount = 11;
    // Base-to-global rate.
    int32 base_to_global_rate = 12;
    // Base-to-order rate.
    int32 base_to_order_rate = 13;
    // Base total refunded.
    int32 base_total_refunded = 14;
    // Billing address ID.
    int32 billing_address_id = 15;
    // Can void flag value.
    int32 can_void_flag = 16;
    // Array of any invoice comments. Otherwise, null.
    repeated sales-data-invoice-comment-interface comments = 17;
    // Created-at timestamp.
    string created_at = 18;
    // Discount amount.
    int32 discount_amount = 19;
    // Discount description.
    string discount_description = 20;
    // Discount tax compensation amount.
    int32 discount_tax_compensation_amount = 21;
    // Email-sent flag value.
    int32 email_sent = 22;
    // Invoice ID.
    int32 entity_id = 23;
    sales-data-invoice-extension-interface extension_attributes = 24;
    // Global currency code.
    string global_currency_code = 25;
    // Grand total.
    int32 grand_total = 26;
    // Increment ID.
    string increment_id = 27;
    // Is-used-for-refund flag value.
    int32 is_used_for_refund = 28;
    // Array of invoice items.
    repeated sales-data-invoice-item-interface items = 29;
    // Order currency code.
    string order_currency_code = 30;
    // Order ID.
    int32 order_id = 31;
    // Shipping address ID.
    int32 shipping_address_id = 32;
    // Shipping amount.
    int32 shipping_amount = 33;
    // Shipping discount tax compensation amount.
    int32 shipping_discount_tax_compensation_amount = 34;
    // Shipping including tax.
    int32 shipping_incl_tax = 35;
    // Shipping tax amount.
    int32 shipping_tax_amount = 36;
    // State.
    int32 state = 37;
    // Store currency code.
    string store_currency_code = 38;
    // Store ID.
    int32 store_id = 39;
    // Store-to-base rate.
    int32 store_to_base_rate = 40;
    // Store-to-order rate.
    int32 store_to_order_rate = 41;
    // Subtotal.
    int32 subtotal = 42;
    // Subtotal including tax.
    int32 subtotal_incl_tax = 43;
    // Tax amount.
    int32 tax_amount = 44;
    // Total quantity.
    int32 total_qty = 45;
    // Transaction ID.
    string transaction_id = 46;
    // Updated-at timestamp.
    string updated_at = 47;
}

message Sales_data_invoice_item_creation_extension_interface {
}

message Sales_data_invoice_item_creation_interface {
    sales-data-invoice-item-creation-extension-interface extension_attributes = 1;
    // Order item ID.
    int32 order_item_id = 2;
    // Quantity.
    int32 qty = 3;
}

message Sales_data_invoice_item_extension_interface {
}

message Sales_data_invoice_item_interface {
    // Additional data.
    string additional_data = 1;
    // Base cost.
    int32 base_cost = 2;
    // Base discount amount.
    int32 base_discount_amount = 3;
    // Base discount tax compensation amount.
    int32 base_discount_tax_compensation_amount = 4;
    // Base price.
    int32 base_price = 5;
    // Base price including tax.
    int32 base_price_incl_tax = 6;
    // Base row total.
    int32 base_row_total = 7;
    // Base row total including tax.
    int32 base_row_total_incl_tax = 8;
    // Base tax amount.
    int32 base_tax_amount = 9;
    // Description.
    string description = 10;
    // Discount amount.
    int32 discount_amount = 11;
    // Discount tax compensation amount.
    int32 discount_tax_compensation_amount = 12;
    // Invoice item ID.
    int32 entity_id = 13;
    sales-data-invoice-item-extension-interface extension_attributes = 14;
    // Name.
    string name = 15;
    // Order item ID.
    int32 order_item_id = 16;
    // Parent ID.
    int32 parent_id = 17;
    // Price.
    int32 price = 18;
    // Price including tax.
    int32 price_incl_tax = 19;
    // Product ID.
    int32 product_id = 20;
    // Quantity.
    int32 qty = 21;
    // Row total.
    int32 row_total = 22;
    // Row total including tax.
    int32 row_total_incl_tax = 23;
    // SKU.
    string sku = 24;
    // Tax amount.
    int32 tax_amount = 25;
}

message Sales_data_invoice_search_result_interface {
    // Array of collection items.
    repeated sales-data-invoice-interface items = 1;
    framework-search-criteria-interface search_criteria = 2;
    // Total count.
    int32 total_count = 3;
}

message Sales_data_order_address_extension_interface {
}

message Sales_data_order_address_interface {
    // Address type.
    string address_type = 1;
    // City.
    string city = 2;
    // Company.
    string company = 3;
    // Country ID.
    string country_id = 4;
    // Country address ID.
    int32 customer_address_id = 5;
    // Customer ID.
    int32 customer_id = 6;
    // Email address.
    string email = 7;
    // Order address ID.
    int32 entity_id = 8;
    sales-data-order-address-extension-interface extension_attributes = 9;
    // Fax number.
    string fax = 10;
    // First name.
    string firstname = 11;
    // Last name.
    string lastname = 12;
    // Middle name.
    string middlename = 13;
    // Parent ID.
    int32 parent_id = 14;
    // Postal code.
    string postcode = 15;
    // Prefix.
    string prefix = 16;
    // Region.
    string region = 17;
    // Region code.
    string region_code = 18;
    // Region ID.
    int32 region_id = 19;
    // Array of any street values. Otherwise, null.
    repeated string street = 20;
    // Suffix.
    string suffix = 21;
    // Telephone number.
    string telephone = 22;
    // VAT ID.
    string vat_id = 23;
    // VAT-is-valid flag value.
    int32 vat_is_valid = 24;
    // VAT request date.
    string vat_request_date = 25;
    // VAT request ID.
    string vat_request_id = 26;
    // VAT-request-success flag value.
    int32 vat_request_success = 27;
}

message Sales_data_order_extension_interface {
    repeated tax-data-order-tax-details-applied-tax-interface applied_taxes = 1;
    int32 base_customer_balance_amount = 2;
    bool converting_from_quote = 3;
    int32 customer_balance_amount = 4;
    gift-message-data-message-interface gift_message = 5;
    string gw_add_card = 6;
    string gw_allow_gift_receipt = 7;
    string gw_base_price = 8;
    string gw_base_price_incl_tax = 9;
    string gw_base_tax_amount = 10;
    string gw_card_base_price = 11;
    string gw_card_base_price_incl_tax = 12;
    string gw_card_base_tax_amount = 13;
    string gw_card_price = 14;
    string gw_card_price_incl_tax = 15;
    string gw_card_tax_amount = 16;
    string gw_id = 17;
    string gw_items_base_price = 18;
    string gw_items_base_price_incl_tax = 19;
    string gw_items_base_tax_amount = 20;
    string gw_items_price = 21;
    string gw_items_price_incl_tax = 22;
    string gw_items_tax_amount = 23;
    string gw_price = 24;
    string gw_price_incl_tax = 25;
    string gw_tax_amount = 26;
    repeated tax-data-order-tax-details-item-interface item_applied_taxes = 27;
    repeated sales-data-shipping-assignment-interface shipping_assignments = 28;
}

message Sales_data_order_interface {
    // Negative adjustment value.
    int32 adjustment_negative = 1;
    // Positive adjustment value.
    int32 adjustment_positive = 2;
    // Applied rule IDs.
    string applied_rule_ids = 3;
    // Base negative adjustment value.
    int32 base_adjustment_negative = 4;
    // Base positive adjustment value.
    int32 base_adjustment_positive = 5;
    // Base currency code.
    string base_currency_code = 6;
    // Base discount amount.
    int32 base_discount_amount = 7;
    // Base discount canceled.
    int32 base_discount_canceled = 8;
    // Base discount invoiced.
    int32 base_discount_invoiced = 9;
    // Base discount refunded.
    int32 base_discount_refunded = 10;
    // Base discount tax compensation amount.
    int32 base_discount_tax_compensation_amount = 11;
    // Base discount tax compensation invoiced.
    int32 base_discount_tax_compensation_invoiced = 12;
    // Base discount tax compensation refunded.
    int32 base_discount_tax_compensation_refunded = 13;
    // Base grand total.
    int32 base_grand_total = 14;
    // Base shipping amount.
    int32 base_shipping_amount = 15;
    // Base shipping canceled.
    int32 base_shipping_canceled = 16;
    // Base shipping discount amount.
    int32 base_shipping_discount_amount = 17;
    // Base shipping discount tax compensation amount.
    int32 base_shipping_discount_tax_compensation_amnt = 18;
    // Base shipping including tax.
    int32 base_shipping_incl_tax = 19;
    // Base shipping invoiced.
    int32 base_shipping_invoiced = 20;
    // Base shipping refunded.
    int32 base_shipping_refunded = 21;
    // Base shipping tax amount.
    int32 base_shipping_tax_amount = 22;
    // Base shipping tax refunded.
    int32 base_shipping_tax_refunded = 23;
    // Base subtotal.
    int32 base_subtotal = 24;
    // Base subtotal canceled.
    int32 base_subtotal_canceled = 25;
    // Base subtotal including tax.
    int32 base_subtotal_incl_tax = 26;
    // Base subtotal invoiced.
    int32 base_subtotal_invoiced = 27;
    // Base subtotal refunded.
    int32 base_subtotal_refunded = 28;
    // Base tax amount.
    int32 base_tax_amount = 29;
    // Base tax canceled.
    int32 base_tax_canceled = 30;
    // Base tax invoiced.
    int32 base_tax_invoiced = 31;
    // Base tax refunded.
    int32 base_tax_refunded = 32;
    // Base-to-global rate.
    int32 base_to_global_rate = 33;
    // Base-to-order rate.
    int32 base_to_order_rate = 34;
    // Base total canceled.
    int32 base_total_canceled = 35;
    // Base total due.
    int32 base_total_due = 36;
    // Base total invoiced.
    int32 base_total_invoiced = 37;
    // Base total invoiced cost.
    int32 base_total_invoiced_cost = 38;
    // Base total offline refunded.
    int32 base_total_offline_refunded = 39;
    // Base total online refunded.
    int32 base_total_online_refunded = 40;
    // Base total paid.
    int32 base_total_paid = 41;
    // Base total quantity ordered.
    int32 base_total_qty_ordered = 42;
    // Base total refunded.
    int32 base_total_refunded = 43;
    sales-data-order-address-interface billing_address = 44;
    // Billing address ID.
    int32 billing_address_id = 45;
    // Can-ship-partially flag value.
    int32 can_ship_partially = 46;
    // Can-ship-partially-item flag value.
    int32 can_ship_partially_item = 47;
    // Coupon code.
    string coupon_code = 48;
    // Created-at timestamp.
    string created_at = 49;
    // Customer date-of-birth (DOB).
    string customer_dob = 50;
    // Customer email address.
    string customer_email = 51;
    // Customer first name.
    string customer_firstname = 52;
    // Customer gender.
    int32 customer_gender = 53;
    // Customer group ID.
    int32 customer_group_id = 54;
    // Customer ID.
    int32 customer_id = 55;
    // Customer-is-guest flag value.
    int32 customer_is_guest = 56;
    // Customer last name.
    string customer_lastname = 57;
    // Customer middle name.
    string customer_middlename = 58;
    // Customer note.
    string customer_note = 59;
    // Customer-note-notify flag value.
    int32 customer_note_notify = 60;
    // Customer prefix.
    string customer_prefix = 61;
    // Customer suffix.
    string customer_suffix = 62;
    // Customer value-added tax (VAT).
    string customer_taxvat = 63;
    // Discount amount.
    int32 discount_amount = 64;
    // Discount canceled.
    int32 discount_canceled = 65;
    // Discount description.
    string discount_description = 66;
    // Discount invoiced.
    int32 discount_invoiced = 67;
    // Discount refunded amount.
    int32 discount_refunded = 68;
    // Discount tax compensation amount.
    int32 discount_tax_compensation_amount = 69;
    // Discount tax compensation invoiced amount.
    int32 discount_tax_compensation_invoiced = 70;
    // Discount tax compensation refunded amount.
    int32 discount_tax_compensation_refunded = 71;
    // Edit increment value.
    int32 edit_increment = 72;
    // Email-sent flag value.
    int32 email_sent = 73;
    // Order ID.
    int32 entity_id = 74;
    // External customer ID.
    string ext_customer_id = 75;
    // External order ID.
    string ext_order_id = 76;
    sales-data-order-extension-interface extension_attributes = 77;
    // Forced-shipment-with-invoice flag value.
    int32 forced_shipment_with_invoice = 78;
    // Global currency code.
    string global_currency_code = 79;
    // Grand total.
    int32 grand_total = 80;
    // Hold before state.
    string hold_before_state = 81;
    // Hold before status.
    string hold_before_status = 82;
    // Increment ID.
    string increment_id = 83;
    // Is-virtual flag value.
    int32 is_virtual = 84;
    // Array of items.
    repeated sales-data-order-item-interface items = 85;
    // Order currency code.
    string order_currency_code = 86;
    // Original increment ID.
    string original_increment_id = 87;
    sales-data-order-payment-interface payment = 88;
    // Payment authorization expiration date.
    int32 payment_auth_expiration = 89;
    // Payment authorization amount.
    int32 payment_authorization_amount = 90;
    // Protect code.
    string protect_code = 91;
    // Quote address ID.
    int32 quote_address_id = 92;
    // Quote ID.
    int32 quote_id = 93;
    // Relation child ID.
    string relation_child_id = 94;
    // Relation child real ID.
    string relation_child_real_id = 95;
    // Relation parent ID.
    string relation_parent_id = 96;
    // Relation parent real ID.
    string relation_parent_real_id = 97;
    // Remote IP address.
    string remote_ip = 98;
    // Shipping amount.
    int32 shipping_amount = 99;
    // Shipping canceled amount.
    int32 shipping_canceled = 100;
    // Shipping description.
    string shipping_description = 101;
    // Shipping discount amount.
    int32 shipping_discount_amount = 102;
    // Shipping discount tax compensation amount.
    int32 shipping_discount_tax_compensation_amount = 103;
    // Shipping including tax amount.
    int32 shipping_incl_tax = 104;
    // Shipping invoiced amount.
    int32 shipping_invoiced = 105;
    // Shipping refunded amount.
    int32 shipping_refunded = 106;
    // Shipping tax amount.
    int32 shipping_tax_amount = 107;
    // Shipping tax refunded amount.
    int32 shipping_tax_refunded = 108;
    // State.
    string state = 109;
    // Status.
    string status = 110;
    // Array of status histories.
    repeated sales-data-order-status-history-interface status_histories = 111;
    // Store currency code.
    string store_currency_code = 112;
    // Store ID.
    int32 store_id = 113;
    // Store name.
    string store_name = 114;
    // Store-to-base rate.
    int32 store_to_base_rate = 115;
    // Store-to-order rate.
    int32 store_to_order_rate = 116;
    // Subtotal.
    int32 subtotal = 117;
    // Subtotal canceled amount.
    int32 subtotal_canceled = 118;
    // Subtotal including tax amount.
    int32 subtotal_incl_tax = 119;
    // Subtotal invoiced amount.
    int32 subtotal_invoiced = 120;
    // Subtotal refunded amount.
    int32 subtotal_refunded = 121;
    // Tax amount.
    int32 tax_amount = 122;
    // Tax canceled amount.
    int32 tax_canceled = 123;
    // Tax invoiced amount.
    int32 tax_invoiced = 124;
    // Tax refunded amount.
    int32 tax_refunded = 125;
    // Total canceled.
    int32 total_canceled = 126;
    // Total due.
    int32 total_due = 127;
    // Total invoiced amount.
    int32 total_invoiced = 128;
    // Total item count.
    int32 total_item_count = 129;
    // Total offline refunded amount.
    int32 total_offline_refunded = 130;
    // Total online refunded amount.
    int32 total_online_refunded = 131;
    // Total paid.
    int32 total_paid = 132;
    // Total quantity ordered.
    int32 total_qty_ordered = 133;
    // Total amount refunded.
    int32 total_refunded = 134;
    // Updated-at timestamp.
    string updated_at = 135;
    // Weight.
    int32 weight = 136;
    // X-Forwarded-For field value.
    string x_forwarded_for = 137;
}

message Sales_data_order_item_extension_interface {
    gift-message-data-message-interface gift_message = 1;
}

message Sales_data_order_item_interface {
    // Additional data.
    string additional_data = 1;
    // Amount refunded.
    int32 amount_refunded = 2;
    // Applied rule IDs.
    string applied_rule_ids = 3;
    // Base amount refunded.
    int32 base_amount_refunded = 4;
    // Base cost.
    int32 base_cost = 5;
    // Base discount amount.
    int32 base_discount_amount = 6;
    // Base discount invoiced.
    int32 base_discount_invoiced = 7;
    // Base discount refunded.
    int32 base_discount_refunded = 8;
    // Base discount tax compensation amount.
    int32 base_discount_tax_compensation_amount = 9;
    // Base discount tax compensation invoiced.
    int32 base_discount_tax_compensation_invoiced = 10;
    // Base discount tax compensation refunded.
    int32 base_discount_tax_compensation_refunded = 11;
    // Base original price.
    int32 base_original_price = 12;
    // Base price.
    int32 base_price = 13;
    // Base price including tax.
    int32 base_price_incl_tax = 14;
    // Base row invoiced.
    int32 base_row_invoiced = 15;
    // Base row total.
    int32 base_row_total = 16;
    // Base row total including tax.
    int32 base_row_total_incl_tax = 17;
    // Base tax amount.
    int32 base_tax_amount = 18;
    // Base tax before discount.
    int32 base_tax_before_discount = 19;
    // Base tax invoiced.
    int32 base_tax_invoiced = 20;
    // Base tax refunded.
    int32 base_tax_refunded = 21;
    // Base WEEE tax applied amount.
    int32 base_weee_tax_applied_amount = 22;
    // Base WEEE tax applied row amount.
    int32 base_weee_tax_applied_row_amnt = 23;
    // Base WEEE tax disposition.
    int32 base_weee_tax_disposition = 24;
    // Base WEEE tax row disposition.
    int32 base_weee_tax_row_disposition = 25;
    // Created-at timestamp.
    string created_at = 26;
    // Description.
    string description = 27;
    // Discount amount.
    int32 discount_amount = 28;
    // Discount invoiced.
    int32 discount_invoiced = 29;
    // Discount percent.
    int32 discount_percent = 30;
    // Discount refunded.
    int32 discount_refunded = 31;
    // Discount tax compensation amount.
    int32 discount_tax_compensation_amount = 32;
    // Discount tax compensation canceled.
    int32 discount_tax_compensation_canceled = 33;
    // Discount tax compensation invoiced.
    int32 discount_tax_compensation_invoiced = 34;
    // Discount tax compensation refunded.
    int32 discount_tax_compensation_refunded = 35;
    // Event ID.
    int32 event_id = 36;
    // External order item ID.
    string ext_order_item_id = 37;
    sales-data-order-item-extension-interface extension_attributes = 38;
    // Free-shipping flag value.
    int32 free_shipping = 39;
    // GW base price.
    int32 gw_base_price = 40;
    // GW base price invoiced.
    int32 gw_base_price_invoiced = 41;
    // GW base price refunded.
    int32 gw_base_price_refunded = 42;
    // GW base tax amount.
    int32 gw_base_tax_amount = 43;
    // GW base tax amount invoiced.
    int32 gw_base_tax_amount_invoiced = 44;
    // GW base tax amount refunded.
    int32 gw_base_tax_amount_refunded = 45;
    // GW ID.
    int32 gw_id = 46;
    // GW price.
    int32 gw_price = 47;
    // GW price invoiced.
    int32 gw_price_invoiced = 48;
    // GW price refunded.
    int32 gw_price_refunded = 49;
    // GW tax amount.
    int32 gw_tax_amount = 50;
    // GW tax amount invoiced.
    int32 gw_tax_amount_invoiced = 51;
    // GW tax amount refunded.
    int32 gw_tax_amount_refunded = 52;
    // Is-quantity-decimal flag value.
    int32 is_qty_decimal = 53;
    // Is-virtual flag value.
    int32 is_virtual = 54;
    // Item ID.
    int32 item_id = 55;
    // Locked DO invoice flag value.
    int32 locked_do_invoice = 56;
    // Locked DO ship flag value.
    int32 locked_do_ship = 57;
    // Name.
    string name = 58;
    // No-discount flag value.
    int32 no_discount = 59;
    // Order ID.
    int32 order_id = 60;
    // Original price.
    int32 original_price = 61;
    sales-data-order-item-interface parent_item = 62;
    // Parent item ID.
    int32 parent_item_id = 63;
    // Price.
    int32 price = 64;
    // Price including tax.
    int32 price_incl_tax = 65;
    // Product ID.
    int32 product_id = 66;
    catalog-data-product-option-interface product_option = 67;
    // Product type.
    string product_type = 68;
    // Quantity backordered.
    int32 qty_backordered = 69;
    // Quantity canceled.
    int32 qty_canceled = 70;
    // Quantity invoiced.
    int32 qty_invoiced = 71;
    // Quantity ordered.
    int32 qty_ordered = 72;
    // Quantity refunded.
    int32 qty_refunded = 73;
    // Quantity returned.
    int32 qty_returned = 74;
    // Quantity shipped.
    int32 qty_shipped = 75;
    // Quote item ID.
    int32 quote_item_id = 76;
    // Row invoiced.
    int32 row_invoiced = 77;
    // Row total.
    int32 row_total = 78;
    // Row total including tax.
    int32 row_total_incl_tax = 79;
    // Row weight.
    int32 row_weight = 80;
    // SKU.
    string sku = 81;
    // Store ID.
    int32 store_id = 82;
    // Tax amount.
    int32 tax_amount = 83;
    // Tax before discount.
    int32 tax_before_discount = 84;
    // Tax canceled.
    int32 tax_canceled = 85;
    // Tax invoiced.
    int32 tax_invoiced = 86;
    // Tax percent.
    int32 tax_percent = 87;
    // Tax refunded.
    int32 tax_refunded = 88;
    // Updated-at timestamp.
    string updated_at = 89;
    // WEEE tax applied.
    string weee_tax_applied = 90;
    // WEEE tax applied amount.
    int32 weee_tax_applied_amount = 91;
    // WEEE tax applied row amount.
    int32 weee_tax_applied_row_amount = 92;
    // WEEE tax disposition.
    int32 weee_tax_disposition = 93;
    // WEEE tax row disposition.
    int32 weee_tax_row_disposition = 94;
    // Weight.
    int32 weight = 95;
}

message Sales_data_order_item_search_result_interface {
    // Array of collection items.
    repeated sales-data-order-item-interface items = 1;
    framework-search-criteria-interface search_criteria = 2;
    // Total count.
    int32 total_count = 3;
}

message Sales_data_order_payment_extension_interface {
    vault-data-payment-token-interface vault_payment_token = 1;
}

message Sales_data_order_payment_interface {
    // Account status.
    string account_status = 1;
    // Additional data.
    string additional_data = 2;
    // Array of additional information.
    repeated string additional_information = 3;
    // Address status.
    string address_status = 4;
    // Amount authorized.
    int32 amount_authorized = 5;
    // Amount canceled.
    int32 amount_canceled = 6;
    // Amount ordered.
    int32 amount_ordered = 7;
    // Amount paid.
    int32 amount_paid = 8;
    // Amount refunded.
    int32 amount_refunded = 9;
    // Anet transaction method.
    string anet_trans_method = 10;
    // Base amount authorized.
    int32 base_amount_authorized = 11;
    // Base amount canceled.
    int32 base_amount_canceled = 12;
    // Base amount ordered.
    int32 base_amount_ordered = 13;
    // Base amount paid.
    int32 base_amount_paid = 14;
    // Base amount paid online.
    int32 base_amount_paid_online = 15;
    // Base amount refunded.
    int32 base_amount_refunded = 16;
    // Base amount refunded online.
    int32 base_amount_refunded_online = 17;
    // Base shipping amount.
    int32 base_shipping_amount = 18;
    // Base shipping captured amount.
    int32 base_shipping_captured = 19;
    // Base shipping refunded amount.
    int32 base_shipping_refunded = 20;
    // Credit card approval.
    string cc_approval = 21;
    // Credit card avs status.
    string cc_avs_status = 22;
    // Credit card CID status.
    string cc_cid_status = 23;
    // Credit card debug request body.
    string cc_debug_request_body = 24;
    // Credit card debug response body.
    string cc_debug_response_body = 25;
    // Credit card debug response serialized.
    string cc_debug_response_serialized = 26;
    // Credit card expiration month.
    string cc_exp_month = 27;
    // Credit card expiration year.
    string cc_exp_year = 28;
    // Last four digits of the credit card.
    string cc_last4 = 29;
    // Encrypted credit card number.
    string cc_number_enc = 30;
    // Credit card number.
    string cc_owner = 31;
    // Credit card secure verify.
    string cc_secure_verify = 32;
    // Credit card SS issue.
    string cc_ss_issue = 33;
    // Credit card SS start month.
    string cc_ss_start_month = 34;
    // Credit card SS start year.
    string cc_ss_start_year = 35;
    // Credit card status.
    string cc_status = 36;
    // Credit card status description.
    string cc_status_description = 37;
    // Credit card transaction ID.
    string cc_trans_id = 38;
    // Credit card type.
    string cc_type = 39;
    // eCheck account name.
    string echeck_account_name = 40;
    // eCheck account type.
    string echeck_account_type = 41;
    // eCheck bank name.
    string echeck_bank_name = 42;
    // eCheck routing number.
    string echeck_routing_number = 43;
    // eCheck type.
    string echeck_type = 44;
    // Entity ID.
    int32 entity_id = 45;
    sales-data-order-payment-extension-interface extension_attributes = 46;
    // Last transaction ID.
    string last_trans_id = 47;
    // Method.
    string method = 48;
    // Parent ID.
    int32 parent_id = 49;
    // PO number.
    string po_number = 50;
    // Protection eligibility.
    string protection_eligibility = 51;
    // Quote payment ID.
    int32 quote_payment_id = 52;
    // Shipping amount.
    int32 shipping_amount = 53;
    // Shipping captured.
    int32 shipping_captured = 54;
    // Shipping refunded.
    int32 shipping_refunded = 55;
}

message Sales_data_order_search_result_interface {
    // Array of collection items.
    repeated sales-data-order-interface items = 1;
    framework-search-criteria-interface search_criteria = 2;
    // Total count.
    int32 total_count = 3;
}

message Sales_data_order_status_history_extension_interface {
}

message Sales_data_order_status_history_interface {
    // Comment.
    string comment = 1;
    // Created-at timestamp.
    string created_at = 2;
    // Order status history ID.
    int32 entity_id = 3;
    // Entity name.
    string entity_name = 4;
    sales-data-order-status-history-extension-interface extension_attributes = 5;
    // Is-customer-notified flag value.
    int32 is_customer_notified = 6;
    // Is-visible-on-storefront flag value.
    int32 is_visible_on_front = 7;
    // Parent ID.
    int32 parent_id = 8;
    // Status.
    string status = 9;
}

message Sales_data_order_status_history_search_result_interface {
    // Array of collection items.
    repeated sales-data-order-status-history-interface items = 1;
    framework-search-criteria-interface search_criteria = 2;
    // Total count.
    int32 total_count = 3;
}

message Sales_data_shipment_comment_creation_extension_interface {
}

message Sales_data_shipment_comment_creation_interface {
    // Comment.
    string comment = 1;
    sales-data-shipment-comment-creation-extension-interface extension_attributes = 2;
    // Is-visible-on-storefront flag value.
    int32 is_visible_on_front = 3;
}

message Sales_data_shipment_comment_extension_interface {
}

message Sales_data_shipment_comment_interface {
    // Comment.
    string comment = 1;
    // Created-at timestamp.
    string created_at = 2;
    // Invoice ID.
    int32 entity_id = 3;
    sales-data-shipment-comment-extension-interface extension_attributes = 4;
    // Is-customer-notified flag value.
    int32 is_customer_notified = 5;
    // Is-visible-on-storefront flag value.
    int32 is_visible_on_front = 6;
    // Parent ID.
    int32 parent_id = 7;
}

message Sales_data_shipment_comment_search_result_interface {
    // Array of collection items.
    repeated sales-data-shipment-comment-interface items = 1;
    framework-search-criteria-interface search_criteria = 2;
    // Total count.
    int32 total_count = 3;
}

message Sales_data_shipment_creation_arguments_extension_interface {
}

message Sales_data_shipment_creation_arguments_interface {
    sales-data-shipment-creation-arguments-extension-interface extension_attributes = 1;
}

message Sales_data_shipment_extension_interface {
}

message Sales_data_shipment_interface {
    // Billing address ID.
    int32 billing_address_id = 1;
    // Array of comments.
    repeated sales-data-shipment-comment-interface comments = 2;
    // Created-at timestamp.
    string created_at = 3;
    // Customer ID.
    int32 customer_id = 4;
    // Email-sent flag value.
    int32 email_sent = 5;
    // Shipment ID.
    int32 entity_id = 6;
    sales-data-shipment-extension-interface extension_attributes = 7;
    // Increment ID.
    string increment_id = 8;
    // Array of items.
    repeated sales-data-shipment-item-interface items = 9;
    // Order ID.
    int32 order_id = 10;
    // Array of packages, if any. Otherwise, null.
    repeated sales-data-shipment-package-interface packages = 11;
    // Shipment status.
    int32 shipment_status = 12;
    // Shipping address ID.
    int32 shipping_address_id = 13;
    // Shipping label.
    string shipping_label = 14;
    // Store ID.
    int32 store_id = 15;
    // Total quantity.
    int32 total_qty = 16;
    // Total weight.
    int32 total_weight = 17;
    // Array of tracks.
    repeated sales-data-shipment-track-interface tracks = 18;
    // Updated-at timestamp.
    string updated_at = 19;
}

message Sales_data_shipment_item_creation_extension_interface {
}

message Sales_data_shipment_item_creation_interface {
    sales-data-shipment-item-creation-extension-interface extension_attributes = 1;
    // Order item ID.
    int32 order_item_id = 2;
    // Quantity.
    int32 qty = 3;
}

message Sales_data_shipment_item_extension_interface {
}

message Sales_data_shipment_item_interface {
    // Additional data.
    string additional_data = 1;
    // Description.
    string description = 2;
    // Shipment item ID.
    int32 entity_id = 3;
    sales-data-shipment-item-extension-interface extension_attributes = 4;
    // Name.
    string name = 5;
    // Order item ID.
    int32 order_item_id = 6;
    // Parent ID.
    int32 parent_id = 7;
    // Price.
    int32 price = 8;
    // Product ID.
    int32 product_id = 9;
    // Quantity.
    int32 qty = 10;
    // Row total.
    int32 row_total = 11;
    // SKU.
    string sku = 12;
    // Weight.
    int32 weight = 13;
}

message Sales_data_shipment_package_creation_extension_interface {
}

message Sales_data_shipment_package_creation_interface {
    sales-data-shipment-package-creation-extension-interface extension_attributes = 1;
}

message Sales_data_shipment_package_extension_interface {
}

message Sales_data_shipment_package_interface {
    sales-data-shipment-package-extension-interface extension_attributes = 1;
}

message Sales_data_shipment_search_result_interface {
    // Array of collection items.
    repeated sales-data-shipment-interface items = 1;
    framework-search-criteria-interface search_criteria = 2;
    // Total count.
    int32 total_count = 3;
}

message Sales_data_shipment_track_creation_extension_interface {
}

message Sales_data_shipment_track_creation_interface {
    // Carrier code.
    string carrier_code = 1;
    sales-data-shipment-track-creation-extension-interface extension_attributes = 2;
    // Title.
    string title = 3;
    // Track number.
    string track_number = 4;
}

message Sales_data_shipment_track_extension_interface {
}

message Sales_data_shipment_track_interface {
    // Carrier code.
    string carrier_code = 1;
    // Created-at timestamp.
    string created_at = 2;
    // Description.
    string description = 3;
    // Shipment package ID.
    int32 entity_id = 4;
    sales-data-shipment-track-extension-interface extension_attributes = 5;
    // The order_id for the shipment package.
    int32 order_id = 6;
    // Parent ID.
    int32 parent_id = 7;
    // Quantity.
    int32 qty = 8;
    // Title.
    string title = 9;
    // Track number.
    string track_number = 10;
    // Updated-at timestamp.
    string updated_at = 11;
    // Weight.
    int32 weight = 12;
}

message Sales_data_shipping_assignment_extension_interface {
}

message Sales_data_shipping_assignment_interface {
    sales-data-shipping-assignment-extension-interface extension_attributes = 1;
    // Order items of shipping assignment
    repeated sales-data-order-item-interface items = 2;
    sales-data-shipping-interface shipping = 3;
    // Stock id
    int32 stock_id = 4;
}

message Sales_data_shipping_extension_interface {
}

message Sales_data_shipping_interface {
    sales-data-order-address-interface address = 1;
    sales-data-shipping-extension-interface extension_attributes = 2;
    // Shipping method
    string method = 3;
    sales-data-total-interface total = 4;
}

message Sales_data_total_extension_interface {
}

message Sales_data_total_interface {
    // Base shipping amount.
    int32 base_shipping_amount = 1;
    // Base shipping canceled.
    int32 base_shipping_canceled = 2;
    // Base shipping discount amount.
    int32 base_shipping_discount_amount = 3;
    // Base shipping discount tax compensation amount.
    int32 base_shipping_discount_tax_compensation_amnt = 4;
    // Base shipping including tax.
    int32 base_shipping_incl_tax = 5;
    // Base shipping invoiced.
    int32 base_shipping_invoiced = 6;
    // Base shipping refunded.
    int32 base_shipping_refunded = 7;
    // Base shipping tax amount.
    int32 base_shipping_tax_amount = 8;
    // Base shipping tax refunded.
    int32 base_shipping_tax_refunded = 9;
    sales-data-total-extension-interface extension_attributes = 10;
    // Shipping amount.
    int32 shipping_amount = 11;
    // Shipping canceled amount.
    int32 shipping_canceled = 12;
    // Shipping discount amount.
    int32 shipping_discount_amount = 13;
    // Shipping discount tax compensation amount.
    int32 shipping_discount_tax_compensation_amount = 14;
    // Shipping including tax amount.
    int32 shipping_incl_tax = 15;
    // Shipping invoiced amount.
    int32 shipping_invoiced = 16;
    // Shipping refunded amount.
    int32 shipping_refunded = 17;
    // Shipping tax amount.
    int32 shipping_tax_amount = 18;
    // Shipping tax refunded amount.
    int32 shipping_tax_refunded = 19;
}

message Sales_data_transaction_extension_interface {
}

message Sales_data_transaction_interface {
    // Array of additional information. Otherwise, null.
    repeated string additional_information = 1;
    // Array of child transactions.
    repeated sales-data-transaction-interface child_transactions = 2;
    // Created-at timestamp.
    string created_at = 3;
    sales-data-transaction-extension-interface extension_attributes = 4;
    // Is-closed flag value.
    int32 is_closed = 5;
    // Order ID.
    int32 order_id = 6;
    // The parent ID for the transaction. Otherwise, null.
    int32 parent_id = 7;
    // Parent transaction business ID.
    string parent_txn_id = 8;
    // Payment ID.
    int32 payment_id = 9;
    // Transaction ID.
    int32 transaction_id = 10;
    // Transaction business ID.
    string txn_id = 11;
    // Transaction type.
    string txn_type = 12;
}

message Sales_data_transaction_search_result_interface {
    // Array of collection items.
    repeated sales-data-transaction-interface items = 1;
    framework-search-criteria-interface search_criteria = 2;
    // Total count.
    int32 total_count = 3;
}

message Sales_rule_data_condition_extension_interface {
}

message Sales_rule_data_condition_interface {
    // The aggregator type
    string aggregator_type = 1;
    // The attribute name of the condition
    string attribute_name = 2;
    // Condition type
    string condition_type = 3;
    // List of conditions
    repeated sales-rule-data-condition-interface conditions = 4;
    sales-rule-data-condition-extension-interface extension_attributes = 5;
    // The operator of the condition
    string operator = 6;
    // The value of the condition
    string value = 7;
}

message Sales_rule_data_coupon_extension_interface {
}

message Sales_rule_data_coupon_generation_spec_extension_interface {
}

message Sales_rule_data_coupon_generation_spec_interface {
    // The delimiter
    string delimiter = 1;
    // The spacing where the delimiter should exist
    int32 delimiter_at_every = 2;
    sales-rule-data-coupon-generation-spec-extension-interface extension_attributes = 3;
    // Format of generated coupon code
    string format = 4;
    // Length of coupon code
    int32 length = 5;
    // The prefix
    string prefix = 6;
    // Of coupons to generate
    int32 quantity = 7;
    // The id of the rule associated with the coupon
    int32 rule_id = 8;
    // The suffix
    string suffix = 9;
}

message Sales_rule_data_coupon_interface {
    // Coupon code
    string code = 1;
    // Coupon id
    int32 coupon_id = 2;
    // When the coupon is created
    string created_at = 3;
    // Expiration date
    string expiration_date = 4;
    sales-rule-data-coupon-extension-interface extension_attributes = 5;
    // The coupon is primary coupon for the rule that it's associated with
    bool is_primary = 6;
    // The id of the rule associated with the coupon
    int32 rule_id = 7;
    // The number of times the coupon has been used
    int32 times_used = 8;
    // Of coupon
    int32 type = 9;
    // Usage limit
    int32 usage_limit = 10;
    // Usage limit per customer
    int32 usage_per_customer = 11;
}

message Sales_rule_data_coupon_mass_delete_result_interface {
    // List of failed items.
    repeated string failed_items = 1;
    // List of missing items.
    repeated string missing_items = 2;
}

message Sales_rule_data_coupon_search_result_interface {
    // Rules.
    repeated sales-rule-data-coupon-interface items = 1;
    framework-search-criteria-interface search_criteria = 2;
    // Total count.
    int32 total_count = 3;
}

message Sales_rule_data_rule_extension_interface {
    int32 reward_points_delta = 1;
}

message Sales_rule_data_rule_interface {
    sales-rule-data-condition-interface action_condition = 1;
    // The rule applies to shipping
    bool apply_to_shipping = 2;
    sales-rule-data-condition-interface condition = 3;
    // Coupon type
    string coupon_type = 4;
    // Ids of customer groups that the rule applies to
    repeated int32 customer_group_ids = 5;
    // Description
    string description = 6;
    // Discount amount
    int32 discount_amount = 7;
    // Maximum qty discount is applied
    int32 discount_qty = 8;
    // Discount step
    int32 discount_step = 9;
    sales-rule-data-rule-extension-interface extension_attributes = 10;
    // The start date when the coupon is active
    string from_date = 11;
    // The coupon is active
    bool is_active = 12;
    // Is this field needed
    bool is_advanced = 13;
    // Whether the rule is in RSS
    bool is_rss = 14;
    // Rule name
    string name = 15;
    // Product ids
    repeated int32 product_ids = 16;
    // Rule id
    int32 rule_id = 17;
    // Simple action of the rule
    string simple_action = 18;
    // To grant free shipping
    string simple_free_shipping = 19;
    // Sort order
    int32 sort_order = 20;
    // To stop rule processing
    bool stop_rules_processing = 21;
    // Display label
    repeated sales-rule-data-rule-label-interface store_labels = 22;
    // How many times the rule has been used
    int32 times_used = 23;
    // The end date when the coupon is active
    string to_date = 24;
    // To auto generate coupon
    bool use_auto_generation = 25;
    // Limit of uses per coupon
    int32 uses_per_coupon = 26;
    // Number of uses per customer
    int32 uses_per_customer = 27;
    // A list of websites the rule applies to
    repeated int32 website_ids = 28;
}

message Sales_rule_data_rule_label_extension_interface {
}

message Sales_rule_data_rule_label_interface {
    sales-rule-data-rule-label-extension-interface extension_attributes = 1;
    // StoreId
    int32 store_id = 2;
    // The label for the store
    string store_label = 3;
}

message Sales_rule_data_rule_search_result_interface {
    // Rules.
    repeated sales-rule-data-rule-interface items = 1;
    framework-search-criteria-interface search_criteria = 2;
    // Total count.
    int32 total_count = 3;
}

message Store_data_group_extension_interface {
}

message Store_data_group_interface {
    int32 default_store_id = 1;
    store-data-group-extension-interface extension_attributes = 2;
    int32 id = 3;
    string name = 4;
    int32 root_category_id = 5;
    int32 website_id = 6;
}

message Store_data_store_config_extension_interface {
}

message Store_data_store_config_interface {
    // Base currency code
    string base_currency_code = 1;
    // Base link URL for the store
    string base_link_url = 2;
    // Base media URL for the store
    string base_media_url = 3;
    // Base static URL for the store
    string base_static_url = 4;
    // Base URL for the store
    string base_url = 5;
    // Store code
    string code = 6;
    // Default display currency code
    string default_display_currency_code = 7;
    store-data-store-config-extension-interface extension_attributes = 8;
    // Store id
    int32 id = 9;
    // Store locale
    string locale = 10;
    // Secure base link URL for the store
    string secure_base_link_url = 11;
    // Secure base media URL for the store
    string secure_base_media_url = 12;
    // Secure base static URL for the store
    string secure_base_static_url = 13;
    // Secure base URL for the store
    string secure_base_url = 14;
    // Timezone of the store
    string timezone = 15;
    // Website id of the store
    int32 website_id = 16;
    // The unit of weight
    string weight_unit = 17;
}

message Store_data_store_extension_interface {
}

message Store_data_store_interface {
    string code = 1;
    store-data-store-extension-interface extension_attributes = 2;
    int32 id = 3;
    // Store name
    string name = 4;
    int32 store_group_id = 5;
    int32 website_id = 6;
}

message Store_data_website_extension_interface {
}

message Store_data_website_interface {
    string code = 1;
    int32 default_group_id = 2;
    store-data-website-extension-interface extension_attributes = 3;
    int32 id = 4;
    // Website name
    string name = 5;
}

message Tax_data_applied_tax_rate_extension_interface {
}

message Tax_data_applied_tax_rate_interface {
    // Code
    string code = 1;
    tax-data-applied-tax-rate-extension-interface extension_attributes = 2;
    // Tax Percent
    int32 percent = 3;
    // Title
    string title = 4;
}

message Tax_data_grand_total_details_interface {
    // Tax amount value
    int32 amount = 1;
    // Group identifier
    int32 group_id = 2;
    // Tax rates info
    repeated tax-data-grand-total-rates-interface rates = 3;
}

message Tax_data_grand_total_rates_interface {
    // Tax percentage value
    string percent = 1;
    // Rate title
    string title = 2;
}

message Tax_data_order_tax_details_applied_tax_extension_interface {
    repeated tax-data-applied-tax-rate-interface rates = 1;
}

message Tax_data_order_tax_details_applied_tax_interface {
    // Tax amount
    int32 amount = 1;
    // Tax amount in base currency
    int32 base_amount = 2;
    // Code
    string code = 3;
    tax-data-order-tax-details-applied-tax-extension-interface extension_attributes = 4;
    // Tax Percent
    int32 percent = 5;
    // Title
    string title = 6;
}

message Tax_data_order_tax_details_item_extension_interface {
}

message Tax_data_order_tax_details_item_interface {
    // Applied taxes
    repeated tax-data-order-tax-details-applied-tax-interface applied_taxes = 1;
    // Associated item id if this item is associated with another item, null otherwise
    int32 associated_item_id = 2;
    tax-data-order-tax-details-item-extension-interface extension_attributes = 3;
    // Item id if this item is a product
    int32 item_id = 4;
    // Type (shipping, product, weee, gift wrapping, etc)
    string type = 5;
}

message Tax_data_tax_class_extension_interface {
}

message Tax_data_tax_class_interface {
    // Tax class ID.
    int32 class_id = 1;
    // Tax class name.
    string class_name = 2;
    // Tax class type.
    string class_type = 3;
    tax-data-tax-class-extension-interface extension_attributes = 4;
}

message Tax_data_tax_class_search_results_interface {
    // Items
    repeated tax-data-tax-class-interface items = 1;
    framework-search-criteria-interface search_criteria = 2;
    // Total count.
    int32 total_count = 3;
}

message Tax_data_tax_rate_extension_interface {
}

message Tax_data_tax_rate_interface {
    // Tax rate code
    string code = 1;
    tax-data-tax-rate-extension-interface extension_attributes = 2;
    // Id
    int32 id = 3;
    // Tax rate in percentage
    int32 rate = 4;
    // Region name
    string region_name = 5;
    // Country id
    string tax_country_id = 6;
    // Postcode
    string tax_postcode = 7;
    // Region id
    int32 tax_region_id = 8;
    // Tax rate titles
    repeated tax-data-tax-rate-title-interface titles = 9;
    // Zip range from
    int32 zip_from = 10;
    // Zip is range
    int32 zip_is_range = 11;
    // Zip range to
    int32 zip_to = 12;
}

message Tax_data_tax_rate_search_results_interface {
    // Items
    repeated tax-data-tax-rate-interface items = 1;
    framework-search-criteria-interface search_criteria = 2;
    // Total count.
    int32 total_count = 3;
}

message Tax_data_tax_rate_title_extension_interface {
}

message Tax_data_tax_rate_title_interface {
    tax-data-tax-rate-title-extension-interface extension_attributes = 1;
    // Store id
    string store_id = 2;
    // Title value
    string value = 3;
}

message Tax_data_tax_rule_extension_interface {
}

message Tax_data_tax_rule_interface {
    // Calculate subtotal.
    bool calculate_subtotal = 1;
    // Tax rule code
    string code = 2;
    // Customer tax class id
    repeated int32 customer_tax_class_ids = 3;
    tax-data-tax-rule-extension-interface extension_attributes = 4;
    // Id
    int32 id = 5;
    // Sort order.
    int32 position = 6;
    // Priority
    int32 priority = 7;
    // Product tax class id
    repeated int32 product_tax_class_ids = 8;
    // Tax rate ids
    repeated int32 tax_rate_ids = 9;
}

message Tax_data_tax_rule_search_results_interface {
    // Items
    repeated tax-data-tax-rule-interface items = 1;
    framework-search-criteria-interface search_criteria = 2;
    // Total count.
    int32 total_count = 3;
}

message Vault_data_payment_token_interface {
    // Token creation timestamp
    string created_at = 1;
    // Customer ID.
    int32 customer_id = 2;
    // Entity ID.
    int32 entity_id = 3;
    // Token expiration timestamp
    string expires_at = 4;
    // Gateway token ID
    string gateway_token = 5;
    // Is active.
    bool is_active = 6;
    // Is visible.
    bool is_visible = 7;
    // Payment method code
    string payment_method_code = 8;
    // Public hash
    string public_hash = 9;
    // Token details
    string token_details = 10;
    // Type
    string type = 11;
}

service MagentoEnterpriseService {
    // Delete customer address by ID.
    rpc DeleteV1AddressesAddressId(DeleteV1AddressesAddressIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/addresses/{addressId}"
      };
    }
    // Get all attribute metadata.
    rpc GetV1AttributeMetadataCustomer(google.protobuf.Empty) returns (GetV1AttributeMetadataCustomerResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/attributeMetadata/customer"
      };
    }
    // Retrieve attribute metadata.
    rpc GetV1AttributeMetadataCustomerAttributeAttributeCode(GetV1AttributeMetadataCustomerAttributeAttributeCodeRequest) returns (Customer-Data-Attribute-Metadata-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/attributeMetadata/customer/attribute/{attributeCode}"
      };
    }
    // Get custom attributes metadata for the given data interface.
    rpc GetV1AttributeMetadataCustomerCustom(GetV1AttributeMetadataCustomerCustomRequest) returns (GetV1AttributeMetadataCustomerCustomResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/attributeMetadata/customer/custom"
      };
    }
    // Retrieve all attributes filtered by form code
    rpc GetV1AttributeMetadataCustomerFormFormCode(GetV1AttributeMetadataCustomerFormFormCodeRequest) returns (GetV1AttributeMetadataCustomerFormFormCodeResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/attributeMetadata/customer/form/{formCode}"
      };
    }
    // Get all attribute metadata.
    rpc GetV1AttributeMetadataCustomerAddress(google.protobuf.Empty) returns (GetV1AttributeMetadataCustomerAddressResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/attributeMetadata/customerAddress"
      };
    }
    // Retrieve attribute metadata.
    rpc GetV1AttributeMetadataCustomerAddressAttributeAttributeCode(GetV1AttributeMetadataCustomerAddressAttributeAttributeCodeRequest) returns (Customer-Data-Attribute-Metadata-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/attributeMetadata/customerAddress/attribute/{attributeCode}"
      };
    }
    // Get custom attributes metadata for the given data interface.
    rpc GetV1AttributeMetadataCustomerAddressCustom(GetV1AttributeMetadataCustomerAddressCustomRequest) returns (GetV1AttributeMetadataCustomerAddressCustomResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/attributeMetadata/customerAddress/custom"
      };
    }
    // Retrieve all attributes filtered by form code
    rpc GetV1AttributeMetadataCustomerAddressFormFormCode(GetV1AttributeMetadataCustomerAddressFormFormCodeRequest) returns (GetV1AttributeMetadataCustomerAddressFormFormCodeResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/attributeMetadata/customerAddress/form/{formCode}"
      };
    }
    // Add new option for bundle product
    rpc PostV1BundleProductsOptionsAdd(PostV1BundleProductsOptionsAddRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/bundle-products/options/add"
        body: "$body"
      };
    }
    // Get all types for options for bundle products
    rpc GetV1BundleProductsOptionsTypes(google.protobuf.Empty) returns (GetV1BundleProductsOptionsTypesResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/bundle-products/options/types"
      };
    }
    // Add new option for bundle product
    rpc PutV1BundleProductsOptionsOptionId(PutV1BundleProductsOptionsOptionIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "/rest/default/V1/bundle-products/options/{optionId}"
        body: "$body"
      };
    }
    // Get all children for Bundle product
    rpc GetV1BundleProductsProductSkuChildren(GetV1BundleProductsProductSkuChildrenRequest) returns (GetV1BundleProductsProductSkuChildrenResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/bundle-products/{productSku}/children"
      };
    }
    rpc PutV1BundleProductsSkuLinksId(PutV1BundleProductsSkuLinksIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "/rest/default/V1/bundle-products/{sku}/links/{id}"
        body: "$body"
      };
    }
    // Add child product to specified Bundle option by product sku
    rpc PostV1BundleProductsSkuLinksOptionId(PostV1BundleProductsSkuLinksOptionIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/bundle-products/{sku}/links/{optionId}"
        body: "$body"
      };
    }
    // Get all options for bundle product
    rpc GetV1BundleProductsSkuOptionsAll(GetV1BundleProductsSkuOptionsAllRequest) returns (GetV1BundleProductsSkuOptionsAllResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/bundle-products/{sku}/options/all"
      };
    }
    // Get option for bundle product
    rpc GetV1BundleProductsSkuOptionsOptionId(GetV1BundleProductsSkuOptionsOptionIdRequest) returns (Bundle-Data-Option-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/bundle-products/{sku}/options/{optionId}"
      };
    }
    // Remove bundle option
    rpc DeleteV1BundleProductsSkuOptionsOptionId(DeleteV1BundleProductsSkuOptionsOptionIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/bundle-products/{sku}/options/{optionId}"
      };
    }
    // Remove product from Bundle product option
    rpc DeleteV1BundleProductsSkuOptionsOptionIdChildrenChildSku(DeleteV1BundleProductsSkuOptionsOptionIdChildrenChildSkuRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/bundle-products/{sku}/options/{optionId}/children/{childSku}"
      };
    }
    // Creates an empty cart and quote for a guest.
    rpc PostV1Carts(google.protobuf.Empty) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/carts/"
      };
    }
    rpc GetV1CartsGuestCartsCartIdCheckGiftCardGiftCardCode(GetV1CartsGuestCartsCartIdCheckGiftCardGiftCardCodeRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/rest/default/V1/carts/guest-carts/{cartId}/checkGiftCard/{giftCardCode}"
      };
    }
    rpc PostV1CartsGuestCartsCartIdGiftCards(PostV1CartsGuestCartsCartIdGiftCardsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/carts/guest-carts/{cartId}/giftCards"
        body: "$body"
      };
    }
    // Remove GiftCard Account entity
    rpc DeleteV1CartsGuestCartsCartIdGiftCardsGiftCardCode(DeleteV1CartsGuestCartsCartIdGiftCardsGiftCardCodeRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/carts/guest-carts/{cartId}/giftCards/{giftCardCode}"
      };
    }
    // Lists active checkout agreements.
    rpc GetV1CartsLicence(google.protobuf.Empty) returns (GetV1CartsLicenceResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/carts/licence"
      };
    }
    // Returns information for the cart for a specified customer.
    rpc GetV1CartsMine(google.protobuf.Empty) returns (Quote-Data-Cart-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/carts/mine"
      };
    }
    // Save quote
    rpc PutV1CartsMine(PutV1CartsMineRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "/rest/default/V1/carts/mine"
        body: "$body"
      };
    }
    // Creates an empty cart and quote for a specified customer.
    rpc PostV1CartsMine(google.protobuf.Empty) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/carts/mine"
      };
    }
    // Apply store credit
    rpc PostV1CartsMineBalanceApply(google.protobuf.Empty) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/carts/mine/balance/apply"
      };
    }
    // Returns the billing address for a specified quote.
    rpc GetV1CartsMineBillingAddress(google.protobuf.Empty) returns (Quote-Data-Address-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/carts/mine/billing-address"
      };
    }
    // Assigns a specified billing address to a specified cart.
    rpc PostV1CartsMineBillingAddress(PostV1CartsMineBillingAddressRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/carts/mine/billing-address"
        body: "$body"
      };
    }
    rpc GetV1CartsMineCheckGiftCardGiftCardCode(GetV1CartsMineCheckGiftCardGiftCardCodeRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/rest/default/V1/carts/mine/checkGiftCard/{giftCardCode}"
      };
    }
    // Set shipping/billing methods and additional data for cart and collect totals.
    rpc PutV1CartsMineCollectTotals(PutV1CartsMineCollectTotalsRequest) returns (Quote-Data-Totals-Interface) {
      option (google.api.http) = {
        put: "/rest/default/V1/carts/mine/collect-totals"
        body: "$body"
      };
    }
    // Returns information for a coupon in a specified cart.
    rpc GetV1CartsMineCoupons(google.protobuf.Empty) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/rest/default/V1/carts/mine/coupons"
      };
    }
    // Deletes a coupon from a specified cart.
    rpc DeleteV1CartsMineCoupons(google.protobuf.Empty) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/carts/mine/coupons"
      };
    }
    // Adds a coupon by code to a specified cart.
    rpc PutV1CartsMineCouponsCouponCode(PutV1CartsMineCouponsCouponCodeRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "/rest/default/V1/carts/mine/coupons/{couponCode}"
      };
    }
    // Estimate shipping by address and return list of available shipping methods
    rpc PostV1CartsMineEstimateShippingMethods(PostV1CartsMineEstimateShippingMethodsRequest) returns (PostV1CartsMineEstimateShippingMethodsResponse) {
      option (google.api.http) = {
        post: "/rest/default/V1/carts/mine/estimate-shipping-methods"
        body: "$body"
      };
    }
    // Estimate shipping
    rpc PostV1CartsMineEstimateShippingMethodsByAddressId(PostV1CartsMineEstimateShippingMethodsByAddressIdRequest) returns (PostV1CartsMineEstimateShippingMethodsByAddressIdResponse) {
      option (google.api.http) = {
        post: "/rest/default/V1/carts/mine/estimate-shipping-methods-by-address-id"
        body: "$body"
      };
    }
    // Return the gift message for a specified order.
    rpc GetV1CartsMineGiftMessage(google.protobuf.Empty) returns (Gift-Message-Data-Message-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/carts/mine/gift-message"
      };
    }
    // Set the gift message for an entire order.
    rpc PostV1CartsMineGiftMessage(PostV1CartsMineGiftMessageRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/carts/mine/gift-message"
        body: "$body"
      };
    }
    // Return the gift message for a specified item in a specified shopping cart.
    rpc GetV1CartsMineGiftMessageItemId(GetV1CartsMineGiftMessageItemIdRequest) returns (Gift-Message-Data-Message-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/carts/mine/gift-message/{itemId}"
      };
    }
    // Set the gift message for a specified item in a specified shopping cart.
    rpc PostV1CartsMineGiftMessageItemId(PostV1CartsMineGiftMessageItemIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/carts/mine/gift-message/{itemId}"
        body: "$body"
      };
    }
    rpc PostV1CartsMineGiftCards(PostV1CartsMineGiftCardsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/carts/mine/giftCards"
        body: "$body"
      };
    }
    // Remove GiftCard Account entity
    rpc DeleteV1CartsMineGiftCardsGiftCardCode(DeleteV1CartsMineGiftCardsGiftCardCodeRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/carts/mine/giftCards/{giftCardCode}"
      };
    }
    // Lists items that are assigned to a specified cart.
    rpc GetV1CartsMineItems(google.protobuf.Empty) returns (GetV1CartsMineItemsResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/carts/mine/items"
      };
    }
    // Add/update the specified cart item.
    rpc PostV1CartsMineItems(PostV1CartsMineItemsRequest) returns (Quote-Data-Cart-Item-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/carts/mine/items"
        body: "$body"
      };
    }
    // Add/update the specified cart item.
    rpc PutV1CartsMineItemsItemId(PutV1CartsMineItemsItemIdRequest) returns (Quote-Data-Cart-Item-Interface) {
      option (google.api.http) = {
        put: "/rest/default/V1/carts/mine/items/{itemId}"
        body: "$body"
      };
    }
    // Removes the specified item from the specified cart.
    rpc DeleteV1CartsMineItemsItemId(DeleteV1CartsMineItemsItemIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/carts/mine/items/{itemId}"
      };
    }
    // Places an order for a specified cart.
    rpc PutV1CartsMineOrder(PutV1CartsMineOrderRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "/rest/default/V1/carts/mine/order"
        body: "$body"
      };
    }
    // Get payment information
    rpc GetV1CartsMinePaymentInformation(google.protobuf.Empty) returns (Checkout-Data-Payment-Details-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/carts/mine/payment-information"
      };
    }
    // Set payment information and place order for a specified cart.
    rpc PostV1CartsMinePaymentInformation(PostV1CartsMinePaymentInformationRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/carts/mine/payment-information"
        body: "$body"
      };
    }
    // Lists available payment methods for a specified shopping cart. This call returns an array of objects, but detailed information about each object’s attributes might not be included.  See http://devdocs.magento.com/codelinks/attributes.html#PaymentMethodManagementInterface to determine which call to use to get detailed information about all attributes for an object.
    rpc GetV1CartsMinePaymentMethods(google.protobuf.Empty) returns (GetV1CartsMinePaymentMethodsResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/carts/mine/payment-methods"
      };
    }
    // Returns the payment method for a specified shopping cart.
    rpc GetV1CartsMineSelectedPaymentMethod(google.protobuf.Empty) returns (Quote-Data-Payment-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/carts/mine/selected-payment-method"
      };
    }
    // Adds a specified payment method to a specified shopping cart.
    rpc PutV1CartsMineSelectedPaymentMethod(PutV1CartsMineSelectedPaymentMethodRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "/rest/default/V1/carts/mine/selected-payment-method"
        body: "$body"
      };
    }
    // Set payment information for a specified cart.
    rpc PostV1CartsMineSetPaymentInformation(PostV1CartsMineSetPaymentInformationRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/carts/mine/set-payment-information"
        body: "$body"
      };
    }
    rpc PostV1CartsMineShippingInformation(PostV1CartsMineShippingInformationRequest) returns (Checkout-Data-Payment-Details-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/carts/mine/shipping-information"
        body: "$body"
      };
    }
    // Lists applicable shipping methods for a specified quote.
    rpc GetV1CartsMineShippingMethods(google.protobuf.Empty) returns (GetV1CartsMineShippingMethodsResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/carts/mine/shipping-methods"
      };
    }
    // Returns quote totals data for a specified cart.
    rpc GetV1CartsMineTotals(google.protobuf.Empty) returns (Quote-Data-Totals-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/carts/mine/totals"
      };
    }
    // Calculate quote totals based on address and shipping method.
    rpc PostV1CartsMineTotalsInformation(PostV1CartsMineTotalsInformationRequest) returns (Quote-Data-Totals-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/carts/mine/totals-information"
        body: "$body"
      };
    }
    // Enables administrative users to list carts that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included.  See http://devdocs.magento.com/codelinks/attributes.html#CartRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.
    rpc GetV1CartsSearch(GetV1CartsSearchRequest) returns (Quote-Data-Cart-Search-Results-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/carts/search"
      };
    }
    // Enables an administrative user to return information for a specified cart.
    rpc GetV1CartsCartId(GetV1CartsCartIdRequest) returns (Quote-Data-Cart-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/carts/{cartId}"
      };
    }
    // Assigns a specified customer to a specified shopping cart.
    rpc PutV1CartsCartId(PutV1CartsCartIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "/rest/default/V1/carts/{cartId}"
        body: "$body"
      };
    }
    // Returns the billing address for a specified quote.
    rpc GetV1CartsCartIdBillingAddress(GetV1CartsCartIdBillingAddressRequest) returns (Quote-Data-Address-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/carts/{cartId}/billing-address"
      };
    }
    // Assigns a specified billing address to a specified cart.
    rpc PostV1CartsCartIdBillingAddress(PostV1CartsCartIdBillingAddressRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/carts/{cartId}/billing-address"
        body: "$body"
      };
    }
    // Returns information for a coupon in a specified cart.
    rpc GetV1CartsCartIdCoupons(GetV1CartsCartIdCouponsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/rest/default/V1/carts/{cartId}/coupons"
      };
    }
    // Deletes a coupon from a specified cart.
    rpc DeleteV1CartsCartIdCoupons(DeleteV1CartsCartIdCouponsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/carts/{cartId}/coupons"
      };
    }
    // Adds a coupon by code to a specified cart.
    rpc PutV1CartsCartIdCouponsCouponCode(PutV1CartsCartIdCouponsCouponCodeRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "/rest/default/V1/carts/{cartId}/coupons/{couponCode}"
      };
    }
    // Estimate shipping by address and return list of available shipping methods
    rpc PostV1CartsCartIdEstimateShippingMethods(PostV1CartsCartIdEstimateShippingMethodsRequest) returns (PostV1CartsCartIdEstimateShippingMethodsResponse) {
      option (google.api.http) = {
        post: "/rest/default/V1/carts/{cartId}/estimate-shipping-methods"
        body: "$body"
      };
    }
    // Estimate shipping
    rpc PostV1CartsCartIdEstimateShippingMethodsByAddressId(PostV1CartsCartIdEstimateShippingMethodsByAddressIdRequest) returns (PostV1CartsCartIdEstimateShippingMethodsByAddressIdResponse) {
      option (google.api.http) = {
        post: "/rest/default/V1/carts/{cartId}/estimate-shipping-methods-by-address-id"
        body: "$body"
      };
    }
    // Return the gift message for a specified order.
    rpc GetV1CartsCartIdGiftMessage(GetV1CartsCartIdGiftMessageRequest) returns (Gift-Message-Data-Message-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/carts/{cartId}/gift-message"
      };
    }
    // Set the gift message for an entire order.
    rpc PostV1CartsCartIdGiftMessage(PostV1CartsCartIdGiftMessageRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/carts/{cartId}/gift-message"
        body: "$body"
      };
    }
    // Return the gift message for a specified item in a specified shopping cart.
    rpc GetV1CartsCartIdGiftMessageItemId(GetV1CartsCartIdGiftMessageItemIdRequest) returns (Gift-Message-Data-Message-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/carts/{cartId}/gift-message/{itemId}"
      };
    }
    // Set the gift message for a specified item in a specified shopping cart.
    rpc PostV1CartsCartIdGiftMessageItemId(PostV1CartsCartIdGiftMessageItemIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/carts/{cartId}/gift-message/{itemId}"
        body: "$body"
      };
    }
    rpc PutV1CartsCartIdGiftCards(PutV1CartsCartIdGiftCardsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "/rest/default/V1/carts/{cartId}/giftCards"
        body: "$body"
      };
    }
    // Remove GiftCard Account entity
    rpc DeleteV1CartsCartIdGiftCardsGiftCardCode(DeleteV1CartsCartIdGiftCardsGiftCardCodeRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/carts/{cartId}/giftCards/{giftCardCode}"
      };
    }
    // Lists items that are assigned to a specified cart.
    rpc GetV1CartsCartIdItems(GetV1CartsCartIdItemsRequest) returns (GetV1CartsCartIdItemsResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/carts/{cartId}/items"
      };
    }
    // Add/update the specified cart item.
    rpc PutV1CartsCartIdItemsItemId(PutV1CartsCartIdItemsItemIdRequest) returns (Quote-Data-Cart-Item-Interface) {
      option (google.api.http) = {
        put: "/rest/default/V1/carts/{cartId}/items/{itemId}"
        body: "$body"
      };
    }
    // Removes the specified item from the specified cart.
    rpc DeleteV1CartsCartIdItemsItemId(DeleteV1CartsCartIdItemsItemIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/carts/{cartId}/items/{itemId}"
      };
    }
    // Places an order for a specified cart.
    rpc PutV1CartsCartIdOrder(PutV1CartsCartIdOrderRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "/rest/default/V1/carts/{cartId}/order"
        body: "$body"
      };
    }
    // Lists available payment methods for a specified shopping cart. This call returns an array of objects, but detailed information about each object’s attributes might not be included.  See http://devdocs.magento.com/codelinks/attributes.html#PaymentMethodManagementInterface to determine which call to use to get detailed information about all attributes for an object.
    rpc GetV1CartsCartIdPaymentMethods(GetV1CartsCartIdPaymentMethodsRequest) returns (GetV1CartsCartIdPaymentMethodsResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/carts/{cartId}/payment-methods"
      };
    }
    // Returns the payment method for a specified shopping cart.
    rpc GetV1CartsCartIdSelectedPaymentMethod(GetV1CartsCartIdSelectedPaymentMethodRequest) returns (Quote-Data-Payment-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/carts/{cartId}/selected-payment-method"
      };
    }
    // Adds a specified payment method to a specified shopping cart.
    rpc PutV1CartsCartIdSelectedPaymentMethod(PutV1CartsCartIdSelectedPaymentMethodRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "/rest/default/V1/carts/{cartId}/selected-payment-method"
        body: "$body"
      };
    }
    rpc PostV1CartsCartIdShippingInformation(PostV1CartsCartIdShippingInformationRequest) returns (Checkout-Data-Payment-Details-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/carts/{cartId}/shipping-information"
        body: "$body"
      };
    }
    // Lists applicable shipping methods for a specified quote.
    rpc GetV1CartsCartIdShippingMethods(GetV1CartsCartIdShippingMethodsRequest) returns (GetV1CartsCartIdShippingMethodsResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/carts/{cartId}/shipping-methods"
      };
    }
    // Returns quote totals data for a specified cart.
    rpc GetV1CartsCartIdTotals(GetV1CartsCartIdTotalsRequest) returns (Quote-Data-Totals-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/carts/{cartId}/totals"
      };
    }
    // Calculate quote totals based on address and shipping method.
    rpc PostV1CartsCartIdTotalsInformation(PostV1CartsCartIdTotalsInformationRequest) returns (Quote-Data-Totals-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/carts/{cartId}/totals-information"
        body: "$body"
      };
    }
    // Return GiftCard Account cards
    rpc GetV1CartsQuoteIdGiftCards(GetV1CartsQuoteIdGiftCardsRequest) returns (Gift-Card-Account-Data-Gift-Card-Account-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/carts/{quoteId}/giftCards"
      };
    }
    // Add/update the specified cart item.
    rpc PostV1CartsQuoteIdItems(PostV1CartsQuoteIdItemsRequest) returns (Quote-Data-Cart-Item-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/carts/{quoteId}/items"
        body: "$body"
      };
    }
    // Retrieve list of categories
    rpc GetV1Categories(GetV1CategoriesRequest) returns (Catalog-Data-Category-Tree-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/categories"
      };
    }
    // Create category service
    rpc PostV1Categories(PostV1CategoriesRequest) returns (Catalog-Data-Category-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/categories"
        body: "$body"
      };
    }
    // Retrieve all attributes for entity type
    rpc GetV1CategoriesAttributes(GetV1CategoriesAttributesRequest) returns (Catalog-Data-Category-Attribute-Search-Results-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/categories/attributes"
      };
    }
    // Retrieve specific attribute
    rpc GetV1CategoriesAttributesAttributeCode(GetV1CategoriesAttributesAttributeCodeRequest) returns (Catalog-Data-Category-Attribute-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/categories/attributes/{attributeCode}"
      };
    }
    // Retrieve list of attribute options
    rpc GetV1CategoriesAttributesAttributeCodeOptions(GetV1CategoriesAttributesAttributeCodeOptionsRequest) returns (GetV1CategoriesAttributesAttributeCodeOptionsResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/categories/attributes/{attributeCode}/options"
      };
    }
    // Get info about category by category id
    rpc GetV1CategoriesCategoryId(GetV1CategoriesCategoryIdRequest) returns (Catalog-Data-Category-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/categories/{categoryId}"
      };
    }
    // Delete category by identifier
    rpc DeleteV1CategoriesCategoryId(DeleteV1CategoriesCategoryIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/categories/{categoryId}"
      };
    }
    // Move category
    rpc PutV1CategoriesCategoryIdMove(PutV1CategoriesCategoryIdMoveRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "/rest/default/V1/categories/{categoryId}/move"
        body: "$body"
      };
    }
    // Get products assigned to category
    rpc GetV1CategoriesCategoryIdProducts(GetV1CategoriesCategoryIdProductsRequest) returns (GetV1CategoriesCategoryIdProductsResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/categories/{categoryId}/products"
      };
    }
    // Assign a product to the required category
    rpc PutV1CategoriesCategoryIdProducts(PutV1CategoriesCategoryIdProductsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "/rest/default/V1/categories/{categoryId}/products"
        body: "$body"
      };
    }
    // Assign a product to the required category
    rpc PostV1CategoriesCategoryIdProducts(PostV1CategoriesCategoryIdProductsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/categories/{categoryId}/products"
        body: "$body"
      };
    }
    // Remove the product assignment from the category by category id and sku
    rpc DeleteV1CategoriesCategoryIdProductsSku(DeleteV1CategoriesCategoryIdProductsSkuRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/categories/{categoryId}/products/{sku}"
      };
    }
    // Create category service
    rpc PutV1CategoriesId(PutV1CategoriesIdRequest) returns (Catalog-Data-Category-Interface) {
      option (google.api.http) = {
        put: "/rest/default/V1/categories/{id}"
        body: "$body"
      };
    }
    // Save block.
    rpc PostV1CmsBlock(PostV1CmsBlockRequest) returns (Cms-Data-Block-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/cmsBlock"
        body: "$body"
      };
    }
    // Retrieve blocks matching the specified criteria.
    rpc GetV1CmsBlockSearch(GetV1CmsBlockSearchRequest) returns (Cms-Data-Block-Search-Results-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/cmsBlock/search"
      };
    }
    // Retrieve block.
    rpc GetV1CmsBlockBlockId(GetV1CmsBlockBlockIdRequest) returns (Cms-Data-Block-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/cmsBlock/{blockId}"
      };
    }
    // Delete block by ID.
    rpc DeleteV1CmsBlockBlockId(DeleteV1CmsBlockBlockIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/cmsBlock/{blockId}"
      };
    }
    // Save block.
    rpc PutV1CmsBlockId(PutV1CmsBlockIdRequest) returns (Cms-Data-Block-Interface) {
      option (google.api.http) = {
        put: "/rest/default/V1/cmsBlock/{id}"
        body: "$body"
      };
    }
    // Save page.
    rpc PostV1CmsPage(PostV1CmsPageRequest) returns (Cms-Data-Page-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/cmsPage"
        body: "$body"
      };
    }
    // Retrieve pages matching the specified criteria.
    rpc GetV1CmsPageSearch(GetV1CmsPageSearchRequest) returns (Cms-Data-Page-Search-Results-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/cmsPage/search"
      };
    }
    // Save page.
    rpc PutV1CmsPageId(PutV1CmsPageIdRequest) returns (Cms-Data-Page-Interface) {
      option (google.api.http) = {
        put: "/rest/default/V1/cmsPage/{id}"
        body: "$body"
      };
    }
    // Retrieve page.
    rpc GetV1CmsPagePageId(GetV1CmsPagePageIdRequest) returns (Cms-Data-Page-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/cmsPage/{pageId}"
      };
    }
    // Delete page by ID.
    rpc DeleteV1CmsPagePageId(DeleteV1CmsPagePageIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/cmsPage/{pageId}"
      };
    }
    // Generate variation based on same product
    rpc PutV1ConfigurableProductsVariation(PutV1ConfigurableProductsVariationRequest) returns (PutV1ConfigurableProductsVariationResponse) {
      option (google.api.http) = {
        put: "/rest/default/V1/configurable-products/variation"
        body: "$body"
      };
    }
    rpc PostV1ConfigurableProductsSkuChild(PostV1ConfigurableProductsSkuChildRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/configurable-products/{sku}/child"
        body: "$body"
      };
    }
    // Get all children for Configurable product
    rpc GetV1ConfigurableProductsSkuChildren(GetV1ConfigurableProductsSkuChildrenRequest) returns (GetV1ConfigurableProductsSkuChildrenResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/configurable-products/{sku}/children"
      };
    }
    // Remove configurable product option
    rpc DeleteV1ConfigurableProductsSkuChildrenChildSku(DeleteV1ConfigurableProductsSkuChildrenChildSkuRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/configurable-products/{sku}/children/{childSku}"
      };
    }
    // Save option
    rpc PostV1ConfigurableProductsSkuOptions(PostV1ConfigurableProductsSkuOptionsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/configurable-products/{sku}/options"
        body: "$body"
      };
    }
    // Get all options for configurable product
    rpc GetV1ConfigurableProductsSkuOptionsAll(GetV1ConfigurableProductsSkuOptionsAllRequest) returns (GetV1ConfigurableProductsSkuOptionsAllResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/configurable-products/{sku}/options/all"
      };
    }
    // Get option for configurable product
    rpc GetV1ConfigurableProductsSkuOptionsId(GetV1ConfigurableProductsSkuOptionsIdRequest) returns (Configurable-Product-Data-Option-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/configurable-products/{sku}/options/{id}"
      };
    }
    // Save option
    rpc PutV1ConfigurableProductsSkuOptionsId(PutV1ConfigurableProductsSkuOptionsIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "/rest/default/V1/configurable-products/{sku}/options/{id}"
        body: "$body"
      };
    }
    // Remove option from configurable product
    rpc DeleteV1ConfigurableProductsSkuOptionsId(DeleteV1ConfigurableProductsSkuOptionsIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/configurable-products/{sku}/options/{id}"
      };
    }
    // Save a coupon.
    rpc PostV1Coupons(PostV1CouponsRequest) returns (Sales-Rule-Data-Coupon-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/coupons"
        body: "$body"
      };
    }
    // Delete coupon by coupon codes.
    rpc PostV1CouponsDeleteByCodes(PostV1CouponsDeleteByCodesRequest) returns (Sales-Rule-Data-Coupon-Mass-Delete-Result-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/coupons/deleteByCodes"
        body: "$body"
      };
    }
    // Delete coupon by coupon ids.
    rpc PostV1CouponsDeleteByIds(PostV1CouponsDeleteByIdsRequest) returns (Sales-Rule-Data-Coupon-Mass-Delete-Result-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/coupons/deleteByIds"
        body: "$body"
      };
    }
    // Generate coupon for a rule
    rpc PostV1CouponsGenerate(PostV1CouponsGenerateRequest) returns (PostV1CouponsGenerateResponse) {
      option (google.api.http) = {
        post: "/rest/default/V1/coupons/generate"
        body: "$body"
      };
    }
    // Retrieve a coupon using the specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#CouponRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.
    rpc GetV1CouponsSearch(GetV1CouponsSearchRequest) returns (Sales-Rule-Data-Coupon-Search-Result-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/coupons/search"
      };
    }
    // Get coupon by coupon id.
    rpc GetV1CouponsCouponId(GetV1CouponsCouponIdRequest) returns (Sales-Rule-Data-Coupon-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/coupons/{couponId}"
      };
    }
    // Save a coupon.
    rpc PutV1CouponsCouponId(PutV1CouponsCouponIdRequest) returns (Sales-Rule-Data-Coupon-Interface) {
      option (google.api.http) = {
        put: "/rest/default/V1/coupons/{couponId}"
        body: "$body"
      };
    }
    // Delete coupon by coupon id.
    rpc DeleteV1CouponsCouponId(DeleteV1CouponsCouponIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/coupons/{couponId}"
      };
    }
    // Performs persist operations for a specified credit memo.
    rpc PostV1Creditmemo(PostV1CreditmemoRequest) returns (Sales-Data-Creditmemo-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/creditmemo"
        body: "$body"
      };
    }
    // Prepare creditmemo to refund and save it.
    rpc PostV1CreditmemoRefund(PostV1CreditmemoRefundRequest) returns (Sales-Data-Creditmemo-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/creditmemo/refund"
        body: "$body"
      };
    }
    // Loads a specified credit memo.
    rpc GetV1CreditmemoId(GetV1CreditmemoIdRequest) returns (Sales-Data-Creditmemo-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/creditmemo/{id}"
      };
    }
    // Cancels a specified credit memo.
    rpc PutV1CreditmemoId(PutV1CreditmemoIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "/rest/default/V1/creditmemo/{id}"
      };
    }
    // Lists comments for a specified credit memo.
    rpc GetV1CreditmemoIdComments(GetV1CreditmemoIdCommentsRequest) returns (Sales-Data-Creditmemo-Comment-Search-Result-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/creditmemo/{id}/comments"
      };
    }
    // Performs persist operations for a specified entity.
    rpc PostV1CreditmemoIdComments(PostV1CreditmemoIdCommentsRequest) returns (Sales-Data-Creditmemo-Comment-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/creditmemo/{id}/comments"
        body: "$body"
      };
    }
    // Emails a user a specified credit memo.
    rpc PostV1CreditmemoIdEmails(PostV1CreditmemoIdEmailsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/creditmemo/{id}/emails"
      };
    }
    // Lists credit memos that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#CreditmemoRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.
    rpc GetV1Creditmemos(GetV1CreditmemosRequest) returns (Sales-Data-Creditmemo-Search-Result-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/creditmemos"
      };
    }
    // Save customer group.
    rpc PostV1CustomerGroups(PostV1CustomerGroupsRequest) returns (Customer-Data-Group-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/customerGroups"
        body: "$body"
      };
    }
    // Get default customer group.
    rpc GetV1CustomerGroupsDefault(GetV1CustomerGroupsDefaultRequest) returns (Customer-Data-Group-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/customerGroups/default"
      };
    }
    // Get default customer group.
    rpc GetV1CustomerGroupsDefaultStoreId(GetV1CustomerGroupsDefaultStoreIdRequest) returns (Customer-Data-Group-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/customerGroups/default/{storeId}"
      };
    }
    // Retrieve customer groups. The list of groups can be filtered to exclude the NOT_LOGGED_IN group using the first parameter and/or it can be filtered by tax class. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#GroupRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.
    rpc GetV1CustomerGroupsSearch(GetV1CustomerGroupsSearchRequest) returns (Customer-Data-Group-Search-Results-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/customerGroups/search"
      };
    }
    // Get customer group by group ID.
    rpc GetV1CustomerGroupsId(GetV1CustomerGroupsIdRequest) returns (Customer-Data-Group-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/customerGroups/{id}"
      };
    }
    // Save customer group.
    rpc PutV1CustomerGroupsId(PutV1CustomerGroupsIdRequest) returns (Customer-Data-Group-Interface) {
      option (google.api.http) = {
        put: "/rest/default/V1/customerGroups/{id}"
        body: "$body"
      };
    }
    // Delete customer group by ID.
    rpc DeleteV1CustomerGroupsId(DeleteV1CustomerGroupsIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/customerGroups/{id}"
      };
    }
    // Check if customer group can be deleted.
    rpc GetV1CustomerGroupsIdPermissions(GetV1CustomerGroupsIdPermissionsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/rest/default/V1/customerGroups/{id}/permissions"
      };
    }
    // Create customer account. Perform necessary business operations like sending email.
    rpc PostV1Customers(PostV1CustomersRequest) returns (Customer-Data-Customer-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/customers"
        body: "$body"
      };
    }
    // Retrieve customer address.
    rpc GetV1CustomersAddressesAddressId(GetV1CustomersAddressesAddressIdRequest) returns (Customer-Data-Address-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/customers/addresses/{addressId}"
      };
    }
    // Resend confirmation email.
    rpc PostV1CustomersConfirm(PostV1CustomersConfirmRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/customers/confirm"
        body: "$body"
      };
    }
    // Check if given email is associated with a customer account in given website.
    rpc PostV1CustomersIsEmailAvailable(PostV1CustomersIsEmailAvailableRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/customers/isEmailAvailable"
        body: "$body"
      };
    }
    // Get customer by customer ID.
    rpc GetV1CustomersMe(google.protobuf.Empty) returns (Customer-Data-Customer-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/customers/me"
      };
    }
    // Create or update a customer.
    rpc PutV1CustomersMe(PutV1CustomersMeRequest) returns (Customer-Data-Customer-Interface) {
      option (google.api.http) = {
        put: "/rest/default/V1/customers/me"
        body: "$body"
      };
    }
    // Activate a customer account using a key that was sent in a confirmation email.
    rpc PutV1CustomersMeActivate(PutV1CustomersMeActivateRequest) returns (Customer-Data-Customer-Interface) {
      option (google.api.http) = {
        put: "/rest/default/V1/customers/me/activate"
        body: "$body"
      };
    }
    // Retrieve default billing address for the given customerId.
    rpc GetV1CustomersMeBillingAddress(google.protobuf.Empty) returns (Customer-Data-Address-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/customers/me/billingAddress"
      };
    }
    // Change customer password.
    rpc PutV1CustomersMePassword(PutV1CustomersMePasswordRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "/rest/default/V1/customers/me/password"
        body: "$body"
      };
    }
    // Retrieve default shipping address for the given customerId.
    rpc GetV1CustomersMeShippingAddress(google.protobuf.Empty) returns (Customer-Data-Address-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/customers/me/shippingAddress"
      };
    }
    // Send an email to the customer with a password reset link.
    rpc PutV1CustomersPassword(PutV1CustomersPasswordRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "/rest/default/V1/customers/password"
        body: "$body"
      };
    }
    // Retrieve customers which match a specified criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#CustomerRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.
    rpc GetV1CustomersSearch(GetV1CustomersSearchRequest) returns (Customer-Data-Customer-Search-Results-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/customers/search"
      };
    }
    // Validate customer data.
    rpc PutV1CustomersValidate(PutV1CustomersValidateRequest) returns (Customer-Data-Validation-Results-Interface) {
      option (google.api.http) = {
        put: "/rest/default/V1/customers/validate"
        body: "$body"
      };
    }
    // Get customer by customer ID.
    rpc GetV1CustomersCustomerId(GetV1CustomersCustomerIdRequest) returns (Customer-Data-Customer-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/customers/{customerId}"
      };
    }
    // Delete customer by ID.
    rpc DeleteV1CustomersCustomerId(DeleteV1CustomersCustomerIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/customers/{customerId}"
      };
    }
    // Retrieve default billing address for the given customerId.
    rpc GetV1CustomersCustomerIdBillingAddress(GetV1CustomersCustomerIdBillingAddressRequest) returns (Customer-Data-Address-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/customers/{customerId}/billingAddress"
      };
    }
    // Creates an empty cart and quote for a specified customer.
    rpc PostV1CustomersCustomerIdCarts(PostV1CustomersCustomerIdCartsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/customers/{customerId}/carts"
      };
    }
    // Gets the account confirmation status.
    rpc GetV1CustomersCustomerIdConfirm(GetV1CustomersCustomerIdConfirmRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/rest/default/V1/customers/{customerId}/confirm"
      };
    }
    // Check if password reset token is valid.
    rpc GetV1CustomersCustomerIdPasswordResetLinkTokenResetPasswordLinkToken(GetV1CustomersCustomerIdPasswordResetLinkTokenResetPasswordLinkTokenRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/rest/default/V1/customers/{customerId}/password/resetLinkToken/{resetPasswordLinkToken}"
      };
    }
    // Check if customer can be deleted.
    rpc GetV1CustomersCustomerIdPermissionsReadonly(GetV1CustomersCustomerIdPermissionsReadonlyRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/rest/default/V1/customers/{customerId}/permissions/readonly"
      };
    }
    // Retrieve default shipping address for the given customerId.
    rpc GetV1CustomersCustomerIdShippingAddress(GetV1CustomersCustomerIdShippingAddressRequest) returns (Customer-Data-Address-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/customers/{customerId}/shippingAddress"
      };
    }
    // Activate a customer account using a key that was sent in a confirmation email.
    rpc PutV1CustomersEmailActivate(PutV1CustomersEmailActivateRequest) returns (Customer-Data-Customer-Interface) {
      option (google.api.http) = {
        put: "/rest/default/V1/customers/{email}/activate"
        body: "$body"
      };
    }
    // Create or update a customer.
    rpc PutV1CustomersId(PutV1CustomersIdRequest) returns (Customer-Data-Customer-Interface) {
      option (google.api.http) = {
        put: "/rest/default/V1/customers/{id}"
        body: "$body"
      };
    }
    // Get all countries and regions information for the store.
    rpc GetV1DirectoryCountries(google.protobuf.Empty) returns (GetV1DirectoryCountriesResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/directory/countries"
      };
    }
    // Get country and region information for the store.
    rpc GetV1DirectoryCountriesCountryId(GetV1DirectoryCountriesCountryIdRequest) returns (Directory-Data-Country-Information-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/directory/countries/{countryId}"
      };
    }
    // Get currency information for the store.
    rpc GetV1DirectoryCurrency(google.protobuf.Empty) returns (Directory-Data-Currency-Information-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/directory/currency"
      };
    }
    // Create attribute set from data
    rpc PostV1EavAttributeSets(PostV1EavAttributeSetsRequest) returns (Eav-Data-Attribute-Set-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/eav/attribute-sets"
        body: "$body"
      };
    }
    // Retrieve list of Attribute Sets This call returns an array of objects, but detailed information about each object’s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#AttributeSetRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.
    rpc GetV1EavAttributeSetsList(GetV1EavAttributeSetsListRequest) returns (Eav-Data-Attribute-Set-Search-Results-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/eav/attribute-sets/list"
      };
    }
    // Retrieve attribute set information based on given ID
    rpc GetV1EavAttributeSetsAttributeSetId(GetV1EavAttributeSetsAttributeSetIdRequest) returns (Eav-Data-Attribute-Set-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/eav/attribute-sets/{attributeSetId}"
      };
    }
    // Save attribute set data
    rpc PutV1EavAttributeSetsAttributeSetId(PutV1EavAttributeSetsAttributeSetIdRequest) returns (Eav-Data-Attribute-Set-Interface) {
      option (google.api.http) = {
        put: "/rest/default/V1/eav/attribute-sets/{attributeSetId}"
        body: "$body"
      };
    }
    // Remove attribute set by given ID
    rpc DeleteV1EavAttributeSetsAttributeSetId(DeleteV1EavAttributeSetsAttributeSetIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/eav/attribute-sets/{attributeSetId}"
      };
    }
    // Return list of gift wrapping data objects based on search criteria
    rpc GetV1GiftWrappings(GetV1GiftWrappingsRequest) returns (Gift-Wrapping-Data-Wrapping-Search-Results-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/gift-wrappings"
      };
    }
    // Create/Update new gift wrapping with data object values
    rpc PostV1GiftWrappings(PostV1GiftWrappingsRequest) returns (Gift-Wrapping-Data-Wrapping-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/gift-wrappings"
        body: "$body"
      };
    }
    // Return data object for specified wrapping ID and store.
    rpc GetV1GiftWrappingsId(GetV1GiftWrappingsIdRequest) returns (Gift-Wrapping-Data-Wrapping-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/gift-wrappings/{id}"
      };
    }
    // Delete gift wrapping
    rpc DeleteV1GiftWrappingsId(DeleteV1GiftWrappingsIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/gift-wrappings/{id}"
      };
    }
    // Create/Update new gift wrapping with data object values
    rpc PutV1GiftWrappingsWrappingId(PutV1GiftWrappingsWrappingIdRequest) returns (Gift-Wrapping-Data-Wrapping-Interface) {
      option (google.api.http) = {
        put: "/rest/default/V1/gift-wrappings/{wrappingId}"
        body: "$body"
      };
    }
    // Estimate shipping
    rpc PostV1GiftregistryMineEstimateShippingMethods(PostV1GiftregistryMineEstimateShippingMethodsRequest) returns (PostV1GiftregistryMineEstimateShippingMethodsResponse) {
      option (google.api.http) = {
        post: "/rest/default/V1/giftregistry/mine/estimate-shipping-methods"
        body: "$body"
      };
    }
    // Enable an customer or guest user to create an empty cart and quote for an anonymous customer.
    rpc PostV1GuestCarts(google.protobuf.Empty) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/guest-carts"
      };
    }
    // Enable a guest user to return information for a specified cart.
    rpc GetV1GuestCartsCartId(GetV1GuestCartsCartIdRequest) returns (Quote-Data-Cart-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/guest-carts/{cartId}"
      };
    }
    // Assign a specified customer to a specified shopping cart.
    rpc PutV1GuestCartsCartId(PutV1GuestCartsCartIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "/rest/default/V1/guest-carts/{cartId}"
        body: "$body"
      };
    }
    // Return the billing address for a specified quote.
    rpc GetV1GuestCartsCartIdBillingAddress(GetV1GuestCartsCartIdBillingAddressRequest) returns (Quote-Data-Address-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/guest-carts/{cartId}/billing-address"
      };
    }
    // Assign a specified billing address to a specified cart.
    rpc PostV1GuestCartsCartIdBillingAddress(PostV1GuestCartsCartIdBillingAddressRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/guest-carts/{cartId}/billing-address"
        body: "$body"
      };
    }
    // Set shipping/billing methods and additional data for cart and collect totals for guest.
    rpc PutV1GuestCartsCartIdCollectTotals(PutV1GuestCartsCartIdCollectTotalsRequest) returns (Quote-Data-Totals-Interface) {
      option (google.api.http) = {
        put: "/rest/default/V1/guest-carts/{cartId}/collect-totals"
        body: "$body"
      };
    }
    // Return information for a coupon in a specified cart.
    rpc GetV1GuestCartsCartIdCoupons(GetV1GuestCartsCartIdCouponsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/rest/default/V1/guest-carts/{cartId}/coupons"
      };
    }
    // Delete a coupon from a specified cart.
    rpc DeleteV1GuestCartsCartIdCoupons(DeleteV1GuestCartsCartIdCouponsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/guest-carts/{cartId}/coupons"
      };
    }
    // Add a coupon by code to a specified cart.
    rpc PutV1GuestCartsCartIdCouponsCouponCode(PutV1GuestCartsCartIdCouponsCouponCodeRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "/rest/default/V1/guest-carts/{cartId}/coupons/{couponCode}"
      };
    }
    // Estimate shipping by address and return list of available shipping methods
    rpc PostV1GuestCartsCartIdEstimateShippingMethods(PostV1GuestCartsCartIdEstimateShippingMethodsRequest) returns (PostV1GuestCartsCartIdEstimateShippingMethodsResponse) {
      option (google.api.http) = {
        post: "/rest/default/V1/guest-carts/{cartId}/estimate-shipping-methods"
        body: "$body"
      };
    }
    // Return the gift message for a specified order.
    rpc GetV1GuestCartsCartIdGiftMessage(GetV1GuestCartsCartIdGiftMessageRequest) returns (Gift-Message-Data-Message-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/guest-carts/{cartId}/gift-message"
      };
    }
    // Set the gift message for an entire order.
    rpc PostV1GuestCartsCartIdGiftMessage(PostV1GuestCartsCartIdGiftMessageRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/guest-carts/{cartId}/gift-message"
        body: "$body"
      };
    }
    // Return the gift message for a specified item in a specified shopping cart.
    rpc GetV1GuestCartsCartIdGiftMessageItemId(GetV1GuestCartsCartIdGiftMessageItemIdRequest) returns (Gift-Message-Data-Message-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/guest-carts/{cartId}/gift-message/{itemId}"
      };
    }
    // Set the gift message for a specified item in a specified shopping cart.
    rpc PostV1GuestCartsCartIdGiftMessageItemId(PostV1GuestCartsCartIdGiftMessageItemIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/guest-carts/{cartId}/gift-message/{itemId}"
        body: "$body"
      };
    }
    // List items that are assigned to a specified cart.
    rpc GetV1GuestCartsCartIdItems(GetV1GuestCartsCartIdItemsRequest) returns (GetV1GuestCartsCartIdItemsResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/guest-carts/{cartId}/items"
      };
    }
    // Add the specified item to the specified cart.
    rpc PostV1GuestCartsCartIdItems(PostV1GuestCartsCartIdItemsRequest) returns (Quote-Data-Cart-Item-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/guest-carts/{cartId}/items"
        body: "$body"
      };
    }
    // Add the specified item to the specified cart.
    rpc PutV1GuestCartsCartIdItemsItemId(PutV1GuestCartsCartIdItemsItemIdRequest) returns (Quote-Data-Cart-Item-Interface) {
      option (google.api.http) = {
        put: "/rest/default/V1/guest-carts/{cartId}/items/{itemId}"
        body: "$body"
      };
    }
    // Remove the specified item from the specified cart.
    rpc DeleteV1GuestCartsCartIdItemsItemId(DeleteV1GuestCartsCartIdItemsItemIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/guest-carts/{cartId}/items/{itemId}"
      };
    }
    // Place an order for a specified cart.
    rpc PutV1GuestCartsCartIdOrder(PutV1GuestCartsCartIdOrderRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "/rest/default/V1/guest-carts/{cartId}/order"
        body: "$body"
      };
    }
    // Get payment information
    rpc GetV1GuestCartsCartIdPaymentInformation(GetV1GuestCartsCartIdPaymentInformationRequest) returns (Checkout-Data-Payment-Details-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/guest-carts/{cartId}/payment-information"
      };
    }
    // Set payment information and place order for a specified cart.
    rpc PostV1GuestCartsCartIdPaymentInformation(PostV1GuestCartsCartIdPaymentInformationRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/guest-carts/{cartId}/payment-information"
        body: "$body"
      };
    }
    // List available payment methods for a specified shopping cart. This call returns an array of objects, but detailed information about each object’s attributes might not be included.  See http://devdocs.magento.com/codelinks/attributes.html#GuestPaymentMethodManagementInterface to determine which call to use to get detailed information about all attributes for an object.
    rpc GetV1GuestCartsCartIdPaymentMethods(GetV1GuestCartsCartIdPaymentMethodsRequest) returns (GetV1GuestCartsCartIdPaymentMethodsResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/guest-carts/{cartId}/payment-methods"
      };
    }
    // Return the payment method for a specified shopping cart.
    rpc GetV1GuestCartsCartIdSelectedPaymentMethod(GetV1GuestCartsCartIdSelectedPaymentMethodRequest) returns (Quote-Data-Payment-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/guest-carts/{cartId}/selected-payment-method"
      };
    }
    // Add a specified payment method to a specified shopping cart.
    rpc PutV1GuestCartsCartIdSelectedPaymentMethod(PutV1GuestCartsCartIdSelectedPaymentMethodRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "/rest/default/V1/guest-carts/{cartId}/selected-payment-method"
        body: "$body"
      };
    }
    // Set payment information for a specified cart.
    rpc PostV1GuestCartsCartIdSetPaymentInformation(PostV1GuestCartsCartIdSetPaymentInformationRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/guest-carts/{cartId}/set-payment-information"
        body: "$body"
      };
    }
    rpc PostV1GuestCartsCartIdShippingInformation(PostV1GuestCartsCartIdShippingInformationRequest) returns (Checkout-Data-Payment-Details-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/guest-carts/{cartId}/shipping-information"
        body: "$body"
      };
    }
    // List applicable shipping methods for a specified quote.
    rpc GetV1GuestCartsCartIdShippingMethods(GetV1GuestCartsCartIdShippingMethodsRequest) returns (GetV1GuestCartsCartIdShippingMethodsResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/guest-carts/{cartId}/shipping-methods"
      };
    }
    // Return quote totals data for a specified cart.
    rpc GetV1GuestCartsCartIdTotals(GetV1GuestCartsCartIdTotalsRequest) returns (Quote-Data-Totals-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/guest-carts/{cartId}/totals"
      };
    }
    // Calculate quote totals based on address and shipping method.
    rpc PostV1GuestCartsCartIdTotalsInformation(PostV1GuestCartsCartIdTotalsInformationRequest) returns (Quote-Data-Totals-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/guest-carts/{cartId}/totals-information"
        body: "$body"
      };
    }
    // Estimate shipping
    rpc PostV1GuestGiftregistryCartIdEstimateShippingMethods(PostV1GuestGiftregistryCartIdEstimateShippingMethodsRequest) returns (PostV1GuestGiftregistryCartIdEstimateShippingMethodsResponse) {
      option (google.api.http) = {
        post: "/rest/default/V1/guest-giftregistry/{cartId}/estimate-shipping-methods"
        body: "$body"
      };
    }
    // Create access token for admin given the admin credentials.
    rpc PostV1IntegrationAdminToken(PostV1IntegrationAdminTokenRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/integration/admin/token"
        body: "$body"
      };
    }
    // Create access token for admin given the customer credentials.
    rpc PostV1IntegrationCustomerToken(PostV1IntegrationCustomerTokenRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/integration/customer/token"
        body: "$body"
      };
    }
    // Create refund for invoice
    rpc PostV1InvoiceInvoiceIdRefund(PostV1InvoiceInvoiceIdRefundRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/invoice/{invoiceId}/refund"
        body: "$body"
      };
    }
    // Lists invoices that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#InvoiceRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.
    rpc GetV1Invoices(GetV1InvoicesRequest) returns (Sales-Data-Invoice-Search-Result-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/invoices"
      };
    }
    // Performs persist operations for a specified invoice.
    rpc PostV1Invoices(PostV1InvoicesRequest) returns (Sales-Data-Invoice-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/invoices/"
        body: "$body"
      };
    }
    // Performs persist operations for a specified invoice comment.
    rpc PostV1InvoicesComments(PostV1InvoicesCommentsRequest) returns (Sales-Data-Invoice-Comment-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/invoices/comments"
        body: "$body"
      };
    }
    // Loads a specified invoice.
    rpc GetV1InvoicesId(GetV1InvoicesIdRequest) returns (Sales-Data-Invoice-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/invoices/{id}"
      };
    }
    // Sets invoice capture.
    rpc PostV1InvoicesIdCapture(PostV1InvoicesIdCaptureRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/invoices/{id}/capture"
      };
    }
    // Lists comments for a specified invoice.
    rpc GetV1InvoicesIdComments(GetV1InvoicesIdCommentsRequest) returns (Sales-Data-Invoice-Comment-Search-Result-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/invoices/{id}/comments"
      };
    }
    // Emails a user a specified invoice.
    rpc PostV1InvoicesIdEmails(PostV1InvoicesIdEmailsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/invoices/{id}/emails"
      };
    }
    // Voids a specified invoice.
    rpc PostV1InvoicesIdVoid(PostV1InvoicesIdVoidRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/invoices/{id}/void"
      };
    }
    // Returns an array of enabled modules
    rpc GetV1Modules(google.protobuf.Empty) returns (GetV1ModulesResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/modules"
      };
    }
    rpc PostV1OrderOrderIdInvoice(PostV1OrderOrderIdInvoiceRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/order/{orderId}/invoice"
        body: "$body"
      };
    }
    // Create offline refund for order
    rpc PostV1OrderOrderIdRefund(PostV1OrderOrderIdRefundRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/order/{orderId}/refund"
        body: "$body"
      };
    }
    // Creates new Shipment for given Order.
    rpc PostV1OrderOrderIdShip(PostV1OrderOrderIdShipRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/order/{orderId}/ship"
        body: "$body"
      };
    }
    // Lists orders that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#OrderRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.
    rpc GetV1Orders(GetV1OrdersRequest) returns (Sales-Data-Order-Search-Result-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/orders"
      };
    }
    // Performs persist operations for a specified order.
    rpc PostV1Orders(PostV1OrdersRequest) returns (Sales-Data-Order-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/orders/"
        body: "$body"
      };
    }
    // Performs persist operations for a specified order.
    rpc PutV1OrdersCreate(PutV1OrdersCreateRequest) returns (Sales-Data-Order-Interface) {
      option (google.api.http) = {
        put: "/rest/default/V1/orders/create"
        body: "$body"
      };
    }
    // Lists order items that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#OrderItemRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.
    rpc GetV1OrdersItems(GetV1OrdersItemsRequest) returns (Sales-Data-Order-Item-Search-Result-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/orders/items"
      };
    }
    // Loads a specified order item.
    rpc GetV1OrdersItemsId(GetV1OrdersItemsIdRequest) returns (Sales-Data-Order-Item-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/orders/items/{id}"
      };
    }
    // Loads a specified order.
    rpc GetV1OrdersId(GetV1OrdersIdRequest) returns (Sales-Data-Order-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/orders/{id}"
      };
    }
    // Cancels a specified order.
    rpc PostV1OrdersIdCancel(PostV1OrdersIdCancelRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/orders/{id}/cancel"
      };
    }
    // Lists comments for a specified order.
    rpc GetV1OrdersIdComments(GetV1OrdersIdCommentsRequest) returns (Sales-Data-Order-Status-History-Search-Result-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/orders/{id}/comments"
      };
    }
    // Adds a comment to a specified order.
    rpc PostV1OrdersIdComments(PostV1OrdersIdCommentsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/orders/{id}/comments"
        body: "$body"
      };
    }
    // Emails a user a specified order.
    rpc PostV1OrdersIdEmails(PostV1OrdersIdEmailsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/orders/{id}/emails"
      };
    }
    // Holds a specified order.
    rpc PostV1OrdersIdHold(PostV1OrdersIdHoldRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/orders/{id}/hold"
      };
    }
    // Gets the status for a specified order.
    rpc GetV1OrdersIdStatuses(GetV1OrdersIdStatusesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/rest/default/V1/orders/{id}/statuses"
      };
    }
    // Releases a specified order from hold status.
    rpc PostV1OrdersIdUnhold(PostV1OrdersIdUnholdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/orders/{id}/unhold"
      };
    }
    // Performs persist operations for a specified order address.
    rpc PutV1OrdersParent_id(PutV1OrdersParent_idRequest) returns (Sales-Data-Order-Address-Interface) {
      option (google.api.http) = {
        put: "/rest/default/V1/orders/{parent_id}"
        body: "$body"
      };
    }
    // Get product list
    rpc GetV1Products(GetV1ProductsRequest) returns (Catalog-Data-Product-Search-Results-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/products"
      };
    }
    // Create product
    rpc PostV1Products(PostV1ProductsRequest) returns (Catalog-Data-Product-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/products"
        body: "$body"
      };
    }
    // Create attribute set from data
    rpc PostV1ProductsAttributeSets(PostV1ProductsAttributeSetsRequest) returns (Eav-Data-Attribute-Set-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/products/attribute-sets"
        body: "$body"
      };
    }
    // Assign attribute to attribute set
    rpc PostV1ProductsAttributeSetsAttributes(PostV1ProductsAttributeSetsAttributesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/products/attribute-sets/attributes"
        body: "$body"
      };
    }
    // Save attribute group
    rpc PostV1ProductsAttributeSetsGroups(PostV1ProductsAttributeSetsGroupsRequest) returns (Eav-Data-Attribute-Group-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/products/attribute-sets/groups"
        body: "$body"
      };
    }
    // Retrieve list of attribute groups
    rpc GetV1ProductsAttributeSetsGroupsList(GetV1ProductsAttributeSetsGroupsListRequest) returns (Eav-Data-Attribute-Group-Search-Results-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/products/attribute-sets/groups/list"
      };
    }
    // Remove attribute group by id
    rpc DeleteV1ProductsAttributeSetsGroupsGroupId(DeleteV1ProductsAttributeSetsGroupsGroupIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/products/attribute-sets/groups/{groupId}"
      };
    }
    // Retrieve list of Attribute Sets
    rpc GetV1ProductsAttributeSetsSetsList(GetV1ProductsAttributeSetsSetsListRequest) returns (Eav-Data-Attribute-Set-Search-Results-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/products/attribute-sets/sets/list"
      };
    }
    // Retrieve attribute set information based on given ID
    rpc GetV1ProductsAttributeSetsAttributeSetId(GetV1ProductsAttributeSetsAttributeSetIdRequest) returns (Eav-Data-Attribute-Set-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/products/attribute-sets/{attributeSetId}"
      };
    }
    // Save attribute set data
    rpc PutV1ProductsAttributeSetsAttributeSetId(PutV1ProductsAttributeSetsAttributeSetIdRequest) returns (Eav-Data-Attribute-Set-Interface) {
      option (google.api.http) = {
        put: "/rest/default/V1/products/attribute-sets/{attributeSetId}"
        body: "$body"
      };
    }
    // Remove attribute set by given ID
    rpc DeleteV1ProductsAttributeSetsAttributeSetId(DeleteV1ProductsAttributeSetsAttributeSetIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/products/attribute-sets/{attributeSetId}"
      };
    }
    // Retrieve related attributes based on given attribute set ID
    rpc GetV1ProductsAttributeSetsAttributeSetIdAttributes(GetV1ProductsAttributeSetsAttributeSetIdAttributesRequest) returns (GetV1ProductsAttributeSetsAttributeSetIdAttributesResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/products/attribute-sets/{attributeSetId}/attributes"
      };
    }
    // Remove attribute from attribute set
    rpc DeleteV1ProductsAttributeSetsAttributeSetIdAttributesAttributeCode(DeleteV1ProductsAttributeSetsAttributeSetIdAttributesAttributeCodeRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/products/attribute-sets/{attributeSetId}/attributes/{attributeCode}"
      };
    }
    // Save attribute group
    rpc PutV1ProductsAttributeSetsAttributeSetIdGroups(PutV1ProductsAttributeSetsAttributeSetIdGroupsRequest) returns (Eav-Data-Attribute-Group-Interface) {
      option (google.api.http) = {
        put: "/rest/default/V1/products/attribute-sets/{attributeSetId}/groups"
        body: "$body"
      };
    }
    // Retrieve all attributes for entity type
    rpc GetV1ProductsAttributes(GetV1ProductsAttributesRequest) returns (Catalog-Data-Product-Attribute-Search-Results-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/products/attributes"
      };
    }
    // Save attribute data
    rpc PostV1ProductsAttributes(PostV1ProductsAttributesRequest) returns (Catalog-Data-Product-Attribute-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/products/attributes"
        body: "$body"
      };
    }
    // Retrieve list of product attribute types
    rpc GetV1ProductsAttributesTypes(google.protobuf.Empty) returns (GetV1ProductsAttributesTypesResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/products/attributes/types"
      };
    }
    // Retrieve specific attribute
    rpc GetV1ProductsAttributesAttributeCode(GetV1ProductsAttributesAttributeCodeRequest) returns (Catalog-Data-Product-Attribute-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/products/attributes/{attributeCode}"
      };
    }
    // Save attribute data
    rpc PutV1ProductsAttributesAttributeCode(PutV1ProductsAttributesAttributeCodeRequest) returns (Catalog-Data-Product-Attribute-Interface) {
      option (google.api.http) = {
        put: "/rest/default/V1/products/attributes/{attributeCode}"
        body: "$body"
      };
    }
    // Delete Attribute by id
    rpc DeleteV1ProductsAttributesAttributeCode(DeleteV1ProductsAttributesAttributeCodeRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/products/attributes/{attributeCode}"
      };
    }
    // Retrieve list of attribute options
    rpc GetV1ProductsAttributesAttributeCodeOptions(GetV1ProductsAttributesAttributeCodeOptionsRequest) returns (GetV1ProductsAttributesAttributeCodeOptionsResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/products/attributes/{attributeCode}/options"
      };
    }
    // Add option to attribute
    rpc PostV1ProductsAttributesAttributeCodeOptions(PostV1ProductsAttributesAttributeCodeOptionsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/products/attributes/{attributeCode}/options"
        body: "$body"
      };
    }
    // Delete option from attribute
    rpc DeleteV1ProductsAttributesAttributeCodeOptionsOptionId(DeleteV1ProductsAttributesAttributeCodeOptionsOptionIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/products/attributes/{attributeCode}/options/{optionId}"
      };
    }
    // Delete downloadable sample
    rpc DeleteV1ProductsDownloadableLinksSamplesId(DeleteV1ProductsDownloadableLinksSamplesIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/products/downloadable-links/samples/{id}"
      };
    }
    // Delete downloadable link
    rpc DeleteV1ProductsDownloadableLinksId(DeleteV1ProductsDownloadableLinksIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/products/downloadable-links/{id}"
      };
    }
    // Retrieve information about available product link types
    rpc GetV1ProductsLinksTypes(google.protobuf.Empty) returns (GetV1ProductsLinksTypesResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/products/links/types"
      };
    }
    // Provide a list of the product link type attributes
    rpc GetV1ProductsLinksTypeAttributes(GetV1ProductsLinksTypeAttributesRequest) returns (GetV1ProductsLinksTypeAttributesResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/products/links/{type}/attributes"
      };
    }
    // Retrieve the list of media attributes (fronted input type is media_image) assigned to the given attribute set.
    rpc GetV1ProductsMediaTypesAttributeSetName(GetV1ProductsMediaTypesAttributeSetNameRequest) returns (GetV1ProductsMediaTypesAttributeSetNameResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/products/media/types/{attributeSetName}"
      };
    }
    // Save Custom Option
    rpc PostV1ProductsOptions(PostV1ProductsOptionsRequest) returns (Catalog-Data-Product-Custom-Option-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/products/options"
        body: "$body"
      };
    }
    // Get custom option types
    rpc GetV1ProductsOptionsTypes(google.protobuf.Empty) returns (GetV1ProductsOptionsTypesResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/products/options/types"
      };
    }
    // Save Custom Option
    rpc PutV1ProductsOptionsOptionId(PutV1ProductsOptionsOptionIdRequest) returns (Catalog-Data-Product-Custom-Option-Interface) {
      option (google.api.http) = {
        put: "/rest/default/V1/products/options/{optionId}"
        body: "$body"
      };
    }
    // Retrieve available product types
    rpc GetV1ProductsTypes(google.protobuf.Empty) returns (GetV1ProductsTypesResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/products/types"
      };
    }
    rpc PutV1ProductsProductSkuStockItemsItemId(PutV1ProductsProductSkuStockItemsItemIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "/rest/default/V1/products/{productSku}/stockItems/{itemId}"
        body: "$body"
      };
    }
    // Get info about product by product SKU
    rpc GetV1ProductsSku(GetV1ProductsSkuRequest) returns (Catalog-Data-Product-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/products/{sku}"
      };
    }
    // Create product
    rpc PutV1ProductsSku(PutV1ProductsSkuRequest) returns (Catalog-Data-Product-Interface) {
      option (google.api.http) = {
        put: "/rest/default/V1/products/{sku}"
        body: "$body"
      };
    }
    rpc DeleteV1ProductsSku(DeleteV1ProductsSkuRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/products/{sku}"
      };
    }
    // List of links with associated samples
    rpc GetV1ProductsSkuDownloadableLinks(GetV1ProductsSkuDownloadableLinksRequest) returns (GetV1ProductsSkuDownloadableLinksResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/products/{sku}/downloadable-links"
      };
    }
    // Update downloadable link of the given product (link type and its resources cannot be changed)
    rpc PostV1ProductsSkuDownloadableLinks(PostV1ProductsSkuDownloadableLinksRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/products/{sku}/downloadable-links"
        body: "$body"
      };
    }
    // List of samples for downloadable product
    rpc GetV1ProductsSkuDownloadableLinksSamples(GetV1ProductsSkuDownloadableLinksSamplesRequest) returns (GetV1ProductsSkuDownloadableLinksSamplesResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/products/{sku}/downloadable-links/samples"
      };
    }
    // Update downloadable sample of the given product
    rpc PostV1ProductsSkuDownloadableLinksSamples(PostV1ProductsSkuDownloadableLinksSamplesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/products/{sku}/downloadable-links/samples"
        body: "$body"
      };
    }
    // Update downloadable sample of the given product
    rpc PutV1ProductsSkuDownloadableLinksSamplesId(PutV1ProductsSkuDownloadableLinksSamplesIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "/rest/default/V1/products/{sku}/downloadable-links/samples/{id}"
        body: "$body"
      };
    }
    // Update downloadable link of the given product (link type and its resources cannot be changed)
    rpc PutV1ProductsSkuDownloadableLinksId(PutV1ProductsSkuDownloadableLinksIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "/rest/default/V1/products/{sku}/downloadable-links/{id}"
        body: "$body"
      };
    }
    // Get tier price of product
    rpc GetV1ProductsSkuGroupPricesCustomerGroupIdTiers(GetV1ProductsSkuGroupPricesCustomerGroupIdTiersRequest) returns (GetV1ProductsSkuGroupPricesCustomerGroupIdTiersResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/products/{sku}/group-prices/{customerGroupId}/tiers"
      };
    }
    // Remove tier price from product
    rpc DeleteV1ProductsSkuGroupPricesCustomerGroupIdTiersQty(DeleteV1ProductsSkuGroupPricesCustomerGroupIdTiersQtyRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/products/{sku}/group-prices/{customerGroupId}/tiers/{qty}"
      };
    }
    // Create tier price for product
    rpc PostV1ProductsSkuGroupPricesCustomerGroupIdTiersQtyPricePrice(PostV1ProductsSkuGroupPricesCustomerGroupIdTiersQtyPricePriceRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/products/{sku}/group-prices/{customerGroupId}/tiers/{qty}/price/{price}"
      };
    }
    // Save product link
    rpc PutV1ProductsSkuLinks(PutV1ProductsSkuLinksRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "/rest/default/V1/products/{sku}/links"
        body: "$body"
      };
    }
    // Assign a product link to another product
    rpc PostV1ProductsSkuLinks(PostV1ProductsSkuLinksRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/products/{sku}/links"
        body: "$body"
      };
    }
    // Provide the list of links for a specific product
    rpc GetV1ProductsSkuLinksType(GetV1ProductsSkuLinksTypeRequest) returns (GetV1ProductsSkuLinksTypeResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/products/{sku}/links/{type}"
      };
    }
    rpc DeleteV1ProductsSkuLinksTypeLinkedProductSku(DeleteV1ProductsSkuLinksTypeLinkedProductSkuRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/products/{sku}/links/{type}/{linkedProductSku}"
      };
    }
    // Retrieve the list of gallery entries associated with given product
    rpc GetV1ProductsSkuMedia(GetV1ProductsSkuMediaRequest) returns (GetV1ProductsSkuMediaResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/products/{sku}/media"
      };
    }
    // Create new gallery entry
    rpc PostV1ProductsSkuMedia(PostV1ProductsSkuMediaRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/products/{sku}/media"
        body: "$body"
      };
    }
    // Return information about gallery entry
    rpc GetV1ProductsSkuMediaEntryId(GetV1ProductsSkuMediaEntryIdRequest) returns (Catalog-Data-Product-Attribute-Media-Gallery-Entry-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/products/{sku}/media/{entryId}"
      };
    }
    // Update gallery entry
    rpc PutV1ProductsSkuMediaEntryId(PutV1ProductsSkuMediaEntryIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "/rest/default/V1/products/{sku}/media/{entryId}"
        body: "$body"
      };
    }
    // Remove gallery entry
    rpc DeleteV1ProductsSkuMediaEntryId(DeleteV1ProductsSkuMediaEntryIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/products/{sku}/media/{entryId}"
      };
    }
    // Get the list of custom options for a specific product
    rpc GetV1ProductsSkuOptions(GetV1ProductsSkuOptionsRequest) returns (GetV1ProductsSkuOptionsResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/products/{sku}/options"
      };
    }
    // Get custom option for a specific product
    rpc GetV1ProductsSkuOptionsOptionId(GetV1ProductsSkuOptionsOptionIdRequest) returns (Catalog-Data-Product-Custom-Option-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/products/{sku}/options/{optionId}"
      };
    }
    rpc DeleteV1ProductsSkuOptionsOptionId(DeleteV1ProductsSkuOptionsOptionIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/products/{sku}/options/{optionId}"
      };
    }
    // Assign a product to the website
    rpc PutV1ProductsSkuWebsites(PutV1ProductsSkuWebsitesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "/rest/default/V1/products/{sku}/websites"
        body: "$body"
      };
    }
    // Assign a product to the website
    rpc PostV1ProductsSkuWebsites(PostV1ProductsSkuWebsitesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/products/{sku}/websites"
        body: "$body"
      };
    }
    // Remove the website assignment from the product by product sku
    rpc DeleteV1ProductsSkuWebsitesWebsiteId(DeleteV1ProductsSkuWebsitesWebsiteIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/products/{sku}/websites/{websiteId}"
      };
    }
    // Return list of rma data objects based on search criteria
    rpc GetV1Returns(GetV1ReturnsRequest) returns (Rma-Data-Rma-Search-Result-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/returns"
      };
    }
    // Save RMA
    rpc PostV1Returns(PostV1ReturnsRequest) returns (Rma-Data-Rma-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/returns"
        body: "$body"
      };
    }
    // Return data object for specified RMA id
    rpc GetV1ReturnsId(GetV1ReturnsIdRequest) returns (Rma-Data-Rma-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/returns/{id}"
      };
    }
    // Save RMA
    rpc PutV1ReturnsId(PutV1ReturnsIdRequest) returns (Rma-Data-Rma-Interface) {
      option (google.api.http) = {
        put: "/rest/default/V1/returns/{id}"
        body: "$body"
      };
    }
    // Delete RMA
    rpc DeleteV1ReturnsId(DeleteV1ReturnsIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/returns/{id}"
        body: "$body"
      };
    }
    // Comments list
    rpc GetV1ReturnsIdComments(GetV1ReturnsIdCommentsRequest) returns (Rma-Data-Comment-Search-Result-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/returns/{id}/comments"
      };
    }
    // Add comment
    rpc PostV1ReturnsIdComments(PostV1ReturnsIdCommentsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/returns/{id}/comments"
        body: "$body"
      };
    }
    // Get shipping label int the PDF format
    rpc GetV1ReturnsIdLabels(GetV1ReturnsIdLabelsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/rest/default/V1/returns/{id}/labels"
      };
    }
    // Get track list
    rpc GetV1ReturnsIdTrackingNumbers(GetV1ReturnsIdTrackingNumbersRequest) returns (Rma-Data-Track-Search-Result-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/returns/{id}/tracking-numbers"
      };
    }
    // Add track
    rpc PostV1ReturnsIdTrackingNumbers(PostV1ReturnsIdTrackingNumbersRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/returns/{id}/tracking-numbers"
        body: "$body"
      };
    }
    // Remove track by id
    rpc DeleteV1ReturnsIdTrackingNumbersTrackId(DeleteV1ReturnsIdTrackingNumbersTrackIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/returns/{id}/tracking-numbers/{trackId}"
      };
    }
    // Get all attribute metadata.
    rpc GetV1ReturnsAttributeMetadata(google.protobuf.Empty) returns (GetV1ReturnsAttributeMetadataResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/returnsAttributeMetadata"
      };
    }
    // Get custom attribute metadata for the given Data object's attribute set
    rpc GetV1ReturnsAttributeMetadataCustom(GetV1ReturnsAttributeMetadataCustomRequest) returns (GetV1ReturnsAttributeMetadataCustomResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/returnsAttributeMetadata/custom"
      };
    }
    // Retrieve all attributes filtered by form code
    rpc GetV1ReturnsAttributeMetadataFormFormCode(GetV1ReturnsAttributeMetadataFormFormCodeRequest) returns (GetV1ReturnsAttributeMetadataFormFormCodeResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/returnsAttributeMetadata/form/{formCode}"
      };
    }
    // Retrieve attribute metadata.
    rpc GetV1ReturnsAttributeMetadataAttributeCode(GetV1ReturnsAttributeMetadataAttributeCodeRequest) returns (Customer-Data-Attribute-Metadata-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/returnsAttributeMetadata/{attributeCode}"
      };
    }
    // Set reward points to quote
    rpc PostV1RewardMineUseReward(google.protobuf.Empty) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/reward/mine/use-reward"
      };
    }
    // Save sales rule.
    rpc PostV1SalesRules(PostV1SalesRulesRequest) returns (Sales-Rule-Data-Rule-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/salesRules"
        body: "$body"
      };
    }
    // Retrieve sales rules that match te specified criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#RuleRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.
    rpc GetV1SalesRulesSearch(GetV1SalesRulesSearchRequest) returns (Sales-Rule-Data-Rule-Search-Result-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/salesRules/search"
      };
    }
    // Get rule by ID.
    rpc GetV1SalesRulesRuleId(GetV1SalesRulesRuleIdRequest) returns (Sales-Rule-Data-Rule-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/salesRules/{ruleId}"
      };
    }
    // Save sales rule.
    rpc PutV1SalesRulesRuleId(PutV1SalesRulesRuleIdRequest) returns (Sales-Rule-Data-Rule-Interface) {
      option (google.api.http) = {
        put: "/rest/default/V1/salesRules/{ruleId}"
        body: "$body"
      };
    }
    // Delete rule by ID.
    rpc DeleteV1SalesRulesRuleId(DeleteV1SalesRulesRuleIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/salesRules/{ruleId}"
      };
    }
    // Make Full Text Search and return found Documents
    rpc GetV1Search(GetV1SearchRequest) returns (Framework-Search-Search-Result-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/search"
      };
    }
    // Performs persist operations for a specified shipment.
    rpc PostV1Shipment(PostV1ShipmentRequest) returns (Sales-Data-Shipment-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/shipment/"
        body: "$body"
      };
    }
    // Performs persist operations for a specified shipment track.
    rpc PostV1ShipmentTrack(PostV1ShipmentTrackRequest) returns (Sales-Data-Shipment-Track-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/shipment/track"
        body: "$body"
      };
    }
    // Deletes a specified shipment track by ID.
    rpc DeleteV1ShipmentTrackId(DeleteV1ShipmentTrackIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/shipment/track/{id}"
      };
    }
    // Loads a specified shipment.
    rpc GetV1ShipmentId(GetV1ShipmentIdRequest) returns (Sales-Data-Shipment-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/shipment/{id}"
      };
    }
    // Lists comments for a specified shipment.
    rpc GetV1ShipmentIdComments(GetV1ShipmentIdCommentsRequest) returns (Sales-Data-Shipment-Comment-Search-Result-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/shipment/{id}/comments"
      };
    }
    // Performs persist operations for a specified shipment comment.
    rpc PostV1ShipmentIdComments(PostV1ShipmentIdCommentsRequest) returns (Sales-Data-Shipment-Comment-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/shipment/{id}/comments"
        body: "$body"
      };
    }
    // Emails user a specified shipment.
    rpc PostV1ShipmentIdEmails(PostV1ShipmentIdEmailsRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/shipment/{id}/emails"
      };
    }
    // Gets a specified shipment label.
    rpc GetV1ShipmentIdLabel(GetV1ShipmentIdLabelRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        get: "/rest/default/V1/shipment/{id}/label"
      };
    }
    // Lists shipments that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#ShipmentRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.
    rpc GetV1Shipments(GetV1ShipmentsRequest) returns (Sales-Data-Shipment-Search-Result-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/shipments"
      };
    }
    // Retrieves a list of SKU's with low inventory qty
    rpc GetV1StockItemsLowStock(GetV1StockItemsLowStockRequest) returns (Catalog-Inventory-Data-Stock-Status-Collection-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/stockItems/lowStock/"
      };
    }
    rpc GetV1StockItemsProductSku(GetV1StockItemsProductSkuRequest) returns (Catalog-Inventory-Data-Stock-Item-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/stockItems/{productSku}"
      };
    }
    rpc GetV1StockStatusesProductSku(GetV1StockStatusesProductSkuRequest) returns (Catalog-Inventory-Data-Stock-Status-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/stockStatuses/{productSku}"
      };
    }
    rpc GetV1StoreStoreConfigs(GetV1StoreStoreConfigsRequest) returns (GetV1StoreStoreConfigsResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/store/storeConfigs"
      };
    }
    // Retrieve list of all groups
    rpc GetV1StoreStoreGroups(google.protobuf.Empty) returns (GetV1StoreStoreGroupsResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/store/storeGroups"
      };
    }
    // Retrieve list of all stores
    rpc GetV1StoreStoreViews(google.protobuf.Empty) returns (GetV1StoreStoreViewsResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/store/storeViews"
      };
    }
    // Retrieve list of all websites
    rpc GetV1StoreWebsites(google.protobuf.Empty) returns (GetV1StoreWebsitesResponse) {
      option (google.api.http) = {
        get: "/rest/default/V1/store/websites"
      };
    }
    // Create a Tax Class
    rpc PostV1TaxClasses(PostV1TaxClassesRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/taxClasses"
        body: "$body"
      };
    }
    // Retrieve tax classes which match a specific criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#TaxClassRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.
    rpc GetV1TaxClassesSearch(GetV1TaxClassesSearchRequest) returns (Tax-Data-Tax-Class-Search-Results-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/taxClasses/search"
      };
    }
    // Create a Tax Class
    rpc PutV1TaxClassesClassId(PutV1TaxClassesClassIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        put: "/rest/default/V1/taxClasses/{classId}"
        body: "$body"
      };
    }
    // Get a tax class with the given tax class id.
    rpc GetV1TaxClassesTaxClassId(GetV1TaxClassesTaxClassIdRequest) returns (Tax-Data-Tax-Class-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/taxClasses/{taxClassId}"
      };
    }
    // Delete a tax class with the given tax class id.
    rpc DeleteV1TaxClassesTaxClassId(DeleteV1TaxClassesTaxClassIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/taxClasses/{taxClassId}"
      };
    }
    // Create or update tax rate
    rpc PutV1TaxRates(PutV1TaxRatesRequest) returns (Tax-Data-Tax-Rate-Interface) {
      option (google.api.http) = {
        put: "/rest/default/V1/taxRates"
        body: "$body"
      };
    }
    // Create or update tax rate
    rpc PostV1TaxRates(PostV1TaxRatesRequest) returns (Tax-Data-Tax-Rate-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/taxRates"
        body: "$body"
      };
    }
    // Search TaxRates This call returns an array of objects, but detailed information about each object’s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#TaxRateRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.
    rpc GetV1TaxRatesSearch(GetV1TaxRatesSearchRequest) returns (Tax-Data-Tax-Rate-Search-Results-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/taxRates/search"
      };
    }
    // Get tax rate
    rpc GetV1TaxRatesRateId(GetV1TaxRatesRateIdRequest) returns (Tax-Data-Tax-Rate-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/taxRates/{rateId}"
      };
    }
    // Delete tax rate
    rpc DeleteV1TaxRatesRateId(DeleteV1TaxRatesRateIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/taxRates/{rateId}"
      };
    }
    // Save TaxRule
    rpc PutV1TaxRules(PutV1TaxRulesRequest) returns (Tax-Data-Tax-Rule-Interface) {
      option (google.api.http) = {
        put: "/rest/default/V1/taxRules"
        body: "$body"
      };
    }
    // Save TaxRule
    rpc PostV1TaxRules(PostV1TaxRulesRequest) returns (Tax-Data-Tax-Rule-Interface) {
      option (google.api.http) = {
        post: "/rest/default/V1/taxRules"
        body: "$body"
      };
    }
    // Search TaxRules This call returns an array of objects, but detailed information about each object’s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#TaxRuleRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.
    rpc GetV1TaxRulesSearch(GetV1TaxRulesSearchRequest) returns (Tax-Data-Tax-Rule-Search-Results-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/taxRules/search"
      };
    }
    // Get TaxRule
    rpc GetV1TaxRulesRuleId(GetV1TaxRulesRuleIdRequest) returns (Tax-Data-Tax-Rule-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/taxRules/{ruleId}"
      };
    }
    // Delete TaxRule
    rpc DeleteV1TaxRulesRuleId(DeleteV1TaxRulesRuleIdRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/rest/default/V1/taxRules/{ruleId}"
      };
    }
    // Lists transactions that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#TransactionRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.
    rpc GetV1Transactions(GetV1TransactionsRequest) returns (Sales-Data-Transaction-Search-Result-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/transactions"
      };
    }
    // Loads a specified transaction.
    rpc GetV1TransactionsId(GetV1TransactionsIdRequest) returns (Sales-Data-Transaction-Interface) {
      option (google.api.http) = {
        get: "/rest/default/V1/transactions/{id}"
      };
    }
    // Proxy handler for guest place order
    rpc PostV1WorldpayGuestCartsCartIdPaymentInformation(PostV1WorldpayGuestCartsCartIdPaymentInformationRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/rest/default/V1/worldpay-guest-carts/{cartId}/payment-information"
        body: "$body"
      };
    }
}
