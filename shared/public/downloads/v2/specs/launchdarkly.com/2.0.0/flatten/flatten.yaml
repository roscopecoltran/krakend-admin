basePath: /api/v2
consumes.length: 1
consumes[0]: application/json
definitions.AuditLogEntries.properties._links.$ref: '#/definitions/Links'
definitions.AuditLogEntries.properties.items.items.$ref: '#/definitions/AuditLogEntry'
definitions.AuditLogEntries.properties.items.type: array
definitions.AuditLogEntries.type: object
definitions.AuditLogEntry.properties._id.type: string
definitions.AuditLogEntry.properties._links.$ref: '#/definitions/Links'
definitions.AuditLogEntry.properties.date.type: number
definitions.AuditLogEntry.properties.description.type: string
definitions.AuditLogEntry.properties.kind.type: string
definitions.AuditLogEntry.properties.member.$ref: '#/definitions/Member'
definitions.AuditLogEntry.properties.name.type: string
definitions.AuditLogEntry.properties.target.properties._links.$ref: '#/definitions/Links'
definitions.AuditLogEntry.properties.target.properties.name.type: string
definitions.AuditLogEntry.properties.target.properties.resources.items.type: string
definitions.AuditLogEntry.properties.target.properties.resources.type: array
definitions.AuditLogEntry.properties.target.type: object
definitions.AuditLogEntry.properties.title.type: string
definitions.AuditLogEntry.properties.titleVerb.type: string
definitions.AuditLogEntry.type: object
definitions.Clause.properties.attribute.type: string
definitions.Clause.properties.negate.type: boolean
definitions.Clause.properties.op.type: string
definitions.Clause.properties.values.items.type: string
definitions.Clause.properties.values.type: array
definitions.Clause.type: object
definitions.Environment.properties._id.type: string
definitions.Environment.properties._links.$ref: '#/definitions/Links'
definitions.Environment.properties.apiKey.type: string
definitions.Environment.properties.color.type: string
definitions.Environment.properties.defaultTtl.type: number
definitions.Environment.properties.key.type: string
definitions.Environment.properties.mobileKey.type: string
definitions.Environment.properties.name.type: string
definitions.Environment.properties.secureMode.type: boolean
definitions.Environment.type: object
definitions.FeatureFlag.properties._links.$ref: '#/definitions/Links'
definitions.FeatureFlag.properties._maintainer.$ref: '#/definitions/Member'
definitions.FeatureFlag.properties.creationDate.type: number
definitions.FeatureFlag.properties.environments.additionalProperties.$ref: '#/definitions/FeatureFlagConfig'
definitions.FeatureFlag.properties.environments.type: object
definitions.FeatureFlag.properties.includeInSnippet.type: boolean
definitions.FeatureFlag.properties.key.type: string
definitions.FeatureFlag.properties.kind.type: string
definitions.FeatureFlag.properties.maintainerId.type: string
definitions.FeatureFlag.properties.name.type: string
definitions.FeatureFlag.properties.tags.items.type: string
definitions.FeatureFlag.properties.tags.type: array
definitions.FeatureFlag.properties.temporary.type: boolean
definitions.FeatureFlag.properties.variations.items.$ref: '#/definitions/Variation'
definitions.FeatureFlag.properties.variations.type: array
definitions.FeatureFlag.type: object
definitions.FeatureFlagConfig.properties.archived.type: boolean
definitions.FeatureFlagConfig.properties.fallthrough.properties.rollout.$ref: '#/definitions/Rollout'
definitions.FeatureFlagConfig.properties.fallthrough.properties.variation.type: integer
definitions.FeatureFlagConfig.properties.fallthrough.type: object
definitions.FeatureFlagConfig.properties.lastModified.type: integer
definitions.FeatureFlagConfig.properties.on.type: boolean
definitions.FeatureFlagConfig.properties.rules.items.$ref: '#/definitions/Rule'
definitions.FeatureFlagConfig.properties.rules.type: array
definitions.FeatureFlagConfig.properties.salt.type: string
definitions.FeatureFlagConfig.properties.sel.type: string
definitions.FeatureFlagConfig.properties.targets.items.$ref: '#/definitions/Target'
definitions.FeatureFlagConfig.properties.targets.type: array
definitions.FeatureFlagConfig.properties.version.type: integer
definitions.FeatureFlagConfig.type: object
definitions.FeatureFlagStatus.properties._links.$ref: '#/definitions/Links'
definitions.FeatureFlagStatus.properties.default.type: boolean
definitions.FeatureFlagStatus.properties.lastRequested.type: string
definitions.FeatureFlagStatus.properties.name.type: string
definitions.FeatureFlagStatus.type: object
definitions.FeatureFlagStatuses.properties._links.$ref: '#/definitions/Links'
definitions.FeatureFlagStatuses.properties.items.items.$ref: '#/definitions/FeatureFlagStatus'
definitions.FeatureFlagStatuses.properties.items.type: array
definitions.FeatureFlagStatuses.type: object
definitions.FeatureFlags.properties._links.$ref: '#/definitions/Links'
definitions.FeatureFlags.properties.items.items.$ref: '#/definitions/FeatureFlag'
definitions.FeatureFlags.properties.items.type: array
definitions.FeatureFlags.type: object
definitions.Link.properties.href.type: string
definitions.Link.properties.type.type: string
definitions.Link.type: object
definitions.Links.properties.self.$ref: '#/definitions/Link'
definitions.Links.type: object
definitions.Member.properties._id.type: string
definitions.Member.properties._links.$ref: '#/definitions/Links'
definitions.Member.properties._pendingInvite.type: boolean
definitions.Member.properties.customRoles.items.type: string
definitions.Member.properties.customRoles.type: array
definitions.Member.properties.email.type: string
definitions.Member.properties.isBeta.type: boolean
definitions.Member.properties.role.type: string
definitions.Member.type: object
definitions.Project.properties._links.$ref: '#/definitions/Links'
definitions.Project.properties.items.items.$ref: '#/definitions/Environment'
definitions.Project.properties.items.type: array
definitions.Project.type: object
definitions.Projects.properties._id.type: string
definitions.Projects.properties._links.$ref: '#/definitions/Links'
definitions.Projects.properties.items.items.$ref: '#/definitions/Project'
definitions.Projects.properties.items.type: array
definitions.Projects.properties.key.type: string
definitions.Projects.properties.name.type: string
definitions.Projects.type: object
definitions.Rollout.properties.variations.items.$ref: '#/definitions/WeightedVariation'
definitions.Rollout.properties.variations.type: array
definitions.Rollout.type: object
definitions.Rule.properties.clauses.items.$ref: '#/definitions/Clause'
definitions.Rule.properties.clauses.type: array
definitions.Rule.properties.rollout.$ref: '#/definitions/Rollout'
definitions.Rule.properties.variation.type: integer
definitions.Rule.type: object
definitions.Target.properties.values.items.type: string
definitions.Target.properties.values.type: array
definitions.Target.properties.variation.type: integer
definitions.Target.type: object
definitions.User.properties.avatar.type: string
definitions.User.properties.environmentId.type: string
definitions.User.properties.lastPing.type: string
definitions.User.properties.ownerId.type: string
definitions.User.properties.user.example.custom.company: example.com
definitions.User.properties.user.example.key: a00bea
definitions.User.properties.user.example.name: Bob Loblaw
definitions.User.properties.user.type: object
definitions.User.type: object
definitions.UserFlagSetting.properties._links.$ref: '#/definitions/Links'
definitions.UserFlagSetting.properties._value.type: boolean
definitions.UserFlagSetting.properties.setting.type: boolean
definitions.UserFlagSetting.type: object
definitions.UserFlagSettings.properties._links.$ref: '#/definitions/Links'
definitions.UserFlagSettings.properties.items.example.alternate.page._links.self.href: /api/v2/users/lacuna/production/Abbie_Braun/flags/alternate.page
definitions.UserFlagSettings.properties.items.example.alternate.page._links.self.type: application/json
definitions.UserFlagSettings.properties.items.example.alternate.page._value: false,
definitions.UserFlagSettings.properties.items.example.sort.order._links._value: true
definitions.UserFlagSettings.properties.items.example.sort.order._links.self.href: /api/v2/users/lacuna/production/Abbie_Braun/flags/sort.order
definitions.UserFlagSettings.properties.items.example.sort.order._links.self.type: application/json
definitions.UserFlagSettings.properties.items.type: object
definitions.UserFlagSettings.type: object
definitions.Users.properties._links.$ref: '#/definitions/Links'
definitions.Users.properties.items.items.$ref: '#/definitions/User'
definitions.Users.properties.items.type: array
definitions.Users.properties.totalCount.type: number
definitions.Users.type: object
definitions.Variation.properties.description.type: string
definitions.Variation.properties.name.type: string
definitions.Variation.properties.value.type: object
definitions.Variation.required.length: 1
definitions.Variation.required[0]: value
definitions.Variation.type: object
definitions.Webhook.properties._id.type: string
definitions.Webhook.properties._links.$ref: '#/definitions/Links'
definitions.Webhook.properties.on.type: boolean
definitions.Webhook.properties.secret.type: string
definitions.Webhook.properties.tags.items.type: string
definitions.Webhook.properties.tags.type: array
definitions.Webhook.properties.url.type: string
definitions.Webhook.type: object
definitions.Webhooks.properties._links.$ref: '#/definitions/Links'
definitions.Webhooks.properties.items.items.$ref: '#/definitions/Webhook'
definitions.Webhooks.properties.items.type: array
definitions.Webhooks.type: object
definitions.WeightedVariation.properties.variation.type: integer
definitions.WeightedVariation.properties.weight.type: integer
definitions.WeightedVariation.type: object
host: app.launchdarkly.com
info.contact.email: support@launchdarkly.com
info.contact.name: LaunchDarkly Support
info.contact.url: https://support.launchdarkly.com
info.description: Build custom integrations with the LaunchDarkly REST API
info.license.name: Apache 2.0
info.license.url: http://www.apache.org/licenses/LICENSE-2.0.html
info.termsOfService: https://launchdarkly.com/terms
info.title: LaunchDarkly
info.version: 2.0.0
info.x-apisguru-categories.length: 1
info.x-apisguru-categories[0]: developer_tools
info.x-logo.url: https://api.apis.guru/v2/cache/logo/https_pbs.twimg.com_profile_images_895331003236892673_d0bCtJhv_400x400.jpg
info.x-origin.length: 1
info.x-origin[0].format: swagger
info.x-origin[0].url: https://launchdarkly.github.io/ld-openapi/swagger.json
info.x-origin[0].version: "2.0"
info.x-preferred: true
info.x-providerName: launchdarkly.com
parameters.After.description: A unix epoch time in milliseconds specifying the maximum
  last time a user requested a feature flag
parameters.After.in: query
parameters.After.name: after
parameters.After.required: false
parameters.After.type: number
parameters.EnvironmentKey.description: The environment key
parameters.EnvironmentKey.in: path
parameters.EnvironmentKey.name: environmentKey
parameters.EnvironmentKey.required: true
parameters.EnvironmentKey.type: string
parameters.EnvironmentKeyQuery.description: The environment key
parameters.EnvironmentKeyQuery.in: query
parameters.EnvironmentKeyQuery.name: environmentKeyQuery
parameters.EnvironmentKeyQuery.required: false
parameters.EnvironmentKeyQuery.type: string
parameters.EnvironmentPostRequest.description: New environment
parameters.EnvironmentPostRequest.in: body
parameters.EnvironmentPostRequest.name: environmentBody
parameters.EnvironmentPostRequest.required: true
parameters.EnvironmentPostRequest.schema.properties.color.description: A color swatch
  (as an RGB hex value with no leading '#', e.g. C8C8C8)
parameters.EnvironmentPostRequest.schema.properties.color.type: string
parameters.EnvironmentPostRequest.schema.properties.defaultTtl.type: number
parameters.EnvironmentPostRequest.schema.properties.key.type: string
parameters.EnvironmentPostRequest.schema.properties.name.type: string
parameters.EnvironmentPostRequest.schema.required.length: 3
parameters.EnvironmentPostRequest.schema.required[0]: name
parameters.EnvironmentPostRequest.schema.required[1]: key
parameters.EnvironmentPostRequest.schema.required[2]: color
parameters.EnvironmentPostRequest.schema.type: object
parameters.FeatureFlagKey.description: The feature flag's key
parameters.FeatureFlagKey.in: path
parameters.FeatureFlagKey.name: featureFlagKey
parameters.FeatureFlagKey.required: true
parameters.FeatureFlagKey.type: string
parameters.FeatureFlagPostRequest.description: Create a new feature flag
parameters.FeatureFlagPostRequest.in: body
parameters.FeatureFlagPostRequest.name: featureFlagBody
parameters.FeatureFlagPostRequest.required: true
parameters.FeatureFlagPostRequest.schema.properties.includeInSnippet.description: Whether
  or not this flag should be made available to the client-side JavaScript SDK
parameters.FeatureFlagPostRequest.schema.properties.includeInSnippet.type: boolean
parameters.FeatureFlagPostRequest.schema.properties.key.description: A unique key
  that will be used to reference the flag in your code
parameters.FeatureFlagPostRequest.schema.properties.key.type: string
parameters.FeatureFlagPostRequest.schema.properties.name.description: A human-friendly
  name for the feature flag. Remember to note if this flag is intended to be temporary
  or permanent.
parameters.FeatureFlagPostRequest.schema.properties.name.type: string
parameters.FeatureFlagPostRequest.schema.properties.tags.description: Tags for the
  feature flag
parameters.FeatureFlagPostRequest.schema.properties.tags.items.type: string
parameters.FeatureFlagPostRequest.schema.properties.tags.type: array
parameters.FeatureFlagPostRequest.schema.properties.temporary.description: Whether
  or not the flag is a temporary flag
parameters.FeatureFlagPostRequest.schema.properties.temporary.type: boolean
parameters.FeatureFlagPostRequest.schema.properties.variations.description: An array
  of possible variations for the flag.
parameters.FeatureFlagPostRequest.schema.properties.variations.items.$ref: '#/definitions/Variation'
parameters.FeatureFlagPostRequest.schema.properties.variations.type: array
parameters.FeatureFlagPostRequest.schema.required.length: 3
parameters.FeatureFlagPostRequest.schema.required[0]: name
parameters.FeatureFlagPostRequest.schema.required[1]: key
parameters.FeatureFlagPostRequest.schema.required[2]: variations
parameters.FeatureFlagPostRequest.schema.type: object
parameters.Limit.description: Pagination limit
parameters.Limit.in: query
parameters.Limit.name: limit
parameters.Limit.required: false
parameters.Limit.type: number
parameters.Offset.description: Specifies the first item to return in the collection
parameters.Offset.in: query
parameters.Offset.name: offset
parameters.Offset.required: false
parameters.Offset.type: number
parameters.PatchRequest.description: http://jsonpatch.com/
parameters.PatchRequest.in: body
parameters.PatchRequest.name: patchDelta
parameters.PatchRequest.required: true
parameters.PatchRequest.schema.items.properties.op.type: string
parameters.PatchRequest.schema.items.properties.path.type: string
parameters.PatchRequest.schema.items.properties.value.type: object
parameters.PatchRequest.schema.items.required.length: 3
parameters.PatchRequest.schema.items.required[0]: op
parameters.PatchRequest.schema.items.required[1]: path
parameters.PatchRequest.schema.items.required[2]: value
parameters.PatchRequest.schema.items.type: object
parameters.PatchRequest.schema.type: array
parameters.ProjectKey.description: The project key
parameters.ProjectKey.in: path
parameters.ProjectKey.name: projectKey
parameters.ProjectKey.required: true
parameters.ProjectKey.type: string
parameters.ProjectPostRequest.description: New project
parameters.ProjectPostRequest.in: body
parameters.ProjectPostRequest.name: projectBody
parameters.ProjectPostRequest.required: true
parameters.ProjectPostRequest.schema.properties.key.type: string
parameters.ProjectPostRequest.schema.properties.name.type: string
parameters.ProjectPostRequest.schema.required.length: 2
parameters.ProjectPostRequest.schema.required[0]: name
parameters.ProjectPostRequest.schema.required[1]: key
parameters.ProjectPostRequest.schema.type: object
parameters.Query.description: Search query
parameters.Query.in: query
parameters.Query.name: q
parameters.Query.required: false
parameters.Query.type: string
parameters.ResourceId.description: The resource ID
parameters.ResourceId.in: path
parameters.ResourceId.name: resourceId
parameters.ResourceId.required: true
parameters.ResourceId.type: string
parameters.Tag.description: Filter by tag
parameters.Tag.in: query
parameters.Tag.name: tag
parameters.Tag.required: false
parameters.Tag.type: string
parameters.UserKey.description: The user's key
parameters.UserKey.in: path
parameters.UserKey.name: userKey
parameters.UserKey.required: true
parameters.UserKey.type: string
parameters.UserSettingsPutRequest.in: body
parameters.UserSettingsPutRequest.name: userSettingsBody
parameters.UserSettingsPutRequest.required: true
parameters.UserSettingsPutRequest.schema.properties.setting.description: The variation
  value to set for the user. Must match the variation type of the flag.
parameters.UserSettingsPutRequest.schema.properties.setting.type: boolean
parameters.UserSettingsPutRequest.schema.type: object
parameters.WebhookPostRequest.description: New webhook
parameters.WebhookPostRequest.in: body
parameters.WebhookPostRequest.name: webhookBody
parameters.WebhookPostRequest.required: true
parameters.WebhookPostRequest.schema.properties.on.type: boolean
parameters.WebhookPostRequest.schema.properties.secret.type: string
parameters.WebhookPostRequest.schema.properties.sign.type: boolean
parameters.WebhookPostRequest.schema.properties.url.type: string
parameters.WebhookPostRequest.schema.required.length: 3
parameters.WebhookPostRequest.schema.required[0]: url
parameters.WebhookPostRequest.schema.required[1]: sign
parameters.WebhookPostRequest.schema.required[2]: "on"
parameters.WebhookPostRequest.schema.type: object
paths./.get.operationId: getRoot
paths./.get.responses.200.$ref: '#/responses/Root200'
paths./.get.responses.401.$ref: '#/responses/Standard401'
paths./.get.summary: Get the root resource
paths./.get.tags.length: 1
paths./.get.tags[0]: root
paths./auditlog.get.operationId: getAuditLogEntries
paths./auditlog.get.responses.200.description: Audit log entries response
paths./auditlog.get.responses.200.schema.$ref: '#/definitions/AuditLogEntries'
paths./auditlog.get.responses.400.$ref: '#/responses/Standard400'
paths./auditlog.get.responses.401.$ref: '#/responses/Standard401'
paths./auditlog.get.summary: Fetch a list of all webhooks
paths./auditlog.get.tags.length: 1
paths./auditlog.get.tags[0]: audit log
paths./auditlog/{resourceId}.get.operationId: getAuditLogEntry
paths./auditlog/{resourceId}.get.parameters.length: 1
paths./auditlog/{resourceId}.get.parameters[0].$ref: '#/parameters/ResourceId'
paths./auditlog/{resourceId}.get.responses.200.description: Audit log entry response
paths./auditlog/{resourceId}.get.responses.200.schema.$ref: '#/definitions/AuditLogEntry'
paths./auditlog/{resourceId}.get.responses.401.$ref: '#/responses/Standard401'
paths./auditlog/{resourceId}.get.responses.404.$ref: '#/responses/Standard404'
paths./auditlog/{resourceId}.get.summary: Get a webhook by ID
paths./auditlog/{resourceId}.get.tags.length: 1
paths./auditlog/{resourceId}.get.tags[0]: audit log
paths./environments/{projectKey}.post.operationId: postEnvironment
paths./environments/{projectKey}.post.parameters.length: 2
paths./environments/{projectKey}.post.parameters[0].$ref: '#/parameters/ProjectKey'
paths./environments/{projectKey}.post.parameters[1].$ref: '#/parameters/EnvironmentPostRequest'
paths./environments/{projectKey}.post.responses.201.$ref: '#/responses/Standard201'
paths./environments/{projectKey}.post.responses.400.$ref: '#/responses/Standard400'
paths./environments/{projectKey}.post.responses.401.$ref: '#/responses/Standard401'
paths./environments/{projectKey}.post.responses.409.$ref: '#/responses/Standard409'
paths./environments/{projectKey}.post.summary: Create an environment
paths./environments/{projectKey}.post.tags.length: 1
paths./environments/{projectKey}.post.tags[0]: environments
paths./environments/{projectKey}/{environmentKey}.delete.operationId: deleteEnvironment
paths./environments/{projectKey}/{environmentKey}.delete.parameters.length: 2
paths./environments/{projectKey}/{environmentKey}.delete.parameters[0].$ref: '#/parameters/ProjectKey'
paths./environments/{projectKey}/{environmentKey}.delete.parameters[1].$ref: '#/parameters/EnvironmentKey'
paths./environments/{projectKey}/{environmentKey}.delete.responses.204.$ref: '#/responses/Standard204'
paths./environments/{projectKey}/{environmentKey}.delete.responses.401.$ref: '#/responses/Standard401'
paths./environments/{projectKey}/{environmentKey}.delete.responses.404.$ref: '#/responses/Standard404'
paths./environments/{projectKey}/{environmentKey}.delete.summary: Delete an environment
  by ID
paths./environments/{projectKey}/{environmentKey}.delete.tags.length: 1
paths./environments/{projectKey}/{environmentKey}.delete.tags[0]: environments
paths./environments/{projectKey}/{environmentKey}.get.operationId: getEnvironment
paths./environments/{projectKey}/{environmentKey}.get.parameters.length: 2
paths./environments/{projectKey}/{environmentKey}.get.parameters[0].$ref: '#/parameters/ProjectKey'
paths./environments/{projectKey}/{environmentKey}.get.parameters[1].$ref: '#/parameters/EnvironmentKey'
paths./environments/{projectKey}/{environmentKey}.get.responses.200.description: Environment
  response
paths./environments/{projectKey}/{environmentKey}.get.responses.200.schema.$ref: '#/definitions/Environment'
paths./environments/{projectKey}/{environmentKey}.get.responses.401.$ref: '#/responses/Standard401'
paths./environments/{projectKey}/{environmentKey}.get.responses.404.$ref: '#/responses/Standard404'
paths./environments/{projectKey}/{environmentKey}.get.summary: Get an environment
  by key.
paths./environments/{projectKey}/{environmentKey}.get.tags.length: 1
paths./environments/{projectKey}/{environmentKey}.get.tags[0]: environments
paths./environments/{projectKey}/{environmentKey}.patch.operationId: patchEnvironment
paths./environments/{projectKey}/{environmentKey}.patch.parameters.length: 3
paths./environments/{projectKey}/{environmentKey}.patch.parameters[0].$ref: '#/parameters/ProjectKey'
paths./environments/{projectKey}/{environmentKey}.patch.parameters[1].$ref: '#/parameters/EnvironmentKey'
paths./environments/{projectKey}/{environmentKey}.patch.parameters[2].$ref: '#/parameters/PatchRequest'
paths./environments/{projectKey}/{environmentKey}.patch.responses.400.$ref: '#/responses/Standard400'
paths./environments/{projectKey}/{environmentKey}.patch.responses.401.$ref: '#/responses/Standard401'
paths./environments/{projectKey}/{environmentKey}.patch.responses.404.$ref: '#/responses/Standard404'
paths./environments/{projectKey}/{environmentKey}.patch.responses.409.$ref: '#/responses/Standard409'
paths./environments/{projectKey}/{environmentKey}.patch.summary: Modify an environment
  by ID
paths./environments/{projectKey}/{environmentKey}.patch.tags.length: 1
paths./environments/{projectKey}/{environmentKey}.patch.tags[0]: environments
paths./flag-statuses/{projectKey}/{environmentKey}.get.operationId: getFeatureFlagStatus
paths./flag-statuses/{projectKey}/{environmentKey}.get.parameters.length: 2
paths./flag-statuses/{projectKey}/{environmentKey}.get.parameters[0].$ref: '#/parameters/ProjectKey'
paths./flag-statuses/{projectKey}/{environmentKey}.get.parameters[1].$ref: '#/parameters/EnvironmentKey'
paths./flag-statuses/{projectKey}/{environmentKey}.get.responses.200.description: List
  of feature flag statuses
paths./flag-statuses/{projectKey}/{environmentKey}.get.responses.200.schema.$ref: '#/definitions/FeatureFlagStatuses'
paths./flag-statuses/{projectKey}/{environmentKey}.get.responses.401.$ref: '#/responses/Standard401'
paths./flag-statuses/{projectKey}/{environmentKey}.get.summary: Get a list of statuses
  for all feature flags
paths./flag-statuses/{projectKey}/{environmentKey}.get.tags.length: 1
paths./flag-statuses/{projectKey}/{environmentKey}.get.tags[0]: flags
paths./flag-statuses/{projectKey}/{environmentKey}/{featureFlagKey}.get.operationId: getFeatureFlagStatuses
paths./flag-statuses/{projectKey}/{environmentKey}/{featureFlagKey}.get.parameters.length: 3
paths./flag-statuses/{projectKey}/{environmentKey}/{featureFlagKey}.get.parameters[0].$ref: '#/parameters/ProjectKey'
paths./flag-statuses/{projectKey}/{environmentKey}/{featureFlagKey}.get.parameters[1].$ref: '#/parameters/EnvironmentKey'
paths./flag-statuses/{projectKey}/{environmentKey}/{featureFlagKey}.get.parameters[2].$ref: '#/parameters/FeatureFlagKey'
paths./flag-statuses/{projectKey}/{environmentKey}/{featureFlagKey}.get.responses.200.description: Feature
  flag status by flag key
paths./flag-statuses/{projectKey}/{environmentKey}/{featureFlagKey}.get.responses.200.schema.$ref: '#/definitions/FeatureFlagStatus'
paths./flag-statuses/{projectKey}/{environmentKey}/{featureFlagKey}.get.responses.401.$ref: '#/responses/Standard401'
paths./flag-statuses/{projectKey}/{environmentKey}/{featureFlagKey}.get.summary: Get
  a list of statuses for all feature flags
paths./flag-statuses/{projectKey}/{environmentKey}/{featureFlagKey}.get.tags.length: 1
paths./flag-statuses/{projectKey}/{environmentKey}/{featureFlagKey}.get.tags[0]: flags
paths./flags/{projectKey}.get.operationId: getFeatureFlags
paths./flags/{projectKey}.get.parameters.length: 3
paths./flags/{projectKey}.get.parameters[0].$ref: '#/parameters/ProjectKey'
paths./flags/{projectKey}.get.parameters[1].$ref: '#/parameters/EnvironmentKeyQuery'
paths./flags/{projectKey}.get.parameters[2].$ref: '#/parameters/Tag'
paths./flags/{projectKey}.get.responses.200.description: Flags response
paths./flags/{projectKey}.get.responses.200.schema.$ref: '#/definitions/FeatureFlags'
paths./flags/{projectKey}.get.responses.401.$ref: '#/responses/Standard401'
paths./flags/{projectKey}.get.summary: Get a list of all features in the given project.
paths./flags/{projectKey}.get.tags.length: 1
paths./flags/{projectKey}.get.tags[0]: flags
paths./flags/{projectKey}.post.operationId: postFeatureFlag
paths./flags/{projectKey}.post.parameters.length: 2
paths./flags/{projectKey}.post.parameters[0].$ref: '#/parameters/ProjectKey'
paths./flags/{projectKey}.post.parameters[1].$ref: '#/parameters/FeatureFlagPostRequest'
paths./flags/{projectKey}.post.responses.201.$ref: '#/responses/Standard201'
paths./flags/{projectKey}.post.responses.400.$ref: '#/responses/Standard400'
paths./flags/{projectKey}.post.responses.401.$ref: '#/responses/Standard401'
paths./flags/{projectKey}.post.responses.409.$ref: '#/responses/Standard409'
paths./flags/{projectKey}.post.summary: Create a feature flag
paths./flags/{projectKey}.post.tags.length: 1
paths./flags/{projectKey}.post.tags[0]: flags
paths./flags/{projectKey}/{featureFlagKey}.delete.operationId: deleteFeatureFlag
paths./flags/{projectKey}/{featureFlagKey}.delete.parameters.length: 2
paths./flags/{projectKey}/{featureFlagKey}.delete.parameters[0].$ref: '#/parameters/ProjectKey'
paths./flags/{projectKey}/{featureFlagKey}.delete.parameters[1].$ref: '#/parameters/FeatureFlagKey'
paths./flags/{projectKey}/{featureFlagKey}.delete.responses.204.$ref: '#/responses/Standard204'
paths./flags/{projectKey}/{featureFlagKey}.delete.responses.401.$ref: '#/responses/Standard401'
paths./flags/{projectKey}/{featureFlagKey}.delete.responses.404.$ref: '#/responses/Standard404'
paths./flags/{projectKey}/{featureFlagKey}.delete.summary: Delete a feature flag by
  ID
paths./flags/{projectKey}/{featureFlagKey}.delete.tags.length: 1
paths./flags/{projectKey}/{featureFlagKey}.delete.tags[0]: flags
paths./flags/{projectKey}/{featureFlagKey}.get.operationId: getFeatureFlag
paths./flags/{projectKey}/{featureFlagKey}.get.parameters.length: 3
paths./flags/{projectKey}/{featureFlagKey}.get.parameters[0].$ref: '#/parameters/ProjectKey'
paths./flags/{projectKey}/{featureFlagKey}.get.parameters[1].$ref: '#/parameters/FeatureFlagKey'
paths./flags/{projectKey}/{featureFlagKey}.get.parameters[2].$ref: '#/parameters/EnvironmentKeyQuery'
paths./flags/{projectKey}/{featureFlagKey}.get.responses.200.description: Flag response
paths./flags/{projectKey}/{featureFlagKey}.get.responses.200.schema.$ref: '#/definitions/FeatureFlag'
paths./flags/{projectKey}/{featureFlagKey}.get.responses.401.$ref: '#/responses/Standard401'
paths./flags/{projectKey}/{featureFlagKey}.get.responses.404.$ref: '#/responses/Standard404'
paths./flags/{projectKey}/{featureFlagKey}.get.summary: Get a single feature flag
  by key.
paths./flags/{projectKey}/{featureFlagKey}.get.tags.length: 1
paths./flags/{projectKey}/{featureFlagKey}.get.tags[0]: flags
paths./flags/{projectKey}/{featureFlagKey}.patch.operationId: patchFeatureFlag
paths./flags/{projectKey}/{featureFlagKey}.patch.parameters.length: 3
paths./flags/{projectKey}/{featureFlagKey}.patch.parameters[0].$ref: '#/parameters/ProjectKey'
paths./flags/{projectKey}/{featureFlagKey}.patch.parameters[1].$ref: '#/parameters/FeatureFlagKey'
paths./flags/{projectKey}/{featureFlagKey}.patch.parameters[2].$ref: '#/parameters/PatchRequest'
paths./flags/{projectKey}/{featureFlagKey}.patch.responses.200.$ref: '#/responses/FeatureFlags200'
paths./flags/{projectKey}/{featureFlagKey}.patch.responses.400.$ref: '#/responses/Standard400'
paths./flags/{projectKey}/{featureFlagKey}.patch.responses.401.$ref: '#/responses/Standard401'
paths./flags/{projectKey}/{featureFlagKey}.patch.responses.404.$ref: '#/responses/Standard404'
paths./flags/{projectKey}/{featureFlagKey}.patch.responses.409.$ref: '#/responses/Standard409'
paths./flags/{projectKey}/{featureFlagKey}.patch.summary: Modify a feature flag by
  ID
paths./flags/{projectKey}/{featureFlagKey}.patch.tags.length: 1
paths./flags/{projectKey}/{featureFlagKey}.patch.tags[0]: flags
paths./projects.get.operationId: getProjects
paths./projects.get.responses.200.description: Projects response
paths./projects.get.responses.200.schema.$ref: '#/definitions/Projects'
paths./projects.get.responses.401.$ref: '#/responses/Standard401'
paths./projects.get.summary: Returns a list of all projects in the account.
paths./projects.get.tags.length: 1
paths./projects.get.tags[0]: projects
paths./projects.post.operationId: postProject
paths./projects.post.parameters.length: 1
paths./projects.post.parameters[0].$ref: '#/parameters/ProjectPostRequest'
paths./projects.post.responses.201.$ref: '#/responses/Standard201'
paths./projects.post.responses.400.$ref: '#/responses/Standard400'
paths./projects.post.responses.401.$ref: '#/responses/Standard401'
paths./projects.post.responses.409.$ref: '#/responses/Standard409'
paths./projects.post.summary: Create a project
paths./projects.post.tags.length: 1
paths./projects.post.tags[0]: projects
paths./projects/{projectKey}.delete.operationId: deleteProject
paths./projects/{projectKey}.delete.parameters.length: 1
paths./projects/{projectKey}.delete.parameters[0].$ref: '#/parameters/ProjectKey'
paths./projects/{projectKey}.delete.responses.204.$ref: '#/responses/Standard204'
paths./projects/{projectKey}.delete.responses.401.$ref: '#/responses/Standard401'
paths./projects/{projectKey}.delete.responses.404.$ref: '#/responses/Standard404'
paths./projects/{projectKey}.delete.summary: Delete a project by ID
paths./projects/{projectKey}.delete.tags.length: 1
paths./projects/{projectKey}.delete.tags[0]: projects
paths./projects/{projectKey}.get.operationId: getProject
paths./projects/{projectKey}.get.parameters.length: 1
paths./projects/{projectKey}.get.parameters[0].$ref: '#/parameters/ProjectKey'
paths./projects/{projectKey}.get.responses.200.$ref: '#/responses/Projects200'
paths./projects/{projectKey}.get.responses.401.$ref: '#/responses/Standard401'
paths./projects/{projectKey}.get.responses.404.$ref: '#/responses/Standard404'
paths./projects/{projectKey}.get.summary: Get a project by key.
paths./projects/{projectKey}.get.tags.length: 1
paths./projects/{projectKey}.get.tags[0]: projects
paths./projects/{projectKey}.patch.operationId: patchProject
paths./projects/{projectKey}.patch.parameters.length: 2
paths./projects/{projectKey}.patch.parameters[0].$ref: '#/parameters/ProjectKey'
paths./projects/{projectKey}.patch.parameters[1].$ref: '#/parameters/PatchRequest'
paths./projects/{projectKey}.patch.responses.400.$ref: '#/responses/Standard400'
paths./projects/{projectKey}.patch.responses.401.$ref: '#/responses/Standard401'
paths./projects/{projectKey}.patch.responses.404.$ref: '#/responses/Standard404'
paths./projects/{projectKey}.patch.responses.409.$ref: '#/responses/Standard409'
paths./projects/{projectKey}.patch.summary: Modify a project by ID
paths./projects/{projectKey}.patch.tags.length: 1
paths./projects/{projectKey}.patch.tags[0]: projects
paths./user-search/{projectKey}/{environmentKey}.get.operationId: getSearchUsers
paths./user-search/{projectKey}/{environmentKey}.get.parameters.length: 6
paths./user-search/{projectKey}/{environmentKey}.get.parameters[0].$ref: '#/parameters/ProjectKey'
paths./user-search/{projectKey}/{environmentKey}.get.parameters[1].$ref: '#/parameters/EnvironmentKey'
paths./user-search/{projectKey}/{environmentKey}.get.parameters[2].$ref: '#/parameters/Query'
paths./user-search/{projectKey}/{environmentKey}.get.parameters[3].$ref: '#/parameters/Limit'
paths./user-search/{projectKey}/{environmentKey}.get.parameters[4].$ref: '#/parameters/Offset'
paths./user-search/{projectKey}/{environmentKey}.get.parameters[5].$ref: '#/parameters/After'
paths./user-search/{projectKey}/{environmentKey}.get.responses.200.description: Users
  response
paths./user-search/{projectKey}/{environmentKey}.get.responses.200.schema.$ref: '#/definitions/Users'
paths./user-search/{projectKey}/{environmentKey}.get.responses.401.$ref: '#/responses/Standard401'
paths./user-search/{projectKey}/{environmentKey}.get.summary: Search users in LaunchDarkly
  based on their last active date, or a search query.
paths./user-search/{projectKey}/{environmentKey}.get.tags.length: 1
paths./user-search/{projectKey}/{environmentKey}.get.tags[0]: users
paths./users/{projectKey}/{environmentKey}.get.operationId: getUsers
paths./users/{projectKey}/{environmentKey}.get.parameters.length: 3
paths./users/{projectKey}/{environmentKey}.get.parameters[0].$ref: '#/parameters/ProjectKey'
paths./users/{projectKey}/{environmentKey}.get.parameters[1].$ref: '#/parameters/EnvironmentKey'
paths./users/{projectKey}/{environmentKey}.get.parameters[2].$ref: '#/parameters/Limit'
paths./users/{projectKey}/{environmentKey}.get.responses.200.description: Users response
paths./users/{projectKey}/{environmentKey}.get.responses.200.schema.$ref: '#/definitions/Users'
paths./users/{projectKey}/{environmentKey}.get.responses.401.$ref: '#/responses/Standard401'
paths./users/{projectKey}/{environmentKey}.get.summary: List all users in the environment.
paths./users/{projectKey}/{environmentKey}.get.tags.length: 1
paths./users/{projectKey}/{environmentKey}.get.tags[0]: users
paths./users/{projectKey}/{environmentKey}/{userKey}.delete.operationId: deleteUser
paths./users/{projectKey}/{environmentKey}/{userKey}.delete.parameters.length: 3
paths./users/{projectKey}/{environmentKey}/{userKey}.delete.parameters[0].$ref: '#/parameters/ProjectKey'
paths./users/{projectKey}/{environmentKey}/{userKey}.delete.parameters[1].$ref: '#/parameters/EnvironmentKey'
paths./users/{projectKey}/{environmentKey}/{userKey}.delete.parameters[2].$ref: '#/parameters/UserKey'
paths./users/{projectKey}/{environmentKey}/{userKey}.delete.responses.204.$ref: '#/responses/Standard204'
paths./users/{projectKey}/{environmentKey}/{userKey}.delete.responses.401.$ref: '#/responses/Standard401'
paths./users/{projectKey}/{environmentKey}/{userKey}.delete.responses.404.$ref: '#/responses/Standard404'
paths./users/{projectKey}/{environmentKey}/{userKey}.delete.summary: Delete a user
  by ID
paths./users/{projectKey}/{environmentKey}/{userKey}.delete.tags.length: 1
paths./users/{projectKey}/{environmentKey}/{userKey}.delete.tags[0]: users
paths./users/{projectKey}/{environmentKey}/{userKey}.get.operationId: getUser
paths./users/{projectKey}/{environmentKey}/{userKey}.get.parameters.length: 3
paths./users/{projectKey}/{environmentKey}/{userKey}.get.parameters[0].$ref: '#/parameters/ProjectKey'
paths./users/{projectKey}/{environmentKey}/{userKey}.get.parameters[1].$ref: '#/parameters/EnvironmentKey'
paths./users/{projectKey}/{environmentKey}/{userKey}.get.parameters[2].$ref: '#/parameters/UserKey'
paths./users/{projectKey}/{environmentKey}/{userKey}.get.responses.200.description: User
  response
paths./users/{projectKey}/{environmentKey}/{userKey}.get.responses.200.schema.$ref: '#/definitions/User'
paths./users/{projectKey}/{environmentKey}/{userKey}.get.responses.401.$ref: '#/responses/Standard401'
paths./users/{projectKey}/{environmentKey}/{userKey}.get.responses.404.$ref: '#/responses/Standard404'
paths./users/{projectKey}/{environmentKey}/{userKey}.get.summary: Get a user by key.
paths./users/{projectKey}/{environmentKey}/{userKey}.get.tags.length: 1
paths./users/{projectKey}/{environmentKey}/{userKey}.get.tags[0]: users
paths./users/{projectKey}/{environmentKey}/{userKey}/flags.get.operationId: getUserFlagSettings
paths./users/{projectKey}/{environmentKey}/{userKey}/flags.get.parameters.length: 3
paths./users/{projectKey}/{environmentKey}/{userKey}/flags.get.parameters[0].$ref: '#/parameters/ProjectKey'
paths./users/{projectKey}/{environmentKey}/{userKey}/flags.get.parameters[1].$ref: '#/parameters/EnvironmentKey'
paths./users/{projectKey}/{environmentKey}/{userKey}/flags.get.parameters[2].$ref: '#/parameters/UserKey'
paths./users/{projectKey}/{environmentKey}/{userKey}/flags.get.responses.200.description: User
  flags settings response
paths./users/{projectKey}/{environmentKey}/{userKey}/flags.get.responses.200.schema.$ref: '#/definitions/UserFlagSettings'
paths./users/{projectKey}/{environmentKey}/{userKey}/flags.get.responses.401.$ref: '#/responses/Standard401'
paths./users/{projectKey}/{environmentKey}/{userKey}/flags.get.responses.404.$ref: '#/responses/Standard404'
paths./users/{projectKey}/{environmentKey}/{userKey}/flags.get.summary: Lists the
  current flag settings for a given user.
paths./users/{projectKey}/{environmentKey}/{userKey}/flags.get.tags.length: 1
paths./users/{projectKey}/{environmentKey}/{userKey}/flags.get.tags[0]: user settings
paths./users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}.get.operationId: getUserFlagSetting
paths./users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}.get.parameters.length: 4
paths./users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}.get.parameters[0].$ref: '#/parameters/ProjectKey'
paths./users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}.get.parameters[1].$ref: '#/parameters/EnvironmentKey'
paths./users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}.get.parameters[2].$ref: '#/parameters/UserKey'
paths./users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}.get.parameters[3].$ref: '#/parameters/FeatureFlagKey'
paths./users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}.get.responses.200.description: User
  flag setting response
paths./users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}.get.responses.200.schema.$ref: '#/definitions/UserFlagSetting'
paths./users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}.get.responses.401.$ref: '#/responses/Standard401'
paths./users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}.get.responses.404.$ref: '#/responses/Standard404'
paths./users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}.get.summary: Get
  a user by key.
paths./users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}.get.tags.length: 1
paths./users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}.get.tags[0]: user
  settings
paths./users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}.put.operationId: putFlagSetting
paths./users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}.put.parameters.length: 5
paths./users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}.put.parameters[0].$ref: '#/parameters/ProjectKey'
paths./users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}.put.parameters[1].$ref: '#/parameters/EnvironmentKey'
paths./users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}.put.parameters[2].$ref: '#/parameters/UserKey'
paths./users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}.put.parameters[3].$ref: '#/parameters/FeatureFlagKey'
paths./users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}.put.parameters[4].$ref: '#/parameters/UserSettingsPutRequest'
paths./users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}.put.responses.204.$ref: '#/responses/Standard204'
paths./users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}.put.responses.400.$ref: '#/responses/Standard400'
paths./users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}.put.responses.401.$ref: '#/responses/Standard401'
paths./users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}.put.responses.404.$ref: '#/responses/Standard404'
paths./users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}.put.summary: Specifically
  enable or disable a feature flag for a user based on their key.
paths./users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}.put.tags.length: 1
paths./users/{projectKey}/{environmentKey}/{userKey}/flags/{featureFlagKey}.put.tags[0]: user
  settings
paths./webhooks.get.operationId: getWebhooks
paths./webhooks.get.responses.200.description: Webhooks response
paths./webhooks.get.responses.200.schema.$ref: '#/definitions/Webhooks'
paths./webhooks.get.responses.401.$ref: '#/responses/Standard401'
paths./webhooks.get.summary: Fetch a list of all webhooks
paths./webhooks.get.tags.length: 1
paths./webhooks.get.tags[0]: webhooks
paths./webhooks.post.operationId: postWebhook
paths./webhooks.post.parameters.length: 1
paths./webhooks.post.parameters[0].$ref: '#/parameters/WebhookPostRequest'
paths./webhooks.post.responses.201.$ref: '#/responses/Standard201'
paths./webhooks.post.responses.400.$ref: '#/responses/Standard400'
paths./webhooks.post.responses.401.$ref: '#/responses/Standard401'
paths./webhooks.post.summary: Create a webhook
paths./webhooks.post.tags.length: 1
paths./webhooks.post.tags[0]: webhooks
paths./webhooks/{resourceId}.delete.operationId: deleteWebhook
paths./webhooks/{resourceId}.delete.parameters.length: 1
paths./webhooks/{resourceId}.delete.parameters[0].$ref: '#/parameters/ResourceId'
paths./webhooks/{resourceId}.delete.responses.204.$ref: '#/responses/Standard204'
paths./webhooks/{resourceId}.delete.responses.401.$ref: '#/responses/Standard401'
paths./webhooks/{resourceId}.delete.responses.404.$ref: '#/responses/Standard404'
paths./webhooks/{resourceId}.delete.summary: Delete a webhook by ID
paths./webhooks/{resourceId}.delete.tags.length: 1
paths./webhooks/{resourceId}.delete.tags[0]: webhooks
paths./webhooks/{resourceId}.get.operationId: getWebhook
paths./webhooks/{resourceId}.get.parameters.length: 1
paths./webhooks/{resourceId}.get.parameters[0].$ref: '#/parameters/ResourceId'
paths./webhooks/{resourceId}.get.responses.200.$ref: '#/responses/Webhooks200'
paths./webhooks/{resourceId}.get.responses.401.$ref: '#/responses/Standard401'
paths./webhooks/{resourceId}.get.responses.404.$ref: '#/responses/Standard404'
paths./webhooks/{resourceId}.get.summary: Get a webhook by ID
paths./webhooks/{resourceId}.get.tags.length: 1
paths./webhooks/{resourceId}.get.tags[0]: webhooks
paths./webhooks/{resourceId}.patch.operationId: patchWebhook
paths./webhooks/{resourceId}.patch.parameters.length: 2
paths./webhooks/{resourceId}.patch.parameters[0].$ref: '#/parameters/ResourceId'
paths./webhooks/{resourceId}.patch.parameters[1].$ref: '#/parameters/PatchRequest'
paths./webhooks/{resourceId}.patch.responses.200.$ref: '#/responses/Webhooks200'
paths./webhooks/{resourceId}.patch.responses.400.$ref: '#/responses/Standard400'
paths./webhooks/{resourceId}.patch.responses.401.$ref: '#/responses/Standard401'
paths./webhooks/{resourceId}.patch.responses.404.$ref: '#/responses/Standard404'
paths./webhooks/{resourceId}.patch.responses.409.$ref: '#/responses/Standard409'
paths./webhooks/{resourceId}.patch.summary: Modify a webhook by ID
paths./webhooks/{resourceId}.patch.tags.length: 1
paths./webhooks/{resourceId}.patch.tags[0]: webhooks
produces.length: 1
produces[0]: application/json
responses.FeatureFlags200.description: Feature flag response
responses.FeatureFlags200.schema.$ref: '#/definitions/FeatureFlag'
responses.Projects200.description: Project response
responses.Projects200.schema.$ref: '#/definitions/Project'
responses.Root200.description: A list of links to available resources in the API
responses.Root200.schema.$ref: '#/definitions/Links'
responses.Standard201.description: Resource created
responses.Standard204.description: Action completed successfully
responses.Standard400.description: Invalid request body
responses.Standard401.description: Invalid access token
responses.Standard404.description: Invalid resource specifier
responses.Standard409.description: Status conflict
responses.Webhooks200.description: Webhook response
responses.Webhooks200.schema.$ref: '#/definitions/Webhook'
schemes.length: 1
schemes[0]: https
security.length: 1
security[0].Token.length: 0
securityDefinitions.Token.description: https://app.launchdarkly.com/settings#/tokens
securityDefinitions.Token.in: header
securityDefinitions.Token.name: Authorization
securityDefinitions.Token.type: apiKey
swagger: "2.0"
