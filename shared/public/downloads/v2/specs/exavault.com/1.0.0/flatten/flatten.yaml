basePath: /
definitions.Account.properties.appliedTrial.type: string
definitions.Account.properties.bandwidthQuotaLimit.format: int64
definitions.Account.properties.bandwidthQuotaLimit.type: integer
definitions.Account.properties.bandwidthQuotaUsed.format: int64
definitions.Account.properties.bandwidthQuotaUsed.type: integer
definitions.Account.properties.branding.type: boolean
definitions.Account.properties.clientId.format: int32
definitions.Account.properties.clientId.type: integer
definitions.Account.properties.complexPasswords.type: boolean
definitions.Account.properties.created.type: string
definitions.Account.properties.customDomain.type: boolean
definitions.Account.properties.diskQuotaLimit.format: int64
definitions.Account.properties.diskQuotaLimit.type: integer
definitions.Account.properties.diskQuotaUsed.format: int64
definitions.Account.properties.diskQuotaUsed.type: integer
definitions.Account.properties.externalDomains.type: string
definitions.Account.properties.freeTrial.type: boolean
definitions.Account.properties.id.format: int32
definitions.Account.properties.id.type: integer
definitions.Account.properties.masterAccount.$ref: '#/definitions/User'
definitions.Account.properties.maxUsers.format: int32
definitions.Account.properties.maxUsers.type: integer
definitions.Account.properties.modified.type: string
definitions.Account.properties.planCode.type: string
definitions.Account.properties.quotaNoticeEnabled.format: int32
definitions.Account.properties.quotaNoticeEnabled.type: integer
definitions.Account.properties.quotaNoticeThreshold.format: int32
definitions.Account.properties.quotaNoticeThreshold.type: integer
definitions.Account.properties.redirect.type: string
definitions.Account.properties.secureOnly.type: boolean
definitions.Account.properties.showReferralLinks.type: boolean
definitions.Account.properties.status.format: int32
definitions.Account.properties.status.type: integer
definitions.Account.properties.userCount.format: int32
definitions.Account.properties.userCount.type: integer
definitions.Account.properties.username.type: string
definitions.Account.required.length: 25
definitions.Account.required[0]: id
definitions.Account.required[1]: username
definitions.Account.required[2]: maxUsers
definitions.Account.required[3]: userCount
definitions.Account.required[4]: masterAccount
definitions.Account.required[5]: status
definitions.Account.required[6]: branding
definitions.Account.required[7]: customDomain
definitions.Account.required[8]: planCode
definitions.Account.required[9]: diskQuotaLimit
definitions.Account.required[10]: bandwidthQuotaLimit
definitions.Account.required[11]: diskQuotaUsed
definitions.Account.required[12]: bandwidthQuotaUsed
definitions.Account.required[13]: quotaNoticeEnabled
definitions.Account.required[14]: quotaNoticeThreshold
definitions.Account.required[15]: redirect
definitions.Account.required[16]: secureOnly
definitions.Account.required[17]: complexPasswords
definitions.Account.required[18]: showReferralLinks
definitions.Account.required[19]: externalDomains
definitions.Account.required[20]: freeTrial
definitions.Account.required[21]: appliedTrial
definitions.Account.required[22]: clientId
definitions.Account.required[23]: created
definitions.Account.required[24]: modified
definitions.AccountResponse.properties.error.$ref: '#/definitions/Error'
definitions.AccountResponse.properties.results.$ref: '#/definitions/Account'
definitions.AccountResponse.properties.success.format: int32
definitions.AccountResponse.properties.success.type: integer
definitions.AccountResponse.required.length: 3
definitions.AccountResponse.required[0]: success
definitions.AccountResponse.required[1]: error
definitions.AccountResponse.required[2]: results
definitions.Auth.properties.accessToken.type: string
definitions.Auth.properties.clientIp.type: string
definitions.Auth.properties.mode.format: int32
definitions.Auth.properties.mode.type: integer
definitions.Auth.properties.username.type: string
definitions.Auth.required.length: 4
definitions.Auth.required[0]: username
definitions.Auth.required[1]: accessToken
definitions.Auth.required[2]: mode
definitions.Auth.required[3]: clientIp
definitions.AuthResponse.properties.error.$ref: '#/definitions/Error'
definitions.AuthResponse.properties.results.$ref: '#/definitions/Auth'
definitions.AuthResponse.properties.success.format: int32
definitions.AuthResponse.properties.success.type: integer
definitions.AuthResponse.required.length: 3
definitions.AuthResponse.required[0]: success
definitions.AuthResponse.required[1]: error
definitions.AuthResponse.required[2]: results
definitions.AvailableUser.properties.available.type: boolean
definitions.AvailableUser.required.length: 1
definitions.AvailableUser.required[0]: available
definitions.AvailableUserResponse.properties.error.$ref: '#/definitions/Error'
definitions.AvailableUserResponse.properties.results.$ref: '#/definitions/AvailableUser'
definitions.AvailableUserResponse.properties.success.format: int32
definitions.AvailableUserResponse.properties.success.type: integer
definitions.AvailableUserResponse.required.length: 3
definitions.AvailableUserResponse.required[0]: success
definitions.AvailableUserResponse.required[1]: error
definitions.AvailableUserResponse.required[2]: results
definitions.DeletedResource.properties.file.type: string
definitions.DeletedResource.properties.size.format: int64
definitions.DeletedResource.properties.size.type: integer
definitions.DeletedResource.properties.success.format: int32
definitions.DeletedResource.properties.success.type: integer
definitions.DeletedResource.required.length: 3
definitions.DeletedResource.required[0]: file
definitions.DeletedResource.required[1]: size
definitions.DeletedResource.required[2]: success
definitions.DeletedResourcesResponse.properties.error.$ref: '#/definitions/Error'
definitions.DeletedResourcesResponse.properties.results.items.$ref: '#/definitions/DeletedResource'
definitions.DeletedResourcesResponse.properties.results.type: array
definitions.DeletedResourcesResponse.properties.success.format: int32
definitions.DeletedResourcesResponse.properties.success.type: integer
definitions.DeletedResourcesResponse.required.length: 3
definitions.DeletedResourcesResponse.required[0]: success
definitions.DeletedResourcesResponse.required[1]: error
definitions.DeletedResourcesResponse.required[2]: results
definitions.Error.properties.code.format: int32
definitions.Error.properties.code.type: integer
definitions.Error.properties.message.type: string
definitions.Error.required.length: 2
definitions.Error.required[0]: message
definitions.Error.required[1]: code
definitions.ExistingResource.properties.exists.type: boolean
definitions.ExistingResource.properties.resource.$ref: '#/definitions/ResourceProperty'
definitions.ExistingResource.required.length: 2
definitions.ExistingResource.required[0]: exists
definitions.ExistingResource.required[1]: resource
definitions.ExistingResourcesResponse.properties.error.$ref: '#/definitions/Error'
definitions.ExistingResourcesResponse.properties.results.items.$ref: '#/definitions/ExistingResource'
definitions.ExistingResourcesResponse.properties.results.type: array
definitions.ExistingResourcesResponse.properties.success.format: int32
definitions.ExistingResourcesResponse.properties.success.type: integer
definitions.ExistingResourcesResponse.required.length: 3
definitions.ExistingResourcesResponse.required[0]: success
definitions.ExistingResourcesResponse.required[1]: error
definitions.ExistingResourcesResponse.required[2]: results
definitions.LogEntry.properties.bytesTransferred.format: int64
definitions.LogEntry.properties.bytesTransferred.type: integer
definitions.LogEntry.properties.created.type: string
definitions.LogEntry.properties.duration.type: string
definitions.LogEntry.properties.fileName.type: string
definitions.LogEntry.properties.fileSource.type: string
definitions.LogEntry.properties.id.format: int32
definitions.LogEntry.properties.id.type: integer
definitions.LogEntry.properties.ipAddress.type: string
definitions.LogEntry.properties.operation.type: string
definitions.LogEntry.properties.protocol.type: string
definitions.LogEntry.properties.sessionId.type: string
definitions.LogEntry.properties.status.type: string
definitions.LogEntry.properties.username.type: string
definitions.LogEntry.required.length: 12
definitions.LogEntry.required[0]: fileName
definitions.LogEntry.required[1]: fileSource
definitions.LogEntry.required[2]: operation
definitions.LogEntry.required[3]: duration
definitions.LogEntry.required[4]: bytesTransferred
definitions.LogEntry.required[5]: id
definitions.LogEntry.required[6]: created
definitions.LogEntry.required[7]: username
definitions.LogEntry.required[8]: sessionId
definitions.LogEntry.required[9]: ipAddress
definitions.LogEntry.required[10]: protocol
definitions.LogEntry.required[11]: status
definitions.LogResponse.properties.error.$ref: '#/definitions/Error'
definitions.LogResponse.properties.results.items.$ref: '#/definitions/LogEntry'
definitions.LogResponse.properties.results.type: array
definitions.LogResponse.properties.success.format: int32
definitions.LogResponse.properties.success.type: integer
definitions.LogResponse.required.length: 3
definitions.LogResponse.required[0]: success
definitions.LogResponse.required[1]: error
definitions.LogResponse.required[2]: results
definitions.Message.properties.body.type: string
definitions.Message.properties.created.type: string
definitions.Message.properties.id.format: int32
definitions.Message.properties.id.type: integer
definitions.Message.properties.modified.type: string
definitions.Message.properties.shareId.type: string
definitions.Message.properties.subject.type: string
definitions.Message.properties.userId.format: int32
definitions.Message.properties.userId.type: integer
definitions.Message.required.length: 7
definitions.Message.required[0]: id
definitions.Message.required[1]: userId
definitions.Message.required[2]: shareId
definitions.Message.required[3]: subject
definitions.Message.required[4]: body
definitions.Message.required[5]: created
definitions.Message.required[6]: modified
definitions.ModifiedResource.properties.destination.type: string
definitions.ModifiedResource.properties.file.type: string
definitions.ModifiedResource.properties.size.format: int64
definitions.ModifiedResource.properties.size.type: integer
definitions.ModifiedResource.properties.success.format: int32
definitions.ModifiedResource.properties.success.type: integer
definitions.ModifiedResource.required.length: 4
definitions.ModifiedResource.required[0]: file
definitions.ModifiedResource.required[1]: destination
definitions.ModifiedResource.required[2]: size
definitions.ModifiedResource.required[3]: success
definitions.ModifiedResourcesResponse.properties.error.$ref: '#/definitions/Error'
definitions.ModifiedResourcesResponse.properties.results.items.$ref: '#/definitions/ModifiedResource'
definitions.ModifiedResourcesResponse.properties.results.type: array
definitions.ModifiedResourcesResponse.properties.success.format: int32
definitions.ModifiedResourcesResponse.properties.success.type: integer
definitions.ModifiedResourcesResponse.required.length: 3
definitions.ModifiedResourcesResponse.required[0]: success
definitions.ModifiedResourcesResponse.required[1]: error
definitions.ModifiedResourcesResponse.required[2]: results
definitions.Notification.properties.action.type: string
definitions.Notification.properties.created.type: string
definitions.Notification.properties.id.format: int32
definitions.Notification.properties.id.type: integer
definitions.Notification.properties.modified.type: string
definitions.Notification.properties.name.type: string
definitions.Notification.properties.path.type: string
definitions.Notification.properties.readableDescription.type: string
definitions.Notification.properties.readableDescriptionWithoutPath.type: string
definitions.Notification.properties.recipientEmails.items.type: string
definitions.Notification.properties.recipientEmails.type: array
definitions.Notification.properties.recipients.items.$ref: '#/definitions/Recipient'
definitions.Notification.properties.recipients.type: array
definitions.Notification.properties.sendEmail.type: string
definitions.Notification.properties.shareId.type: string
definitions.Notification.properties.type.type: string
definitions.Notification.properties.userId.type: string
definitions.Notification.properties.usernames.items.type: string
definitions.Notification.properties.usernames.type: array
definitions.Notification.required.length: 15
definitions.Notification.required[0]: id
definitions.Notification.required[1]: userId
definitions.Notification.required[2]: type
definitions.Notification.required[3]: path
definitions.Notification.required[4]: name
definitions.Notification.required[5]: action
definitions.Notification.required[6]: usernames
definitions.Notification.required[7]: recipients
definitions.Notification.required[8]: recipientEmails
definitions.Notification.required[9]: sendEmail
definitions.Notification.required[10]: readableDescription
definitions.Notification.required[11]: readableDescriptionWithoutPath
definitions.Notification.required[12]: shareId
definitions.Notification.required[13]: created
definitions.Notification.required[14]: modified
definitions.NotificationActivityResponse.properties.error.$ref: '#/definitions/Error'
definitions.NotificationActivityResponse.properties.results.items.$ref: '#/definitions/NotificationMessage'
definitions.NotificationActivityResponse.properties.results.type: array
definitions.NotificationActivityResponse.properties.success.format: int32
definitions.NotificationActivityResponse.properties.success.type: integer
definitions.NotificationActivityResponse.required.length: 3
definitions.NotificationActivityResponse.required[0]: success
definitions.NotificationActivityResponse.required[1]: error
definitions.NotificationActivityResponse.required[2]: results
definitions.NotificationMessage.properties.action.type: string
definitions.NotificationMessage.properties.created.type: string
definitions.NotificationMessage.properties.id.format: int32
definitions.NotificationMessage.properties.id.type: integer
definitions.NotificationMessage.properties.message.type: string
definitions.NotificationMessage.properties.notificationSetting.$ref: '#/definitions/Notification'
definitions.NotificationMessage.properties.path.type: string
definitions.NotificationMessage.properties.read.type: boolean
definitions.NotificationMessage.properties.sent.type: boolean
definitions.NotificationMessage.properties.username.type: string
definitions.NotificationMessage.required.length: 9
definitions.NotificationMessage.required[0]: id
definitions.NotificationMessage.required[1]: notificationSetting
definitions.NotificationMessage.required[2]: message
definitions.NotificationMessage.required[3]: path
definitions.NotificationMessage.required[4]: action
definitions.NotificationMessage.required[5]: username
definitions.NotificationMessage.required[6]: sent
definitions.NotificationMessage.required[7]: read
definitions.NotificationMessage.required[8]: created
definitions.NotificationResponse.properties.error.$ref: '#/definitions/Error'
definitions.NotificationResponse.properties.results.$ref: '#/definitions/Notification'
definitions.NotificationResponse.properties.success.format: int32
definitions.NotificationResponse.properties.success.type: integer
definitions.NotificationResponse.required.length: 3
definitions.NotificationResponse.required[0]: success
definitions.NotificationResponse.required[1]: error
definitions.NotificationResponse.required[2]: results
definitions.NotificationsResponse.properties.error.$ref: '#/definitions/Error'
definitions.NotificationsResponse.properties.results.items.$ref: '#/definitions/Notification'
definitions.NotificationsResponse.properties.results.type: array
definitions.NotificationsResponse.properties.success.format: int32
definitions.NotificationsResponse.properties.success.type: integer
definitions.NotificationsResponse.required.length: 3
definitions.NotificationsResponse.required[0]: success
definitions.NotificationsResponse.required[1]: error
definitions.NotificationsResponse.required[2]: results
definitions.PreviewFile.properties.image.type: string
definitions.PreviewFile.properties.imageId.type: string
definitions.PreviewFile.properties.size.format: int64
definitions.PreviewFile.properties.size.type: integer
definitions.PreviewFile.required.length: 3
definitions.PreviewFile.required[0]: image
definitions.PreviewFile.required[1]: size
definitions.PreviewFile.required[2]: imageId
definitions.PreviewFileResponse.properties.error.$ref: '#/definitions/Error'
definitions.PreviewFileResponse.properties.results.$ref: '#/definitions/PreviewFile'
definitions.PreviewFileResponse.properties.success.format: int32
definitions.PreviewFileResponse.properties.success.type: integer
definitions.PreviewFileResponse.required.length: 3
definitions.PreviewFileResponse.required[0]: success
definitions.PreviewFileResponse.required[1]: error
definitions.PreviewFileResponse.required[2]: results
definitions.Recipient.properties.created.type: string
definitions.Recipient.properties.email.type: string
definitions.Recipient.properties.hash.type: string
definitions.Recipient.properties.id.format: int32
definitions.Recipient.properties.id.type: integer
definitions.Recipient.properties.received.type: boolean
definitions.Recipient.properties.sent.type: boolean
definitions.Recipient.properties.shareId.type: string
definitions.Recipient.properties.type.type: string
definitions.Recipient.required.length: 8
definitions.Recipient.required[0]: id
definitions.Recipient.required[1]: shareId
definitions.Recipient.required[2]: type
definitions.Recipient.required[3]: hash
definitions.Recipient.required[4]: email
definitions.Recipient.required[5]: sent
definitions.Recipient.required[6]: received
definitions.Recipient.required[7]: created
definitions.Resource.properties.inheritedNotifications.type: string
definitions.Resource.properties.inheritedShares.type: string
definitions.Resource.properties.resources.items.$ref: '#/definitions/ResourceProperty'
definitions.Resource.properties.resources.type: array
definitions.Resource.properties.totalFiles.format: int32
definitions.Resource.properties.totalFiles.type: integer
definitions.Resource.required.length: 4
definitions.Resource.required[0]: totalFiles
definitions.Resource.required[1]: resources
definitions.Resource.required[2]: inheritedShares
definitions.Resource.required[3]: inheritedNotifications
definitions.ResourcePropertiesResponse.properties.error.$ref: '#/definitions/Error'
definitions.ResourcePropertiesResponse.properties.results.items.$ref: '#/definitions/ResourceProperty'
definitions.ResourcePropertiesResponse.properties.results.type: array
definitions.ResourcePropertiesResponse.properties.success.format: int32
definitions.ResourcePropertiesResponse.properties.success.type: integer
definitions.ResourcePropertiesResponse.required.length: 3
definitions.ResourcePropertiesResponse.required[0]: success
definitions.ResourcePropertiesResponse.required[1]: error
definitions.ResourcePropertiesResponse.required[2]: results
definitions.ResourceProperty.properties.createdBy.type: string
definitions.ResourceProperty.properties.file.type: string
definitions.ResourceProperty.properties.fileCount.format: int32
definitions.ResourceProperty.properties.fileCount.type: integer
definitions.ResourceProperty.properties.name.type: string
definitions.ResourceProperty.properties.notificationSettings.type: string
definitions.ResourceProperty.properties.parent.type: string
definitions.ResourceProperty.properties.path.type: string
definitions.ResourceProperty.properties.previewable.type: boolean
definitions.ResourceProperty.properties.shares.items.$ref: '#/definitions/Share'
definitions.ResourceProperty.properties.shares.type: array
definitions.ResourceProperty.properties.size.format: int64
definitions.ResourceProperty.properties.size.type: integer
definitions.ResourceProperty.properties.type.type: string
definitions.ResourceProperty.properties.uploadDate.type: string
definitions.ResourceProperty.required.length: 11
definitions.ResourceProperty.required[0]: fileCount
definitions.ResourceProperty.required[1]: file
definitions.ResourceProperty.required[2]: name
definitions.ResourceProperty.required[3]: createdBy
definitions.ResourceProperty.required[4]: uploadDate
definitions.ResourceProperty.required[5]: parent
definitions.ResourceProperty.required[6]: path
definitions.ResourceProperty.required[7]: shares
definitions.ResourceProperty.required[8]: notificationSettings
definitions.ResourceProperty.required[9]: size
definitions.ResourceProperty.required[10]: previewable
definitions.ResourceResponse.properties.error.$ref: '#/definitions/Error'
definitions.ResourceResponse.properties.results.$ref: '#/definitions/Resource'
definitions.ResourceResponse.properties.success.format: int32
definitions.ResourceResponse.properties.success.type: integer
definitions.ResourceResponse.required.length: 3
definitions.ResourceResponse.required[0]: success
definitions.ResourceResponse.required[1]: error
definitions.ResourceResponse.required[2]: results
definitions.Response.properties.error.$ref: '#/definitions/Error'
definitions.Response.properties.results.items.type: string
definitions.Response.properties.results.type: array
definitions.Response.properties.success.format: int32
definitions.Response.properties.success.type: integer
definitions.Response.required.length: 3
definitions.Response.required[0]: success
definitions.Response.required[1]: error
definitions.Response.required[2]: results
definitions.Share.properties.accessDescription.type: string
definitions.Share.properties.accessMode.type: string
definitions.Share.properties.created.type: string
definitions.Share.properties.embed.type: boolean
definitions.Share.properties.expiration.type: string
definitions.Share.properties.expired.type: string
definitions.Share.properties.fileDropCreateFolders.type: boolean
definitions.Share.properties.hasNotification.type: boolean
definitions.Share.properties.hasPassword.type: boolean
definitions.Share.properties.hash.type: string
definitions.Share.properties.id.format: int32
definitions.Share.properties.id.type: integer
definitions.Share.properties.inherited.type: boolean
definitions.Share.properties.isPublic.type: boolean
definitions.Share.properties.messages.items.$ref: '#/definitions/Message'
definitions.Share.properties.messages.type: array
definitions.Share.properties.modified.type: string
definitions.Share.properties.name.type: string
definitions.Share.properties.notification.type: string
definitions.Share.properties.owner.format: int32
definitions.Share.properties.owner.type: integer
definitions.Share.properties.ownerHash.type: string
definitions.Share.properties.ownerUsername.type: string
definitions.Share.properties.paths.items.type: string
definitions.Share.properties.paths.type: array
definitions.Share.properties.recipients.items.$ref: '#/definitions/Recipient'
definitions.Share.properties.recipients.type: array
definitions.Share.properties.recipientsWithOwner.items.$ref: '#/definitions/Recipient'
definitions.Share.properties.recipientsWithOwner.type: array
definitions.Share.properties.requireEmail.type: boolean
definitions.Share.properties.resent.type: boolean
definitions.Share.properties.status.format: int32
definitions.Share.properties.status.type: integer
definitions.Share.properties.trackingStatus.type: string
definitions.Share.properties.type.type: string
definitions.Share.required.length: 28
definitions.Share.required[0]: id
definitions.Share.required[1]: name
definitions.Share.required[2]: hasPassword
definitions.Share.required[3]: isPublic
definitions.Share.required[4]: accessMode
definitions.Share.required[5]: accessDescription
definitions.Share.required[6]: embed
definitions.Share.required[7]: hash
definitions.Share.required[8]: ownerHash
definitions.Share.required[9]: expiration
definitions.Share.required[10]: trackingStatus
definitions.Share.required[11]: expired
definitions.Share.required[12]: resent
definitions.Share.required[13]: owner
definitions.Share.required[14]: ownerUsername
definitions.Share.required[15]: type
definitions.Share.required[16]: requireEmail
definitions.Share.required[17]: fileDropCreateFolders
definitions.Share.required[18]: paths
definitions.Share.required[19]: recipients
definitions.Share.required[20]: recipientsWithOwner
definitions.Share.required[21]: messages
definitions.Share.required[22]: inherited
definitions.Share.required[23]: status
definitions.Share.required[24]: hasNotification
definitions.Share.required[25]: notification
definitions.Share.required[26]: created
definitions.Share.required[27]: modified
definitions.ShareActivityResponse.properties.error.$ref: '#/definitions/Error'
definitions.ShareActivityResponse.properties.results.items.$ref: '#/definitions/ShareLogEntry'
definitions.ShareActivityResponse.properties.results.type: array
definitions.ShareActivityResponse.properties.success.format: int32
definitions.ShareActivityResponse.properties.success.type: integer
definitions.ShareActivityResponse.required.length: 3
definitions.ShareActivityResponse.required[0]: success
definitions.ShareActivityResponse.required[1]: error
definitions.ShareActivityResponse.required[2]: results
definitions.ShareLogEntry.properties.action.type: string
definitions.ShareLogEntry.properties.actionObjectId.type: string
definitions.ShareLogEntry.properties.created.type: string
definitions.ShareLogEntry.properties.detail.type: string
definitions.ShareLogEntry.properties.id.format: int32
definitions.ShareLogEntry.properties.id.type: integer
definitions.ShareLogEntry.properties.shareId.type: string
definitions.ShareLogEntry.properties.username.type: string
definitions.ShareLogEntry.required.length: 7
definitions.ShareLogEntry.required[0]: id
definitions.ShareLogEntry.required[1]: shareId
definitions.ShareLogEntry.required[2]: username
definitions.ShareLogEntry.required[3]: action
definitions.ShareLogEntry.required[4]: actionObjectId
definitions.ShareLogEntry.required[5]: detail
definitions.ShareLogEntry.required[6]: created
definitions.ShareResponse.properties.error.$ref: '#/definitions/Error'
definitions.ShareResponse.properties.results.$ref: '#/definitions/Share'
definitions.ShareResponse.properties.success.format: int32
definitions.ShareResponse.properties.success.type: integer
definitions.ShareResponse.required.length: 3
definitions.ShareResponse.required[0]: success
definitions.ShareResponse.required[1]: error
definitions.ShareResponse.required[2]: results
definitions.SharesResponse.properties.error.$ref: '#/definitions/Error'
definitions.SharesResponse.properties.results.items.$ref: '#/definitions/Share'
definitions.SharesResponse.properties.results.type: array
definitions.SharesResponse.properties.success.format: int32
definitions.SharesResponse.properties.success.type: integer
definitions.SharesResponse.required.length: 3
definitions.SharesResponse.required[0]: success
definitions.SharesResponse.required[1]: error
definitions.SharesResponse.required[2]: results
definitions.Url.properties.offset.format: int32
definitions.Url.properties.offset.type: integer
definitions.Url.properties.url.type: string
definitions.Url.required.length: 1
definitions.Url.required[0]: url
definitions.UrlResponse.properties.error.$ref: '#/definitions/Error'
definitions.UrlResponse.properties.results.$ref: '#/definitions/Url'
definitions.UrlResponse.properties.success.format: int32
definitions.UrlResponse.properties.success.type: integer
definitions.UrlResponse.required.length: 3
definitions.UrlResponse.required[0]: success
definitions.UrlResponse.required[1]: error
definitions.UrlResponse.required[2]: results
definitions.User.properties.accessTimestamp.type: string
definitions.User.properties.changePassword.type: boolean
definitions.User.properties.created.type: string
definitions.User.properties.delete.type: boolean
definitions.User.properties.download.type: boolean
definitions.User.properties.email.type: string
definitions.User.properties.expiration.type: string
definitions.User.properties.gid.format: int32
definitions.User.properties.gid.type: integer
definitions.User.properties.homeDir.type: string
definitions.User.properties.id.format: int32
definitions.User.properties.id.type: integer
definitions.User.properties.list.type: boolean
definitions.User.properties.modified.type: string
definitions.User.properties.modify.type: boolean
definitions.User.properties.nickname.type: string
definitions.User.properties.notification.type: boolean
definitions.User.properties.owningAccountId.format: int32
definitions.User.properties.owningAccountId.type: integer
definitions.User.properties.role.type: string
definitions.User.properties.share.type: boolean
definitions.User.properties.status.format: int32
definitions.User.properties.status.type: integer
definitions.User.properties.timeZone.type: string
definitions.User.properties.upload.type: boolean
definitions.User.properties.username.type: string
definitions.User.required.length: 22
definitions.User.required[0]: gid
definitions.User.required[1]: status
definitions.User.required[2]: created
definitions.User.required[3]: modified
definitions.User.required[4]: accessTimestamp
definitions.User.required[5]: id
definitions.User.required[6]: owningAccountId
definitions.User.required[7]: username
definitions.User.required[8]: nickname
definitions.User.required[9]: email
definitions.User.required[10]: expiration
definitions.User.required[11]: homeDir
definitions.User.required[12]: download
definitions.User.required[13]: upload
definitions.User.required[14]: modify
definitions.User.required[15]: delete
definitions.User.required[16]: list
definitions.User.required[17]: changePassword
definitions.User.required[18]: share
definitions.User.required[19]: notification
definitions.User.required[20]: role
definitions.User.required[21]: timeZone
definitions.UserResponse.properties.error.$ref: '#/definitions/Error'
definitions.UserResponse.properties.results.$ref: '#/definitions/User'
definitions.UserResponse.properties.success.format: int32
definitions.UserResponse.properties.success.type: integer
definitions.UserResponse.required.length: 3
definitions.UserResponse.required[0]: success
definitions.UserResponse.required[1]: error
definitions.UserResponse.required[2]: results
definitions.UsersResponse.properties.error.$ref: '#/definitions/Error'
definitions.UsersResponse.properties.results.items.$ref: '#/definitions/User'
definitions.UsersResponse.properties.results.type: array
definitions.UsersResponse.properties.success.format: int32
definitions.UsersResponse.properties.success.type: integer
definitions.UsersResponse.required.length: 3
definitions.UsersResponse.required[0]: success
definitions.UsersResponse.required[1]: error
definitions.UsersResponse.required[2]: results
externalDocs.url: https://www.exavault.com/developer/
host: api.exavault.com
info.description: |
  ExaVault's API allows you to incorporate ExaVault's suite of file transfer and user management tools into your own application.

  ExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.
info.title: ExaVault
info.version: 1.0.0
info.x-apisguru-categories.length: 1
info.x-apisguru-categories[0]: storage
info.x-logo.backgroundColor: '#222222'
info.x-logo.url: https://api.apis.guru/v2/cache/logo/https_www.exavault.com_common_images_110xNxlogo220x40.png.pagespeed.ic.N1chK3UTV9.png
info.x-origin.length: 1
info.x-origin[0].converter.url: https://github.com/lucybot/api-spec-converter
info.x-origin[0].converter.version: 2.5.0
info.x-origin[0].format: swagger
info.x-origin[0].url: https://www.exavault.com/api/docs
info.x-origin[0].version: "1.2"
info.x-preferred: true
info.x-providerName: exavault.com
paths./v1/authenticateUser.get.description: Returns access token in the Response object
paths./v1/authenticateUser.get.operationId: authenticateUser
paths./v1/authenticateUser.get.parameters.length: 2
paths./v1/authenticateUser.get.parameters[0].description: Name of of user to authenticate
paths./v1/authenticateUser.get.parameters[0].in: query
paths./v1/authenticateUser.get.parameters[0].name: username
paths./v1/authenticateUser.get.parameters[0].required: true
paths./v1/authenticateUser.get.parameters[0].type: string
paths./v1/authenticateUser.get.parameters[1].description: User's password
paths./v1/authenticateUser.get.parameters[1].in: query
paths./v1/authenticateUser.get.parameters[1].name: password
paths./v1/authenticateUser.get.parameters[1].required: true
paths./v1/authenticateUser.get.parameters[1].type: string
paths./v1/authenticateUser.get.responses.200.description: No response was specified
paths./v1/authenticateUser.get.responses.200.schema.$ref: '#/definitions/AuthResponse'
paths./v1/authenticateUser.get.summary: Authenticates a user into the API
paths./v1/authenticateUser.get.tags.length: 1
paths./v1/authenticateUser.get.tags[0]: v1
paths./v1/checkFilesExist.get.description: Requires access token obtained via the
  authenticateUser operation
paths./v1/checkFilesExist.get.operationId: checkFilesExist
paths./v1/checkFilesExist.get.parameters.length: 2
paths./v1/checkFilesExist.get.parameters[0].description: Access token required to
  make the API call
paths./v1/checkFilesExist.get.parameters[0].in: query
paths./v1/checkFilesExist.get.parameters[0].name: access_token
paths./v1/checkFilesExist.get.parameters[0].required: true
paths./v1/checkFilesExist.get.parameters[0].type: string
paths./v1/checkFilesExist.get.parameters[1].description: Array containing paths of
  the files or folders to check
paths./v1/checkFilesExist.get.parameters[1].in: query
paths./v1/checkFilesExist.get.parameters[1].items.type: string
paths./v1/checkFilesExist.get.parameters[1].name: filePaths
paths./v1/checkFilesExist.get.parameters[1].required: true
paths./v1/checkFilesExist.get.parameters[1].type: array
paths./v1/checkFilesExist.get.responses.200.description: No response was specified
paths./v1/checkFilesExist.get.responses.200.schema.$ref: '#/definitions/ExistingResourcesResponse'
paths./v1/checkFilesExist.get.summary: Checks to see if each file or folder in the
  array exists
paths./v1/checkFilesExist.get.tags.length: 1
paths./v1/checkFilesExist.get.tags[0]: v1
paths./v1/copyResources.get.description: Requires access token obtained via the authenticateUser
  operation. Available to users with the 'upload' permission.
paths./v1/copyResources.get.operationId: copyResources
paths./v1/copyResources.get.parameters.length: 3
paths./v1/copyResources.get.parameters[0].description: Access token required to make
  the API call
paths./v1/copyResources.get.parameters[0].in: query
paths./v1/copyResources.get.parameters[0].name: access_token
paths./v1/copyResources.get.parameters[0].required: true
paths./v1/copyResources.get.parameters[0].type: string
paths./v1/copyResources.get.parameters[1].description: Remote paths of the files or
  folders to copy
paths./v1/copyResources.get.parameters[1].in: query
paths./v1/copyResources.get.parameters[1].items.type: string
paths./v1/copyResources.get.parameters[1].name: filePaths
paths./v1/copyResources.get.parameters[1].required: true
paths./v1/copyResources.get.parameters[1].type: array
paths./v1/copyResources.get.parameters[2].description: Remote destination path to
  copy files/folders to
paths./v1/copyResources.get.parameters[2].in: query
paths./v1/copyResources.get.parameters[2].name: destinationPath
paths./v1/copyResources.get.parameters[2].required: true
paths./v1/copyResources.get.parameters[2].type: string
paths./v1/copyResources.get.responses.200.description: No response was specified
paths./v1/copyResources.get.responses.200.schema.$ref: '#/definitions/ModifiedResourcesResponse'
paths./v1/copyResources.get.summary: Copies files, folders to the destination path
paths./v1/copyResources.get.tags.length: 1
paths./v1/copyResources.get.tags[0]: v1
paths./v1/createFolder.get.description: Requires access token obtained via the authenticateUser
  operation. Available to users with the 'upload' permission.
paths./v1/createFolder.get.operationId: createFolder
paths./v1/createFolder.get.parameters.length: 3
paths./v1/createFolder.get.parameters[0].description: Access token required to make
  the API call
paths./v1/createFolder.get.parameters[0].in: query
paths./v1/createFolder.get.parameters[0].name: access_token
paths./v1/createFolder.get.parameters[0].required: true
paths./v1/createFolder.get.parameters[0].type: string
paths./v1/createFolder.get.parameters[1].description: Name of the folder to create
paths./v1/createFolder.get.parameters[1].in: query
paths./v1/createFolder.get.parameters[1].name: folderName
paths./v1/createFolder.get.parameters[1].required: true
paths./v1/createFolder.get.parameters[1].type: string
paths./v1/createFolder.get.parameters[2].description: Where to create the folder
paths./v1/createFolder.get.parameters[2].in: query
paths./v1/createFolder.get.parameters[2].name: path
paths./v1/createFolder.get.parameters[2].required: true
paths./v1/createFolder.get.parameters[2].type: string
paths./v1/createFolder.get.responses.200.description: No response was specified
paths./v1/createFolder.get.responses.200.schema.$ref: '#/definitions/Response'
paths./v1/createFolder.get.summary: Create a folder at a specified path
paths./v1/createFolder.get.tags.length: 1
paths./v1/createFolder.get.tags[0]: v1
paths./v1/createNotification.get.description: Requires access token obtained via the
  authenticateUser operation. Available to users with 'notification' permission
paths./v1/createNotification.get.operationId: createNotification
paths./v1/createNotification.get.parameters.length: 6
paths./v1/createNotification.get.parameters[0].description: Access token required
  to make the API call
paths./v1/createNotification.get.parameters[0].in: query
paths./v1/createNotification.get.parameters[0].name: access_token
paths./v1/createNotification.get.parameters[0].required: true
paths./v1/createNotification.get.parameters[0].type: string
paths./v1/createNotification.get.parameters[1].description: Full path of file/folder
  where notification is set.
paths./v1/createNotification.get.parameters[1].in: query
paths./v1/createNotification.get.parameters[1].name: path
paths./v1/createNotification.get.parameters[1].required: true
paths./v1/createNotification.get.parameters[1].type: string
paths./v1/createNotification.get.parameters[2].description: 'Type of action to filter
  on: ''upload'', ''download'', ''delete'', ''all'''
paths./v1/createNotification.get.parameters[2].in: query
paths./v1/createNotification.get.parameters[2].name: action
paths./v1/createNotification.get.parameters[2].required: true
paths./v1/createNotification.get.parameters[2].type: string
paths./v1/createNotification.get.parameters[3].description: 'User type to filter on:
  ''notice_user_all'', ''notice_user_all_recipients'', ''notice_user_all_users'''
paths./v1/createNotification.get.parameters[3].in: query
paths./v1/createNotification.get.parameters[3].name: usernames
paths./v1/createNotification.get.parameters[3].required: true
paths./v1/createNotification.get.parameters[3].type: string
paths./v1/createNotification.get.parameters[4].description: Set to true if the user
  should be notified by email when the notification is triggered.
paths./v1/createNotification.get.parameters[4].in: query
paths./v1/createNotification.get.parameters[4].name: sendEmail
paths./v1/createNotification.get.parameters[4].required: true
paths./v1/createNotification.get.parameters[4].type: boolean
paths./v1/createNotification.get.parameters[5].description: Email addresses to send
  notification to. If not specified, sends to owner by default.
paths./v1/createNotification.get.parameters[5].in: query
paths./v1/createNotification.get.parameters[5].items.type: string
paths./v1/createNotification.get.parameters[5].name: emails
paths./v1/createNotification.get.parameters[5].type: array
paths./v1/createNotification.get.responses.200.description: No response was specified
paths./v1/createNotification.get.responses.200.schema.$ref: '#/definitions/Response'
paths./v1/createNotification.get.summary: Creates a new Notification object
paths./v1/createNotification.get.tags.length: 1
paths./v1/createNotification.get.tags[0]: v1
paths./v1/createShare.get.description: Requires access token obtained via the authenticateUser
  operation. Available to users with the 'share' permission
paths./v1/createShare.get.operationId: createShare
paths./v1/createShare.get.parameters.length: 17
paths./v1/createShare.get.parameters[0].description: Access token required to make
  the API call
paths./v1/createShare.get.parameters[0].in: query
paths./v1/createShare.get.parameters[0].name: access_token
paths./v1/createShare.get.parameters[0].required: true
paths./v1/createShare.get.parameters[0].type: string
paths./v1/createShare.get.parameters[1].description: 'The type of share to create:
  shared_folder, send, receive.'
paths./v1/createShare.get.parameters[1].in: query
paths./v1/createShare.get.parameters[1].name: type
paths./v1/createShare.get.parameters[1].required: true
paths./v1/createShare.get.parameters[1].type: string
paths./v1/createShare.get.parameters[2].description: Name of the Share.
paths./v1/createShare.get.parameters[2].in: query
paths./v1/createShare.get.parameters[2].name: name
paths./v1/createShare.get.parameters[2].required: true
paths./v1/createShare.get.parameters[2].type: string
paths./v1/createShare.get.parameters[3].description: Array of strings containing the
  file paths to share.
paths./v1/createShare.get.parameters[3].in: query
paths./v1/createShare.get.parameters[3].items.type: string
paths./v1/createShare.get.parameters[3].name: filePaths
paths./v1/createShare.get.parameters[3].required: true
paths./v1/createShare.get.parameters[3].type: array
paths./v1/createShare.get.parameters[4].description: Share message subject (for email
  invitations).
paths./v1/createShare.get.parameters[4].in: query
paths./v1/createShare.get.parameters[4].name: subject
paths./v1/createShare.get.parameters[4].required: false
paths./v1/createShare.get.parameters[4].type: string
paths./v1/createShare.get.parameters[5].description: Share message contents (for email
  invitations).
paths./v1/createShare.get.parameters[5].in: query
paths./v1/createShare.get.parameters[5].name: message
paths./v1/createShare.get.parameters[5].required: false
paths./v1/createShare.get.parameters[5].type: string
paths./v1/createShare.get.parameters[6].description: Array of strings for email recipients
  (for email invitations).
paths./v1/createShare.get.parameters[6].in: query
paths./v1/createShare.get.parameters[6].items.type: string
paths./v1/createShare.get.parameters[6].name: emails
paths./v1/createShare.get.parameters[6].required: false
paths./v1/createShare.get.parameters[6].type: array
paths./v1/createShare.get.parameters[7].description: Specifies a CC email recipient.
paths./v1/createShare.get.parameters[7].in: query
paths./v1/createShare.get.parameters[7].name: ccEmail
paths./v1/createShare.get.parameters[7].required: false
paths./v1/createShare.get.parameters[7].type: string
paths./v1/createShare.get.parameters[8].default: false
paths./v1/createShare.get.parameters[8].description: Requires a user's email to access
  (defaults to false if not specified).
paths./v1/createShare.get.parameters[8].in: query
paths./v1/createShare.get.parameters[8].name: requireEmail
paths./v1/createShare.get.parameters[8].required: false
paths./v1/createShare.get.parameters[8].type: boolean
paths./v1/createShare.get.parameters[9].description: 'Type of permissions share recipients
  have: upload, download, download_upload, download_upload_modify, download_upload_modify_delete.
  Defaults to download if no option specified.'
paths./v1/createShare.get.parameters[9].in: query
paths./v1/createShare.get.parameters[9].name: accessMode
paths./v1/createShare.get.parameters[9].required: false
paths./v1/createShare.get.parameters[9].type: string
paths./v1/createShare.get.parameters[10].default: false
paths./v1/createShare.get.parameters[10].description: Allows user to embed a widget
  with the share. Defaults to false if not specified.
paths./v1/createShare.get.parameters[10].in: query
paths./v1/createShare.get.parameters[10].name: embed
paths./v1/createShare.get.parameters[10].required: false
paths./v1/createShare.get.parameters[10].type: boolean
paths./v1/createShare.get.parameters[11].default: false
paths./v1/createShare.get.parameters[11].description: True if share has a public URL,
  otherwise defaults to false
paths./v1/createShare.get.parameters[11].in: query
paths./v1/createShare.get.parameters[11].name: isPublic
paths./v1/createShare.get.parameters[11].required: false
paths./v1/createShare.get.parameters[11].type: boolean
paths./v1/createShare.get.parameters[12].description: If not null, value of password
  is required to access this Share
paths./v1/createShare.get.parameters[12].in: query
paths./v1/createShare.get.parameters[12].name: password
paths./v1/createShare.get.parameters[12].required: false
paths./v1/createShare.get.parameters[12].type: string
paths./v1/createShare.get.parameters[13].description: The date the current Share should
  expire, formatted YYYY-mm-dd
paths./v1/createShare.get.parameters[13].in: query
paths./v1/createShare.get.parameters[13].name: expiration
paths./v1/createShare.get.parameters[13].required: false
paths./v1/createShare.get.parameters[13].type: string
paths./v1/createShare.get.parameters[14].description: True if the user should be notified
  about activity on this Share.
paths./v1/createShare.get.parameters[14].in: query
paths./v1/createShare.get.parameters[14].name: hasNotification
paths./v1/createShare.get.parameters[14].required: false
paths./v1/createShare.get.parameters[14].type: boolean
paths./v1/createShare.get.parameters[15].description: An array of recipients who should
  receive notification emails.
paths./v1/createShare.get.parameters[15].in: query
paths./v1/createShare.get.parameters[15].items.type: string
paths./v1/createShare.get.parameters[15].name: notificationEmails
paths./v1/createShare.get.parameters[15].required: false
paths./v1/createShare.get.parameters[15].type: array
paths./v1/createShare.get.parameters[16].default: false
paths./v1/createShare.get.parameters[16].description: If true, all receive folder
  submissions will be uploaded separate folders (only applicable for Receive folder
  types)
paths./v1/createShare.get.parameters[16].in: query
paths./v1/createShare.get.parameters[16].name: fileDropCreateFolders
paths./v1/createShare.get.parameters[16].required: false
paths./v1/createShare.get.parameters[16].type: boolean
paths./v1/createShare.get.responses.200.description: No response was specified
paths./v1/createShare.get.responses.200.schema.$ref: '#/definitions/Response'
paths./v1/createShare.get.summary: Create a new Share object
paths./v1/createShare.get.tags.length: 1
paths./v1/createShare.get.tags[0]: v1
paths./v1/createUser.get.description: Requires access token obtained via the authenticateUser
  operation. Available to users with the 'manage users' permission
paths./v1/createUser.get.operationId: createUser
paths./v1/createUser.get.parameters.length: 12
paths./v1/createUser.get.parameters[0].description: Access token required to make
  the API call
paths./v1/createUser.get.parameters[0].in: query
paths./v1/createUser.get.parameters[0].name: access_token
paths./v1/createUser.get.parameters[0].required: true
paths./v1/createUser.get.parameters[0].type: string
paths./v1/createUser.get.parameters[1].description: Name of the subaccount user to
  create
paths./v1/createUser.get.parameters[1].in: query
paths./v1/createUser.get.parameters[1].name: username
paths./v1/createUser.get.parameters[1].required: true
paths./v1/createUser.get.parameters[1].type: string
paths./v1/createUser.get.parameters[2].description: The user's home folder
paths./v1/createUser.get.parameters[2].in: query
paths./v1/createUser.get.parameters[2].name: destinationFolder
paths./v1/createUser.get.parameters[2].required: true
paths./v1/createUser.get.parameters[2].type: string
paths./v1/createUser.get.parameters[3].description: The user's email address
paths./v1/createUser.get.parameters[3].in: query
paths./v1/createUser.get.parameters[3].name: email
paths./v1/createUser.get.parameters[3].required: true
paths./v1/createUser.get.parameters[3].type: string
paths./v1/createUser.get.parameters[4].description: The user's password
paths./v1/createUser.get.parameters[4].in: query
paths./v1/createUser.get.parameters[4].name: password
paths./v1/createUser.get.parameters[4].required: true
paths./v1/createUser.get.parameters[4].type: string
paths./v1/createUser.get.parameters[5].description: 'The user''s role, i.e: ''user''
  or ''admin'''
paths./v1/createUser.get.parameters[5].in: query
paths./v1/createUser.get.parameters[5].name: role
paths./v1/createUser.get.parameters[5].required: true
paths./v1/createUser.get.parameters[5].type: string
paths./v1/createUser.get.parameters[6].description: 'A CSV string of user permissions.
  The following values are supported: upload, download, delete, modify, list, changePassword,
  share, notification.'
paths./v1/createUser.get.parameters[6].in: query
paths./v1/createUser.get.parameters[6].name: permissions
paths./v1/createUser.get.parameters[6].required: true
paths./v1/createUser.get.parameters[6].type: string
paths./v1/createUser.get.parameters[7].default: America/Los_Angeles
paths./v1/createUser.get.parameters[7].description: The user's timezone, used for
  accurate time display within SWFT. See <a href='https://php.net/manual/en/timezones.php'
  target='blank'>this page</a> for allowed values
paths./v1/createUser.get.parameters[7].in: query
paths./v1/createUser.get.parameters[7].name: timeZone
paths./v1/createUser.get.parameters[7].required: true
paths./v1/createUser.get.parameters[7].type: string
paths./v1/createUser.get.parameters[8].description: The user's nickname
paths./v1/createUser.get.parameters[8].in: query
paths./v1/createUser.get.parameters[8].name: nickname
paths./v1/createUser.get.parameters[8].type: string
paths./v1/createUser.get.parameters[9].description: The date when the user should
  expire, formatted YYYY-mm-dd
paths./v1/createUser.get.parameters[9].in: query
paths./v1/createUser.get.parameters[9].name: expiration
paths./v1/createUser.get.parameters[9].type: string
paths./v1/createUser.get.parameters[10].default: false
paths./v1/createUser.get.parameters[10].description: If true, the user's account is
  locked by default
paths./v1/createUser.get.parameters[10].in: query
paths./v1/createUser.get.parameters[10].name: locked
paths./v1/createUser.get.parameters[10].type: boolean
paths./v1/createUser.get.parameters[11].default: false
paths./v1/createUser.get.parameters[11].description: If true, send a user email upon
  creation
paths./v1/createUser.get.parameters[11].in: query
paths./v1/createUser.get.parameters[11].name: welcomeEmail
paths./v1/createUser.get.parameters[11].type: boolean
paths./v1/createUser.get.responses.200.description: No response was specified
paths./v1/createUser.get.responses.200.schema.$ref: '#/definitions/Response'
paths./v1/createUser.get.summary: Adds a new subaccount user to the current account
paths./v1/createUser.get.tags.length: 1
paths./v1/createUser.get.tags[0]: v1
paths./v1/deleteNotification.get.description: Requires access token obtained via the
  authenticateUser operation. Available to users with 'notification' permission
paths./v1/deleteNotification.get.operationId: deleteNotification
paths./v1/deleteNotification.get.parameters.length: 2
paths./v1/deleteNotification.get.parameters[0].description: Access token required
  to make the API call
paths./v1/deleteNotification.get.parameters[0].in: query
paths./v1/deleteNotification.get.parameters[0].name: access_token
paths./v1/deleteNotification.get.parameters[0].required: true
paths./v1/deleteNotification.get.parameters[0].type: string
paths./v1/deleteNotification.get.parameters[1].description: ID of the Notification
  to delete.
paths./v1/deleteNotification.get.parameters[1].format: int32
paths./v1/deleteNotification.get.parameters[1].in: query
paths./v1/deleteNotification.get.parameters[1].name: id
paths./v1/deleteNotification.get.parameters[1].required: true
paths./v1/deleteNotification.get.parameters[1].type: integer
paths./v1/deleteNotification.get.responses.200.description: No response was specified
paths./v1/deleteNotification.get.responses.200.schema.$ref: '#/definitions/Response'
paths./v1/deleteNotification.get.summary: Deletes a Notification by ID
paths./v1/deleteNotification.get.tags.length: 1
paths./v1/deleteNotification.get.tags[0]: v1
paths./v1/deleteResources.get.description: Requires access token obtained via the
  authenticateUser operation. Available to users with the 'delete' permission
paths./v1/deleteResources.get.operationId: deleteResources
paths./v1/deleteResources.get.parameters.length: 2
paths./v1/deleteResources.get.parameters[0].description: Access token required to
  make the API call
paths./v1/deleteResources.get.parameters[0].in: query
paths./v1/deleteResources.get.parameters[0].name: access_token
paths./v1/deleteResources.get.parameters[0].required: true
paths./v1/deleteResources.get.parameters[0].type: string
paths./v1/deleteResources.get.parameters[1].description: Array containing paths of
  the files or folder to delete
paths./v1/deleteResources.get.parameters[1].in: query
paths./v1/deleteResources.get.parameters[1].items.type: string
paths./v1/deleteResources.get.parameters[1].name: filePaths
paths./v1/deleteResources.get.parameters[1].required: true
paths./v1/deleteResources.get.parameters[1].type: array
paths./v1/deleteResources.get.responses.200.description: No response was specified
paths./v1/deleteResources.get.responses.200.schema.$ref: '#/definitions/DeletedResourcesResponse'
paths./v1/deleteResources.get.summary: Delete the specified files/folders
paths./v1/deleteResources.get.tags.length: 1
paths./v1/deleteResources.get.tags[0]: v1
paths./v1/deleteShare.get.description: Requires access token obtained via the authenticateUser
  operation. Available to users with 'share' permission
paths./v1/deleteShare.get.operationId: deleteShare
paths./v1/deleteShare.get.parameters.length: 2
paths./v1/deleteShare.get.parameters[0].description: Access token required to make
  the API call
paths./v1/deleteShare.get.parameters[0].in: query
paths./v1/deleteShare.get.parameters[0].name: access_token
paths./v1/deleteShare.get.parameters[0].required: true
paths./v1/deleteShare.get.parameters[0].type: string
paths./v1/deleteShare.get.parameters[1].description: ID of the Share to delete.
paths./v1/deleteShare.get.parameters[1].format: int32
paths./v1/deleteShare.get.parameters[1].in: query
paths./v1/deleteShare.get.parameters[1].name: id
paths./v1/deleteShare.get.parameters[1].required: true
paths./v1/deleteShare.get.parameters[1].type: integer
paths./v1/deleteShare.get.responses.200.description: No response was specified
paths./v1/deleteShare.get.responses.200.schema.$ref: '#/definitions/Response'
paths./v1/deleteShare.get.summary: Deletes a Share by ID
paths./v1/deleteShare.get.tags.length: 1
paths./v1/deleteShare.get.tags[0]: v1
paths./v1/deleteUser.get.description: Requires access token obtained via the authenticateUser
  operation. Available to users with 'manage users' permission
paths./v1/deleteUser.get.operationId: deleteUser
paths./v1/deleteUser.get.parameters.length: 2
paths./v1/deleteUser.get.parameters[0].description: Access token required to make
  the API call
paths./v1/deleteUser.get.parameters[0].in: query
paths./v1/deleteUser.get.parameters[0].name: access_token
paths./v1/deleteUser.get.parameters[0].required: true
paths./v1/deleteUser.get.parameters[0].type: string
paths./v1/deleteUser.get.parameters[1].description: Name of the subaccount user to
  delete
paths./v1/deleteUser.get.parameters[1].in: query
paths./v1/deleteUser.get.parameters[1].name: username
paths./v1/deleteUser.get.parameters[1].required: true
paths./v1/deleteUser.get.parameters[1].type: string
paths./v1/deleteUser.get.responses.200.description: No response was specified
paths./v1/deleteUser.get.responses.200.schema.$ref: '#/definitions/Response'
paths./v1/deleteUser.get.summary: Deletes a subaccount user for the current account
paths./v1/deleteUser.get.tags.length: 1
paths./v1/deleteUser.get.tags[0]: v1
paths./v1/getAccount.get.description: Requires access token obtained via the authenticateUser
  operation
paths./v1/getAccount.get.operationId: getAccount
paths./v1/getAccount.get.parameters.length: 1
paths./v1/getAccount.get.parameters[0].description: Access token required to make
  the API call
paths./v1/getAccount.get.parameters[0].in: query
paths./v1/getAccount.get.parameters[0].name: access_token
paths./v1/getAccount.get.parameters[0].required: true
paths./v1/getAccount.get.parameters[0].type: string
paths./v1/getAccount.get.responses.200.description: No response was specified
paths./v1/getAccount.get.responses.200.schema.$ref: '#/definitions/AccountResponse'
paths./v1/getAccount.get.summary: Gets the account object for the currently logged
  in user
paths./v1/getAccount.get.tags.length: 1
paths./v1/getAccount.get.tags[0]: v1
paths./v1/getCurrentUser.get.description: Requires access token obtained via the authenticateUser
  operation
paths./v1/getCurrentUser.get.operationId: getCurrentUser
paths./v1/getCurrentUser.get.parameters.length: 1
paths./v1/getCurrentUser.get.parameters[0].description: Access token required to make
  the API call
paths./v1/getCurrentUser.get.parameters[0].in: query
paths./v1/getCurrentUser.get.parameters[0].name: access_token
paths./v1/getCurrentUser.get.parameters[0].required: true
paths./v1/getCurrentUser.get.parameters[0].type: string
paths./v1/getCurrentUser.get.responses.200.description: No response was specified
paths./v1/getCurrentUser.get.responses.200.schema.$ref: '#/definitions/UserResponse'
paths./v1/getCurrentUser.get.summary: Gets the user object for the currently logged
  in user
paths./v1/getCurrentUser.get.tags.length: 1
paths./v1/getCurrentUser.get.tags[0]: v1
paths./v1/getDownloadFileUrl.get.description: Requires access token obtained via the
  authenticateUser operation. URL points at the appropriate storage server for file
  download.
paths./v1/getDownloadFileUrl.get.operationId: getDownloadFileUrl
paths./v1/getDownloadFileUrl.get.parameters.length: 3
paths./v1/getDownloadFileUrl.get.parameters[0].description: Access token required
  to make the API call
paths./v1/getDownloadFileUrl.get.parameters[0].in: query
paths./v1/getDownloadFileUrl.get.parameters[0].name: access_token
paths./v1/getDownloadFileUrl.get.parameters[0].required: true
paths./v1/getDownloadFileUrl.get.parameters[0].type: string
paths./v1/getDownloadFileUrl.get.parameters[1].description: Path of file to be downloaded
paths./v1/getDownloadFileUrl.get.parameters[1].in: query
paths./v1/getDownloadFileUrl.get.parameters[1].name: filePaths
paths./v1/getDownloadFileUrl.get.parameters[1].required: true
paths./v1/getDownloadFileUrl.get.parameters[1].type: string
paths./v1/getDownloadFileUrl.get.parameters[2].description: The name of the file to
  be downloaded
paths./v1/getDownloadFileUrl.get.parameters[2].in: query
paths./v1/getDownloadFileUrl.get.parameters[2].name: downloadName
paths./v1/getDownloadFileUrl.get.parameters[2].required: false
paths./v1/getDownloadFileUrl.get.parameters[2].type: string
paths./v1/getDownloadFileUrl.get.responses.200.description: No response was specified
paths./v1/getDownloadFileUrl.get.responses.200.schema.$ref: '#/definitions/UrlResponse'
paths./v1/getDownloadFileUrl.get.summary: Returns a unique URL for handling file downloads
paths./v1/getDownloadFileUrl.get.tags.length: 1
paths./v1/getDownloadFileUrl.get.tags[0]: v1
paths./v1/getFileActivityLogs.get.operationId: getFileActivityLogs
paths./v1/getFileActivityLogs.get.parameters.length: 7
paths./v1/getFileActivityLogs.get.parameters[0].description: Access token required
  to make the API call
paths./v1/getFileActivityLogs.get.parameters[0].in: query
paths./v1/getFileActivityLogs.get.parameters[0].name: access_token
paths./v1/getFileActivityLogs.get.parameters[0].required: true
paths./v1/getFileActivityLogs.get.parameters[0].type: string
paths./v1/getFileActivityLogs.get.parameters[1].default: 0
paths./v1/getFileActivityLogs.get.parameters[1].description: Starting record in the
  result set. Can be used for pagination.
paths./v1/getFileActivityLogs.get.parameters[1].format: int32
paths./v1/getFileActivityLogs.get.parameters[1].in: query
paths./v1/getFileActivityLogs.get.parameters[1].name: offset
paths./v1/getFileActivityLogs.get.parameters[1].required: false
paths./v1/getFileActivityLogs.get.parameters[1].type: integer
paths./v1/getFileActivityLogs.get.parameters[2].default: sort_logs_date
paths./v1/getFileActivityLogs.get.parameters[2].description: Sort method ['sort_logs_date'
  or 'sort_logs_ip_address' or 'sort_logs_username' or 'sort_logs_file' or 'sort_logs_file_source'
  or 'sort_logs_operation', or 'sort_logs_duration', or 'sort_logs_size', or 'sort_logs_protocol']
paths./v1/getFileActivityLogs.get.parameters[2].in: query
paths./v1/getFileActivityLogs.get.parameters[2].name: sortBy
paths./v1/getFileActivityLogs.get.parameters[2].required: false
paths./v1/getFileActivityLogs.get.parameters[2].type: string
paths./v1/getFileActivityLogs.get.parameters[3].default: desc
paths./v1/getFileActivityLogs.get.parameters[3].description: 'Sort in either ascending
  or descending order: asc, desc'
paths./v1/getFileActivityLogs.get.parameters[3].in: query
paths./v1/getFileActivityLogs.get.parameters[3].name: sortOrder
paths./v1/getFileActivityLogs.get.parameters[3].required: false
paths./v1/getFileActivityLogs.get.parameters[3].type: string
paths./v1/getFileActivityLogs.get.parameters[4].description: Field to search on ['filter_logs_date'
  or 'filter_logs_ip_address' or 'filter_logs_username' or 'filter_logs_operation'
  or 'filter_logs_file']
paths./v1/getFileActivityLogs.get.parameters[4].in: query
paths./v1/getFileActivityLogs.get.parameters[4].name: filterBy
paths./v1/getFileActivityLogs.get.parameters[4].required: false
paths./v1/getFileActivityLogs.get.parameters[4].type: string
paths./v1/getFileActivityLogs.get.parameters[5].description: Search criteria. For
  date ranges, use format 'start_date::end_date'
paths./v1/getFileActivityLogs.get.parameters[5].in: query
paths./v1/getFileActivityLogs.get.parameters[5].name: filter
paths./v1/getFileActivityLogs.get.parameters[5].required: false
paths./v1/getFileActivityLogs.get.parameters[5].type: string
paths./v1/getFileActivityLogs.get.parameters[6].description: Number of logs to return.
  Can be used for pagination.
paths./v1/getFileActivityLogs.get.parameters[6].format: int32
paths./v1/getFileActivityLogs.get.parameters[6].in: query
paths./v1/getFileActivityLogs.get.parameters[6].name: itemLimit
paths./v1/getFileActivityLogs.get.parameters[6].required: false
paths./v1/getFileActivityLogs.get.parameters[6].type: integer
paths./v1/getFileActivityLogs.get.responses.200.description: No response was specified
paths./v1/getFileActivityLogs.get.responses.200.schema.$ref: '#/definitions/LogResponse'
paths./v1/getFileActivityLogs.get.summary: Returns a list of account activity. Allows
  for searching the activity log.
paths./v1/getFileActivityLogs.get.tags.length: 1
paths./v1/getFileActivityLogs.get.tags[0]: v1
paths./v1/getFolders.get.description: Requires access token obtained via the authenticateUser
  operation
paths./v1/getFolders.get.operationId: getFolders
paths./v1/getFolders.get.parameters.length: 2
paths./v1/getFolders.get.parameters[0].description: Access token required to make
  the API call
paths./v1/getFolders.get.parameters[0].in: query
paths./v1/getFolders.get.parameters[0].name: access_token
paths./v1/getFolders.get.parameters[0].required: true
paths./v1/getFolders.get.parameters[0].type: string
paths./v1/getFolders.get.parameters[1].description: The remote file path
paths./v1/getFolders.get.parameters[1].in: query
paths./v1/getFolders.get.parameters[1].name: path
paths./v1/getFolders.get.parameters[1].required: true
paths./v1/getFolders.get.parameters[1].type: string
paths./v1/getFolders.get.responses.200.description: No response was specified
paths./v1/getFolders.get.responses.200.schema.$ref: '#/definitions/ResourcePropertiesResponse'
paths./v1/getFolders.get.summary: Get folders for a specified path
paths./v1/getFolders.get.tags.length: 1
paths./v1/getFolders.get.tags[0]: v1
paths./v1/getNotification.get.description: Requires access token obtained via the
  authenticateUser operation. Available to users with the 'notification' permission
paths./v1/getNotification.get.operationId: getNotification
paths./v1/getNotification.get.parameters.length: 2
paths./v1/getNotification.get.parameters[0].description: Access token required to
  make the API call
paths./v1/getNotification.get.parameters[0].in: query
paths./v1/getNotification.get.parameters[0].name: access_token
paths./v1/getNotification.get.parameters[0].required: true
paths./v1/getNotification.get.parameters[0].type: string
paths./v1/getNotification.get.parameters[1].description: ID of the Notification
paths./v1/getNotification.get.parameters[1].format: int32
paths./v1/getNotification.get.parameters[1].in: query
paths./v1/getNotification.get.parameters[1].name: id
paths./v1/getNotification.get.parameters[1].required: true
paths./v1/getNotification.get.parameters[1].type: integer
paths./v1/getNotification.get.responses.200.description: No response was specified
paths./v1/getNotification.get.responses.200.schema.$ref: '#/definitions/NotificationResponse'
paths./v1/getNotification.get.summary: Returns a notification based on the given ID
paths./v1/getNotification.get.tags.length: 1
paths./v1/getNotification.get.tags[0]: v1
paths./v1/getNotificationActivity.get.description: Requires access token obtained
  via the authenticateUser operation. Available to users with the 'notification' permission
paths./v1/getNotificationActivity.get.operationId: getNotificationActivity
paths./v1/getNotificationActivity.get.parameters.length: 1
paths./v1/getNotificationActivity.get.parameters[0].description: Access token required
  to make the API call
paths./v1/getNotificationActivity.get.parameters[0].in: query
paths./v1/getNotificationActivity.get.parameters[0].name: access_token
paths./v1/getNotificationActivity.get.parameters[0].required: true
paths./v1/getNotificationActivity.get.parameters[0].type: string
paths./v1/getNotificationActivity.get.responses.200.description: No response was specified
paths./v1/getNotificationActivity.get.responses.200.schema.$ref: '#/definitions/NotificationActivityResponse'
paths./v1/getNotificationActivity.get.summary: Returns all notification activity for
  the current user
paths./v1/getNotificationActivity.get.tags.length: 1
paths./v1/getNotificationActivity.get.tags[0]: v1
paths./v1/getNotifications.get.description: Requires access token obtained via the
  authenticateUser operation. Available to users with the 'notification' permission
paths./v1/getNotifications.get.operationId: getNotifications
paths./v1/getNotifications.get.parameters.length: 5
paths./v1/getNotifications.get.parameters[0].description: Access token required to
  make the API call
paths./v1/getNotifications.get.parameters[0].in: query
paths./v1/getNotifications.get.parameters[0].name: access_token
paths./v1/getNotifications.get.parameters[0].required: true
paths./v1/getNotifications.get.parameters[0].type: string
paths./v1/getNotifications.get.parameters[1].description: 'Type of notification to
  filter on: ''file'', ''folder'', ''shared_folder'', ''send_receipt'', ''share_receipt'',
  ''file_drop'''
paths./v1/getNotifications.get.parameters[1].in: query
paths./v1/getNotifications.get.parameters[1].name: type
paths./v1/getNotifications.get.parameters[1].required: true
paths./v1/getNotifications.get.parameters[1].type: string
paths./v1/getNotifications.get.parameters[2].description: 'Sort by one of the following:
  ''sort_notifications_folder_name'', ''sort_notifications_path'', ''sort_notifications_date'''
paths./v1/getNotifications.get.parameters[2].in: query
paths./v1/getNotifications.get.parameters[2].name: sortBy
paths./v1/getNotifications.get.parameters[2].required: false
paths./v1/getNotifications.get.parameters[2].type: string
paths./v1/getNotifications.get.parameters[3].description: Sort by 'asc' or 'desc'
  order.
paths./v1/getNotifications.get.parameters[3].in: query
paths./v1/getNotifications.get.parameters[3].name: sortOrder
paths./v1/getNotifications.get.parameters[3].required: false
paths./v1/getNotifications.get.parameters[3].type: string
paths./v1/getNotifications.get.parameters[4].description: Filter by the provided search
  terms.
paths./v1/getNotifications.get.parameters[4].in: query
paths./v1/getNotifications.get.parameters[4].name: filter
paths./v1/getNotifications.get.parameters[4].required: false
paths./v1/getNotifications.get.parameters[4].type: string
paths./v1/getNotifications.get.responses.200.description: No response was specified
paths./v1/getNotifications.get.responses.200.schema.$ref: '#/definitions/NotificationsResponse'
paths./v1/getNotifications.get.summary: Returns all notifications for the current
  user
paths./v1/getNotifications.get.tags.length: 1
paths./v1/getNotifications.get.tags[0]: v1
paths./v1/getResourceList.get.description: Requires access token obtained via the
  authenticateUser operation. Available to users with 'list files' permission.
paths./v1/getResourceList.get.operationId: getResourceList
paths./v1/getResourceList.get.parameters.length: 8
paths./v1/getResourceList.get.parameters[0].description: Access token required to
  make the API call
paths./v1/getResourceList.get.parameters[0].in: query
paths./v1/getResourceList.get.parameters[0].name: access_token
paths./v1/getResourceList.get.parameters[0].required: true
paths./v1/getResourceList.get.parameters[0].type: string
paths./v1/getResourceList.get.parameters[1].description: The remote file path
paths./v1/getResourceList.get.parameters[1].in: query
paths./v1/getResourceList.get.parameters[1].name: path
paths./v1/getResourceList.get.parameters[1].required: true
paths./v1/getResourceList.get.parameters[1].type: string
paths./v1/getResourceList.get.parameters[2].description: 'Sort according to attribute:
  sort_files_name, sort_files_size, sort_files_date, sort_files_type, sort_files_timeline'
paths./v1/getResourceList.get.parameters[2].in: query
paths./v1/getResourceList.get.parameters[2].name: sortBy
paths./v1/getResourceList.get.parameters[2].required: true
paths./v1/getResourceList.get.parameters[2].type: string
paths./v1/getResourceList.get.parameters[3].description: 'Sort in either ascending
  or descending order: asc, desc'
paths./v1/getResourceList.get.parameters[3].in: query
paths./v1/getResourceList.get.parameters[3].name: sortOrder
paths./v1/getResourceList.get.parameters[3].required: true
paths./v1/getResourceList.get.parameters[3].type: string
paths./v1/getResourceList.get.parameters[4].description: Determines which item to
  start on for pagination
paths./v1/getResourceList.get.parameters[4].format: int32
paths./v1/getResourceList.get.parameters[4].in: query
paths./v1/getResourceList.get.parameters[4].name: offset
paths./v1/getResourceList.get.parameters[4].required: true
paths./v1/getResourceList.get.parameters[4].type: integer
paths./v1/getResourceList.get.parameters[5].description: The number of files to limit
  the result
paths./v1/getResourceList.get.parameters[5].format: int32
paths./v1/getResourceList.get.parameters[5].in: query
paths./v1/getResourceList.get.parameters[5].name: limit
paths./v1/getResourceList.get.parameters[5].required: true
paths./v1/getResourceList.get.parameters[5].type: integer
paths./v1/getResourceList.get.parameters[6].default: false
paths./v1/getResourceList.get.parameters[6].description: If true, returns sharedFolder,
  notifications or other objects associated with specified path
paths./v1/getResourceList.get.parameters[6].in: query
paths./v1/getResourceList.get.parameters[6].name: detailed
paths./v1/getResourceList.get.parameters[6].type: boolean
paths./v1/getResourceList.get.parameters[7].description: Regex string. If not null,
  perform a search with specified pattern
paths./v1/getResourceList.get.parameters[7].in: query
paths./v1/getResourceList.get.parameters[7].name: pattern
paths./v1/getResourceList.get.parameters[7].type: string
paths./v1/getResourceList.get.responses.200.description: No response was specified
paths./v1/getResourceList.get.responses.200.schema.$ref: '#/definitions/ResourceResponse'
paths./v1/getResourceList.get.summary: Get a listing of files/folders for the specified
  path
paths./v1/getResourceList.get.tags.length: 1
paths./v1/getResourceList.get.tags[0]: v1
paths./v1/getResourceProperties.get.description: Requires access token obtained via
  the authenticateUser operation
paths./v1/getResourceProperties.get.operationId: getResourceProperties
paths./v1/getResourceProperties.get.parameters.length: 2
paths./v1/getResourceProperties.get.parameters[0].description: Access token required
  to make the API call
paths./v1/getResourceProperties.get.parameters[0].in: query
paths./v1/getResourceProperties.get.parameters[0].name: access_token
paths./v1/getResourceProperties.get.parameters[0].required: true
paths./v1/getResourceProperties.get.parameters[0].type: string
paths./v1/getResourceProperties.get.parameters[1].description: Array containing paths
  of the files or folder to get
paths./v1/getResourceProperties.get.parameters[1].in: query
paths./v1/getResourceProperties.get.parameters[1].items.type: string
paths./v1/getResourceProperties.get.parameters[1].name: filePaths
paths./v1/getResourceProperties.get.parameters[1].required: true
paths./v1/getResourceProperties.get.parameters[1].type: array
paths./v1/getResourceProperties.get.responses.200.description: No response was specified
paths./v1/getResourceProperties.get.responses.200.schema.$ref: '#/definitions/ResourcePropertiesResponse'
paths./v1/getResourceProperties.get.summary: Get the properties for each of the specified
  files/folders
paths./v1/getResourceProperties.get.tags.length: 1
paths./v1/getResourceProperties.get.tags[0]: v1
paths./v1/getShare.get.description: Requires access token obtained via the authenticateUser
  operation. Available to users with the 'share' permission
paths./v1/getShare.get.operationId: getShare
paths./v1/getShare.get.parameters.length: 2
paths./v1/getShare.get.parameters[0].description: Access token required to make the
  API call
paths./v1/getShare.get.parameters[0].in: query
paths./v1/getShare.get.parameters[0].name: access_token
paths./v1/getShare.get.parameters[0].required: true
paths./v1/getShare.get.parameters[0].type: string
paths./v1/getShare.get.parameters[1].description: ID of the requested Share
paths./v1/getShare.get.parameters[1].format: int32
paths./v1/getShare.get.parameters[1].in: query
paths./v1/getShare.get.parameters[1].name: id
paths./v1/getShare.get.parameters[1].required: true
paths./v1/getShare.get.parameters[1].type: integer
paths./v1/getShare.get.responses.200.description: No response was specified
paths./v1/getShare.get.responses.200.schema.$ref: '#/definitions/ShareResponse'
paths./v1/getShare.get.summary: Returns a share by the specified ID
paths./v1/getShare.get.tags.length: 1
paths./v1/getShare.get.tags[0]: v1
paths./v1/getShareActivity.get.description: Requires access token obtained via the
  authenticateUser operation. Available to users with the 'share' permission
paths./v1/getShareActivity.get.operationId: getShareActivity
paths./v1/getShareActivity.get.parameters.length: 2
paths./v1/getShareActivity.get.parameters[0].description: Access token required to
  make the API call
paths./v1/getShareActivity.get.parameters[0].in: query
paths./v1/getShareActivity.get.parameters[0].name: access_token
paths./v1/getShareActivity.get.parameters[0].required: true
paths./v1/getShareActivity.get.parameters[0].type: string
paths./v1/getShareActivity.get.parameters[1].description: ID of the Share
paths./v1/getShareActivity.get.parameters[1].format: int32
paths./v1/getShareActivity.get.parameters[1].in: query
paths./v1/getShareActivity.get.parameters[1].name: id
paths./v1/getShareActivity.get.parameters[1].required: true
paths./v1/getShareActivity.get.parameters[1].type: integer
paths./v1/getShareActivity.get.responses.200.description: No response was specified
paths./v1/getShareActivity.get.responses.200.schema.$ref: '#/definitions/ShareActivityResponse'
paths./v1/getShareActivity.get.summary: Return activity log entries for the specified
  Share ID
paths./v1/getShareActivity.get.tags.length: 1
paths./v1/getShareActivity.get.tags[0]: v1
paths./v1/getShares.get.description: Requires access token obtained via the authenticateUser
  operation. Available to users with the 'share' permission
paths./v1/getShares.get.operationId: getShares
paths./v1/getShares.get.parameters.length: 8
paths./v1/getShares.get.parameters[0].description: Access token required to make the
  API call
paths./v1/getShares.get.parameters[0].in: query
paths./v1/getShares.get.parameters[0].name: access_token
paths./v1/getShares.get.parameters[0].required: true
paths./v1/getShares.get.parameters[0].type: string
paths./v1/getShares.get.parameters[1].description: 'The type of share to return: ''shared_folder'',
  ''send'', or ''receive''. If no argument specified, will return all Shares types.'
paths./v1/getShares.get.parameters[1].in: query
paths./v1/getShares.get.parameters[1].name: type
paths./v1/getShares.get.parameters[1].required: false
paths./v1/getShares.get.parameters[1].type: string
paths./v1/getShares.get.parameters[2].description: 'Sort by one of the following:
  ''sort_shares_name'', ''sort_shares_date'', ''sort_shares_user'', ''sort_shares_access_mode''.'
paths./v1/getShares.get.parameters[2].in: query
paths./v1/getShares.get.parameters[2].name: sortBy
paths./v1/getShares.get.parameters[2].required: false
paths./v1/getShares.get.parameters[2].type: string
paths./v1/getShares.get.parameters[3].description: Sort by 'asc' or 'desc' order.
paths./v1/getShares.get.parameters[3].in: query
paths./v1/getShares.get.parameters[3].name: sortOrder
paths./v1/getShares.get.parameters[3].required: false
paths./v1/getShares.get.parameters[3].type: string
paths./v1/getShares.get.parameters[4].description: Filter by the provided search terms.
paths./v1/getShares.get.parameters[4].in: query
paths./v1/getShares.get.parameters[4].name: filter
paths./v1/getShares.get.parameters[4].required: false
paths./v1/getShares.get.parameters[4].type: string
paths./v1/getShares.get.parameters[5].description: Filter by all, active-only, or
  current user's only.
paths./v1/getShares.get.parameters[5].in: query
paths./v1/getShares.get.parameters[5].name: include
paths./v1/getShares.get.parameters[5].required: false
paths./v1/getShares.get.parameters[5].type: string
paths./v1/getShares.get.parameters[6].description: Start position of results to return,
  for pagination.
paths./v1/getShares.get.parameters[6].format: int32
paths./v1/getShares.get.parameters[6].in: query
paths./v1/getShares.get.parameters[6].name: offset
paths./v1/getShares.get.parameters[6].required: false
paths./v1/getShares.get.parameters[6].type: integer
paths./v1/getShares.get.parameters[7].description: Maximum number of elements to return
  or 0 if no limit.
paths./v1/getShares.get.parameters[7].format: int32
paths./v1/getShares.get.parameters[7].in: query
paths./v1/getShares.get.parameters[7].name: limit
paths./v1/getShares.get.parameters[7].required: false
paths./v1/getShares.get.parameters[7].type: integer
paths./v1/getShares.get.responses.200.description: No response was specified
paths./v1/getShares.get.responses.200.schema.$ref: '#/definitions/SharesResponse'
paths./v1/getShares.get.summary: Returns all Shares for the current user
paths./v1/getShares.get.tags.length: 1
paths./v1/getShares.get.tags[0]: v1
paths./v1/getUploadFileUrl.get.description: Requires access token obtained via the
  authenticateUser operation. Called before an upload is started to get URL to appropriate
  storage server. Available to users with the 'write' permission.
paths./v1/getUploadFileUrl.get.operationId: getUploadFileUrl
paths./v1/getUploadFileUrl.get.parameters.length: 5
paths./v1/getUploadFileUrl.get.parameters[0].description: Access token required to
  make the API call
paths./v1/getUploadFileUrl.get.parameters[0].in: query
paths./v1/getUploadFileUrl.get.parameters[0].name: access_token
paths./v1/getUploadFileUrl.get.parameters[0].required: true
paths./v1/getUploadFileUrl.get.parameters[0].type: string
paths./v1/getUploadFileUrl.get.parameters[1].description: Size of the file to upload,
  in bytes
paths./v1/getUploadFileUrl.get.parameters[1].format: int64
paths./v1/getUploadFileUrl.get.parameters[1].in: query
paths./v1/getUploadFileUrl.get.parameters[1].name: fileSize
paths./v1/getUploadFileUrl.get.parameters[1].required: true
paths./v1/getUploadFileUrl.get.parameters[1].type: integer
paths./v1/getUploadFileUrl.get.parameters[2].description: Path relative to account's
  home directory, including file name
paths./v1/getUploadFileUrl.get.parameters[2].in: query
paths./v1/getUploadFileUrl.get.parameters[2].name: destinationPath
paths./v1/getUploadFileUrl.get.parameters[2].required: true
paths./v1/getUploadFileUrl.get.parameters[2].type: string
paths./v1/getUploadFileUrl.get.parameters[3].default: true
paths./v1/getUploadFileUrl.get.parameters[3].description: True if the file should
  be overwritten, false if different file names should be generated
paths./v1/getUploadFileUrl.get.parameters[3].in: query
paths./v1/getUploadFileUrl.get.parameters[3].name: allowOverwrite
paths./v1/getUploadFileUrl.get.parameters[3].required: false
paths./v1/getUploadFileUrl.get.parameters[3].type: boolean
paths./v1/getUploadFileUrl.get.parameters[4].default: false
paths./v1/getUploadFileUrl.get.parameters[4].description: True if upload resume is
  supported, false if it isn't
paths./v1/getUploadFileUrl.get.parameters[4].in: query
paths./v1/getUploadFileUrl.get.parameters[4].name: resume
paths./v1/getUploadFileUrl.get.parameters[4].required: false
paths./v1/getUploadFileUrl.get.parameters[4].type: boolean
paths./v1/getUploadFileUrl.get.responses.200.description: No response was specified
paths./v1/getUploadFileUrl.get.responses.200.schema.$ref: '#/definitions/UrlResponse'
paths./v1/getUploadFileUrl.get.summary: Returns a unique URL for handling file uploads
paths./v1/getUploadFileUrl.get.tags.length: 1
paths./v1/getUploadFileUrl.get.tags[0]: v1
paths./v1/getUser.get.description: Requires access token obtained via the authenticateUser
  operation
paths./v1/getUser.get.operationId: getUser
paths./v1/getUser.get.parameters.length: 2
paths./v1/getUser.get.parameters[0].description: Access token required to make the
  API call
paths./v1/getUser.get.parameters[0].in: query
paths./v1/getUser.get.parameters[0].name: access_token
paths./v1/getUser.get.parameters[0].required: true
paths./v1/getUser.get.parameters[0].type: string
paths./v1/getUser.get.parameters[1].description: Name of the subaccount user to get
paths./v1/getUser.get.parameters[1].in: query
paths./v1/getUser.get.parameters[1].name: username
paths./v1/getUser.get.parameters[1].required: true
paths./v1/getUser.get.parameters[1].type: string
paths./v1/getUser.get.responses.200.description: No response was specified
paths./v1/getUser.get.responses.200.schema.$ref: '#/definitions/UserResponse'
paths./v1/getUser.get.summary: Get the specified subaccount user for the current account
paths./v1/getUser.get.tags.length: 1
paths./v1/getUser.get.tags[0]: v1
paths./v1/getUsers.get.description: Requires access token obtained via the authenticateUser
  operation. Available to users with the 'manage users' permission set
paths./v1/getUsers.get.operationId: getUsers
paths./v1/getUsers.get.parameters.length: 3
paths./v1/getUsers.get.parameters[0].description: Access token required to make the
  API call
paths./v1/getUsers.get.parameters[0].in: query
paths./v1/getUsers.get.parameters[0].name: access_token
paths./v1/getUsers.get.parameters[0].required: true
paths./v1/getUsers.get.parameters[0].type: string
paths./v1/getUsers.get.parameters[1].description: sort method ['sort_users_username'
  or 'sort_users_nickname' or 'sort_users_email' or 'sort_users_home_folder']
paths./v1/getUsers.get.parameters[1].in: query
paths./v1/getUsers.get.parameters[1].name: sortBy
paths./v1/getUsers.get.parameters[1].required: true
paths./v1/getUsers.get.parameters[1].type: string
paths./v1/getUsers.get.parameters[2].description: sort order, i.e. 'asc' or 'desc'
paths./v1/getUsers.get.parameters[2].in: query
paths./v1/getUsers.get.parameters[2].name: sortOrder
paths./v1/getUsers.get.parameters[2].required: true
paths./v1/getUsers.get.parameters[2].type: string
paths./v1/getUsers.get.responses.200.description: No response was specified
paths./v1/getUsers.get.responses.200.schema.$ref: '#/definitions/UsersResponse'
paths./v1/getUsers.get.summary: Gets the user object for the currently logged in user
paths./v1/getUsers.get.tags.length: 1
paths./v1/getUsers.get.tags[0]: v1
paths./v1/logoutUser.get.description: Requires access token obtained via the authenticateUser
  operation
paths./v1/logoutUser.get.operationId: logoutUser
paths./v1/logoutUser.get.parameters.length: 1
paths./v1/logoutUser.get.parameters[0].description: Access token required to make
  the API call
paths./v1/logoutUser.get.parameters[0].in: query
paths./v1/logoutUser.get.parameters[0].name: access_token
paths./v1/logoutUser.get.parameters[0].required: true
paths./v1/logoutUser.get.parameters[0].type: string
paths./v1/logoutUser.get.responses.200.description: No response was specified
paths./v1/logoutUser.get.responses.200.schema.$ref: '#/definitions/Response'
paths./v1/logoutUser.get.summary: Removes user's access token from database, logging
  them out of API
paths./v1/logoutUser.get.tags.length: 1
paths./v1/logoutUser.get.tags[0]: v1
paths./v1/moveResources.get.description: Requires access token obtained via the authenticateUser
  operation. Available to users with the 'upload' permission
paths./v1/moveResources.get.operationId: moveResources
paths./v1/moveResources.get.parameters.length: 3
paths./v1/moveResources.get.parameters[0].description: Access token required to make
  the API call
paths./v1/moveResources.get.parameters[0].in: query
paths./v1/moveResources.get.parameters[0].name: access_token
paths./v1/moveResources.get.parameters[0].required: true
paths./v1/moveResources.get.parameters[0].type: string
paths./v1/moveResources.get.parameters[1].description: Remote paths of the files or
  folders to move
paths./v1/moveResources.get.parameters[1].in: query
paths./v1/moveResources.get.parameters[1].items.type: string
paths./v1/moveResources.get.parameters[1].name: filePaths
paths./v1/moveResources.get.parameters[1].required: true
paths./v1/moveResources.get.parameters[1].type: array
paths./v1/moveResources.get.parameters[2].description: Remote destination path to
  move files/folders to
paths./v1/moveResources.get.parameters[2].in: query
paths./v1/moveResources.get.parameters[2].name: destinationPath
paths./v1/moveResources.get.parameters[2].required: true
paths./v1/moveResources.get.parameters[2].type: string
paths./v1/moveResources.get.responses.200.description: No response was specified
paths./v1/moveResources.get.responses.200.schema.$ref: '#/definitions/ModifiedResourcesResponse'
paths./v1/moveResources.get.summary: Moves files, folders to the destination path
paths./v1/moveResources.get.tags.length: 1
paths./v1/moveResources.get.tags[0]: v1
paths./v1/previewFile.get.description: Requires access token obtained via authenticateUser
  operation
paths./v1/previewFile.get.operationId: previewFile
paths./v1/previewFile.get.parameters.length: 6
paths./v1/previewFile.get.parameters[0].description: Access token required to make
  the API call
paths./v1/previewFile.get.parameters[0].in: query
paths./v1/previewFile.get.parameters[0].name: access_token
paths./v1/previewFile.get.parameters[0].required: true
paths./v1/previewFile.get.parameters[0].type: string
paths./v1/previewFile.get.parameters[1].description: Path of the image relative to
  the user's home directory
paths./v1/previewFile.get.parameters[1].in: query
paths./v1/previewFile.get.parameters[1].name: path
paths./v1/previewFile.get.parameters[1].required: true
paths./v1/previewFile.get.parameters[1].type: string
paths./v1/previewFile.get.parameters[2].description: 'The size of the image: small,
  medium, large'
paths./v1/previewFile.get.parameters[2].in: query
paths./v1/previewFile.get.parameters[2].name: size
paths./v1/previewFile.get.parameters[2].required: true
paths./v1/previewFile.get.parameters[2].type: string
paths./v1/previewFile.get.parameters[3].description: Overrides sizes. Sets to a specific
  width
paths./v1/previewFile.get.parameters[3].format: int32
paths./v1/previewFile.get.parameters[3].in: query
paths./v1/previewFile.get.parameters[3].name: width
paths./v1/previewFile.get.parameters[3].type: integer
paths./v1/previewFile.get.parameters[4].description: Overrides sizes. Sets to a specific
  height
paths./v1/previewFile.get.parameters[4].format: int32
paths./v1/previewFile.get.parameters[4].in: query
paths./v1/previewFile.get.parameters[4].name: height
paths./v1/previewFile.get.parameters[4].type: integer
paths./v1/previewFile.get.parameters[5].description: Page number for the document
paths./v1/previewFile.get.parameters[5].format: int32
paths./v1/previewFile.get.parameters[5].in: query
paths./v1/previewFile.get.parameters[5].name: page
paths./v1/previewFile.get.parameters[5].type: integer
paths./v1/previewFile.get.responses.200.description: No response was specified
paths./v1/previewFile.get.responses.200.schema.$ref: '#/definitions/PreviewFileResponse'
paths./v1/previewFile.get.summary: Returns a resized image of the specified document
  for support file types
paths./v1/previewFile.get.tags.length: 1
paths./v1/previewFile.get.tags[0]: v1
paths./v1/renameResource.get.description: Requires access token obtained via the authenticateUser
  operation. Available to users with the 'modify' permission
paths./v1/renameResource.get.operationId: renameResource
paths./v1/renameResource.get.parameters.length: 3
paths./v1/renameResource.get.parameters[0].description: Access token required to make
  the API call
paths./v1/renameResource.get.parameters[0].in: query
paths./v1/renameResource.get.parameters[0].name: access_token
paths./v1/renameResource.get.parameters[0].required: true
paths./v1/renameResource.get.parameters[0].type: string
paths./v1/renameResource.get.parameters[1].description: Remote path of the files or
  folder to rename
paths./v1/renameResource.get.parameters[1].in: query
paths./v1/renameResource.get.parameters[1].name: filePath
paths./v1/renameResource.get.parameters[1].required: true
paths./v1/renameResource.get.parameters[1].type: string
paths./v1/renameResource.get.parameters[2].description: The new name of the file or
  folder
paths./v1/renameResource.get.parameters[2].in: query
paths./v1/renameResource.get.parameters[2].name: newName
paths./v1/renameResource.get.parameters[2].required: true
paths./v1/renameResource.get.parameters[2].type: string
paths./v1/renameResource.get.responses.200.description: No response was specified
paths./v1/renameResource.get.responses.200.schema.$ref: '#/definitions/Response'
paths./v1/renameResource.get.summary: Rename a file or folder at the specified path
paths./v1/renameResource.get.tags.length: 1
paths./v1/renameResource.get.tags[0]: v1
paths./v1/updateNotification.get.description: Requires access token obtained via the
  authenticateUser operation. Available to users with 'notification' permission
paths./v1/updateNotification.get.operationId: updateNotification
paths./v1/updateNotification.get.parameters.length: 7
paths./v1/updateNotification.get.parameters[0].description: Access token required
  to make the API call
paths./v1/updateNotification.get.parameters[0].in: query
paths./v1/updateNotification.get.parameters[0].name: access_token
paths./v1/updateNotification.get.parameters[0].required: true
paths./v1/updateNotification.get.parameters[0].type: string
paths./v1/updateNotification.get.parameters[1].description: The notification ID
paths./v1/updateNotification.get.parameters[1].format: int32
paths./v1/updateNotification.get.parameters[1].in: query
paths./v1/updateNotification.get.parameters[1].name: id
paths./v1/updateNotification.get.parameters[1].required: true
paths./v1/updateNotification.get.parameters[1].type: integer
paths./v1/updateNotification.get.parameters[2].description: Full path of file/folder
  where notification is set.
paths./v1/updateNotification.get.parameters[2].in: query
paths./v1/updateNotification.get.parameters[2].name: path
paths./v1/updateNotification.get.parameters[2].type: string
paths./v1/updateNotification.get.parameters[3].description: 'Type of action to filter
  on: ''upload'', ''download'', ''delete'', ''all'''
paths./v1/updateNotification.get.parameters[3].in: query
paths./v1/updateNotification.get.parameters[3].name: action
paths./v1/updateNotification.get.parameters[3].type: string
paths./v1/updateNotification.get.parameters[4].description: 'User type to filter on:
  ''notice_user_all'', ''notice_user_all_recipients'', ''notice_user_all_users'''
paths./v1/updateNotification.get.parameters[4].in: query
paths./v1/updateNotification.get.parameters[4].name: usernames
paths./v1/updateNotification.get.parameters[4].type: string
paths./v1/updateNotification.get.parameters[5].description: Email addresses to send
  notification to. If not specified, sends to owner by default.
paths./v1/updateNotification.get.parameters[5].in: query
paths./v1/updateNotification.get.parameters[5].items.type: string
paths./v1/updateNotification.get.parameters[5].name: emails
paths./v1/updateNotification.get.parameters[5].type: array
paths./v1/updateNotification.get.parameters[6].description: Set to true if the user
  should be notified by email when the notification is triggered.
paths./v1/updateNotification.get.parameters[6].in: query
paths./v1/updateNotification.get.parameters[6].name: sendEmail
paths./v1/updateNotification.get.parameters[6].type: boolean
paths./v1/updateNotification.get.responses.200.description: No response was specified
paths./v1/updateNotification.get.responses.200.schema.$ref: '#/definitions/Response'
paths./v1/updateNotification.get.summary: Updates an existing notification by ID
paths./v1/updateNotification.get.tags.length: 1
paths./v1/updateNotification.get.tags[0]: v1
paths./v1/updateShare.get.description: Requires access token obtained via the authenticateUser
  operation. Available to users with the 'share' permission
paths./v1/updateShare.get.operationId: updateShare
paths./v1/updateShare.get.parameters.length: 17
paths./v1/updateShare.get.parameters[0].description: Access token required to make
  the API call
paths./v1/updateShare.get.parameters[0].in: query
paths./v1/updateShare.get.parameters[0].name: access_token
paths./v1/updateShare.get.parameters[0].required: true
paths./v1/updateShare.get.parameters[0].type: string
paths./v1/updateShare.get.parameters[1].description: The ID of the Share to update.
paths./v1/updateShare.get.parameters[1].format: int32
paths./v1/updateShare.get.parameters[1].in: query
paths./v1/updateShare.get.parameters[1].name: id
paths./v1/updateShare.get.parameters[1].required: true
paths./v1/updateShare.get.parameters[1].type: integer
paths./v1/updateShare.get.parameters[2].description: Name of the Share.
paths./v1/updateShare.get.parameters[2].in: query
paths./v1/updateShare.get.parameters[2].name: name
paths./v1/updateShare.get.parameters[2].type: string
paths./v1/updateShare.get.parameters[3].description: Array of strings containing the
  file paths to share.
paths./v1/updateShare.get.parameters[3].in: query
paths./v1/updateShare.get.parameters[3].items.type: string
paths./v1/updateShare.get.parameters[3].name: filePaths
paths./v1/updateShare.get.parameters[3].type: array
paths./v1/updateShare.get.parameters[4].description: Share message subject (for email
  invitations).
paths./v1/updateShare.get.parameters[4].in: query
paths./v1/updateShare.get.parameters[4].name: subject
paths./v1/updateShare.get.parameters[4].type: string
paths./v1/updateShare.get.parameters[5].description: Share message contents (for email
  invitations).
paths./v1/updateShare.get.parameters[5].in: query
paths./v1/updateShare.get.parameters[5].name: message
paths./v1/updateShare.get.parameters[5].type: string
paths./v1/updateShare.get.parameters[6].description: Array of strings for email recipients
  (for email invitations).
paths./v1/updateShare.get.parameters[6].in: query
paths./v1/updateShare.get.parameters[6].items.type: string
paths./v1/updateShare.get.parameters[6].name: emails
paths./v1/updateShare.get.parameters[6].type: array
paths./v1/updateShare.get.parameters[7].description: Specifies a CC email recipient.
paths./v1/updateShare.get.parameters[7].in: query
paths./v1/updateShare.get.parameters[7].name: ccEmail
paths./v1/updateShare.get.parameters[7].type: string
paths./v1/updateShare.get.parameters[8].description: Requires a user's email to access.
paths./v1/updateShare.get.parameters[8].in: query
paths./v1/updateShare.get.parameters[8].name: requireEmail
paths./v1/updateShare.get.parameters[8].type: boolean
paths./v1/updateShare.get.parameters[9].description: 'Type of permissions share recipients
  have: upload, download, download_upload, download_upload_modify, download_upload_modify_delete.'
paths./v1/updateShare.get.parameters[9].in: query
paths./v1/updateShare.get.parameters[9].name: accessMode
paths./v1/updateShare.get.parameters[9].type: string
paths./v1/updateShare.get.parameters[10].description: Allows user to embed a widget
  with the share.
paths./v1/updateShare.get.parameters[10].in: query
paths./v1/updateShare.get.parameters[10].name: embed
paths./v1/updateShare.get.parameters[10].type: boolean
paths./v1/updateShare.get.parameters[11].description: True if share has a public URL,
  otherwise defaults to false
paths./v1/updateShare.get.parameters[11].in: query
paths./v1/updateShare.get.parameters[11].name: isPublic
paths./v1/updateShare.get.parameters[11].type: boolean
paths./v1/updateShare.get.parameters[12].description: If not null, value of password
  is required to access this Share
paths./v1/updateShare.get.parameters[12].in: query
paths./v1/updateShare.get.parameters[12].name: password
paths./v1/updateShare.get.parameters[12].type: string
paths./v1/updateShare.get.parameters[13].description: The date the current Share should
  expire, formatted YYYY-mm-dd
paths./v1/updateShare.get.parameters[13].in: query
paths./v1/updateShare.get.parameters[13].name: expiration
paths./v1/updateShare.get.parameters[13].type: string
paths./v1/updateShare.get.parameters[14].description: True if the user should be notified
  about activity on this Share.
paths./v1/updateShare.get.parameters[14].in: query
paths./v1/updateShare.get.parameters[14].name: hasNotification
paths./v1/updateShare.get.parameters[14].type: boolean
paths./v1/updateShare.get.parameters[15].description: An array of recipients who should
  receive notification emails.
paths./v1/updateShare.get.parameters[15].in: query
paths./v1/updateShare.get.parameters[15].items.type: string
paths./v1/updateShare.get.parameters[15].name: notificationEmails
paths./v1/updateShare.get.parameters[15].type: array
paths./v1/updateShare.get.parameters[16].description: If true, all receive folder
  submissions will be uploaded separate folders (only applicable for Receive folder
  types)
paths./v1/updateShare.get.parameters[16].in: query
paths./v1/updateShare.get.parameters[16].name: fileDropCreateFolders
paths./v1/updateShare.get.parameters[16].type: boolean
paths./v1/updateShare.get.responses.200.description: No response was specified
paths./v1/updateShare.get.responses.200.schema.$ref: '#/definitions/Response'
paths./v1/updateShare.get.summary: Update an existing Share by ID
paths./v1/updateShare.get.tags.length: 1
paths./v1/updateShare.get.tags[0]: v1
paths./v1/updateUser.get.description: Requires access token obtained via the authenticateUser
  operation. Available to users with 'manage users' permission
paths./v1/updateUser.get.operationId: updateUser
paths./v1/updateUser.get.parameters.length: 11
paths./v1/updateUser.get.parameters[0].description: Access token required to make
  the API call
paths./v1/updateUser.get.parameters[0].in: query
paths./v1/updateUser.get.parameters[0].name: access_token
paths./v1/updateUser.get.parameters[0].required: true
paths./v1/updateUser.get.parameters[0].type: string
paths./v1/updateUser.get.parameters[1].description: The user ID, must be obtained
  from getUser method first
paths./v1/updateUser.get.parameters[1].format: int32
paths./v1/updateUser.get.parameters[1].in: query
paths./v1/updateUser.get.parameters[1].name: userId
paths./v1/updateUser.get.parameters[1].required: true
paths./v1/updateUser.get.parameters[1].type: integer
paths./v1/updateUser.get.parameters[2].description: Name of the subaccount user to
  modify
paths./v1/updateUser.get.parameters[2].in: query
paths./v1/updateUser.get.parameters[2].name: username
paths./v1/updateUser.get.parameters[2].type: string
paths./v1/updateUser.get.parameters[3].description: The user's nickname
paths./v1/updateUser.get.parameters[3].in: query
paths./v1/updateUser.get.parameters[3].name: nickname
paths./v1/updateUser.get.parameters[3].type: string
paths./v1/updateUser.get.parameters[4].description: 'The date when use should expire
  in format: YYYY-MM-DD'
paths./v1/updateUser.get.parameters[4].in: query
paths./v1/updateUser.get.parameters[4].name: expiration
paths./v1/updateUser.get.parameters[4].type: string
paths./v1/updateUser.get.parameters[5].description: The user's email
paths./v1/updateUser.get.parameters[5].in: query
paths./v1/updateUser.get.parameters[5].name: email
paths./v1/updateUser.get.parameters[5].type: string
paths./v1/updateUser.get.parameters[6].description: The user's home folder
paths./v1/updateUser.get.parameters[6].in: query
paths./v1/updateUser.get.parameters[6].name: destinationFolder
paths./v1/updateUser.get.parameters[6].type: string
paths./v1/updateUser.get.parameters[7].description: The user's password
paths./v1/updateUser.get.parameters[7].in: query
paths./v1/updateUser.get.parameters[7].name: password
paths./v1/updateUser.get.parameters[7].type: string
paths./v1/updateUser.get.parameters[8].description: If true, the user's account is
  locked by default
paths./v1/updateUser.get.parameters[8].in: query
paths./v1/updateUser.get.parameters[8].name: locked
paths./v1/updateUser.get.parameters[8].type: boolean
paths./v1/updateUser.get.parameters[9].description: 'The user''s role, i.e: ''user'',
  ''admin'', ''master'''
paths./v1/updateUser.get.parameters[9].in: query
paths./v1/updateUser.get.parameters[9].name: role
paths./v1/updateUser.get.parameters[9].type: string
paths./v1/updateUser.get.parameters[10].description: A CSV string of user permissions.
paths./v1/updateUser.get.parameters[10].in: query
paths./v1/updateUser.get.parameters[10].name: permissions
paths./v1/updateUser.get.parameters[10].type: string
paths./v1/updateUser.get.responses.200.description: No response was specified
paths./v1/updateUser.get.responses.200.schema.$ref: '#/definitions/Response'
paths./v1/updateUser.get.summary: Updates a subaccount user for the current account
paths./v1/updateUser.get.tags.length: 1
paths./v1/updateUser.get.tags[0]: v1
paths./v1/userAvailable.get.description: Requires access token obtained via the authenticateUser
  operation. Available to users with the 'manage users' permission
paths./v1/userAvailable.get.operationId: userAvailable
paths./v1/userAvailable.get.parameters.length: 2
paths./v1/userAvailable.get.parameters[0].description: Access token required to make
  the API call
paths./v1/userAvailable.get.parameters[0].in: query
paths./v1/userAvailable.get.parameters[0].name: access_token
paths./v1/userAvailable.get.parameters[0].required: true
paths./v1/userAvailable.get.parameters[0].type: string
paths./v1/userAvailable.get.parameters[1].description: Username to check
paths./v1/userAvailable.get.parameters[1].in: query
paths./v1/userAvailable.get.parameters[1].name: username
paths./v1/userAvailable.get.parameters[1].required: true
paths./v1/userAvailable.get.parameters[1].type: string
paths./v1/userAvailable.get.responses.200.description: No response was specified
paths./v1/userAvailable.get.responses.200.schema.$ref: '#/definitions/AvailableUserResponse'
paths./v1/userAvailable.get.summary: Returns true if requested username has not already
  been taken in the system
paths./v1/userAvailable.get.tags.length: 1
paths./v1/userAvailable.get.tags[0]: v1
schemes.length: 1
schemes[0]: https
swagger: "2.0"
tags.length: 1
tags[0].description: operations for files, notifications, sharing and users
tags[0].name: v1
